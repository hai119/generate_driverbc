; ModuleID = '../bcout/drivers/staging/comedi/drivers/ni_pcimio.llvm.bc'
source_filename = "drivers/staging/comedi/drivers/ni_pcimio.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_ni_pcimio_driver_init6:\09\09\09"
module asm ".long\09ni_pcimio_driver_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.comedi_driver = type { %struct.comedi_driver*, i8*, %struct.module*, i32 (%struct.comedi_device*, %struct.comedi_devconfig*)*, void (%struct.comedi_device*)*, i32 (%struct.comedi_device*, i64)*, i32, i8**, i32 }
%struct.module = type opaque
%struct.comedi_device = type { i32, %struct.comedi_driver*, %struct.comedi_8254*, i8*, %struct.device*, i32, i32, %struct.device*, i8*, i8*, i8, %struct.spinlock, %struct.mutex, %struct.rw_semaphore, %struct.kref, i32, %struct.comedi_subdevice*, i8*, i64, i64, i32, %struct.comedi_subdevice*, %struct.comedi_subdevice*, %struct.fasync_struct*, i32 (%struct.comedi_device*)*, void (%struct.comedi_device*)*, i32 (%struct.comedi_device*, %struct.comedi_insn*, i32*)*, i32 (%struct.comedi_device*, i32, i32*)* }
%struct.comedi_8254 = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.64, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.64 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.62, %struct.list_head, %struct.list_head, %union.anon.63 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.60 }
%union.anon.60 = type { %struct.anon.61 }
%struct.anon.61 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.1, %union.anon.52, %struct.atomic_t, [8 x i8] }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.52 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.53, i32 }
%union.anon.53 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.45, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.15, [0 x i64] }
%struct.anon.15 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.16, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.16 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.22, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.23, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.24, %union.anon.28, %struct.key_restriction* }
%union.anon.22 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.23 = type { i64 }
%union.anon.24 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.25, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.25 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.28 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.31, %union.anon.32, i32 }
%struct.request_queue = type opaque
%union.anon.31 = type { %struct.list_head }
%union.anon.32 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.33 }
%struct.anon.33 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.37 }
%struct.anon.37 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.44, i32, [12 x i8] }
%union.anon.44 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.45 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.46, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.49 }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { i64, i64 }
%union.anon.49 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.62 = type { %struct.list_head }
%union.anon.63 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.54, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.55, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.56, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.59, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.54 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.55 = type { %struct.callback_head }
%union.anon.56 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.59 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.57 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.57 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.30 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.30 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.spinlock = type { %union.anon.3 }
%union.anon.3 = type { %struct.raw_spinlock }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.kref = type { %struct.refcount_struct }
%struct.comedi_subdevice = type { %struct.comedi_device*, i32, i32, i32, i32, i32, i8*, %struct.comedi_async*, i8*, i8*, i32, %struct.spinlock, i32, i32, i32*, %struct.comedi_lrange*, %struct.comedi_lrange**, i32*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_cmd*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)*, void (%struct.comedi_device*, %struct.comedi_subdevice*, i8*, i32, i32)*, i32, i32, %struct.device*, i32, i32* }
%struct.comedi_async = type { i8*, i32, %struct.comedi_buf_map*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.comedi_cmd, %struct.wait_queue_head, i32, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)* }
%struct.comedi_buf_map = type { %struct.device*, %struct.comedi_buf_page*, i32, i32, %struct.kref }
%struct.comedi_buf_page = type { i8*, i64 }
%struct.comedi_cmd = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, i32, i16*, i32 }
%struct.comedi_lrange = type { i32, [0 x %struct.comedi_krange] }
%struct.comedi_krange = type { i32, i32, i32 }
%struct.comedi_insn = type { i32, i32, i32*, i32, i32, [3 x i32] }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.comedi_devconfig = type { [20 x i8], [32 x i32] }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.65, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.65 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.ni_board_struct = type { i8*, i8*, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, %struct.comedi_lrange*, i32, i32, i8, i32, [3 x i32] }
%struct.mio_regmap = type { i32, i32 }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.caldac_struct = type { i32, i32, i32 (i32, i32, i32*)* }
%struct.ni_private = type { i16, i16, i32, i32, i32, %struct.spinlock, %struct.spinlock, %struct.spinlock, i32, i32, [34 x i32], [34 x i16], i16, [8 x i16], i16, i16, i16, i16, i16, %struct.ni_gpct_device*, i16, [512 x i32], i64, i8, i16, i16, i16, i16, i16, i16, i16, i16, [6 x i16], i16, i16, i16, i32, i32, i16, i16, [8192 x i16], [1024 x i8], %struct.mite*, %struct.mite_channel*, %struct.mite_channel*, %struct.mite_channel*, %struct.mite_ring*, %struct.mite_ring*, %struct.mite_ring*, [2 x %struct.mite_ring*], i16, %struct.ni_route_tables, [4 x i8], i16, i8 }
%struct.ni_gpct_device = type { %struct.comedi_device*, void (%struct.ni_gpct*, i32, i32)*, i32 (%struct.ni_gpct*, i32)*, i32, %struct.ni_gpct*, i32, i32, [70 x i32]*, %struct.spinlock, %struct.ni_route_tables* }
%struct.ni_gpct = type { %struct.ni_gpct_device*, i32, i32, i64, %struct.mite_channel*, %struct.spinlock }
%struct.mite = type { %struct.pci_dev*, i8*, [8 x %struct.mite_channel], i32, i32, %struct.spinlock }
%struct.mite_channel = type { %struct.mite*, i32, i32, i32, %struct.mite_ring* }
%struct.mite_ring = type { %struct.device*, i32, %struct.mite_dma_desc*, i64 }
%struct.mite_dma_desc = type { i32, i32, i32, i32 }
%struct.ni_route_tables = type { %struct.ni_device_routes*, i8* }
%struct.ni_device_routes = type { i8*, i32, %struct.ni_route_set* }
%struct.ni_route_set = type { i32, i32, i32* }

@__UNIQUE_ID___addressable_ni_pcimio_driver_init235 = internal global i8* bitcast (i32 ()* @ni_pcimio_driver_init to i8*), section ".discard.addressable", align 8, !dbg !0
@ni_pcimio_driver = internal global %struct.comedi_driver { %struct.comedi_driver* null, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0), %struct.module* null, i32 (%struct.comedi_device*, %struct.comedi_devconfig*)* null, void (%struct.comedi_device*)* @pcimio_detach, i32 (%struct.comedi_device*, i64)* @pcimio_auto_attach, i32 0, i8** null, i32 0 }, align 8, !dbg !3338
@ni_pcimio_pci_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([66 x %struct.pci_device_id], [66 x %struct.pci_device_id]* @ni_pcimio_pci_table, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @ni_pcimio_pci_probe, void (%struct.pci_dev*)* @comedi_pci_auto_unconfig, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.attribute_group** null, %struct.device_driver zeroinitializer, %struct.pci_dynids zeroinitializer }, align 8, !dbg !4429
@__exitcall_ni_pcimio_driver_exit = internal global void ()* @ni_pcimio_driver_exit, section ".exitcall.exit", align 8, !dbg !3313
@__UNIQUE_ID_author236 = internal constant [47 x i8] c"ni_pcimio.author=Comedi https://www.comedi.org\00", section ".modinfo", align 1, !dbg !3318
@__UNIQUE_ID_description237 = internal constant [46 x i8] c"ni_pcimio.description=Comedi low-level driver\00", section ".modinfo", align 1, !dbg !3323
@__UNIQUE_ID_file238 = internal constant [56 x i8] c"ni_pcimio.file=drivers/staging/comedi/drivers/ni_pcimio\00", section ".modinfo", align 1, !dbg !3328
@__UNIQUE_ID_license239 = internal constant [22 x i8] c"ni_pcimio.license=GPL\00", section ".modinfo", align 1, !dbg !3333
@.str = private unnamed_addr constant [10 x i8] c"ni_pcimio\00", align 1
@ni_boards = internal constant [65 x %struct.ni_board_struct] [%struct.ni_board_struct { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 65535, i32 2048, i8 1, i32 1, i32 50000, i32 2, i32 4095, i32 0, %struct.comedi_lrange* @range_bipolar10, i32 50000, i32 0, i8 0, i32 0, [3 x i32] [i32 2, i32 3, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 65535, i32 512, i8 1, i32 2, i32 10000, i32 2, i32 65535, i32 2048, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @range_ni_E_ao_ext to %struct.comedi_lrange*), i32 10000, i32 0, i8 0, i32 0, [3 x i32] [i32 2, i32 3, i32 4] }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 65535, i32 512, i8 1, i32 3, i32 5000, i32 2, i32 65535, i32 0, %struct.comedi_lrange* @range_bipolar10, i32 100000, i32 0, i8 0, i32 0, [3 x i32] [i32 7, i32 0, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 65535, i32 512, i8 1, i32 2, i32 10000, i32 2, i32 65535, i32 2048, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @range_ni_E_ao_ext to %struct.comedi_lrange*), i32 10000, i32 0, i8 0, i32 0, [3 x i32] [i32 2, i32 3, i32 4] }, %struct.ni_board_struct { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 4095, i32 512, i8 0, i32 0, i32 800, i32 2, i32 4095, i32 2048, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @range_ni_E_ao_ext to %struct.comedi_lrange*), i32 1000, i32 0, i8 0, i32 0, [3 x i32] [i32 1, i32 0, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 4095, i32 512, i8 0, i32 0, i32 2000, i32 2, i32 4095, i32 512, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @range_ni_E_ao_ext to %struct.comedi_lrange*), i32 1000, i32 0, i8 0, i32 0, [3 x i32] [i32 7, i32 0, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 4095, i32 512, i8 0, i32 0, i32 2000, i32 2, i32 4095, i32 512, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @range_ni_E_ao_ext to %struct.comedi_lrange*), i32 1000, i32 0, i8 0, i32 0, [3 x i32] [i32 1, i32 0, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i32 0, i32 0), i8* null, i32 0, i32 0, i32 64, i32 65535, i32 512, i8 1, i32 2, i32 10000, i32 2, i32 65535, i32 2048, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @range_ni_E_ao_ext to %struct.comedi_lrange*), i32 10000, i32 0, i8 0, i32 0, [3 x i32] [i32 2, i32 3, i32 4] }, %struct.ni_board_struct { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 65535, i32 512, i8 1, i32 2, i32 10000, i32 0, i32 0, i32 0, %struct.comedi_lrange* null, i32 0, i32 0, i8 0, i32 0, [3 x i32] [i32 2, i32 3, i32 4] }, %struct.ni_board_struct { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i32 0, i32 0), i8* null, i32 0, i32 0, i32 64, i32 65535, i32 512, i8 1, i32 2, i32 10000, i32 0, i32 0, i32 0, %struct.comedi_lrange* null, i32 0, i32 0, i8 0, i32 0, [3 x i32] [i32 2, i32 3, i32 4] }, %struct.ni_board_struct { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i32 0, i32 0), i8* null, i32 0, i32 0, i32 64, i32 4095, i32 512, i8 1, i32 0, i32 800, i32 2, i32 4095, i32 2048, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @range_ni_E_ao_ext to %struct.comedi_lrange*), i32 1000, i32 0, i8 0, i32 0, [3 x i32] [i32 7, i32 0, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 4095, i32 512, i8 0, i32 3, i32 5000, i32 0, i32 0, i32 0, %struct.comedi_lrange* null, i32 0, i32 0, i8 0, i32 0, [3 x i32] [i32 7, i32 0, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 4095, i32 512, i8 0, i32 3, i32 5000, i32 2, i32 4095, i32 0, %struct.comedi_lrange* @range_bipolar10, i32 100000, i32 0, i8 0, i32 0, [3 x i32] [i32 7, i32 0, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 4095, i32 512, i8 0, i32 3, i32 5000, i32 2, i32 4095, i32 0, %struct.comedi_lrange* @range_bipolar10, i32 100000, i32 0, i8 1, i32 0, [3 x i32] [i32 7, i32 0, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 4095, i32 512, i8 0, i32 3, i32 5000, i32 2, i32 4095, i32 0, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @range_ni_E_ao_ext to %struct.comedi_lrange*), i32 100000, i32 0, i8 1, i32 0, [3 x i32] [i32 7, i32 0, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 65535, i32 512, i8 1, i32 3, i32 5000, i32 0, i32 0, i32 0, %struct.comedi_lrange* null, i32 0, i32 0, i8 0, i32 0, [3 x i32] [i32 7, i32 0, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 65535, i32 512, i8 1, i32 3, i32 5000, i32 2, i32 4095, i32 0, %struct.comedi_lrange* @range_bipolar10, i32 100000, i32 0, i8 0, i32 0, [3 x i32] [i32 7, i32 0, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 65535, i32 512, i8 1, i32 0, i32 3000, i32 2, i32 65535, i32 2048, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @range_ni_E_ao_ext to %struct.comedi_lrange*), i32 3000, i32 0, i8 0, i32 0, [3 x i32] [i32 7, i32 7, i32 4] }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i32 0, i32 0), i8* null, i32 0, i32 0, i32 4, i32 4095, i32 8192, i8 0, i32 4, i32 200, i32 2, i32 65535, i32 2048, %struct.comedi_lrange* @range_bipolar10, i32 250, i32 1, i8 0, i32 0, [3 x i32] [i32 5, i32 5, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i32 0, i32 0), i8* null, i32 0, i32 0, i32 2, i32 4095, i32 8192, i8 0, i32 4, i32 200, i32 2, i32 65535, i32 2048, %struct.comedi_lrange* @range_bipolar10, i32 250, i32 1, i8 0, i32 0, [3 x i32] [i32 5, i32 5, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i32 0, i32 0), i8* null, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0, i32 0, i32 4, i32 4095, i32 16384, %struct.comedi_lrange* @range_bipolar10, i32 1000, i32 2, i8 0, i32 0, [3 x i32] [i32 7, i32 0, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i32 0, i32 0), i8* null, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0, i32 0, i32 4, i32 4095, i32 16384, %struct.comedi_lrange* @range_bipolar10, i32 1000, i32 2, i8 0, i32 0, [3 x i32] [i32 7, i32 0, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i32 0, i32 0), i8* null, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0, i32 0, i32 8, i32 4095, i32 16384, %struct.comedi_lrange* @range_bipolar10, i32 1000, i32 4, i8 0, i32 0, [3 x i32] [i32 7, i32 7, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i32 0, i32 0), i8* null, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0, i32 0, i32 8, i32 4095, i32 16384, %struct.comedi_lrange* @range_bipolar10, i32 1000, i32 4, i8 0, i32 0, [3 x i32] [i32 7, i32 7, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i32 0, i32 0), i8* null, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0, i32 0, i32 4, i32 65535, i32 8192, %struct.comedi_lrange* @range_bipolar10, i32 1000, i32 2, i8 0, i32 0, [3 x i32] [i32 7, i32 0, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i32 0, i32 0), i8* null, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0, i32 0, i32 8, i32 65535, i32 16384, %struct.comedi_lrange* @range_bipolar10, i32 1000, i32 4, i8 0, i32 0, [3 x i32] [i32 7, i32 7, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i32 0, i32 0), i8* null, i32 0, i32 0, i32 0, i32 0, i32 0, i8 0, i32 0, i32 0, i32 8, i32 65535, i32 16384, %struct.comedi_lrange* @range_bipolar10, i32 1000, i32 4, i8 0, i32 0, [3 x i32] [i32 7, i32 7, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0), i8* null, i32 0, i32 0, i32 64, i32 4095, i32 512, i8 1, i32 0, i32 800, i32 2, i32 4095, i32 2048, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @range_ni_E_ao_ext to %struct.comedi_lrange*), i32 1000, i32 0, i8 0, i32 0, [3 x i32] [i32 7, i32 0, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 4095, i32 512, i8 1, i32 0, i32 800, i32 2, i32 4095, i32 2048, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @range_ni_E_ao_ext to %struct.comedi_lrange*), i32 1000, i32 0, i8 0, i32 0, [3 x i32] [i32 7, i32 0, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 65535, i32 512, i8 1, i32 0, i32 3000, i32 2, i32 65535, i32 2048, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @range_ni_E_ao_ext to %struct.comedi_lrange*), i32 3000, i32 0, i8 0, i32 0, [3 x i32] [i32 1, i32 1, i32 4] }, %struct.ni_board_struct { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i32 0, i32 0), i8* null, i32 0, i32 0, i32 64, i32 65535, i32 512, i8 1, i32 2, i32 10000, i32 2, i32 65535, i32 2048, %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @range_ni_E_ao_ext to %struct.comedi_lrange*), i32 10000, i32 0, i8 0, i32 0, [3 x i32] [i32 2, i32 3, i32 4] }, %struct.ni_board_struct { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 65535, i32 512, i8 1, i32 3, i32 5000, i32 2, i32 65535, i32 0, %struct.comedi_lrange* @range_bipolar10, i32 100000, i32 0, i8 0, i32 0, [3 x i32] [i32 7, i32 0, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 65535, i32 512, i8 0, i32 5, i32 4000, i32 0, i32 0, i32 0, %struct.comedi_lrange* null, i32 0, i32 8, i8 0, i32 0, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 65535, i32 512, i8 0, i32 5, i32 4000, i32 0, i32 0, i32 0, %struct.comedi_lrange* null, i32 0, i32 8, i8 0, i32 1000, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 65535, i32 4095, i8 0, i32 5, i32 4000, i32 2, i32 65535, i32 8191, %struct.comedi_lrange* @range_bipolar10, i32 1200, i32 8, i8 0, i32 1000, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 65535, i32 4095, i8 0, i32 5, i32 4000, i32 2, i32 65535, i32 8191, %struct.comedi_lrange* @range_bipolar10, i32 1200, i32 8, i8 0, i32 0, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 65535, i32 4095, i8 0, i32 5, i32 4000, i32 2, i32 65535, i32 8191, %struct.comedi_lrange* @range_bipolar10, i32 1200, i32 8, i8 0, i32 1000, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), i8* null, i32 0, i32 0, i32 32, i32 65535, i32 4095, i8 0, i32 5, i32 4000, i32 0, i32 0, i32 0, %struct.comedi_lrange* null, i32 0, i32 8, i8 2, i32 1000, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i32 0, i32 0), i8* null, i32 0, i32 0, i32 32, i32 65535, i32 4095, i8 0, i32 5, i32 4000, i32 0, i32 0, i32 0, %struct.comedi_lrange* null, i32 0, i32 8, i8 2, i32 1000, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0), i8* null, i32 0, i32 0, i32 80, i32 65535, i32 4095, i8 0, i32 5, i32 4000, i32 2, i32 65535, i32 8191, %struct.comedi_lrange* @range_bipolar10, i32 1200, i32 8, i8 2, i32 1000, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i32 0, i32 0), i8* null, i32 0, i32 0, i32 80, i32 65535, i32 4095, i8 0, i32 5, i32 4000, i32 2, i32 65535, i32 8191, %struct.comedi_lrange* @range_bipolar10, i32 1200, i32 8, i8 2, i32 1000, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i32 0, i32 0), i8* null, i32 0, i32 0, i32 32, i32 65535, i32 4095, i8 0, i32 5, i32 4000, i32 4, i32 65535, i32 8191, %struct.comedi_lrange* @range_bipolar10, i32 1200, i32 8, i8 2, i32 0, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i32 0, i32 0), i8* null, i32 0, i32 0, i32 32, i32 65535, i32 4095, i8 0, i32 5, i32 4000, i32 4, i32 65535, i32 8191, %struct.comedi_lrange* @range_bipolar10, i32 1200, i32 8, i8 2, i32 1000, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 65535, i32 4095, i8 0, i32 6, i32 800, i32 0, i32 0, i32 0, %struct.comedi_lrange* null, i32 0, i32 16, i8 0, i32 0, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 65535, i32 4095, i8 0, i32 6, i32 800, i32 0, i32 0, i32 0, %struct.comedi_lrange* null, i32 0, i32 16, i8 0, i32 100, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.46, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 65535, i32 4095, i8 0, i32 6, i32 800, i32 2, i32 65535, i32 8191, %struct.comedi_lrange* bitcast ({ i32, [3 x %struct.comedi_krange] }* @range_ni_M_625x_ao to %struct.comedi_lrange*), i32 350, i32 16, i8 0, i32 100, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.47, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 65535, i32 4095, i8 0, i32 6, i32 800, i32 2, i32 65535, i32 8191, %struct.comedi_lrange* bitcast ({ i32, [3 x %struct.comedi_krange] }* @range_ni_M_625x_ao to %struct.comedi_lrange*), i32 350, i32 16, i8 0, i32 100, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.46, i32 0, i32 0), i32 0, i32 0, i32 16, i32 65535, i32 4095, i8 0, i32 6, i32 800, i32 2, i32 65535, i32 8191, %struct.comedi_lrange* bitcast ({ i32, [3 x %struct.comedi_krange] }* @range_ni_M_625x_ao to %struct.comedi_lrange*), i32 350, i32 16, i8 0, i32 100, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.49, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 65535, i32 4095, i8 0, i32 6, i32 800, i32 2, i32 65535, i32 8191, %struct.comedi_lrange* bitcast ({ i32, [3 x %struct.comedi_krange] }* @range_ni_M_625x_ao to %struct.comedi_lrange*), i32 350, i32 16, i8 0, i32 100, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i32 0, i32 0), i8* null, i32 0, i32 0, i32 32, i32 65535, i32 4095, i8 0, i32 6, i32 800, i32 0, i32 0, i32 0, %struct.comedi_lrange* null, i32 0, i32 16, i8 2, i32 0, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51, i32 0, i32 0), i8* null, i32 0, i32 0, i32 32, i32 65535, i32 4095, i8 0, i32 6, i32 800, i32 0, i32 0, i32 0, %struct.comedi_lrange* null, i32 0, i32 16, i8 2, i32 100, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i32 0), i8* null, i32 0, i32 0, i32 32, i32 65535, i32 4095, i8 0, i32 6, i32 800, i32 4, i32 65535, i32 8191, %struct.comedi_lrange* bitcast ({ i32, [3 x %struct.comedi_krange] }* @range_ni_M_625x_ao to %struct.comedi_lrange*), i32 350, i32 16, i8 2, i32 0, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i32 0, i32 0), i8* null, i32 0, i32 0, i32 32, i32 65535, i32 4095, i8 0, i32 6, i32 800, i32 4, i32 65535, i32 8191, %struct.comedi_lrange* bitcast ({ i32, [3 x %struct.comedi_krange] }* @range_ni_M_625x_ao to %struct.comedi_lrange*), i32 350, i32 16, i8 2, i32 100, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i32 0, i32 0), i32 0, i32 0, i32 32, i32 65535, i32 4095, i8 0, i32 6, i32 800, i32 4, i32 65535, i32 8191, %struct.comedi_lrange* bitcast ({ i32, [3 x %struct.comedi_krange] }* @range_ni_M_625x_ao to %struct.comedi_lrange*), i32 350, i32 16, i8 2, i32 0, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.55, i32 0, i32 0), i8* null, i32 0, i32 0, i32 32, i32 65535, i32 4095, i8 0, i32 6, i32 800, i32 4, i32 65535, i32 8191, %struct.comedi_lrange* bitcast ({ i32, [3 x %struct.comedi_krange] }* @range_ni_M_625x_ao to %struct.comedi_lrange*), i32 350, i32 16, i8 2, i32 100, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 262143, i32 2047, i8 0, i32 6, i32 1600, i32 0, i32 0, i32 8191, %struct.comedi_lrange* null, i32 0, i32 24, i8 0, i32 0, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 262143, i32 2047, i8 0, i32 6, i32 1600, i32 0, i32 0, i32 8191, %struct.comedi_lrange* null, i32 0, i32 24, i8 0, i32 100, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 262143, i32 2047, i8 0, i32 6, i32 1600, i32 2, i32 65535, i32 8191, %struct.comedi_lrange* bitcast ({ i32, [9 x %struct.comedi_krange] }* @range_ni_M_628x_ao to %struct.comedi_lrange*), i32 350, i32 24, i8 0, i32 100, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.59, i32 0, i32 0), i8* null, i32 0, i32 0, i32 16, i32 262143, i32 2047, i8 0, i32 6, i32 1600, i32 2, i32 65535, i32 8191, %struct.comedi_lrange* bitcast ({ i32, [9 x %struct.comedi_krange] }* @range_ni_M_628x_ao to %struct.comedi_lrange*), i32 350, i32 24, i8 0, i32 100, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.60, i32 0, i32 0), i8* null, i32 0, i32 0, i32 32, i32 262143, i32 2047, i8 0, i32 6, i32 1600, i32 0, i32 0, i32 0, %struct.comedi_lrange* null, i32 0, i32 24, i8 2, i32 0, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.61, i32 0, i32 0), i8* null, i32 0, i32 0, i32 32, i32 262143, i32 2047, i8 0, i32 6, i32 1600, i32 0, i32 0, i32 0, %struct.comedi_lrange* null, i32 0, i32 24, i8 2, i32 100, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.62, i32 0, i32 0), i8* null, i32 0, i32 0, i32 32, i32 262143, i32 2047, i8 0, i32 6, i32 1600, i32 4, i32 65535, i32 8191, %struct.comedi_lrange* bitcast ({ i32, [9 x %struct.comedi_krange] }* @range_ni_M_628x_ao to %struct.comedi_lrange*), i32 350, i32 24, i8 2, i32 0, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i32 0, i32 0), i8* null, i32 0, i32 0, i32 32, i32 262143, i32 2047, i8 0, i32 6, i32 1600, i32 4, i32 65535, i32 8191, %struct.comedi_lrange* bitcast ({ i32, [9 x %struct.comedi_krange] }* @range_ni_M_628x_ao to %struct.comedi_lrange*), i32 350, i32 24, i8 2, i32 100, [3 x i32] zeroinitializer }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.64, i32 0, i32 0), i8* null, i32 0, i32 0, i32 8, i32 65535, i32 1024, i8 0, i32 7, i32 4000, i32 0, i32 0, i32 0, %struct.comedi_lrange* null, i32 0, i32 32, i8 0, i32 0, [3 x i32] [i32 7, i32 7, i32 0] }, %struct.ni_board_struct { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i32 0, i32 0), i8* null, i32 0, i32 0, i32 8, i32 65535, i32 1024, i8 0, i32 7, i32 4000, i32 0, i32 0, i32 0, %struct.comedi_lrange* null, i32 0, i32 32, i8 0, i32 0, [3 x i32] [i32 7, i32 7, i32 0] }], align 16, !dbg !4292
@.str.1 = private unnamed_addr constant [16 x i8] c"pci-mio-16xe-50\00", align 1
@range_bipolar10 = external dso_local constant %struct.comedi_lrange, align 4
@.str.2 = private unnamed_addr constant [16 x i8] c"pci-mio-16xe-10\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"pci-6014\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"pxi-6030e\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"pci-mio-16e-1\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"pci-mio-16e-4\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"pxi-6040e\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"pci-6031e\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"pci-6032e\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"pci-6033e\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"pci-6071e\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"pci-6023e\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"pci-6024e\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"pci-6025e\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"pxi-6025e\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"pci-6034e\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"pci-6035e\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"pci-6052e\00", align 1
@.str.19 = private unnamed_addr constant [9 x i8] c"pci-6110\00", align 1
@.str.20 = private unnamed_addr constant [9 x i8] c"pci-6111\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"pci-6711\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"pxi-6711\00", align 1
@.str.23 = private unnamed_addr constant [9 x i8] c"pci-6713\00", align 1
@.str.24 = private unnamed_addr constant [9 x i8] c"pxi-6713\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"pci-6731\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c"pci-6733\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"pxi-6733\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"pxi-6071e\00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c"pxi-6070e\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"pxi-6052e\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"pxi-6031e\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"pci-6036e\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"pci-6220\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"pxi-6220\00", align 1
@.str.35 = private unnamed_addr constant [9 x i8] c"pci-6221\00", align 1
@.str.36 = private unnamed_addr constant [15 x i8] c"pci-6221_37pin\00", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c"pxi-6221\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"pci-6224\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"pxi-6224\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"pci-6225\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"pxi-6225\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"pci-6229\00", align 1
@.str.43 = private unnamed_addr constant [9 x i8] c"pxi-6229\00", align 1
@.str.44 = private unnamed_addr constant [9 x i8] c"pci-6250\00", align 1
@.str.45 = private unnamed_addr constant [9 x i8] c"pxi-6250\00", align 1
@.str.46 = private unnamed_addr constant [9 x i8] c"pci-6251\00", align 1
@.str.47 = private unnamed_addr constant [9 x i8] c"pxi-6251\00", align 1
@.str.48 = private unnamed_addr constant [10 x i8] c"pcie-6251\00", align 1
@.str.49 = private unnamed_addr constant [10 x i8] c"pxie-6251\00", align 1
@.str.50 = private unnamed_addr constant [9 x i8] c"pci-6254\00", align 1
@.str.51 = private unnamed_addr constant [9 x i8] c"pxi-6254\00", align 1
@.str.52 = private unnamed_addr constant [9 x i8] c"pci-6259\00", align 1
@.str.53 = private unnamed_addr constant [9 x i8] c"pxi-6259\00", align 1
@.str.54 = private unnamed_addr constant [10 x i8] c"pcie-6259\00", align 1
@.str.55 = private unnamed_addr constant [10 x i8] c"pxie-6259\00", align 1
@.str.56 = private unnamed_addr constant [9 x i8] c"pci-6280\00", align 1
@.str.57 = private unnamed_addr constant [9 x i8] c"pxi-6280\00", align 1
@.str.58 = private unnamed_addr constant [9 x i8] c"pci-6281\00", align 1
@.str.59 = private unnamed_addr constant [9 x i8] c"pxi-6281\00", align 1
@.str.60 = private unnamed_addr constant [9 x i8] c"pci-6284\00", align 1
@.str.61 = private unnamed_addr constant [9 x i8] c"pxi-6284\00", align 1
@.str.62 = private unnamed_addr constant [9 x i8] c"pci-6289\00", align 1
@.str.63 = private unnamed_addr constant [9 x i8] c"pxi-6289\00", align 1
@.str.64 = private unnamed_addr constant [9 x i8] c"pci-6143\00", align 1
@.str.65 = private unnamed_addr constant [9 x i8] c"pxi-6143\00", align 1
@range_ni_E_ao_ext = internal constant { i32, [4 x %struct.comedi_krange] } { i32 4, [4 x %struct.comedi_krange] [%struct.comedi_krange { i32 -10000000, i32 10000000, i32 0 }, %struct.comedi_krange { i32 0, i32 10000000, i32 0 }, %struct.comedi_krange { i32 -1000000, i32 1000000, i32 256 }, %struct.comedi_krange { i32 0, i32 1000000, i32 256 }] }, align 4, !dbg !4321
@range_ni_M_625x_ao = internal constant { i32, [3 x %struct.comedi_krange] } { i32 3, [3 x %struct.comedi_krange] [%struct.comedi_krange { i32 -10000000, i32 10000000, i32 0 }, %struct.comedi_krange { i32 -5000000, i32 5000000, i32 0 }, %struct.comedi_krange { i32 -1000000, i32 1000000, i32 256 }] }, align 4, !dbg !4323
@range_ni_M_628x_ao = internal constant { i32, [9 x %struct.comedi_krange] } { i32 8, [9 x %struct.comedi_krange] [%struct.comedi_krange { i32 -10000000, i32 10000000, i32 0 }, %struct.comedi_krange { i32 -5000000, i32 5000000, i32 0 }, %struct.comedi_krange { i32 -2000000, i32 2000000, i32 0 }, %struct.comedi_krange { i32 -1000000, i32 1000000, i32 0 }, %struct.comedi_krange { i32 -5000000, i32 15000000, i32 0 }, %struct.comedi_krange { i32 0, i32 10000000, i32 0 }, %struct.comedi_krange { i32 3000000, i32 7000000, i32 0 }, %struct.comedi_krange { i32 4000000, i32 6000000, i32 0 }, %struct.comedi_krange { i32 -1000000, i32 1000000, i32 256 }] }, align 4, !dbg !4325
@m_series_init_eeprom_buffer.start_cal_eeprom = internal constant i32 1024, align 4, !dbg !4327
@m_series_init_eeprom_buffer.window_size = internal constant i32 10, align 4, !dbg !4331
@m_series_stc_write_regmap = internal constant [88 x %struct.mio_regmap] [%struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 260, i32 2 }, %struct.mio_regmap { i32 262, i32 2 }, %struct.mio_regmap { i32 264, i32 2 }, %struct.mio_regmap { i32 266, i32 2 }, %struct.mio_regmap { i32 268, i32 2 }, %struct.mio_regmap { i32 270, i32 2 }, %struct.mio_regmap { i32 272, i32 2 }, %struct.mio_regmap { i32 274, i32 2 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 280, i32 2 }, %struct.mio_regmap { i32 282, i32 2 }, %struct.mio_regmap { i32 284, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 288, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 292, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 296, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 300, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 304, i32 4 }, %struct.mio_regmap { i32 308, i32 2 }, %struct.mio_regmap { i32 310, i32 2 }, %struct.mio_regmap { i32 312, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 316, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 320, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 324, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 328, i32 2 }, %struct.mio_regmap { i32 330, i32 2 }, %struct.mio_regmap { i32 332, i32 2 }, %struct.mio_regmap { i32 334, i32 2 }, %struct.mio_regmap { i32 336, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 340, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 344, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 348, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 352, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 356, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 368, i32 2 }, %struct.mio_regmap { i32 370, i32 2 }, %struct.mio_regmap { i32 372, i32 2 }, %struct.mio_regmap { i32 374, i32 2 }, %struct.mio_regmap { i32 376, i32 2 }, %struct.mio_regmap { i32 378, i32 2 }, %struct.mio_regmap { i32 380, i32 2 }, %struct.mio_regmap { i32 382, i32 2 }, %struct.mio_regmap { i32 384, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 388, i32 2 }, %struct.mio_regmap { i32 390, i32 2 }, %struct.mio_regmap { i32 392, i32 2 }, %struct.mio_regmap { i32 394, i32 2 }, %struct.mio_regmap { i32 396, i32 2 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 400, i32 2 }, %struct.mio_regmap { i32 402, i32 2 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 406, i32 2 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 410, i32 2 }, %struct.mio_regmap { i32 412, i32 2 }, %struct.mio_regmap { i32 414, i32 2 }, %struct.mio_regmap { i32 416, i32 2 }, %struct.mio_regmap { i32 418, i32 2 }, %struct.mio_regmap { i32 420, i32 2 }, %struct.mio_regmap { i32 422, i32 2 }, %struct.mio_regmap { i32 424, i32 2 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 428, i32 2 }, %struct.mio_regmap { i32 430, i32 2 }], align 16, !dbg !4333
@.str.69 = private unnamed_addr constant [29 x i8] c"%s: unhandled register=0x%x\0A\00", align 1
@__func__.m_series_stc_write = private unnamed_addr constant [19 x i8] c"m_series_stc_write\00", align 1
@.str.70 = private unnamed_addr constant [28 x i8] c"%s: unmapped register=0x%x\0A\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@m_series_stc_read_regmap = internal constant [67 x %struct.mio_regmap] [%struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 260, i32 2 }, %struct.mio_regmap { i32 262, i32 2 }, %struct.mio_regmap { i32 264, i32 2 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 268, i32 2 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 272, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 276, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 280, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 284, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 288, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 292, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 296, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 310, i32 2 }, %struct.mio_regmap { i32 9, i32 1 }, %struct.mio_regmap { i32 314, i32 2 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 384, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 388, i32 4 }], align 16, !dbg !4343
@__func__.m_series_stc_read = private unnamed_addr constant [18 x i8] c"m_series_stc_read\00", align 1
@.str.71 = private unnamed_addr constant [15 x i8] c"Card removed?\0A\00", align 1
@.str.72 = private unnamed_addr constant [24 x i8] c"ai error a_status=%04x\0A\00", align 1
@ni_ai_drain_dma.timeout = internal constant i32 10000, align 4, !dbg !4348
@.str.73 = private unnamed_addr constant [11 x i8] c"timed out\0A\00", align 1
@.str.74 = private unnamed_addr constant [52 x i8] c"mite_bytes_in_transit=%i, AI_Status1_Register=0x%x\0A\00", align 1
@ni_handle_eos.timeout = internal constant i32 10, align 4, !dbg !4351
@.str.75 = private unnamed_addr constant [47 x i8] c"AO FIFO underrun status=0x%04x status2=0x%04x\0A\00", align 1
@.str.76 = private unnamed_addr constant [11 x i8] c"ni_mseries\00", align 1
@.str.77 = private unnamed_addr constant [11 x i8] c"ni_eseries\00", align 1
@.str.78 = private unnamed_addr constant [44 x i8] c"%s: %s device has no signal routing table.\0A\00", align 1
@__func__.ni_E_init = private unnamed_addr constant [10 x i8] c"ni_E_init\00", align 1
@.str.79 = private unnamed_addr constant [73 x i8] c"%s: High level NI signal names will not be available for this %s board.\0A\00", align 1
@.str.80 = private unnamed_addr constant [31 x i8] c"bug! n_aochan > MAX_N_AO_CHAN\0A\00", align 1
@ni_range_lkup = internal constant [8 x %struct.comedi_lrange*] [%struct.comedi_lrange* bitcast ({ i32, [16 x %struct.comedi_krange] }* @range_ni_E_ai to %struct.comedi_lrange*), %struct.comedi_lrange* bitcast ({ i32, [8 x %struct.comedi_krange] }* @range_ni_E_ai_limited to %struct.comedi_lrange*), %struct.comedi_lrange* bitcast ({ i32, [14 x %struct.comedi_krange] }* @range_ni_E_ai_limited14 to %struct.comedi_lrange*), %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @range_ni_E_ai_bipolar4 to %struct.comedi_lrange*), %struct.comedi_lrange* bitcast ({ i32, [8 x %struct.comedi_krange] }* @range_ni_E_ai_611x to %struct.comedi_lrange*), %struct.comedi_lrange* bitcast ({ i32, [4 x %struct.comedi_krange] }* @range_ni_M_ai_622x to %struct.comedi_lrange*), %struct.comedi_lrange* bitcast ({ i32, [7 x %struct.comedi_krange] }* @range_ni_M_ai_628x to %struct.comedi_lrange*), %struct.comedi_lrange* @range_bipolar5], align 16, !dbg !4359
@range_unipolar5 = external dso_local constant %struct.comedi_lrange, align 4
@range_unknown = external dso_local constant %struct.comedi_lrange, align 4
@.str.81 = private unnamed_addr constant [32 x i8] c"bug, unhandled case in switch.\0A\00", align 1
@.str.82 = private unnamed_addr constant [26 x i8] c"%s: unknown rtsi channel\0A\00", align 1
@__func__.ni_get_rtsi_routing = private unnamed_addr constant [20 x i8] c"ni_get_rtsi_routing\00", align 1
@__func__.ni_set_rtsi_routing = private unnamed_addr constant [20 x i8] c"ni_set_rtsi_routing\00", align 1
@.str.83 = private unnamed_addr constant [96 x i8] c"%s: invalid source for channel=%i, channel %i is always the RTSI clock for pre-m-series boards\0A\00", align 1
@__func__.ni_valid_rtsi_output_source = private unnamed_addr constant [28 x i8] c"ni_valid_rtsi_output_source\00", align 1
@default_rtsi_routing = internal constant [8 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 12], align 16, !dbg !4356
@range_bipolar5 = external dso_local constant %struct.comedi_lrange, align 4
@range_ni_E_ai = internal constant { i32, [16 x %struct.comedi_krange] } { i32 16, [16 x %struct.comedi_krange] [%struct.comedi_krange { i32 -10000000, i32 10000000, i32 0 }, %struct.comedi_krange { i32 -5000000, i32 5000000, i32 0 }, %struct.comedi_krange { i32 -2500000, i32 2500000, i32 0 }, %struct.comedi_krange { i32 -1000000, i32 1000000, i32 0 }, %struct.comedi_krange { i32 -500000, i32 500000, i32 0 }, %struct.comedi_krange { i32 -250000, i32 250000, i32 0 }, %struct.comedi_krange { i32 -100000, i32 100000, i32 0 }, %struct.comedi_krange { i32 -50000, i32 50000, i32 0 }, %struct.comedi_krange { i32 0, i32 20000000, i32 0 }, %struct.comedi_krange { i32 0, i32 10000000, i32 0 }, %struct.comedi_krange { i32 0, i32 5000000, i32 0 }, %struct.comedi_krange { i32 0, i32 2000000, i32 0 }, %struct.comedi_krange { i32 0, i32 1000000, i32 0 }, %struct.comedi_krange { i32 0, i32 500000, i32 0 }, %struct.comedi_krange { i32 0, i32 200000, i32 0 }, %struct.comedi_krange { i32 0, i32 100000, i32 0 }] }, align 4, !dbg !4362
@range_ni_E_ai_limited = internal constant { i32, [8 x %struct.comedi_krange] } { i32 8, [8 x %struct.comedi_krange] [%struct.comedi_krange { i32 -10000000, i32 10000000, i32 0 }, %struct.comedi_krange { i32 -5000000, i32 5000000, i32 0 }, %struct.comedi_krange { i32 -1000000, i32 1000000, i32 0 }, %struct.comedi_krange { i32 -100000, i32 100000, i32 0 }, %struct.comedi_krange { i32 0, i32 10000000, i32 0 }, %struct.comedi_krange { i32 0, i32 5000000, i32 0 }, %struct.comedi_krange { i32 0, i32 1000000, i32 0 }, %struct.comedi_krange { i32 0, i32 100000, i32 0 }] }, align 4, !dbg !4364
@range_ni_E_ai_limited14 = internal constant { i32, [14 x %struct.comedi_krange] } { i32 14, [14 x %struct.comedi_krange] [%struct.comedi_krange { i32 -10000000, i32 10000000, i32 0 }, %struct.comedi_krange { i32 -5000000, i32 5000000, i32 0 }, %struct.comedi_krange { i32 -2000000, i32 2000000, i32 0 }, %struct.comedi_krange { i32 -1000000, i32 1000000, i32 0 }, %struct.comedi_krange { i32 -500000, i32 500000, i32 0 }, %struct.comedi_krange { i32 -200000, i32 200000, i32 0 }, %struct.comedi_krange { i32 -100000, i32 100000, i32 0 }, %struct.comedi_krange { i32 0, i32 10000000, i32 0 }, %struct.comedi_krange { i32 0, i32 5000000, i32 0 }, %struct.comedi_krange { i32 0, i32 2000000, i32 0 }, %struct.comedi_krange { i32 0, i32 1000000, i32 0 }, %struct.comedi_krange { i32 0, i32 500000, i32 0 }, %struct.comedi_krange { i32 0, i32 200000, i32 0 }, %struct.comedi_krange { i32 0, i32 100000, i32 0 }] }, align 4, !dbg !4366
@range_ni_E_ai_bipolar4 = internal constant { i32, [4 x %struct.comedi_krange] } { i32 4, [4 x %struct.comedi_krange] [%struct.comedi_krange { i32 -10000000, i32 10000000, i32 0 }, %struct.comedi_krange { i32 -5000000, i32 5000000, i32 0 }, %struct.comedi_krange { i32 -500000, i32 500000, i32 0 }, %struct.comedi_krange { i32 -50000, i32 50000, i32 0 }] }, align 4, !dbg !4368
@range_ni_E_ai_611x = internal constant { i32, [8 x %struct.comedi_krange] } { i32 8, [8 x %struct.comedi_krange] [%struct.comedi_krange { i32 -50000000, i32 50000000, i32 0 }, %struct.comedi_krange { i32 -20000000, i32 20000000, i32 0 }, %struct.comedi_krange { i32 -10000000, i32 10000000, i32 0 }, %struct.comedi_krange { i32 -5000000, i32 5000000, i32 0 }, %struct.comedi_krange { i32 -2000000, i32 2000000, i32 0 }, %struct.comedi_krange { i32 -1000000, i32 1000000, i32 0 }, %struct.comedi_krange { i32 -500000, i32 500000, i32 0 }, %struct.comedi_krange { i32 -200000, i32 200000, i32 0 }] }, align 4, !dbg !4370
@range_ni_M_ai_622x = internal constant { i32, [4 x %struct.comedi_krange] } { i32 4, [4 x %struct.comedi_krange] [%struct.comedi_krange { i32 -10000000, i32 10000000, i32 0 }, %struct.comedi_krange { i32 -5000000, i32 5000000, i32 0 }, %struct.comedi_krange { i32 -1000000, i32 1000000, i32 0 }, %struct.comedi_krange { i32 -200000, i32 200000, i32 0 }] }, align 4, !dbg !4372
@range_ni_M_ai_628x = internal constant { i32, [7 x %struct.comedi_krange] } { i32 7, [7 x %struct.comedi_krange] [%struct.comedi_krange { i32 -10000000, i32 10000000, i32 0 }, %struct.comedi_krange { i32 -5000000, i32 5000000, i32 0 }, %struct.comedi_krange { i32 -2000000, i32 2000000, i32 0 }, %struct.comedi_krange { i32 -1000000, i32 1000000, i32 0 }, %struct.comedi_krange { i32 -500000, i32 500000, i32 0 }, %struct.comedi_krange { i32 -200000, i32 200000, i32 0 }, %struct.comedi_krange { i32 -100000, i32 100000, i32 0 }] }, align 4, !dbg !4374
@.str.91 = private unnamed_addr constant [9 x i8] c"timeout\0A\00", align 1
@ni_gainlkup = internal constant <{ [16 x i16], <{ [8 x i16], [8 x i16] }>, [16 x i16], <{ i16, i16, i16, i16, [12 x i16] }>, <{ [8 x i16], [8 x i16] }>, <{ i16, i16, i16, i16, [12 x i16] }>, <{ i16, i16, i16, i16, i16, i16, i16, [9 x i16] }>, [16 x i16] }> <{ [16 x i16] [i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 256, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263], <{ [8 x i16], [8 x i16] }> <{ [8 x i16] [i16 1, i16 2, i16 4, i16 7, i16 257, i16 258, i16 260, i16 263], [8 x i16] zeroinitializer }>, [16 x i16] [i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, i16 257, i16 258, i16 259, i16 260, i16 261, i16 262, i16 263, i16 0, i16 0], <{ i16, i16, i16, i16, [12 x i16] }> <{ i16 0, i16 1, i16 4, i16 7, [12 x i16] zeroinitializer }>, <{ [8 x i16], [8 x i16] }> <{ [8 x i16] [i16 10, i16 11, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6], [8 x i16] zeroinitializer }>, <{ i16, i16, i16, i16, [12 x i16] }> <{ i16 0, i16 1, i16 4, i16 5, [12 x i16] zeroinitializer }>, <{ i16, i16, i16, i16, i16, i16, i16, [9 x i16] }> <{ i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 7, [9 x i16] zeroinitializer }>, [16 x i16] zeroinitializer }>, align 16, !dbg !4378
@.str.93 = private unnamed_addr constant [35 x i8] c"timeout loading channel/gain list\0A\00", align 1
@ni_clear_ai_fifo.timeout = internal constant i32 10000, align 4, !dbg !4383
@.str.94 = private unnamed_addr constant [20 x i8] c"FIFO flush timeout\0A\00", align 1
@.str.95 = private unnamed_addr constant [35 x i8] c"cannot run command without an irq\0A\00", align 1
@.str.96 = private unnamed_addr constant [53 x i8] c"failed to reserve mite dma channel for analog input\0A\00", align 1
@.str.97 = private unnamed_addr constant [33 x i8] c"called with invalid register %d\0A\00", align 1
@ni_ao_arm.timeout = internal constant i32 1000, align 4, !dbg !4386
@.str.98 = private unnamed_addr constant [60 x i8] c"timed out waiting for AO_TMRDACWRs_In_Progress_St to clear\0A\00", align 1
@.str.99 = private unnamed_addr constant [54 x i8] c"failed to reserve mite dma channel for analog output\0A\00", align 1
@ni_ao_wait_for_dma_load.timeout = internal constant i32 10000, align 4, !dbg !4389
@.str.100 = private unnamed_addr constant [32 x i8] c"timed out waiting for dma load\0A\00", align 1
@.str.101 = private unnamed_addr constant [37 x i8] c"bug! unhandled ao reference voltage\0A\00", align 1
@.str.102 = private unnamed_addr constant [34 x i8] c"bug! unhandled ao offset voltage\0A\00", align 1
@.str.103 = private unnamed_addr constant [34 x i8] c"cannot run command without an irq\00", align 1
@.str.104 = private unnamed_addr constant [63 x i8] c"%s: tried exact data transfer limits greater than buffer size\0A\00", align 1
@__func__.ni_cmd_set_mite_transfer = private unnamed_addr constant [25 x i8] c"ni_cmd_set_mite_transfer\00", align 1
@.str.105 = private unnamed_addr constant [77 x i8] c"attempted to run digital output command with no lines configured as outputs\0A\00", align 1
@.str.106 = private unnamed_addr constant [66 x i8] c"failed to reserve mite dma channel for correlated digital output\0A\00", align 1
@.str.107 = private unnamed_addr constant [27 x i8] c"BUG: no cdo mite channel?\0A\00", align 1
@.str.108 = private unnamed_addr constant [30 x i8] c"dma failed to fill cdo fifo!\0A\00", align 1
@caldacs = internal global [8 x %struct.caldac_struct] [%struct.caldac_struct zeroinitializer, %struct.caldac_struct { i32 12, i32 8, i32 (i32, i32, i32*)* @pack_mb88341 }, %struct.caldac_struct { i32 8, i32 8, i32 (i32, i32, i32*)* @pack_dac8800 }, %struct.caldac_struct { i32 1, i32 12, i32 (i32, i32, i32*)* @pack_dac8043 }, %struct.caldac_struct { i32 2, i32 12, i32 (i32, i32, i32*)* @pack_ad8522 }, %struct.caldac_struct { i32 12, i32 8, i32 (i32, i32, i32*)* @pack_ad8804 }, %struct.caldac_struct { i32 8, i32 8, i32 (i32, i32, i32*)* @pack_ad8842 }, %struct.caldac_struct { i32 16, i32 8, i32 (i32, i32, i32*)* @pack_ad8804 }], align 16, !dbg !4392
@.str.109 = private unnamed_addr constant [30 x i8] c"BUG! MAX_N_CALDACS too small\0A\00", align 1
@.str.110 = private unnamed_addr constant [27 x i8] c"timeout or signal in %s()\0A\00", align 1
@__func__.cs5529_do_conversion = private unnamed_addr constant [21 x i8] c"cs5529_do_conversion\00", align 1
@.str.111 = private unnamed_addr constant [48 x i8] c"cs5529 conversion error, status CSS_OSC_DETECT\0A\00", align 1
@.str.112 = private unnamed_addr constant [47 x i8] c"cs5529 conversion error, overrange (ignoring)\0A\00", align 1
@cs5529_command.timeout = internal constant i32 100, align 4, !dbg !4403
@.str.113 = private unnamed_addr constant [43 x i8] c"possible problem - never saw adc go busy?\0A\00", align 1
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@.str.114 = private unnamed_addr constant [25 x i8] c"timeout or signal in %s\0A\00", align 1
@__func__.cs5529_config_write = private unnamed_addr constant [20 x i8] c"cs5529_config_write\00", align 1
@.str.115 = private unnamed_addr constant [18 x i8] c"serial disabled!\0A\00", align 1
@.str.116 = private unnamed_addr constant [39 x i8] c"SPI serial I/O didn't finish in time!\0A\00", align 1
@.str.117 = private unnamed_addr constant [76 x i8] c"we don't handle an unspecified clock period correctly yet, returning error\0A\00", align 1
@ni_mseries_set_pll_master_clock.min_period_ns = internal constant i32 50, align 4, !dbg !4408
@ni_mseries_set_pll_master_clock.max_period_ns = internal constant i32 1000, align 4, !dbg !4413
@ni_mseries_set_pll_master_clock.timeout = internal constant i32 1000, align 4, !dbg !4415
@.str.118 = private unnamed_addr constant [98 x i8] c"%s: you must specify an input clock frequency between %i and %i nanosec for the phased-lock loop\0A\00", align 1
@__func__.ni_mseries_set_pll_master_clock = private unnamed_addr constant [32 x i8] c"ni_mseries_set_pll_master_clock\00", align 1
@.str.119 = private unnamed_addr constant [36 x i8] c"bug, failed to find pll parameters\0A\00", align 1
@.str.120 = private unnamed_addr constant [86 x i8] c"%s: timed out waiting for PLL to lock to reference clock source %i with period %i ns\0A\00", align 1
@ni_mseries_get_pll_parameters.pico_per_nano = internal constant i32 1000, align 4, !dbg !4417
@ni_mseries_get_pll_parameters.target_picosec = internal constant i32 12500, align 4, !dbg !4422
@.str.121 = private unnamed_addr constant [34 x i8] c"ni_set_master_clock failed, bug?\0A\00", align 1
@ni_gpct_to_stc_regmap = internal constant [68 x %struct.mio_regmap] [%struct.mio_regmap { i32 68, i32 2 }, %struct.mio_regmap { i32 69, i32 2 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 6, i32 2 }, %struct.mio_regmap { i32 7, i32 2 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 8, i32 4 }, %struct.mio_regmap { i32 10, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 12, i32 4 }, %struct.mio_regmap { i32 14, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 26, i32 2 }, %struct.mio_regmap { i32 27, i32 2 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 28, i32 4 }, %struct.mio_regmap { i32 32, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 30, i32 4 }, %struct.mio_regmap { i32 34, i32 4 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 36, i32 2 }, %struct.mio_regmap { i32 37, i32 2 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 432, i32 2 }, %struct.mio_regmap { i32 434, i32 2 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 436, i32 2 }, %struct.mio_regmap { i32 438, i32 2 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 4, i32 2 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 72, i32 2 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 27, i32 2 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 29, i32 2 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 440, i32 2 }, %struct.mio_regmap { i32 442, i32 2 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 440, i32 2 }, %struct.mio_regmap { i32 442, i32 2 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 448, i32 2 }, %struct.mio_regmap { i32 450, i32 2 }, %struct.mio_regmap { i32 2, i32 2 }, %struct.mio_regmap { i32 3, i32 2 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 2, i32 2 }, %struct.mio_regmap { i32 3, i32 2 }, %struct.mio_regmap zeroinitializer, %struct.mio_regmap zeroinitializer, %struct.mio_regmap { i32 73, i32 2 }, %struct.mio_regmap { i32 75, i32 2 }], align 16, !dbg !4424
@__func__.ni_gpct_to_stc_register = private unnamed_addr constant [24 x i8] c"ni_gpct_to_stc_register\00", align 1
@.str.122 = private unnamed_addr constant [45 x i8] c"no dma channel available for use by counter\0A\00", align 1
@.str.123 = private unnamed_addr constant [48 x i8] c"failed to reserve mite dma channel for counter\0A\00", align 1
@ni_pcimio_pci_table = internal constant [66 x %struct.pci_device_id] [%struct.pci_device_id { i32 4243, i32 354, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 4243, i32 4464, i32 -1, i32 -1, i32 0, i32 0, i64 1 }, %struct.pci_device_id { i32 4243, i32 4480, i32 -1, i32 -1, i32 0, i32 0, i64 4 }, %struct.pci_device_id { i32 4243, i32 4496, i32 -1, i32 -1, i32 0, i32 0, i64 5 }, %struct.pci_device_id { i32 4243, i32 4528, i32 -1, i32 -1, i32 0, i32 0, i64 28 }, %struct.pci_device_id { i32 4243, i32 4544, i32 -1, i32 -1, i32 0, i32 0, i64 6 }, %struct.pci_device_id { i32 4243, i32 4560, i32 -1, i32 -1, i32 0, i32 0, i64 3 }, %struct.pci_device_id { i32 4243, i32 4720, i32 -1, i32 -1, i32 0, i32 0, i64 8 }, %struct.pci_device_id { i32 4243, i32 4912, i32 -1, i32 -1, i32 0, i32 0, i64 7 }, %struct.pci_device_id { i32 4243, i32 4928, i32 -1, i32 -1, i32 0, i32 0, i64 9 }, %struct.pci_device_id { i32 4243, i32 4944, i32 -1, i32 -1, i32 0, i32 0, i64 10 }, %struct.pci_device_id { i32 4243, i32 5344, i32 -1, i32 -1, i32 0, i32 0, i64 18 }, %struct.pci_device_id { i32 4243, i32 5360, i32 -1, i32 -1, i32 0, i32 0, i64 19 }, %struct.pci_device_id { i32 4243, i32 5504, i32 -1, i32 -1, i32 0, i32 0, i64 30 }, %struct.pci_device_id { i32 4243, i32 5552, i32 -1, i32 -1, i32 0, i32 0, i64 27 }, %struct.pci_device_id { i32 4243, i32 6272, i32 -1, i32 -1, i32 0, i32 0, i64 20 }, %struct.pci_device_id { i32 4243, i32 6256, i32 -1, i32 -1, i32 0, i32 0, i64 22 }, %struct.pci_device_id { i32 4243, i32 6320, i32 -1, i32 -1, i32 0, i32 0, i64 17 }, %struct.pci_device_id { i32 4243, i32 6336, i32 -1, i32 -1, i32 0, i32 0, i64 29 }, %struct.pci_device_id { i32 4243, i32 9232, i32 -1, i32 -1, i32 0, i32 0, i64 25 }, %struct.pci_device_id { i32 4243, i32 9248, i32 -1, i32 -1, i32 0, i32 0, i64 26 }, %struct.pci_device_id { i32 4243, i32 9264, i32 -1, i32 -1, i32 0, i32 0, i64 24 }, %struct.pci_device_id { i32 4243, i32 10384, i32 -1, i32 -1, i32 0, i32 0, i64 31 }, %struct.pci_device_id { i32 4243, i32 10432, i32 -1, i32 -1, i32 0, i32 0, i64 2 }, %struct.pci_device_id { i32 4243, i32 10848, i32 -1, i32 -1, i32 0, i32 0, i64 11 }, %struct.pci_device_id { i32 4243, i32 10864, i32 -1, i32 -1, i32 0, i32 0, i64 12 }, %struct.pci_device_id { i32 4243, i32 10880, i32 -1, i32 -1, i32 0, i32 0, i64 13 }, %struct.pci_device_id { i32 4243, i32 10928, i32 -1, i32 -1, i32 0, i32 0, i64 14 }, %struct.pci_device_id { i32 4243, i32 11136, i32 -1, i32 -1, i32 0, i32 0, i64 23 }, %struct.pci_device_id { i32 4243, i32 11152, i32 -1, i32 -1, i32 0, i32 0, i64 21 }, %struct.pci_device_id { i32 4243, i32 11392, i32 -1, i32 -1, i32 0, i32 0, i64 16 }, %struct.pci_device_id { i32 4243, i32 11424, i32 -1, i32 -1, i32 0, i32 0, i64 15 }, %struct.pci_device_id { i32 4243, i32 28842, i32 -1, i32 -1, i32 0, i32 0, i64 41 }, %struct.pci_device_id { i32 4243, i32 28843, i32 -1, i32 -1, i32 0, i32 0, i64 51 }, %struct.pci_device_id { i32 4243, i32 28844, i32 -1, i32 -1, i32 0, i32 0, i64 61 }, %struct.pci_device_id { i32 4243, i32 28845, i32 -1, i32 -1, i32 0, i32 0, i64 46 }, %struct.pci_device_id { i32 4243, i32 28846, i32 -1, i32 -1, i32 0, i32 0, i64 33 }, %struct.pci_device_id { i32 4243, i32 28847, i32 -1, i32 -1, i32 0, i32 0, i64 34 }, %struct.pci_device_id { i32 4243, i32 28848, i32 -1, i32 -1, i32 0, i32 0, i64 32 }, %struct.pci_device_id { i32 4243, i32 28849, i32 -1, i32 -1, i32 0, i32 0, i64 42 }, %struct.pci_device_id { i32 4243, i32 28850, i32 -1, i32 -1, i32 0, i32 0, i64 52 }, %struct.pci_device_id { i32 4243, i32 28851, i32 -1, i32 -1, i32 0, i32 0, i64 62 }, %struct.pci_device_id { i32 4243, i32 28852, i32 -1, i32 -1, i32 0, i32 0, i64 43 }, %struct.pci_device_id { i32 4243, i32 28853, i32 -1, i32 -1, i32 0, i32 0, i64 36 }, %struct.pci_device_id { i32 4243, i32 28854, i32 -1, i32 -1, i32 0, i32 0, i64 55 }, %struct.pci_device_id { i32 4243, i32 28855, i32 -1, i32 -1, i32 0, i32 0, i64 49 }, %struct.pci_device_id { i32 4243, i32 28856, i32 -1, i32 -1, i32 0, i32 0, i64 45 }, %struct.pci_device_id { i32 4243, i32 28857, i32 -1, i32 -1, i32 0, i32 0, i64 44 }, %struct.pci_device_id { i32 4243, i32 28858, i32 -1, i32 -1, i32 0, i32 0, i64 50 }, %struct.pci_device_id { i32 4243, i32 28859, i32 -1, i32 -1, i32 0, i32 0, i64 56 }, %struct.pci_device_id { i32 4243, i32 28860, i32 -1, i32 -1, i32 0, i32 0, i64 59 }, %struct.pci_device_id { i32 4243, i32 28861, i32 -1, i32 -1, i32 0, i32 0, i64 57 }, %struct.pci_device_id { i32 4243, i32 28862, i32 -1, i32 -1, i32 0, i32 0, i64 60 }, %struct.pci_device_id { i32 4243, i32 28863, i32 -1, i32 -1, i32 0, i32 0, i64 58 }, %struct.pci_device_id { i32 4243, i32 28864, i32 -1, i32 -1, i32 0, i32 0, i64 63 }, %struct.pci_device_id { i32 4243, i32 28914, i32 -1, i32 -1, i32 0, i32 0, i64 37 }, %struct.pci_device_id { i32 4243, i32 28915, i32 -1, i32 -1, i32 0, i32 0, i64 38 }, %struct.pci_device_id { i32 4243, i32 28941, i32 -1, i32 -1, i32 0, i32 0, i64 64 }, %struct.pci_device_id { i32 4243, i32 29036, i32 -1, i32 -1, i32 0, i32 0, i64 39 }, %struct.pci_device_id { i32 4243, i32 29037, i32 -1, i32 -1, i32 0, i32 0, i64 40 }, %struct.pci_device_id { i32 4243, i32 29053, i32 -1, i32 -1, i32 0, i32 0, i64 47 }, %struct.pci_device_id { i32 4243, i32 29055, i32 -1, i32 -1, i32 0, i32 0, i64 53 }, %struct.pci_device_id { i32 4243, i32 29116, i32 -1, i32 -1, i32 0, i32 0, i64 35 }, %struct.pci_device_id { i32 4243, i32 29416, i32 -1, i32 -1, i32 0, i32 0, i64 48 }, %struct.pci_device_id { i32 4243, i32 29417, i32 -1, i32 -1, i32 0, i32 0, i64 54 }, %struct.pci_device_id zeroinitializer], align 16, !dbg !4710
@llvm.used = appending global [7 x i8*] [i8* bitcast (i8** @__UNIQUE_ID___addressable_ni_pcimio_driver_init235 to i8*), i8* bitcast (void ()* @ni_pcimio_driver_exit to i8*), i8* bitcast (void ()** @__exitcall_ni_pcimio_driver_exit to i8*), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__UNIQUE_ID_author236, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @__UNIQUE_ID_description237, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__UNIQUE_ID_file238, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__UNIQUE_ID_license239, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_pcimio_driver_init() #0 section ".init.text" !dbg !4721 {
entry:
  %call = call i32 @comedi_pci_driver_register(%struct.comedi_driver* @ni_pcimio_driver, %struct.pci_driver* @ni_pcimio_pci_driver) #9, !dbg !4724
  ret i32 %call, !dbg !4724
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @ni_pcimio_driver_exit() #0 section ".exit.text" !dbg !4725 {
entry:
  call void @comedi_pci_driver_unregister(%struct.comedi_driver* @ni_pcimio_driver, %struct.pci_driver* @ni_pcimio_pci_driver) #9, !dbg !4726
  ret void, !dbg !4726
}

; Function Attrs: noredzone
declare dso_local void @comedi_pci_driver_unregister(%struct.comedi_driver*, %struct.pci_driver*) #1

; Function Attrs: noredzone
declare dso_local i32 @comedi_pci_driver_register(%struct.comedi_driver*, %struct.pci_driver*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pcimio_detach(%struct.comedi_device* %dev) #2 !dbg !4727 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !4728, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !4730, metadata !DIExpression()), !dbg !4903
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4904
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !4905
  %1 = load i8*, i8** %private, align 8, !dbg !4905
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !4904
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !4903
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4906
  call void @mio_common_detach(%struct.comedi_device* %3) #9, !dbg !4907
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4908
  %irq = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %4, i32 0, i32 20, !dbg !4910
  %5 = load i32, i32* %irq, align 8, !dbg !4910
  %tobool = icmp ne i32 %5, 0, !dbg !4908
  br i1 %tobool, label %if.then, label %if.end, !dbg !4911

if.then:                                          ; preds = %entry
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4912
  %irq1 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %6, i32 0, i32 20, !dbg !4913
  %7 = load i32, i32* %irq1, align 8, !dbg !4913
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4914
  %9 = bitcast %struct.comedi_device* %8 to i8*, !dbg !4914
  %call = call i8* @free_irq(i32 %7, i8* %9) #9, !dbg !4915
  br label %if.end, !dbg !4915

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !4916
  %tobool2 = icmp ne %struct.ni_private* %10, null, !dbg !4916
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !4918

if.then3:                                         ; preds = %if.end
  %11 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !4919
  %ai_mite_ring = getelementptr inbounds %struct.ni_private, %struct.ni_private* %11, i32 0, i32 46, !dbg !4921
  %12 = load %struct.mite_ring*, %struct.mite_ring** %ai_mite_ring, align 8, !dbg !4921
  call void @mite_free_ring(%struct.mite_ring* %12) #9, !dbg !4922
  %13 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !4923
  %ao_mite_ring = getelementptr inbounds %struct.ni_private, %struct.ni_private* %13, i32 0, i32 47, !dbg !4924
  %14 = load %struct.mite_ring*, %struct.mite_ring** %ao_mite_ring, align 8, !dbg !4924
  call void @mite_free_ring(%struct.mite_ring* %14) #9, !dbg !4925
  %15 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !4926
  %cdo_mite_ring = getelementptr inbounds %struct.ni_private, %struct.ni_private* %15, i32 0, i32 48, !dbg !4927
  %16 = load %struct.mite_ring*, %struct.mite_ring** %cdo_mite_ring, align 8, !dbg !4927
  call void @mite_free_ring(%struct.mite_ring* %16) #9, !dbg !4928
  %17 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !4929
  %gpct_mite_ring = getelementptr inbounds %struct.ni_private, %struct.ni_private* %17, i32 0, i32 49, !dbg !4930
  %arrayidx = getelementptr [2 x %struct.mite_ring*], [2 x %struct.mite_ring*]* %gpct_mite_ring, i64 0, i64 0, !dbg !4929
  %18 = load %struct.mite_ring*, %struct.mite_ring** %arrayidx, align 8, !dbg !4929
  call void @mite_free_ring(%struct.mite_ring* %18) #9, !dbg !4931
  %19 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !4932
  %gpct_mite_ring4 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %19, i32 0, i32 49, !dbg !4933
  %arrayidx5 = getelementptr [2 x %struct.mite_ring*], [2 x %struct.mite_ring*]* %gpct_mite_ring4, i64 0, i64 1, !dbg !4932
  %20 = load %struct.mite_ring*, %struct.mite_ring** %arrayidx5, align 8, !dbg !4932
  call void @mite_free_ring(%struct.mite_ring* %20) #9, !dbg !4934
  %21 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !4935
  %mite = getelementptr inbounds %struct.ni_private, %struct.ni_private* %21, i32 0, i32 42, !dbg !4936
  %22 = load %struct.mite*, %struct.mite** %mite, align 8, !dbg !4936
  call void @mite_detach(%struct.mite* %22) #9, !dbg !4937
  br label %if.end6, !dbg !4938

if.end6:                                          ; preds = %if.then3, %if.end
  %23 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4939
  %mmio = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %23, i32 0, i32 17, !dbg !4941
  %24 = load i8*, i8** %mmio, align 8, !dbg !4941
  %tobool7 = icmp ne i8* %24, null, !dbg !4939
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !4942

if.then8:                                         ; preds = %if.end6
  %25 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4943
  %mmio9 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %25, i32 0, i32 17, !dbg !4944
  %26 = load i8*, i8** %mmio9, align 8, !dbg !4944
  call void @iounmap(i8* %26) #9, !dbg !4945
  br label %if.end10, !dbg !4945

if.end10:                                         ; preds = %if.then8, %if.end6
  %27 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4946
  call void @comedi_pci_disable(%struct.comedi_device* %27) #9, !dbg !4947
  ret void, !dbg !4948
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcimio_auto_attach(%struct.comedi_device* %dev, i64 %context) #2 !dbg !4949 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %context.addr = alloca i64, align 8
  %pcidev = alloca %struct.pci_dev*, align 8
  %board = alloca %struct.ni_board_struct*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %irq = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !4950, metadata !DIExpression()), !dbg !4951
  store i64 %context, i64* %context.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %context.addr, metadata !4952, metadata !DIExpression()), !dbg !4953
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pcidev, metadata !4954, metadata !DIExpression()), !dbg !4955
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4956
  %call = call %struct.pci_dev* @comedi_to_pci_dev(%struct.comedi_device* %0) #9, !dbg !4957
  store %struct.pci_dev* %call, %struct.pci_dev** %pcidev, align 8, !dbg !4955
  call void @llvm.dbg.declare(metadata %struct.ni_board_struct** %board, metadata !4958, metadata !DIExpression()), !dbg !4960
  store %struct.ni_board_struct* null, %struct.ni_board_struct** %board, align 8, !dbg !4960
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !4961, metadata !DIExpression()), !dbg !4962
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !4963, metadata !DIExpression()), !dbg !4964
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4965, metadata !DIExpression()), !dbg !4966
  %1 = load i64, i64* %context.addr, align 8, !dbg !4967
  %cmp = icmp ult i64 %1, 65, !dbg !4969
  br i1 %cmp, label %if.then, label %if.end, !dbg !4970

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %context.addr, align 8, !dbg !4971
  %arrayidx = getelementptr [65 x %struct.ni_board_struct], [65 x %struct.ni_board_struct]* @ni_boards, i64 0, i64 %2, !dbg !4972
  store %struct.ni_board_struct* %arrayidx, %struct.ni_board_struct** %board, align 8, !dbg !4973
  br label %if.end, !dbg !4974

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !4975
  %tobool = icmp ne %struct.ni_board_struct* %3, null, !dbg !4975
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !4977

if.then1:                                         ; preds = %if.end
  store i32 -19, i32* %retval, align 4, !dbg !4978
  br label %return, !dbg !4978

if.end2:                                          ; preds = %if.end
  %4 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !4979
  %5 = bitcast %struct.ni_board_struct* %4 to i8*, !dbg !4979
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4980
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %6, i32 0, i32 9, !dbg !4981
  store i8* %5, i8** %board_ptr, align 8, !dbg !4982
  %7 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !4983
  %name = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %7, i32 0, i32 0, !dbg !4984
  %8 = load i8*, i8** %name, align 8, !dbg !4984
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4985
  %board_name = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %9, i32 0, i32 8, !dbg !4986
  store i8* %8, i8** %board_name, align 8, !dbg !4987
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4988
  %call3 = call i32 @comedi_pci_enable(%struct.comedi_device* %10) #9, !dbg !4989
  store i32 %call3, i32* %ret, align 4, !dbg !4990
  %11 = load i32, i32* %ret, align 4, !dbg !4991
  %tobool4 = icmp ne i32 %11, 0, !dbg !4991
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !4993

if.then5:                                         ; preds = %if.end2
  %12 = load i32, i32* %ret, align 4, !dbg !4994
  store i32 %12, i32* %retval, align 4, !dbg !4995
  br label %return, !dbg !4995

if.end6:                                          ; preds = %if.end2
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4996
  %call7 = call i32 @ni_alloc_private(%struct.comedi_device* %13) #9, !dbg !4997
  store i32 %call7, i32* %ret, align 4, !dbg !4998
  %14 = load i32, i32* %ret, align 4, !dbg !4999
  %tobool8 = icmp ne i32 %14, 0, !dbg !4999
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !5001

if.then9:                                         ; preds = %if.end6
  %15 = load i32, i32* %ret, align 4, !dbg !5002
  store i32 %15, i32* %retval, align 4, !dbg !5003
  br label %return, !dbg !5003

if.end10:                                         ; preds = %if.end6
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5004
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %16, i32 0, i32 3, !dbg !5005
  %17 = load i8*, i8** %private, align 8, !dbg !5005
  %18 = bitcast i8* %17 to %struct.ni_private*, !dbg !5004
  store %struct.ni_private* %18, %struct.ni_private** %devpriv, align 8, !dbg !5006
  %19 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5007
  %call11 = call %struct.mite* @mite_attach(%struct.comedi_device* %19, i1 zeroext false) #9, !dbg !5008
  %20 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5009
  %mite = getelementptr inbounds %struct.ni_private, %struct.ni_private* %20, i32 0, i32 42, !dbg !5010
  store %struct.mite* %call11, %struct.mite** %mite, align 8, !dbg !5011
  %21 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5012
  %mite12 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %21, i32 0, i32 42, !dbg !5014
  %22 = load %struct.mite*, %struct.mite** %mite12, align 8, !dbg !5014
  %tobool13 = icmp ne %struct.mite* %22, null, !dbg !5012
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !5015

if.then14:                                        ; preds = %if.end10
  store i32 -12, i32* %retval, align 4, !dbg !5016
  br label %return, !dbg !5016

if.end15:                                         ; preds = %if.end10
  %23 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5017
  %reg_type = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %23, i32 0, i32 15, !dbg !5019
  %24 = load i32, i32* %reg_type, align 4, !dbg !5019
  %and = and i32 %24, 24, !dbg !5020
  %tobool16 = icmp ne i32 %and, 0, !dbg !5020
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !5021

if.then17:                                        ; preds = %if.end15
  %25 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5022
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %25, i32 0, i32 50, !dbg !5023
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !5024
  %bf.clear = and i16 %bf.load, -2, !dbg !5024
  %bf.set = or i16 %bf.clear, 1, !dbg !5024
  store i16 %bf.set, i16* %is_m_series, align 8, !dbg !5024
  br label %if.end18, !dbg !5022

if.end18:                                         ; preds = %if.then17, %if.end15
  %26 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5025
  %reg_type19 = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %26, i32 0, i32 15, !dbg !5027
  %27 = load i32, i32* %reg_type19, align 4, !dbg !5027
  %and20 = and i32 %27, 7, !dbg !5028
  %tobool21 = icmp ne i32 %and20, 0, !dbg !5028
  br i1 %tobool21, label %if.then22, label %if.end26, !dbg !5029

if.then22:                                        ; preds = %if.end18
  %28 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5030
  %is_6xxx = getelementptr inbounds %struct.ni_private, %struct.ni_private* %28, i32 0, i32 50, !dbg !5031
  %bf.load23 = load i16, i16* %is_6xxx, align 8, !dbg !5032
  %bf.clear24 = and i16 %bf.load23, -3, !dbg !5032
  %bf.set25 = or i16 %bf.clear24, 2, !dbg !5032
  store i16 %bf.set25, i16* %is_6xxx, align 8, !dbg !5032
  br label %if.end26, !dbg !5030

if.end26:                                         ; preds = %if.then22, %if.end18
  %29 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5033
  %reg_type27 = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %29, i32 0, i32 15, !dbg !5035
  %30 = load i32, i32* %reg_type27, align 4, !dbg !5035
  %cmp28 = icmp eq i32 %30, 1, !dbg !5036
  br i1 %cmp28, label %if.then29, label %if.end33, !dbg !5037

if.then29:                                        ; preds = %if.end26
  %31 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5038
  %is_611x = getelementptr inbounds %struct.ni_private, %struct.ni_private* %31, i32 0, i32 50, !dbg !5039
  %bf.load30 = load i16, i16* %is_611x, align 8, !dbg !5040
  %bf.clear31 = and i16 %bf.load30, -5, !dbg !5040
  %bf.set32 = or i16 %bf.clear31, 4, !dbg !5040
  store i16 %bf.set32, i16* %is_611x, align 8, !dbg !5040
  br label %if.end33, !dbg !5038

if.end33:                                         ; preds = %if.then29, %if.end26
  %32 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5041
  %reg_type34 = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %32, i32 0, i32 15, !dbg !5043
  %33 = load i32, i32* %reg_type34, align 4, !dbg !5043
  %cmp35 = icmp eq i32 %33, 32, !dbg !5044
  br i1 %cmp35, label %if.then36, label %if.end40, !dbg !5045

if.then36:                                        ; preds = %if.end33
  %34 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5046
  %is_6143 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %34, i32 0, i32 50, !dbg !5047
  %bf.load37 = load i16, i16* %is_6143, align 8, !dbg !5048
  %bf.clear38 = and i16 %bf.load37, -9, !dbg !5048
  %bf.set39 = or i16 %bf.clear38, 8, !dbg !5048
  store i16 %bf.set39, i16* %is_6143, align 8, !dbg !5048
  br label %if.end40, !dbg !5046

if.end40:                                         ; preds = %if.then36, %if.end33
  %35 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5049
  %reg_type41 = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %35, i32 0, i32 15, !dbg !5051
  %36 = load i32, i32* %reg_type41, align 4, !dbg !5051
  %cmp42 = icmp eq i32 %36, 8, !dbg !5052
  br i1 %cmp42, label %if.then43, label %if.end47, !dbg !5053

if.then43:                                        ; preds = %if.end40
  %37 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5054
  %is_622x = getelementptr inbounds %struct.ni_private, %struct.ni_private* %37, i32 0, i32 50, !dbg !5055
  %bf.load44 = load i16, i16* %is_622x, align 8, !dbg !5056
  %bf.clear45 = and i16 %bf.load44, -17, !dbg !5056
  %bf.set46 = or i16 %bf.clear45, 16, !dbg !5056
  store i16 %bf.set46, i16* %is_622x, align 8, !dbg !5056
  br label %if.end47, !dbg !5054

if.end47:                                         ; preds = %if.then43, %if.end40
  %38 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5057
  %reg_type48 = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %38, i32 0, i32 15, !dbg !5059
  %39 = load i32, i32* %reg_type48, align 4, !dbg !5059
  %cmp49 = icmp eq i32 %39, 16, !dbg !5060
  br i1 %cmp49, label %if.then50, label %if.end54, !dbg !5061

if.then50:                                        ; preds = %if.end47
  %40 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5062
  %is_625x = getelementptr inbounds %struct.ni_private, %struct.ni_private* %40, i32 0, i32 50, !dbg !5063
  %bf.load51 = load i16, i16* %is_625x, align 8, !dbg !5064
  %bf.clear52 = and i16 %bf.load51, -33, !dbg !5064
  %bf.set53 = or i16 %bf.clear52, 32, !dbg !5064
  store i16 %bf.set53, i16* %is_625x, align 8, !dbg !5064
  br label %if.end54, !dbg !5062

if.end54:                                         ; preds = %if.then50, %if.end47
  %41 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5065
  %reg_type55 = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %41, i32 0, i32 15, !dbg !5067
  %42 = load i32, i32* %reg_type55, align 4, !dbg !5067
  %cmp56 = icmp eq i32 %42, 24, !dbg !5068
  br i1 %cmp56, label %if.then57, label %if.end61, !dbg !5069

if.then57:                                        ; preds = %if.end54
  %43 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5070
  %is_628x = getelementptr inbounds %struct.ni_private, %struct.ni_private* %43, i32 0, i32 50, !dbg !5071
  %bf.load58 = load i16, i16* %is_628x, align 8, !dbg !5072
  %bf.clear59 = and i16 %bf.load58, -65, !dbg !5072
  %bf.set60 = or i16 %bf.clear59, 64, !dbg !5072
  store i16 %bf.set60, i16* %is_628x, align 8, !dbg !5072
  br label %if.end61, !dbg !5070

if.end61:                                         ; preds = %if.then57, %if.end54
  %44 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5073
  %reg_type62 = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %44, i32 0, i32 15, !dbg !5075
  %45 = load i32, i32* %reg_type62, align 4, !dbg !5075
  %and63 = and i32 %45, 6, !dbg !5076
  %tobool64 = icmp ne i32 %and63, 0, !dbg !5076
  br i1 %tobool64, label %if.then65, label %if.end69, !dbg !5077

if.then65:                                        ; preds = %if.end61
  %46 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5078
  %is_67xx = getelementptr inbounds %struct.ni_private, %struct.ni_private* %46, i32 0, i32 50, !dbg !5079
  %bf.load66 = load i16, i16* %is_67xx, align 8, !dbg !5080
  %bf.clear67 = and i16 %bf.load66, -129, !dbg !5080
  %bf.set68 = or i16 %bf.clear67, 128, !dbg !5080
  store i16 %bf.set68, i16* %is_67xx, align 8, !dbg !5080
  br label %if.end69, !dbg !5078

if.end69:                                         ; preds = %if.then65, %if.end61
  %47 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5081
  %reg_type70 = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %47, i32 0, i32 15, !dbg !5083
  %48 = load i32, i32* %reg_type70, align 4, !dbg !5083
  %cmp71 = icmp eq i32 %48, 2, !dbg !5084
  br i1 %cmp71, label %if.then72, label %if.end76, !dbg !5085

if.then72:                                        ; preds = %if.end69
  %49 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5086
  %is_6711 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %49, i32 0, i32 50, !dbg !5087
  %bf.load73 = load i16, i16* %is_6711, align 8, !dbg !5088
  %bf.clear74 = and i16 %bf.load73, -257, !dbg !5088
  %bf.set75 = or i16 %bf.clear74, 256, !dbg !5088
  store i16 %bf.set75, i16* %is_6711, align 8, !dbg !5088
  br label %if.end76, !dbg !5086

if.end76:                                         ; preds = %if.then72, %if.end69
  %50 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5089
  %reg_type77 = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %50, i32 0, i32 15, !dbg !5091
  %51 = load i32, i32* %reg_type77, align 4, !dbg !5091
  %cmp78 = icmp eq i32 %51, 4, !dbg !5092
  br i1 %cmp78, label %if.then79, label %if.end83, !dbg !5093

if.then79:                                        ; preds = %if.end76
  %52 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5094
  %is_6713 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %52, i32 0, i32 50, !dbg !5095
  %bf.load80 = load i16, i16* %is_6713, align 8, !dbg !5096
  %bf.clear81 = and i16 %bf.load80, -513, !dbg !5096
  %bf.set82 = or i16 %bf.clear81, 512, !dbg !5096
  store i16 %bf.set82, i16* %is_6713, align 8, !dbg !5096
  br label %if.end83, !dbg !5094

if.end83:                                         ; preds = %if.then79, %if.end76
  %53 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5097
  %mite84 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %53, i32 0, i32 42, !dbg !5098
  %54 = load %struct.mite*, %struct.mite** %mite84, align 8, !dbg !5098
  %call85 = call %struct.mite_ring* @mite_alloc_ring(%struct.mite* %54) #9, !dbg !5099
  %55 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5100
  %ai_mite_ring = getelementptr inbounds %struct.ni_private, %struct.ni_private* %55, i32 0, i32 46, !dbg !5101
  store %struct.mite_ring* %call85, %struct.mite_ring** %ai_mite_ring, align 8, !dbg !5102
  %56 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5103
  %ai_mite_ring86 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %56, i32 0, i32 46, !dbg !5105
  %57 = load %struct.mite_ring*, %struct.mite_ring** %ai_mite_ring86, align 8, !dbg !5105
  %tobool87 = icmp ne %struct.mite_ring* %57, null, !dbg !5103
  br i1 %tobool87, label %if.end89, label %if.then88, !dbg !5106

if.then88:                                        ; preds = %if.end83
  store i32 -12, i32* %retval, align 4, !dbg !5107
  br label %return, !dbg !5107

if.end89:                                         ; preds = %if.end83
  %58 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5108
  %mite90 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %58, i32 0, i32 42, !dbg !5109
  %59 = load %struct.mite*, %struct.mite** %mite90, align 8, !dbg !5109
  %call91 = call %struct.mite_ring* @mite_alloc_ring(%struct.mite* %59) #9, !dbg !5110
  %60 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5111
  %ao_mite_ring = getelementptr inbounds %struct.ni_private, %struct.ni_private* %60, i32 0, i32 47, !dbg !5112
  store %struct.mite_ring* %call91, %struct.mite_ring** %ao_mite_ring, align 8, !dbg !5113
  %61 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5114
  %ao_mite_ring92 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %61, i32 0, i32 47, !dbg !5116
  %62 = load %struct.mite_ring*, %struct.mite_ring** %ao_mite_ring92, align 8, !dbg !5116
  %tobool93 = icmp ne %struct.mite_ring* %62, null, !dbg !5114
  br i1 %tobool93, label %if.end95, label %if.then94, !dbg !5117

if.then94:                                        ; preds = %if.end89
  store i32 -12, i32* %retval, align 4, !dbg !5118
  br label %return, !dbg !5118

if.end95:                                         ; preds = %if.end89
  %63 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5119
  %mite96 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %63, i32 0, i32 42, !dbg !5120
  %64 = load %struct.mite*, %struct.mite** %mite96, align 8, !dbg !5120
  %call97 = call %struct.mite_ring* @mite_alloc_ring(%struct.mite* %64) #9, !dbg !5121
  %65 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5122
  %cdo_mite_ring = getelementptr inbounds %struct.ni_private, %struct.ni_private* %65, i32 0, i32 48, !dbg !5123
  store %struct.mite_ring* %call97, %struct.mite_ring** %cdo_mite_ring, align 8, !dbg !5124
  %66 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5125
  %cdo_mite_ring98 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %66, i32 0, i32 48, !dbg !5127
  %67 = load %struct.mite_ring*, %struct.mite_ring** %cdo_mite_ring98, align 8, !dbg !5127
  %tobool99 = icmp ne %struct.mite_ring* %67, null, !dbg !5125
  br i1 %tobool99, label %if.end101, label %if.then100, !dbg !5128

if.then100:                                       ; preds = %if.end95
  store i32 -12, i32* %retval, align 4, !dbg !5129
  br label %return, !dbg !5129

if.end101:                                        ; preds = %if.end95
  %68 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5130
  %mite102 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %68, i32 0, i32 42, !dbg !5131
  %69 = load %struct.mite*, %struct.mite** %mite102, align 8, !dbg !5131
  %call103 = call %struct.mite_ring* @mite_alloc_ring(%struct.mite* %69) #9, !dbg !5132
  %70 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5133
  %gpct_mite_ring = getelementptr inbounds %struct.ni_private, %struct.ni_private* %70, i32 0, i32 49, !dbg !5134
  %arrayidx104 = getelementptr [2 x %struct.mite_ring*], [2 x %struct.mite_ring*]* %gpct_mite_ring, i64 0, i64 0, !dbg !5133
  store %struct.mite_ring* %call103, %struct.mite_ring** %arrayidx104, align 8, !dbg !5135
  %71 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5136
  %gpct_mite_ring105 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %71, i32 0, i32 49, !dbg !5138
  %arrayidx106 = getelementptr [2 x %struct.mite_ring*], [2 x %struct.mite_ring*]* %gpct_mite_ring105, i64 0, i64 0, !dbg !5136
  %72 = load %struct.mite_ring*, %struct.mite_ring** %arrayidx106, align 8, !dbg !5136
  %tobool107 = icmp ne %struct.mite_ring* %72, null, !dbg !5136
  br i1 %tobool107, label %if.end109, label %if.then108, !dbg !5139

if.then108:                                       ; preds = %if.end101
  store i32 -12, i32* %retval, align 4, !dbg !5140
  br label %return, !dbg !5140

if.end109:                                        ; preds = %if.end101
  %73 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5141
  %mite110 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %73, i32 0, i32 42, !dbg !5142
  %74 = load %struct.mite*, %struct.mite** %mite110, align 8, !dbg !5142
  %call111 = call %struct.mite_ring* @mite_alloc_ring(%struct.mite* %74) #9, !dbg !5143
  %75 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5144
  %gpct_mite_ring112 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %75, i32 0, i32 49, !dbg !5145
  %arrayidx113 = getelementptr [2 x %struct.mite_ring*], [2 x %struct.mite_ring*]* %gpct_mite_ring112, i64 0, i64 1, !dbg !5144
  store %struct.mite_ring* %call111, %struct.mite_ring** %arrayidx113, align 8, !dbg !5146
  %76 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5147
  %gpct_mite_ring114 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %76, i32 0, i32 49, !dbg !5149
  %arrayidx115 = getelementptr [2 x %struct.mite_ring*], [2 x %struct.mite_ring*]* %gpct_mite_ring114, i64 0, i64 1, !dbg !5147
  %77 = load %struct.mite_ring*, %struct.mite_ring** %arrayidx115, align 8, !dbg !5147
  %tobool116 = icmp ne %struct.mite_ring* %77, null, !dbg !5147
  br i1 %tobool116, label %if.end118, label %if.then117, !dbg !5150

if.then117:                                       ; preds = %if.end109
  store i32 -12, i32* %retval, align 4, !dbg !5151
  br label %return, !dbg !5151

if.end118:                                        ; preds = %if.end109
  %78 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5152
  %is_m_series119 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %78, i32 0, i32 50, !dbg !5154
  %bf.load120 = load i16, i16* %is_m_series119, align 8, !dbg !5154
  %bf.clear121 = and i16 %bf.load120, 1, !dbg !5154
  %bf.cast = zext i16 %bf.clear121 to i32, !dbg !5154
  %tobool122 = icmp ne i32 %bf.cast, 0, !dbg !5152
  br i1 %tobool122, label %if.then123, label %if.end124, !dbg !5155

if.then123:                                       ; preds = %if.end118
  %79 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5156
  call void @m_series_init_eeprom_buffer(%struct.comedi_device* %79) #9, !dbg !5157
  br label %if.end124, !dbg !5157

if.end124:                                        ; preds = %if.then123, %if.end118
  %80 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5158
  %is_6143125 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %80, i32 0, i32 50, !dbg !5160
  %bf.load126 = load i16, i16* %is_6143125, align 8, !dbg !5160
  %bf.lshr = lshr i16 %bf.load126, 3, !dbg !5160
  %bf.clear127 = and i16 %bf.lshr, 1, !dbg !5160
  %bf.cast128 = zext i16 %bf.clear127 to i32, !dbg !5160
  %tobool129 = icmp ne i32 %bf.cast128, 0, !dbg !5158
  br i1 %tobool129, label %if.then130, label %if.end131, !dbg !5161

if.then130:                                       ; preds = %if.end124
  %81 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5162
  call void @init_6143(%struct.comedi_device* %81) #9, !dbg !5163
  br label %if.end131, !dbg !5163

if.end131:                                        ; preds = %if.then130, %if.end124
  %82 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !5164
  %irq132 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %82, i32 0, i32 43, !dbg !5165
  %83 = load i32, i32* %irq132, align 4, !dbg !5165
  store i32 %83, i32* %irq, align 4, !dbg !5166
  %84 = load i32, i32* %irq, align 4, !dbg !5167
  %tobool133 = icmp ne i32 %84, 0, !dbg !5167
  br i1 %tobool133, label %if.then134, label %if.end141, !dbg !5169

if.then134:                                       ; preds = %if.end131
  %85 = load i32, i32* %irq, align 4, !dbg !5170
  %86 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5172
  %board_name135 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %86, i32 0, i32 8, !dbg !5173
  %87 = load i8*, i8** %board_name135, align 8, !dbg !5173
  %88 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5174
  %89 = bitcast %struct.comedi_device* %88 to i8*, !dbg !5174
  %call136 = call i32 @request_irq(i32 %85, i32 (i32, i8*)* @ni_E_interrupt, i64 128, i8* %87, i8* %89) #9, !dbg !5175
  store i32 %call136, i32* %ret, align 4, !dbg !5176
  %90 = load i32, i32* %ret, align 4, !dbg !5177
  %cmp137 = icmp eq i32 %90, 0, !dbg !5179
  br i1 %cmp137, label %if.then138, label %if.end140, !dbg !5180

if.then138:                                       ; preds = %if.then134
  %91 = load i32, i32* %irq, align 4, !dbg !5181
  %92 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5182
  %irq139 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %92, i32 0, i32 20, !dbg !5183
  store i32 %91, i32* %irq139, align 8, !dbg !5184
  br label %if.end140, !dbg !5182

if.end140:                                        ; preds = %if.then138, %if.then134
  br label %if.end141, !dbg !5185

if.end141:                                        ; preds = %if.end140, %if.end131
  %93 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5186
  %call142 = call i32 @ni_E_init(%struct.comedi_device* %93, i32 0, i32 1) #9, !dbg !5187
  store i32 %call142, i32* %ret, align 4, !dbg !5188
  %94 = load i32, i32* %ret, align 4, !dbg !5189
  %cmp143 = icmp slt i32 %94, 0, !dbg !5191
  br i1 %cmp143, label %if.then144, label %if.end145, !dbg !5192

if.then144:                                       ; preds = %if.end141
  %95 = load i32, i32* %ret, align 4, !dbg !5193
  store i32 %95, i32* %retval, align 4, !dbg !5194
  br label %return, !dbg !5194

if.end145:                                        ; preds = %if.end141
  %96 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5195
  %subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %96, i32 0, i32 16, !dbg !5196
  %97 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices, align 8, !dbg !5196
  %arrayidx146 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %97, i64 0, !dbg !5195
  %buf_change = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %arrayidx146, i32 0, i32 26, !dbg !5197
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*)* @pcimio_ai_change, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %buf_change, align 8, !dbg !5198
  %98 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5199
  %subdevices147 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %98, i32 0, i32 16, !dbg !5200
  %99 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices147, align 8, !dbg !5200
  %arrayidx148 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %99, i64 1, !dbg !5199
  %buf_change149 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %arrayidx148, i32 0, i32 26, !dbg !5201
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*)* @pcimio_ao_change, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %buf_change149, align 8, !dbg !5202
  %100 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5203
  %subdevices150 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %100, i32 0, i32 16, !dbg !5204
  %101 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices150, align 8, !dbg !5204
  %arrayidx151 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %101, i64 11, !dbg !5203
  %buf_change152 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %arrayidx151, i32 0, i32 26, !dbg !5205
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*)* @pcimio_gpct0_change, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %buf_change152, align 8, !dbg !5206
  %102 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5207
  %subdevices153 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %102, i32 0, i32 16, !dbg !5208
  %103 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices153, align 8, !dbg !5208
  %arrayidx154 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %103, i64 12, !dbg !5207
  %buf_change155 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %arrayidx154, i32 0, i32 26, !dbg !5209
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*)* @pcimio_gpct1_change, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %buf_change155, align 8, !dbg !5210
  %104 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5211
  %subdevices156 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %104, i32 0, i32 16, !dbg !5212
  %105 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices156, align 8, !dbg !5212
  %arrayidx157 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %105, i64 2, !dbg !5211
  %buf_change158 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %arrayidx157, i32 0, i32 26, !dbg !5213
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*)* @pcimio_dio_change, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %buf_change158, align 8, !dbg !5214
  store i32 0, i32* %retval, align 4, !dbg !5215
  br label %return, !dbg !5215

return:                                           ; preds = %if.end145, %if.then144, %if.then117, %if.then108, %if.then100, %if.then94, %if.then88, %if.then14, %if.then9, %if.then5, %if.then1
  %106 = load i32, i32* %retval, align 4, !dbg !5216
  ret i32 %106, !dbg !5216
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mio_common_detach(%struct.comedi_device* %dev) #2 !dbg !5217 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !5218, metadata !DIExpression()), !dbg !5219
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !5220, metadata !DIExpression()), !dbg !5221
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5222
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !5223
  %1 = load i8*, i8** %private, align 8, !dbg !5223
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !5222
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !5221
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5224
  %tobool = icmp ne %struct.ni_private* %3, null, !dbg !5224
  br i1 %tobool, label %if.then, label %if.end, !dbg !5226

if.then:                                          ; preds = %entry
  %4 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5227
  %counter_dev = getelementptr inbounds %struct.ni_private, %struct.ni_private* %4, i32 0, i32 19, !dbg !5228
  %5 = load %struct.ni_gpct_device*, %struct.ni_gpct_device** %counter_dev, align 8, !dbg !5228
  call void @ni_gpct_device_destroy(%struct.ni_gpct_device* %5) #9, !dbg !5229
  br label %if.end, !dbg !5229

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5230
}

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #1

; Function Attrs: noredzone
declare dso_local void @mite_free_ring(%struct.mite_ring*) #1

; Function Attrs: noredzone
declare dso_local void @mite_detach(%struct.mite*) #1

; Function Attrs: noredzone
declare dso_local void @iounmap(i8*) #1

; Function Attrs: noredzone
declare dso_local void @comedi_pci_disable(%struct.comedi_device*) #1

; Function Attrs: noredzone
declare dso_local void @ni_gpct_device_destroy(%struct.ni_gpct_device*) #1

; Function Attrs: noredzone
declare dso_local %struct.pci_dev* @comedi_to_pci_dev(%struct.comedi_device*) #1

; Function Attrs: noredzone
declare dso_local i32 @comedi_pci_enable(%struct.comedi_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_alloc_private(%struct.comedi_device* %dev) #2 !dbg !5231 {
entry:
  %lock.addr.i17 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i17, metadata !5232, metadata !DIExpression()), !dbg !5238
  %lock.addr.i15 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i15, metadata !5232, metadata !DIExpression()), !dbg !5241
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5232, metadata !DIExpression()), !dbg !5244
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  %.compoundliteral6 = alloca %struct.spinlock, align 1
  %.compoundliteral12 = alloca %struct.spinlock, align 1
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !5247, metadata !DIExpression()), !dbg !5248
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !5249, metadata !DIExpression()), !dbg !5250
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5251
  %call = call i8* @comedi_alloc_devpriv(%struct.comedi_device* %0, i64 19888) #9, !dbg !5252
  %1 = bitcast i8* %call to %struct.ni_private*, !dbg !5252
  store %struct.ni_private* %1, %struct.ni_private** %devpriv, align 8, !dbg !5253
  %2 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5254
  %tobool = icmp ne %struct.ni_private* %2, null, !dbg !5254
  br i1 %tobool, label %if.end, label %if.then, !dbg !5256

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !5257
  br label %return, !dbg !5257

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !5258

do.body:                                          ; preds = %if.end
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5259
  %window_lock = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 5, !dbg !5259
  store %struct.spinlock* %window_lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5260
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !5261
  %rlock.i = bitcast %union.anon.3* %5 to %struct.raw_spinlock*, !dbg !5261
  %6 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5259
  %window_lock2 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %6, i32 0, i32 5, !dbg !5259
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !5259
  %rlock = bitcast %union.anon.3* %7 to %struct.raw_spinlock*, !dbg !5259
  %8 = bitcast %struct.spinlock* %window_lock2 to i8*, !dbg !5259
  %9 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !5259
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 1 %9, i64 0, i1 false), !dbg !5259
  br label %do.end, !dbg !5259

do.end:                                           ; preds = %do.body
  br label %do.body3, !dbg !5262

do.body3:                                         ; preds = %do.end
  %10 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5263
  %soft_reg_copy_lock = getelementptr inbounds %struct.ni_private, %struct.ni_private* %10, i32 0, i32 6, !dbg !5263
  store %struct.spinlock* %soft_reg_copy_lock, %struct.spinlock** %lock.addr.i17, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i17, align 8, !dbg !5264
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !5265
  %rlock.i18 = bitcast %union.anon.3* %12 to %struct.raw_spinlock*, !dbg !5265
  %13 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5263
  %soft_reg_copy_lock5 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %13, i32 0, i32 6, !dbg !5263
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral6, i32 0, i32 0, !dbg !5263
  %rlock7 = bitcast %union.anon.3* %14 to %struct.raw_spinlock*, !dbg !5263
  %15 = bitcast %struct.spinlock* %soft_reg_copy_lock5 to i8*, !dbg !5263
  %16 = bitcast %struct.spinlock* %.compoundliteral6 to i8*, !dbg !5263
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 1 %16, i64 0, i1 false), !dbg !5263
  br label %do.end8, !dbg !5263

do.end8:                                          ; preds = %do.body3
  br label %do.body9, !dbg !5266

do.body9:                                         ; preds = %do.end8
  %17 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5267
  %mite_channel_lock = getelementptr inbounds %struct.ni_private, %struct.ni_private* %17, i32 0, i32 7, !dbg !5267
  store %struct.spinlock* %mite_channel_lock, %struct.spinlock** %lock.addr.i15, align 8
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i15, align 8, !dbg !5268
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !5269
  %rlock.i16 = bitcast %union.anon.3* %19 to %struct.raw_spinlock*, !dbg !5269
  %20 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5267
  %mite_channel_lock11 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %20, i32 0, i32 7, !dbg !5267
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral12, i32 0, i32 0, !dbg !5267
  %rlock13 = bitcast %union.anon.3* %21 to %struct.raw_spinlock*, !dbg !5267
  %22 = bitcast %struct.spinlock* %mite_channel_lock11 to i8*, !dbg !5267
  %23 = bitcast %struct.spinlock* %.compoundliteral12 to i8*, !dbg !5267
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 1 %23, i64 0, i1 false), !dbg !5267
  br label %do.end14, !dbg !5267

do.end14:                                         ; preds = %do.body9
  store i32 0, i32* %retval, align 4, !dbg !5270
  br label %return, !dbg !5270

return:                                           ; preds = %do.end14, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !5271
  ret i32 %24, !dbg !5271
}

; Function Attrs: noredzone
declare dso_local %struct.mite* @mite_attach(%struct.comedi_device*, i1 zeroext) #1

; Function Attrs: noredzone
declare dso_local %struct.mite_ring* @mite_alloc_ring(%struct.mite*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @m_series_init_eeprom_buffer(%struct.comedi_device* %dev) #2 !dbg !4329 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %mite = alloca %struct.mite*, align 8
  %daq_phys_addr = alloca i64, align 8
  %old_iodwbsr_bits = alloca i32, align 4
  %old_iodwbsr1_bits = alloca i32, align 4
  %old_iodwcr1_bits = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !5272, metadata !DIExpression()), !dbg !5273
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !5274, metadata !DIExpression()), !dbg !5275
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5276
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !5277
  %1 = load i8*, i8** %private, align 8, !dbg !5277
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !5276
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !5275
  call void @llvm.dbg.declare(metadata %struct.mite** %mite, metadata !5278, metadata !DIExpression()), !dbg !5279
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5280
  %mite1 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 42, !dbg !5281
  %4 = load %struct.mite*, %struct.mite** %mite1, align 8, !dbg !5281
  store %struct.mite* %4, %struct.mite** %mite, align 8, !dbg !5279
  call void @llvm.dbg.declare(metadata i64* %daq_phys_addr, metadata !5282, metadata !DIExpression()), !dbg !5283
  call void @llvm.dbg.declare(metadata i32* %old_iodwbsr_bits, metadata !5284, metadata !DIExpression()), !dbg !5285
  call void @llvm.dbg.declare(metadata i32* %old_iodwbsr1_bits, metadata !5286, metadata !DIExpression()), !dbg !5287
  call void @llvm.dbg.declare(metadata i32* %old_iodwcr1_bits, metadata !5288, metadata !DIExpression()), !dbg !5289
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5290, metadata !DIExpression()), !dbg !5291
  %5 = load %struct.mite*, %struct.mite** %mite, align 8, !dbg !5292
  %pcidev = getelementptr inbounds %struct.mite, %struct.mite* %5, i32 0, i32 0, !dbg !5292
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pcidev, align 8, !dbg !5292
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 44, !dbg !5292
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 1, !dbg !5292
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0, !dbg !5292
  %7 = load i64, i64* %start, align 8, !dbg !5292
  store i64 %7, i64* %daq_phys_addr, align 8, !dbg !5293
  %8 = load %struct.mite*, %struct.mite** %mite, align 8, !dbg !5294
  %mmio = getelementptr inbounds %struct.mite, %struct.mite* %8, i32 0, i32 1, !dbg !5295
  %9 = load i8*, i8** %mmio, align 8, !dbg !5295
  %add.ptr = getelementptr i8, i8* %9, i64 192, !dbg !5296
  %call = call i32 @readl(i8* %add.ptr) #9, !dbg !5297
  store i32 %call, i32* %old_iodwbsr_bits, align 4, !dbg !5298
  %10 = load %struct.mite*, %struct.mite** %mite, align 8, !dbg !5299
  %mmio2 = getelementptr inbounds %struct.mite, %struct.mite* %10, i32 0, i32 1, !dbg !5300
  %11 = load i8*, i8** %mmio2, align 8, !dbg !5300
  %add.ptr3 = getelementptr i8, i8* %11, i64 196, !dbg !5301
  %call4 = call i32 @readl(i8* %add.ptr3) #9, !dbg !5302
  store i32 %call4, i32* %old_iodwbsr1_bits, align 4, !dbg !5303
  %12 = load %struct.mite*, %struct.mite** %mite, align 8, !dbg !5304
  %mmio5 = getelementptr inbounds %struct.mite, %struct.mite* %12, i32 0, i32 1, !dbg !5305
  %13 = load i8*, i8** %mmio5, align 8, !dbg !5305
  %add.ptr6 = getelementptr i8, i8* %13, i64 244, !dbg !5306
  %call7 = call i32 @readl(i8* %add.ptr6) #9, !dbg !5307
  store i32 %call7, i32* %old_iodwcr1_bits, align 4, !dbg !5308
  %14 = load %struct.mite*, %struct.mite** %mite, align 8, !dbg !5309
  %mmio8 = getelementptr inbounds %struct.mite, %struct.mite* %14, i32 0, i32 1, !dbg !5310
  %15 = load i8*, i8** %mmio8, align 8, !dbg !5310
  %add.ptr9 = getelementptr i8, i8* %15, i64 192, !dbg !5311
  call void @writel(i32 0, i8* %add.ptr9) #9, !dbg !5312
  %16 = load i64, i64* %daq_phys_addr, align 8, !dbg !5313
  %or = or i64 138, %16, !dbg !5314
  %conv = trunc i64 %or to i32, !dbg !5315
  %17 = load %struct.mite*, %struct.mite** %mite, align 8, !dbg !5316
  %mmio10 = getelementptr inbounds %struct.mite, %struct.mite* %17, i32 0, i32 1, !dbg !5317
  %18 = load i8*, i8** %mmio10, align 8, !dbg !5317
  %add.ptr11 = getelementptr i8, i8* %18, i64 196, !dbg !5318
  call void @writel(i32 %conv, i8* %add.ptr11) #9, !dbg !5319
  %19 = load i32, i32* %old_iodwcr1_bits, align 4, !dbg !5320
  %or12 = or i32 1, %19, !dbg !5321
  %20 = load %struct.mite*, %struct.mite** %mite, align 8, !dbg !5322
  %mmio13 = getelementptr inbounds %struct.mite, %struct.mite* %20, i32 0, i32 1, !dbg !5323
  %21 = load i8*, i8** %mmio13, align 8, !dbg !5323
  %add.ptr14 = getelementptr i8, i8* %21, i64 244, !dbg !5324
  call void @writel(i32 %or12, i8* %add.ptr14) #9, !dbg !5325
  %22 = load %struct.mite*, %struct.mite** %mite, align 8, !dbg !5326
  %mmio15 = getelementptr inbounds %struct.mite, %struct.mite* %22, i32 0, i32 1, !dbg !5327
  %23 = load i8*, i8** %mmio15, align 8, !dbg !5327
  %add.ptr16 = getelementptr i8, i8* %23, i64 48, !dbg !5328
  call void @writel(i32 15, i8* %add.ptr16) #9, !dbg !5329
  store i32 0, i32* %i, align 4, !dbg !5330
  br label %for.cond, !dbg !5332

for.cond:                                         ; preds = %for.inc, %entry
  %24 = load i32, i32* %i, align 4, !dbg !5333
  %cmp = icmp slt i32 %24, 1024, !dbg !5335
  br i1 %cmp, label %for.body, label %for.end, !dbg !5336

for.body:                                         ; preds = %for.cond
  %25 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5337
  %26 = load i32, i32* %i, align 4, !dbg !5338
  %add = add i32 1024, %26, !dbg !5339
  %call18 = call i32 @ni_readb(%struct.comedi_device* %25, i32 %add) #9, !dbg !5340
  %conv19 = trunc i32 %call18 to i8, !dbg !5340
  %27 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5341
  %eeprom_buffer = getelementptr inbounds %struct.ni_private, %struct.ni_private* %27, i32 0, i32 41, !dbg !5342
  %28 = load i32, i32* %i, align 4, !dbg !5343
  %idxprom = sext i32 %28 to i64, !dbg !5341
  %arrayidx20 = getelementptr [1024 x i8], [1024 x i8]* %eeprom_buffer, i64 0, i64 %idxprom, !dbg !5341
  store i8 %conv19, i8* %arrayidx20, align 1, !dbg !5344
  br label %for.inc, !dbg !5341

for.inc:                                          ; preds = %for.body
  %29 = load i32, i32* %i, align 4, !dbg !5345
  %inc = add i32 %29, 1, !dbg !5345
  store i32 %inc, i32* %i, align 4, !dbg !5345
  br label %for.cond, !dbg !5346, !llvm.loop !5347

for.end:                                          ; preds = %for.cond
  %30 = load i32, i32* %old_iodwbsr1_bits, align 4, !dbg !5349
  %31 = load %struct.mite*, %struct.mite** %mite, align 8, !dbg !5350
  %mmio21 = getelementptr inbounds %struct.mite, %struct.mite* %31, i32 0, i32 1, !dbg !5351
  %32 = load i8*, i8** %mmio21, align 8, !dbg !5351
  %add.ptr22 = getelementptr i8, i8* %32, i64 196, !dbg !5352
  call void @writel(i32 %30, i8* %add.ptr22) #9, !dbg !5353
  %33 = load i32, i32* %old_iodwbsr_bits, align 4, !dbg !5354
  %34 = load %struct.mite*, %struct.mite** %mite, align 8, !dbg !5355
  %mmio23 = getelementptr inbounds %struct.mite, %struct.mite* %34, i32 0, i32 1, !dbg !5356
  %35 = load i8*, i8** %mmio23, align 8, !dbg !5356
  %add.ptr24 = getelementptr i8, i8* %35, i64 192, !dbg !5357
  call void @writel(i32 %33, i8* %add.ptr24) #9, !dbg !5358
  %36 = load i32, i32* %old_iodwcr1_bits, align 4, !dbg !5359
  %37 = load %struct.mite*, %struct.mite** %mite, align 8, !dbg !5360
  %mmio25 = getelementptr inbounds %struct.mite, %struct.mite* %37, i32 0, i32 1, !dbg !5361
  %38 = load i8*, i8** %mmio25, align 8, !dbg !5361
  %add.ptr26 = getelementptr i8, i8* %38, i64 244, !dbg !5362
  call void @writel(i32 %36, i8* %add.ptr26) #9, !dbg !5363
  %39 = load %struct.mite*, %struct.mite** %mite, align 8, !dbg !5364
  %mmio27 = getelementptr inbounds %struct.mite, %struct.mite* %39, i32 0, i32 1, !dbg !5365
  %40 = load i8*, i8** %mmio27, align 8, !dbg !5365
  %add.ptr28 = getelementptr i8, i8* %40, i64 48, !dbg !5366
  call void @writel(i32 0, i8* %add.ptr28) #9, !dbg !5367
  ret void, !dbg !5368
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @init_6143(%struct.comedi_device* %dev) #2 !dbg !5369 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %board = alloca %struct.ni_board_struct*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !5370, metadata !DIExpression()), !dbg !5371
  call void @llvm.dbg.declare(metadata %struct.ni_board_struct** %board, metadata !5372, metadata !DIExpression()), !dbg !5373
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5374
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !5375
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !5375
  %2 = bitcast i8* %1 to %struct.ni_board_struct*, !dbg !5374
  store %struct.ni_board_struct* %2, %struct.ni_board_struct** %board, align 8, !dbg !5373
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !5376, metadata !DIExpression()), !dbg !5377
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5378
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !5379
  %4 = load i8*, i8** %private, align 8, !dbg !5379
  %5 = bitcast i8* %4 to %struct.ni_private*, !dbg !5378
  store %struct.ni_private* %5, %struct.ni_private** %devpriv, align 8, !dbg !5377
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5380
  call void @ni_stc_writew(%struct.comedi_device* %6, i32 0, i32 59) #9, !dbg !5381
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5382
  call void @ni_writeb(%struct.comedi_device* %7, i32 0, i32 25) #9, !dbg !5383
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5384
  call void @ni_writeb(%struct.comedi_device* %8, i32 128, i32 31) #9, !dbg !5385
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5386
  call void @ni_writeb(%struct.comedi_device* %9, i32 0, i32 29) #9, !dbg !5387
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5388
  %11 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5389
  %ai_fifo_depth = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %11, i32 0, i32 6, !dbg !5390
  %12 = load i32, i32* %ai_fifo_depth, align 8, !dbg !5390
  %div = sdiv i32 %12, 2, !dbg !5391
  call void @ni_writel(%struct.comedi_device* %10, i32 %div, i32 132) #9, !dbg !5392
  %13 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5393
  %ai_calib_source_enabled = getelementptr inbounds %struct.ni_private, %struct.ni_private* %13, i32 0, i32 4, !dbg !5394
  store i32 0, i32* %ai_calib_source_enabled, align 4, !dbg !5395
  %14 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5396
  %15 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5397
  %ai_calib_source = getelementptr inbounds %struct.ni_private, %struct.ni_private* %15, i32 0, i32 3, !dbg !5398
  %16 = load i32, i32* %ai_calib_source, align 8, !dbg !5398
  %conv = zext i32 %16 to i64, !dbg !5397
  %or = or i64 %conv, 16384, !dbg !5399
  %conv1 = trunc i64 %or to i32, !dbg !5397
  call void @ni_writew(%struct.comedi_device* %14, i32 %conv1, i32 66) #9, !dbg !5400
  %17 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5401
  %18 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5402
  %ai_calib_source2 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %18, i32 0, i32 3, !dbg !5403
  %19 = load i32, i32* %ai_calib_source2, align 8, !dbg !5403
  call void @ni_writew(%struct.comedi_device* %17, i32 %19, i32 66) #9, !dbg !5404
  ret void, !dbg !5405
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #2 !dbg !5406 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !5414, metadata !DIExpression()), !dbg !5415
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !5416, metadata !DIExpression()), !dbg !5417
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !5418, metadata !DIExpression()), !dbg !5419
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5420, metadata !DIExpression()), !dbg !5421
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !5422, metadata !DIExpression()), !dbg !5423
  %0 = load i32, i32* %irq.addr, align 4, !dbg !5424
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !5425
  %2 = load i64, i64* %flags.addr, align 8, !dbg !5426
  %3 = load i8*, i8** %name.addr, align 8, !dbg !5427
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !5428
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #9, !dbg !5429
  ret i32 %call, !dbg !5430
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_E_interrupt(i32 %irq, i8* %d) #2 !dbg !5431 {
entry:
  %lock.addr.i92 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i92, metadata !5432, metadata !DIExpression()), !dbg !5436
  %flags.addr.i93 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i93, metadata !5440, metadata !DIExpression()), !dbg !5441
  %tmp.i94 = alloca i32, align 4
  %tmp8.i95 = alloca i32, align 4
  %lock.addr.i90 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i90, metadata !5232, metadata !DIExpression()), !dbg !5442
  %lock.addr.i88 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i88, metadata !5432, metadata !DIExpression()), !dbg !5449
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5440, metadata !DIExpression()), !dbg !5451
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5232, metadata !DIExpression()), !dbg !5452
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %d.addr = alloca i8*, align 8
  %dev = alloca %struct.comedi_device*, align 8
  %s_ai = alloca %struct.comedi_subdevice*, align 8
  %s_ao = alloca %struct.comedi_subdevice*, align 8
  %a_status = alloca i16, align 2
  %b_status = alloca i16, align 2
  %flags = alloca i64, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %flags_too = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %__dummy228 = alloca i64, align 8
  %tmp31 = alloca i32, align 4
  %__dummy35 = alloca i64, align 8
  %__dummy236 = alloca i64, align 8
  %tmp39 = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !5459, metadata !DIExpression()), !dbg !5460
  store i8* %d, i8** %d.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %d.addr, metadata !5461, metadata !DIExpression()), !dbg !5462
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !5463, metadata !DIExpression()), !dbg !5464
  %0 = load i8*, i8** %d.addr, align 8, !dbg !5465
  %1 = bitcast i8* %0 to %struct.comedi_device*, !dbg !5465
  store %struct.comedi_device* %1, %struct.comedi_device** %dev, align 8, !dbg !5464
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s_ai, metadata !5466, metadata !DIExpression()), !dbg !5467
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5468
  %read_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %2, i32 0, i32 21, !dbg !5469
  %3 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %read_subdev, align 8, !dbg !5469
  store %struct.comedi_subdevice* %3, %struct.comedi_subdevice** %s_ai, align 8, !dbg !5467
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s_ao, metadata !5470, metadata !DIExpression()), !dbg !5471
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5472
  %write_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %4, i32 0, i32 22, !dbg !5473
  %5 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %write_subdev, align 8, !dbg !5473
  store %struct.comedi_subdevice* %5, %struct.comedi_subdevice** %s_ao, align 8, !dbg !5471
  call void @llvm.dbg.declare(metadata i16* %a_status, metadata !5474, metadata !DIExpression()), !dbg !5475
  call void @llvm.dbg.declare(metadata i16* %b_status, metadata !5476, metadata !DIExpression()), !dbg !5477
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5478, metadata !DIExpression()), !dbg !5479
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !5480, metadata !DIExpression()), !dbg !5481
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5482
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %6, i32 0, i32 3, !dbg !5483
  %7 = load i8*, i8** %private, align 8, !dbg !5483
  %8 = bitcast i8* %7 to %struct.ni_private*, !dbg !5482
  store %struct.ni_private* %8, %struct.ni_private** %devpriv, align 8, !dbg !5481
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5484
  %attached = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %9, i32 0, i32 10, !dbg !5486
  %bf.load = load i8, i8* %attached, align 8, !dbg !5486
  %bf.clear = and i8 %bf.load, 1, !dbg !5486
  %bf.cast = zext i8 %bf.clear to i32, !dbg !5486
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5484
  br i1 %tobool, label %if.end, label %if.then, !dbg !5487

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5488
  br label %return, !dbg !5488

if.end:                                           ; preds = %entry
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5489, !srcloc !5490
  br label %do.body, !dbg !5491

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !5492

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5493, metadata !DIExpression()), !dbg !5495
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5496, metadata !DIExpression()), !dbg !5495
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5495
  %conv = zext i1 %cmp to i32, !dbg !5495
  store i32 1, i32* %tmp, align 4, !dbg !5495
  %10 = load i32, i32* %tmp, align 4, !dbg !5495
  br label %do.body2, !dbg !5497

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !5498

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !5499

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !5501, metadata !DIExpression()), !dbg !5504
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !5505, metadata !DIExpression()), !dbg !5504
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !5504
  %conv8 = zext i1 %cmp7 to i32, !dbg !5504
  store i32 1, i32* %tmp9, align 4, !dbg !5504
  %11 = load i32, i32* %tmp9, align 4, !dbg !5504
  %call = call i64 @arch_local_irq_save() #9, !dbg !5506
  store i64 %call, i64* %flags, align 8, !dbg !5506
  br label %do.end, !dbg !5506

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !5499

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !5498

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5507, !srcloc !5508
  br label %do.body12, !dbg !5507

do.body12:                                        ; preds = %do.body11
  %12 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5509
  %spinlock = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %12, i32 0, i32 11, !dbg !5509
  store %struct.spinlock* %spinlock, %struct.spinlock** %lock.addr.i, align 8
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5510
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !5511
  %rlock.i = bitcast %union.anon.3* %14 to %struct.raw_spinlock*, !dbg !5511
  br label %do.end14, !dbg !5509

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !5507

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !5498

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !5497

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !5492

do.end18:                                         ; preds = %do.end17
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5512
  %call19 = call i32 @ni_stc_readw(%struct.comedi_device* %15, i32 2) #9, !dbg !5513
  %conv20 = trunc i32 %call19 to i16, !dbg !5513
  store i16 %conv20, i16* %a_status, align 2, !dbg !5514
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5515
  %call21 = call i32 @ni_stc_readw(%struct.comedi_device* %16, i32 3) #9, !dbg !5516
  %conv22 = trunc i32 %call21 to i16, !dbg !5516
  store i16 %conv22, i16* %b_status, align 2, !dbg !5517
  %17 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5518
  %mite = getelementptr inbounds %struct.ni_private, %struct.ni_private* %17, i32 0, i32 42, !dbg !5519
  %18 = load %struct.mite*, %struct.mite** %mite, align 8, !dbg !5519
  %tobool23 = icmp ne %struct.mite* %18, null, !dbg !5518
  br i1 %tobool23, label %if.then24, label %if.end63, !dbg !5520

if.then24:                                        ; preds = %do.end18
  call void @llvm.dbg.declare(metadata i64* %flags_too, metadata !5521, metadata !DIExpression()), !dbg !5522
  br label %do.body25, !dbg !5523

do.body25:                                        ; preds = %if.then24
  br label %do.body26, !dbg !5524

do.body26:                                        ; preds = %do.body25
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !5525, metadata !DIExpression()), !dbg !5527
  call void @llvm.dbg.declare(metadata i64* %__dummy228, metadata !5528, metadata !DIExpression()), !dbg !5527
  %cmp29 = icmp eq i64* %__dummy27, %__dummy228, !dbg !5527
  %conv30 = zext i1 %cmp29 to i32, !dbg !5527
  store i32 1, i32* %tmp31, align 4, !dbg !5527
  %19 = load i32, i32* %tmp31, align 4, !dbg !5527
  br label %do.body32, !dbg !5529

do.body32:                                        ; preds = %do.body26
  br label %do.body33, !dbg !5530

do.body33:                                        ; preds = %do.body32
  br label %do.body34, !dbg !5531

do.body34:                                        ; preds = %do.body33
  call void @llvm.dbg.declare(metadata i64* %__dummy35, metadata !5533, metadata !DIExpression()), !dbg !5536
  call void @llvm.dbg.declare(metadata i64* %__dummy236, metadata !5537, metadata !DIExpression()), !dbg !5536
  %cmp37 = icmp eq i64* %__dummy35, %__dummy236, !dbg !5536
  %conv38 = zext i1 %cmp37 to i32, !dbg !5536
  store i32 1, i32* %tmp39, align 4, !dbg !5536
  %20 = load i32, i32* %tmp39, align 4, !dbg !5536
  %call40 = call i64 @arch_local_irq_save() #9, !dbg !5538
  store i64 %call40, i64* %flags_too, align 8, !dbg !5538
  br label %do.end41, !dbg !5538

do.end41:                                         ; preds = %do.body34
  br label %do.end42, !dbg !5531

do.end42:                                         ; preds = %do.end41
  br label %do.body43, !dbg !5530

do.body43:                                        ; preds = %do.end42
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5539, !srcloc !5540
  br label %do.body44, !dbg !5539

do.body44:                                        ; preds = %do.body43
  %21 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5541
  %mite_channel_lock = getelementptr inbounds %struct.ni_private, %struct.ni_private* %21, i32 0, i32 7, !dbg !5541
  store %struct.spinlock* %mite_channel_lock, %struct.spinlock** %lock.addr.i90, align 8
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i90, align 8, !dbg !5542
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !5543
  %rlock.i91 = bitcast %union.anon.3* %23 to %struct.raw_spinlock*, !dbg !5543
  br label %do.end46, !dbg !5541

do.end46:                                         ; preds = %do.body44
  br label %do.end47, !dbg !5539

do.end47:                                         ; preds = %do.end46
  br label %do.end48, !dbg !5530

do.end48:                                         ; preds = %do.end47
  br label %do.end49, !dbg !5529

do.end49:                                         ; preds = %do.end48
  br label %do.end50, !dbg !5524

do.end50:                                         ; preds = %do.end49
  %24 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_ai, align 8, !dbg !5544
  %tobool51 = icmp ne %struct.comedi_subdevice* %24, null, !dbg !5544
  br i1 %tobool51, label %land.lhs.true, label %if.end55, !dbg !5546

land.lhs.true:                                    ; preds = %do.end50
  %25 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5547
  %ai_mite_chan = getelementptr inbounds %struct.ni_private, %struct.ni_private* %25, i32 0, i32 43, !dbg !5548
  %26 = load %struct.mite_channel*, %struct.mite_channel** %ai_mite_chan, align 8, !dbg !5548
  %tobool52 = icmp ne %struct.mite_channel* %26, null, !dbg !5547
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !5549

if.then53:                                        ; preds = %land.lhs.true
  %27 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5550
  %ai_mite_chan54 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %27, i32 0, i32 43, !dbg !5551
  %28 = load %struct.mite_channel*, %struct.mite_channel** %ai_mite_chan54, align 8, !dbg !5551
  %29 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_ai, align 8, !dbg !5552
  call void @mite_ack_linkc(%struct.mite_channel* %28, %struct.comedi_subdevice* %29, i1 zeroext false) #9, !dbg !5553
  br label %if.end55, !dbg !5553

if.end55:                                         ; preds = %if.then53, %land.lhs.true, %do.end50
  %30 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_ao, align 8, !dbg !5554
  %tobool56 = icmp ne %struct.comedi_subdevice* %30, null, !dbg !5554
  br i1 %tobool56, label %land.lhs.true57, label %if.end61, !dbg !5556

land.lhs.true57:                                  ; preds = %if.end55
  %31 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5557
  %ao_mite_chan = getelementptr inbounds %struct.ni_private, %struct.ni_private* %31, i32 0, i32 44, !dbg !5558
  %32 = load %struct.mite_channel*, %struct.mite_channel** %ao_mite_chan, align 8, !dbg !5558
  %tobool58 = icmp ne %struct.mite_channel* %32, null, !dbg !5557
  br i1 %tobool58, label %if.then59, label %if.end61, !dbg !5559

if.then59:                                        ; preds = %land.lhs.true57
  %33 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5560
  %ao_mite_chan60 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %33, i32 0, i32 44, !dbg !5561
  %34 = load %struct.mite_channel*, %struct.mite_channel** %ao_mite_chan60, align 8, !dbg !5561
  %35 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_ao, align 8, !dbg !5562
  call void @mite_ack_linkc(%struct.mite_channel* %34, %struct.comedi_subdevice* %35, i1 zeroext false) #9, !dbg !5563
  br label %if.end61, !dbg !5563

if.end61:                                         ; preds = %if.then59, %land.lhs.true57, %if.end55
  %36 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5564
  %mite_channel_lock62 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %36, i32 0, i32 7, !dbg !5565
  %37 = load i64, i64* %flags_too, align 8, !dbg !5566
  store %struct.spinlock* %mite_channel_lock62, %struct.spinlock** %lock.addr.i92, align 8
  store i64 %37, i64* %flags.addr.i93, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !5570
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !5570
  store i32 1, i32* %tmp.i94, align 4, !dbg !5570
  %38 = load i32, i32* %tmp.i94, align 4, !dbg !5570
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !5577
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !5577
  store i32 1, i32* %tmp8.i95, align 4, !dbg !5577
  %39 = load i32, i32* %tmp8.i95, align 4, !dbg !5577
  %40 = load i64, i64* %flags.addr.i93, align 8, !dbg !5579
  call void @arch_local_irq_restore(i64 %40) #10, !dbg !5579
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5580, !srcloc !5582
  %41 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i92, align 8, !dbg !5583
  %42 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %41, i32 0, i32 0, !dbg !5583
  %rlock.i96 = bitcast %union.anon.3* %42 to %struct.raw_spinlock*, !dbg !5583
  br label %if.end63, !dbg !5585

if.end63:                                         ; preds = %if.end61, %do.end18
  %43 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5586
  %44 = load i16, i16* %a_status, align 2, !dbg !5587
  call void @ack_a_interrupt(%struct.comedi_device* %43, i16 zeroext %44) #9, !dbg !5588
  %45 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5589
  %46 = load i16, i16* %b_status, align 2, !dbg !5590
  call void @ack_b_interrupt(%struct.comedi_device* %45, i16 zeroext %46) #9, !dbg !5591
  %47 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_ai, align 8, !dbg !5592
  %tobool64 = icmp ne %struct.comedi_subdevice* %47, null, !dbg !5592
  br i1 %tobool64, label %if.then65, label %if.end71, !dbg !5594

if.then65:                                        ; preds = %if.end63
  %48 = load i16, i16* %a_status, align 2, !dbg !5595
  %conv66 = zext i16 %48 to i64, !dbg !5595
  %and = and i64 %conv66, 32768, !dbg !5598
  %tobool67 = icmp ne i64 %and, 0, !dbg !5598
  br i1 %tobool67, label %if.then68, label %if.end69, !dbg !5599

if.then68:                                        ; preds = %if.then65
  %49 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5600
  %50 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_ai, align 8, !dbg !5601
  %51 = load i16, i16* %a_status, align 2, !dbg !5602
  call void @handle_a_interrupt(%struct.comedi_device* %49, %struct.comedi_subdevice* %50, i16 zeroext %51) #9, !dbg !5603
  br label %if.end69, !dbg !5603

if.end69:                                         ; preds = %if.then68, %if.then65
  %52 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5604
  %53 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_ai, align 8, !dbg !5605
  %call70 = call i32 @comedi_handle_events(%struct.comedi_device* %52, %struct.comedi_subdevice* %53) #9, !dbg !5606
  br label %if.end71, !dbg !5607

if.end71:                                         ; preds = %if.end69, %if.end63
  %54 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_ao, align 8, !dbg !5608
  %tobool72 = icmp ne %struct.comedi_subdevice* %54, null, !dbg !5608
  br i1 %tobool72, label %if.then73, label %if.end80, !dbg !5610

if.then73:                                        ; preds = %if.end71
  %55 = load i16, i16* %b_status, align 2, !dbg !5611
  %conv74 = zext i16 %55 to i64, !dbg !5611
  %and75 = and i64 %conv74, 32768, !dbg !5614
  %tobool76 = icmp ne i64 %and75, 0, !dbg !5614
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !5615

if.then77:                                        ; preds = %if.then73
  %56 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5616
  %57 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_ao, align 8, !dbg !5617
  %58 = load i16, i16* %b_status, align 2, !dbg !5618
  call void @handle_b_interrupt(%struct.comedi_device* %56, %struct.comedi_subdevice* %57, i16 zeroext %58) #9, !dbg !5619
  br label %if.end78, !dbg !5619

if.end78:                                         ; preds = %if.then77, %if.then73
  %59 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5620
  %60 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_ao, align 8, !dbg !5621
  %call79 = call i32 @comedi_handle_events(%struct.comedi_device* %59, %struct.comedi_subdevice* %60) #9, !dbg !5622
  br label %if.end80, !dbg !5623

if.end80:                                         ; preds = %if.end78, %if.end71
  %61 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5624
  call void @handle_gpct_interrupt(%struct.comedi_device* %61, i16 zeroext 0) #9, !dbg !5625
  %62 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5626
  call void @handle_gpct_interrupt(%struct.comedi_device* %62, i16 zeroext 1) #9, !dbg !5627
  %63 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5628
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %63, i32 0, i32 50, !dbg !5630
  %bf.load81 = load i16, i16* %is_m_series, align 8, !dbg !5630
  %bf.clear82 = and i16 %bf.load81, 1, !dbg !5630
  %bf.cast83 = zext i16 %bf.clear82 to i32, !dbg !5630
  %tobool84 = icmp ne i32 %bf.cast83, 0, !dbg !5628
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !5631

if.then85:                                        ; preds = %if.end80
  %64 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5632
  call void @handle_cdio_interrupt(%struct.comedi_device* %64) #9, !dbg !5633
  br label %if.end86, !dbg !5633

if.end86:                                         ; preds = %if.then85, %if.end80
  %65 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5634
  %spinlock87 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %65, i32 0, i32 11, !dbg !5635
  %66 = load i64, i64* %flags, align 8, !dbg !5636
  store %struct.spinlock* %spinlock87, %struct.spinlock** %lock.addr.i88, align 8
  store i64 %66, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !5637
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !5637
  store i32 1, i32* %tmp.i, align 4, !dbg !5637
  %67 = load i32, i32* %tmp.i, align 4, !dbg !5637
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !5638
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !5638
  store i32 1, i32* %tmp8.i, align 4, !dbg !5638
  %68 = load i32, i32* %tmp8.i, align 4, !dbg !5638
  %69 = load i64, i64* %flags.addr.i, align 8, !dbg !5639
  call void @arch_local_irq_restore(i64 %69) #10, !dbg !5639
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5640, !srcloc !5582
  %70 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i88, align 8, !dbg !5641
  %71 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %70, i32 0, i32 0, !dbg !5641
  %rlock.i89 = bitcast %union.anon.3* %71 to %struct.raw_spinlock*, !dbg !5641
  store i32 1, i32* %retval, align 4, !dbg !5642
  br label %return, !dbg !5642

return:                                           ; preds = %if.end86, %if.then
  %72 = load i32, i32* %retval, align 4, !dbg !5643
  ret i32 %72, !dbg !5643
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_E_init(%struct.comedi_device* %dev, i32 %interrupt_pin, i32 %irq_polarity) #2 !dbg !5644 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %interrupt_pin.addr = alloca i32, align 4
  %irq_polarity.addr = alloca i32, align 4
  %board = alloca %struct.ni_board_struct*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %dev_family = alloca i8*, align 8
  %gpct = alloca %struct.ni_gpct*, align 8
  %channel = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !5645, metadata !DIExpression()), !dbg !5646
  store i32 %interrupt_pin, i32* %interrupt_pin.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %interrupt_pin.addr, metadata !5647, metadata !DIExpression()), !dbg !5648
  store i32 %irq_polarity, i32* %irq_polarity.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq_polarity.addr, metadata !5649, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.declare(metadata %struct.ni_board_struct** %board, metadata !5651, metadata !DIExpression()), !dbg !5652
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5653
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !5654
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !5654
  %2 = bitcast i8* %1 to %struct.ni_board_struct*, !dbg !5653
  store %struct.ni_board_struct* %2, %struct.ni_board_struct** %board, align 8, !dbg !5652
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !5655, metadata !DIExpression()), !dbg !5656
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5657
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !5658
  %4 = load i8*, i8** %private, align 8, !dbg !5658
  %5 = bitcast i8* %4 to %struct.ni_private*, !dbg !5657
  store %struct.ni_private* %5, %struct.ni_private** %devpriv, align 8, !dbg !5656
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !5659, metadata !DIExpression()), !dbg !5660
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5661, metadata !DIExpression()), !dbg !5662
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5663, metadata !DIExpression()), !dbg !5664
  call void @llvm.dbg.declare(metadata i8** %dev_family, metadata !5665, metadata !DIExpression()), !dbg !5666
  %6 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5667
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %6, i32 0, i32 50, !dbg !5668
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !5668
  %bf.clear = and i16 %bf.load, 1, !dbg !5668
  %bf.cast = zext i16 %bf.clear to i32, !dbg !5668
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5667
  %7 = zext i1 %tobool to i64, !dbg !5667
  %cond = select i1 %tobool, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.77, i64 0, i64 0), !dbg !5667
  store i8* %cond, i8** %dev_family, align 8, !dbg !5666
  %8 = load i8*, i8** %dev_family, align 8, !dbg !5669
  %9 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5671
  %name = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %9, i32 0, i32 0, !dbg !5672
  %10 = load i8*, i8** %name, align 8, !dbg !5672
  %11 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5673
  %alt_route_name = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %11, i32 0, i32 1, !dbg !5674
  %12 = load i8*, i8** %alt_route_name, align 8, !dbg !5674
  %13 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5675
  %routing_tables = getelementptr inbounds %struct.ni_private, %struct.ni_private* %13, i32 0, i32 51, !dbg !5676
  %call = call i32 @ni_assign_device_routes(i8* %8, i8* %10, i8* %12, %struct.ni_route_tables* %routing_tables) #9, !dbg !5677
  %cmp = icmp slt i32 %call, 0, !dbg !5678
  br i1 %cmp, label %if.then, label %if.else, !dbg !5679

if.then:                                          ; preds = %entry
  %14 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5680
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %14, i32 0, i32 4, !dbg !5680
  %15 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !5680
  %16 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5680
  %name1 = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %16, i32 0, i32 0, !dbg !5680
  %17 = load i8*, i8** %name1, align 8, !dbg !5680
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %15, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.78, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.ni_E_init, i64 0, i64 0), i8* %17) #11, !dbg !5680
  %18 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5682
  %class_dev2 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %18, i32 0, i32 4, !dbg !5682
  %19 = load %struct.device*, %struct.device** %class_dev2, align 8, !dbg !5682
  %20 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5682
  %name3 = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %20, i32 0, i32 0, !dbg !5682
  %21 = load i8*, i8** %name3, align 8, !dbg !5682
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %19, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.ni_E_init, i64 0, i64 0), i8* %21) #11, !dbg !5682
  br label %if.end, !dbg !5683

if.else:                                          ; preds = %entry
  %22 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5684
  %insn_device_config = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %22, i32 0, i32 26, !dbg !5686
  store i32 (%struct.comedi_device*, %struct.comedi_insn*, i32*)* @ni_global_insn_config, i32 (%struct.comedi_device*, %struct.comedi_insn*, i32*)** %insn_device_config, align 8, !dbg !5687
  %23 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5688
  %get_valid_routes = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %23, i32 0, i32 27, !dbg !5689
  store i32 (%struct.comedi_device*, i32, i32*)* @_ni_get_valid_routes, i32 (%struct.comedi_device*, i32, i32*)** %get_valid_routes, align 8, !dbg !5690
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %24 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5691
  %n_aochan = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %24, i32 0, i32 10, !dbg !5693
  %25 = load i32, i32* %n_aochan, align 8, !dbg !5693
  %cmp4 = icmp sgt i32 %25, 8, !dbg !5694
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !5695

if.then5:                                         ; preds = %if.end
  %26 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5696
  %class_dev6 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %26, i32 0, i32 4, !dbg !5696
  %27 = load %struct.device*, %struct.device** %class_dev6, align 8, !dbg !5696
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %27, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.80, i64 0, i64 0)) #11, !dbg !5696
  store i32 -22, i32* %retval, align 4, !dbg !5698
  br label %return, !dbg !5698

if.end7:                                          ; preds = %if.end
  %28 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5699
  %clock_and_fout = getelementptr inbounds %struct.ni_private, %struct.ni_private* %28, i32 0, i32 24, !dbg !5700
  store i16 6912, i16* %clock_and_fout, align 2, !dbg !5701
  %29 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5702
  %is_6xxx = getelementptr inbounds %struct.ni_private, %struct.ni_private* %29, i32 0, i32 50, !dbg !5704
  %bf.load8 = load i16, i16* %is_6xxx, align 8, !dbg !5704
  %bf.lshr = lshr i16 %bf.load8, 1, !dbg !5704
  %bf.clear9 = and i16 %bf.lshr, 1, !dbg !5704
  %bf.cast10 = zext i16 %bf.clear9 to i32, !dbg !5704
  %tobool11 = icmp ne i32 %bf.cast10, 0, !dbg !5702
  br i1 %tobool11, label %if.end15, label %if.then12, !dbg !5705

if.then12:                                        ; preds = %if.end7
  %30 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5706
  %clock_and_fout13 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %30, i32 0, i32 24, !dbg !5708
  %31 = load i16, i16* %clock_and_fout13, align 2, !dbg !5709
  %conv = zext i16 %31 to i64, !dbg !5709
  %or = or i64 %conv, 160, !dbg !5709
  %conv14 = trunc i64 %or to i16, !dbg !5709
  store i16 %conv14, i16* %clock_and_fout13, align 2, !dbg !5709
  br label %if.end15, !dbg !5710

if.end15:                                         ; preds = %if.then12, %if.end7
  %32 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5711
  %33 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5712
  %clock_and_fout16 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %33, i32 0, i32 24, !dbg !5713
  %34 = load i16, i16* %clock_and_fout16, align 2, !dbg !5713
  %conv17 = zext i16 %34 to i32, !dbg !5712
  call void @ni_stc_writew(%struct.comedi_device* %32, i32 %conv17, i32 56) #9, !dbg !5714
  %35 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5715
  %call18 = call i32 @comedi_alloc_subdevices(%struct.comedi_device* %35, i32 14) #9, !dbg !5716
  store i32 %call18, i32* %ret, align 4, !dbg !5717
  %36 = load i32, i32* %ret, align 4, !dbg !5718
  %tobool19 = icmp ne i32 %36, 0, !dbg !5718
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !5720

if.then20:                                        ; preds = %if.end15
  %37 = load i32, i32* %ret, align 4, !dbg !5721
  store i32 %37, i32* %retval, align 4, !dbg !5722
  br label %return, !dbg !5722

if.end21:                                         ; preds = %if.end15
  %38 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5723
  %subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %38, i32 0, i32 16, !dbg !5724
  %39 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices, align 8, !dbg !5724
  %arrayidx = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %39, i64 0, !dbg !5723
  store %struct.comedi_subdevice* %arrayidx, %struct.comedi_subdevice** %s, align 8, !dbg !5725
  %40 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5726
  %n_adchan = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %40, i32 0, i32 4, !dbg !5728
  %41 = load i32, i32* %n_adchan, align 8, !dbg !5728
  %tobool22 = icmp ne i32 %41, 0, !dbg !5726
  br i1 %tobool22, label %if.then23, label %if.else60, !dbg !5729

if.then23:                                        ; preds = %if.end21
  %42 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5730
  %type = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %42, i32 0, i32 2, !dbg !5732
  store i32 1, i32* %type, align 4, !dbg !5733
  %43 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5734
  %subdev_flags = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %43, i32 0, i32 4, !dbg !5735
  store i32 21037056, i32* %subdev_flags, align 4, !dbg !5736
  %44 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5737
  %is_611x = getelementptr inbounds %struct.ni_private, %struct.ni_private* %44, i32 0, i32 50, !dbg !5739
  %bf.load24 = load i16, i16* %is_611x, align 8, !dbg !5739
  %bf.lshr25 = lshr i16 %bf.load24, 2, !dbg !5739
  %bf.clear26 = and i16 %bf.lshr25, 1, !dbg !5739
  %bf.cast27 = zext i16 %bf.clear26 to i32, !dbg !5739
  %tobool28 = icmp ne i32 %bf.cast27, 0, !dbg !5737
  br i1 %tobool28, label %if.end32, label %if.then29, !dbg !5740

if.then29:                                        ; preds = %if.then23
  %45 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5741
  %subdev_flags30 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %45, i32 0, i32 4, !dbg !5742
  %46 = load i32, i32* %subdev_flags30, align 4, !dbg !5743
  %or31 = or i32 %46, 11534336, !dbg !5743
  store i32 %or31, i32* %subdev_flags30, align 4, !dbg !5743
  br label %if.end32, !dbg !5741

if.end32:                                         ; preds = %if.then29, %if.then23
  %47 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5744
  %ai_maxdata = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %47, i32 0, i32 5, !dbg !5746
  %48 = load i32, i32* %ai_maxdata, align 4, !dbg !5746
  %cmp33 = icmp ugt i32 %48, 65535, !dbg !5747
  br i1 %cmp33, label %if.then35, label %if.end38, !dbg !5748

if.then35:                                        ; preds = %if.end32
  %49 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5749
  %subdev_flags36 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %49, i32 0, i32 4, !dbg !5750
  %50 = load i32, i32* %subdev_flags36, align 4, !dbg !5751
  %or37 = or i32 %50, 268435456, !dbg !5751
  store i32 %or37, i32* %subdev_flags36, align 4, !dbg !5751
  br label %if.end38, !dbg !5749

if.end38:                                         ; preds = %if.then35, %if.end32
  %51 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5752
  %is_m_series39 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %51, i32 0, i32 50, !dbg !5754
  %bf.load40 = load i16, i16* %is_m_series39, align 8, !dbg !5754
  %bf.clear41 = and i16 %bf.load40, 1, !dbg !5754
  %bf.cast42 = zext i16 %bf.clear41 to i32, !dbg !5754
  %tobool43 = icmp ne i32 %bf.cast42, 0, !dbg !5752
  br i1 %tobool43, label %if.then44, label %if.end47, !dbg !5755

if.then44:                                        ; preds = %if.end38
  %52 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5756
  %subdev_flags45 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %52, i32 0, i32 4, !dbg !5757
  %53 = load i32, i32* %subdev_flags45, align 4, !dbg !5758
  %or46 = or i32 %53, 8192, !dbg !5758
  store i32 %or46, i32* %subdev_flags45, align 4, !dbg !5758
  br label %if.end47, !dbg !5756

if.end47:                                         ; preds = %if.then44, %if.end38
  %54 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5759
  %n_adchan48 = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %54, i32 0, i32 4, !dbg !5760
  %55 = load i32, i32* %n_adchan48, align 8, !dbg !5760
  %56 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5761
  %n_chan = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %56, i32 0, i32 3, !dbg !5762
  store i32 %55, i32* %n_chan, align 8, !dbg !5763
  %57 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5764
  %ai_maxdata49 = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %57, i32 0, i32 5, !dbg !5765
  %58 = load i32, i32* %ai_maxdata49, align 4, !dbg !5765
  %59 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5766
  %maxdata = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %59, i32 0, i32 13, !dbg !5767
  store i32 %58, i32* %maxdata, align 8, !dbg !5768
  %60 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5769
  %gainlkup = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %60, i32 0, i32 8, !dbg !5770
  %61 = load i32, i32* %gainlkup, align 8, !dbg !5770
  %idxprom = sext i32 %61 to i64, !dbg !5771
  %arrayidx50 = getelementptr [8 x %struct.comedi_lrange*], [8 x %struct.comedi_lrange*]* @ni_range_lkup, i64 0, i64 %idxprom, !dbg !5771
  %62 = load %struct.comedi_lrange*, %struct.comedi_lrange** %arrayidx50, align 8, !dbg !5771
  %63 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5772
  %range_table = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %63, i32 0, i32 15, !dbg !5773
  store %struct.comedi_lrange* %62, %struct.comedi_lrange** %range_table, align 8, !dbg !5774
  %64 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5775
  %insn_read = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %64, i32 0, i32 18, !dbg !5776
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_ai_insn_read, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_read, align 8, !dbg !5777
  %65 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5778
  %insn_config = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %65, i32 0, i32 21, !dbg !5779
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_ai_insn_config, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_config, align 8, !dbg !5780
  %66 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5781
  %irq = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %66, i32 0, i32 20, !dbg !5783
  %67 = load i32, i32* %irq, align 8, !dbg !5783
  %tobool51 = icmp ne i32 %67, 0, !dbg !5781
  br i1 %tobool51, label %if.then52, label %if.end58, !dbg !5784

if.then52:                                        ; preds = %if.end47
  %68 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5785
  %69 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5787
  %read_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %69, i32 0, i32 21, !dbg !5788
  store %struct.comedi_subdevice* %68, %struct.comedi_subdevice** %read_subdev, align 8, !dbg !5789
  %70 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5790
  %subdev_flags53 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %70, i32 0, i32 4, !dbg !5791
  %71 = load i32, i32* %subdev_flags53, align 4, !dbg !5792
  %or54 = or i32 %71, 32768, !dbg !5792
  store i32 %or54, i32* %subdev_flags53, align 4, !dbg !5792
  %72 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5793
  %len_chanlist = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %72, i32 0, i32 5, !dbg !5794
  store i32 512, i32* %len_chanlist, align 8, !dbg !5795
  %73 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5796
  %do_cmdtest = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %73, i32 0, i32 23, !dbg !5797
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_cmd*)* @ni_ai_cmdtest, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_cmd*)** %do_cmdtest, align 8, !dbg !5798
  %74 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5799
  %do_cmd = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %74, i32 0, i32 22, !dbg !5800
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*)* @ni_ai_cmd, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %do_cmd, align 8, !dbg !5801
  %75 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5802
  %cancel = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %75, i32 0, i32 25, !dbg !5803
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*)* @ni_ai_reset, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %cancel, align 8, !dbg !5804
  %76 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5805
  %poll = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %76, i32 0, i32 24, !dbg !5806
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*)* @ni_ai_poll, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %poll, align 8, !dbg !5807
  %77 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5808
  %munge = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %77, i32 0, i32 27, !dbg !5809
  store void (%struct.comedi_device*, %struct.comedi_subdevice*, i8*, i32, i32)* @ni_ai_munge, void (%struct.comedi_device*, %struct.comedi_subdevice*, i8*, i32, i32)** %munge, align 8, !dbg !5810
  %78 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5811
  %mite = getelementptr inbounds %struct.ni_private, %struct.ni_private* %78, i32 0, i32 42, !dbg !5813
  %79 = load %struct.mite*, %struct.mite** %mite, align 8, !dbg !5813
  %tobool55 = icmp ne %struct.mite* %79, null, !dbg !5811
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !5814

if.then56:                                        ; preds = %if.then52
  %80 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5815
  %async_dma_dir = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %80, i32 0, i32 28, !dbg !5816
  store i32 2, i32* %async_dma_dir, align 8, !dbg !5817
  br label %if.end57, !dbg !5815

if.end57:                                         ; preds = %if.then56, %if.then52
  br label %if.end58, !dbg !5818

if.end58:                                         ; preds = %if.end57, %if.end47
  %81 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5819
  %82 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5820
  %call59 = call i32 @ni_ai_reset(%struct.comedi_device* %81, %struct.comedi_subdevice* %82) #9, !dbg !5821
  br label %if.end62, !dbg !5822

if.else60:                                        ; preds = %if.end21
  %83 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5823
  %type61 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %83, i32 0, i32 2, !dbg !5825
  store i32 0, i32* %type61, align 4, !dbg !5826
  br label %if.end62

if.end62:                                         ; preds = %if.else60, %if.end58
  %84 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5827
  %subdevices63 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %84, i32 0, i32 16, !dbg !5828
  %85 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices63, align 8, !dbg !5828
  %arrayidx64 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %85, i64 1, !dbg !5827
  store %struct.comedi_subdevice* %arrayidx64, %struct.comedi_subdevice** %s, align 8, !dbg !5829
  %86 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5830
  %n_aochan65 = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %86, i32 0, i32 10, !dbg !5832
  %87 = load i32, i32* %n_aochan65, align 8, !dbg !5832
  %tobool66 = icmp ne i32 %87, 0, !dbg !5830
  br i1 %tobool66, label %if.then67, label %if.else123, !dbg !5833

if.then67:                                        ; preds = %if.end62
  %88 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5834
  %type68 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %88, i32 0, i32 2, !dbg !5836
  store i32 2, i32* %type68, align 4, !dbg !5837
  %89 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5838
  %subdev_flags69 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %89, i32 0, i32 4, !dbg !5839
  store i32 34734080, i32* %subdev_flags69, align 4, !dbg !5840
  %90 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5841
  %is_m_series70 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %90, i32 0, i32 50, !dbg !5843
  %bf.load71 = load i16, i16* %is_m_series70, align 8, !dbg !5843
  %bf.clear72 = and i16 %bf.load71, 1, !dbg !5843
  %bf.cast73 = zext i16 %bf.clear72 to i32, !dbg !5843
  %tobool74 = icmp ne i32 %bf.cast73, 0, !dbg !5841
  br i1 %tobool74, label %if.then75, label %if.end78, !dbg !5844

if.then75:                                        ; preds = %if.then67
  %91 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5845
  %subdev_flags76 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %91, i32 0, i32 4, !dbg !5846
  %92 = load i32, i32* %subdev_flags76, align 4, !dbg !5847
  %or77 = or i32 %92, 8192, !dbg !5847
  store i32 %or77, i32* %subdev_flags76, align 4, !dbg !5847
  br label %if.end78, !dbg !5845

if.end78:                                         ; preds = %if.then75, %if.then67
  %93 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5848
  %n_aochan79 = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %93, i32 0, i32 10, !dbg !5849
  %94 = load i32, i32* %n_aochan79, align 8, !dbg !5849
  %95 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5850
  %n_chan80 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %95, i32 0, i32 3, !dbg !5851
  store i32 %94, i32* %n_chan80, align 8, !dbg !5852
  %96 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5853
  %ao_maxdata = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %96, i32 0, i32 11, !dbg !5854
  %97 = load i32, i32* %ao_maxdata, align 4, !dbg !5854
  %98 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5855
  %maxdata81 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %98, i32 0, i32 13, !dbg !5856
  store i32 %97, i32* %maxdata81, align 8, !dbg !5857
  %99 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5858
  %ao_range_table = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %99, i32 0, i32 13, !dbg !5859
  %100 = load %struct.comedi_lrange*, %struct.comedi_lrange** %ao_range_table, align 8, !dbg !5859
  %101 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5860
  %range_table82 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %101, i32 0, i32 15, !dbg !5861
  store %struct.comedi_lrange* %100, %struct.comedi_lrange** %range_table82, align 8, !dbg !5862
  %102 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5863
  %insn_config83 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %102, i32 0, i32 21, !dbg !5864
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_ao_insn_config, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_config83, align 8, !dbg !5865
  %103 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5866
  %insn_write = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %103, i32 0, i32 19, !dbg !5867
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_ao_insn_write, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_write, align 8, !dbg !5868
  %104 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5869
  %call84 = call i32 @comedi_alloc_subdev_readback(%struct.comedi_subdevice* %104) #9, !dbg !5870
  store i32 %call84, i32* %ret, align 4, !dbg !5871
  %105 = load i32, i32* %ret, align 4, !dbg !5872
  %tobool85 = icmp ne i32 %105, 0, !dbg !5872
  br i1 %tobool85, label %if.then86, label %if.end87, !dbg !5874

if.then86:                                        ; preds = %if.end78
  %106 = load i32, i32* %ret, align 4, !dbg !5875
  store i32 %106, i32* %retval, align 4, !dbg !5876
  br label %return, !dbg !5876

if.end87:                                         ; preds = %if.end78
  %107 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5877
  %irq88 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %107, i32 0, i32 20, !dbg !5879
  %108 = load i32, i32* %irq88, align 8, !dbg !5879
  %tobool89 = icmp ne i32 %108, 0, !dbg !5877
  br i1 %tobool89, label %land.lhs.true, label %if.end114, !dbg !5880

land.lhs.true:                                    ; preds = %if.end87
  %109 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5881
  %ao_fifo_depth = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %109, i32 0, i32 12, !dbg !5882
  %110 = load i32, i32* %ao_fifo_depth, align 8, !dbg !5882
  %tobool90 = icmp ne i32 %110, 0, !dbg !5881
  br i1 %tobool90, label %if.then93, label %lor.lhs.false, !dbg !5883

lor.lhs.false:                                    ; preds = %land.lhs.true
  %111 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5884
  %mite91 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %111, i32 0, i32 42, !dbg !5885
  %112 = load %struct.mite*, %struct.mite** %mite91, align 8, !dbg !5885
  %tobool92 = icmp ne %struct.mite* %112, null, !dbg !5884
  br i1 %tobool92, label %if.then93, label %if.end114, !dbg !5886

if.then93:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %113 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5887
  %114 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5889
  %write_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %114, i32 0, i32 22, !dbg !5890
  store %struct.comedi_subdevice* %113, %struct.comedi_subdevice** %write_subdev, align 8, !dbg !5891
  %115 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5892
  %subdev_flags94 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %115, i32 0, i32 4, !dbg !5893
  %116 = load i32, i32* %subdev_flags94, align 4, !dbg !5894
  %or95 = or i32 %116, 16384, !dbg !5894
  store i32 %or95, i32* %subdev_flags94, align 4, !dbg !5894
  %117 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5895
  %n_chan96 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %117, i32 0, i32 3, !dbg !5896
  %118 = load i32, i32* %n_chan96, align 8, !dbg !5896
  %119 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5897
  %len_chanlist97 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %119, i32 0, i32 5, !dbg !5898
  store i32 %118, i32* %len_chanlist97, align 8, !dbg !5899
  %120 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5900
  %do_cmdtest98 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %120, i32 0, i32 23, !dbg !5901
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_cmd*)* @ni_ao_cmdtest, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_cmd*)** %do_cmdtest98, align 8, !dbg !5902
  %121 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5903
  %do_cmd99 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %121, i32 0, i32 22, !dbg !5904
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*)* @ni_ao_cmd, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %do_cmd99, align 8, !dbg !5905
  %122 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5906
  %cancel100 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %122, i32 0, i32 25, !dbg !5907
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*)* @ni_ao_reset, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %cancel100, align 8, !dbg !5908
  %123 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5909
  %is_m_series101 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %123, i32 0, i32 50, !dbg !5911
  %bf.load102 = load i16, i16* %is_m_series101, align 8, !dbg !5911
  %bf.clear103 = and i16 %bf.load102, 1, !dbg !5911
  %bf.cast104 = zext i16 %bf.clear103 to i32, !dbg !5911
  %tobool105 = icmp ne i32 %bf.cast104, 0, !dbg !5909
  br i1 %tobool105, label %if.end108, label %if.then106, !dbg !5912

if.then106:                                       ; preds = %if.then93
  %124 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5913
  %munge107 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %124, i32 0, i32 27, !dbg !5914
  store void (%struct.comedi_device*, %struct.comedi_subdevice*, i8*, i32, i32)* @ni_ao_munge, void (%struct.comedi_device*, %struct.comedi_subdevice*, i8*, i32, i32)** %munge107, align 8, !dbg !5915
  br label %if.end108, !dbg !5913

if.end108:                                        ; preds = %if.then106, %if.then93
  %125 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5916
  %mite109 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %125, i32 0, i32 42, !dbg !5918
  %126 = load %struct.mite*, %struct.mite** %mite109, align 8, !dbg !5918
  %tobool110 = icmp ne %struct.mite* %126, null, !dbg !5916
  br i1 %tobool110, label %if.then111, label %if.end113, !dbg !5919

if.then111:                                       ; preds = %if.end108
  %127 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5920
  %async_dma_dir112 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %127, i32 0, i32 28, !dbg !5921
  store i32 1, i32* %async_dma_dir112, align 8, !dbg !5922
  br label %if.end113, !dbg !5920

if.end113:                                        ; preds = %if.then111, %if.end108
  br label %if.end114, !dbg !5923

if.end114:                                        ; preds = %if.end113, %lor.lhs.false, %if.end87
  %128 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5924
  %is_67xx = getelementptr inbounds %struct.ni_private, %struct.ni_private* %128, i32 0, i32 50, !dbg !5926
  %bf.load115 = load i16, i16* %is_67xx, align 8, !dbg !5926
  %bf.lshr116 = lshr i16 %bf.load115, 7, !dbg !5926
  %bf.clear117 = and i16 %bf.lshr116, 1, !dbg !5926
  %bf.cast118 = zext i16 %bf.clear117 to i32, !dbg !5926
  %tobool119 = icmp ne i32 %bf.cast118, 0, !dbg !5924
  br i1 %tobool119, label %if.then120, label %if.end121, !dbg !5927

if.then120:                                       ; preds = %if.end114
  %129 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5928
  %130 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5929
  call void @init_ao_67xx(%struct.comedi_device* %129, %struct.comedi_subdevice* %130) #9, !dbg !5930
  br label %if.end121, !dbg !5930

if.end121:                                        ; preds = %if.then120, %if.end114
  %131 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5931
  %132 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5932
  %call122 = call i32 @ni_ao_reset(%struct.comedi_device* %131, %struct.comedi_subdevice* %132) #9, !dbg !5933
  br label %if.end125, !dbg !5934

if.else123:                                       ; preds = %if.end62
  %133 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5935
  %type124 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %133, i32 0, i32 2, !dbg !5937
  store i32 0, i32* %type124, align 4, !dbg !5938
  br label %if.end125

if.end125:                                        ; preds = %if.else123, %if.end121
  %134 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5939
  %subdevices126 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %134, i32 0, i32 16, !dbg !5940
  %135 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices126, align 8, !dbg !5940
  %arrayidx127 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %135, i64 2, !dbg !5939
  store %struct.comedi_subdevice* %arrayidx127, %struct.comedi_subdevice** %s, align 8, !dbg !5941
  %136 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5942
  %type128 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %136, i32 0, i32 2, !dbg !5943
  store i32 5, i32* %type128, align 4, !dbg !5944
  %137 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5945
  %subdev_flags129 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %137, i32 0, i32 4, !dbg !5946
  store i32 196608, i32* %subdev_flags129, align 4, !dbg !5947
  %138 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !5948
  %has_32dio_chan = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %138, i32 0, i32 16, !dbg !5949
  %bf.load130 = load i8, i8* %has_32dio_chan, align 8, !dbg !5949
  %bf.lshr131 = lshr i8 %bf.load130, 1, !dbg !5949
  %bf.clear132 = and i8 %bf.lshr131, 1, !dbg !5949
  %bf.cast133 = zext i8 %bf.clear132 to i32, !dbg !5949
  %tobool134 = icmp ne i32 %bf.cast133, 0, !dbg !5948
  %139 = zext i1 %tobool134 to i64, !dbg !5948
  %cond135 = select i1 %tobool134, i32 32, i32 8, !dbg !5948
  %140 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5950
  %n_chan136 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %140, i32 0, i32 3, !dbg !5951
  store i32 %cond135, i32* %n_chan136, align 8, !dbg !5952
  %141 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5953
  %maxdata137 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %141, i32 0, i32 13, !dbg !5954
  store i32 1, i32* %maxdata137, align 8, !dbg !5955
  %142 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5956
  %range_table138 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %142, i32 0, i32 15, !dbg !5957
  store %struct.comedi_lrange* @range_unipolar5, %struct.comedi_lrange** %range_table138, align 8, !dbg !5958
  %143 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !5959
  %is_m_series139 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %143, i32 0, i32 50, !dbg !5961
  %bf.load140 = load i16, i16* %is_m_series139, align 8, !dbg !5961
  %bf.clear141 = and i16 %bf.load140, 1, !dbg !5961
  %bf.cast142 = zext i16 %bf.clear141 to i32, !dbg !5961
  %tobool143 = icmp ne i32 %bf.cast142, 0, !dbg !5959
  br i1 %tobool143, label %if.then144, label %if.else160, !dbg !5962

if.then144:                                       ; preds = %if.end125
  %144 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5963
  %subdev_flags145 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %144, i32 0, i32 4, !dbg !5965
  %145 = load i32, i32* %subdev_flags145, align 4, !dbg !5966
  %or146 = or i32 %145, 268435456, !dbg !5966
  store i32 %or146, i32* %subdev_flags145, align 4, !dbg !5966
  %146 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5967
  %insn_bits = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %146, i32 0, i32 20, !dbg !5968
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_m_series_dio_insn_bits, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_bits, align 8, !dbg !5969
  %147 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5970
  %insn_config147 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %147, i32 0, i32 21, !dbg !5971
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_m_series_dio_insn_config, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_config147, align 8, !dbg !5972
  %148 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5973
  %irq148 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %148, i32 0, i32 20, !dbg !5975
  %149 = load i32, i32* %irq148, align 8, !dbg !5975
  %tobool149 = icmp ne i32 %149, 0, !dbg !5973
  br i1 %tobool149, label %if.then150, label %if.end159, !dbg !5976

if.then150:                                       ; preds = %if.then144
  %150 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5977
  %subdev_flags151 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %150, i32 0, i32 4, !dbg !5979
  %151 = load i32, i32* %subdev_flags151, align 4, !dbg !5980
  %or152 = or i32 %151, 16384, !dbg !5980
  store i32 %or152, i32* %subdev_flags151, align 4, !dbg !5980
  %152 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5981
  %n_chan153 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %152, i32 0, i32 3, !dbg !5982
  %153 = load i32, i32* %n_chan153, align 8, !dbg !5982
  %154 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5983
  %len_chanlist154 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %154, i32 0, i32 5, !dbg !5984
  store i32 %153, i32* %len_chanlist154, align 8, !dbg !5985
  %155 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5986
  %do_cmdtest155 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %155, i32 0, i32 23, !dbg !5987
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_cmd*)* @ni_cdio_cmdtest, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_cmd*)** %do_cmdtest155, align 8, !dbg !5988
  %156 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5989
  %do_cmd156 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %156, i32 0, i32 22, !dbg !5990
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*)* @ni_cdio_cmd, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %do_cmd156, align 8, !dbg !5991
  %157 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5992
  %cancel157 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %157, i32 0, i32 25, !dbg !5993
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*)* @ni_cdio_cancel, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %cancel157, align 8, !dbg !5994
  %158 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !5995
  %async_dma_dir158 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %158, i32 0, i32 28, !dbg !5996
  store i32 0, i32* %async_dma_dir158, align 8, !dbg !5997
  br label %if.end159, !dbg !5998

if.end159:                                        ; preds = %if.then150, %if.then144
  %159 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5999
  call void @ni_writel(%struct.comedi_device* %159, i32 48, i32 548) #9, !dbg !6000
  %160 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6001
  %161 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6002
  %io_bits = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %161, i32 0, i32 12, !dbg !6003
  %162 = load i32, i32* %io_bits, align 4, !dbg !6003
  call void @ni_writel(%struct.comedi_device* %160, i32 %162, i32 40) #9, !dbg !6004
  br label %if.end167, !dbg !6005

if.else160:                                       ; preds = %if.end125
  %163 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6006
  %insn_bits161 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %163, i32 0, i32 20, !dbg !6008
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_dio_insn_bits, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_bits161, align 8, !dbg !6009
  %164 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6010
  %insn_config162 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %164, i32 0, i32 21, !dbg !6011
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_dio_insn_config, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_config162, align 8, !dbg !6012
  %165 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6013
  %io_bits163 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %165, i32 0, i32 12, !dbg !6013
  %166 = load i32, i32* %io_bits163, align 4, !dbg !6013
  %and = and i32 %166, 255, !dbg !6013
  %conv164 = trunc i32 %and to i16, !dbg !6013
  %167 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6014
  %dio_control = getelementptr inbounds %struct.ni_private, %struct.ni_private* %167, i32 0, i32 1, !dbg !6015
  store i16 %conv164, i16* %dio_control, align 2, !dbg !6016
  %168 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6017
  %169 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6018
  %dio_control165 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %169, i32 0, i32 1, !dbg !6019
  %170 = load i16, i16* %dio_control165, align 2, !dbg !6019
  %conv166 = zext i16 %170 to i32, !dbg !6018
  call void @ni_writew(%struct.comedi_device* %168, i32 %conv166, i32 11) #9, !dbg !6020
  br label %if.end167

if.end167:                                        ; preds = %if.else160, %if.end159
  %171 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6021
  %subdevices168 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %171, i32 0, i32 16, !dbg !6022
  %172 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices168, align 8, !dbg !6022
  %arrayidx169 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %172, i64 3, !dbg !6021
  store %struct.comedi_subdevice* %arrayidx169, %struct.comedi_subdevice** %s, align 8, !dbg !6023
  %173 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !6024
  %has_8255 = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %173, i32 0, i32 16, !dbg !6026
  %bf.load170 = load i8, i8* %has_8255, align 8, !dbg !6026
  %bf.clear171 = and i8 %bf.load170, 1, !dbg !6026
  %bf.cast172 = zext i8 %bf.clear171 to i32, !dbg !6026
  %tobool173 = icmp ne i32 %bf.cast172, 0, !dbg !6024
  br i1 %tobool173, label %if.then174, label %if.else179, !dbg !6027

if.then174:                                       ; preds = %if.end167
  %174 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6028
  %175 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6030
  %call175 = call i32 @subdev_8255_init(%struct.comedi_device* %174, %struct.comedi_subdevice* %175, i32 (%struct.comedi_device*, i32, i32, i32, i64)* @ni_8255_callback, i64 25) #9, !dbg !6031
  store i32 %call175, i32* %ret, align 4, !dbg !6032
  %176 = load i32, i32* %ret, align 4, !dbg !6033
  %tobool176 = icmp ne i32 %176, 0, !dbg !6033
  br i1 %tobool176, label %if.then177, label %if.end178, !dbg !6035

if.then177:                                       ; preds = %if.then174
  %177 = load i32, i32* %ret, align 4, !dbg !6036
  store i32 %177, i32* %retval, align 4, !dbg !6037
  br label %return, !dbg !6037

if.end178:                                        ; preds = %if.then174
  br label %if.end181, !dbg !6038

if.else179:                                       ; preds = %if.end167
  %178 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6039
  %type180 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %178, i32 0, i32 2, !dbg !6041
  store i32 0, i32* %type180, align 4, !dbg !6042
  br label %if.end181

if.end181:                                        ; preds = %if.else179, %if.end178
  %179 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6043
  %subdevices182 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %179, i32 0, i32 16, !dbg !6044
  %180 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices182, align 8, !dbg !6044
  %arrayidx183 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %180, i64 4, !dbg !6043
  store %struct.comedi_subdevice* %arrayidx183, %struct.comedi_subdevice** %s, align 8, !dbg !6045
  %181 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6046
  %type184 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %181, i32 0, i32 2, !dbg !6047
  store i32 0, i32* %type184, align 4, !dbg !6048
  %182 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6049
  %subdevices185 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %182, i32 0, i32 16, !dbg !6050
  %183 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices185, align 8, !dbg !6050
  %arrayidx186 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %183, i64 5, !dbg !6049
  store %struct.comedi_subdevice* %arrayidx186, %struct.comedi_subdevice** %s, align 8, !dbg !6051
  %184 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6052
  %type187 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %184, i32 0, i32 2, !dbg !6053
  store i32 9, i32* %type187, align 4, !dbg !6054
  %185 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6055
  %subdev_flags188 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %185, i32 0, i32 4, !dbg !6056
  store i32 262144, i32* %subdev_flags188, align 4, !dbg !6057
  %186 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6058
  %n_chan189 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %186, i32 0, i32 3, !dbg !6059
  store i32 1, i32* %n_chan189, align 8, !dbg !6060
  %187 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6061
  %maxdata190 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %187, i32 0, i32 13, !dbg !6062
  store i32 0, i32* %maxdata190, align 8, !dbg !6063
  %188 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6064
  %is_m_series191 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %188, i32 0, i32 50, !dbg !6066
  %bf.load192 = load i16, i16* %is_m_series191, align 8, !dbg !6066
  %bf.clear193 = and i16 %bf.load192, 1, !dbg !6066
  %bf.cast194 = zext i16 %bf.clear193 to i32, !dbg !6066
  %tobool195 = icmp ne i32 %bf.cast194, 0, !dbg !6064
  br i1 %tobool195, label %if.then196, label %if.else198, !dbg !6067

if.then196:                                       ; preds = %if.end181
  %189 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6068
  %insn_config197 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %189, i32 0, i32 21, !dbg !6070
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_m_series_pwm_config, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_config197, align 8, !dbg !6071
  %190 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6072
  call void @ni_writel(%struct.comedi_device* %190, i32 0, i32 64) #9, !dbg !6073
  br label %if.end212, !dbg !6074

if.else198:                                       ; preds = %if.end181
  %191 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6075
  %is_6143 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %191, i32 0, i32 50, !dbg !6077
  %bf.load199 = load i16, i16* %is_6143, align 8, !dbg !6077
  %bf.lshr200 = lshr i16 %bf.load199, 3, !dbg !6077
  %bf.clear201 = and i16 %bf.lshr200, 1, !dbg !6077
  %bf.cast202 = zext i16 %bf.clear201 to i32, !dbg !6077
  %tobool203 = icmp ne i32 %bf.cast202, 0, !dbg !6075
  br i1 %tobool203, label %if.then204, label %if.else206, !dbg !6078

if.then204:                                       ; preds = %if.else198
  %192 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6079
  %insn_config205 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %192, i32 0, i32 21, !dbg !6081
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_6143_pwm_config, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_config205, align 8, !dbg !6082
  br label %if.end211, !dbg !6083

if.else206:                                       ; preds = %if.else198
  %193 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6084
  %subdev_flags207 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %193, i32 0, i32 4, !dbg !6086
  %194 = load i32, i32* %subdev_flags207, align 4, !dbg !6087
  %or208 = or i32 %194, 131072, !dbg !6087
  store i32 %or208, i32* %subdev_flags207, align 4, !dbg !6087
  %195 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6088
  %insn_read209 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %195, i32 0, i32 18, !dbg !6089
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_calib_insn_read, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_read209, align 8, !dbg !6090
  %196 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6091
  %insn_write210 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %196, i32 0, i32 19, !dbg !6092
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_calib_insn_write, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_write210, align 8, !dbg !6093
  %197 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6094
  %198 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6095
  call void @caldac_setup(%struct.comedi_device* %197, %struct.comedi_subdevice* %198) #9, !dbg !6096
  br label %if.end211

if.end211:                                        ; preds = %if.else206, %if.then204
  br label %if.end212

if.end212:                                        ; preds = %if.end211, %if.then196
  %199 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6097
  %subdevices213 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %199, i32 0, i32 16, !dbg !6098
  %200 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices213, align 8, !dbg !6098
  %arrayidx214 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %200, i64 6, !dbg !6097
  store %struct.comedi_subdevice* %arrayidx214, %struct.comedi_subdevice** %s, align 8, !dbg !6099
  %201 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6100
  %type215 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %201, i32 0, i32 2, !dbg !6101
  store i32 8, i32* %type215, align 4, !dbg !6102
  %202 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6103
  %subdev_flags216 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %202, i32 0, i32 4, !dbg !6104
  store i32 327680, i32* %subdev_flags216, align 4, !dbg !6105
  %203 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6106
  %maxdata217 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %203, i32 0, i32 13, !dbg !6107
  store i32 255, i32* %maxdata217, align 8, !dbg !6108
  %204 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6109
  %is_m_series218 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %204, i32 0, i32 50, !dbg !6111
  %bf.load219 = load i16, i16* %is_m_series218, align 8, !dbg !6111
  %bf.clear220 = and i16 %bf.load219, 1, !dbg !6111
  %bf.cast221 = zext i16 %bf.clear220 to i32, !dbg !6111
  %tobool222 = icmp ne i32 %bf.cast221, 0, !dbg !6109
  br i1 %tobool222, label %if.then223, label %if.else226, !dbg !6112

if.then223:                                       ; preds = %if.end212
  %205 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6113
  %n_chan224 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %205, i32 0, i32 3, !dbg !6115
  store i32 1024, i32* %n_chan224, align 8, !dbg !6116
  %206 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6117
  %insn_read225 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %206, i32 0, i32 18, !dbg !6118
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_m_series_eeprom_insn_read, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_read225, align 8, !dbg !6119
  br label %if.end229, !dbg !6120

if.else226:                                       ; preds = %if.end212
  %207 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6121
  %n_chan227 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %207, i32 0, i32 3, !dbg !6123
  store i32 512, i32* %n_chan227, align 8, !dbg !6124
  %208 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6125
  %insn_read228 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %208, i32 0, i32 18, !dbg !6126
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_eeprom_insn_read, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_read228, align 8, !dbg !6127
  br label %if.end229

if.end229:                                        ; preds = %if.else226, %if.then223
  %209 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6128
  %subdevices230 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %209, i32 0, i32 16, !dbg !6129
  %210 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices230, align 8, !dbg !6129
  %arrayidx231 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %210, i64 7, !dbg !6128
  store %struct.comedi_subdevice* %arrayidx231, %struct.comedi_subdevice** %s, align 8, !dbg !6130
  %211 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6131
  %type232 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %211, i32 0, i32 2, !dbg !6132
  store i32 5, i32* %type232, align 4, !dbg !6133
  %212 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6134
  %maxdata233 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %212, i32 0, i32 13, !dbg !6135
  store i32 1, i32* %maxdata233, align 8, !dbg !6136
  %213 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6137
  %is_m_series234 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %213, i32 0, i32 50, !dbg !6139
  %bf.load235 = load i16, i16* %is_m_series234, align 8, !dbg !6139
  %bf.clear236 = and i16 %bf.load235, 1, !dbg !6139
  %bf.cast237 = zext i16 %bf.clear236 to i32, !dbg !6139
  %tobool238 = icmp ne i32 %bf.cast237, 0, !dbg !6137
  br i1 %tobool238, label %if.then239, label %if.else248, !dbg !6140

if.then239:                                       ; preds = %if.end229
  %214 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6141
  %n_chan240 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %214, i32 0, i32 3, !dbg !6143
  store i32 16, i32* %n_chan240, align 8, !dbg !6144
  %215 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6145
  %insn_bits241 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %215, i32 0, i32 20, !dbg !6146
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_pfi_insn_bits, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_bits241, align 8, !dbg !6147
  %216 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6148
  %subdev_flags242 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %216, i32 0, i32 4, !dbg !6149
  store i32 458752, i32* %subdev_flags242, align 4, !dbg !6150
  %217 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6151
  %218 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6152
  %state = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %218, i32 0, i32 29, !dbg !6153
  %219 = load i32, i32* %state, align 4, !dbg !6153
  call void @ni_writew(%struct.comedi_device* %217, i32 %219, i32 478) #9, !dbg !6154
  store i32 0, i32* %i, align 4, !dbg !6155
  br label %for.cond, !dbg !6157

for.cond:                                         ; preds = %for.inc, %if.then239
  %220 = load i32, i32* %i, align 4, !dbg !6158
  %cmp243 = icmp slt i32 %220, 6, !dbg !6160
  br i1 %cmp243, label %for.body, label %for.end, !dbg !6161

for.body:                                         ; preds = %for.cond
  %221 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6162
  %222 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6164
  %pfi_output_select_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %222, i32 0, i32 32, !dbg !6165
  %223 = load i32, i32* %i, align 4, !dbg !6166
  %idxprom245 = sext i32 %223 to i64, !dbg !6164
  %arrayidx246 = getelementptr [6 x i16], [6 x i16]* %pfi_output_select_reg, i64 0, i64 %idxprom245, !dbg !6164
  %224 = load i16, i16* %arrayidx246, align 2, !dbg !6164
  %conv247 = zext i16 %224 to i32, !dbg !6164
  %225 = load i32, i32* %i, align 4, !dbg !6167
  %mul = mul i32 %225, 2, !dbg !6167
  %add = add i32 464, %mul, !dbg !6167
  call void @ni_writew(%struct.comedi_device* %221, i32 %conv247, i32 %add) #9, !dbg !6168
  br label %for.inc, !dbg !6169

for.inc:                                          ; preds = %for.body
  %226 = load i32, i32* %i, align 4, !dbg !6170
  %inc = add i32 %226, 1, !dbg !6170
  store i32 %inc, i32* %i, align 4, !dbg !6170
  br label %for.cond, !dbg !6171, !llvm.loop !6172

for.end:                                          ; preds = %for.cond
  br label %if.end251, !dbg !6174

if.else248:                                       ; preds = %if.end229
  %227 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6175
  %n_chan249 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %227, i32 0, i32 3, !dbg !6177
  store i32 10, i32* %n_chan249, align 8, !dbg !6178
  %228 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6179
  %subdev_flags250 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %228, i32 0, i32 4, !dbg !6180
  store i32 262144, i32* %subdev_flags250, align 4, !dbg !6181
  br label %if.end251

if.end251:                                        ; preds = %if.else248, %for.end
  %229 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6182
  %insn_config252 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %229, i32 0, i32 21, !dbg !6183
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_pfi_insn_config, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_config252, align 8, !dbg !6184
  %230 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6185
  call void @ni_set_bits(%struct.comedi_device* %230, i32 57, i32 -1, i32 0) #9, !dbg !6186
  %231 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6187
  %subdevices253 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %231, i32 0, i32 16, !dbg !6188
  %232 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices253, align 8, !dbg !6188
  %arrayidx254 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %232, i64 8, !dbg !6187
  store %struct.comedi_subdevice* %arrayidx254, %struct.comedi_subdevice** %s, align 8, !dbg !6189
  %233 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6190
  %is_67xx255 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %233, i32 0, i32 50, !dbg !6192
  %bf.load256 = load i16, i16* %is_67xx255, align 8, !dbg !6192
  %bf.lshr257 = lshr i16 %bf.load256, 7, !dbg !6192
  %bf.clear258 = and i16 %bf.lshr257, 1, !dbg !6192
  %bf.cast259 = zext i16 %bf.clear258 to i32, !dbg !6192
  %tobool260 = icmp ne i32 %bf.cast259, 0, !dbg !6190
  br i1 %tobool260, label %if.then261, label %if.else271, !dbg !6193

if.then261:                                       ; preds = %if.end251
  %234 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6194
  %type262 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %234, i32 0, i32 2, !dbg !6196
  store i32 1, i32* %type262, align 4, !dbg !6197
  %235 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6198
  %subdev_flags263 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %235, i32 0, i32 4, !dbg !6199
  store i32 4521984, i32* %subdev_flags263, align 4, !dbg !6200
  %236 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !6201
  %n_aochan264 = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %236, i32 0, i32 10, !dbg !6202
  %237 = load i32, i32* %n_aochan264, align 8, !dbg !6202
  %238 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6203
  %n_chan265 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %238, i32 0, i32 3, !dbg !6204
  store i32 %237, i32* %n_chan265, align 8, !dbg !6205
  %239 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6206
  %maxdata266 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %239, i32 0, i32 13, !dbg !6207
  store i32 65535, i32* %maxdata266, align 8, !dbg !6208
  %240 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6209
  %range_table267 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %240, i32 0, i32 15, !dbg !6210
  store %struct.comedi_lrange* @range_unknown, %struct.comedi_lrange** %range_table267, align 8, !dbg !6211
  %241 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6212
  %insn_read268 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %241, i32 0, i32 18, !dbg !6213
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @cs5529_ai_insn_read, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_read268, align 8, !dbg !6214
  %242 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6215
  %insn_config269 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %242, i32 0, i32 21, !dbg !6216
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* null, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_config269, align 8, !dbg !6217
  %243 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6218
  %call270 = call i32 @init_cs5529(%struct.comedi_device* %243) #9, !dbg !6219
  br label %if.end273, !dbg !6220

if.else271:                                       ; preds = %if.end251
  %244 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6221
  %type272 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %244, i32 0, i32 2, !dbg !6223
  store i32 0, i32* %type272, align 4, !dbg !6224
  br label %if.end273

if.end273:                                        ; preds = %if.else271, %if.then261
  %245 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6225
  %subdevices274 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %245, i32 0, i32 16, !dbg !6226
  %246 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices274, align 8, !dbg !6226
  %arrayidx275 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %246, i64 9, !dbg !6225
  store %struct.comedi_subdevice* %arrayidx275, %struct.comedi_subdevice** %s, align 8, !dbg !6227
  %247 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6228
  %type276 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %247, i32 0, i32 2, !dbg !6229
  store i32 11, i32* %type276, align 4, !dbg !6230
  %248 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6231
  %subdev_flags277 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %248, i32 0, i32 4, !dbg !6232
  store i32 458752, i32* %subdev_flags277, align 4, !dbg !6233
  %249 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6234
  %n_chan278 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %249, i32 0, i32 3, !dbg !6235
  store i32 1, i32* %n_chan278, align 8, !dbg !6236
  %250 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6237
  %maxdata279 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %250, i32 0, i32 13, !dbg !6238
  store i32 255, i32* %maxdata279, align 8, !dbg !6239
  %251 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6240
  %insn_config280 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %251, i32 0, i32 21, !dbg !6241
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_serial_insn_config, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_config280, align 8, !dbg !6242
  %252 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6243
  %serial_interval_ns = getelementptr inbounds %struct.ni_private, %struct.ni_private* %252, i32 0, i32 22, !dbg !6244
  store i64 0, i64* %serial_interval_ns, align 8, !dbg !6245
  %253 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6246
  %serial_hw_mode = getelementptr inbounds %struct.ni_private, %struct.ni_private* %253, i32 0, i32 23, !dbg !6247
  store i8 0, i8* %serial_hw_mode, align 8, !dbg !6248
  %254 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6249
  %subdevices281 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %254, i32 0, i32 16, !dbg !6250
  %255 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices281, align 8, !dbg !6250
  %arrayidx282 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %255, i64 10, !dbg !6249
  store %struct.comedi_subdevice* %arrayidx282, %struct.comedi_subdevice** %s, align 8, !dbg !6251
  %256 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6252
  %type283 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %256, i32 0, i32 2, !dbg !6253
  store i32 5, i32* %type283, align 4, !dbg !6254
  %257 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6255
  %subdev_flags284 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %257, i32 0, i32 4, !dbg !6256
  store i32 458752, i32* %subdev_flags284, align 4, !dbg !6257
  %258 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6258
  %n_chan285 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %258, i32 0, i32 3, !dbg !6259
  store i32 8, i32* %n_chan285, align 8, !dbg !6260
  %259 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6261
  %maxdata286 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %259, i32 0, i32 13, !dbg !6262
  store i32 1, i32* %maxdata286, align 8, !dbg !6263
  %260 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6264
  %insn_bits287 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %260, i32 0, i32 20, !dbg !6265
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_rtsi_insn_bits, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_bits287, align 8, !dbg !6266
  %261 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6267
  %insn_config288 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %261, i32 0, i32 21, !dbg !6268
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_rtsi_insn_config, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_config288, align 8, !dbg !6269
  %262 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6270
  call void @ni_rtsi_init(%struct.comedi_device* %262) #9, !dbg !6271
  %263 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6272
  %264 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6273
  %is_m_series289 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %264, i32 0, i32 50, !dbg !6274
  %bf.load290 = load i16, i16* %is_m_series289, align 8, !dbg !6274
  %bf.clear291 = and i16 %bf.load290, 1, !dbg !6274
  %bf.cast292 = zext i16 %bf.clear291 to i32, !dbg !6274
  %tobool293 = icmp ne i32 %bf.cast292, 0, !dbg !6275
  %265 = zext i1 %tobool293 to i64, !dbg !6275
  %cond294 = select i1 %tobool293, i32 1, i32 0, !dbg !6275
  %266 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6276
  %routing_tables295 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %266, i32 0, i32 51, !dbg !6277
  %call296 = call %struct.ni_gpct_device* @ni_gpct_device_construct(%struct.comedi_device* %263, void (%struct.ni_gpct*, i32, i32)* @ni_gpct_write_register, i32 (%struct.ni_gpct*, i32)* @ni_gpct_read_register, i32 %cond294, i32 2, i32 2, %struct.ni_route_tables* %routing_tables295) #9, !dbg !6278
  %267 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6279
  %counter_dev = getelementptr inbounds %struct.ni_private, %struct.ni_private* %267, i32 0, i32 19, !dbg !6280
  store %struct.ni_gpct_device* %call296, %struct.ni_gpct_device** %counter_dev, align 8, !dbg !6281
  %268 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6282
  %counter_dev297 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %268, i32 0, i32 19, !dbg !6284
  %269 = load %struct.ni_gpct_device*, %struct.ni_gpct_device** %counter_dev297, align 8, !dbg !6284
  %tobool298 = icmp ne %struct.ni_gpct_device* %269, null, !dbg !6282
  br i1 %tobool298, label %if.end300, label %if.then299, !dbg !6285

if.then299:                                       ; preds = %if.end273
  store i32 -12, i32* %retval, align 4, !dbg !6286
  br label %return, !dbg !6286

if.end300:                                        ; preds = %if.end273
  store i32 0, i32* %i, align 4, !dbg !6287
  br label %for.cond301, !dbg !6289

for.cond301:                                      ; preds = %for.inc340, %if.end300
  %270 = load i32, i32* %i, align 4, !dbg !6290
  %cmp302 = icmp slt i32 %270, 2, !dbg !6292
  br i1 %cmp302, label %for.body304, label %for.end342, !dbg !6293

for.body304:                                      ; preds = %for.cond301
  call void @llvm.dbg.declare(metadata %struct.ni_gpct** %gpct, metadata !6294, metadata !DIExpression()), !dbg !6296
  %271 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6297
  %counter_dev305 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %271, i32 0, i32 19, !dbg !6298
  %272 = load %struct.ni_gpct_device*, %struct.ni_gpct_device** %counter_dev305, align 8, !dbg !6298
  %counters = getelementptr inbounds %struct.ni_gpct_device, %struct.ni_gpct_device* %272, i32 0, i32 4, !dbg !6299
  %273 = load %struct.ni_gpct*, %struct.ni_gpct** %counters, align 8, !dbg !6299
  %274 = load i32, i32* %i, align 4, !dbg !6300
  %idxprom306 = sext i32 %274 to i64, !dbg !6297
  %arrayidx307 = getelementptr %struct.ni_gpct, %struct.ni_gpct* %273, i64 %idxprom306, !dbg !6297
  store %struct.ni_gpct* %arrayidx307, %struct.ni_gpct** %gpct, align 8, !dbg !6296
  %275 = load %struct.ni_gpct*, %struct.ni_gpct** %gpct, align 8, !dbg !6301
  call void @ni_tio_init_counter(%struct.ni_gpct* %275) #9, !dbg !6302
  %276 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6303
  %subdevices308 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %276, i32 0, i32 16, !dbg !6304
  %277 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices308, align 8, !dbg !6304
  %278 = load i32, i32* %i, align 4, !dbg !6305
  %add309 = add i32 11, %278, !dbg !6305
  %idxprom310 = sext i32 %add309 to i64, !dbg !6303
  %arrayidx311 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %277, i64 %idxprom310, !dbg !6303
  store %struct.comedi_subdevice* %arrayidx311, %struct.comedi_subdevice** %s, align 8, !dbg !6306
  %279 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6307
  %type312 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %279, i32 0, i32 2, !dbg !6308
  store i32 6, i32* %type312, align 4, !dbg !6309
  %280 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6310
  %subdev_flags313 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %280, i32 0, i32 4, !dbg !6311
  store i32 268632064, i32* %subdev_flags313, align 4, !dbg !6312
  %281 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6313
  %n_chan314 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %281, i32 0, i32 3, !dbg !6314
  store i32 3, i32* %n_chan314, align 8, !dbg !6315
  %282 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6316
  %is_m_series315 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %282, i32 0, i32 50, !dbg !6317
  %bf.load316 = load i16, i16* %is_m_series315, align 8, !dbg !6317
  %bf.clear317 = and i16 %bf.load316, 1, !dbg !6317
  %bf.cast318 = zext i16 %bf.clear317 to i32, !dbg !6317
  %tobool319 = icmp ne i32 %bf.cast318, 0, !dbg !6318
  %283 = zext i1 %tobool319 to i64, !dbg !6318
  %cond320 = select i1 %tobool319, i32 -1, i32 16777215, !dbg !6318
  %284 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6319
  %maxdata321 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %284, i32 0, i32 13, !dbg !6320
  store i32 %cond320, i32* %maxdata321, align 8, !dbg !6321
  %285 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6322
  %insn_read322 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %285, i32 0, i32 18, !dbg !6323
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_tio_insn_read, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_read322, align 8, !dbg !6324
  %286 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6325
  %insn_write323 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %286, i32 0, i32 19, !dbg !6326
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_tio_insn_write, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_write323, align 8, !dbg !6327
  %287 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6328
  %insn_config324 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %287, i32 0, i32 21, !dbg !6329
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_tio_insn_config, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_config324, align 8, !dbg !6330
  %288 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6331
  %irq325 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %288, i32 0, i32 20, !dbg !6333
  %289 = load i32, i32* %irq325, align 8, !dbg !6333
  %tobool326 = icmp ne i32 %289, 0, !dbg !6331
  br i1 %tobool326, label %land.lhs.true327, label %if.end338, !dbg !6334

land.lhs.true327:                                 ; preds = %for.body304
  %290 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6335
  %mite328 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %290, i32 0, i32 42, !dbg !6336
  %291 = load %struct.mite*, %struct.mite** %mite328, align 8, !dbg !6336
  %tobool329 = icmp ne %struct.mite* %291, null, !dbg !6335
  br i1 %tobool329, label %if.then330, label %if.end338, !dbg !6337

if.then330:                                       ; preds = %land.lhs.true327
  %292 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6338
  %subdev_flags331 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %292, i32 0, i32 4, !dbg !6340
  %293 = load i32, i32* %subdev_flags331, align 4, !dbg !6341
  %or332 = or i32 %293, 32768, !dbg !6341
  store i32 %or332, i32* %subdev_flags331, align 4, !dbg !6341
  %294 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6342
  %len_chanlist333 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %294, i32 0, i32 5, !dbg !6343
  store i32 1, i32* %len_chanlist333, align 8, !dbg !6344
  %295 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6345
  %do_cmdtest334 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %295, i32 0, i32 23, !dbg !6346
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_cmd*)* @ni_tio_cmdtest, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_cmd*)** %do_cmdtest334, align 8, !dbg !6347
  %296 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6348
  %do_cmd335 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %296, i32 0, i32 22, !dbg !6349
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*)* @ni_gpct_cmd, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %do_cmd335, align 8, !dbg !6350
  %297 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6351
  %cancel336 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %297, i32 0, i32 25, !dbg !6352
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*)* @ni_gpct_cancel, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %cancel336, align 8, !dbg !6353
  %298 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6354
  %async_dma_dir337 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %298, i32 0, i32 28, !dbg !6355
  store i32 0, i32* %async_dma_dir337, align 8, !dbg !6356
  br label %if.end338, !dbg !6357

if.end338:                                        ; preds = %if.then330, %land.lhs.true327, %for.body304
  %299 = load %struct.ni_gpct*, %struct.ni_gpct** %gpct, align 8, !dbg !6358
  %300 = bitcast %struct.ni_gpct* %299 to i8*, !dbg !6358
  %301 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6359
  %private339 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %301, i32 0, i32 6, !dbg !6360
  store i8* %300, i8** %private339, align 8, !dbg !6361
  br label %for.inc340, !dbg !6362

for.inc340:                                       ; preds = %if.end338
  %302 = load i32, i32* %i, align 4, !dbg !6363
  %inc341 = add i32 %302, 1, !dbg !6363
  store i32 %inc341, i32* %i, align 4, !dbg !6363
  br label %for.cond301, !dbg !6364, !llvm.loop !6365

for.end342:                                       ; preds = %for.cond301
  %303 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6367
  %call343 = call i32 @ni_set_gout_routing(i32 0, i32 0, %struct.comedi_device* %303) #9, !dbg !6368
  %304 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6369
  %call344 = call i32 @ni_set_gout_routing(i32 0, i32 1, %struct.comedi_device* %304) #9, !dbg !6370
  %305 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6371
  %subdevices345 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %305, i32 0, i32 16, !dbg !6372
  %306 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices345, align 8, !dbg !6372
  %arrayidx346 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %306, i64 13, !dbg !6371
  store %struct.comedi_subdevice* %arrayidx346, %struct.comedi_subdevice** %s, align 8, !dbg !6373
  %307 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6374
  %type347 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %307, i32 0, i32 2, !dbg !6375
  store i32 6, i32* %type347, align 4, !dbg !6376
  %308 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6377
  %subdev_flags348 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %308, i32 0, i32 4, !dbg !6378
  store i32 196608, i32* %subdev_flags348, align 4, !dbg !6379
  %309 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6380
  %n_chan349 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %309, i32 0, i32 3, !dbg !6381
  store i32 1, i32* %n_chan349, align 8, !dbg !6382
  %310 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6383
  %maxdata350 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %310, i32 0, i32 13, !dbg !6384
  store i32 15, i32* %maxdata350, align 8, !dbg !6385
  %311 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6386
  %insn_read351 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %311, i32 0, i32 18, !dbg !6387
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_freq_out_insn_read, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_read351, align 8, !dbg !6388
  %312 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6389
  %insn_write352 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %312, i32 0, i32 19, !dbg !6390
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_freq_out_insn_write, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_write352, align 8, !dbg !6391
  %313 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6392
  %insn_config353 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %313, i32 0, i32 21, !dbg !6393
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* @ni_freq_out_insn_config, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_config353, align 8, !dbg !6394
  %314 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6395
  %irq354 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %314, i32 0, i32 20, !dbg !6397
  %315 = load i32, i32* %irq354, align 8, !dbg !6397
  %tobool355 = icmp ne i32 %315, 0, !dbg !6395
  br i1 %tobool355, label %if.then356, label %if.end369, !dbg !6398

if.then356:                                       ; preds = %for.end342
  %316 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6399
  %317 = load i32, i32* %irq_polarity.addr, align 4, !dbg !6401
  %tobool357 = icmp ne i32 %317, 0, !dbg !6401
  %318 = zext i1 %tobool357 to i64, !dbg !6401
  %cond358 = select i1 %tobool357, i64 1, i64 0, !dbg !6401
  %or359 = or i64 %cond358, 2048, !dbg !6402
  %or360 = or i64 %or359, 32768, !dbg !6403
  %319 = load i32, i32* %interrupt_pin.addr, align 4, !dbg !6404
  %and361 = and i32 %319, 7, !dbg !6404
  %shl = shl i32 %and361, 8, !dbg !6404
  %conv362 = zext i32 %shl to i64, !dbg !6404
  %or363 = or i64 %or360, %conv362, !dbg !6405
  %320 = load i32, i32* %interrupt_pin.addr, align 4, !dbg !6406
  %and364 = and i32 %320, 7, !dbg !6406
  %shl365 = shl i32 %and364, 12, !dbg !6406
  %conv366 = zext i32 %shl365 to i64, !dbg !6406
  %or367 = or i64 %or363, %conv366, !dbg !6407
  %conv368 = trunc i64 %or367 to i32, !dbg !6408
  call void @ni_stc_writew(%struct.comedi_device* %316, i32 %conv368, i32 59) #9, !dbg !6409
  br label %if.end369, !dbg !6410

if.end369:                                        ; preds = %if.then356, %for.end342
  %321 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6411
  %322 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6412
  %ai_ao_select_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %322, i32 0, i32 33, !dbg !6413
  %323 = load i16, i16* %ai_ao_select_reg, align 2, !dbg !6413
  %conv370 = zext i16 %323 to i32, !dbg !6412
  call void @ni_writeb(%struct.comedi_device* %321, i32 %conv370, i32 9) #9, !dbg !6414
  %324 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6415
  %325 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6416
  %g0_g1_select_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %325, i32 0, i32 34, !dbg !6417
  %326 = load i16, i16* %g0_g1_select_reg, align 8, !dbg !6417
  %conv371 = zext i16 %326 to i32, !dbg !6416
  call void @ni_writeb(%struct.comedi_device* %324, i32 %conv371, i32 11) #9, !dbg !6418
  %327 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6419
  %is_6xxx372 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %327, i32 0, i32 50, !dbg !6421
  %bf.load373 = load i16, i16* %is_6xxx372, align 8, !dbg !6421
  %bf.lshr374 = lshr i16 %bf.load373, 1, !dbg !6421
  %bf.clear375 = and i16 %bf.lshr374, 1, !dbg !6421
  %bf.cast376 = zext i16 %bf.clear375 to i32, !dbg !6421
  %tobool377 = icmp ne i32 %bf.cast376, 0, !dbg !6419
  br i1 %tobool377, label %if.then378, label %if.else379, !dbg !6422

if.then378:                                       ; preds = %if.end369
  %328 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6423
  call void @ni_writeb(%struct.comedi_device* %328, i32 0, i32 25) #9, !dbg !6425
  br label %if.end398, !dbg !6426

if.else379:                                       ; preds = %if.end369
  %329 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6427
  %is_m_series380 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %329, i32 0, i32 50, !dbg !6429
  %bf.load381 = load i16, i16* %is_m_series380, align 8, !dbg !6429
  %bf.clear382 = and i16 %bf.load381, 1, !dbg !6429
  %bf.cast383 = zext i16 %bf.clear382 to i32, !dbg !6429
  %tobool384 = icmp ne i32 %bf.cast383, 0, !dbg !6427
  br i1 %tobool384, label %if.then385, label %if.end397, !dbg !6430

if.then385:                                       ; preds = %if.else379
  call void @llvm.dbg.declare(metadata i32* %channel, metadata !6431, metadata !DIExpression()), !dbg !6433
  store i32 0, i32* %channel, align 4, !dbg !6434
  br label %for.cond386, !dbg !6436

for.cond386:                                      ; preds = %for.inc394, %if.then385
  %330 = load i32, i32* %channel, align 4, !dbg !6437
  %331 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !6439
  %n_aochan387 = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %331, i32 0, i32 10, !dbg !6440
  %332 = load i32, i32* %n_aochan387, align 8, !dbg !6440
  %cmp388 = icmp slt i32 %330, %332, !dbg !6441
  br i1 %cmp388, label %for.body390, label %for.end396, !dbg !6442

for.body390:                                      ; preds = %for.cond386
  %333 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6443
  %334 = load i32, i32* %channel, align 4, !dbg !6445
  %mul391 = mul i32 %334, 4, !dbg !6445
  %add392 = add i32 194, %mul391, !dbg !6445
  call void @ni_writeb(%struct.comedi_device* %333, i32 15, i32 %add392) #9, !dbg !6446
  %335 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6447
  %336 = load i32, i32* %channel, align 4, !dbg !6448
  %add393 = add i32 612, %336, !dbg !6448
  call void @ni_writeb(%struct.comedi_device* %335, i32 0, i32 %add393) #9, !dbg !6449
  br label %for.inc394, !dbg !6450

for.inc394:                                       ; preds = %for.body390
  %337 = load i32, i32* %channel, align 4, !dbg !6451
  %inc395 = add i32 %337, 1, !dbg !6451
  store i32 %inc395, i32* %channel, align 4, !dbg !6451
  br label %for.cond386, !dbg !6452, !llvm.loop !6453

for.end396:                                       ; preds = %for.cond386
  %338 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6455
  call void @ni_writeb(%struct.comedi_device* %338, i32 0, i32 163) #9, !dbg !6456
  br label %if.end397, !dbg !6457

if.end397:                                        ; preds = %for.end396, %if.else379
  br label %if.end398

if.end398:                                        ; preds = %if.end397, %if.then378
  store i32 0, i32* %retval, align 4, !dbg !6458
  br label %return, !dbg !6458

return:                                           ; preds = %if.end398, %if.then299, %if.then177, %if.then86, %if.then20, %if.then5
  %339 = load i32, i32* %retval, align 4, !dbg !6459
  ret i32 %339, !dbg !6459
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcimio_ai_change(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #2 !dbg !6460 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %ret = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !6461, metadata !DIExpression()), !dbg !6462
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !6463, metadata !DIExpression()), !dbg !6464
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !6465, metadata !DIExpression()), !dbg !6466
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6467
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !6468
  %1 = load i8*, i8** %private, align 8, !dbg !6468
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !6467
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !6466
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6469, metadata !DIExpression()), !dbg !6470
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6471
  %ai_mite_ring = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 46, !dbg !6472
  %4 = load %struct.mite_ring*, %struct.mite_ring** %ai_mite_ring, align 8, !dbg !6472
  %5 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !6473
  %call = call i32 @mite_buf_change(%struct.mite_ring* %4, %struct.comedi_subdevice* %5) #9, !dbg !6474
  store i32 %call, i32* %ret, align 4, !dbg !6475
  %6 = load i32, i32* %ret, align 4, !dbg !6476
  %cmp = icmp slt i32 %6, 0, !dbg !6478
  br i1 %cmp, label %if.then, label %if.end, !dbg !6479

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %ret, align 4, !dbg !6480
  store i32 %7, i32* %retval, align 4, !dbg !6481
  br label %return, !dbg !6481

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6482
  br label %return, !dbg !6482

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !6483
  ret i32 %8, !dbg !6483
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcimio_ao_change(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #2 !dbg !6484 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %ret = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !6485, metadata !DIExpression()), !dbg !6486
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !6487, metadata !DIExpression()), !dbg !6488
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !6489, metadata !DIExpression()), !dbg !6490
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6491
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !6492
  %1 = load i8*, i8** %private, align 8, !dbg !6492
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !6491
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !6490
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6493, metadata !DIExpression()), !dbg !6494
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6495
  %ao_mite_ring = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 47, !dbg !6496
  %4 = load %struct.mite_ring*, %struct.mite_ring** %ao_mite_ring, align 8, !dbg !6496
  %5 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !6497
  %call = call i32 @mite_buf_change(%struct.mite_ring* %4, %struct.comedi_subdevice* %5) #9, !dbg !6498
  store i32 %call, i32* %ret, align 4, !dbg !6499
  %6 = load i32, i32* %ret, align 4, !dbg !6500
  %cmp = icmp slt i32 %6, 0, !dbg !6502
  br i1 %cmp, label %if.then, label %if.end, !dbg !6503

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %ret, align 4, !dbg !6504
  store i32 %7, i32* %retval, align 4, !dbg !6505
  br label %return, !dbg !6505

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6506
  br label %return, !dbg !6506

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !6507
  ret i32 %8, !dbg !6507
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcimio_gpct0_change(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #2 !dbg !6508 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %ret = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !6509, metadata !DIExpression()), !dbg !6510
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !6511, metadata !DIExpression()), !dbg !6512
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !6513, metadata !DIExpression()), !dbg !6514
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6515
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !6516
  %1 = load i8*, i8** %private, align 8, !dbg !6516
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !6515
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !6514
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6517, metadata !DIExpression()), !dbg !6518
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6519
  %gpct_mite_ring = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 49, !dbg !6520
  %arrayidx = getelementptr [2 x %struct.mite_ring*], [2 x %struct.mite_ring*]* %gpct_mite_ring, i64 0, i64 0, !dbg !6519
  %4 = load %struct.mite_ring*, %struct.mite_ring** %arrayidx, align 8, !dbg !6519
  %5 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !6521
  %call = call i32 @mite_buf_change(%struct.mite_ring* %4, %struct.comedi_subdevice* %5) #9, !dbg !6522
  store i32 %call, i32* %ret, align 4, !dbg !6523
  %6 = load i32, i32* %ret, align 4, !dbg !6524
  %cmp = icmp slt i32 %6, 0, !dbg !6526
  br i1 %cmp, label %if.then, label %if.end, !dbg !6527

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %ret, align 4, !dbg !6528
  store i32 %7, i32* %retval, align 4, !dbg !6529
  br label %return, !dbg !6529

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6530
  br label %return, !dbg !6530

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !6531
  ret i32 %8, !dbg !6531
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcimio_gpct1_change(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #2 !dbg !6532 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %ret = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !6533, metadata !DIExpression()), !dbg !6534
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !6535, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !6537, metadata !DIExpression()), !dbg !6538
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6539
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !6540
  %1 = load i8*, i8** %private, align 8, !dbg !6540
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !6539
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !6538
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6541, metadata !DIExpression()), !dbg !6542
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6543
  %gpct_mite_ring = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 49, !dbg !6544
  %arrayidx = getelementptr [2 x %struct.mite_ring*], [2 x %struct.mite_ring*]* %gpct_mite_ring, i64 0, i64 1, !dbg !6543
  %4 = load %struct.mite_ring*, %struct.mite_ring** %arrayidx, align 8, !dbg !6543
  %5 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !6545
  %call = call i32 @mite_buf_change(%struct.mite_ring* %4, %struct.comedi_subdevice* %5) #9, !dbg !6546
  store i32 %call, i32* %ret, align 4, !dbg !6547
  %6 = load i32, i32* %ret, align 4, !dbg !6548
  %cmp = icmp slt i32 %6, 0, !dbg !6550
  br i1 %cmp, label %if.then, label %if.end, !dbg !6551

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %ret, align 4, !dbg !6552
  store i32 %7, i32* %retval, align 4, !dbg !6553
  br label %return, !dbg !6553

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6554
  br label %return, !dbg !6554

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !6555
  ret i32 %8, !dbg !6555
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pcimio_dio_change(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #2 !dbg !6556 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %ret = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !6557, metadata !DIExpression()), !dbg !6558
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !6559, metadata !DIExpression()), !dbg !6560
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !6561, metadata !DIExpression()), !dbg !6562
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6563
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !6564
  %1 = load i8*, i8** %private, align 8, !dbg !6564
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !6563
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !6562
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6565, metadata !DIExpression()), !dbg !6566
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6567
  %cdo_mite_ring = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 48, !dbg !6568
  %4 = load %struct.mite_ring*, %struct.mite_ring** %cdo_mite_ring, align 8, !dbg !6568
  %5 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !6569
  %call = call i32 @mite_buf_change(%struct.mite_ring* %4, %struct.comedi_subdevice* %5) #9, !dbg !6570
  store i32 %call, i32* %ret, align 4, !dbg !6571
  %6 = load i32, i32* %ret, align 4, !dbg !6572
  %cmp = icmp slt i32 %6, 0, !dbg !6574
  br i1 %cmp, label %if.then, label %if.end, !dbg !6575

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %ret, align 4, !dbg !6576
  store i32 %7, i32* %retval, align 4, !dbg !6577
  br label %return, !dbg !6577

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6578
  br label %return, !dbg !6578

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !6579
  ret i32 %8, !dbg !6579
}

; Function Attrs: noredzone
declare dso_local i8* @comedi_alloc_devpriv(%struct.comedi_device*, i64) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #2 !dbg !6580 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !6587, metadata !DIExpression()), !dbg !6588
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6589, metadata !DIExpression()), !dbg !6588
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !6588
  %1 = bitcast i8* %0 to i32*, !dbg !6588
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #7, !dbg !6588, !srcloc !6590
  store i32 %2, i32* %ret, align 4, !dbg !6588
  %3 = load i32, i32* %ret, align 4, !dbg !6588
  ret i32 %3, !dbg !6588
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #2 !dbg !6591 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !6595, metadata !DIExpression()), !dbg !6596
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !6597, metadata !DIExpression()), !dbg !6596
  %0 = load i32, i32* %val.addr, align 4, !dbg !6596
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !6596
  %2 = bitcast i8* %1 to i32*, !dbg !6596
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #7, !dbg !6596, !srcloc !6598
  ret void, !dbg !6596
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_readb(%struct.comedi_device* %dev, i32 %reg) #2 !dbg !6599 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %reg.addr = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !6602, metadata !DIExpression()), !dbg !6603
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !6604, metadata !DIExpression()), !dbg !6605
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6606
  %mmio = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 17, !dbg !6608
  %1 = load i8*, i8** %mmio, align 8, !dbg !6608
  %tobool = icmp ne i8* %1, null, !dbg !6606
  br i1 %tobool, label %if.then, label %if.end, !dbg !6609

if.then:                                          ; preds = %entry
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6610
  %mmio1 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %2, i32 0, i32 17, !dbg !6611
  %3 = load i8*, i8** %mmio1, align 8, !dbg !6611
  %4 = load i32, i32* %reg.addr, align 4, !dbg !6612
  %idx.ext = sext i32 %4 to i64, !dbg !6613
  %add.ptr = getelementptr i8, i8* %3, i64 %idx.ext, !dbg !6613
  %call = call zeroext i8 @readb(i8* %add.ptr) #9, !dbg !6614
  %conv = zext i8 %call to i32, !dbg !6614
  store i32 %conv, i32* %retval, align 4, !dbg !6615
  br label %return, !dbg !6615

if.end:                                           ; preds = %entry
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6616
  %iobase = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %5, i32 0, i32 18, !dbg !6617
  %6 = load i64, i64* %iobase, align 8, !dbg !6617
  %7 = load i32, i32* %reg.addr, align 4, !dbg !6618
  %conv2 = sext i32 %7 to i64, !dbg !6618
  %add = add i64 %6, %conv2, !dbg !6619
  %conv3 = trunc i64 %add to i32, !dbg !6616
  %call4 = call zeroext i8 @inb(i32 %conv3) #9, !dbg !6620
  %conv5 = zext i8 %call4 to i32, !dbg !6620
  store i32 %conv5, i32* %retval, align 4, !dbg !6621
  br label %return, !dbg !6621

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !6622
  ret i32 %8, !dbg !6622
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @readb(i8* %addr) #2 !dbg !6623 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i8, align 1
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !6626, metadata !DIExpression()), !dbg !6627
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !6628, metadata !DIExpression()), !dbg !6627
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !6627
  %1 = call i8 asm sideeffect "movb $1,$0", "=q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %0) #7, !dbg !6627, !srcloc !6629
  store i8 %1, i8* %ret, align 1, !dbg !6627
  %2 = load i8, i8* %ret, align 1, !dbg !6627
  ret i8 %2, !dbg !6627
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @inb(i32 %port) #2 !dbg !6630 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i8, align 1
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !6633, metadata !DIExpression()), !dbg !6634
  call void @llvm.dbg.declare(metadata i8* %value, metadata !6635, metadata !DIExpression()), !dbg !6634
  %0 = load i32, i32* %port.addr, align 4, !dbg !6634
  %1 = call i8 asm sideeffect "inb ${1:w}, ${0:b}", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #7, !dbg !6634, !srcloc !6636
  store i8 %1, i8* %value, align 1, !dbg !6634
  %2 = load i8, i8* %value, align 1, !dbg !6634
  ret i8 %2, !dbg !6634
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_stc_writew(%struct.comedi_device* %dev, i32 %data, i32 %reg) #2 !dbg !6637 {
entry:
  %lock.addr.i26 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i26, metadata !5432, metadata !DIExpression()), !dbg !6640
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5440, metadata !DIExpression()), !dbg !6644
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5232, metadata !DIExpression()), !dbg !6645
  %dev.addr = alloca %struct.comedi_device*, align 8
  %data.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !6652, metadata !DIExpression()), !dbg !6653
  store i32 %data, i32* %data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data.addr, metadata !6654, metadata !DIExpression()), !dbg !6655
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !6656, metadata !DIExpression()), !dbg !6657
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !6658, metadata !DIExpression()), !dbg !6659
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6660
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !6661
  %1 = load i8*, i8** %private, align 8, !dbg !6661
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !6660
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !6659
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6662, metadata !DIExpression()), !dbg !6663
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6664
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 50, !dbg !6665
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !6665
  %bf.clear = and i16 %bf.load, 1, !dbg !6665
  %bf.cast = zext i16 %bf.clear to i32, !dbg !6665
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6664
  br i1 %tobool, label %if.then, label %if.else, !dbg !6666

if.then:                                          ; preds = %entry
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6667
  %5 = load i32, i32* %data.addr, align 4, !dbg !6669
  %6 = load i32, i32* %reg.addr, align 4, !dbg !6670
  call void @m_series_stc_write(%struct.comedi_device* %4, i32 %5, i32 %6) #9, !dbg !6671
  br label %if.end25, !dbg !6672

if.else:                                          ; preds = %entry
  br label %do.body, !dbg !6673

do.body:                                          ; preds = %if.else
  br label %do.body1, !dbg !6674

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6675, metadata !DIExpression()), !dbg !6677
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6678, metadata !DIExpression()), !dbg !6677
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6677
  %conv = zext i1 %cmp to i32, !dbg !6677
  store i32 1, i32* %tmp, align 4, !dbg !6677
  %7 = load i32, i32* %tmp, align 4, !dbg !6677
  br label %do.body2, !dbg !6679

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6680

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6681

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6683, metadata !DIExpression()), !dbg !6686
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6687, metadata !DIExpression()), !dbg !6686
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6686
  %conv8 = zext i1 %cmp7 to i32, !dbg !6686
  store i32 1, i32* %tmp9, align 4, !dbg !6686
  %8 = load i32, i32* %tmp9, align 4, !dbg !6686
  %call = call i64 @arch_local_irq_save() #9, !dbg !6688
  store i64 %call, i64* %flags, align 8, !dbg !6688
  br label %do.end, !dbg !6688

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !6681

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !6680

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6689, !srcloc !6690
  br label %do.body12, !dbg !6689

do.body12:                                        ; preds = %do.body11
  %9 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6691
  %window_lock = getelementptr inbounds %struct.ni_private, %struct.ni_private* %9, i32 0, i32 5, !dbg !6691
  store %struct.spinlock* %window_lock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6692
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !6693
  %rlock.i = bitcast %union.anon.3* %11 to %struct.raw_spinlock*, !dbg !6693
  br label %do.end14, !dbg !6691

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !6689

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !6680

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6679

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6674

do.end18:                                         ; preds = %do.end17
  %12 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6694
  %mite = getelementptr inbounds %struct.ni_private, %struct.ni_private* %12, i32 0, i32 42, !dbg !6696
  %13 = load %struct.mite*, %struct.mite** %mite, align 8, !dbg !6696
  %tobool19 = icmp ne %struct.mite* %13, null, !dbg !6694
  br i1 %tobool19, label %if.else23, label %land.lhs.true, !dbg !6697

land.lhs.true:                                    ; preds = %do.end18
  %14 = load i32, i32* %reg.addr, align 4, !dbg !6698
  %cmp20 = icmp slt i32 %14, 8, !dbg !6699
  br i1 %cmp20, label %if.then22, label %if.else23, !dbg !6700

if.then22:                                        ; preds = %land.lhs.true
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6701
  %16 = load i32, i32* %data.addr, align 4, !dbg !6703
  %17 = load i32, i32* %reg.addr, align 4, !dbg !6704
  %mul = mul i32 %17, 2, !dbg !6705
  call void @ni_writew(%struct.comedi_device* %15, i32 %16, i32 %mul) #9, !dbg !6706
  br label %if.end, !dbg !6707

if.else23:                                        ; preds = %land.lhs.true, %do.end18
  %18 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6708
  %19 = load i32, i32* %reg.addr, align 4, !dbg !6710
  call void @ni_writew(%struct.comedi_device* %18, i32 %19, i32 0) #9, !dbg !6711
  %20 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6712
  %21 = load i32, i32* %data.addr, align 4, !dbg !6713
  call void @ni_writew(%struct.comedi_device* %20, i32 %21, i32 2) #9, !dbg !6714
  br label %if.end

if.end:                                           ; preds = %if.else23, %if.then22
  %22 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6715
  %window_lock24 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %22, i32 0, i32 5, !dbg !6716
  %23 = load i64, i64* %flags, align 8, !dbg !6717
  store %struct.spinlock* %window_lock24, %struct.spinlock** %lock.addr.i26, align 8
  store i64 %23, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !6718
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !6718
  store i32 1, i32* %tmp.i, align 4, !dbg !6718
  %24 = load i32, i32* %tmp.i, align 4, !dbg !6718
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !6719
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !6719
  store i32 1, i32* %tmp8.i, align 4, !dbg !6719
  %25 = load i32, i32* %tmp8.i, align 4, !dbg !6719
  %26 = load i64, i64* %flags.addr.i, align 8, !dbg !6720
  call void @arch_local_irq_restore(i64 %26) #10, !dbg !6720
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6721, !srcloc !5582
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i26, align 8, !dbg !6722
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !6722
  %rlock.i27 = bitcast %union.anon.3* %28 to %struct.raw_spinlock*, !dbg !6722
  br label %if.end25

if.end25:                                         ; preds = %if.end, %if.then
  ret void, !dbg !6723
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_writeb(%struct.comedi_device* %dev, i32 %data, i32 %reg) #2 !dbg !6724 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %data.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !6725, metadata !DIExpression()), !dbg !6726
  store i32 %data, i32* %data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data.addr, metadata !6727, metadata !DIExpression()), !dbg !6728
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !6729, metadata !DIExpression()), !dbg !6730
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6731
  %mmio = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 17, !dbg !6733
  %1 = load i8*, i8** %mmio, align 8, !dbg !6733
  %tobool = icmp ne i8* %1, null, !dbg !6731
  br i1 %tobool, label %if.then, label %if.else, !dbg !6734

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %data.addr, align 4, !dbg !6735
  %conv = trunc i32 %2 to i8, !dbg !6735
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6736
  %mmio1 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 17, !dbg !6737
  %4 = load i8*, i8** %mmio1, align 8, !dbg !6737
  %5 = load i32, i32* %reg.addr, align 4, !dbg !6738
  %idx.ext = sext i32 %5 to i64, !dbg !6739
  %add.ptr = getelementptr i8, i8* %4, i64 %idx.ext, !dbg !6739
  call void @writeb(i8 zeroext %conv, i8* %add.ptr) #9, !dbg !6740
  br label %if.end, !dbg !6740

if.else:                                          ; preds = %entry
  %6 = load i32, i32* %data.addr, align 4, !dbg !6741
  %conv2 = trunc i32 %6 to i8, !dbg !6741
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6742
  %iobase = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %7, i32 0, i32 18, !dbg !6743
  %8 = load i64, i64* %iobase, align 8, !dbg !6743
  %9 = load i32, i32* %reg.addr, align 4, !dbg !6744
  %conv3 = sext i32 %9 to i64, !dbg !6744
  %add = add i64 %8, %conv3, !dbg !6745
  %conv4 = trunc i64 %add to i32, !dbg !6742
  call void @outb(i8 zeroext %conv2, i32 %conv4) #9, !dbg !6746
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !6747
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_writel(%struct.comedi_device* %dev, i32 %data, i32 %reg) #2 !dbg !6748 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %data.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !6749, metadata !DIExpression()), !dbg !6750
  store i32 %data, i32* %data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data.addr, metadata !6751, metadata !DIExpression()), !dbg !6752
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !6753, metadata !DIExpression()), !dbg !6754
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6755
  %mmio = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 17, !dbg !6757
  %1 = load i8*, i8** %mmio, align 8, !dbg !6757
  %tobool = icmp ne i8* %1, null, !dbg !6755
  br i1 %tobool, label %if.then, label %if.else, !dbg !6758

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %data.addr, align 4, !dbg !6759
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6760
  %mmio1 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 17, !dbg !6761
  %4 = load i8*, i8** %mmio1, align 8, !dbg !6761
  %5 = load i32, i32* %reg.addr, align 4, !dbg !6762
  %idx.ext = sext i32 %5 to i64, !dbg !6763
  %add.ptr = getelementptr i8, i8* %4, i64 %idx.ext, !dbg !6763
  call void @writel(i32 %2, i8* %add.ptr) #9, !dbg !6764
  br label %if.end, !dbg !6764

if.else:                                          ; preds = %entry
  %6 = load i32, i32* %data.addr, align 4, !dbg !6765
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6766
  %iobase = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %7, i32 0, i32 18, !dbg !6767
  %8 = load i64, i64* %iobase, align 8, !dbg !6767
  %9 = load i32, i32* %reg.addr, align 4, !dbg !6768
  %conv = sext i32 %9 to i64, !dbg !6768
  %add = add i64 %8, %conv, !dbg !6769
  %conv2 = trunc i64 %add to i32, !dbg !6766
  call void @outl(i32 %6, i32 %conv2) #9, !dbg !6770
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !6771
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_writew(%struct.comedi_device* %dev, i32 %data, i32 %reg) #2 !dbg !6772 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %data.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !6773, metadata !DIExpression()), !dbg !6774
  store i32 %data, i32* %data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data.addr, metadata !6775, metadata !DIExpression()), !dbg !6776
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !6777, metadata !DIExpression()), !dbg !6778
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6779
  %mmio = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 17, !dbg !6781
  %1 = load i8*, i8** %mmio, align 8, !dbg !6781
  %tobool = icmp ne i8* %1, null, !dbg !6779
  br i1 %tobool, label %if.then, label %if.else, !dbg !6782

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %data.addr, align 4, !dbg !6783
  %conv = trunc i32 %2 to i16, !dbg !6783
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6784
  %mmio1 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 17, !dbg !6785
  %4 = load i8*, i8** %mmio1, align 8, !dbg !6785
  %5 = load i32, i32* %reg.addr, align 4, !dbg !6786
  %idx.ext = sext i32 %5 to i64, !dbg !6787
  %add.ptr = getelementptr i8, i8* %4, i64 %idx.ext, !dbg !6787
  call void @writew(i16 zeroext %conv, i8* %add.ptr) #9, !dbg !6788
  br label %if.end, !dbg !6788

if.else:                                          ; preds = %entry
  %6 = load i32, i32* %data.addr, align 4, !dbg !6789
  %conv2 = trunc i32 %6 to i16, !dbg !6789
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6790
  %iobase = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %7, i32 0, i32 18, !dbg !6791
  %8 = load i64, i64* %iobase, align 8, !dbg !6791
  %9 = load i32, i32* %reg.addr, align 4, !dbg !6792
  %conv3 = sext i32 %9 to i64, !dbg !6792
  %add = add i64 %8, %conv3, !dbg !6793
  %conv4 = trunc i64 %add to i32, !dbg !6790
  call void @outw(i16 zeroext %conv2, i32 %conv4) #9, !dbg !6794
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !6795
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @m_series_stc_write(%struct.comedi_device* %dev, i32 %data, i32 %reg) #2 !dbg !6796 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %data.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  %regmap = alloca %struct.mio_regmap*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !6799, metadata !DIExpression()), !dbg !6800
  store i32 %data, i32* %data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data.addr, metadata !6801, metadata !DIExpression()), !dbg !6802
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !6803, metadata !DIExpression()), !dbg !6804
  call void @llvm.dbg.declare(metadata %struct.mio_regmap** %regmap, metadata !6805, metadata !DIExpression()), !dbg !6807
  %0 = load i32, i32* %reg.addr, align 4, !dbg !6808
  %conv = zext i32 %0 to i64, !dbg !6808
  %cmp = icmp ult i64 %conv, 88, !dbg !6810
  br i1 %cmp, label %if.then, label %if.else, !dbg !6811

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %reg.addr, align 4, !dbg !6812
  %idxprom = zext i32 %1 to i64, !dbg !6814
  %arrayidx = getelementptr [88 x %struct.mio_regmap], [88 x %struct.mio_regmap]* @m_series_stc_write_regmap, i64 0, i64 %idxprom, !dbg !6814
  store %struct.mio_regmap* %arrayidx, %struct.mio_regmap** %regmap, align 8, !dbg !6815
  br label %if.end, !dbg !6816

if.else:                                          ; preds = %entry
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6817
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %2, i32 0, i32 4, !dbg !6817
  %3 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !6817
  %4 = load i32, i32* %reg.addr, align 4, !dbg !6817
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.m_series_stc_write, i64 0, i64 0), i32 %4) #11, !dbg !6817
  br label %sw.epilog, !dbg !6819

if.end:                                           ; preds = %if.then
  %5 = load %struct.mio_regmap*, %struct.mio_regmap** %regmap, align 8, !dbg !6820
  %size = getelementptr inbounds %struct.mio_regmap, %struct.mio_regmap* %5, i32 0, i32 1, !dbg !6821
  %6 = load i32, i32* %size, align 4, !dbg !6821
  switch i32 %6, label %sw.default [
    i32 4, label %sw.bb
    i32 2, label %sw.bb2
  ], !dbg !6822

sw.bb:                                            ; preds = %if.end
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6823
  %8 = load i32, i32* %data.addr, align 4, !dbg !6825
  %9 = load %struct.mio_regmap*, %struct.mio_regmap** %regmap, align 8, !dbg !6826
  %mio_reg = getelementptr inbounds %struct.mio_regmap, %struct.mio_regmap* %9, i32 0, i32 0, !dbg !6827
  %10 = load i32, i32* %mio_reg, align 4, !dbg !6827
  call void @ni_writel(%struct.comedi_device* %7, i32 %8, i32 %10) #9, !dbg !6828
  br label %sw.epilog, !dbg !6829

sw.bb2:                                           ; preds = %if.end
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6830
  %12 = load i32, i32* %data.addr, align 4, !dbg !6831
  %13 = load %struct.mio_regmap*, %struct.mio_regmap** %regmap, align 8, !dbg !6832
  %mio_reg3 = getelementptr inbounds %struct.mio_regmap, %struct.mio_regmap* %13, i32 0, i32 0, !dbg !6833
  %14 = load i32, i32* %mio_reg3, align 4, !dbg !6833
  call void @ni_writew(%struct.comedi_device* %11, i32 %12, i32 %14) #9, !dbg !6834
  br label %sw.epilog, !dbg !6835

sw.default:                                       ; preds = %if.end
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6836
  %class_dev4 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %15, i32 0, i32 4, !dbg !6836
  %16 = load %struct.device*, %struct.device** %class_dev4, align 8, !dbg !6836
  %17 = load i32, i32* %reg.addr, align 4, !dbg !6836
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.m_series_stc_write, i64 0, i64 0), i32 %17) #11, !dbg !6836
  br label %sw.epilog, !dbg !6837

sw.epilog:                                        ; preds = %if.else, %sw.default, %sw.bb2, %sw.bb
  ret void, !dbg !6838
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #2 !dbg !6839 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !6843, metadata !DIExpression()), !dbg !6844
  %call = call i64 @arch_local_save_flags() #9, !dbg !6845
  store i64 %call, i64* %f, align 8, !dbg !6846
  call void @arch_local_irq_disable() #9, !dbg !6847
  %0 = load i64, i64* %f, align 8, !dbg !6848
  ret i64 %0, !dbg !6849
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #2 !dbg !6850 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !6851, metadata !DIExpression()), !dbg !6853
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6854, metadata !DIExpression()), !dbg !6853
  %0 = load i64, i64* %__edi, align 8, !dbg !6853
  store i64 %0, i64* %__edi, align 8, !dbg !6853
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6855, metadata !DIExpression()), !dbg !6853
  %1 = load i64, i64* %__esi, align 8, !dbg !6853
  store i64 %1, i64* %__esi, align 8, !dbg !6853
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6856, metadata !DIExpression()), !dbg !6853
  %2 = load i64, i64* %__edx, align 8, !dbg !6853
  store i64 %2, i64* %__edx, align 8, !dbg !6853
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6857, metadata !DIExpression()), !dbg !6853
  %3 = load i64, i64* %__ecx, align 8, !dbg !6853
  store i64 %3, i64* %__ecx, align 8, !dbg !6853
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6858, metadata !DIExpression()), !dbg !6853
  %4 = load i64, i64* %__eax, align 8, !dbg !6853
  store i64 %4, i64* %__eax, align 8, !dbg !6853
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !6853
  %6 = call i64 @llvm.read_register.i64(metadata !4715), !dbg !6859
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #7, !dbg !6859, !srcloc !6862
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !6859
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !6859
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6859
  call void @llvm.write_register.i64(metadata !4715, i64 %asmresult1), !dbg !6859
  %8 = load i64, i64* %__eax, align 8, !dbg !6859
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !6863, metadata !DIExpression()), !dbg !6865
  store i64 -1, i64* %__mask, align 8, !dbg !6865
  %9 = load i64, i64* %__mask, align 8, !dbg !6865
  store i64 %9, i64* %tmp, align 8, !dbg !6865
  %10 = load i64, i64* %tmp, align 8, !dbg !6865
  %and = and i64 %8, %10, !dbg !6859
  store i64 %and, i64* %__ret, align 8, !dbg !6859
  %11 = load i64, i64* %__ret, align 8, !dbg !6853
  store i64 %11, i64* %tmp2, align 8, !dbg !6866
  %12 = load i64, i64* %tmp2, align 8, !dbg !6853
  ret i64 %12, !dbg !6867
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #2 !dbg !6868 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6869, metadata !DIExpression()), !dbg !6871
  %0 = load i64, i64* %__edi, align 8, !dbg !6871
  store i64 %0, i64* %__edi, align 8, !dbg !6871
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6872, metadata !DIExpression()), !dbg !6871
  %1 = load i64, i64* %__esi, align 8, !dbg !6871
  store i64 %1, i64* %__esi, align 8, !dbg !6871
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6873, metadata !DIExpression()), !dbg !6871
  %2 = load i64, i64* %__edx, align 8, !dbg !6871
  store i64 %2, i64* %__edx, align 8, !dbg !6871
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6874, metadata !DIExpression()), !dbg !6871
  %3 = load i64, i64* %__ecx, align 8, !dbg !6871
  store i64 %3, i64* %__ecx, align 8, !dbg !6871
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6875, metadata !DIExpression()), !dbg !6871
  %4 = load i64, i64* %__eax, align 8, !dbg !6871
  store i64 %4, i64* %__eax, align 8, !dbg !6871
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !6871
  %6 = call i64 @llvm.read_register.i64(metadata !4715), !dbg !6871
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #7, !dbg !6871, !srcloc !6876
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !6871
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !6871
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6871
  call void @llvm.write_register.i64(metadata !4715, i64 %asmresult1), !dbg !6871
  ret void, !dbg !6877
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #6

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #2 !dbg !6878 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !6881, metadata !DIExpression()), !dbg !6882
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6883, metadata !DIExpression()), !dbg !6885
  %0 = load i64, i64* %__edi, align 8, !dbg !6885
  store i64 %0, i64* %__edi, align 8, !dbg !6885
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6886, metadata !DIExpression()), !dbg !6885
  %1 = load i64, i64* %__esi, align 8, !dbg !6885
  store i64 %1, i64* %__esi, align 8, !dbg !6885
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6887, metadata !DIExpression()), !dbg !6885
  %2 = load i64, i64* %__edx, align 8, !dbg !6885
  store i64 %2, i64* %__edx, align 8, !dbg !6885
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6888, metadata !DIExpression()), !dbg !6885
  %3 = load i64, i64* %__ecx, align 8, !dbg !6885
  store i64 %3, i64* %__ecx, align 8, !dbg !6885
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6889, metadata !DIExpression()), !dbg !6885
  %4 = load i64, i64* %__eax, align 8, !dbg !6885
  store i64 %4, i64* %__eax, align 8, !dbg !6885
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !6885
  %6 = call i64 @llvm.read_register.i64(metadata !4715), !dbg !6885
  %7 = load i64, i64* %f.addr, align 8, !dbg !6885
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #7, !dbg !6885, !srcloc !6890
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !6885
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !6885
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6885
  call void @llvm.write_register.i64(metadata !4715, i64 %asmresult1), !dbg !6885
  ret void, !dbg !6891
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writeb(i8 zeroext %val, i8* %addr) #2 !dbg !6892 {
entry:
  %val.addr = alloca i8, align 1
  %addr.addr = alloca i8*, align 8
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !6895, metadata !DIExpression()), !dbg !6896
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !6897, metadata !DIExpression()), !dbg !6896
  %0 = load i8, i8* %val.addr, align 1, !dbg !6896
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !6896
  call void asm sideeffect "movb $0,$1", "q,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8 %0, i8* %1) #7, !dbg !6896, !srcloc !6898
  ret void, !dbg !6896
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outb(i8 zeroext %value, i32 %port) #2 !dbg !6899 {
entry:
  %value.addr = alloca i8, align 1
  %port.addr = alloca i32, align 4
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !6902, metadata !DIExpression()), !dbg !6903
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !6904, metadata !DIExpression()), !dbg !6903
  %0 = load i8, i8* %value.addr, align 1, !dbg !6903
  %1 = load i32, i32* %port.addr, align 4, !dbg !6903
  call void asm sideeffect "outb ${0:b}, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i8 %0, i32 %1) #7, !dbg !6903, !srcloc !6905
  ret void, !dbg !6903
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outl(i32 %value, i32 %port) #2 !dbg !6906 {
entry:
  %value.addr = alloca i32, align 4
  %port.addr = alloca i32, align 4
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !6909, metadata !DIExpression()), !dbg !6910
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !6911, metadata !DIExpression()), !dbg !6910
  %0 = load i32, i32* %value.addr, align 4, !dbg !6910
  %1 = load i32, i32* %port.addr, align 4, !dbg !6910
  call void asm sideeffect "outl $0, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32 %1) #7, !dbg !6910, !srcloc !6912
  ret void, !dbg !6910
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writew(i16 zeroext %val, i8* %addr) #2 !dbg !6913 {
entry:
  %val.addr = alloca i16, align 2
  %addr.addr = alloca i8*, align 8
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !6916, metadata !DIExpression()), !dbg !6917
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !6918, metadata !DIExpression()), !dbg !6917
  %0 = load i16, i16* %val.addr, align 2, !dbg !6917
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !6917
  %2 = bitcast i8* %1 to i16*, !dbg !6917
  call void asm sideeffect "movw $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16 %0, i16* %2) #7, !dbg !6917, !srcloc !6919
  ret void, !dbg !6917
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outw(i16 zeroext %value, i32 %port) #2 !dbg !6920 {
entry:
  %value.addr = alloca i16, align 2
  %port.addr = alloca i32, align 4
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !6923, metadata !DIExpression()), !dbg !6924
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !6925, metadata !DIExpression()), !dbg !6924
  %0 = load i16, i16* %value.addr, align 2, !dbg !6924
  %1 = load i32, i32* %port.addr, align 4, !dbg !6924
  call void asm sideeffect "outw ${0:w}, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i16 %0, i32 %1) #7, !dbg !6924, !srcloc !6926
  ret void, !dbg !6924
}

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_stc_readw(%struct.comedi_device* %dev, i32 %reg) #2 !dbg !6927 {
entry:
  %lock.addr.i29 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i29, metadata !5432, metadata !DIExpression()), !dbg !6928
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5440, metadata !DIExpression()), !dbg !6932
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5232, metadata !DIExpression()), !dbg !6933
  %dev.addr = alloca %struct.comedi_device*, align 8
  %reg.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  %flags = alloca i64, align 8
  %val = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !6940, metadata !DIExpression()), !dbg !6941
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !6942, metadata !DIExpression()), !dbg !6943
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !6944, metadata !DIExpression()), !dbg !6945
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6946
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !6947
  %1 = load i8*, i8** %private, align 8, !dbg !6947
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !6946
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !6945
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6948, metadata !DIExpression()), !dbg !6949
  call void @llvm.dbg.declare(metadata i32* %val, metadata !6950, metadata !DIExpression()), !dbg !6951
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6952
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 50, !dbg !6953
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !6953
  %bf.clear = and i16 %bf.load, 1, !dbg !6953
  %bf.cast = zext i16 %bf.clear to i32, !dbg !6953
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6952
  br i1 %tobool, label %if.then, label %if.else, !dbg !6954

if.then:                                          ; preds = %entry
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6955
  %5 = load i32, i32* %reg.addr, align 4, !dbg !6957
  %call = call i32 @m_series_stc_read(%struct.comedi_device* %4, i32 %5) #9, !dbg !6958
  store i32 %call, i32* %val, align 4, !dbg !6959
  br label %if.end28, !dbg !6960

if.else:                                          ; preds = %entry
  br label %do.body, !dbg !6961

do.body:                                          ; preds = %if.else
  br label %do.body1, !dbg !6962

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6963, metadata !DIExpression()), !dbg !6965
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6966, metadata !DIExpression()), !dbg !6965
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6965
  %conv = zext i1 %cmp to i32, !dbg !6965
  store i32 1, i32* %tmp, align 4, !dbg !6965
  %6 = load i32, i32* %tmp, align 4, !dbg !6965
  br label %do.body2, !dbg !6967

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6968

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6969

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6971, metadata !DIExpression()), !dbg !6974
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6975, metadata !DIExpression()), !dbg !6974
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6974
  %conv8 = zext i1 %cmp7 to i32, !dbg !6974
  store i32 1, i32* %tmp9, align 4, !dbg !6974
  %7 = load i32, i32* %tmp9, align 4, !dbg !6974
  %call10 = call i64 @arch_local_irq_save() #9, !dbg !6976
  store i64 %call10, i64* %flags, align 8, !dbg !6976
  br label %do.end, !dbg !6976

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !6969

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !6968

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6977, !srcloc !6978
  br label %do.body13, !dbg !6977

do.body13:                                        ; preds = %do.body12
  %8 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6979
  %window_lock = getelementptr inbounds %struct.ni_private, %struct.ni_private* %8, i32 0, i32 5, !dbg !6979
  store %struct.spinlock* %window_lock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6980
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !6981
  %rlock.i = bitcast %union.anon.3* %10 to %struct.raw_spinlock*, !dbg !6981
  br label %do.end15, !dbg !6979

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !6977

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6968

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6967

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !6962

do.end19:                                         ; preds = %do.end18
  %11 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !6982
  %mite = getelementptr inbounds %struct.ni_private, %struct.ni_private* %11, i32 0, i32 42, !dbg !6984
  %12 = load %struct.mite*, %struct.mite** %mite, align 8, !dbg !6984
  %tobool20 = icmp ne %struct.mite* %12, null, !dbg !6982
  br i1 %tobool20, label %if.else25, label %land.lhs.true, !dbg !6985

land.lhs.true:                                    ; preds = %do.end19
  %13 = load i32, i32* %reg.addr, align 4, !dbg !6986
  %cmp21 = icmp slt i32 %13, 8, !dbg !6987
  br i1 %cmp21, label %if.then23, label %if.else25, !dbg !6988

if.then23:                                        ; preds = %land.lhs.true
  %14 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6989
  %15 = load i32, i32* %reg.addr, align 4, !dbg !6991
  %mul = mul i32 %15, 2, !dbg !6992
  %call24 = call i32 @ni_readw(%struct.comedi_device* %14, i32 %mul) #9, !dbg !6993
  store i32 %call24, i32* %val, align 4, !dbg !6994
  br label %if.end, !dbg !6995

if.else25:                                        ; preds = %land.lhs.true, %do.end19
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !6996
  %17 = load i32, i32* %reg.addr, align 4, !dbg !6998
  call void @ni_writew(%struct.comedi_device* %16, i32 %17, i32 0) #9, !dbg !6999
  %18 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7000
  %call26 = call i32 @ni_readw(%struct.comedi_device* %18, i32 2) #9, !dbg !7001
  store i32 %call26, i32* %val, align 4, !dbg !7002
  br label %if.end

if.end:                                           ; preds = %if.else25, %if.then23
  %19 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7003
  %window_lock27 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %19, i32 0, i32 5, !dbg !7004
  %20 = load i64, i64* %flags, align 8, !dbg !7005
  store %struct.spinlock* %window_lock27, %struct.spinlock** %lock.addr.i29, align 8
  store i64 %20, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !7006
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !7006
  store i32 1, i32* %tmp.i, align 4, !dbg !7006
  %21 = load i32, i32* %tmp.i, align 4, !dbg !7006
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !7007
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !7007
  store i32 1, i32* %tmp8.i, align 4, !dbg !7007
  %22 = load i32, i32* %tmp8.i, align 4, !dbg !7007
  %23 = load i64, i64* %flags.addr.i, align 8, !dbg !7008
  call void @arch_local_irq_restore(i64 %23) #10, !dbg !7008
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7009, !srcloc !5582
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i29, align 8, !dbg !7010
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !7010
  %rlock.i30 = bitcast %union.anon.3* %25 to %struct.raw_spinlock*, !dbg !7010
  br label %if.end28

if.end28:                                         ; preds = %if.end, %if.then
  %26 = load i32, i32* %val, align 4, !dbg !7011
  ret i32 %26, !dbg !7012
}

; Function Attrs: noredzone
declare dso_local void @mite_ack_linkc(%struct.mite_channel*, %struct.comedi_subdevice*, i1 zeroext) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ack_a_interrupt(%struct.comedi_device* %dev, i16 zeroext %a_status) #2 !dbg !7013 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %a_status.addr = alloca i16, align 2
  %ack = alloca i16, align 2
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7014, metadata !DIExpression()), !dbg !7015
  store i16 %a_status, i16* %a_status.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %a_status.addr, metadata !7016, metadata !DIExpression()), !dbg !7017
  call void @llvm.dbg.declare(metadata i16* %ack, metadata !7018, metadata !DIExpression()), !dbg !7019
  store i16 0, i16* %ack, align 2, !dbg !7019
  %0 = load i16, i16* %a_status.addr, align 2, !dbg !7020
  %conv = zext i16 %0 to i64, !dbg !7020
  %and = and i64 %conv, 64, !dbg !7022
  %tobool = icmp ne i64 %and, 0, !dbg !7022
  br i1 %tobool, label %if.then, label %if.end, !dbg !7023

if.then:                                          ; preds = %entry
  %1 = load i16, i16* %ack, align 2, !dbg !7024
  %conv1 = zext i16 %1 to i64, !dbg !7024
  %or = or i64 %conv1, 256, !dbg !7024
  %conv2 = trunc i64 %or to i16, !dbg !7024
  store i16 %conv2, i16* %ack, align 2, !dbg !7024
  br label %if.end, !dbg !7025

if.end:                                           ; preds = %if.then, %entry
  %2 = load i16, i16* %a_status.addr, align 2, !dbg !7026
  %conv3 = zext i16 %2 to i64, !dbg !7026
  %and4 = and i64 %conv3, 128, !dbg !7028
  %tobool5 = icmp ne i64 %and4, 0, !dbg !7028
  br i1 %tobool5, label %if.then6, label %if.end10, !dbg !7029

if.then6:                                         ; preds = %if.end
  %3 = load i16, i16* %ack, align 2, !dbg !7030
  %conv7 = zext i16 %3 to i64, !dbg !7030
  %or8 = or i64 %conv7, 512, !dbg !7030
  %conv9 = trunc i64 %or8 to i16, !dbg !7030
  store i16 %conv9, i16* %ack, align 2, !dbg !7030
  br label %if.end10, !dbg !7031

if.end10:                                         ; preds = %if.then6, %if.end
  %4 = load i16, i16* %a_status.addr, align 2, !dbg !7032
  %conv11 = zext i16 %4 to i64, !dbg !7032
  %and12 = and i64 %conv11, 32, !dbg !7034
  %tobool13 = icmp ne i64 %and12, 0, !dbg !7034
  br i1 %tobool13, label %if.then14, label %if.end18, !dbg !7035

if.then14:                                        ; preds = %if.end10
  %5 = load i16, i16* %ack, align 2, !dbg !7036
  %conv15 = zext i16 %5 to i64, !dbg !7036
  %or16 = or i64 %conv15, 2048, !dbg !7036
  %conv17 = trunc i64 %or16 to i16, !dbg !7036
  store i16 %conv17, i16* %ack, align 2, !dbg !7036
  br label %if.end18, !dbg !7037

if.end18:                                         ; preds = %if.then14, %if.end10
  %6 = load i16, i16* %a_status.addr, align 2, !dbg !7038
  %conv19 = zext i16 %6 to i64, !dbg !7038
  %and20 = and i64 %conv19, 16, !dbg !7040
  %tobool21 = icmp ne i64 %and20, 0, !dbg !7040
  br i1 %tobool21, label %if.then22, label %if.end26, !dbg !7041

if.then22:                                        ; preds = %if.end18
  %7 = load i16, i16* %ack, align 2, !dbg !7042
  %conv23 = zext i16 %7 to i64, !dbg !7042
  %or24 = or i64 %conv23, 4096, !dbg !7042
  %conv25 = trunc i64 %or24 to i16, !dbg !7042
  store i16 %conv25, i16* %ack, align 2, !dbg !7042
  br label %if.end26, !dbg !7043

if.end26:                                         ; preds = %if.then22, %if.end18
  %8 = load i16, i16* %a_status.addr, align 2, !dbg !7044
  %conv27 = zext i16 %8 to i64, !dbg !7044
  %and28 = and i64 %conv27, 3072, !dbg !7046
  %tobool29 = icmp ne i64 %and28, 0, !dbg !7046
  br i1 %tobool29, label %if.then30, label %if.end34, !dbg !7047

if.then30:                                        ; preds = %if.end26
  %9 = load i16, i16* %ack, align 2, !dbg !7048
  %conv31 = zext i16 %9 to i64, !dbg !7048
  %or32 = or i64 %conv31, 8192, !dbg !7048
  %conv33 = trunc i64 %or32 to i16, !dbg !7048
  store i16 %conv33, i16* %ack, align 2, !dbg !7048
  br label %if.end34, !dbg !7049

if.end34:                                         ; preds = %if.then30, %if.end26
  %10 = load i16, i16* %ack, align 2, !dbg !7050
  %tobool35 = icmp ne i16 %10, 0, !dbg !7050
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !7052

if.then36:                                        ; preds = %if.end34
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7053
  %12 = load i16, i16* %ack, align 2, !dbg !7054
  %conv37 = zext i16 %12 to i32, !dbg !7054
  call void @ni_stc_writew(%struct.comedi_device* %11, i32 %conv37, i32 2) #9, !dbg !7055
  br label %if.end38, !dbg !7055

if.end38:                                         ; preds = %if.then36, %if.end34
  ret void, !dbg !7056
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ack_b_interrupt(%struct.comedi_device* %dev, i16 zeroext %b_status) #2 !dbg !7057 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %b_status.addr = alloca i16, align 2
  %ack = alloca i16, align 2
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7058, metadata !DIExpression()), !dbg !7059
  store i16 %b_status, i16* %b_status.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %b_status.addr, metadata !7060, metadata !DIExpression()), !dbg !7061
  call void @llvm.dbg.declare(metadata i16* %ack, metadata !7062, metadata !DIExpression()), !dbg !7063
  store i16 0, i16* %ack, align 2, !dbg !7063
  %0 = load i16, i16* %b_status.addr, align 2, !dbg !7064
  %conv = zext i16 %0 to i64, !dbg !7064
  %and = and i64 %conv, 128, !dbg !7066
  %tobool = icmp ne i64 %and, 0, !dbg !7066
  br i1 %tobool, label %if.then, label %if.end, !dbg !7067

if.then:                                          ; preds = %entry
  %1 = load i16, i16* %ack, align 2, !dbg !7068
  %conv1 = zext i16 %1 to i64, !dbg !7068
  %or = or i64 %conv1, 256, !dbg !7068
  %conv2 = trunc i64 %or to i16, !dbg !7068
  store i16 %conv2, i16* %ack, align 2, !dbg !7068
  br label %if.end, !dbg !7069

if.end:                                           ; preds = %if.then, %entry
  %2 = load i16, i16* %b_status.addr, align 2, !dbg !7070
  %conv3 = zext i16 %2 to i64, !dbg !7070
  %and4 = and i64 %conv3, 512, !dbg !7072
  %tobool5 = icmp ne i64 %and4, 0, !dbg !7072
  br i1 %tobool5, label %if.then6, label %if.end10, !dbg !7073

if.then6:                                         ; preds = %if.end
  %3 = load i16, i16* %ack, align 2, !dbg !7074
  %conv7 = zext i16 %3 to i64, !dbg !7074
  %or8 = or i64 %conv7, 8192, !dbg !7074
  %conv9 = trunc i64 %or8 to i16, !dbg !7074
  store i16 %conv9, i16* %ack, align 2, !dbg !7074
  br label %if.end10, !dbg !7075

if.end10:                                         ; preds = %if.then6, %if.end
  %4 = load i16, i16* %b_status.addr, align 2, !dbg !7076
  %conv11 = zext i16 %4 to i64, !dbg !7076
  %and12 = and i64 %conv11, 1024, !dbg !7078
  %tobool13 = icmp ne i64 %and12, 0, !dbg !7078
  br i1 %tobool13, label %if.then14, label %if.end18, !dbg !7079

if.then14:                                        ; preds = %if.end10
  %5 = load i16, i16* %ack, align 2, !dbg !7080
  %conv15 = zext i16 %5 to i64, !dbg !7080
  %or16 = or i64 %conv15, 2048, !dbg !7080
  %conv17 = trunc i64 %or16 to i16, !dbg !7080
  store i16 %conv17, i16* %ack, align 2, !dbg !7080
  br label %if.end18, !dbg !7081

if.end18:                                         ; preds = %if.then14, %if.end10
  %6 = load i16, i16* %b_status.addr, align 2, !dbg !7082
  %conv19 = zext i16 %6 to i64, !dbg !7082
  %and20 = and i64 %conv19, 256, !dbg !7084
  %tobool21 = icmp ne i64 %and20, 0, !dbg !7084
  br i1 %tobool21, label %if.then22, label %if.end26, !dbg !7085

if.then22:                                        ; preds = %if.end18
  %7 = load i16, i16* %ack, align 2, !dbg !7086
  %conv23 = zext i16 %7 to i64, !dbg !7086
  %or24 = or i64 %conv23, 512, !dbg !7086
  %conv25 = trunc i64 %or24 to i16, !dbg !7086
  store i16 %conv25, i16* %ack, align 2, !dbg !7086
  br label %if.end26, !dbg !7087

if.end26:                                         ; preds = %if.then22, %if.end18
  %8 = load i16, i16* %b_status.addr, align 2, !dbg !7088
  %conv27 = zext i16 %8 to i64, !dbg !7088
  %and28 = and i64 %conv27, 64, !dbg !7090
  %tobool29 = icmp ne i64 %and28, 0, !dbg !7090
  br i1 %tobool29, label %if.then30, label %if.end34, !dbg !7091

if.then30:                                        ; preds = %if.end26
  %9 = load i16, i16* %ack, align 2, !dbg !7092
  %conv31 = zext i16 %9 to i64, !dbg !7092
  %or32 = or i64 %conv31, 128, !dbg !7092
  %conv33 = trunc i64 %or32 to i16, !dbg !7092
  store i16 %conv33, i16* %ack, align 2, !dbg !7092
  br label %if.end34, !dbg !7093

if.end34:                                         ; preds = %if.then30, %if.end26
  %10 = load i16, i16* %b_status.addr, align 2, !dbg !7094
  %conv35 = zext i16 %10 to i64, !dbg !7094
  %and36 = and i64 %conv35, 16, !dbg !7096
  %tobool37 = icmp ne i64 %and36, 0, !dbg !7096
  br i1 %tobool37, label %if.then38, label %if.end42, !dbg !7097

if.then38:                                        ; preds = %if.end34
  %11 = load i16, i16* %ack, align 2, !dbg !7098
  %conv39 = zext i16 %11 to i64, !dbg !7098
  %or40 = or i64 %conv39, 64, !dbg !7098
  %conv41 = trunc i64 %or40 to i16, !dbg !7098
  store i16 %conv41, i16* %ack, align 2, !dbg !7098
  br label %if.end42, !dbg !7099

if.end42:                                         ; preds = %if.then38, %if.end34
  %12 = load i16, i16* %b_status.addr, align 2, !dbg !7100
  %conv43 = zext i16 %12 to i64, !dbg !7100
  %and44 = and i64 %conv43, 32, !dbg !7102
  %tobool45 = icmp ne i64 %and44, 0, !dbg !7102
  br i1 %tobool45, label %if.then46, label %if.end50, !dbg !7103

if.then46:                                        ; preds = %if.end42
  %13 = load i16, i16* %ack, align 2, !dbg !7104
  %conv47 = zext i16 %13 to i64, !dbg !7104
  %or48 = or i64 %conv47, 1024, !dbg !7104
  %conv49 = trunc i64 %or48 to i16, !dbg !7104
  store i16 %conv49, i16* %ack, align 2, !dbg !7104
  br label %if.end50, !dbg !7105

if.end50:                                         ; preds = %if.then46, %if.end42
  %14 = load i16, i16* %ack, align 2, !dbg !7106
  %tobool51 = icmp ne i16 %14, 0, !dbg !7106
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !7108

if.then52:                                        ; preds = %if.end50
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7109
  %16 = load i16, i16* %ack, align 2, !dbg !7110
  %conv53 = zext i16 %16 to i32, !dbg !7110
  call void @ni_stc_writew(%struct.comedi_device* %15, i32 %conv53, i32 3) #9, !dbg !7111
  br label %if.end54, !dbg !7111

if.end54:                                         ; preds = %if.then52, %if.end50
  ret void, !dbg !7112
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @handle_a_interrupt(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, i16 zeroext %status) #2 !dbg !7113 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %status.addr = alloca i16, align 2
  %cmd = alloca %struct.comedi_cmd*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7116, metadata !DIExpression()), !dbg !7117
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !7118, metadata !DIExpression()), !dbg !7119
  store i16 %status, i16* %status.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %status.addr, metadata !7120, metadata !DIExpression()), !dbg !7121
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd, metadata !7122, metadata !DIExpression()), !dbg !7123
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !7124
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %0, i32 0, i32 7, !dbg !7125
  %1 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !7125
  %cmd1 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %1, i32 0, i32 17, !dbg !7126
  store %struct.comedi_cmd* %cmd1, %struct.comedi_cmd** %cmd, align 8, !dbg !7123
  %2 = load i16, i16* %status.addr, align 2, !dbg !7127
  %conv = zext i16 %2 to i64, !dbg !7127
  %and = and i64 %conv, 3776, !dbg !7129
  %tobool = icmp ne i64 %and, 0, !dbg !7129
  br i1 %tobool, label %if.then, label %if.end35, !dbg !7130

if.then:                                          ; preds = %entry
  %3 = load i16, i16* %status.addr, align 2, !dbg !7131
  %conv2 = zext i16 %3 to i32, !dbg !7131
  %cmp = icmp eq i32 %conv2, 65535, !dbg !7134
  br i1 %cmp, label %if.then4, label %if.end7, !dbg !7135

if.then4:                                         ; preds = %if.then
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7136
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %4, i32 0, i32 4, !dbg !7136
  %5 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !7136
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.71, i64 0, i64 0)) #11, !dbg !7136
  %6 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !7138
  %call = call zeroext i1 @comedi_is_subdevice_running(%struct.comedi_subdevice* %6) #9, !dbg !7140
  br i1 %call, label %if.then5, label %if.end, !dbg !7141

if.then5:                                         ; preds = %if.then4
  %7 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !7142
  %async6 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %7, i32 0, i32 7, !dbg !7143
  %8 = load %struct.comedi_async*, %struct.comedi_async** %async6, align 8, !dbg !7143
  %events = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %8, i32 0, i32 16, !dbg !7144
  %9 = load i32, i32* %events, align 4, !dbg !7145
  %or = or i32 %9, 16, !dbg !7145
  store i32 %or, i32* %events, align 4, !dbg !7145
  br label %if.end, !dbg !7142

if.end:                                           ; preds = %if.then5, %if.then4
  br label %if.end40, !dbg !7146

if.end7:                                          ; preds = %if.then
  %10 = load i16, i16* %status.addr, align 2, !dbg !7147
  %conv8 = zext i16 %10 to i64, !dbg !7147
  %and9 = and i64 %conv8, 3584, !dbg !7149
  %tobool10 = icmp ne i64 %and9, 0, !dbg !7149
  br i1 %tobool10, label %if.then11, label %if.end25, !dbg !7150

if.then11:                                        ; preds = %if.end7
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7151
  %class_dev12 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %11, i32 0, i32 4, !dbg !7151
  %12 = load %struct.device*, %struct.device** %class_dev12, align 8, !dbg !7151
  %13 = load i16, i16* %status.addr, align 2, !dbg !7151
  %conv13 = zext i16 %13 to i32, !dbg !7151
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.72, i64 0, i64 0), i32 %conv13) #11, !dbg !7151
  %14 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7153
  call void @shutdown_ai_command(%struct.comedi_device* %14) #9, !dbg !7154
  %15 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !7155
  %async14 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %15, i32 0, i32 7, !dbg !7156
  %16 = load %struct.comedi_async*, %struct.comedi_async** %async14, align 8, !dbg !7156
  %events15 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %16, i32 0, i32 16, !dbg !7157
  %17 = load i32, i32* %events15, align 4, !dbg !7158
  %or16 = or i32 %17, 16, !dbg !7158
  store i32 %or16, i32* %events15, align 4, !dbg !7158
  %18 = load i16, i16* %status.addr, align 2, !dbg !7159
  %conv17 = zext i16 %18 to i64, !dbg !7159
  %and18 = and i64 %conv17, 3072, !dbg !7161
  %tobool19 = icmp ne i64 %and18, 0, !dbg !7161
  br i1 %tobool19, label %if.then20, label %if.end24, !dbg !7162

if.then20:                                        ; preds = %if.then11
  %19 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !7163
  %async21 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %19, i32 0, i32 7, !dbg !7164
  %20 = load %struct.comedi_async*, %struct.comedi_async** %async21, align 8, !dbg !7164
  %events22 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %20, i32 0, i32 16, !dbg !7165
  %21 = load i32, i32* %events22, align 4, !dbg !7166
  %or23 = or i32 %21, 32, !dbg !7166
  store i32 %or23, i32* %events22, align 4, !dbg !7166
  br label %if.end24, !dbg !7163

if.end24:                                         ; preds = %if.then20, %if.then11
  br label %if.end40, !dbg !7167

if.end25:                                         ; preds = %if.end7
  %22 = load i16, i16* %status.addr, align 2, !dbg !7168
  %conv26 = zext i16 %22 to i64, !dbg !7168
  %and27 = and i64 %conv26, 64, !dbg !7170
  %tobool28 = icmp ne i64 %and27, 0, !dbg !7170
  br i1 %tobool28, label %if.then29, label %if.end34, !dbg !7171

if.then29:                                        ; preds = %if.end25
  %23 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !7172
  %stop_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %23, i32 0, i32 10, !dbg !7175
  %24 = load i32, i32* %stop_src, align 8, !dbg !7175
  %cmp30 = icmp eq i32 %24, 32, !dbg !7176
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !7177

if.then32:                                        ; preds = %if.then29
  %25 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7178
  call void @shutdown_ai_command(%struct.comedi_device* %25) #9, !dbg !7179
  br label %if.end33, !dbg !7179

if.end33:                                         ; preds = %if.then32, %if.then29
  br label %if.end34, !dbg !7180

if.end34:                                         ; preds = %if.end33, %if.end25
  br label %if.end35, !dbg !7181

if.end35:                                         ; preds = %if.end34, %entry
  %26 = load i16, i16* %status.addr, align 2, !dbg !7182
  %conv36 = zext i16 %26 to i64, !dbg !7182
  %and37 = and i64 %conv36, 16, !dbg !7184
  %tobool38 = icmp ne i64 %and37, 0, !dbg !7184
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !7185

if.then39:                                        ; preds = %if.end35
  %27 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7186
  %28 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !7187
  call void @ni_handle_eos(%struct.comedi_device* %27, %struct.comedi_subdevice* %28) #9, !dbg !7188
  br label %if.end40, !dbg !7188

if.end40:                                         ; preds = %if.end, %if.end24, %if.then39, %if.end35
  ret void, !dbg !7189
}

; Function Attrs: noredzone
declare dso_local i32 @comedi_handle_events(%struct.comedi_device*, %struct.comedi_subdevice*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @handle_b_interrupt(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, i16 zeroext %b_status) #2 !dbg !7190 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %b_status.addr = alloca i16, align 2
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7191, metadata !DIExpression()), !dbg !7192
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !7193, metadata !DIExpression()), !dbg !7194
  store i16 %b_status, i16* %b_status.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %b_status.addr, metadata !7195, metadata !DIExpression()), !dbg !7196
  %0 = load i16, i16* %b_status.addr, align 2, !dbg !7197
  %conv = zext i16 %0 to i32, !dbg !7197
  %cmp = icmp eq i32 %conv, 65535, !dbg !7199
  br i1 %cmp, label %if.then, label %if.end, !dbg !7200

if.then:                                          ; preds = %entry
  br label %if.end16, !dbg !7201

if.end:                                           ; preds = %entry
  %1 = load i16, i16* %b_status.addr, align 2, !dbg !7202
  %conv2 = zext i16 %1 to i64, !dbg !7202
  %and = and i64 %conv2, 512, !dbg !7204
  %tobool = icmp ne i64 %and, 0, !dbg !7204
  br i1 %tobool, label %if.then3, label %if.end5, !dbg !7205

if.then3:                                         ; preds = %if.end
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7206
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %2, i32 0, i32 4, !dbg !7206
  %3 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !7206
  %4 = load i16, i16* %b_status.addr, align 2, !dbg !7206
  %conv4 = zext i16 %4 to i32, !dbg !7206
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7206
  %call = call i32 @ni_stc_readw(%struct.comedi_device* %5, i32 6) #9, !dbg !7206
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %3, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.75, i64 0, i64 0), i32 %conv4, i32 %call) #11, !dbg !7206
  %6 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !7208
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %6, i32 0, i32 7, !dbg !7209
  %7 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !7209
  %events = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %7, i32 0, i32 16, !dbg !7210
  %8 = load i32, i32* %events, align 4, !dbg !7211
  %or = or i32 %8, 32, !dbg !7211
  store i32 %or, i32* %events, align 4, !dbg !7211
  br label %if.end5, !dbg !7212

if.end5:                                          ; preds = %if.then3, %if.end
  %9 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !7213
  %async6 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %9, i32 0, i32 7, !dbg !7215
  %10 = load %struct.comedi_async*, %struct.comedi_async** %async6, align 8, !dbg !7215
  %cmd = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %10, i32 0, i32 17, !dbg !7216
  %stop_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %cmd, i32 0, i32 10, !dbg !7217
  %11 = load i32, i32* %stop_src, align 8, !dbg !7217
  %cmp7 = icmp ne i32 %11, 1, !dbg !7218
  br i1 %cmp7, label %land.lhs.true, label %if.end16, !dbg !7219

land.lhs.true:                                    ; preds = %if.end5
  %12 = load i16, i16* %b_status.addr, align 2, !dbg !7220
  %conv9 = zext i16 %12 to i64, !dbg !7220
  %and10 = and i64 %conv9, 128, !dbg !7221
  %tobool11 = icmp ne i64 %and10, 0, !dbg !7221
  br i1 %tobool11, label %if.then12, label %if.end16, !dbg !7222

if.then12:                                        ; preds = %land.lhs.true
  %13 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !7223
  %async13 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %13, i32 0, i32 7, !dbg !7224
  %14 = load %struct.comedi_async*, %struct.comedi_async** %async13, align 8, !dbg !7224
  %events14 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %14, i32 0, i32 16, !dbg !7225
  %15 = load i32, i32* %events14, align 4, !dbg !7226
  %or15 = or i32 %15, 2, !dbg !7226
  store i32 %or15, i32* %events14, align 4, !dbg !7226
  br label %if.end16, !dbg !7223

if.end16:                                         ; preds = %if.then, %if.then12, %land.lhs.true, %if.end5
  ret void, !dbg !7227
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @handle_gpct_interrupt(%struct.comedi_device* %dev, i16 zeroext %counter_index) #2 !dbg !7228 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %counter_index.addr = alloca i16, align 2
  %devpriv = alloca %struct.ni_private*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7229, metadata !DIExpression()), !dbg !7230
  store i16 %counter_index, i16* %counter_index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %counter_index.addr, metadata !7231, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !7233, metadata !DIExpression()), !dbg !7234
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7235
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !7236
  %1 = load i8*, i8** %private, align 8, !dbg !7236
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !7235
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !7234
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !7237, metadata !DIExpression()), !dbg !7238
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7239
  %subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 16, !dbg !7240
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices, align 8, !dbg !7240
  %5 = load i16, i16* %counter_index.addr, align 2, !dbg !7241
  %conv = zext i16 %5 to i32, !dbg !7241
  %add = add i32 11, %conv, !dbg !7241
  %idxprom = sext i32 %add to i64, !dbg !7239
  %arrayidx = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %4, i64 %idxprom, !dbg !7239
  store %struct.comedi_subdevice* %arrayidx, %struct.comedi_subdevice** %s, align 8, !dbg !7242
  %6 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7243
  %counter_dev = getelementptr inbounds %struct.ni_private, %struct.ni_private* %6, i32 0, i32 19, !dbg !7244
  %7 = load %struct.ni_gpct_device*, %struct.ni_gpct_device** %counter_dev, align 8, !dbg !7244
  %counters = getelementptr inbounds %struct.ni_gpct_device, %struct.ni_gpct_device* %7, i32 0, i32 4, !dbg !7245
  %8 = load %struct.ni_gpct*, %struct.ni_gpct** %counters, align 8, !dbg !7245
  %9 = load i16, i16* %counter_index.addr, align 2, !dbg !7246
  %idxprom1 = zext i16 %9 to i64, !dbg !7243
  %arrayidx2 = getelementptr %struct.ni_gpct, %struct.ni_gpct* %8, i64 %idxprom1, !dbg !7243
  %10 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7247
  call void @ni_tio_handle_interrupt(%struct.ni_gpct* %arrayidx2, %struct.comedi_subdevice* %10) #9, !dbg !7248
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7249
  %12 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7250
  %call = call i32 @comedi_handle_events(%struct.comedi_device* %11, %struct.comedi_subdevice* %12) #9, !dbg !7251
  ret void, !dbg !7252
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @handle_cdio_interrupt(%struct.comedi_device* %dev) #2 !dbg !7253 {
entry:
  %lock.addr.i32 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i32, metadata !5432, metadata !DIExpression()), !dbg !7254
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5440, metadata !DIExpression()), !dbg !7256
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5232, metadata !DIExpression()), !dbg !7257
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %cdio_status = alloca i32, align 4
  %s = alloca %struct.comedi_subdevice*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7264, metadata !DIExpression()), !dbg !7265
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !7266, metadata !DIExpression()), !dbg !7267
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7268
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !7269
  %1 = load i8*, i8** %private, align 8, !dbg !7269
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !7268
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !7267
  call void @llvm.dbg.declare(metadata i32* %cdio_status, metadata !7270, metadata !DIExpression()), !dbg !7271
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !7272, metadata !DIExpression()), !dbg !7273
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7274
  %subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 16, !dbg !7275
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices, align 8, !dbg !7275
  %arrayidx = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %4, i64 2, !dbg !7274
  store %struct.comedi_subdevice* %arrayidx, %struct.comedi_subdevice** %s, align 8, !dbg !7273
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7276, metadata !DIExpression()), !dbg !7277
  br label %do.body, !dbg !7278

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7279

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7280, metadata !DIExpression()), !dbg !7282
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7283, metadata !DIExpression()), !dbg !7282
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7282
  %conv = zext i1 %cmp to i32, !dbg !7282
  store i32 1, i32* %tmp, align 4, !dbg !7282
  %5 = load i32, i32* %tmp, align 4, !dbg !7282
  br label %do.body2, !dbg !7284

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7285

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7286

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7288, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7292, metadata !DIExpression()), !dbg !7291
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7291
  %conv8 = zext i1 %cmp7 to i32, !dbg !7291
  store i32 1, i32* %tmp9, align 4, !dbg !7291
  %6 = load i32, i32* %tmp9, align 4, !dbg !7291
  %call = call i64 @arch_local_irq_save() #9, !dbg !7293
  store i64 %call, i64* %flags, align 8, !dbg !7293
  br label %do.end, !dbg !7293

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !7286

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !7285

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7294, !srcloc !7295
  br label %do.body12, !dbg !7294

do.body12:                                        ; preds = %do.body11
  %7 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7296
  %mite_channel_lock = getelementptr inbounds %struct.ni_private, %struct.ni_private* %7, i32 0, i32 7, !dbg !7296
  store %struct.spinlock* %mite_channel_lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7297
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !7298
  %rlock.i = bitcast %union.anon.3* %9 to %struct.raw_spinlock*, !dbg !7298
  br label %do.end14, !dbg !7296

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !7294

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !7285

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7284

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7279

do.end18:                                         ; preds = %do.end17
  %10 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7299
  %cdo_mite_chan = getelementptr inbounds %struct.ni_private, %struct.ni_private* %10, i32 0, i32 45, !dbg !7301
  %11 = load %struct.mite_channel*, %struct.mite_channel** %cdo_mite_chan, align 8, !dbg !7301
  %tobool = icmp ne %struct.mite_channel* %11, null, !dbg !7299
  br i1 %tobool, label %if.then, label %if.end, !dbg !7302

if.then:                                          ; preds = %do.end18
  %12 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7303
  %cdo_mite_chan19 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %12, i32 0, i32 45, !dbg !7304
  %13 = load %struct.mite_channel*, %struct.mite_channel** %cdo_mite_chan19, align 8, !dbg !7304
  %14 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7305
  call void @mite_ack_linkc(%struct.mite_channel* %13, %struct.comedi_subdevice* %14, i1 zeroext true) #9, !dbg !7306
  br label %if.end, !dbg !7306

if.end:                                           ; preds = %if.then, %do.end18
  %15 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7307
  %mite_channel_lock20 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %15, i32 0, i32 7, !dbg !7308
  %16 = load i64, i64* %flags, align 8, !dbg !7309
  store %struct.spinlock* %mite_channel_lock20, %struct.spinlock** %lock.addr.i32, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !7310
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !7310
  store i32 1, i32* %tmp.i, align 4, !dbg !7310
  %17 = load i32, i32* %tmp.i, align 4, !dbg !7310
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !7311
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !7311
  store i32 1, i32* %tmp8.i, align 4, !dbg !7311
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !7311
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !7312
  call void @arch_local_irq_restore(i64 %19) #10, !dbg !7312
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7313, !srcloc !5582
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i32, align 8, !dbg !7314
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !7314
  %rlock.i33 = bitcast %union.anon.3* %21 to %struct.raw_spinlock*, !dbg !7314
  %22 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7315
  %call21 = call i32 @ni_readl(%struct.comedi_device* %22, i32 548) #9, !dbg !7316
  store i32 %call21, i32* %cdio_status, align 4, !dbg !7317
  %23 = load i32, i32* %cdio_status, align 4, !dbg !7318
  %conv22 = zext i32 %23 to i64, !dbg !7318
  %and = and i64 %conv22, 24, !dbg !7320
  %tobool23 = icmp ne i64 %and, 0, !dbg !7320
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !7321

if.then24:                                        ; preds = %if.end
  %24 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7322
  call void @ni_writel(%struct.comedi_device* %24, i32 16384, i32 548) #9, !dbg !7324
  %25 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7325
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %25, i32 0, i32 7, !dbg !7326
  %26 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !7326
  %events = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %26, i32 0, i32 16, !dbg !7327
  %27 = load i32, i32* %events, align 4, !dbg !7328
  %or = or i32 %27, 32, !dbg !7328
  store i32 %or, i32* %events, align 4, !dbg !7328
  br label %if.end25, !dbg !7329

if.end25:                                         ; preds = %if.then24, %if.end
  %28 = load i32, i32* %cdio_status, align 4, !dbg !7330
  %conv26 = zext i32 %28 to i64, !dbg !7330
  %and27 = and i64 %conv26, 1, !dbg !7332
  %tobool28 = icmp ne i64 %and27, 0, !dbg !7332
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !7333

if.then29:                                        ; preds = %if.end25
  %29 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7334
  call void @ni_writel(%struct.comedi_device* %29, i32 131072, i32 548) #9, !dbg !7336
  br label %if.end30, !dbg !7337

if.end30:                                         ; preds = %if.then29, %if.end25
  %30 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7338
  %31 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7339
  %call31 = call i32 @comedi_handle_events(%struct.comedi_device* %30, %struct.comedi_subdevice* %31) #9, !dbg !7340
  ret void, !dbg !7341
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @m_series_stc_read(%struct.comedi_device* %dev, i32 %reg) #2 !dbg !7342 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %reg.addr = alloca i32, align 4
  %regmap = alloca %struct.mio_regmap*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7345, metadata !DIExpression()), !dbg !7346
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !7347, metadata !DIExpression()), !dbg !7348
  call void @llvm.dbg.declare(metadata %struct.mio_regmap** %regmap, metadata !7349, metadata !DIExpression()), !dbg !7350
  %0 = load i32, i32* %reg.addr, align 4, !dbg !7351
  %conv = zext i32 %0 to i64, !dbg !7351
  %cmp = icmp ult i64 %conv, 67, !dbg !7353
  br i1 %cmp, label %if.then, label %if.else, !dbg !7354

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %reg.addr, align 4, !dbg !7355
  %idxprom = zext i32 %1 to i64, !dbg !7357
  %arrayidx = getelementptr [67 x %struct.mio_regmap], [67 x %struct.mio_regmap]* @m_series_stc_read_regmap, i64 0, i64 %idxprom, !dbg !7357
  store %struct.mio_regmap* %arrayidx, %struct.mio_regmap** %regmap, align 8, !dbg !7358
  br label %if.end, !dbg !7359

if.else:                                          ; preds = %entry
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7360
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %2, i32 0, i32 4, !dbg !7360
  %3 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !7360
  %4 = load i32, i32* %reg.addr, align 4, !dbg !7360
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.m_series_stc_read, i64 0, i64 0), i32 %4) #11, !dbg !7360
  store i32 0, i32* %retval, align 4, !dbg !7362
  br label %return, !dbg !7362

if.end:                                           ; preds = %if.then
  %5 = load %struct.mio_regmap*, %struct.mio_regmap** %regmap, align 8, !dbg !7363
  %size = getelementptr inbounds %struct.mio_regmap, %struct.mio_regmap* %5, i32 0, i32 1, !dbg !7364
  %6 = load i32, i32* %size, align 4, !dbg !7364
  switch i32 %6, label %sw.default [
    i32 4, label %sw.bb
    i32 2, label %sw.bb2
    i32 1, label %sw.bb5
  ], !dbg !7365

sw.bb:                                            ; preds = %if.end
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7366
  %8 = load %struct.mio_regmap*, %struct.mio_regmap** %regmap, align 8, !dbg !7368
  %mio_reg = getelementptr inbounds %struct.mio_regmap, %struct.mio_regmap* %8, i32 0, i32 0, !dbg !7369
  %9 = load i32, i32* %mio_reg, align 4, !dbg !7369
  %call = call i32 @ni_readl(%struct.comedi_device* %7, i32 %9) #9, !dbg !7370
  store i32 %call, i32* %retval, align 4, !dbg !7371
  br label %return, !dbg !7371

sw.bb2:                                           ; preds = %if.end
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7372
  %11 = load %struct.mio_regmap*, %struct.mio_regmap** %regmap, align 8, !dbg !7373
  %mio_reg3 = getelementptr inbounds %struct.mio_regmap, %struct.mio_regmap* %11, i32 0, i32 0, !dbg !7374
  %12 = load i32, i32* %mio_reg3, align 4, !dbg !7374
  %call4 = call i32 @ni_readw(%struct.comedi_device* %10, i32 %12) #9, !dbg !7375
  store i32 %call4, i32* %retval, align 4, !dbg !7376
  br label %return, !dbg !7376

sw.bb5:                                           ; preds = %if.end
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7377
  %14 = load %struct.mio_regmap*, %struct.mio_regmap** %regmap, align 8, !dbg !7378
  %mio_reg6 = getelementptr inbounds %struct.mio_regmap, %struct.mio_regmap* %14, i32 0, i32 0, !dbg !7379
  %15 = load i32, i32* %mio_reg6, align 4, !dbg !7379
  %call7 = call i32 @ni_readb(%struct.comedi_device* %13, i32 %15) #9, !dbg !7380
  store i32 %call7, i32* %retval, align 4, !dbg !7381
  br label %return, !dbg !7381

sw.default:                                       ; preds = %if.end
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7382
  %class_dev8 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %16, i32 0, i32 4, !dbg !7382
  %17 = load %struct.device*, %struct.device** %class_dev8, align 8, !dbg !7382
  %18 = load i32, i32* %reg.addr, align 4, !dbg !7382
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %17, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.m_series_stc_read, i64 0, i64 0), i32 %18) #11, !dbg !7382
  store i32 0, i32* %retval, align 4, !dbg !7383
  br label %return, !dbg !7383

return:                                           ; preds = %sw.default, %sw.bb5, %sw.bb2, %sw.bb, %if.else
  %19 = load i32, i32* %retval, align 4, !dbg !7384
  ret i32 %19, !dbg !7384
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_readw(%struct.comedi_device* %dev, i32 %reg) #2 !dbg !7385 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %reg.addr = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7386, metadata !DIExpression()), !dbg !7387
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !7388, metadata !DIExpression()), !dbg !7389
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7390
  %mmio = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 17, !dbg !7392
  %1 = load i8*, i8** %mmio, align 8, !dbg !7392
  %tobool = icmp ne i8* %1, null, !dbg !7390
  br i1 %tobool, label %if.then, label %if.end, !dbg !7393

if.then:                                          ; preds = %entry
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7394
  %mmio1 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %2, i32 0, i32 17, !dbg !7395
  %3 = load i8*, i8** %mmio1, align 8, !dbg !7395
  %4 = load i32, i32* %reg.addr, align 4, !dbg !7396
  %idx.ext = sext i32 %4 to i64, !dbg !7397
  %add.ptr = getelementptr i8, i8* %3, i64 %idx.ext, !dbg !7397
  %call = call zeroext i16 @readw(i8* %add.ptr) #9, !dbg !7398
  %conv = zext i16 %call to i32, !dbg !7398
  store i32 %conv, i32* %retval, align 4, !dbg !7399
  br label %return, !dbg !7399

if.end:                                           ; preds = %entry
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7400
  %iobase = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %5, i32 0, i32 18, !dbg !7401
  %6 = load i64, i64* %iobase, align 8, !dbg !7401
  %7 = load i32, i32* %reg.addr, align 4, !dbg !7402
  %conv2 = sext i32 %7 to i64, !dbg !7402
  %add = add i64 %6, %conv2, !dbg !7403
  %conv3 = trunc i64 %add to i32, !dbg !7400
  %call4 = call zeroext i16 @inw(i32 %conv3) #9, !dbg !7404
  %conv5 = zext i16 %call4 to i32, !dbg !7404
  store i32 %conv5, i32* %retval, align 4, !dbg !7405
  br label %return, !dbg !7405

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !7406
  ret i32 %8, !dbg !7406
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_readl(%struct.comedi_device* %dev, i32 %reg) #2 !dbg !7407 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %reg.addr = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7408, metadata !DIExpression()), !dbg !7409
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !7410, metadata !DIExpression()), !dbg !7411
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7412
  %mmio = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 17, !dbg !7414
  %1 = load i8*, i8** %mmio, align 8, !dbg !7414
  %tobool = icmp ne i8* %1, null, !dbg !7412
  br i1 %tobool, label %if.then, label %if.end, !dbg !7415

if.then:                                          ; preds = %entry
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7416
  %mmio1 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %2, i32 0, i32 17, !dbg !7417
  %3 = load i8*, i8** %mmio1, align 8, !dbg !7417
  %4 = load i32, i32* %reg.addr, align 4, !dbg !7418
  %idx.ext = sext i32 %4 to i64, !dbg !7419
  %add.ptr = getelementptr i8, i8* %3, i64 %idx.ext, !dbg !7419
  %call = call i32 @readl(i8* %add.ptr) #9, !dbg !7420
  store i32 %call, i32* %retval, align 4, !dbg !7421
  br label %return, !dbg !7421

if.end:                                           ; preds = %entry
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7422
  %iobase = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %5, i32 0, i32 18, !dbg !7423
  %6 = load i64, i64* %iobase, align 8, !dbg !7423
  %7 = load i32, i32* %reg.addr, align 4, !dbg !7424
  %conv = sext i32 %7 to i64, !dbg !7424
  %add = add i64 %6, %conv, !dbg !7425
  %conv2 = trunc i64 %add to i32, !dbg !7422
  %call3 = call i32 @inl(i32 %conv2) #9, !dbg !7426
  store i32 %call3, i32* %retval, align 4, !dbg !7427
  br label %return, !dbg !7427

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !7428
  ret i32 %8, !dbg !7428
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @inl(i32 %port) #2 !dbg !7429 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i32, align 4
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !7432, metadata !DIExpression()), !dbg !7433
  call void @llvm.dbg.declare(metadata i32* %value, metadata !7434, metadata !DIExpression()), !dbg !7433
  %0 = load i32, i32* %port.addr, align 4, !dbg !7433
  %1 = call i32 asm sideeffect "inl ${1:w}, $0", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #7, !dbg !7433, !srcloc !7435
  store i32 %1, i32* %value, align 4, !dbg !7433
  %2 = load i32, i32* %value, align 4, !dbg !7433
  ret i32 %2, !dbg !7433
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @readw(i8* %addr) #2 !dbg !7436 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i16, align 2
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !7439, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.declare(metadata i16* %ret, metadata !7441, metadata !DIExpression()), !dbg !7440
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !7440
  %1 = bitcast i8* %0 to i16*, !dbg !7440
  %2 = call i16 asm sideeffect "movw $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i16* %1) #7, !dbg !7440, !srcloc !7442
  store i16 %2, i16* %ret, align 2, !dbg !7440
  %3 = load i16, i16* %ret, align 2, !dbg !7440
  ret i16 %3, !dbg !7440
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @inw(i32 %port) #2 !dbg !7443 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i16, align 2
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !7446, metadata !DIExpression()), !dbg !7447
  call void @llvm.dbg.declare(metadata i16* %value, metadata !7448, metadata !DIExpression()), !dbg !7447
  %0 = load i32, i32* %port.addr, align 4, !dbg !7447
  %1 = call i16 asm sideeffect "inw ${1:w}, ${0:w}", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #7, !dbg !7447, !srcloc !7449
  store i16 %1, i16* %value, align 2, !dbg !7447
  %2 = load i16, i16* %value, align 2, !dbg !7447
  ret i16 %2, !dbg !7447
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #5

; Function Attrs: noredzone
declare dso_local zeroext i1 @comedi_is_subdevice_running(%struct.comedi_subdevice*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @shutdown_ai_command(%struct.comedi_device* %dev) #2 !dbg !7450 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7451, metadata !DIExpression()), !dbg !7452
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !7453, metadata !DIExpression()), !dbg !7454
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7455
  %read_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 21, !dbg !7456
  %1 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %read_subdev, align 8, !dbg !7456
  store %struct.comedi_subdevice* %1, %struct.comedi_subdevice** %s, align 8, !dbg !7454
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7457
  %call = call i32 @ni_ai_drain_dma(%struct.comedi_device* %2) #9, !dbg !7458
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7459
  call void @ni_handle_fifo_dregs(%struct.comedi_device* %3) #9, !dbg !7460
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7461
  call void @get_last_sample_611x(%struct.comedi_device* %4) #9, !dbg !7462
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7463
  call void @get_last_sample_6143(%struct.comedi_device* %5) #9, !dbg !7464
  %6 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7465
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %6, i32 0, i32 7, !dbg !7466
  %7 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !7466
  %events = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %7, i32 0, i32 16, !dbg !7467
  %8 = load i32, i32* %events, align 4, !dbg !7468
  %or = or i32 %8, 2, !dbg !7468
  store i32 %or, i32* %events, align 4, !dbg !7468
  ret void, !dbg !7469
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_handle_eos(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #2 !dbg !4353 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %i = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7470, metadata !DIExpression()), !dbg !7471
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !7472, metadata !DIExpression()), !dbg !7473
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !7474, metadata !DIExpression()), !dbg !7475
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7476
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !7477
  %1 = load i8*, i8** %private, align 8, !dbg !7477
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !7476
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !7475
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7478
  %aimode = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 2, !dbg !7480
  %4 = load i32, i32* %aimode, align 4, !dbg !7480
  %cmp = icmp eq i32 %4, 2, !dbg !7481
  br i1 %cmp, label %if.then, label %if.end3, !dbg !7482

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7483, metadata !DIExpression()), !dbg !7485
  store i32 0, i32* %i, align 4, !dbg !7486
  br label %for.cond, !dbg !7488

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load i32, i32* %i, align 4, !dbg !7489
  %cmp1 = icmp slt i32 %5, 10, !dbg !7491
  br i1 %cmp1, label %for.body, label %for.end, !dbg !7492

for.body:                                         ; preds = %for.cond
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7493
  call void @ni_sync_ai_dma(%struct.comedi_device* %6) #9, !dbg !7495
  %7 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !7496
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %7, i32 0, i32 7, !dbg !7498
  %8 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !7498
  %events = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %8, i32 0, i32 16, !dbg !7499
  %9 = load i32, i32* %events, align 4, !dbg !7499
  %and = and i32 %9, 1, !dbg !7500
  %tobool = icmp ne i32 %and, 0, !dbg !7500
  br i1 %tobool, label %if.then2, label %if.end, !dbg !7501

if.then2:                                         ; preds = %for.body
  br label %for.end, !dbg !7502

if.end:                                           ; preds = %for.body
  call void @__const_udelay(i64 4295) #9, !dbg !7503
  br label %for.inc, !dbg !7508

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %i, align 4, !dbg !7509
  %inc = add i32 %10, 1, !dbg !7509
  store i32 %inc, i32* %i, align 4, !dbg !7509
  br label %for.cond, !dbg !7510, !llvm.loop !7511

for.end:                                          ; preds = %if.then2, %for.cond
  br label %if.end3, !dbg !7513

if.end3:                                          ; preds = %for.end, %entry
  %11 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7514
  %ai_cmd2 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %11, i32 0, i32 12, !dbg !7516
  %12 = load i16, i16* %ai_cmd2, align 4, !dbg !7516
  %conv = zext i16 %12 to i64, !dbg !7514
  %and4 = and i64 %conv, 16384, !dbg !7517
  %tobool5 = icmp ne i64 %and4, 0, !dbg !7517
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !7518

if.then6:                                         ; preds = %if.end3
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7519
  call void @shutdown_ai_command(%struct.comedi_device* %13) #9, !dbg !7520
  br label %if.end7, !dbg !7520

if.end7:                                          ; preds = %if.then6, %if.end3
  ret void, !dbg !7521
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_ai_drain_dma(%struct.comedi_device* %dev) #2 !dbg !4350 {
entry:
  %lock.addr.i40 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i40, metadata !5432, metadata !DIExpression()), !dbg !7522
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5440, metadata !DIExpression()), !dbg !7524
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5232, metadata !DIExpression()), !dbg !7525
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %i = alloca i32, align 4
  %flags = alloca i64, align 8
  %retval1 = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7532, metadata !DIExpression()), !dbg !7533
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !7534, metadata !DIExpression()), !dbg !7535
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7536
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !7537
  %1 = load i8*, i8** %private, align 8, !dbg !7537
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !7536
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !7535
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7538, metadata !DIExpression()), !dbg !7539
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7540, metadata !DIExpression()), !dbg !7541
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !7542, metadata !DIExpression()), !dbg !7543
  store i32 0, i32* %retval1, align 4, !dbg !7543
  br label %do.body, !dbg !7544

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !7545

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7546, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7549, metadata !DIExpression()), !dbg !7548
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7548
  %conv = zext i1 %cmp to i32, !dbg !7548
  store i32 1, i32* %tmp, align 4, !dbg !7548
  %3 = load i32, i32* %tmp, align 4, !dbg !7548
  br label %do.body3, !dbg !7550

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7551

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !7552

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !7554, metadata !DIExpression()), !dbg !7557
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !7558, metadata !DIExpression()), !dbg !7557
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !7557
  %conv9 = zext i1 %cmp8 to i32, !dbg !7557
  store i32 1, i32* %tmp10, align 4, !dbg !7557
  %4 = load i32, i32* %tmp10, align 4, !dbg !7557
  %call = call i64 @arch_local_irq_save() #9, !dbg !7559
  store i64 %call, i64* %flags, align 8, !dbg !7559
  br label %do.end, !dbg !7559

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !7552

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !7551

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7560, !srcloc !7561
  br label %do.body13, !dbg !7560

do.body13:                                        ; preds = %do.body12
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7562
  %mite_channel_lock = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 7, !dbg !7562
  store %struct.spinlock* %mite_channel_lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7563
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !7564
  %rlock.i = bitcast %union.anon.3* %7 to %struct.raw_spinlock*, !dbg !7564
  br label %do.end15, !dbg !7562

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !7560

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7551

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7550

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !7545

do.end19:                                         ; preds = %do.end18
  %8 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7565
  %ai_mite_chan = getelementptr inbounds %struct.ni_private, %struct.ni_private* %8, i32 0, i32 43, !dbg !7567
  %9 = load %struct.mite_channel*, %struct.mite_channel** %ai_mite_chan, align 8, !dbg !7567
  %tobool = icmp ne %struct.mite_channel* %9, null, !dbg !7565
  br i1 %tobool, label %if.then, label %if.end38, !dbg !7568

if.then:                                          ; preds = %do.end19
  store i32 0, i32* %i, align 4, !dbg !7569
  br label %for.cond, !dbg !7572

for.cond:                                         ; preds = %for.inc, %if.then
  %10 = load i32, i32* %i, align 4, !dbg !7573
  %cmp20 = icmp slt i32 %10, 10000, !dbg !7575
  br i1 %cmp20, label %for.body, label %for.end, !dbg !7576

for.body:                                         ; preds = %for.cond
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7577
  %call22 = call i32 @ni_stc_readw(%struct.comedi_device* %11, i32 2) #9, !dbg !7580
  %conv23 = zext i32 %call22 to i64, !dbg !7580
  %and = and i64 %conv23, 4096, !dbg !7581
  %tobool24 = icmp ne i64 %and, 0, !dbg !7581
  br i1 %tobool24, label %land.lhs.true, label %if.end, !dbg !7582

land.lhs.true:                                    ; preds = %for.body
  %12 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7583
  %ai_mite_chan25 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %12, i32 0, i32 43, !dbg !7584
  %13 = load %struct.mite_channel*, %struct.mite_channel** %ai_mite_chan25, align 8, !dbg !7584
  %call26 = call i32 @mite_bytes_in_transit(%struct.mite_channel* %13) #9, !dbg !7585
  %cmp27 = icmp eq i32 %call26, 0, !dbg !7586
  br i1 %cmp27, label %if.then29, label %if.end, !dbg !7587

if.then29:                                        ; preds = %land.lhs.true
  br label %for.end, !dbg !7588

if.end:                                           ; preds = %land.lhs.true, %for.body
  call void @__const_udelay(i64 21475) #9, !dbg !7589
  br label %for.inc, !dbg !7594

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %i, align 4, !dbg !7595
  %inc = add i32 %14, 1, !dbg !7595
  store i32 %inc, i32* %i, align 4, !dbg !7595
  br label %for.cond, !dbg !7596, !llvm.loop !7597

for.end:                                          ; preds = %if.then29, %for.cond
  %15 = load i32, i32* %i, align 4, !dbg !7599
  %cmp30 = icmp eq i32 %15, 10000, !dbg !7601
  br i1 %cmp30, label %if.then32, label %if.end37, !dbg !7602

if.then32:                                        ; preds = %for.end
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7603
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %16, i32 0, i32 4, !dbg !7603
  %17 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !7603
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.73, i64 0, i64 0)) #11, !dbg !7603
  %18 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7605
  %class_dev33 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %18, i32 0, i32 4, !dbg !7605
  %19 = load %struct.device*, %struct.device** %class_dev33, align 8, !dbg !7605
  %20 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7605
  %ai_mite_chan34 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %20, i32 0, i32 43, !dbg !7605
  %21 = load %struct.mite_channel*, %struct.mite_channel** %ai_mite_chan34, align 8, !dbg !7605
  %call35 = call i32 @mite_bytes_in_transit(%struct.mite_channel* %21) #9, !dbg !7605
  %22 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7605
  %call36 = call i32 @ni_stc_readw(%struct.comedi_device* %22, i32 2) #9, !dbg !7605
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %19, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.74, i64 0, i64 0), i32 %call35, i32 %call36) #11, !dbg !7605
  store i32 -1, i32* %retval1, align 4, !dbg !7606
  br label %if.end37, !dbg !7607

if.end37:                                         ; preds = %if.then32, %for.end
  br label %if.end38, !dbg !7608

if.end38:                                         ; preds = %if.end37, %do.end19
  %23 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7609
  %mite_channel_lock39 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %23, i32 0, i32 7, !dbg !7610
  %24 = load i64, i64* %flags, align 8, !dbg !7611
  store %struct.spinlock* %mite_channel_lock39, %struct.spinlock** %lock.addr.i40, align 8
  store i64 %24, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !7612
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !7612
  store i32 1, i32* %tmp.i, align 4, !dbg !7612
  %25 = load i32, i32* %tmp.i, align 4, !dbg !7612
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !7613
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !7613
  store i32 1, i32* %tmp8.i, align 4, !dbg !7613
  %26 = load i32, i32* %tmp8.i, align 4, !dbg !7613
  %27 = load i64, i64* %flags.addr.i, align 8, !dbg !7614
  call void @arch_local_irq_restore(i64 %27) #10, !dbg !7614
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7615, !srcloc !5582
  %28 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i40, align 8, !dbg !7616
  %29 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %28, i32 0, i32 0, !dbg !7616
  %rlock.i41 = bitcast %union.anon.3* %29 to %struct.raw_spinlock*, !dbg !7616
  %30 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7617
  call void @ni_sync_ai_dma(%struct.comedi_device* %30) #9, !dbg !7618
  %31 = load i32, i32* %retval1, align 4, !dbg !7619
  ret i32 %31, !dbg !7620
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_handle_fifo_dregs(%struct.comedi_device* %dev) #2 !dbg !7621 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %dl = alloca i32, align 4
  %data = alloca i16, align 2
  %i = alloca i32, align 4
  %fe = alloca i16, align 2
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7622, metadata !DIExpression()), !dbg !7623
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !7624, metadata !DIExpression()), !dbg !7625
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7626
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !7627
  %1 = load i8*, i8** %private, align 8, !dbg !7627
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !7626
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !7625
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !7628, metadata !DIExpression()), !dbg !7629
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7630
  %read_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 21, !dbg !7631
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %read_subdev, align 8, !dbg !7631
  store %struct.comedi_subdevice* %4, %struct.comedi_subdevice** %s, align 8, !dbg !7629
  call void @llvm.dbg.declare(metadata i32* %dl, metadata !7632, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.declare(metadata i16* %data, metadata !7634, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7636, metadata !DIExpression()), !dbg !7637
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7638
  %is_611x = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 50, !dbg !7640
  %bf.load = load i16, i16* %is_611x, align 8, !dbg !7640
  %bf.lshr = lshr i16 %bf.load, 2, !dbg !7640
  %bf.clear = and i16 %bf.lshr, 1, !dbg !7640
  %bf.cast = zext i16 %bf.clear to i32, !dbg !7640
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !7638
  br i1 %tobool, label %if.then, label %if.else, !dbg !7641

if.then:                                          ; preds = %entry
  br label %while.cond, !dbg !7642

while.cond:                                       ; preds = %while.body, %if.then
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7644
  %call = call i32 @ni_stc_readw(%struct.comedi_device* %6, i32 2) #9, !dbg !7645
  %conv = zext i32 %call to i64, !dbg !7645
  %and = and i64 %conv, 4096, !dbg !7646
  %cmp = icmp eq i64 %and, 0, !dbg !7647
  br i1 %cmp, label %while.body, label %while.end, !dbg !7642

while.body:                                       ; preds = %while.cond
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7648
  %call2 = call i32 @ni_readl(%struct.comedi_device* %7, i32 28) #9, !dbg !7650
  store i32 %call2, i32* %dl, align 4, !dbg !7651
  %8 = load i32, i32* %dl, align 4, !dbg !7652
  %shr = lshr i32 %8, 16, !dbg !7653
  %conv3 = trunc i32 %shr to i16, !dbg !7652
  store i16 %conv3, i16* %data, align 2, !dbg !7654
  %9 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7655
  %10 = bitcast i16* %data to i8*, !dbg !7656
  %call4 = call i32 @comedi_buf_write_samples(%struct.comedi_subdevice* %9, i8* %10, i32 1) #9, !dbg !7657
  %11 = load i32, i32* %dl, align 4, !dbg !7658
  %and5 = and i32 %11, 65535, !dbg !7659
  %conv6 = trunc i32 %and5 to i16, !dbg !7658
  store i16 %conv6, i16* %data, align 2, !dbg !7660
  %12 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7661
  %13 = bitcast i16* %data to i8*, !dbg !7662
  %call7 = call i32 @comedi_buf_write_samples(%struct.comedi_subdevice* %12, i8* %13, i32 1) #9, !dbg !7663
  br label %while.cond, !dbg !7642, !llvm.loop !7664

while.end:                                        ; preds = %while.cond
  br label %if.end62, !dbg !7666

if.else:                                          ; preds = %entry
  %14 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7667
  %is_6143 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %14, i32 0, i32 50, !dbg !7669
  %bf.load8 = load i16, i16* %is_6143, align 8, !dbg !7669
  %bf.lshr9 = lshr i16 %bf.load8, 3, !dbg !7669
  %bf.clear10 = and i16 %bf.lshr9, 1, !dbg !7669
  %bf.cast11 = zext i16 %bf.clear10 to i32, !dbg !7669
  %tobool12 = icmp ne i32 %bf.cast11, 0, !dbg !7667
  br i1 %tobool12, label %if.then13, label %if.else36, !dbg !7670

if.then13:                                        ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !7671
  br label %while.cond14, !dbg !7673

while.cond14:                                     ; preds = %while.body18, %if.then13
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7674
  %call15 = call i32 @ni_readl(%struct.comedi_device* %15, i32 136) #9, !dbg !7675
  %and16 = and i32 %call15, 4, !dbg !7676
  %tobool17 = icmp ne i32 %and16, 0, !dbg !7673
  br i1 %tobool17, label %while.body18, label %while.end26, !dbg !7673

while.body18:                                     ; preds = %while.cond14
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7677
  %call19 = call i32 @ni_readl(%struct.comedi_device* %16, i32 140) #9, !dbg !7679
  store i32 %call19, i32* %dl, align 4, !dbg !7680
  %17 = load i32, i32* %dl, align 4, !dbg !7681
  %shr20 = lshr i32 %17, 16, !dbg !7682
  %conv21 = trunc i32 %shr20 to i16, !dbg !7681
  store i16 %conv21, i16* %data, align 2, !dbg !7683
  %18 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7684
  %19 = bitcast i16* %data to i8*, !dbg !7685
  %call22 = call i32 @comedi_buf_write_samples(%struct.comedi_subdevice* %18, i8* %19, i32 1) #9, !dbg !7686
  %20 = load i32, i32* %dl, align 4, !dbg !7687
  %and23 = and i32 %20, 65535, !dbg !7688
  %conv24 = trunc i32 %and23 to i16, !dbg !7687
  store i16 %conv24, i16* %data, align 2, !dbg !7689
  %21 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7690
  %22 = bitcast i16* %data to i8*, !dbg !7691
  %call25 = call i32 @comedi_buf_write_samples(%struct.comedi_subdevice* %21, i8* %22, i32 1) #9, !dbg !7692
  %23 = load i32, i32* %i, align 4, !dbg !7693
  %add = add i32 %23, 2, !dbg !7693
  store i32 %add, i32* %i, align 4, !dbg !7693
  br label %while.cond14, !dbg !7673, !llvm.loop !7694

while.end26:                                      ; preds = %while.cond14
  %24 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7696
  %call27 = call i32 @ni_readl(%struct.comedi_device* %24, i32 136) #9, !dbg !7698
  %and28 = and i32 %call27, 1, !dbg !7699
  %tobool29 = icmp ne i32 %and28, 0, !dbg !7699
  br i1 %tobool29, label %if.then30, label %if.end, !dbg !7700

if.then30:                                        ; preds = %while.end26
  %25 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7701
  call void @ni_writel(%struct.comedi_device* %25, i32 1, i32 136) #9, !dbg !7703
  %26 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7704
  %call31 = call i32 @ni_readl(%struct.comedi_device* %26, i32 140) #9, !dbg !7705
  store i32 %call31, i32* %dl, align 4, !dbg !7706
  %27 = load i32, i32* %dl, align 4, !dbg !7707
  %shr32 = lshr i32 %27, 16, !dbg !7708
  %and33 = and i32 %shr32, 65535, !dbg !7709
  %conv34 = trunc i32 %and33 to i16, !dbg !7710
  store i16 %conv34, i16* %data, align 2, !dbg !7711
  %28 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7712
  %29 = bitcast i16* %data to i8*, !dbg !7713
  %call35 = call i32 @comedi_buf_write_samples(%struct.comedi_subdevice* %28, i8* %29, i32 1) #9, !dbg !7714
  br label %if.end, !dbg !7715

if.end:                                           ; preds = %if.then30, %while.end26
  br label %if.end61, !dbg !7716

if.else36:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i16* %fe, metadata !7717, metadata !DIExpression()), !dbg !7719
  %30 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7720
  %call37 = call i32 @ni_stc_readw(%struct.comedi_device* %30, i32 2) #9, !dbg !7721
  %conv38 = zext i32 %call37 to i64, !dbg !7721
  %and39 = and i64 %conv38, 4096, !dbg !7722
  %conv40 = trunc i64 %and39 to i16, !dbg !7721
  store i16 %conv40, i16* %fe, align 2, !dbg !7723
  br label %while.cond41, !dbg !7724

while.cond41:                                     ; preds = %for.end, %if.else36
  %31 = load i16, i16* %fe, align 2, !dbg !7725
  %conv42 = zext i16 %31 to i32, !dbg !7725
  %cmp43 = icmp eq i32 %conv42, 0, !dbg !7726
  br i1 %cmp43, label %while.body45, label %while.end60, !dbg !7724

while.body45:                                     ; preds = %while.cond41
  store i32 0, i32* %i, align 4, !dbg !7727
  br label %for.cond, !dbg !7730

for.cond:                                         ; preds = %for.inc, %while.body45
  %32 = load i32, i32* %i, align 4, !dbg !7731
  %conv46 = sext i32 %32 to i64, !dbg !7731
  %cmp47 = icmp ult i64 %conv46, 8192, !dbg !7733
  br i1 %cmp47, label %for.body, label %for.end, !dbg !7734

for.body:                                         ; preds = %for.cond
  %33 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7735
  %call49 = call i32 @ni_stc_readw(%struct.comedi_device* %33, i32 2) #9, !dbg !7737
  %conv50 = zext i32 %call49 to i64, !dbg !7737
  %and51 = and i64 %conv50, 4096, !dbg !7738
  %conv52 = trunc i64 %and51 to i16, !dbg !7737
  store i16 %conv52, i16* %fe, align 2, !dbg !7739
  %34 = load i16, i16* %fe, align 2, !dbg !7740
  %tobool53 = icmp ne i16 %34, 0, !dbg !7740
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !7742

if.then54:                                        ; preds = %for.body
  br label %for.end, !dbg !7743

if.end55:                                         ; preds = %for.body
  %35 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7744
  %call56 = call i32 @ni_readw(%struct.comedi_device* %35, i32 28) #9, !dbg !7745
  %conv57 = trunc i32 %call56 to i16, !dbg !7745
  %36 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7746
  %ai_fifo_buffer = getelementptr inbounds %struct.ni_private, %struct.ni_private* %36, i32 0, i32 40, !dbg !7747
  %37 = load i32, i32* %i, align 4, !dbg !7748
  %idxprom = sext i32 %37 to i64, !dbg !7746
  %arrayidx = getelementptr [8192 x i16], [8192 x i16]* %ai_fifo_buffer, i64 0, i64 %idxprom, !dbg !7746
  store i16 %conv57, i16* %arrayidx, align 2, !dbg !7749
  br label %for.inc, !dbg !7750

for.inc:                                          ; preds = %if.end55
  %38 = load i32, i32* %i, align 4, !dbg !7751
  %inc = add i32 %38, 1, !dbg !7751
  store i32 %inc, i32* %i, align 4, !dbg !7751
  br label %for.cond, !dbg !7752, !llvm.loop !7753

for.end:                                          ; preds = %if.then54, %for.cond
  %39 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7755
  %40 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7756
  %ai_fifo_buffer58 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %40, i32 0, i32 40, !dbg !7757
  %arraydecay = getelementptr inbounds [8192 x i16], [8192 x i16]* %ai_fifo_buffer58, i64 0, i64 0, !dbg !7756
  %41 = bitcast i16* %arraydecay to i8*, !dbg !7756
  %42 = load i32, i32* %i, align 4, !dbg !7758
  %call59 = call i32 @comedi_buf_write_samples(%struct.comedi_subdevice* %39, i8* %41, i32 %42) #9, !dbg !7759
  br label %while.cond41, !dbg !7724, !llvm.loop !7760

while.end60:                                      ; preds = %while.cond41
  br label %if.end61

if.end61:                                         ; preds = %while.end60, %if.end
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %while.end
  ret void, !dbg !7762
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @get_last_sample_611x(%struct.comedi_device* %dev) #2 !dbg !7763 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %data = alloca i16, align 2
  %dl = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7764, metadata !DIExpression()), !dbg !7765
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !7766, metadata !DIExpression()), !dbg !7767
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7768
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !7769
  %1 = load i8*, i8** %private, align 8, !dbg !7769
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !7768
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !7767
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !7770, metadata !DIExpression()), !dbg !7771
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7772
  %read_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 21, !dbg !7773
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %read_subdev, align 8, !dbg !7773
  store %struct.comedi_subdevice* %4, %struct.comedi_subdevice** %s, align 8, !dbg !7771
  call void @llvm.dbg.declare(metadata i16* %data, metadata !7774, metadata !DIExpression()), !dbg !7775
  call void @llvm.dbg.declare(metadata i32* %dl, metadata !7776, metadata !DIExpression()), !dbg !7777
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7778
  %is_611x = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 50, !dbg !7780
  %bf.load = load i16, i16* %is_611x, align 8, !dbg !7780
  %bf.lshr = lshr i16 %bf.load, 2, !dbg !7780
  %bf.clear = and i16 %bf.lshr, 1, !dbg !7780
  %bf.cast = zext i16 %bf.clear to i32, !dbg !7780
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !7778
  br i1 %tobool, label %if.end, label %if.then, !dbg !7781

if.then:                                          ; preds = %entry
  br label %if.end6, !dbg !7782

if.end:                                           ; preds = %entry
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7783
  %call = call i32 @ni_readb(%struct.comedi_device* %6, i32 1) #9, !dbg !7785
  %and = and i32 %call, 128, !dbg !7786
  %tobool1 = icmp ne i32 %and, 0, !dbg !7786
  br i1 %tobool1, label %if.then2, label %if.end6, !dbg !7787

if.then2:                                         ; preds = %if.end
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7788
  %call3 = call i32 @ni_readl(%struct.comedi_device* %7, i32 28) #9, !dbg !7790
  store i32 %call3, i32* %dl, align 4, !dbg !7791
  %8 = load i32, i32* %dl, align 4, !dbg !7792
  %and4 = and i32 %8, 65535, !dbg !7793
  %conv = trunc i32 %and4 to i16, !dbg !7792
  store i16 %conv, i16* %data, align 2, !dbg !7794
  %9 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7795
  %10 = bitcast i16* %data to i8*, !dbg !7796
  %call5 = call i32 @comedi_buf_write_samples(%struct.comedi_subdevice* %9, i8* %10, i32 1) #9, !dbg !7797
  br label %if.end6, !dbg !7798

if.end6:                                          ; preds = %if.then, %if.then2, %if.end
  ret void, !dbg !7799
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @get_last_sample_6143(%struct.comedi_device* %dev) #2 !dbg !7800 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %data = alloca i16, align 2
  %dl = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7801, metadata !DIExpression()), !dbg !7802
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !7803, metadata !DIExpression()), !dbg !7804
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7805
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !7806
  %1 = load i8*, i8** %private, align 8, !dbg !7806
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !7805
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !7804
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !7807, metadata !DIExpression()), !dbg !7808
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7809
  %read_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 21, !dbg !7810
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %read_subdev, align 8, !dbg !7810
  store %struct.comedi_subdevice* %4, %struct.comedi_subdevice** %s, align 8, !dbg !7808
  call void @llvm.dbg.declare(metadata i16* %data, metadata !7811, metadata !DIExpression()), !dbg !7812
  call void @llvm.dbg.declare(metadata i32* %dl, metadata !7813, metadata !DIExpression()), !dbg !7814
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7815
  %is_6143 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 50, !dbg !7817
  %bf.load = load i16, i16* %is_6143, align 8, !dbg !7817
  %bf.lshr = lshr i16 %bf.load, 3, !dbg !7817
  %bf.clear = and i16 %bf.lshr, 1, !dbg !7817
  %bf.cast = zext i16 %bf.clear to i32, !dbg !7817
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !7815
  br i1 %tobool, label %if.end, label %if.then, !dbg !7818

if.then:                                          ; preds = %entry
  br label %if.end6, !dbg !7819

if.end:                                           ; preds = %entry
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7820
  %call = call i32 @ni_readl(%struct.comedi_device* %6, i32 136) #9, !dbg !7822
  %and = and i32 %call, 1, !dbg !7823
  %tobool1 = icmp ne i32 %and, 0, !dbg !7823
  br i1 %tobool1, label %if.then2, label %if.end6, !dbg !7824

if.then2:                                         ; preds = %if.end
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7825
  call void @ni_writel(%struct.comedi_device* %7, i32 1, i32 136) #9, !dbg !7827
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7828
  %call3 = call i32 @ni_readl(%struct.comedi_device* %8, i32 140) #9, !dbg !7829
  store i32 %call3, i32* %dl, align 4, !dbg !7830
  %9 = load i32, i32* %dl, align 4, !dbg !7831
  %shr = lshr i32 %9, 16, !dbg !7832
  %and4 = and i32 %shr, 65535, !dbg !7833
  %conv = trunc i32 %and4 to i16, !dbg !7834
  store i16 %conv, i16* %data, align 2, !dbg !7835
  %10 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7836
  %11 = bitcast i16* %data to i8*, !dbg !7837
  %call5 = call i32 @comedi_buf_write_samples(%struct.comedi_subdevice* %10, i8* %11, i32 1) #9, !dbg !7838
  br label %if.end6, !dbg !7839

if.end6:                                          ; preds = %if.then, %if.then2, %if.end
  ret void, !dbg !7840
}

; Function Attrs: noredzone
declare dso_local i32 @mite_bytes_in_transit(%struct.mite_channel*) #1

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_sync_ai_dma(%struct.comedi_device* %dev) #2 !dbg !7841 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !5432, metadata !DIExpression()), !dbg !7842
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5440, metadata !DIExpression()), !dbg !7844
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5232, metadata !DIExpression()), !dbg !7845
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7852, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !7854, metadata !DIExpression()), !dbg !7855
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7856
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !7857
  %1 = load i8*, i8** %private, align 8, !dbg !7857
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !7856
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !7855
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !7858, metadata !DIExpression()), !dbg !7859
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7860
  %read_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 21, !dbg !7861
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %read_subdev, align 8, !dbg !7861
  store %struct.comedi_subdevice* %4, %struct.comedi_subdevice** %s, align 8, !dbg !7859
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7862, metadata !DIExpression()), !dbg !7863
  br label %do.body, !dbg !7864

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7865

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7866, metadata !DIExpression()), !dbg !7868
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7869, metadata !DIExpression()), !dbg !7868
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7868
  %conv = zext i1 %cmp to i32, !dbg !7868
  store i32 1, i32* %tmp, align 4, !dbg !7868
  %5 = load i32, i32* %tmp, align 4, !dbg !7868
  br label %do.body2, !dbg !7870

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7871

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7872

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7874, metadata !DIExpression()), !dbg !7877
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7878, metadata !DIExpression()), !dbg !7877
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7877
  %conv8 = zext i1 %cmp7 to i32, !dbg !7877
  store i32 1, i32* %tmp9, align 4, !dbg !7877
  %6 = load i32, i32* %tmp9, align 4, !dbg !7877
  %call = call i64 @arch_local_irq_save() #9, !dbg !7879
  store i64 %call, i64* %flags, align 8, !dbg !7879
  br label %do.end, !dbg !7879

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !7872

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !7871

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7880, !srcloc !7881
  br label %do.body12, !dbg !7880

do.body12:                                        ; preds = %do.body11
  %7 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7882
  %mite_channel_lock = getelementptr inbounds %struct.ni_private, %struct.ni_private* %7, i32 0, i32 7, !dbg !7882
  store %struct.spinlock* %mite_channel_lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7883
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !7884
  %rlock.i = bitcast %union.anon.3* %9 to %struct.raw_spinlock*, !dbg !7884
  br label %do.end14, !dbg !7882

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !7880

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !7871

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7870

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7865

do.end18:                                         ; preds = %do.end17
  %10 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7885
  %ai_mite_chan = getelementptr inbounds %struct.ni_private, %struct.ni_private* %10, i32 0, i32 43, !dbg !7887
  %11 = load %struct.mite_channel*, %struct.mite_channel** %ai_mite_chan, align 8, !dbg !7887
  %tobool = icmp ne %struct.mite_channel* %11, null, !dbg !7885
  br i1 %tobool, label %if.then, label %if.end, !dbg !7888

if.then:                                          ; preds = %do.end18
  %12 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7889
  %ai_mite_chan19 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %12, i32 0, i32 43, !dbg !7890
  %13 = load %struct.mite_channel*, %struct.mite_channel** %ai_mite_chan19, align 8, !dbg !7890
  %14 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7891
  call void @mite_sync_dma(%struct.mite_channel* %13, %struct.comedi_subdevice* %14) #9, !dbg !7892
  br label %if.end, !dbg !7892

if.end:                                           ; preds = %if.then, %do.end18
  %15 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7893
  %mite_channel_lock20 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %15, i32 0, i32 7, !dbg !7894
  %16 = load i64, i64* %flags, align 8, !dbg !7895
  store %struct.spinlock* %mite_channel_lock20, %struct.spinlock** %lock.addr.i21, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !7896
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !7896
  store i32 1, i32* %tmp.i, align 4, !dbg !7896
  %17 = load i32, i32* %tmp.i, align 4, !dbg !7896
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !7897
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !7897
  store i32 1, i32* %tmp8.i, align 4, !dbg !7897
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !7897
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !7898
  call void @arch_local_irq_restore(i64 %19) #10, !dbg !7898
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7899, !srcloc !5582
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !7900
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !7900
  %rlock.i22 = bitcast %union.anon.3* %21 to %struct.raw_spinlock*, !dbg !7900
  ret void, !dbg !7901
}

; Function Attrs: noredzone
declare dso_local void @mite_sync_dma(%struct.mite_channel*, %struct.comedi_subdevice*) #1

; Function Attrs: noredzone
declare dso_local i32 @comedi_buf_write_samples(%struct.comedi_subdevice*, i8*, i32) #1

; Function Attrs: noredzone
declare dso_local void @ni_tio_handle_interrupt(%struct.ni_gpct*, %struct.comedi_subdevice*) #1

; Function Attrs: noredzone
declare dso_local i32 @ni_assign_device_routes(i8*, i8*, i8*, %struct.ni_route_tables*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_global_insn_config(%struct.comedi_device* %dev, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !7902 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7903, metadata !DIExpression()), !dbg !7904
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !7905, metadata !DIExpression()), !dbg !7906
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !7907, metadata !DIExpression()), !dbg !7908
  %0 = load i32*, i32** %data.addr, align 8, !dbg !7909
  %arrayidx = getelementptr i32, i32* %0, i64 0, !dbg !7909
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7909
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb4
    i32 2, label %sw.bb8
  ], !dbg !7910

sw.bb:                                            ; preds = %entry
  %2 = load i32*, i32** %data.addr, align 8, !dbg !7911
  %arrayidx1 = getelementptr i32, i32* %2, i64 1, !dbg !7911
  %3 = load i32, i32* %arrayidx1, align 4, !dbg !7911
  %4 = load i32*, i32** %data.addr, align 8, !dbg !7913
  %arrayidx2 = getelementptr i32, i32* %4, i64 2, !dbg !7913
  %5 = load i32, i32* %arrayidx2, align 4, !dbg !7913
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7914
  %call = call i32 @test_route(i32 %3, i32 %5, %struct.comedi_device* %6) #9, !dbg !7915
  %7 = load i32*, i32** %data.addr, align 8, !dbg !7916
  %arrayidx3 = getelementptr i32, i32* %7, i64 0, !dbg !7916
  store i32 %call, i32* %arrayidx3, align 4, !dbg !7917
  store i32 2, i32* %retval, align 4, !dbg !7918
  br label %return, !dbg !7918

sw.bb4:                                           ; preds = %entry
  %8 = load i32*, i32** %data.addr, align 8, !dbg !7919
  %arrayidx5 = getelementptr i32, i32* %8, i64 1, !dbg !7919
  %9 = load i32, i32* %arrayidx5, align 4, !dbg !7919
  %10 = load i32*, i32** %data.addr, align 8, !dbg !7920
  %arrayidx6 = getelementptr i32, i32* %10, i64 2, !dbg !7920
  %11 = load i32, i32* %arrayidx6, align 4, !dbg !7920
  %12 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7921
  %call7 = call i32 @connect_route(i32 %9, i32 %11, %struct.comedi_device* %12) #9, !dbg !7922
  store i32 %call7, i32* %retval, align 4, !dbg !7923
  br label %return, !dbg !7923

sw.bb8:                                           ; preds = %entry
  %13 = load i32*, i32** %data.addr, align 8, !dbg !7924
  %arrayidx9 = getelementptr i32, i32* %13, i64 1, !dbg !7924
  %14 = load i32, i32* %arrayidx9, align 4, !dbg !7924
  %15 = load i32*, i32** %data.addr, align 8, !dbg !7925
  %arrayidx10 = getelementptr i32, i32* %15, i64 2, !dbg !7925
  %16 = load i32, i32* %arrayidx10, align 4, !dbg !7925
  %17 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7926
  %call11 = call i32 @disconnect_route(i32 %14, i32 %16, %struct.comedi_device* %17) #9, !dbg !7927
  store i32 %call11, i32* %retval, align 4, !dbg !7928
  br label %return, !dbg !7928

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !7929
  br label %return, !dbg !7929

return:                                           ; preds = %sw.default, %sw.bb8, %sw.bb4, %sw.bb
  %18 = load i32, i32* %retval, align 4, !dbg !7930
  ret i32 %18, !dbg !7930
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_ni_get_valid_routes(%struct.comedi_device* %dev, i32 %n_pairs, i32* %pair_data) #2 !dbg !7931 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %n_pairs.addr = alloca i32, align 4
  %pair_data.addr = alloca i32*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7932, metadata !DIExpression()), !dbg !7933
  store i32 %n_pairs, i32* %n_pairs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_pairs.addr, metadata !7934, metadata !DIExpression()), !dbg !7935
  store i32* %pair_data, i32** %pair_data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pair_data.addr, metadata !7936, metadata !DIExpression()), !dbg !7937
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !7938, metadata !DIExpression()), !dbg !7939
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7940
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !7941
  %1 = load i8*, i8** %private, align 8, !dbg !7941
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !7940
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !7939
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7942
  %routing_tables = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 51, !dbg !7943
  %4 = load i32, i32* %n_pairs.addr, align 4, !dbg !7944
  %5 = load i32*, i32** %pair_data.addr, align 8, !dbg !7945
  %call = call i32 @ni_get_valid_routes(%struct.ni_route_tables* %routing_tables, i32 %4, i32* %5) #9, !dbg !7946
  ret i32 %call, !dbg !7947
}

; Function Attrs: noredzone
declare dso_local i32 @comedi_alloc_subdevices(%struct.comedi_device*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_ai_insn_read(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !7948 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %mask = alloca i32, align 4
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %signbits = alloca i32, align 4
  %d = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !7949, metadata !DIExpression()), !dbg !7950
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !7951, metadata !DIExpression()), !dbg !7952
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !7953, metadata !DIExpression()), !dbg !7954
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !7955, metadata !DIExpression()), !dbg !7956
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !7957, metadata !DIExpression()), !dbg !7958
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7959
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !7960
  %1 = load i8*, i8** %private, align 8, !dbg !7960
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !7959
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !7958
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !7961, metadata !DIExpression()), !dbg !7962
  %3 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !7963
  %maxdata = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %3, i32 0, i32 13, !dbg !7964
  %4 = load i32, i32* %maxdata, align 8, !dbg !7964
  store i32 %4, i32* %mask, align 4, !dbg !7962
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7965, metadata !DIExpression()), !dbg !7966
  call void @llvm.dbg.declare(metadata i32* %n, metadata !7967, metadata !DIExpression()), !dbg !7968
  call void @llvm.dbg.declare(metadata i32* %signbits, metadata !7969, metadata !DIExpression()), !dbg !7970
  call void @llvm.dbg.declare(metadata i32* %d, metadata !7971, metadata !DIExpression()), !dbg !7972
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7973
  %6 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !7974
  %7 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !7975
  %chanspec = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %7, i32 0, i32 4, !dbg !7976
  call void @ni_load_channelgain_list(%struct.comedi_device* %5, %struct.comedi_subdevice* %6, i32 1, i32* %chanspec) #9, !dbg !7977
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7978
  call void @ni_clear_ai_fifo(%struct.comedi_device* %8) #9, !dbg !7979
  %9 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7980
  %ai_offset = getelementptr inbounds %struct.ni_private, %struct.ni_private* %9, i32 0, i32 21, !dbg !7981
  %arrayidx = getelementptr [512 x i32], [512 x i32]* %ai_offset, i64 0, i64 0, !dbg !7980
  %10 = load i32, i32* %arrayidx, align 4, !dbg !7980
  store i32 %10, i32* %signbits, align 4, !dbg !7982
  %11 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !7983
  %is_611x = getelementptr inbounds %struct.ni_private, %struct.ni_private* %11, i32 0, i32 50, !dbg !7985
  %bf.load = load i16, i16* %is_611x, align 8, !dbg !7985
  %bf.lshr = lshr i16 %bf.load, 2, !dbg !7985
  %bf.clear = and i16 %bf.lshr, 1, !dbg !7985
  %bf.cast = zext i16 %bf.clear to i32, !dbg !7985
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !7983
  br i1 %tobool, label %if.then, label %if.else, !dbg !7986

if.then:                                          ; preds = %entry
  store i32 0, i32* %n, align 4, !dbg !7987
  br label %for.cond, !dbg !7990

for.cond:                                         ; preds = %for.inc, %if.then
  %12 = load i32, i32* %n, align 4, !dbg !7991
  %cmp = icmp slt i32 %12, 3, !dbg !7993
  br i1 %cmp, label %for.body, label %for.end, !dbg !7994

for.body:                                         ; preds = %for.cond
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !7995
  call void @ni_stc_writew(%struct.comedi_device* %13, i32 1, i32 8) #9, !dbg !7997
  call void @__const_udelay(i64 4295) #9, !dbg !7998
  br label %for.inc, !dbg !8003

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %n, align 4, !dbg !8004
  %inc = add i32 %14, 1, !dbg !8004
  store i32 %inc, i32* %n, align 4, !dbg !8004
  br label %for.cond, !dbg !8005, !llvm.loop !8006

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %n, align 4, !dbg !8008
  br label %for.cond1, !dbg !8010

for.cond1:                                        ; preds = %for.inc28, %for.end
  %15 = load i32, i32* %n, align 4, !dbg !8011
  %16 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !8013
  %n2 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %16, i32 0, i32 1, !dbg !8014
  %17 = load i32, i32* %n2, align 4, !dbg !8014
  %cmp3 = icmp ult i32 %15, %17, !dbg !8015
  br i1 %cmp3, label %for.body4, label %for.end30, !dbg !8016

for.body4:                                        ; preds = %for.cond1
  %18 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8017
  call void @ni_stc_writew(%struct.comedi_device* %18, i32 1, i32 8) #9, !dbg !8019
  store i32 0, i32* %d, align 4, !dbg !8020
  store i32 0, i32* %i, align 4, !dbg !8021
  br label %for.cond5, !dbg !8023

for.cond5:                                        ; preds = %for.inc19, %for.body4
  %19 = load i32, i32* %i, align 4, !dbg !8024
  %cmp6 = icmp slt i32 %19, 1000, !dbg !8026
  br i1 %cmp6, label %for.body7, label %for.end21, !dbg !8027

for.body7:                                        ; preds = %for.cond5
  %20 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8028
  %call = call i32 @ni_readb(%struct.comedi_device* %20, i32 1) #9, !dbg !8031
  %and = and i32 %call, 128, !dbg !8032
  %tobool8 = icmp ne i32 %and, 0, !dbg !8032
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !8033

if.then9:                                         ; preds = %for.body7
  %21 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8034
  %call10 = call i32 @ni_readl(%struct.comedi_device* %21, i32 28) #9, !dbg !8036
  store i32 %call10, i32* %d, align 4, !dbg !8037
  %22 = load i32, i32* %d, align 4, !dbg !8038
  %shr = lshr i32 %22, 16, !dbg !8038
  store i32 %shr, i32* %d, align 4, !dbg !8038
  %23 = load i32, i32* %d, align 4, !dbg !8039
  %and11 = and i32 %23, 65535, !dbg !8039
  store i32 %and11, i32* %d, align 4, !dbg !8039
  br label %for.end21, !dbg !8040

if.end:                                           ; preds = %for.body7
  %24 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8041
  %call12 = call i32 @ni_stc_readw(%struct.comedi_device* %24, i32 2) #9, !dbg !8043
  %conv = zext i32 %call12 to i64, !dbg !8043
  %and13 = and i64 %conv, 4096, !dbg !8044
  %tobool14 = icmp ne i64 %and13, 0, !dbg !8044
  br i1 %tobool14, label %if.end18, label %if.then15, !dbg !8045

if.then15:                                        ; preds = %if.end
  %25 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8046
  %call16 = call i32 @ni_readl(%struct.comedi_device* %25, i32 28) #9, !dbg !8048
  store i32 %call16, i32* %d, align 4, !dbg !8049
  %26 = load i32, i32* %d, align 4, !dbg !8050
  %and17 = and i32 %26, 65535, !dbg !8050
  store i32 %and17, i32* %d, align 4, !dbg !8050
  br label %for.end21, !dbg !8051

if.end18:                                         ; preds = %if.end
  br label %for.inc19, !dbg !8052

for.inc19:                                        ; preds = %if.end18
  %27 = load i32, i32* %i, align 4, !dbg !8053
  %inc20 = add i32 %27, 1, !dbg !8053
  store i32 %inc20, i32* %i, align 4, !dbg !8053
  br label %for.cond5, !dbg !8054, !llvm.loop !8055

for.end21:                                        ; preds = %if.then15, %if.then9, %for.cond5
  %28 = load i32, i32* %i, align 4, !dbg !8057
  %cmp22 = icmp eq i32 %28, 1000, !dbg !8059
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !8060

if.then24:                                        ; preds = %for.end21
  %29 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8061
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %29, i32 0, i32 4, !dbg !8061
  %30 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !8061
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %30, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.91, i64 0, i64 0)) #11, !dbg !8061
  store i32 -62, i32* %retval, align 4, !dbg !8063
  br label %return, !dbg !8063

if.end25:                                         ; preds = %for.end21
  %31 = load i32, i32* %signbits, align 4, !dbg !8064
  %32 = load i32, i32* %d, align 4, !dbg !8065
  %add = add i32 %32, %31, !dbg !8065
  store i32 %add, i32* %d, align 4, !dbg !8065
  %33 = load i32, i32* %d, align 4, !dbg !8066
  %and26 = and i32 %33, 65535, !dbg !8067
  %34 = load i32*, i32** %data.addr, align 8, !dbg !8068
  %35 = load i32, i32* %n, align 4, !dbg !8069
  %idxprom = sext i32 %35 to i64, !dbg !8068
  %arrayidx27 = getelementptr i32, i32* %34, i64 %idxprom, !dbg !8068
  store i32 %and26, i32* %arrayidx27, align 4, !dbg !8070
  br label %for.inc28, !dbg !8071

for.inc28:                                        ; preds = %if.end25
  %36 = load i32, i32* %n, align 4, !dbg !8072
  %inc29 = add i32 %36, 1, !dbg !8072
  store i32 %inc29, i32* %n, align 4, !dbg !8072
  br label %for.cond1, !dbg !8073, !llvm.loop !8074

for.end30:                                        ; preds = %for.cond1
  br label %if.end113, !dbg !8076

if.else:                                          ; preds = %entry
  %37 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8077
  %is_6143 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %37, i32 0, i32 50, !dbg !8079
  %bf.load31 = load i16, i16* %is_6143, align 8, !dbg !8079
  %bf.lshr32 = lshr i16 %bf.load31, 3, !dbg !8079
  %bf.clear33 = and i16 %bf.lshr32, 1, !dbg !8079
  %bf.cast34 = zext i16 %bf.clear33 to i32, !dbg !8079
  %tobool35 = icmp ne i32 %bf.cast34, 0, !dbg !8077
  br i1 %tobool35, label %if.then36, label %if.else69, !dbg !8080

if.then36:                                        ; preds = %if.else
  store i32 0, i32* %n, align 4, !dbg !8081
  br label %for.cond37, !dbg !8084

for.cond37:                                       ; preds = %for.inc66, %if.then36
  %38 = load i32, i32* %n, align 4, !dbg !8085
  %39 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !8087
  %n38 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %39, i32 0, i32 1, !dbg !8088
  %40 = load i32, i32* %n38, align 4, !dbg !8088
  %cmp39 = icmp ult i32 %38, %40, !dbg !8089
  br i1 %cmp39, label %for.body41, label %for.end68, !dbg !8090

for.body41:                                       ; preds = %for.cond37
  %41 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8091
  call void @ni_stc_writew(%struct.comedi_device* %41, i32 1, i32 8) #9, !dbg !8093
  store i32 0, i32* %d, align 4, !dbg !8094
  store i32 0, i32* %i, align 4, !dbg !8095
  br label %for.cond42, !dbg !8097

for.cond42:                                       ; preds = %for.inc52, %for.body41
  %42 = load i32, i32* %i, align 4, !dbg !8098
  %cmp43 = icmp slt i32 %42, 1000, !dbg !8100
  br i1 %cmp43, label %for.body45, label %for.end54, !dbg !8101

for.body45:                                       ; preds = %for.cond42
  %43 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8102
  %call46 = call i32 @ni_readl(%struct.comedi_device* %43, i32 136) #9, !dbg !8105
  %and47 = and i32 %call46, 1, !dbg !8106
  %tobool48 = icmp ne i32 %and47, 0, !dbg !8106
  br i1 %tobool48, label %if.then49, label %if.end51, !dbg !8107

if.then49:                                        ; preds = %for.body45
  %44 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8108
  call void @ni_writel(%struct.comedi_device* %44, i32 1, i32 136) #9, !dbg !8110
  %45 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8111
  %call50 = call i32 @ni_readl(%struct.comedi_device* %45, i32 140) #9, !dbg !8112
  store i32 %call50, i32* %d, align 4, !dbg !8113
  br label %for.end54, !dbg !8114

if.end51:                                         ; preds = %for.body45
  br label %for.inc52, !dbg !8115

for.inc52:                                        ; preds = %if.end51
  %46 = load i32, i32* %i, align 4, !dbg !8116
  %inc53 = add i32 %46, 1, !dbg !8116
  store i32 %inc53, i32* %i, align 4, !dbg !8116
  br label %for.cond42, !dbg !8117, !llvm.loop !8118

for.end54:                                        ; preds = %if.then49, %for.cond42
  %47 = load i32, i32* %i, align 4, !dbg !8120
  %cmp55 = icmp eq i32 %47, 1000, !dbg !8122
  br i1 %cmp55, label %if.then57, label %if.end59, !dbg !8123

if.then57:                                        ; preds = %for.end54
  %48 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8124
  %class_dev58 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %48, i32 0, i32 4, !dbg !8124
  %49 = load %struct.device*, %struct.device** %class_dev58, align 8, !dbg !8124
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %49, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.91, i64 0, i64 0)) #11, !dbg !8124
  store i32 -62, i32* %retval, align 4, !dbg !8126
  br label %return, !dbg !8126

if.end59:                                         ; preds = %for.end54
  %50 = load i32, i32* %d, align 4, !dbg !8127
  %shr60 = lshr i32 %50, 16, !dbg !8128
  %and61 = and i32 %shr60, 65535, !dbg !8129
  %51 = load i32, i32* %signbits, align 4, !dbg !8130
  %add62 = add i32 %and61, %51, !dbg !8131
  %and63 = and i32 %add62, 65535, !dbg !8132
  %52 = load i32*, i32** %data.addr, align 8, !dbg !8133
  %53 = load i32, i32* %n, align 4, !dbg !8134
  %idxprom64 = sext i32 %53 to i64, !dbg !8133
  %arrayidx65 = getelementptr i32, i32* %52, i64 %idxprom64, !dbg !8133
  store i32 %and63, i32* %arrayidx65, align 4, !dbg !8135
  br label %for.inc66, !dbg !8136

for.inc66:                                        ; preds = %if.end59
  %54 = load i32, i32* %n, align 4, !dbg !8137
  %inc67 = add i32 %54, 1, !dbg !8137
  store i32 %inc67, i32* %n, align 4, !dbg !8137
  br label %for.cond37, !dbg !8138, !llvm.loop !8139

for.end68:                                        ; preds = %for.cond37
  br label %if.end112, !dbg !8141

if.else69:                                        ; preds = %if.else
  store i32 0, i32* %n, align 4, !dbg !8142
  br label %for.cond70, !dbg !8145

for.cond70:                                       ; preds = %for.inc109, %if.else69
  %55 = load i32, i32* %n, align 4, !dbg !8146
  %56 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !8148
  %n71 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %56, i32 0, i32 1, !dbg !8149
  %57 = load i32, i32* %n71, align 4, !dbg !8149
  %cmp72 = icmp ult i32 %55, %57, !dbg !8150
  br i1 %cmp72, label %for.body74, label %for.end111, !dbg !8151

for.body74:                                       ; preds = %for.cond70
  %58 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8152
  call void @ni_stc_writew(%struct.comedi_device* %58, i32 1, i32 8) #9, !dbg !8154
  store i32 0, i32* %i, align 4, !dbg !8155
  br label %for.cond75, !dbg !8157

for.cond75:                                       ; preds = %for.inc85, %for.body74
  %59 = load i32, i32* %i, align 4, !dbg !8158
  %cmp76 = icmp slt i32 %59, 1000, !dbg !8160
  br i1 %cmp76, label %for.body78, label %for.end87, !dbg !8161

for.body78:                                       ; preds = %for.cond75
  %60 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8162
  %call79 = call i32 @ni_stc_readw(%struct.comedi_device* %60, i32 2) #9, !dbg !8165
  %conv80 = zext i32 %call79 to i64, !dbg !8165
  %and81 = and i64 %conv80, 4096, !dbg !8166
  %tobool82 = icmp ne i64 %and81, 0, !dbg !8166
  br i1 %tobool82, label %if.end84, label %if.then83, !dbg !8167

if.then83:                                        ; preds = %for.body78
  br label %for.end87, !dbg !8168

if.end84:                                         ; preds = %for.body78
  br label %for.inc85, !dbg !8169

for.inc85:                                        ; preds = %if.end84
  %61 = load i32, i32* %i, align 4, !dbg !8170
  %inc86 = add i32 %61, 1, !dbg !8170
  store i32 %inc86, i32* %i, align 4, !dbg !8170
  br label %for.cond75, !dbg !8171, !llvm.loop !8172

for.end87:                                        ; preds = %if.then83, %for.cond75
  %62 = load i32, i32* %i, align 4, !dbg !8174
  %cmp88 = icmp eq i32 %62, 1000, !dbg !8176
  br i1 %cmp88, label %if.then90, label %if.end92, !dbg !8177

if.then90:                                        ; preds = %for.end87
  %63 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8178
  %class_dev91 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %63, i32 0, i32 4, !dbg !8178
  %64 = load %struct.device*, %struct.device** %class_dev91, align 8, !dbg !8178
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %64, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.91, i64 0, i64 0)) #11, !dbg !8178
  store i32 -62, i32* %retval, align 4, !dbg !8180
  br label %return, !dbg !8180

if.end92:                                         ; preds = %for.end87
  %65 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8181
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %65, i32 0, i32 50, !dbg !8183
  %bf.load93 = load i16, i16* %is_m_series, align 8, !dbg !8183
  %bf.clear94 = and i16 %bf.load93, 1, !dbg !8183
  %bf.cast95 = zext i16 %bf.clear94 to i32, !dbg !8183
  %tobool96 = icmp ne i32 %bf.cast95, 0, !dbg !8181
  br i1 %tobool96, label %if.then97, label %if.else102, !dbg !8184

if.then97:                                        ; preds = %if.end92
  %66 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8185
  %call98 = call i32 @ni_readl(%struct.comedi_device* %66, i32 28) #9, !dbg !8187
  store i32 %call98, i32* %d, align 4, !dbg !8188
  %67 = load i32, i32* %mask, align 4, !dbg !8189
  %68 = load i32, i32* %d, align 4, !dbg !8190
  %and99 = and i32 %68, %67, !dbg !8190
  store i32 %and99, i32* %d, align 4, !dbg !8190
  %69 = load i32, i32* %d, align 4, !dbg !8191
  %70 = load i32*, i32** %data.addr, align 8, !dbg !8192
  %71 = load i32, i32* %n, align 4, !dbg !8193
  %idxprom100 = sext i32 %71 to i64, !dbg !8192
  %arrayidx101 = getelementptr i32, i32* %70, i64 %idxprom100, !dbg !8192
  store i32 %69, i32* %arrayidx101, align 4, !dbg !8194
  br label %if.end108, !dbg !8195

if.else102:                                       ; preds = %if.end92
  %72 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8196
  %call103 = call i32 @ni_readw(%struct.comedi_device* %72, i32 28) #9, !dbg !8198
  store i32 %call103, i32* %d, align 4, !dbg !8199
  %73 = load i32, i32* %signbits, align 4, !dbg !8200
  %74 = load i32, i32* %d, align 4, !dbg !8201
  %add104 = add i32 %74, %73, !dbg !8201
  store i32 %add104, i32* %d, align 4, !dbg !8201
  %75 = load i32, i32* %d, align 4, !dbg !8202
  %and105 = and i32 %75, 65535, !dbg !8203
  %76 = load i32*, i32** %data.addr, align 8, !dbg !8204
  %77 = load i32, i32* %n, align 4, !dbg !8205
  %idxprom106 = sext i32 %77 to i64, !dbg !8204
  %arrayidx107 = getelementptr i32, i32* %76, i64 %idxprom106, !dbg !8204
  store i32 %and105, i32* %arrayidx107, align 4, !dbg !8206
  br label %if.end108

if.end108:                                        ; preds = %if.else102, %if.then97
  br label %for.inc109, !dbg !8207

for.inc109:                                       ; preds = %if.end108
  %78 = load i32, i32* %n, align 4, !dbg !8208
  %inc110 = add i32 %78, 1, !dbg !8208
  store i32 %inc110, i32* %n, align 4, !dbg !8208
  br label %for.cond70, !dbg !8209, !llvm.loop !8210

for.end111:                                       ; preds = %for.cond70
  br label %if.end112

if.end112:                                        ; preds = %for.end111, %for.end68
  br label %if.end113

if.end113:                                        ; preds = %if.end112, %for.end30
  %79 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !8212
  %n114 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %79, i32 0, i32 1, !dbg !8213
  %80 = load i32, i32* %n114, align 4, !dbg !8213
  store i32 %80, i32* %retval, align 4, !dbg !8214
  br label %return, !dbg !8214

return:                                           ; preds = %if.end113, %if.then90, %if.then57, %if.then24
  %81 = load i32, i32* %retval, align 4, !dbg !8215
  ret i32 %81, !dbg !8215
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_ai_insn_config(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !8216 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %board = alloca %struct.ni_board_struct*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %calib_source = alloca i32, align 4
  %calib_source16 = alloca i32, align 4
  %calib_source_adjust = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !8217, metadata !DIExpression()), !dbg !8218
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !8219, metadata !DIExpression()), !dbg !8220
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !8221, metadata !DIExpression()), !dbg !8222
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !8223, metadata !DIExpression()), !dbg !8224
  call void @llvm.dbg.declare(metadata %struct.ni_board_struct** %board, metadata !8225, metadata !DIExpression()), !dbg !8226
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8227
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !8228
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !8228
  %2 = bitcast i8* %1 to %struct.ni_board_struct*, !dbg !8227
  store %struct.ni_board_struct* %2, %struct.ni_board_struct** %board, align 8, !dbg !8226
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !8229, metadata !DIExpression()), !dbg !8230
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8231
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !8232
  %4 = load i8*, i8** %private, align 8, !dbg !8232
  %5 = bitcast i8* %4 to %struct.ni_private*, !dbg !8231
  store %struct.ni_private* %5, %struct.ni_private** %devpriv, align 8, !dbg !8230
  %6 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !8233
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %6, i32 0, i32 1, !dbg !8235
  %7 = load i32, i32* %n, align 4, !dbg !8235
  %cmp = icmp ult i32 %7, 1, !dbg !8236
  br i1 %cmp, label %if.then, label %if.end, !dbg !8237

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !8238
  br label %return, !dbg !8238

if.end:                                           ; preds = %entry
  %8 = load i32*, i32** %data.addr, align 8, !dbg !8239
  %arrayidx = getelementptr i32, i32* %8, i64 0, !dbg !8239
  %9 = load i32, i32* %arrayidx, align 4, !dbg !8239
  switch i32 %9, label %sw.default [
    i32 20, label %sw.bb
    i32 5005, label %sw.bb34
  ], !dbg !8240

sw.bb:                                            ; preds = %if.end
  %10 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8241
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %10, i32 0, i32 50, !dbg !8244
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !8244
  %bf.clear = and i16 %bf.load, 1, !dbg !8244
  %bf.cast = zext i16 %bf.clear to i32, !dbg !8244
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !8241
  br i1 %tobool, label %if.then1, label %if.else, !dbg !8245

if.then1:                                         ; preds = %sw.bb
  %11 = load i32*, i32** %data.addr, align 8, !dbg !8246
  %arrayidx2 = getelementptr i32, i32* %11, i64 1, !dbg !8246
  %12 = load i32, i32* %arrayidx2, align 4, !dbg !8246
  %and = and i32 %12, -524161, !dbg !8249
  %tobool3 = icmp ne i32 %and, 0, !dbg !8249
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !8250

if.then4:                                         ; preds = %if.then1
  store i32 -22, i32* %retval, align 4, !dbg !8251
  br label %return, !dbg !8251

if.end5:                                          ; preds = %if.then1
  %13 = load i32*, i32** %data.addr, align 8, !dbg !8252
  %arrayidx6 = getelementptr i32, i32* %13, i64 1, !dbg !8252
  %14 = load i32, i32* %arrayidx6, align 4, !dbg !8252
  %15 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8253
  %ai_calib_source = getelementptr inbounds %struct.ni_private, %struct.ni_private* %15, i32 0, i32 3, !dbg !8254
  store i32 %14, i32* %ai_calib_source, align 8, !dbg !8255
  br label %if.end33, !dbg !8256

if.else:                                          ; preds = %sw.bb
  %16 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8257
  %is_6143 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %16, i32 0, i32 50, !dbg !8259
  %bf.load7 = load i16, i16* %is_6143, align 8, !dbg !8259
  %bf.lshr = lshr i16 %bf.load7, 3, !dbg !8259
  %bf.clear8 = and i16 %bf.lshr, 1, !dbg !8259
  %bf.cast9 = zext i16 %bf.clear8 to i32, !dbg !8259
  %tobool10 = icmp ne i32 %bf.cast9, 0, !dbg !8257
  br i1 %tobool10, label %if.then11, label %if.else15, !dbg !8260

if.then11:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %calib_source, metadata !8261, metadata !DIExpression()), !dbg !8263
  %17 = load i32*, i32** %data.addr, align 8, !dbg !8264
  %arrayidx12 = getelementptr i32, i32* %17, i64 1, !dbg !8264
  %18 = load i32, i32* %arrayidx12, align 4, !dbg !8264
  %and13 = and i32 %18, 15, !dbg !8265
  store i32 %and13, i32* %calib_source, align 4, !dbg !8266
  %19 = load i32, i32* %calib_source, align 4, !dbg !8267
  %20 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8268
  %ai_calib_source14 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %20, i32 0, i32 3, !dbg !8269
  store i32 %19, i32* %ai_calib_source14, align 8, !dbg !8270
  %21 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8271
  %22 = load i32, i32* %calib_source, align 4, !dbg !8272
  call void @ni_writew(%struct.comedi_device* %21, i32 %22, i32 66) #9, !dbg !8273
  br label %if.end32, !dbg !8274

if.else15:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %calib_source16, metadata !8275, metadata !DIExpression()), !dbg !8277
  call void @llvm.dbg.declare(metadata i32* %calib_source_adjust, metadata !8278, metadata !DIExpression()), !dbg !8279
  %23 = load i32*, i32** %data.addr, align 8, !dbg !8280
  %arrayidx17 = getelementptr i32, i32* %23, i64 1, !dbg !8280
  %24 = load i32, i32* %arrayidx17, align 4, !dbg !8280
  %and18 = and i32 %24, 15, !dbg !8281
  store i32 %and18, i32* %calib_source16, align 4, !dbg !8282
  %25 = load i32*, i32** %data.addr, align 8, !dbg !8283
  %arrayidx19 = getelementptr i32, i32* %25, i64 1, !dbg !8283
  %26 = load i32, i32* %arrayidx19, align 4, !dbg !8283
  %shr = lshr i32 %26, 4, !dbg !8284
  %and20 = and i32 %shr, 255, !dbg !8285
  store i32 %and20, i32* %calib_source_adjust, align 4, !dbg !8286
  %27 = load i32, i32* %calib_source16, align 4, !dbg !8287
  %cmp21 = icmp uge i32 %27, 8, !dbg !8289
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !8290

if.then22:                                        ; preds = %if.else15
  store i32 -22, i32* %retval, align 4, !dbg !8291
  br label %return, !dbg !8291

if.end23:                                         ; preds = %if.else15
  %28 = load i32, i32* %calib_source16, align 4, !dbg !8292
  %29 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8293
  %ai_calib_source24 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %29, i32 0, i32 3, !dbg !8294
  store i32 %28, i32* %ai_calib_source24, align 8, !dbg !8295
  %30 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8296
  %is_611x = getelementptr inbounds %struct.ni_private, %struct.ni_private* %30, i32 0, i32 50, !dbg !8298
  %bf.load25 = load i16, i16* %is_611x, align 8, !dbg !8298
  %bf.lshr26 = lshr i16 %bf.load25, 2, !dbg !8298
  %bf.clear27 = and i16 %bf.lshr26, 1, !dbg !8298
  %bf.cast28 = zext i16 %bf.clear27 to i32, !dbg !8298
  %tobool29 = icmp ne i32 %bf.cast28, 0, !dbg !8296
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !8299

if.then30:                                        ; preds = %if.end23
  %31 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8300
  %32 = load i32, i32* %calib_source_adjust, align 4, !dbg !8302
  call void @ni_writeb(%struct.comedi_device* %31, i32 %32, i32 5) #9, !dbg !8303
  br label %if.end31, !dbg !8304

if.end31:                                         ; preds = %if.then30, %if.end23
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then11
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end5
  store i32 2, i32* %retval, align 4, !dbg !8305
  br label %return, !dbg !8305

sw.bb34:                                          ; preds = %if.end
  %33 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8306
  %34 = load i32*, i32** %data.addr, align 8, !dbg !8307
  %arrayidx35 = getelementptr i32, i32* %34, i64 3, !dbg !8307
  %35 = load i32, i32* %arrayidx35, align 4, !dbg !8307
  %call = call i32 @ni_min_ai_scan_period_ns(%struct.comedi_device* %33, i32 %35) #9, !dbg !8308
  %36 = load i32*, i32** %data.addr, align 8, !dbg !8309
  %arrayidx36 = getelementptr i32, i32* %36, i64 1, !dbg !8309
  store i32 %call, i32* %arrayidx36, align 4, !dbg !8310
  %37 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8311
  %is_611x37 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %37, i32 0, i32 50, !dbg !8313
  %bf.load38 = load i16, i16* %is_611x37, align 8, !dbg !8313
  %bf.lshr39 = lshr i16 %bf.load38, 2, !dbg !8313
  %bf.clear40 = and i16 %bf.lshr39, 1, !dbg !8313
  %bf.cast41 = zext i16 %bf.clear40 to i32, !dbg !8313
  %tobool42 = icmp ne i32 %bf.cast41, 0, !dbg !8311
  br i1 %tobool42, label %if.then49, label %lor.lhs.false, !dbg !8314

lor.lhs.false:                                    ; preds = %sw.bb34
  %38 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8315
  %is_614343 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %38, i32 0, i32 50, !dbg !8316
  %bf.load44 = load i16, i16* %is_614343, align 8, !dbg !8316
  %bf.lshr45 = lshr i16 %bf.load44, 3, !dbg !8316
  %bf.clear46 = and i16 %bf.lshr45, 1, !dbg !8316
  %bf.cast47 = zext i16 %bf.clear46 to i32, !dbg !8316
  %tobool48 = icmp ne i32 %bf.cast47, 0, !dbg !8315
  br i1 %tobool48, label %if.then49, label %if.else51, !dbg !8317

if.then49:                                        ; preds = %lor.lhs.false, %sw.bb34
  %39 = load i32*, i32** %data.addr, align 8, !dbg !8318
  %arrayidx50 = getelementptr i32, i32* %39, i64 2, !dbg !8318
  store i32 0, i32* %arrayidx50, align 4, !dbg !8319
  br label %if.end53, !dbg !8318

if.else51:                                        ; preds = %lor.lhs.false
  %40 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !8320
  %ai_speed = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %40, i32 0, i32 9, !dbg !8321
  %41 = load i32, i32* %ai_speed, align 4, !dbg !8321
  %42 = load i32*, i32** %data.addr, align 8, !dbg !8322
  %arrayidx52 = getelementptr i32, i32* %42, i64 2, !dbg !8322
  store i32 %41, i32* %arrayidx52, align 4, !dbg !8323
  br label %if.end53

if.end53:                                         ; preds = %if.else51, %if.then49
  store i32 0, i32* %retval, align 4, !dbg !8324
  br label %return, !dbg !8324

sw.default:                                       ; preds = %if.end
  br label %sw.epilog, !dbg !8325

sw.epilog:                                        ; preds = %sw.default
  store i32 -22, i32* %retval, align 4, !dbg !8326
  br label %return, !dbg !8326

return:                                           ; preds = %sw.epilog, %if.end53, %if.end33, %if.then22, %if.then4, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !8327
  ret i32 %43, !dbg !8327
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_ai_cmdtest(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_cmd* %cmd) #2 !dbg !8328 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %board = alloca %struct.ni_board_struct*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %err = alloca i32, align 4
  %sources = alloca i32, align 4
  %max_count = alloca i32, align 4
  %tmp = alloca i32, align 4
  %tmp166 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !8329, metadata !DIExpression()), !dbg !8330
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !8331, metadata !DIExpression()), !dbg !8332
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !8333, metadata !DIExpression()), !dbg !8334
  call void @llvm.dbg.declare(metadata %struct.ni_board_struct** %board, metadata !8335, metadata !DIExpression()), !dbg !8336
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8337
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !8338
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !8338
  %2 = bitcast i8* %1 to %struct.ni_board_struct*, !dbg !8337
  store %struct.ni_board_struct* %2, %struct.ni_board_struct** %board, align 8, !dbg !8336
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !8339, metadata !DIExpression()), !dbg !8340
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8341
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !8342
  %4 = load i8*, i8** %private, align 8, !dbg !8342
  %5 = bitcast i8* %4 to %struct.ni_private*, !dbg !8341
  store %struct.ni_private* %5, %struct.ni_private** %devpriv, align 8, !dbg !8340
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8343, metadata !DIExpression()), !dbg !8344
  store i32 0, i32* %err, align 4, !dbg !8344
  call void @llvm.dbg.declare(metadata i32* %sources, metadata !8345, metadata !DIExpression()), !dbg !8346
  %6 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8347
  %start_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %6, i32 0, i32 2, !dbg !8348
  %call = call i32 @comedi_check_trigger_src(i32* %start_src, i32 194) #9, !dbg !8349
  %7 = load i32, i32* %err, align 4, !dbg !8350
  %or = or i32 %7, %call, !dbg !8350
  store i32 %or, i32* %err, align 4, !dbg !8350
  %8 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8351
  %scan_begin_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %8, i32 0, i32 4, !dbg !8352
  %call1 = call i32 @comedi_check_trigger_src(i32* %scan_begin_src, i32 80) #9, !dbg !8353
  %9 = load i32, i32* %err, align 4, !dbg !8354
  %or2 = or i32 %9, %call1, !dbg !8354
  store i32 %or2, i32* %err, align 4, !dbg !8354
  store i32 80, i32* %sources, align 4, !dbg !8355
  %10 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8356
  %is_611x = getelementptr inbounds %struct.ni_private, %struct.ni_private* %10, i32 0, i32 50, !dbg !8358
  %bf.load = load i16, i16* %is_611x, align 8, !dbg !8358
  %bf.lshr = lshr i16 %bf.load, 2, !dbg !8358
  %bf.clear = and i16 %bf.lshr, 1, !dbg !8358
  %bf.cast = zext i16 %bf.clear to i32, !dbg !8358
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !8356
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8359

lor.lhs.false:                                    ; preds = %entry
  %11 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8360
  %is_6143 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %11, i32 0, i32 50, !dbg !8361
  %bf.load3 = load i16, i16* %is_6143, align 8, !dbg !8361
  %bf.lshr4 = lshr i16 %bf.load3, 3, !dbg !8361
  %bf.clear5 = and i16 %bf.lshr4, 1, !dbg !8361
  %bf.cast6 = zext i16 %bf.clear5 to i32, !dbg !8361
  %tobool7 = icmp ne i32 %bf.cast6, 0, !dbg !8360
  br i1 %tobool7, label %if.then, label %if.end, !dbg !8362

if.then:                                          ; preds = %lor.lhs.false, %entry
  %12 = load i32, i32* %sources, align 4, !dbg !8363
  %or8 = or i32 %12, 2, !dbg !8363
  store i32 %or8, i32* %sources, align 4, !dbg !8363
  br label %if.end, !dbg !8364

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %13 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8365
  %convert_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %13, i32 0, i32 6, !dbg !8366
  %14 = load i32, i32* %sources, align 4, !dbg !8367
  %call9 = call i32 @comedi_check_trigger_src(i32* %convert_src, i32 %14) #9, !dbg !8368
  %15 = load i32, i32* %err, align 4, !dbg !8369
  %or10 = or i32 %15, %call9, !dbg !8369
  store i32 %or10, i32* %err, align 4, !dbg !8369
  %16 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8370
  %scan_end_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %16, i32 0, i32 8, !dbg !8371
  %call11 = call i32 @comedi_check_trigger_src(i32* %scan_end_src, i32 32) #9, !dbg !8372
  %17 = load i32, i32* %err, align 4, !dbg !8373
  %or12 = or i32 %17, %call11, !dbg !8373
  store i32 %or12, i32* %err, align 4, !dbg !8373
  %18 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8374
  %stop_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %18, i32 0, i32 10, !dbg !8375
  %call13 = call i32 @comedi_check_trigger_src(i32* %stop_src, i32 33) #9, !dbg !8376
  %19 = load i32, i32* %err, align 4, !dbg !8377
  %or14 = or i32 %19, %call13, !dbg !8377
  store i32 %or14, i32* %err, align 4, !dbg !8377
  %20 = load i32, i32* %err, align 4, !dbg !8378
  %tobool15 = icmp ne i32 %20, 0, !dbg !8378
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !8380

if.then16:                                        ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !8381
  br label %return, !dbg !8381

if.end17:                                         ; preds = %if.end
  %21 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8382
  %start_src18 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %21, i32 0, i32 2, !dbg !8383
  %22 = load i32, i32* %start_src18, align 8, !dbg !8383
  %call19 = call i32 @comedi_check_trigger_is_unique(i32 %22) #9, !dbg !8384
  %23 = load i32, i32* %err, align 4, !dbg !8385
  %or20 = or i32 %23, %call19, !dbg !8385
  store i32 %or20, i32* %err, align 4, !dbg !8385
  %24 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8386
  %scan_begin_src21 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %24, i32 0, i32 4, !dbg !8387
  %25 = load i32, i32* %scan_begin_src21, align 8, !dbg !8387
  %call22 = call i32 @comedi_check_trigger_is_unique(i32 %25) #9, !dbg !8388
  %26 = load i32, i32* %err, align 4, !dbg !8389
  %or23 = or i32 %26, %call22, !dbg !8389
  store i32 %or23, i32* %err, align 4, !dbg !8389
  %27 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8390
  %convert_src24 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %27, i32 0, i32 6, !dbg !8391
  %28 = load i32, i32* %convert_src24, align 8, !dbg !8391
  %call25 = call i32 @comedi_check_trigger_is_unique(i32 %28) #9, !dbg !8392
  %29 = load i32, i32* %err, align 4, !dbg !8393
  %or26 = or i32 %29, %call25, !dbg !8393
  store i32 %or26, i32* %err, align 4, !dbg !8393
  %30 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8394
  %stop_src27 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %30, i32 0, i32 10, !dbg !8395
  %31 = load i32, i32* %stop_src27, align 8, !dbg !8395
  %call28 = call i32 @comedi_check_trigger_is_unique(i32 %31) #9, !dbg !8396
  %32 = load i32, i32* %err, align 4, !dbg !8397
  %or29 = or i32 %32, %call28, !dbg !8397
  store i32 %or29, i32* %err, align 4, !dbg !8397
  %33 = load i32, i32* %err, align 4, !dbg !8398
  %tobool30 = icmp ne i32 %33, 0, !dbg !8398
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !8400

if.then31:                                        ; preds = %if.end17
  store i32 2, i32* %retval, align 4, !dbg !8401
  br label %return, !dbg !8401

if.end32:                                         ; preds = %if.end17
  %34 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8402
  %start_src33 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %34, i32 0, i32 2, !dbg !8403
  %35 = load i32, i32* %start_src33, align 8, !dbg !8403
  switch i32 %35, label %sw.epilog [
    i32 2, label %sw.bb
    i32 128, label %sw.bb
    i32 64, label %sw.bb36
  ], !dbg !8404

sw.bb:                                            ; preds = %if.end32, %if.end32
  %36 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8405
  %start_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %36, i32 0, i32 3, !dbg !8407
  %call34 = call i32 @comedi_check_trigger_arg_is(i32* %start_arg, i32 0) #9, !dbg !8408
  %37 = load i32, i32* %err, align 4, !dbg !8409
  %or35 = or i32 %37, %call34, !dbg !8409
  store i32 %or35, i32* %err, align 4, !dbg !8409
  br label %sw.epilog, !dbg !8410

sw.bb36:                                          ; preds = %if.end32
  %38 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8411
  %start_arg37 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %38, i32 0, i32 3, !dbg !8411
  %39 = load i32, i32* %start_arg37, align 4, !dbg !8411
  %and = and i32 %39, 65535, !dbg !8411
  %40 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8412
  %routing_tables = getelementptr inbounds %struct.ni_private, %struct.ni_private* %40, i32 0, i32 51, !dbg !8413
  %call38 = call i32 @ni_check_trigger_arg_roffs(i32 %and, i32 32929, %struct.ni_route_tables* %routing_tables, i32 1) #9, !dbg !8414
  %41 = load i32, i32* %err, align 4, !dbg !8415
  %or39 = or i32 %41, %call38, !dbg !8415
  store i32 %or39, i32* %err, align 4, !dbg !8415
  br label %sw.epilog, !dbg !8416

sw.epilog:                                        ; preds = %if.end32, %sw.bb36, %sw.bb
  %42 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8417
  %scan_begin_src40 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %42, i32 0, i32 4, !dbg !8419
  %43 = load i32, i32* %scan_begin_src40, align 8, !dbg !8419
  %cmp = icmp eq i32 %43, 16, !dbg !8420
  br i1 %cmp, label %if.then41, label %if.else, !dbg !8421

if.then41:                                        ; preds = %sw.epilog
  %44 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8422
  %scan_begin_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %44, i32 0, i32 5, !dbg !8424
  %45 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8425
  %46 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8426
  %chanlist_len = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %46, i32 0, i32 13, !dbg !8427
  %47 = load i32, i32* %chanlist_len, align 8, !dbg !8427
  %call42 = call i32 @ni_min_ai_scan_period_ns(%struct.comedi_device* %45, i32 %47) #9, !dbg !8428
  %call43 = call i32 @comedi_check_trigger_arg_min(i32* %scan_begin_arg, i32 %call42) #9, !dbg !8429
  %48 = load i32, i32* %err, align 4, !dbg !8430
  %or44 = or i32 %48, %call43, !dbg !8430
  store i32 %or44, i32* %err, align 4, !dbg !8430
  %49 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8431
  %scan_begin_arg45 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %49, i32 0, i32 5, !dbg !8432
  %50 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8433
  %clock_ns = getelementptr inbounds %struct.ni_private, %struct.ni_private* %50, i32 0, i32 36, !dbg !8434
  %51 = load i32, i32* %clock_ns, align 4, !dbg !8434
  %mul = mul i32 %51, 16777215, !dbg !8435
  %call46 = call i32 @comedi_check_trigger_arg_max(i32* %scan_begin_arg45, i32 %mul) #9, !dbg !8436
  %52 = load i32, i32* %err, align 4, !dbg !8437
  %or47 = or i32 %52, %call46, !dbg !8437
  store i32 %or47, i32* %err, align 4, !dbg !8437
  br label %if.end61, !dbg !8438

if.else:                                          ; preds = %sw.epilog
  %53 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8439
  %scan_begin_src48 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %53, i32 0, i32 4, !dbg !8441
  %54 = load i32, i32* %scan_begin_src48, align 8, !dbg !8441
  %cmp49 = icmp eq i32 %54, 64, !dbg !8442
  br i1 %cmp49, label %if.then50, label %if.else56, !dbg !8443

if.then50:                                        ; preds = %if.else
  %55 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8444
  %scan_begin_arg51 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %55, i32 0, i32 5, !dbg !8444
  %56 = load i32, i32* %scan_begin_arg51, align 4, !dbg !8444
  %and52 = and i32 %56, 65535, !dbg !8444
  %57 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8446
  %routing_tables53 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %57, i32 0, i32 51, !dbg !8447
  %call54 = call i32 @ni_check_trigger_arg_roffs(i32 %and52, i32 32927, %struct.ni_route_tables* %routing_tables53, i32 1) #9, !dbg !8448
  %58 = load i32, i32* %err, align 4, !dbg !8449
  %or55 = or i32 %58, %call54, !dbg !8449
  store i32 %or55, i32* %err, align 4, !dbg !8449
  br label %if.end60, !dbg !8450

if.else56:                                        ; preds = %if.else
  %59 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8451
  %scan_begin_arg57 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %59, i32 0, i32 5, !dbg !8453
  %call58 = call i32 @comedi_check_trigger_arg_is(i32* %scan_begin_arg57, i32 0) #9, !dbg !8454
  %60 = load i32, i32* %err, align 4, !dbg !8455
  %or59 = or i32 %60, %call58, !dbg !8455
  store i32 %or59, i32* %err, align 4, !dbg !8455
  br label %if.end60

if.end60:                                         ; preds = %if.else56, %if.then50
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then41
  %61 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8456
  %convert_src62 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %61, i32 0, i32 6, !dbg !8458
  %62 = load i32, i32* %convert_src62, align 8, !dbg !8458
  %cmp63 = icmp eq i32 %62, 16, !dbg !8459
  br i1 %cmp63, label %if.then64, label %if.else91, !dbg !8460

if.then64:                                        ; preds = %if.end61
  %63 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8461
  %is_611x65 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %63, i32 0, i32 50, !dbg !8464
  %bf.load66 = load i16, i16* %is_611x65, align 8, !dbg !8464
  %bf.lshr67 = lshr i16 %bf.load66, 2, !dbg !8464
  %bf.clear68 = and i16 %bf.lshr67, 1, !dbg !8464
  %bf.cast69 = zext i16 %bf.clear68 to i32, !dbg !8464
  %tobool70 = icmp ne i32 %bf.cast69, 0, !dbg !8461
  br i1 %tobool70, label %if.then78, label %lor.lhs.false71, !dbg !8465

lor.lhs.false71:                                  ; preds = %if.then64
  %64 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8466
  %is_614372 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %64, i32 0, i32 50, !dbg !8467
  %bf.load73 = load i16, i16* %is_614372, align 8, !dbg !8467
  %bf.lshr74 = lshr i16 %bf.load73, 3, !dbg !8467
  %bf.clear75 = and i16 %bf.lshr74, 1, !dbg !8467
  %bf.cast76 = zext i16 %bf.clear75 to i32, !dbg !8467
  %tobool77 = icmp ne i32 %bf.cast76, 0, !dbg !8466
  br i1 %tobool77, label %if.then78, label %if.else81, !dbg !8468

if.then78:                                        ; preds = %lor.lhs.false71, %if.then64
  %65 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8469
  %convert_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %65, i32 0, i32 7, !dbg !8471
  %call79 = call i32 @comedi_check_trigger_arg_is(i32* %convert_arg, i32 0) #9, !dbg !8472
  %66 = load i32, i32* %err, align 4, !dbg !8473
  %or80 = or i32 %66, %call79, !dbg !8473
  store i32 %or80, i32* %err, align 4, !dbg !8473
  br label %if.end90, !dbg !8474

if.else81:                                        ; preds = %lor.lhs.false71
  %67 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8475
  %convert_arg82 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %67, i32 0, i32 7, !dbg !8477
  %68 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !8478
  %ai_speed = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %68, i32 0, i32 9, !dbg !8479
  %69 = load i32, i32* %ai_speed, align 4, !dbg !8479
  %call83 = call i32 @comedi_check_trigger_arg_min(i32* %convert_arg82, i32 %69) #9, !dbg !8480
  %70 = load i32, i32* %err, align 4, !dbg !8481
  %or84 = or i32 %70, %call83, !dbg !8481
  store i32 %or84, i32* %err, align 4, !dbg !8481
  %71 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8482
  %convert_arg85 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %71, i32 0, i32 7, !dbg !8483
  %72 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8484
  %clock_ns86 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %72, i32 0, i32 36, !dbg !8485
  %73 = load i32, i32* %clock_ns86, align 4, !dbg !8485
  %mul87 = mul i32 %73, 65535, !dbg !8486
  %call88 = call i32 @comedi_check_trigger_arg_max(i32* %convert_arg85, i32 %mul87) #9, !dbg !8487
  %74 = load i32, i32* %err, align 4, !dbg !8488
  %or89 = or i32 %74, %call88, !dbg !8488
  store i32 %or89, i32* %err, align 4, !dbg !8488
  br label %if.end90

if.end90:                                         ; preds = %if.else81, %if.then78
  br label %if.end109, !dbg !8489

if.else91:                                        ; preds = %if.end61
  %75 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8490
  %convert_src92 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %75, i32 0, i32 6, !dbg !8492
  %76 = load i32, i32* %convert_src92, align 8, !dbg !8492
  %cmp93 = icmp eq i32 %76, 64, !dbg !8493
  br i1 %cmp93, label %if.then94, label %if.else100, !dbg !8494

if.then94:                                        ; preds = %if.else91
  %77 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8495
  %convert_arg95 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %77, i32 0, i32 7, !dbg !8495
  %78 = load i32, i32* %convert_arg95, align 4, !dbg !8495
  %and96 = and i32 %78, 65535, !dbg !8495
  %79 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8497
  %routing_tables97 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %79, i32 0, i32 51, !dbg !8498
  %call98 = call i32 @ni_check_trigger_arg_roffs(i32 %and96, i32 32931, %struct.ni_route_tables* %routing_tables97, i32 1) #9, !dbg !8499
  %80 = load i32, i32* %err, align 4, !dbg !8500
  %or99 = or i32 %80, %call98, !dbg !8500
  store i32 %or99, i32* %err, align 4, !dbg !8500
  br label %if.end108, !dbg !8501

if.else100:                                       ; preds = %if.else91
  %81 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8502
  %convert_src101 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %81, i32 0, i32 6, !dbg !8504
  %82 = load i32, i32* %convert_src101, align 8, !dbg !8504
  %cmp102 = icmp eq i32 %82, 2, !dbg !8505
  br i1 %cmp102, label %if.then103, label %if.end107, !dbg !8506

if.then103:                                       ; preds = %if.else100
  %83 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8507
  %convert_arg104 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %83, i32 0, i32 7, !dbg !8509
  %call105 = call i32 @comedi_check_trigger_arg_is(i32* %convert_arg104, i32 0) #9, !dbg !8510
  %84 = load i32, i32* %err, align 4, !dbg !8511
  %or106 = or i32 %84, %call105, !dbg !8511
  store i32 %or106, i32* %err, align 4, !dbg !8511
  br label %if.end107, !dbg !8512

if.end107:                                        ; preds = %if.then103, %if.else100
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.then94
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %if.end90
  %85 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8513
  %scan_end_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %85, i32 0, i32 9, !dbg !8514
  %86 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8515
  %chanlist_len110 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %86, i32 0, i32 13, !dbg !8516
  %87 = load i32, i32* %chanlist_len110, align 8, !dbg !8516
  %call111 = call i32 @comedi_check_trigger_arg_is(i32* %scan_end_arg, i32 %87) #9, !dbg !8517
  %88 = load i32, i32* %err, align 4, !dbg !8518
  %or112 = or i32 %88, %call111, !dbg !8518
  store i32 %or112, i32* %err, align 4, !dbg !8518
  %89 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8519
  %stop_src113 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %89, i32 0, i32 10, !dbg !8521
  %90 = load i32, i32* %stop_src113, align 8, !dbg !8521
  %cmp114 = icmp eq i32 %90, 32, !dbg !8522
  br i1 %cmp114, label %if.then115, label %if.else129, !dbg !8523

if.then115:                                       ; preds = %if.end109
  call void @llvm.dbg.declare(metadata i32* %max_count, metadata !8524, metadata !DIExpression()), !dbg !8526
  store i32 16777216, i32* %max_count, align 4, !dbg !8526
  %91 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8527
  %is_611x116 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %91, i32 0, i32 50, !dbg !8529
  %bf.load117 = load i16, i16* %is_611x116, align 8, !dbg !8529
  %bf.lshr118 = lshr i16 %bf.load117, 2, !dbg !8529
  %bf.clear119 = and i16 %bf.lshr118, 1, !dbg !8529
  %bf.cast120 = zext i16 %bf.clear119 to i32, !dbg !8529
  %tobool121 = icmp ne i32 %bf.cast120, 0, !dbg !8527
  br i1 %tobool121, label %if.then122, label %if.end123, !dbg !8530

if.then122:                                       ; preds = %if.then115
  %92 = load i32, i32* %max_count, align 4, !dbg !8531
  %sub = sub i32 %92, 3, !dbg !8531
  store i32 %sub, i32* %max_count, align 4, !dbg !8531
  br label %if.end123, !dbg !8532

if.end123:                                        ; preds = %if.then122, %if.then115
  %93 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8533
  %stop_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %93, i32 0, i32 11, !dbg !8534
  %94 = load i32, i32* %max_count, align 4, !dbg !8535
  %call124 = call i32 @comedi_check_trigger_arg_max(i32* %stop_arg, i32 %94) #9, !dbg !8536
  %95 = load i32, i32* %err, align 4, !dbg !8537
  %or125 = or i32 %95, %call124, !dbg !8537
  store i32 %or125, i32* %err, align 4, !dbg !8537
  %96 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8538
  %stop_arg126 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %96, i32 0, i32 11, !dbg !8539
  %call127 = call i32 @comedi_check_trigger_arg_min(i32* %stop_arg126, i32 1) #9, !dbg !8540
  %97 = load i32, i32* %err, align 4, !dbg !8541
  %or128 = or i32 %97, %call127, !dbg !8541
  store i32 %or128, i32* %err, align 4, !dbg !8541
  br label %if.end133, !dbg !8542

if.else129:                                       ; preds = %if.end109
  %98 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8543
  %stop_arg130 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %98, i32 0, i32 11, !dbg !8545
  %call131 = call i32 @comedi_check_trigger_arg_is(i32* %stop_arg130, i32 0) #9, !dbg !8546
  %99 = load i32, i32* %err, align 4, !dbg !8547
  %or132 = or i32 %99, %call131, !dbg !8547
  store i32 %or132, i32* %err, align 4, !dbg !8547
  br label %if.end133

if.end133:                                        ; preds = %if.else129, %if.end123
  %100 = load i32, i32* %err, align 4, !dbg !8548
  %tobool134 = icmp ne i32 %100, 0, !dbg !8548
  br i1 %tobool134, label %if.then135, label %if.end136, !dbg !8550

if.then135:                                       ; preds = %if.end133
  store i32 3, i32* %retval, align 4, !dbg !8551
  br label %return, !dbg !8551

if.end136:                                        ; preds = %if.end133
  %101 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8552
  %scan_begin_src137 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %101, i32 0, i32 4, !dbg !8554
  %102 = load i32, i32* %scan_begin_src137, align 8, !dbg !8554
  %cmp138 = icmp eq i32 %102, 16, !dbg !8555
  br i1 %cmp138, label %if.then139, label %if.end149, !dbg !8556

if.then139:                                       ; preds = %if.end136
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !8557, metadata !DIExpression()), !dbg !8559
  %103 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8560
  %scan_begin_arg140 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %103, i32 0, i32 5, !dbg !8561
  %104 = load i32, i32* %scan_begin_arg140, align 4, !dbg !8561
  store i32 %104, i32* %tmp, align 4, !dbg !8559
  %105 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8562
  %106 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8563
  %107 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8564
  %scan_begin_arg141 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %107, i32 0, i32 5, !dbg !8565
  %108 = load i32, i32* %scan_begin_arg141, align 4, !dbg !8565
  %109 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8566
  %flags = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %109, i32 0, i32 1, !dbg !8567
  %110 = load i32, i32* %flags, align 4, !dbg !8567
  %call142 = call i32 @ni_ns_to_timer(%struct.comedi_device* %106, i32 %108, i32 %110) #9, !dbg !8568
  %call143 = call i32 @ni_timer_to_ns(%struct.comedi_device* %105, i32 %call142) #9, !dbg !8569
  %111 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8570
  %scan_begin_arg144 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %111, i32 0, i32 5, !dbg !8571
  store i32 %call143, i32* %scan_begin_arg144, align 4, !dbg !8572
  %112 = load i32, i32* %tmp, align 4, !dbg !8573
  %113 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8575
  %scan_begin_arg145 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %113, i32 0, i32 5, !dbg !8576
  %114 = load i32, i32* %scan_begin_arg145, align 4, !dbg !8576
  %cmp146 = icmp ne i32 %112, %114, !dbg !8577
  br i1 %cmp146, label %if.then147, label %if.end148, !dbg !8578

if.then147:                                       ; preds = %if.then139
  %115 = load i32, i32* %err, align 4, !dbg !8579
  %inc = add i32 %115, 1, !dbg !8579
  store i32 %inc, i32* %err, align 4, !dbg !8579
  br label %if.end148, !dbg !8580

if.end148:                                        ; preds = %if.then147, %if.then139
  br label %if.end149, !dbg !8581

if.end149:                                        ; preds = %if.end148, %if.end136
  %116 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8582
  %convert_src150 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %116, i32 0, i32 6, !dbg !8584
  %117 = load i32, i32* %convert_src150, align 8, !dbg !8584
  %cmp151 = icmp eq i32 %117, 16, !dbg !8585
  br i1 %cmp151, label %if.then152, label %if.end194, !dbg !8586

if.then152:                                       ; preds = %if.end149
  %118 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8587
  %is_611x153 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %118, i32 0, i32 50, !dbg !8590
  %bf.load154 = load i16, i16* %is_611x153, align 8, !dbg !8590
  %bf.lshr155 = lshr i16 %bf.load154, 2, !dbg !8590
  %bf.clear156 = and i16 %bf.lshr155, 1, !dbg !8590
  %bf.cast157 = zext i16 %bf.clear156 to i32, !dbg !8590
  %tobool158 = icmp ne i32 %bf.cast157, 0, !dbg !8587
  br i1 %tobool158, label %if.end193, label %land.lhs.true, !dbg !8591

land.lhs.true:                                    ; preds = %if.then152
  %119 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8592
  %is_6143159 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %119, i32 0, i32 50, !dbg !8593
  %bf.load160 = load i16, i16* %is_6143159, align 8, !dbg !8593
  %bf.lshr161 = lshr i16 %bf.load160, 3, !dbg !8593
  %bf.clear162 = and i16 %bf.lshr161, 1, !dbg !8593
  %bf.cast163 = zext i16 %bf.clear162 to i32, !dbg !8593
  %tobool164 = icmp ne i32 %bf.cast163, 0, !dbg !8592
  br i1 %tobool164, label %if.end193, label %if.then165, !dbg !8594

if.then165:                                       ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %tmp166, metadata !8595, metadata !DIExpression()), !dbg !8597
  %120 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8598
  %convert_arg167 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %120, i32 0, i32 7, !dbg !8599
  %121 = load i32, i32* %convert_arg167, align 4, !dbg !8599
  store i32 %121, i32* %tmp166, align 4, !dbg !8597
  %122 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8600
  %123 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8601
  %124 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8602
  %convert_arg168 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %124, i32 0, i32 7, !dbg !8603
  %125 = load i32, i32* %convert_arg168, align 4, !dbg !8603
  %126 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8604
  %flags169 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %126, i32 0, i32 1, !dbg !8605
  %127 = load i32, i32* %flags169, align 4, !dbg !8605
  %call170 = call i32 @ni_ns_to_timer(%struct.comedi_device* %123, i32 %125, i32 %127) #9, !dbg !8606
  %call171 = call i32 @ni_timer_to_ns(%struct.comedi_device* %122, i32 %call170) #9, !dbg !8607
  %128 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8608
  %convert_arg172 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %128, i32 0, i32 7, !dbg !8609
  store i32 %call171, i32* %convert_arg172, align 4, !dbg !8610
  %129 = load i32, i32* %tmp166, align 4, !dbg !8611
  %130 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8613
  %convert_arg173 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %130, i32 0, i32 7, !dbg !8614
  %131 = load i32, i32* %convert_arg173, align 4, !dbg !8614
  %cmp174 = icmp ne i32 %129, %131, !dbg !8615
  br i1 %cmp174, label %if.then175, label %if.end177, !dbg !8616

if.then175:                                       ; preds = %if.then165
  %132 = load i32, i32* %err, align 4, !dbg !8617
  %inc176 = add i32 %132, 1, !dbg !8617
  store i32 %inc176, i32* %err, align 4, !dbg !8617
  br label %if.end177, !dbg !8618

if.end177:                                        ; preds = %if.then175, %if.then165
  %133 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8619
  %scan_begin_src178 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %133, i32 0, i32 4, !dbg !8621
  %134 = load i32, i32* %scan_begin_src178, align 8, !dbg !8621
  %cmp179 = icmp eq i32 %134, 16, !dbg !8622
  br i1 %cmp179, label %land.lhs.true180, label %if.end192, !dbg !8623

land.lhs.true180:                                 ; preds = %if.end177
  %135 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8624
  %scan_begin_arg181 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %135, i32 0, i32 5, !dbg !8625
  %136 = load i32, i32* %scan_begin_arg181, align 4, !dbg !8625
  %137 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8626
  %convert_arg182 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %137, i32 0, i32 7, !dbg !8627
  %138 = load i32, i32* %convert_arg182, align 4, !dbg !8627
  %139 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8628
  %scan_end_arg183 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %139, i32 0, i32 9, !dbg !8629
  %140 = load i32, i32* %scan_end_arg183, align 4, !dbg !8629
  %mul184 = mul i32 %138, %140, !dbg !8630
  %cmp185 = icmp ult i32 %136, %mul184, !dbg !8631
  br i1 %cmp185, label %if.then186, label %if.end192, !dbg !8632

if.then186:                                       ; preds = %land.lhs.true180
  %141 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8633
  %convert_arg187 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %141, i32 0, i32 7, !dbg !8635
  %142 = load i32, i32* %convert_arg187, align 4, !dbg !8635
  %143 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8636
  %scan_end_arg188 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %143, i32 0, i32 9, !dbg !8637
  %144 = load i32, i32* %scan_end_arg188, align 4, !dbg !8637
  %mul189 = mul i32 %142, %144, !dbg !8638
  %145 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !8639
  %scan_begin_arg190 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %145, i32 0, i32 5, !dbg !8640
  store i32 %mul189, i32* %scan_begin_arg190, align 4, !dbg !8641
  %146 = load i32, i32* %err, align 4, !dbg !8642
  %inc191 = add i32 %146, 1, !dbg !8642
  store i32 %inc191, i32* %err, align 4, !dbg !8642
  br label %if.end192, !dbg !8643

if.end192:                                        ; preds = %if.then186, %land.lhs.true180, %if.end177
  br label %if.end193, !dbg !8644

if.end193:                                        ; preds = %if.end192, %land.lhs.true, %if.then152
  br label %if.end194, !dbg !8645

if.end194:                                        ; preds = %if.end193, %if.end149
  %147 = load i32, i32* %err, align 4, !dbg !8646
  %tobool195 = icmp ne i32 %147, 0, !dbg !8646
  br i1 %tobool195, label %if.then196, label %if.end197, !dbg !8648

if.then196:                                       ; preds = %if.end194
  store i32 4, i32* %retval, align 4, !dbg !8649
  br label %return, !dbg !8649

if.end197:                                        ; preds = %if.end194
  store i32 0, i32* %retval, align 4, !dbg !8650
  br label %return, !dbg !8650

return:                                           ; preds = %if.end197, %if.then196, %if.then135, %if.then31, %if.then16
  %148 = load i32, i32* %retval, align 4, !dbg !8651
  ret i32 %148, !dbg !8651
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_ai_cmd(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #2 !dbg !8652 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %cmd = alloca %struct.comedi_cmd*, align 8
  %timer = alloca i32, align 4
  %mode1 = alloca i32, align 4
  %mode2 = alloca i32, align 4
  %start_stop_select = alloca i32, align 4
  %stop_count = alloca i32, align 4
  %interrupt_a_enable = alloca i32, align 4
  %ai_trig = alloca i32, align 4
  %retval215 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !8653, metadata !DIExpression()), !dbg !8654
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !8655, metadata !DIExpression()), !dbg !8656
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !8657, metadata !DIExpression()), !dbg !8658
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8659
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !8660
  %1 = load i8*, i8** %private, align 8, !dbg !8660
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !8659
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !8658
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd, metadata !8661, metadata !DIExpression()), !dbg !8664
  %3 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !8665
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %3, i32 0, i32 7, !dbg !8666
  %4 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !8666
  %cmd1 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %4, i32 0, i32 17, !dbg !8667
  store %struct.comedi_cmd* %cmd1, %struct.comedi_cmd** %cmd, align 8, !dbg !8664
  call void @llvm.dbg.declare(metadata i32* %timer, metadata !8668, metadata !DIExpression()), !dbg !8669
  call void @llvm.dbg.declare(metadata i32* %mode1, metadata !8670, metadata !DIExpression()), !dbg !8671
  store i32 0, i32* %mode1, align 4, !dbg !8671
  call void @llvm.dbg.declare(metadata i32* %mode2, metadata !8672, metadata !DIExpression()), !dbg !8673
  store i32 0, i32* %mode2, align 4, !dbg !8673
  call void @llvm.dbg.declare(metadata i32* %start_stop_select, metadata !8674, metadata !DIExpression()), !dbg !8675
  store i32 0, i32* %start_stop_select, align 4, !dbg !8675
  call void @llvm.dbg.declare(metadata i32* %stop_count, metadata !8676, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.declare(metadata i32* %interrupt_a_enable, metadata !8678, metadata !DIExpression()), !dbg !8679
  store i32 0, i32* %interrupt_a_enable, align 4, !dbg !8679
  call void @llvm.dbg.declare(metadata i32* %ai_trig, metadata !8680, metadata !DIExpression()), !dbg !8681
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8682
  %irq = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %5, i32 0, i32 20, !dbg !8684
  %6 = load i32, i32* %irq, align 8, !dbg !8684
  %cmp = icmp eq i32 %6, 0, !dbg !8685
  br i1 %cmp, label %if.then, label %if.end, !dbg !8686

if.then:                                          ; preds = %entry
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8687
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %7, i32 0, i32 4, !dbg !8687
  %8 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !8687
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %8, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.95, i64 0, i64 0)) #11, !dbg !8687
  store i32 -5, i32* %retval, align 4, !dbg !8689
  br label %return, !dbg !8689

if.end:                                           ; preds = %entry
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8690
  call void @ni_clear_ai_fifo(%struct.comedi_device* %9) #9, !dbg !8691
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8692
  %11 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !8693
  %12 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8694
  %chanlist_len = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %12, i32 0, i32 13, !dbg !8695
  %13 = load i32, i32* %chanlist_len, align 8, !dbg !8695
  %14 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8696
  %chanlist = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %14, i32 0, i32 12, !dbg !8697
  %15 = load i32*, i32** %chanlist, align 8, !dbg !8697
  call void @ni_load_channelgain_list(%struct.comedi_device* %10, %struct.comedi_subdevice* %11, i32 %13, i32* %15) #9, !dbg !8698
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8699
  call void @ni_stc_writew(%struct.comedi_device* %16, i32 16, i32 72) #9, !dbg !8700
  %17 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8701
  %an_trig_etc_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %17, i32 0, i32 20, !dbg !8702
  %18 = load i16, i16* %an_trig_etc_reg, align 8, !dbg !8703
  %conv = zext i16 %18 to i64, !dbg !8703
  %and = and i64 %conv, -9, !dbg !8703
  %conv2 = trunc i64 %and to i16, !dbg !8703
  store i16 %conv2, i16* %an_trig_etc_reg, align 8, !dbg !8703
  %19 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8704
  %20 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8705
  %an_trig_etc_reg3 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %20, i32 0, i32 20, !dbg !8706
  %21 = load i16, i16* %an_trig_etc_reg3, align 8, !dbg !8706
  %conv4 = zext i16 %21 to i32, !dbg !8705
  call void @ni_stc_writew(%struct.comedi_device* %19, i32 %conv4, i32 61) #9, !dbg !8707
  store i32 64, i32* %ai_trig, align 4, !dbg !8708
  %22 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8709
  %start_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %22, i32 0, i32 2, !dbg !8710
  %23 = load i32, i32* %start_src, align 8, !dbg !8710
  switch i32 %23, label %sw.epilog [
    i32 128, label %sw.bb
    i32 2, label %sw.bb
    i32 64, label %sw.bb7
  ], !dbg !8711

sw.bb:                                            ; preds = %if.end, %if.end
  %24 = load i32, i32* %ai_trig, align 4, !dbg !8712
  %conv5 = zext i32 %24 to i64, !dbg !8712
  %or = or i64 %conv5, 32, !dbg !8712
  %conv6 = trunc i64 %or to i32, !dbg !8712
  store i32 %conv6, i32* %ai_trig, align 4, !dbg !8712
  br label %sw.epilog, !dbg !8714

sw.bb7:                                           ; preds = %if.end
  %25 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8715
  %start_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %25, i32 0, i32 3, !dbg !8715
  %26 = load i32, i32* %start_arg, align 4, !dbg !8715
  %and8 = and i32 %26, 65535, !dbg !8715
  %27 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8715
  %routing_tables = getelementptr inbounds %struct.ni_private, %struct.ni_private* %27, i32 0, i32 51, !dbg !8715
  %call = call signext i8 @ni_get_reg_value_roffs(i32 %and8, i32 32929, %struct.ni_route_tables* %routing_tables, i32 1) #9, !dbg !8715
  %conv9 = sext i8 %call to i32, !dbg !8715
  %and10 = and i32 %conv9, 31, !dbg !8715
  %shl = shl i32 %and10, 0, !dbg !8715
  %28 = load i32, i32* %ai_trig, align 4, !dbg !8716
  %or11 = or i32 %28, %shl, !dbg !8716
  store i32 %or11, i32* %ai_trig, align 4, !dbg !8716
  %29 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8717
  %start_arg12 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %29, i32 0, i32 3, !dbg !8719
  %30 = load i32, i32* %start_arg12, align 4, !dbg !8719
  %and13 = and i32 %30, -2147483648, !dbg !8720
  %tobool = icmp ne i32 %and13, 0, !dbg !8720
  br i1 %tobool, label %if.then14, label %if.end18, !dbg !8721

if.then14:                                        ; preds = %sw.bb7
  %31 = load i32, i32* %ai_trig, align 4, !dbg !8722
  %conv15 = zext i32 %31 to i64, !dbg !8722
  %or16 = or i64 %conv15, 32768, !dbg !8722
  %conv17 = trunc i64 %or16 to i32, !dbg !8722
  store i32 %conv17, i32* %ai_trig, align 4, !dbg !8722
  br label %if.end18, !dbg !8723

if.end18:                                         ; preds = %if.then14, %sw.bb7
  %32 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8724
  %start_arg19 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %32, i32 0, i32 3, !dbg !8726
  %33 = load i32, i32* %start_arg19, align 4, !dbg !8726
  %and20 = and i32 %33, 1073741824, !dbg !8727
  %tobool21 = icmp ne i32 %and20, 0, !dbg !8727
  br i1 %tobool21, label %if.then22, label %if.end26, !dbg !8728

if.then22:                                        ; preds = %if.end18
  %34 = load i32, i32* %ai_trig, align 4, !dbg !8729
  %conv23 = zext i32 %34 to i64, !dbg !8729
  %or24 = or i64 %conv23, 32, !dbg !8729
  %conv25 = trunc i64 %or24 to i32, !dbg !8729
  store i32 %conv25, i32* %ai_trig, align 4, !dbg !8729
  br label %if.end26, !dbg !8730

if.end26:                                         ; preds = %if.then22, %if.end18
  br label %sw.epilog, !dbg !8731

sw.epilog:                                        ; preds = %if.end, %if.end26, %sw.bb
  %35 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8732
  %36 = load i32, i32* %ai_trig, align 4, !dbg !8733
  call void @ni_stc_writew(%struct.comedi_device* %35, i32 %36, i32 63) #9, !dbg !8734
  %37 = load i32, i32* %mode2, align 4, !dbg !8735
  %conv27 = sext i32 %37 to i64, !dbg !8735
  %and28 = and i64 %conv27, -8193, !dbg !8735
  %conv29 = trunc i64 %and28 to i32, !dbg !8735
  store i32 %conv29, i32* %mode2, align 4, !dbg !8735
  %38 = load i32, i32* %mode2, align 4, !dbg !8736
  %conv30 = sext i32 %38 to i64, !dbg !8736
  %and31 = and i64 %conv30, -5, !dbg !8736
  %conv32 = trunc i64 %and31 to i32, !dbg !8736
  store i32 %conv32, i32* %mode2, align 4, !dbg !8736
  %39 = load i32, i32* %mode2, align 4, !dbg !8737
  %conv33 = sext i32 %39 to i64, !dbg !8737
  %and34 = and i64 %conv33, -3, !dbg !8737
  %conv35 = trunc i64 %and34 to i32, !dbg !8737
  store i32 %conv35, i32* %mode2, align 4, !dbg !8737
  %40 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8738
  %41 = load i32, i32* %mode2, align 4, !dbg !8739
  call void @ni_stc_writew(%struct.comedi_device* %40, i32 %41, i32 13) #9, !dbg !8740
  %42 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8741
  %chanlist_len36 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %42, i32 0, i32 13, !dbg !8743
  %43 = load i32, i32* %chanlist_len36, align 8, !dbg !8743
  %cmp37 = icmp eq i32 %43, 1, !dbg !8744
  br i1 %cmp37, label %if.then46, label %lor.lhs.false, !dbg !8745

lor.lhs.false:                                    ; preds = %sw.epilog
  %44 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8746
  %is_611x = getelementptr inbounds %struct.ni_private, %struct.ni_private* %44, i32 0, i32 50, !dbg !8747
  %bf.load = load i16, i16* %is_611x, align 8, !dbg !8747
  %bf.lshr = lshr i16 %bf.load, 2, !dbg !8747
  %bf.clear = and i16 %bf.lshr, 1, !dbg !8747
  %bf.cast = zext i16 %bf.clear to i32, !dbg !8747
  %tobool39 = icmp ne i32 %bf.cast, 0, !dbg !8746
  br i1 %tobool39, label %if.then46, label %lor.lhs.false40, !dbg !8748

lor.lhs.false40:                                  ; preds = %lor.lhs.false
  %45 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8749
  %is_6143 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %45, i32 0, i32 50, !dbg !8750
  %bf.load41 = load i16, i16* %is_6143, align 8, !dbg !8750
  %bf.lshr42 = lshr i16 %bf.load41, 3, !dbg !8750
  %bf.clear43 = and i16 %bf.lshr42, 1, !dbg !8750
  %bf.cast44 = zext i16 %bf.clear43 to i32, !dbg !8750
  %tobool45 = icmp ne i32 %bf.cast44, 0, !dbg !8749
  br i1 %tobool45, label %if.then46, label %if.else, !dbg !8751

if.then46:                                        ; preds = %lor.lhs.false40, %lor.lhs.false, %sw.epilog
  %46 = load i32, i32* %start_stop_select, align 4, !dbg !8752
  %conv47 = sext i32 %46 to i64, !dbg !8752
  %or48 = or i64 %conv47, 28544, !dbg !8752
  %conv49 = trunc i64 %or48 to i32, !dbg !8752
  store i32 %conv49, i32* %start_stop_select, align 4, !dbg !8752
  br label %if.end51, !dbg !8754

if.else:                                          ; preds = %lor.lhs.false40
  %47 = load i32, i32* %start_stop_select, align 4, !dbg !8755
  %or50 = or i32 %47, 2432, !dbg !8755
  store i32 %or50, i32* %start_stop_select, align 4, !dbg !8755
  br label %if.end51

if.end51:                                         ; preds = %if.else, %if.then46
  %48 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8757
  %49 = load i32, i32* %start_stop_select, align 4, !dbg !8758
  call void @ni_stc_writew(%struct.comedi_device* %48, i32 %49, i32 62) #9, !dbg !8759
  %50 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8760
  %ai_cmd2 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %50, i32 0, i32 12, !dbg !8761
  store i16 0, i16* %ai_cmd2, align 4, !dbg !8762
  %51 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8763
  %stop_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %51, i32 0, i32 10, !dbg !8764
  %52 = load i32, i32* %stop_src, align 8, !dbg !8764
  switch i32 %52, label %sw.epilog87 [
    i32 32, label %sw.bb52
    i32 1, label %sw.bb83
  ], !dbg !8765

sw.bb52:                                          ; preds = %if.end51
  %53 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8766
  %stop_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %53, i32 0, i32 11, !dbg !8768
  %54 = load i32, i32* %stop_arg, align 4, !dbg !8768
  %sub = sub i32 %54, 1, !dbg !8769
  store i32 %sub, i32* %stop_count, align 4, !dbg !8770
  %55 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8771
  %is_611x53 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %55, i32 0, i32 50, !dbg !8773
  %bf.load54 = load i16, i16* %is_611x53, align 8, !dbg !8773
  %bf.lshr55 = lshr i16 %bf.load54, 2, !dbg !8773
  %bf.clear56 = and i16 %bf.lshr55, 1, !dbg !8773
  %bf.cast57 = zext i16 %bf.clear56 to i32, !dbg !8773
  %tobool58 = icmp ne i32 %bf.cast57, 0, !dbg !8771
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !8774

if.then59:                                        ; preds = %sw.bb52
  %56 = load i32, i32* %stop_count, align 4, !dbg !8775
  %add = add i32 %56, 3, !dbg !8775
  store i32 %add, i32* %stop_count, align 4, !dbg !8775
  br label %if.end60, !dbg !8777

if.end60:                                         ; preds = %if.then59, %sw.bb52
  %57 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8778
  %58 = load i32, i32* %stop_count, align 4, !dbg !8779
  call void @ni_stc_writel(%struct.comedi_device* %57, i32 %58, i32 18) #9, !dbg !8780
  %59 = load i32, i32* %mode1, align 4, !dbg !8781
  %conv61 = sext i32 %59 to i64, !dbg !8781
  %or62 = or i64 %conv61, 13, !dbg !8781
  %conv63 = trunc i64 %or62 to i32, !dbg !8781
  store i32 %conv63, i32* %mode1, align 4, !dbg !8781
  %60 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8782
  %61 = load i32, i32* %mode1, align 4, !dbg !8783
  call void @ni_stc_writew(%struct.comedi_device* %60, i32 %61, i32 12) #9, !dbg !8784
  %62 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8785
  call void @ni_stc_writew(%struct.comedi_device* %62, i32 32, i32 8) #9, !dbg !8786
  %63 = load i32, i32* %stop_count, align 4, !dbg !8787
  %cmp64 = icmp eq i32 %63, 0, !dbg !8789
  br i1 %cmp64, label %if.then66, label %if.end82, !dbg !8790

if.then66:                                        ; preds = %if.end60
  %64 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8791
  %ai_cmd267 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %64, i32 0, i32 12, !dbg !8793
  %65 = load i16, i16* %ai_cmd267, align 4, !dbg !8794
  %conv68 = zext i16 %65 to i64, !dbg !8794
  %or69 = or i64 %conv68, 16384, !dbg !8794
  %conv70 = trunc i64 %or69 to i16, !dbg !8794
  store i16 %conv70, i16* %ai_cmd267, align 4, !dbg !8794
  %66 = load i32, i32* %interrupt_a_enable, align 4, !dbg !8795
  %conv71 = sext i32 %66 to i64, !dbg !8795
  %or72 = or i64 %conv71, 16, !dbg !8795
  %conv73 = trunc i64 %or72 to i32, !dbg !8795
  store i32 %conv73, i32* %interrupt_a_enable, align 4, !dbg !8795
  %67 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8796
  %chanlist_len74 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %67, i32 0, i32 13, !dbg !8798
  %68 = load i32, i32* %chanlist_len74, align 8, !dbg !8798
  %cmp75 = icmp ugt i32 %68, 1, !dbg !8799
  br i1 %cmp75, label %if.then77, label %if.end81, !dbg !8800

if.then77:                                        ; preds = %if.then66
  %69 = load i32, i32* %start_stop_select, align 4, !dbg !8801
  %conv78 = sext i32 %69 to i64, !dbg !8801
  %or79 = or i64 %conv78, 20480, !dbg !8801
  %conv80 = trunc i64 %or79 to i32, !dbg !8801
  store i32 %conv80, i32* %start_stop_select, align 4, !dbg !8801
  br label %if.end81, !dbg !8802

if.end81:                                         ; preds = %if.then77, %if.then66
  br label %if.end82, !dbg !8803

if.end82:                                         ; preds = %if.end81, %if.end60
  br label %sw.epilog87, !dbg !8804

sw.bb83:                                          ; preds = %if.end51
  %70 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8805
  call void @ni_stc_writel(%struct.comedi_device* %70, i32 0, i32 18) #9, !dbg !8806
  %71 = load i32, i32* %mode1, align 4, !dbg !8807
  %conv84 = sext i32 %71 to i64, !dbg !8807
  %or85 = or i64 %conv84, 14, !dbg !8807
  %conv86 = trunc i64 %or85 to i32, !dbg !8807
  store i32 %conv86, i32* %mode1, align 4, !dbg !8807
  %72 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8808
  %73 = load i32, i32* %mode1, align 4, !dbg !8809
  call void @ni_stc_writew(%struct.comedi_device* %72, i32 %73, i32 12) #9, !dbg !8810
  %74 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8811
  call void @ni_stc_writew(%struct.comedi_device* %74, i32 32, i32 8) #9, !dbg !8812
  br label %sw.epilog87, !dbg !8813

sw.epilog87:                                      ; preds = %if.end51, %sw.bb83, %if.end82
  %75 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8814
  %scan_begin_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %75, i32 0, i32 4, !dbg !8815
  %76 = load i32, i32* %scan_begin_src, align 8, !dbg !8815
  switch i32 %76, label %sw.epilog135 [
    i32 16, label %sw.bb88
    i32 64, label %sw.bb96
  ], !dbg !8816

sw.bb88:                                          ; preds = %sw.epilog87
  %77 = load i32, i32* %start_stop_select, align 4, !dbg !8817
  %conv89 = sext i32 %77 to i64, !dbg !8817
  %or90 = or i64 %conv89, 96, !dbg !8817
  %conv91 = trunc i64 %or90 to i32, !dbg !8817
  store i32 %conv91, i32* %start_stop_select, align 4, !dbg !8817
  %78 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8819
  %79 = load i32, i32* %start_stop_select, align 4, !dbg !8820
  call void @ni_stc_writew(%struct.comedi_device* %78, i32 %79, i32 62) #9, !dbg !8821
  %80 = load i32, i32* %mode2, align 4, !dbg !8822
  %conv92 = sext i32 %80 to i64, !dbg !8822
  %and93 = and i64 %conv92, -129, !dbg !8822
  %conv94 = trunc i64 %and93 to i32, !dbg !8822
  store i32 %conv94, i32* %mode2, align 4, !dbg !8822
  %81 = load i32, i32* %mode2, align 4, !dbg !8823
  store i32 %81, i32* %mode2, align 4, !dbg !8823
  %82 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8824
  %83 = load i32, i32* %mode2, align 4, !dbg !8825
  call void @ni_stc_writew(%struct.comedi_device* %82, i32 %83, i32 13) #9, !dbg !8826
  %84 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8827
  %85 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8828
  %scan_begin_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %85, i32 0, i32 5, !dbg !8829
  %86 = load i32, i32* %scan_begin_arg, align 4, !dbg !8829
  %call95 = call i32 @ni_ns_to_timer(%struct.comedi_device* %84, i32 %86, i32 0) #9, !dbg !8830
  store i32 %call95, i32* %timer, align 4, !dbg !8831
  %87 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8832
  %88 = load i32, i32* %timer, align 4, !dbg !8833
  call void @ni_stc_writel(%struct.comedi_device* %87, i32 %88, i32 14) #9, !dbg !8834
  %89 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8835
  call void @ni_stc_writew(%struct.comedi_device* %89, i32 512, i32 8) #9, !dbg !8836
  br label %sw.epilog135, !dbg !8837

sw.bb96:                                          ; preds = %sw.epilog87
  %90 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8838
  %scan_begin_arg97 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %90, i32 0, i32 5, !dbg !8840
  %91 = load i32, i32* %scan_begin_arg97, align 4, !dbg !8840
  %and98 = and i32 %91, 1073741824, !dbg !8841
  %tobool99 = icmp ne i32 %and98, 0, !dbg !8841
  br i1 %tobool99, label %if.then100, label %if.end104, !dbg !8842

if.then100:                                       ; preds = %sw.bb96
  %92 = load i32, i32* %start_stop_select, align 4, !dbg !8843
  %conv101 = sext i32 %92 to i64, !dbg !8843
  %or102 = or i64 %conv101, 32, !dbg !8843
  %conv103 = trunc i64 %or102 to i32, !dbg !8843
  store i32 %conv103, i32* %start_stop_select, align 4, !dbg !8843
  br label %if.end104, !dbg !8844

if.end104:                                        ; preds = %if.then100, %sw.bb96
  %93 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8845
  %scan_begin_arg105 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %93, i32 0, i32 5, !dbg !8847
  %94 = load i32, i32* %scan_begin_arg105, align 4, !dbg !8847
  %and106 = and i32 %94, -2147483648, !dbg !8848
  %tobool107 = icmp ne i32 %and106, 0, !dbg !8848
  br i1 %tobool107, label %if.then108, label %if.end112, !dbg !8849

if.then108:                                       ; preds = %if.end104
  %95 = load i32, i32* %start_stop_select, align 4, !dbg !8850
  %conv109 = sext i32 %95 to i64, !dbg !8850
  %or110 = or i64 %conv109, 32768, !dbg !8850
  %conv111 = trunc i64 %or110 to i32, !dbg !8850
  store i32 %conv111, i32* %start_stop_select, align 4, !dbg !8850
  br label %if.end112, !dbg !8851

if.end112:                                        ; preds = %if.then108, %if.end104
  %96 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8852
  %scan_begin_src113 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %96, i32 0, i32 4, !dbg !8854
  %97 = load i32, i32* %scan_begin_src113, align 8, !dbg !8854
  %98 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8855
  %convert_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %98, i32 0, i32 6, !dbg !8856
  %99 = load i32, i32* %convert_src, align 8, !dbg !8856
  %cmp114 = icmp ne i32 %97, %99, !dbg !8857
  br i1 %cmp114, label %if.then122, label %lor.lhs.false116, !dbg !8858

lor.lhs.false116:                                 ; preds = %if.end112
  %100 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8859
  %scan_begin_arg117 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %100, i32 0, i32 5, !dbg !8860
  %101 = load i32, i32* %scan_begin_arg117, align 4, !dbg !8860
  %and118 = and i32 %101, -1073741825, !dbg !8861
  %102 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8862
  %convert_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %102, i32 0, i32 7, !dbg !8863
  %103 = load i32, i32* %convert_arg, align 4, !dbg !8863
  %and119 = and i32 %103, -1073741825, !dbg !8864
  %cmp120 = icmp ne i32 %and118, %and119, !dbg !8865
  br i1 %cmp120, label %if.then122, label %if.end126, !dbg !8866

if.then122:                                       ; preds = %lor.lhs.false116, %if.end112
  %104 = load i32, i32* %start_stop_select, align 4, !dbg !8867
  %conv123 = sext i32 %104 to i64, !dbg !8867
  %or124 = or i64 %conv123, 64, !dbg !8867
  %conv125 = trunc i64 %or124 to i32, !dbg !8867
  store i32 %conv125, i32* %start_stop_select, align 4, !dbg !8867
  br label %if.end126, !dbg !8868

if.end126:                                        ; preds = %if.then122, %lor.lhs.false116
  %105 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8869
  %scan_begin_arg127 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %105, i32 0, i32 5, !dbg !8869
  %106 = load i32, i32* %scan_begin_arg127, align 4, !dbg !8869
  %and128 = and i32 %106, 65535, !dbg !8869
  %107 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8869
  %routing_tables129 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %107, i32 0, i32 51, !dbg !8869
  %call130 = call signext i8 @ni_get_reg_value_roffs(i32 %and128, i32 32927, %struct.ni_route_tables* %routing_tables129, i32 1) #9, !dbg !8869
  %conv131 = sext i8 %call130 to i32, !dbg !8869
  %and132 = and i32 %conv131, 31, !dbg !8869
  %shl133 = shl i32 %and132, 0, !dbg !8869
  %108 = load i32, i32* %start_stop_select, align 4, !dbg !8870
  %or134 = or i32 %108, %shl133, !dbg !8870
  store i32 %or134, i32* %start_stop_select, align 4, !dbg !8870
  %109 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8871
  %110 = load i32, i32* %start_stop_select, align 4, !dbg !8872
  call void @ni_stc_writew(%struct.comedi_device* %109, i32 %110, i32 62) #9, !dbg !8873
  br label %sw.epilog135, !dbg !8874

sw.epilog135:                                     ; preds = %sw.epilog87, %if.end126, %sw.bb88
  %111 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8875
  %convert_src136 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %111, i32 0, i32 6, !dbg !8876
  %112 = load i32, i32* %convert_src136, align 8, !dbg !8876
  switch i32 %112, label %sw.epilog183 [
    i32 16, label %sw.bb137
    i32 2, label %sw.bb137
    i32 64, label %sw.bb162
  ], !dbg !8877

sw.bb137:                                         ; preds = %sw.epilog135, %sw.epilog135
  %113 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8878
  %convert_arg138 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %113, i32 0, i32 7, !dbg !8881
  %114 = load i32, i32* %convert_arg138, align 4, !dbg !8881
  %cmp139 = icmp eq i32 %114, 0, !dbg !8882
  br i1 %cmp139, label %if.then145, label %lor.lhs.false141, !dbg !8883

lor.lhs.false141:                                 ; preds = %sw.bb137
  %115 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8884
  %convert_src142 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %115, i32 0, i32 6, !dbg !8885
  %116 = load i32, i32* %convert_src142, align 8, !dbg !8885
  %cmp143 = icmp eq i32 %116, 2, !dbg !8886
  br i1 %cmp143, label %if.then145, label %if.else146, !dbg !8887

if.then145:                                       ; preds = %lor.lhs.false141, %sw.bb137
  store i32 1, i32* %timer, align 4, !dbg !8888
  br label %if.end149, !dbg !8889

if.else146:                                       ; preds = %lor.lhs.false141
  %117 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8890
  %118 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8891
  %convert_arg147 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %118, i32 0, i32 7, !dbg !8892
  %119 = load i32, i32* %convert_arg147, align 4, !dbg !8892
  %call148 = call i32 @ni_ns_to_timer(%struct.comedi_device* %117, i32 %119, i32 0) #9, !dbg !8893
  store i32 %call148, i32* %timer, align 4, !dbg !8894
  br label %if.end149

if.end149:                                        ; preds = %if.else146, %if.then145
  %120 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8895
  call void @ni_stc_writew(%struct.comedi_device* %120, i32 1, i32 23) #9, !dbg !8896
  %121 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8897
  %122 = load i32, i32* %timer, align 4, !dbg !8898
  call void @ni_stc_writew(%struct.comedi_device* %121, i32 %122, i32 25) #9, !dbg !8899
  %123 = load i32, i32* %mode2, align 4, !dbg !8900
  %conv150 = sext i32 %123 to i64, !dbg !8900
  %and151 = and i64 %conv150, -513, !dbg !8900
  %conv152 = trunc i64 %and151 to i32, !dbg !8900
  store i32 %conv152, i32* %mode2, align 4, !dbg !8900
  %124 = load i32, i32* %mode2, align 4, !dbg !8901
  %conv153 = sext i32 %124 to i64, !dbg !8901
  %or154 = or i64 %conv153, 256, !dbg !8901
  %conv155 = trunc i64 %or154 to i32, !dbg !8901
  store i32 %conv155, i32* %mode2, align 4, !dbg !8901
  %125 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8902
  %126 = load i32, i32* %mode2, align 4, !dbg !8903
  call void @ni_stc_writew(%struct.comedi_device* %125, i32 %126, i32 13) #9, !dbg !8904
  %127 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8905
  call void @ni_stc_writew(%struct.comedi_device* %127, i32 2048, i32 8) #9, !dbg !8906
  %128 = load i32, i32* %mode2, align 4, !dbg !8907
  %conv156 = sext i32 %128 to i64, !dbg !8907
  %or157 = or i64 %conv156, 512, !dbg !8907
  %conv158 = trunc i64 %or157 to i32, !dbg !8907
  store i32 %conv158, i32* %mode2, align 4, !dbg !8907
  %129 = load i32, i32* %mode2, align 4, !dbg !8908
  %conv159 = sext i32 %129 to i64, !dbg !8908
  %or160 = or i64 %conv159, 256, !dbg !8908
  %conv161 = trunc i64 %or160 to i32, !dbg !8908
  store i32 %conv161, i32* %mode2, align 4, !dbg !8908
  %130 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8909
  %131 = load i32, i32* %mode2, align 4, !dbg !8910
  call void @ni_stc_writew(%struct.comedi_device* %130, i32 %131, i32 13) #9, !dbg !8911
  br label %sw.epilog183, !dbg !8912

sw.bb162:                                         ; preds = %sw.epilog135
  %132 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8913
  %convert_arg163 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %132, i32 0, i32 7, !dbg !8913
  %133 = load i32, i32* %convert_arg163, align 4, !dbg !8913
  %and164 = and i32 %133, 65535, !dbg !8913
  %134 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8913
  %routing_tables165 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %134, i32 0, i32 51, !dbg !8913
  %call166 = call signext i8 @ni_get_reg_value_roffs(i32 %and164, i32 32931, %struct.ni_route_tables* %routing_tables165, i32 1) #9, !dbg !8913
  %conv167 = sext i8 %call166 to i32, !dbg !8913
  %and168 = and i32 %conv167, 31, !dbg !8913
  %shl169 = shl i32 %and168, 11, !dbg !8913
  %135 = load i32, i32* %mode1, align 4, !dbg !8914
  %or170 = or i32 %135, %shl169, !dbg !8914
  store i32 %or170, i32* %mode1, align 4, !dbg !8914
  %136 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8915
  %convert_arg171 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %136, i32 0, i32 7, !dbg !8917
  %137 = load i32, i32* %convert_arg171, align 4, !dbg !8917
  %and172 = and i32 %137, -2147483648, !dbg !8918
  %cmp173 = icmp eq i32 %and172, 0, !dbg !8919
  br i1 %cmp173, label %if.then175, label %if.end179, !dbg !8920

if.then175:                                       ; preds = %sw.bb162
  %138 = load i32, i32* %mode1, align 4, !dbg !8921
  %conv176 = sext i32 %138 to i64, !dbg !8921
  %or177 = or i64 %conv176, 32, !dbg !8921
  %conv178 = trunc i64 %or177 to i32, !dbg !8921
  store i32 %conv178, i32* %mode1, align 4, !dbg !8921
  br label %if.end179, !dbg !8922

if.end179:                                        ; preds = %if.then175, %sw.bb162
  %139 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8923
  %140 = load i32, i32* %mode1, align 4, !dbg !8924
  call void @ni_stc_writew(%struct.comedi_device* %139, i32 %140, i32 12) #9, !dbg !8925
  %141 = load i32, i32* %mode2, align 4, !dbg !8926
  %conv180 = sext i32 %141 to i64, !dbg !8926
  %or181 = or i64 %conv180, 49152, !dbg !8926
  %conv182 = trunc i64 %or181 to i32, !dbg !8926
  store i32 %conv182, i32* %mode2, align 4, !dbg !8926
  %142 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8927
  %143 = load i32, i32* %mode2, align 4, !dbg !8928
  call void @ni_stc_writew(%struct.comedi_device* %142, i32 %143, i32 13) #9, !dbg !8929
  br label %sw.epilog183, !dbg !8930

sw.epilog183:                                     ; preds = %sw.epilog135, %if.end179, %if.end149
  %144 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8931
  %irq184 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %144, i32 0, i32 20, !dbg !8933
  %145 = load i32, i32* %irq184, align 8, !dbg !8933
  %tobool185 = icmp ne i32 %145, 0, !dbg !8931
  br i1 %tobool185, label %if.then186, label %if.else209, !dbg !8934

if.then186:                                       ; preds = %sw.epilog183
  %146 = load i32, i32* %interrupt_a_enable, align 4, !dbg !8935
  %conv187 = sext i32 %146 to i64, !dbg !8935
  %or188 = or i64 %conv187, 33, !dbg !8935
  %conv189 = trunc i64 %or188 to i32, !dbg !8935
  store i32 %conv189, i32* %interrupt_a_enable, align 4, !dbg !8935
  %147 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8937
  %flags = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %147, i32 0, i32 1, !dbg !8939
  %148 = load i32, i32* %flags, align 4, !dbg !8939
  %and190 = and i32 %148, 32, !dbg !8940
  %tobool191 = icmp ne i32 %and190, 0, !dbg !8940
  br i1 %tobool191, label %if.then197, label %lor.lhs.false192, !dbg !8941

lor.lhs.false192:                                 ; preds = %if.then186
  %149 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8942
  %ai_cmd2193 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %149, i32 0, i32 12, !dbg !8943
  %150 = load i16, i16* %ai_cmd2193, align 4, !dbg !8943
  %conv194 = zext i16 %150 to i64, !dbg !8942
  %and195 = and i64 %conv194, 16384, !dbg !8944
  %tobool196 = icmp ne i64 %and195, 0, !dbg !8944
  br i1 %tobool196, label %if.then197, label %if.else198, !dbg !8945

if.then197:                                       ; preds = %lor.lhs.false192, %if.then186
  %151 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8946
  %aimode = getelementptr inbounds %struct.ni_private, %struct.ni_private* %151, i32 0, i32 2, !dbg !8948
  store i32 2, i32* %aimode, align 4, !dbg !8949
  br label %if.end200, !dbg !8950

if.else198:                                       ; preds = %lor.lhs.false192
  %152 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8951
  %aimode199 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %152, i32 0, i32 2, !dbg !8953
  store i32 1, i32* %aimode199, align 4, !dbg !8954
  br label %if.end200

if.end200:                                        ; preds = %if.else198, %if.then197
  %153 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !8955
  %aimode201 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %153, i32 0, i32 2, !dbg !8956
  %154 = load i32, i32* %aimode201, align 4, !dbg !8956
  switch i32 %154, label %sw.default [
    i32 1, label %sw.bb202
    i32 3, label %sw.bb203
    i32 2, label %sw.bb204
  ], !dbg !8957

sw.bb202:                                         ; preds = %if.end200
  %155 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8958
  call void @ni_stc_writew(%struct.comedi_device* %155, i32 192, i32 87) #9, !dbg !8960
  br label %sw.epilog208, !dbg !8961

sw.bb203:                                         ; preds = %if.end200
  %156 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8962
  call void @ni_stc_writew(%struct.comedi_device* %156, i32 0, i32 87) #9, !dbg !8963
  br label %sw.epilog208, !dbg !8964

sw.bb204:                                         ; preds = %if.end200
  %157 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8965
  call void @ni_stc_writew(%struct.comedi_device* %157, i32 0, i32 87) #9, !dbg !8966
  %158 = load i32, i32* %interrupt_a_enable, align 4, !dbg !8967
  %conv205 = sext i32 %158 to i64, !dbg !8967
  %or206 = or i64 %conv205, 16, !dbg !8967
  %conv207 = trunc i64 %or206 to i32, !dbg !8967
  store i32 %conv207, i32* %interrupt_a_enable, align 4, !dbg !8967
  br label %sw.epilog208, !dbg !8968

sw.default:                                       ; preds = %if.end200
  br label %sw.epilog208, !dbg !8969

sw.epilog208:                                     ; preds = %sw.default, %sw.bb204, %sw.bb203, %sw.bb202
  %159 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8970
  call void @ni_stc_writew(%struct.comedi_device* %159, i32 16256, i32 2) #9, !dbg !8971
  %160 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8972
  %161 = load i32, i32* %interrupt_a_enable, align 4, !dbg !8973
  call void @ni_set_bits(%struct.comedi_device* %160, i32 73, i32 %161, i32 1) #9, !dbg !8974
  br label %if.end210, !dbg !8975

if.else209:                                       ; preds = %sw.epilog183
  %162 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8976
  call void @ni_set_bits(%struct.comedi_device* %162, i32 73, i32 -1, i32 0) #9, !dbg !8978
  br label %if.end210

if.end210:                                        ; preds = %if.else209, %sw.epilog208
  %163 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8979
  call void @ni_stc_writew(%struct.comedi_device* %163, i32 256, i32 72) #9, !dbg !8980
  %164 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !8981
  %scan_begin_src211 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %164, i32 0, i32 4, !dbg !8982
  %165 = load i32, i32* %scan_begin_src211, align 8, !dbg !8982
  switch i32 %165, label %sw.epilog214 [
    i32 16, label %sw.bb212
    i32 64, label %sw.bb213
  ], !dbg !8983

sw.bb212:                                         ; preds = %if.end210
  %166 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8984
  call void @ni_stc_writew(%struct.comedi_device* %166, i32 5440, i32 8) #9, !dbg !8986
  br label %sw.epilog214, !dbg !8987

sw.bb213:                                         ; preds = %if.end210
  %167 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8988
  call void @ni_stc_writew(%struct.comedi_device* %167, i32 5440, i32 8) #9, !dbg !8989
  br label %sw.epilog214, !dbg !8990

sw.epilog214:                                     ; preds = %if.end210, %sw.bb213, %sw.bb212
  call void @llvm.dbg.declare(metadata i32* %retval215, metadata !8991, metadata !DIExpression()), !dbg !8993
  %168 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8994
  %call216 = call i32 @ni_ai_setup_MITE_dma(%struct.comedi_device* %168) #9, !dbg !8995
  store i32 %call216, i32* %retval215, align 4, !dbg !8993
  %169 = load i32, i32* %retval215, align 4, !dbg !8996
  %tobool217 = icmp ne i32 %169, 0, !dbg !8996
  br i1 %tobool217, label %if.then218, label %if.end219, !dbg !8998

if.then218:                                       ; preds = %sw.epilog214
  %170 = load i32, i32* %retval215, align 4, !dbg !8999
  store i32 %170, i32* %retval, align 4, !dbg !9000
  br label %return, !dbg !9000

if.end219:                                        ; preds = %sw.epilog214
  %171 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !9001
  %start_src220 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %171, i32 0, i32 2, !dbg !9003
  %172 = load i32, i32* %start_src220, align 8, !dbg !9003
  %cmp221 = icmp eq i32 %172, 2, !dbg !9004
  br i1 %cmp221, label %if.then223, label %if.else229, !dbg !9005

if.then223:                                       ; preds = %if.end219
  %173 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9006
  %174 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9008
  %ai_cmd2224 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %174, i32 0, i32 12, !dbg !9009
  %175 = load i16, i16* %ai_cmd2224, align 4, !dbg !9009
  %conv225 = zext i16 %175 to i64, !dbg !9008
  %or226 = or i64 1, %conv225, !dbg !9010
  %conv227 = trunc i64 %or226 to i32, !dbg !9011
  call void @ni_stc_writew(%struct.comedi_device* %173, i32 %conv227, i32 4) #9, !dbg !9012
  %176 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9013
  %async228 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %176, i32 0, i32 7, !dbg !9014
  %177 = load %struct.comedi_async*, %struct.comedi_async** %async228, align 8, !dbg !9014
  %inttrig = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %177, i32 0, i32 20, !dbg !9015
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)* null, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)** %inttrig, align 8, !dbg !9016
  br label %if.end240, !dbg !9017

if.else229:                                       ; preds = %if.end219
  %178 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !9018
  %start_src230 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %178, i32 0, i32 2, !dbg !9020
  %179 = load i32, i32* %start_src230, align 8, !dbg !9020
  %cmp231 = icmp eq i32 %179, 64, !dbg !9021
  br i1 %cmp231, label %if.then233, label %if.else236, !dbg !9022

if.then233:                                       ; preds = %if.else229
  %180 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9023
  %async234 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %180, i32 0, i32 7, !dbg !9025
  %181 = load %struct.comedi_async*, %struct.comedi_async** %async234, align 8, !dbg !9025
  %inttrig235 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %181, i32 0, i32 20, !dbg !9026
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)* null, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)** %inttrig235, align 8, !dbg !9027
  br label %if.end239, !dbg !9028

if.else236:                                       ; preds = %if.else229
  %182 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9029
  %async237 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %182, i32 0, i32 7, !dbg !9031
  %183 = load %struct.comedi_async*, %struct.comedi_async** %async237, align 8, !dbg !9031
  %inttrig238 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %183, i32 0, i32 20, !dbg !9032
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)* @ni_ai_inttrig, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)** %inttrig238, align 8, !dbg !9033
  br label %if.end239

if.end239:                                        ; preds = %if.else236, %if.then233
  br label %if.end240

if.end240:                                        ; preds = %if.end239, %if.then223
  store i32 0, i32* %retval, align 4, !dbg !9034
  br label %return, !dbg !9034

return:                                           ; preds = %if.end240, %if.then218, %if.then
  %184 = load i32, i32* %retval, align 4, !dbg !9035
  ret i32 %184, !dbg !9035
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_ai_reset(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #2 !dbg !9036 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %ai_personal = alloca i32, align 4
  %ai_out_ctrl = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9037, metadata !DIExpression()), !dbg !9038
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !9039, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !9041, metadata !DIExpression()), !dbg !9042
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9043
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !9044
  %1 = load i8*, i8** %private, align 8, !dbg !9044
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !9043
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !9042
  call void @llvm.dbg.declare(metadata i32* %ai_personal, metadata !9045, metadata !DIExpression()), !dbg !9046
  call void @llvm.dbg.declare(metadata i32* %ai_out_ctrl, metadata !9047, metadata !DIExpression()), !dbg !9048
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9049
  call void @ni_release_ai_mite_channel(%struct.comedi_device* %3) #9, !dbg !9050
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9051
  call void @ni_stc_writew(%struct.comedi_device* %4, i32 17, i32 72) #9, !dbg !9052
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9053
  call void @ni_set_bits(%struct.comedi_device* %5, i32 73, i32 191, i32 0) #9, !dbg !9054
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9055
  call void @ni_clear_ai_fifo(%struct.comedi_device* %6) #9, !dbg !9056
  %7 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9057
  %is_6143 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %7, i32 0, i32 50, !dbg !9059
  %bf.load = load i16, i16* %is_6143, align 8, !dbg !9059
  %bf.lshr = lshr i16 %bf.load, 3, !dbg !9059
  %bf.clear = and i16 %bf.lshr, 1, !dbg !9059
  %bf.cast = zext i16 %bf.clear to i32, !dbg !9059
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !9057
  br i1 %tobool, label %if.end, label %if.then, !dbg !9060

if.then:                                          ; preds = %entry
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9061
  call void @ni_writeb(%struct.comedi_device* %8, i32 0, i32 15) #9, !dbg !9062
  br label %if.end, !dbg !9062

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9063
  call void @ni_stc_writew(%struct.comedi_device* %9, i32 8192, i32 8) #9, !dbg !9064
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9065
  call void @ni_stc_writew(%struct.comedi_device* %10, i32 12, i32 12) #9, !dbg !9066
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9067
  call void @ni_stc_writew(%struct.comedi_device* %11, i32 0, i32 13) #9, !dbg !9068
  %12 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9069
  call void @ni_stc_writew(%struct.comedi_device* %12, i32 0, i32 87) #9, !dbg !9070
  store i32 40992, i32* %ai_personal, align 4, !dbg !9071
  store i32 812, i32* %ai_out_ctrl, align 4, !dbg !9072
  %13 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9073
  %is_611x = getelementptr inbounds %struct.ni_private, %struct.ni_private* %13, i32 0, i32 50, !dbg !9075
  %bf.load1 = load i16, i16* %is_611x, align 8, !dbg !9075
  %bf.lshr2 = lshr i16 %bf.load1, 2, !dbg !9075
  %bf.clear3 = and i16 %bf.lshr2, 1, !dbg !9075
  %bf.cast4 = zext i16 %bf.clear3 to i32, !dbg !9075
  %tobool5 = icmp ne i32 %bf.cast4, 0, !dbg !9073
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !9076

if.then6:                                         ; preds = %if.end
  %14 = load i32, i32* %ai_out_ctrl, align 4, !dbg !9077
  %or = or i32 %14, 3, !dbg !9077
  store i32 %or, i32* %ai_out_ctrl, align 4, !dbg !9077
  br label %if.end29, !dbg !9079

if.else:                                          ; preds = %if.end
  %15 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9080
  %is_61437 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %15, i32 0, i32 50, !dbg !9082
  %bf.load8 = load i16, i16* %is_61437, align 8, !dbg !9082
  %bf.lshr9 = lshr i16 %bf.load8, 3, !dbg !9082
  %bf.clear10 = and i16 %bf.lshr9, 1, !dbg !9082
  %bf.cast11 = zext i16 %bf.clear10 to i32, !dbg !9082
  %tobool12 = icmp ne i32 %bf.cast11, 0, !dbg !9080
  br i1 %tobool12, label %if.then13, label %if.else15, !dbg !9083

if.then13:                                        ; preds = %if.else
  %16 = load i32, i32* %ai_out_ctrl, align 4, !dbg !9084
  %or14 = or i32 %16, 2, !dbg !9084
  store i32 %or14, i32* %ai_out_ctrl, align 4, !dbg !9084
  br label %if.end28, !dbg !9086

if.else15:                                        ; preds = %if.else
  %17 = load i32, i32* %ai_personal, align 4, !dbg !9087
  %conv = zext i32 %17 to i64, !dbg !9087
  %or16 = or i64 %conv, 1024, !dbg !9087
  %conv17 = trunc i64 %or16 to i32, !dbg !9087
  store i32 %conv17, i32* %ai_personal, align 4, !dbg !9087
  %18 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9089
  %is_622x = getelementptr inbounds %struct.ni_private, %struct.ni_private* %18, i32 0, i32 50, !dbg !9091
  %bf.load18 = load i16, i16* %is_622x, align 8, !dbg !9091
  %bf.lshr19 = lshr i16 %bf.load18, 4, !dbg !9091
  %bf.clear20 = and i16 %bf.lshr19, 1, !dbg !9091
  %bf.cast21 = zext i16 %bf.clear20 to i32, !dbg !9091
  %tobool22 = icmp ne i32 %bf.cast21, 0, !dbg !9089
  br i1 %tobool22, label %if.then23, label %if.else25, !dbg !9092

if.then23:                                        ; preds = %if.else15
  %19 = load i32, i32* %ai_out_ctrl, align 4, !dbg !9093
  %or24 = or i32 %19, 3, !dbg !9093
  store i32 %or24, i32* %ai_out_ctrl, align 4, !dbg !9093
  br label %if.end27, !dbg !9094

if.else25:                                        ; preds = %if.else15
  %20 = load i32, i32* %ai_out_ctrl, align 4, !dbg !9095
  %or26 = or i32 %20, 2, !dbg !9095
  store i32 %or26, i32* %ai_out_ctrl, align 4, !dbg !9095
  br label %if.end27

if.end27:                                         ; preds = %if.else25, %if.then23
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then13
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then6
  %21 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9096
  %22 = load i32, i32* %ai_personal, align 4, !dbg !9097
  call void @ni_stc_writew(%struct.comedi_device* %21, i32 %22, i32 77) #9, !dbg !9098
  %23 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9099
  %24 = load i32, i32* %ai_out_ctrl, align 4, !dbg !9100
  call void @ni_stc_writew(%struct.comedi_device* %23, i32 %24, i32 60) #9, !dbg !9101
  %25 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9102
  call void @ni_stc_writew(%struct.comedi_device* %25, i32 16256, i32 2) #9, !dbg !9103
  %26 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9104
  call void @ni_stc_writew(%struct.comedi_device* %26, i32 256, i32 72) #9, !dbg !9105
  ret i32 0, !dbg !9106
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_ai_poll(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #2 !dbg !9107 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !5432, metadata !DIExpression()), !dbg !9108
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5440, metadata !DIExpression()), !dbg !9110
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5232, metadata !DIExpression()), !dbg !9111
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %flags = alloca i64, align 8
  %count = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9118, metadata !DIExpression()), !dbg !9119
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !9120, metadata !DIExpression()), !dbg !9121
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9122, metadata !DIExpression()), !dbg !9123
  call void @llvm.dbg.declare(metadata i32* %count, metadata !9124, metadata !DIExpression()), !dbg !9125
  br label %do.body, !dbg !9126

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9127

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9128, metadata !DIExpression()), !dbg !9130
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9131, metadata !DIExpression()), !dbg !9130
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9130
  %conv = zext i1 %cmp to i32, !dbg !9130
  store i32 1, i32* %tmp, align 4, !dbg !9130
  %0 = load i32, i32* %tmp, align 4, !dbg !9130
  br label %do.body2, !dbg !9132

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9133

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9134

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9136, metadata !DIExpression()), !dbg !9139
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9140, metadata !DIExpression()), !dbg !9139
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9139
  %conv8 = zext i1 %cmp7 to i32, !dbg !9139
  store i32 1, i32* %tmp9, align 4, !dbg !9139
  %1 = load i32, i32* %tmp9, align 4, !dbg !9139
  %call = call i64 @arch_local_irq_save() #9, !dbg !9141
  store i64 %call, i64* %flags, align 8, !dbg !9141
  br label %do.end, !dbg !9141

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !9134

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !9133

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9142, !srcloc !9143
  br label %do.body12, !dbg !9142

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9144
  %spinlock = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %2, i32 0, i32 11, !dbg !9144
  store %struct.spinlock* %spinlock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9145
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !9146
  %rlock.i = bitcast %union.anon.3* %4 to %struct.raw_spinlock*, !dbg !9146
  br label %do.end14, !dbg !9144

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !9142

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !9133

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9132

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9127

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9147
  call void @ni_sync_ai_dma(%struct.comedi_device* %5) #9, !dbg !9148
  %6 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9149
  %call19 = call i32 @comedi_buf_n_bytes_ready(%struct.comedi_subdevice* %6) #9, !dbg !9150
  store i32 %call19, i32* %count, align 4, !dbg !9151
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9152
  %spinlock20 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %7, i32 0, i32 11, !dbg !9153
  %8 = load i64, i64* %flags, align 8, !dbg !9154
  store %struct.spinlock* %spinlock20, %struct.spinlock** %lock.addr.i21, align 8
  store i64 %8, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !9155
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !9155
  store i32 1, i32* %tmp.i, align 4, !dbg !9155
  %9 = load i32, i32* %tmp.i, align 4, !dbg !9155
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !9156
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !9156
  store i32 1, i32* %tmp8.i, align 4, !dbg !9156
  %10 = load i32, i32* %tmp8.i, align 4, !dbg !9156
  %11 = load i64, i64* %flags.addr.i, align 8, !dbg !9157
  call void @arch_local_irq_restore(i64 %11) #10, !dbg !9157
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9158, !srcloc !5582
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !9159
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !9159
  %rlock.i22 = bitcast %union.anon.3* %13 to %struct.raw_spinlock*, !dbg !9159
  %14 = load i32, i32* %count, align 4, !dbg !9160
  ret i32 %14, !dbg !9161
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_ai_munge(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, i8* %data, i32 %num_bytes, i32 %chan_index) #2 !dbg !9162 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %data.addr = alloca i8*, align 8
  %num_bytes.addr = alloca i32, align 4
  %chan_index.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  %async = alloca %struct.comedi_async*, align 8
  %cmd = alloca %struct.comedi_cmd*, align 8
  %nsamples = alloca i32, align 4
  %array = alloca i16*, align 8
  %larray = alloca i32*, align 8
  %i = alloca i32, align 4
  %barray = alloca i16*, align 8
  %blarray = alloca i32*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9163, metadata !DIExpression()), !dbg !9164
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !9165, metadata !DIExpression()), !dbg !9166
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9167, metadata !DIExpression()), !dbg !9168
  store i32 %num_bytes, i32* %num_bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_bytes.addr, metadata !9169, metadata !DIExpression()), !dbg !9170
  store i32 %chan_index, i32* %chan_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chan_index.addr, metadata !9171, metadata !DIExpression()), !dbg !9172
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !9173, metadata !DIExpression()), !dbg !9174
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9175
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !9176
  %1 = load i8*, i8** %private, align 8, !dbg !9176
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !9175
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !9174
  call void @llvm.dbg.declare(metadata %struct.comedi_async** %async, metadata !9177, metadata !DIExpression()), !dbg !9178
  %3 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9179
  %async1 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %3, i32 0, i32 7, !dbg !9180
  %4 = load %struct.comedi_async*, %struct.comedi_async** %async1, align 8, !dbg !9180
  store %struct.comedi_async* %4, %struct.comedi_async** %async, align 8, !dbg !9178
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd, metadata !9181, metadata !DIExpression()), !dbg !9182
  %5 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !9183
  %cmd2 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %5, i32 0, i32 17, !dbg !9184
  store %struct.comedi_cmd* %cmd2, %struct.comedi_cmd** %cmd, align 8, !dbg !9182
  call void @llvm.dbg.declare(metadata i32* %nsamples, metadata !9185, metadata !DIExpression()), !dbg !9186
  %6 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9187
  %7 = load i32, i32* %num_bytes.addr, align 4, !dbg !9188
  %call = call i32 @comedi_bytes_to_samples(%struct.comedi_subdevice* %6, i32 %7) #9, !dbg !9189
  store i32 %call, i32* %nsamples, align 4, !dbg !9186
  call void @llvm.dbg.declare(metadata i16** %array, metadata !9190, metadata !DIExpression()), !dbg !9192
  %8 = load i8*, i8** %data.addr, align 8, !dbg !9193
  %9 = bitcast i8* %8 to i16*, !dbg !9193
  store i16* %9, i16** %array, align 8, !dbg !9192
  call void @llvm.dbg.declare(metadata i32** %larray, metadata !9194, metadata !DIExpression()), !dbg !9195
  %10 = load i8*, i8** %data.addr, align 8, !dbg !9196
  %11 = bitcast i8* %10 to i32*, !dbg !9196
  store i32* %11, i32** %larray, align 8, !dbg !9195
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9197, metadata !DIExpression()), !dbg !9198
  call void @llvm.dbg.declare(metadata i16** %barray, metadata !9199, metadata !DIExpression()), !dbg !9201
  %12 = load i8*, i8** %data.addr, align 8, !dbg !9202
  %13 = bitcast i8* %12 to i16*, !dbg !9202
  store i16* %13, i16** %barray, align 8, !dbg !9201
  call void @llvm.dbg.declare(metadata i32** %blarray, metadata !9203, metadata !DIExpression()), !dbg !9205
  %14 = load i8*, i8** %data.addr, align 8, !dbg !9206
  %15 = bitcast i8* %14 to i32*, !dbg !9206
  store i32* %15, i32** %blarray, align 8, !dbg !9205
  store i32 0, i32* %i, align 4, !dbg !9207
  br label %for.cond, !dbg !9209

for.cond:                                         ; preds = %for.inc, %entry
  %16 = load i32, i32* %i, align 4, !dbg !9210
  %17 = load i32, i32* %nsamples, align 4, !dbg !9212
  %cmp = icmp ult i32 %16, %17, !dbg !9213
  br i1 %cmp, label %for.body, label %for.end, !dbg !9214

for.body:                                         ; preds = %for.cond
  %18 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9215
  %subdev_flags = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %18, i32 0, i32 4, !dbg !9218
  %19 = load i32, i32* %subdev_flags, align 4, !dbg !9218
  %and = and i32 %19, 268435456, !dbg !9219
  %tobool = icmp ne i32 %and, 0, !dbg !9219
  br i1 %tobool, label %if.then, label %if.else, !dbg !9220

if.then:                                          ; preds = %for.body
  %20 = load i32*, i32** %blarray, align 8, !dbg !9221
  %21 = load i32, i32* %i, align 4, !dbg !9221
  %idxprom = zext i32 %21 to i64, !dbg !9221
  %arrayidx = getelementptr i32, i32* %20, i64 %idxprom, !dbg !9221
  %22 = load i32, i32* %arrayidx, align 4, !dbg !9221
  %23 = load i32*, i32** %larray, align 8, !dbg !9222
  %24 = load i32, i32* %i, align 4, !dbg !9223
  %idxprom3 = zext i32 %24 to i64, !dbg !9222
  %arrayidx4 = getelementptr i32, i32* %23, i64 %idxprom3, !dbg !9222
  store i32 %22, i32* %arrayidx4, align 4, !dbg !9224
  br label %if.end, !dbg !9222

if.else:                                          ; preds = %for.body
  %25 = load i16*, i16** %barray, align 8, !dbg !9225
  %26 = load i32, i32* %i, align 4, !dbg !9225
  %idxprom5 = zext i32 %26 to i64, !dbg !9225
  %arrayidx6 = getelementptr i16, i16* %25, i64 %idxprom5, !dbg !9225
  %27 = load i16, i16* %arrayidx6, align 2, !dbg !9225
  %28 = load i16*, i16** %array, align 8, !dbg !9226
  %29 = load i32, i32* %i, align 4, !dbg !9227
  %idxprom7 = zext i32 %29 to i64, !dbg !9226
  %arrayidx8 = getelementptr i16, i16* %28, i64 %idxprom7, !dbg !9226
  store i16 %27, i16* %arrayidx8, align 2, !dbg !9228
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %30 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9229
  %subdev_flags9 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %30, i32 0, i32 4, !dbg !9231
  %31 = load i32, i32* %subdev_flags9, align 4, !dbg !9231
  %and10 = and i32 %31, 268435456, !dbg !9232
  %tobool11 = icmp ne i32 %and10, 0, !dbg !9232
  br i1 %tobool11, label %if.then12, label %if.else17, !dbg !9233

if.then12:                                        ; preds = %if.end
  %32 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9234
  %ai_offset = getelementptr inbounds %struct.ni_private, %struct.ni_private* %32, i32 0, i32 21, !dbg !9235
  %33 = load i32, i32* %chan_index.addr, align 4, !dbg !9236
  %idxprom13 = zext i32 %33 to i64, !dbg !9234
  %arrayidx14 = getelementptr [512 x i32], [512 x i32]* %ai_offset, i64 0, i64 %idxprom13, !dbg !9234
  %34 = load i32, i32* %arrayidx14, align 4, !dbg !9234
  %35 = load i32*, i32** %larray, align 8, !dbg !9237
  %36 = load i32, i32* %i, align 4, !dbg !9238
  %idxprom15 = zext i32 %36 to i64, !dbg !9237
  %arrayidx16 = getelementptr i32, i32* %35, i64 %idxprom15, !dbg !9237
  %37 = load i32, i32* %arrayidx16, align 4, !dbg !9239
  %add = add i32 %37, %34, !dbg !9239
  store i32 %add, i32* %arrayidx16, align 4, !dbg !9239
  br label %if.end25, !dbg !9237

if.else17:                                        ; preds = %if.end
  %38 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9240
  %ai_offset18 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %38, i32 0, i32 21, !dbg !9241
  %39 = load i32, i32* %chan_index.addr, align 4, !dbg !9242
  %idxprom19 = zext i32 %39 to i64, !dbg !9240
  %arrayidx20 = getelementptr [512 x i32], [512 x i32]* %ai_offset18, i64 0, i64 %idxprom19, !dbg !9240
  %40 = load i32, i32* %arrayidx20, align 4, !dbg !9240
  %41 = load i16*, i16** %array, align 8, !dbg !9243
  %42 = load i32, i32* %i, align 4, !dbg !9244
  %idxprom21 = zext i32 %42 to i64, !dbg !9243
  %arrayidx22 = getelementptr i16, i16* %41, i64 %idxprom21, !dbg !9243
  %43 = load i16, i16* %arrayidx22, align 2, !dbg !9245
  %conv = zext i16 %43 to i32, !dbg !9245
  %add23 = add i32 %conv, %40, !dbg !9245
  %conv24 = trunc i32 %add23 to i16, !dbg !9245
  store i16 %conv24, i16* %arrayidx22, align 2, !dbg !9245
  br label %if.end25

if.end25:                                         ; preds = %if.else17, %if.then12
  %44 = load i32, i32* %chan_index.addr, align 4, !dbg !9246
  %inc = add i32 %44, 1, !dbg !9246
  store i32 %inc, i32* %chan_index.addr, align 4, !dbg !9246
  %45 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !9247
  %chanlist_len = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %45, i32 0, i32 13, !dbg !9248
  %46 = load i32, i32* %chanlist_len, align 8, !dbg !9248
  %47 = load i32, i32* %chan_index.addr, align 4, !dbg !9249
  %rem = urem i32 %47, %46, !dbg !9249
  store i32 %rem, i32* %chan_index.addr, align 4, !dbg !9249
  br label %for.inc, !dbg !9250

for.inc:                                          ; preds = %if.end25
  %48 = load i32, i32* %i, align 4, !dbg !9251
  %inc26 = add i32 %48, 1, !dbg !9251
  store i32 %inc26, i32* %i, align 4, !dbg !9251
  br label %for.cond, !dbg !9252, !llvm.loop !9253

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9255
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_ao_insn_config(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !9256 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %board = alloca %struct.ni_board_struct*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %nbytes = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9257, metadata !DIExpression()), !dbg !9258
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !9259, metadata !DIExpression()), !dbg !9260
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !9261, metadata !DIExpression()), !dbg !9262
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !9263, metadata !DIExpression()), !dbg !9264
  call void @llvm.dbg.declare(metadata %struct.ni_board_struct** %board, metadata !9265, metadata !DIExpression()), !dbg !9266
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9267
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !9268
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !9268
  %2 = bitcast i8* %1 to %struct.ni_board_struct*, !dbg !9267
  store %struct.ni_board_struct* %2, %struct.ni_board_struct** %board, align 8, !dbg !9266
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !9269, metadata !DIExpression()), !dbg !9270
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9271
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !9272
  %4 = load i8*, i8** %private, align 8, !dbg !9272
  %5 = bitcast i8* %4 to %struct.ni_private*, !dbg !9271
  store %struct.ni_private* %5, %struct.ni_private** %devpriv, align 8, !dbg !9270
  call void @llvm.dbg.declare(metadata i32* %nbytes, metadata !9273, metadata !DIExpression()), !dbg !9274
  %6 = load i32*, i32** %data.addr, align 8, !dbg !9275
  %arrayidx = getelementptr i32, i32* %6, i64 0, !dbg !9275
  %7 = load i32, i32* %arrayidx, align 4, !dbg !9275
  switch i32 %7, label %sw.default15 [
    i32 2006, label %sw.bb
    i32 31, label %sw.bb9
    i32 5005, label %sw.bb11
  ], !dbg !9276

sw.bb:                                            ; preds = %entry
  %8 = load i32*, i32** %data.addr, align 8, !dbg !9277
  %arrayidx1 = getelementptr i32, i32* %8, i64 1, !dbg !9277
  %9 = load i32, i32* %arrayidx1, align 4, !dbg !9277
  switch i32 %9, label %sw.default [
    i32 1, label %sw.bb2
    i32 0, label %sw.bb7
  ], !dbg !9279

sw.bb2:                                           ; preds = %sw.bb
  %10 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9280
  %11 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !9282
  %ao_fifo_depth = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %11, i32 0, i32 12, !dbg !9283
  %12 = load i32, i32* %ao_fifo_depth, align 8, !dbg !9283
  %call = call i32 @comedi_samples_to_bytes(%struct.comedi_subdevice* %10, i32 %12) #9, !dbg !9284
  store i32 %call, i32* %nbytes, align 4, !dbg !9285
  %13 = load i32, i32* %nbytes, align 4, !dbg !9286
  %add = add i32 1, %13, !dbg !9287
  %14 = load i32*, i32** %data.addr, align 8, !dbg !9288
  %arrayidx3 = getelementptr i32, i32* %14, i64 2, !dbg !9288
  store i32 %add, i32* %arrayidx3, align 4, !dbg !9289
  %15 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9290
  %mite = getelementptr inbounds %struct.ni_private, %struct.ni_private* %15, i32 0, i32 42, !dbg !9292
  %16 = load %struct.mite*, %struct.mite** %mite, align 8, !dbg !9292
  %tobool = icmp ne %struct.mite* %16, null, !dbg !9290
  br i1 %tobool, label %if.then, label %if.end, !dbg !9293

if.then:                                          ; preds = %sw.bb2
  %17 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9294
  %mite4 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %17, i32 0, i32 42, !dbg !9295
  %18 = load %struct.mite*, %struct.mite** %mite4, align 8, !dbg !9295
  %fifo_size = getelementptr inbounds %struct.mite, %struct.mite* %18, i32 0, i32 4, !dbg !9296
  %19 = load i32, i32* %fifo_size, align 4, !dbg !9296
  %20 = load i32*, i32** %data.addr, align 8, !dbg !9297
  %arrayidx5 = getelementptr i32, i32* %20, i64 2, !dbg !9297
  %21 = load i32, i32* %arrayidx5, align 4, !dbg !9298
  %add6 = add i32 %21, %19, !dbg !9298
  store i32 %add6, i32* %arrayidx5, align 4, !dbg !9298
  br label %if.end, !dbg !9297

if.end:                                           ; preds = %if.then, %sw.bb2
  br label %sw.epilog, !dbg !9299

sw.bb7:                                           ; preds = %sw.bb
  %22 = load i32*, i32** %data.addr, align 8, !dbg !9300
  %arrayidx8 = getelementptr i32, i32* %22, i64 2, !dbg !9300
  store i32 0, i32* %arrayidx8, align 4, !dbg !9301
  br label %sw.epilog, !dbg !9302

sw.default:                                       ; preds = %sw.bb
  store i32 -22, i32* %retval, align 4, !dbg !9303
  br label %return, !dbg !9303

sw.epilog:                                        ; preds = %sw.bb7, %if.end
  store i32 0, i32* %retval, align 4, !dbg !9304
  br label %return, !dbg !9304

sw.bb9:                                           ; preds = %entry
  %23 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9305
  %24 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9306
  %call10 = call i32 @ni_ao_arm(%struct.comedi_device* %23, %struct.comedi_subdevice* %24) #9, !dbg !9307
  store i32 %call10, i32* %retval, align 4, !dbg !9308
  br label %return, !dbg !9308

sw.bb11:                                          ; preds = %entry
  %25 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !9309
  %ao_speed = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %25, i32 0, i32 14, !dbg !9310
  %26 = load i32, i32* %ao_speed, align 8, !dbg !9310
  %27 = load i32*, i32** %data.addr, align 8, !dbg !9311
  %arrayidx12 = getelementptr i32, i32* %27, i64 3, !dbg !9311
  %28 = load i32, i32* %arrayidx12, align 4, !dbg !9311
  %mul = mul i32 %26, %28, !dbg !9312
  %29 = load i32*, i32** %data.addr, align 8, !dbg !9313
  %arrayidx13 = getelementptr i32, i32* %29, i64 1, !dbg !9313
  store i32 %mul, i32* %arrayidx13, align 4, !dbg !9314
  %30 = load i32*, i32** %data.addr, align 8, !dbg !9315
  %arrayidx14 = getelementptr i32, i32* %30, i64 2, !dbg !9315
  store i32 0, i32* %arrayidx14, align 4, !dbg !9316
  store i32 0, i32* %retval, align 4, !dbg !9317
  br label %return, !dbg !9317

sw.default15:                                     ; preds = %entry
  br label %sw.epilog16, !dbg !9318

sw.epilog16:                                      ; preds = %sw.default15
  store i32 -22, i32* %retval, align 4, !dbg !9319
  br label %return, !dbg !9319

return:                                           ; preds = %sw.epilog16, %sw.bb11, %sw.bb9, %sw.epilog, %sw.default
  %31 = load i32, i32* %retval, align 4, !dbg !9320
  ret i32 %31, !dbg !9320
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_ao_insn_write(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !9321 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %chan = alloca i32, align 4
  %range = alloca i32, align 4
  %reg = alloca i32, align 4
  %i = alloca i32, align 4
  %val = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9322, metadata !DIExpression()), !dbg !9323
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !9324, metadata !DIExpression()), !dbg !9325
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !9326, metadata !DIExpression()), !dbg !9327
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !9328, metadata !DIExpression()), !dbg !9329
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !9330, metadata !DIExpression()), !dbg !9331
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9332
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !9333
  %1 = load i8*, i8** %private, align 8, !dbg !9333
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !9332
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !9331
  call void @llvm.dbg.declare(metadata i32* %chan, metadata !9334, metadata !DIExpression()), !dbg !9335
  %3 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9336
  %chanspec = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %3, i32 0, i32 4, !dbg !9336
  %4 = load i32, i32* %chanspec, align 4, !dbg !9336
  %and = and i32 %4, 65535, !dbg !9336
  store i32 %and, i32* %chan, align 4, !dbg !9335
  call void @llvm.dbg.declare(metadata i32* %range, metadata !9337, metadata !DIExpression()), !dbg !9338
  %5 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9339
  %chanspec1 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %5, i32 0, i32 4, !dbg !9339
  %6 = load i32, i32* %chanspec1, align 4, !dbg !9339
  %shr = lshr i32 %6, 16, !dbg !9339
  %and2 = and i32 %shr, 255, !dbg !9339
  store i32 %and2, i32* %range, align 4, !dbg !9338
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !9340, metadata !DIExpression()), !dbg !9341
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9342, metadata !DIExpression()), !dbg !9343
  %7 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9344
  %is_6xxx = getelementptr inbounds %struct.ni_private, %struct.ni_private* %7, i32 0, i32 50, !dbg !9346
  %bf.load = load i16, i16* %is_6xxx, align 8, !dbg !9346
  %bf.lshr = lshr i16 %bf.load, 1, !dbg !9346
  %bf.clear = and i16 %bf.lshr, 1, !dbg !9346
  %bf.cast = zext i16 %bf.clear to i32, !dbg !9346
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !9344
  br i1 %tobool, label %if.then, label %if.else, !dbg !9347

if.then:                                          ; preds = %entry
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9348
  %9 = load i32, i32* %chan, align 4, !dbg !9350
  %shl = shl i32 1, %9, !dbg !9351
  call void @ni_ao_win_outw(%struct.comedi_device* %8, i32 %shl, i32 17) #9, !dbg !9352
  %10 = load i32, i32* %chan, align 4, !dbg !9353
  %add = add i32 0, %10, !dbg !9353
  store i32 %add, i32* %reg, align 4, !dbg !9354
  br label %if.end12, !dbg !9355

if.else:                                          ; preds = %entry
  %11 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9356
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %11, i32 0, i32 50, !dbg !9358
  %bf.load3 = load i16, i16* %is_m_series, align 8, !dbg !9358
  %bf.clear4 = and i16 %bf.load3, 1, !dbg !9358
  %bf.cast5 = zext i16 %bf.clear4 to i32, !dbg !9358
  %tobool6 = icmp ne i32 %bf.cast5, 0, !dbg !9356
  br i1 %tobool6, label %if.then7, label %if.else9, !dbg !9359

if.then7:                                         ; preds = %if.else
  %12 = load i32, i32* %chan, align 4, !dbg !9360
  %mul = mul i32 %12, 4, !dbg !9360
  %add8 = add i32 192, %mul, !dbg !9360
  store i32 %add8, i32* %reg, align 4, !dbg !9362
  br label %if.end, !dbg !9363

if.else9:                                         ; preds = %if.else
  %13 = load i32, i32* %chan, align 4, !dbg !9364
  %mul10 = mul i32 %13, 2, !dbg !9364
  %add11 = add i32 24, %mul10, !dbg !9364
  store i32 %add11, i32* %reg, align 4, !dbg !9366
  br label %if.end

if.end:                                           ; preds = %if.else9, %if.then7
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  %14 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9367
  %15 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9368
  %16 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9369
  %chanspec13 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %16, i32 0, i32 4, !dbg !9370
  %call = call i32 @ni_ao_config_chanlist(%struct.comedi_device* %14, %struct.comedi_subdevice* %15, i32* %chanspec13, i32 1, i32 0) #9, !dbg !9371
  store i32 0, i32* %i, align 4, !dbg !9372
  br label %for.cond, !dbg !9374

for.cond:                                         ; preds = %for.inc, %if.end12
  %17 = load i32, i32* %i, align 4, !dbg !9375
  %18 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9377
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %18, i32 0, i32 1, !dbg !9378
  %19 = load i32, i32* %n, align 4, !dbg !9378
  %cmp = icmp ult i32 %17, %19, !dbg !9379
  br i1 %cmp, label %for.body, label %for.end, !dbg !9380

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %val, metadata !9381, metadata !DIExpression()), !dbg !9383
  %20 = load i32*, i32** %data.addr, align 8, !dbg !9384
  %21 = load i32, i32* %i, align 4, !dbg !9385
  %idxprom = sext i32 %21 to i64, !dbg !9384
  %arrayidx = getelementptr i32, i32* %20, i64 %idxprom, !dbg !9384
  %22 = load i32, i32* %arrayidx, align 4, !dbg !9384
  store i32 %22, i32* %val, align 4, !dbg !9383
  %23 = load i32, i32* %val, align 4, !dbg !9386
  %24 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9387
  %readback = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %24, i32 0, i32 32, !dbg !9388
  %25 = load i32*, i32** %readback, align 8, !dbg !9388
  %26 = load i32, i32* %chan, align 4, !dbg !9389
  %idxprom14 = zext i32 %26 to i64, !dbg !9387
  %arrayidx15 = getelementptr i32, i32* %25, i64 %idxprom14, !dbg !9387
  store i32 %23, i32* %arrayidx15, align 4, !dbg !9390
  %27 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9391
  %is_6xxx16 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %27, i32 0, i32 50, !dbg !9393
  %bf.load17 = load i16, i16* %is_6xxx16, align 8, !dbg !9393
  %bf.lshr18 = lshr i16 %bf.load17, 1, !dbg !9393
  %bf.clear19 = and i16 %bf.lshr18, 1, !dbg !9393
  %bf.cast20 = zext i16 %bf.clear19 to i32, !dbg !9393
  %tobool21 = icmp ne i32 %bf.cast20, 0, !dbg !9391
  br i1 %tobool21, label %if.then22, label %if.else24, !dbg !9394

if.then22:                                        ; preds = %for.body
  %28 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9395
  %29 = load i32, i32* %val, align 4, !dbg !9397
  %call23 = call i32 @comedi_offset_munge(%struct.comedi_subdevice* %28, i32 %29) #9, !dbg !9398
  store i32 %call23, i32* %val, align 4, !dbg !9399
  %30 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9400
  %31 = load i32, i32* %val, align 4, !dbg !9401
  %32 = load i32, i32* %reg, align 4, !dbg !9402
  call void @ni_ao_win_outw(%struct.comedi_device* %30, i32 %31, i32 %32) #9, !dbg !9403
  br label %if.end37, !dbg !9404

if.else24:                                        ; preds = %for.body
  %33 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9405
  %is_m_series25 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %33, i32 0, i32 50, !dbg !9407
  %bf.load26 = load i16, i16* %is_m_series25, align 8, !dbg !9407
  %bf.clear27 = and i16 %bf.load26, 1, !dbg !9407
  %bf.cast28 = zext i16 %bf.clear27 to i32, !dbg !9407
  %tobool29 = icmp ne i32 %bf.cast28, 0, !dbg !9405
  br i1 %tobool29, label %if.then30, label %if.else31, !dbg !9408

if.then30:                                        ; preds = %if.else24
  %34 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9409
  %35 = load i32, i32* %val, align 4, !dbg !9411
  %36 = load i32, i32* %reg, align 4, !dbg !9412
  call void @ni_writew(%struct.comedi_device* %34, i32 %35, i32 %36) #9, !dbg !9413
  br label %if.end36, !dbg !9414

if.else31:                                        ; preds = %if.else24
  %37 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9415
  %38 = load i32, i32* %range, align 4, !dbg !9418
  %call32 = call zeroext i1 @comedi_range_is_bipolar(%struct.comedi_subdevice* %37, i32 %38) #9, !dbg !9419
  br i1 %call32, label %if.then33, label %if.end35, !dbg !9420

if.then33:                                        ; preds = %if.else31
  %39 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9421
  %40 = load i32, i32* %val, align 4, !dbg !9422
  %call34 = call i32 @comedi_offset_munge(%struct.comedi_subdevice* %39, i32 %40) #9, !dbg !9423
  store i32 %call34, i32* %val, align 4, !dbg !9424
  br label %if.end35, !dbg !9425

if.end35:                                         ; preds = %if.then33, %if.else31
  %41 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9426
  %42 = load i32, i32* %val, align 4, !dbg !9427
  %43 = load i32, i32* %reg, align 4, !dbg !9428
  call void @ni_writew(%struct.comedi_device* %41, i32 %42, i32 %43) #9, !dbg !9429
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then30
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then22
  br label %for.inc, !dbg !9430

for.inc:                                          ; preds = %if.end37
  %44 = load i32, i32* %i, align 4, !dbg !9431
  %inc = add i32 %44, 1, !dbg !9431
  store i32 %inc, i32* %i, align 4, !dbg !9431
  br label %for.cond, !dbg !9432, !llvm.loop !9433

for.end:                                          ; preds = %for.cond
  %45 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9435
  %n38 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %45, i32 0, i32 1, !dbg !9436
  %46 = load i32, i32* %n38, align 4, !dbg !9436
  ret i32 %46, !dbg !9437
}

; Function Attrs: noredzone
declare dso_local i32 @comedi_alloc_subdev_readback(%struct.comedi_subdevice*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_ao_cmdtest(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_cmd* %cmd) #2 !dbg !9438 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %board = alloca %struct.ni_board_struct*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %err = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9439, metadata !DIExpression()), !dbg !9440
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !9441, metadata !DIExpression()), !dbg !9442
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !9443, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.declare(metadata %struct.ni_board_struct** %board, metadata !9445, metadata !DIExpression()), !dbg !9446
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9447
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !9448
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !9448
  %2 = bitcast i8* %1 to %struct.ni_board_struct*, !dbg !9447
  store %struct.ni_board_struct* %2, %struct.ni_board_struct** %board, align 8, !dbg !9446
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !9449, metadata !DIExpression()), !dbg !9450
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9451
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !9452
  %4 = load i8*, i8** %private, align 8, !dbg !9452
  %5 = bitcast i8* %4 to %struct.ni_private*, !dbg !9451
  store %struct.ni_private* %5, %struct.ni_private** %devpriv, align 8, !dbg !9450
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9453, metadata !DIExpression()), !dbg !9454
  store i32 0, i32* %err, align 4, !dbg !9454
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !9455, metadata !DIExpression()), !dbg !9456
  %6 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9457
  %start_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %6, i32 0, i32 2, !dbg !9458
  %call = call i32 @comedi_check_trigger_src(i32* %start_src, i32 192) #9, !dbg !9459
  %7 = load i32, i32* %err, align 4, !dbg !9460
  %or = or i32 %7, %call, !dbg !9460
  store i32 %or, i32* %err, align 4, !dbg !9460
  %8 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9461
  %scan_begin_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %8, i32 0, i32 4, !dbg !9462
  %call1 = call i32 @comedi_check_trigger_src(i32* %scan_begin_src, i32 80) #9, !dbg !9463
  %9 = load i32, i32* %err, align 4, !dbg !9464
  %or2 = or i32 %9, %call1, !dbg !9464
  store i32 %or2, i32* %err, align 4, !dbg !9464
  %10 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9465
  %convert_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %10, i32 0, i32 6, !dbg !9466
  %call3 = call i32 @comedi_check_trigger_src(i32* %convert_src, i32 2) #9, !dbg !9467
  %11 = load i32, i32* %err, align 4, !dbg !9468
  %or4 = or i32 %11, %call3, !dbg !9468
  store i32 %or4, i32* %err, align 4, !dbg !9468
  %12 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9469
  %scan_end_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %12, i32 0, i32 8, !dbg !9470
  %call5 = call i32 @comedi_check_trigger_src(i32* %scan_end_src, i32 32) #9, !dbg !9471
  %13 = load i32, i32* %err, align 4, !dbg !9472
  %or6 = or i32 %13, %call5, !dbg !9472
  store i32 %or6, i32* %err, align 4, !dbg !9472
  %14 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9473
  %stop_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %14, i32 0, i32 10, !dbg !9474
  %call7 = call i32 @comedi_check_trigger_src(i32* %stop_src, i32 33) #9, !dbg !9475
  %15 = load i32, i32* %err, align 4, !dbg !9476
  %or8 = or i32 %15, %call7, !dbg !9476
  store i32 %or8, i32* %err, align 4, !dbg !9476
  %16 = load i32, i32* %err, align 4, !dbg !9477
  %tobool = icmp ne i32 %16, 0, !dbg !9477
  br i1 %tobool, label %if.then, label %if.end, !dbg !9479

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !9480
  br label %return, !dbg !9480

if.end:                                           ; preds = %entry
  %17 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9481
  %start_src9 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %17, i32 0, i32 2, !dbg !9482
  %18 = load i32, i32* %start_src9, align 8, !dbg !9482
  %call10 = call i32 @comedi_check_trigger_is_unique(i32 %18) #9, !dbg !9483
  %19 = load i32, i32* %err, align 4, !dbg !9484
  %or11 = or i32 %19, %call10, !dbg !9484
  store i32 %or11, i32* %err, align 4, !dbg !9484
  %20 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9485
  %scan_begin_src12 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %20, i32 0, i32 4, !dbg !9486
  %21 = load i32, i32* %scan_begin_src12, align 8, !dbg !9486
  %call13 = call i32 @comedi_check_trigger_is_unique(i32 %21) #9, !dbg !9487
  %22 = load i32, i32* %err, align 4, !dbg !9488
  %or14 = or i32 %22, %call13, !dbg !9488
  store i32 %or14, i32* %err, align 4, !dbg !9488
  %23 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9489
  %stop_src15 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %23, i32 0, i32 10, !dbg !9490
  %24 = load i32, i32* %stop_src15, align 8, !dbg !9490
  %call16 = call i32 @comedi_check_trigger_is_unique(i32 %24) #9, !dbg !9491
  %25 = load i32, i32* %err, align 4, !dbg !9492
  %or17 = or i32 %25, %call16, !dbg !9492
  store i32 %or17, i32* %err, align 4, !dbg !9492
  %26 = load i32, i32* %err, align 4, !dbg !9493
  %tobool18 = icmp ne i32 %26, 0, !dbg !9493
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !9495

if.then19:                                        ; preds = %if.end
  store i32 2, i32* %retval, align 4, !dbg !9496
  br label %return, !dbg !9496

if.end20:                                         ; preds = %if.end
  %27 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9497
  %start_src21 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %27, i32 0, i32 2, !dbg !9498
  %28 = load i32, i32* %start_src21, align 8, !dbg !9498
  switch i32 %28, label %sw.epilog [
    i32 128, label %sw.bb
    i32 64, label %sw.bb24
  ], !dbg !9499

sw.bb:                                            ; preds = %if.end20
  %29 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9500
  %start_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %29, i32 0, i32 3, !dbg !9502
  %call22 = call i32 @comedi_check_trigger_arg_is(i32* %start_arg, i32 0) #9, !dbg !9503
  %30 = load i32, i32* %err, align 4, !dbg !9504
  %or23 = or i32 %30, %call22, !dbg !9504
  store i32 %or23, i32* %err, align 4, !dbg !9504
  br label %sw.epilog, !dbg !9505

sw.bb24:                                          ; preds = %if.end20
  %31 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9506
  %start_arg25 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %31, i32 0, i32 3, !dbg !9506
  %32 = load i32, i32* %start_arg25, align 4, !dbg !9506
  %and = and i32 %32, 65535, !dbg !9506
  %33 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9507
  %routing_tables = getelementptr inbounds %struct.ni_private, %struct.ni_private* %33, i32 0, i32 51, !dbg !9508
  %call26 = call i32 @ni_check_trigger_arg_roffs(i32 %and, i32 32940, %struct.ni_route_tables* %routing_tables, i32 1) #9, !dbg !9509
  %34 = load i32, i32* %err, align 4, !dbg !9510
  %or27 = or i32 %34, %call26, !dbg !9510
  store i32 %or27, i32* %err, align 4, !dbg !9510
  br label %sw.epilog, !dbg !9511

sw.epilog:                                        ; preds = %if.end20, %sw.bb24, %sw.bb
  %35 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9512
  %scan_begin_src28 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %35, i32 0, i32 4, !dbg !9514
  %36 = load i32, i32* %scan_begin_src28, align 8, !dbg !9514
  %cmp = icmp eq i32 %36, 16, !dbg !9515
  br i1 %cmp, label %if.then29, label %if.else, !dbg !9516

if.then29:                                        ; preds = %sw.epilog
  %37 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9517
  %scan_begin_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %37, i32 0, i32 5, !dbg !9519
  %38 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !9520
  %ao_speed = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %38, i32 0, i32 14, !dbg !9521
  %39 = load i32, i32* %ao_speed, align 8, !dbg !9521
  %call30 = call i32 @comedi_check_trigger_arg_min(i32* %scan_begin_arg, i32 %39) #9, !dbg !9522
  %40 = load i32, i32* %err, align 4, !dbg !9523
  %or31 = or i32 %40, %call30, !dbg !9523
  store i32 %or31, i32* %err, align 4, !dbg !9523
  %41 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9524
  %scan_begin_arg32 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %41, i32 0, i32 5, !dbg !9525
  %42 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9526
  %clock_ns = getelementptr inbounds %struct.ni_private, %struct.ni_private* %42, i32 0, i32 36, !dbg !9527
  %43 = load i32, i32* %clock_ns, align 4, !dbg !9527
  %mul = mul i32 %43, 16777215, !dbg !9528
  %call33 = call i32 @comedi_check_trigger_arg_max(i32* %scan_begin_arg32, i32 %mul) #9, !dbg !9529
  %44 = load i32, i32* %err, align 4, !dbg !9530
  %or34 = or i32 %44, %call33, !dbg !9530
  store i32 %or34, i32* %err, align 4, !dbg !9530
  br label %if.end40, !dbg !9531

if.else:                                          ; preds = %sw.epilog
  %45 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9532
  %scan_begin_arg35 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %45, i32 0, i32 5, !dbg !9532
  %46 = load i32, i32* %scan_begin_arg35, align 4, !dbg !9532
  %and36 = and i32 %46, 65535, !dbg !9532
  %47 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9534
  %routing_tables37 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %47, i32 0, i32 51, !dbg !9535
  %call38 = call i32 @ni_check_trigger_arg(i32 %and36, i32 32938, %struct.ni_route_tables* %routing_tables37) #9, !dbg !9536
  %48 = load i32, i32* %err, align 4, !dbg !9537
  %or39 = or i32 %48, %call38, !dbg !9537
  store i32 %or39, i32* %err, align 4, !dbg !9537
  br label %if.end40

if.end40:                                         ; preds = %if.else, %if.then29
  %49 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9538
  %convert_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %49, i32 0, i32 7, !dbg !9539
  %call41 = call i32 @comedi_check_trigger_arg_is(i32* %convert_arg, i32 0) #9, !dbg !9540
  %50 = load i32, i32* %err, align 4, !dbg !9541
  %or42 = or i32 %50, %call41, !dbg !9541
  store i32 %or42, i32* %err, align 4, !dbg !9541
  %51 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9542
  %scan_end_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %51, i32 0, i32 9, !dbg !9543
  %52 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9544
  %chanlist_len = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %52, i32 0, i32 13, !dbg !9545
  %53 = load i32, i32* %chanlist_len, align 8, !dbg !9545
  %call43 = call i32 @comedi_check_trigger_arg_is(i32* %scan_end_arg, i32 %53) #9, !dbg !9546
  %54 = load i32, i32* %err, align 4, !dbg !9547
  %or44 = or i32 %54, %call43, !dbg !9547
  store i32 %or44, i32* %err, align 4, !dbg !9547
  %55 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9548
  %stop_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %55, i32 0, i32 11, !dbg !9549
  %call45 = call i32 @comedi_check_trigger_arg_max(i32* %stop_arg, i32 16777215) #9, !dbg !9550
  %56 = load i32, i32* %err, align 4, !dbg !9551
  %or46 = or i32 %56, %call45, !dbg !9551
  store i32 %or46, i32* %err, align 4, !dbg !9551
  %57 = load i32, i32* %err, align 4, !dbg !9552
  %tobool47 = icmp ne i32 %57, 0, !dbg !9552
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !9554

if.then48:                                        ; preds = %if.end40
  store i32 3, i32* %retval, align 4, !dbg !9555
  br label %return, !dbg !9555

if.end49:                                         ; preds = %if.end40
  %58 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9556
  %scan_begin_src50 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %58, i32 0, i32 4, !dbg !9558
  %59 = load i32, i32* %scan_begin_src50, align 8, !dbg !9558
  %cmp51 = icmp eq i32 %59, 16, !dbg !9559
  br i1 %cmp51, label %if.then52, label %if.end62, !dbg !9560

if.then52:                                        ; preds = %if.end49
  %60 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9561
  %scan_begin_arg53 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %60, i32 0, i32 5, !dbg !9563
  %61 = load i32, i32* %scan_begin_arg53, align 4, !dbg !9563
  store i32 %61, i32* %tmp, align 4, !dbg !9564
  %62 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9565
  %63 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9566
  %64 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9567
  %scan_begin_arg54 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %64, i32 0, i32 5, !dbg !9568
  %65 = load i32, i32* %scan_begin_arg54, align 4, !dbg !9568
  %66 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9569
  %flags = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %66, i32 0, i32 1, !dbg !9570
  %67 = load i32, i32* %flags, align 4, !dbg !9570
  %call55 = call i32 @ni_ns_to_timer(%struct.comedi_device* %63, i32 %65, i32 %67) #9, !dbg !9571
  %call56 = call i32 @ni_timer_to_ns(%struct.comedi_device* %62, i32 %call55) #9, !dbg !9572
  %68 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9573
  %scan_begin_arg57 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %68, i32 0, i32 5, !dbg !9574
  store i32 %call56, i32* %scan_begin_arg57, align 4, !dbg !9575
  %69 = load i32, i32* %tmp, align 4, !dbg !9576
  %70 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9578
  %scan_begin_arg58 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %70, i32 0, i32 5, !dbg !9579
  %71 = load i32, i32* %scan_begin_arg58, align 4, !dbg !9579
  %cmp59 = icmp ne i32 %69, %71, !dbg !9580
  br i1 %cmp59, label %if.then60, label %if.end61, !dbg !9581

if.then60:                                        ; preds = %if.then52
  %72 = load i32, i32* %err, align 4, !dbg !9582
  %inc = add i32 %72, 1, !dbg !9582
  store i32 %inc, i32* %err, align 4, !dbg !9582
  br label %if.end61, !dbg !9583

if.end61:                                         ; preds = %if.then60, %if.then52
  br label %if.end62, !dbg !9584

if.end62:                                         ; preds = %if.end61, %if.end49
  %73 = load i32, i32* %err, align 4, !dbg !9585
  %tobool63 = icmp ne i32 %73, 0, !dbg !9585
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !9587

if.then64:                                        ; preds = %if.end62
  store i32 4, i32* %retval, align 4, !dbg !9588
  br label %return, !dbg !9588

if.end65:                                         ; preds = %if.end62
  store i32 0, i32* %retval, align 4, !dbg !9589
  br label %return, !dbg !9589

return:                                           ; preds = %if.end65, %if.then64, %if.then48, %if.then19, %if.then
  %74 = load i32, i32* %retval, align 4, !dbg !9590
  ret i32 %74, !dbg !9590
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_ao_cmd(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #2 !dbg !9591 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %cmd = alloca %struct.comedi_cmd*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9592, metadata !DIExpression()), !dbg !9593
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !9594, metadata !DIExpression()), !dbg !9595
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !9596, metadata !DIExpression()), !dbg !9597
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9598
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !9599
  %1 = load i8*, i8** %private, align 8, !dbg !9599
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !9598
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !9597
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd, metadata !9600, metadata !DIExpression()), !dbg !9601
  %3 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9602
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %3, i32 0, i32 7, !dbg !9603
  %4 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !9603
  %cmd1 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %4, i32 0, i32 17, !dbg !9604
  store %struct.comedi_cmd* %cmd1, %struct.comedi_cmd** %cmd, align 8, !dbg !9601
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9605
  %irq = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %5, i32 0, i32 20, !dbg !9607
  %6 = load i32, i32* %irq, align 8, !dbg !9607
  %cmp = icmp eq i32 %6, 0, !dbg !9608
  br i1 %cmp, label %if.then, label %if.end, !dbg !9609

if.then:                                          ; preds = %entry
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9610
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %7, i32 0, i32 4, !dbg !9610
  %8 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !9610
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.103, i64 0, i64 0)) #11, !dbg !9610
  store i32 -5, i32* %retval, align 4, !dbg !9612
  br label %return, !dbg !9612

if.end:                                           ; preds = %entry
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9613
  %10 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !9614
  call void @ni_ao_cmd_personalize(%struct.comedi_device* %9, %struct.comedi_cmd* %10) #9, !dbg !9615
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9616
  %12 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !9617
  call void @ni_ao_cmd_set_trigger(%struct.comedi_device* %11, %struct.comedi_cmd* %12) #9, !dbg !9618
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9619
  %14 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !9620
  call void @ni_ao_cmd_set_counters(%struct.comedi_device* %13, %struct.comedi_cmd* %14) #9, !dbg !9621
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9622
  %16 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !9623
  call void @ni_ao_cmd_set_update(%struct.comedi_device* %15, %struct.comedi_cmd* %16) #9, !dbg !9624
  %17 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9625
  %18 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9626
  call void @ni_ao_cmd_set_channels(%struct.comedi_device* %17, %struct.comedi_subdevice* %18) #9, !dbg !9627
  %19 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9628
  %20 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !9629
  call void @ni_ao_cmd_set_stop_conditions(%struct.comedi_device* %19, %struct.comedi_cmd* %20) #9, !dbg !9630
  %21 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9631
  call void @ni_ao_cmd_set_fifo_mode(%struct.comedi_device* %21) #9, !dbg !9632
  %22 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9633
  %ao_mite_ring = getelementptr inbounds %struct.ni_private, %struct.ni_private* %22, i32 0, i32 47, !dbg !9634
  %23 = load %struct.mite_ring*, %struct.mite_ring** %ao_mite_ring, align 8, !dbg !9634
  %24 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9635
  %25 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !9636
  call void @ni_cmd_set_mite_transfer(%struct.mite_ring* %23, %struct.comedi_subdevice* %24, %struct.comedi_cmd* %25, i32 16777215) #9, !dbg !9637
  %26 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9638
  %27 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9639
  call void @ni_ao_cmd_set_interrupts(%struct.comedi_device* %26, %struct.comedi_subdevice* %27) #9, !dbg !9640
  %28 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9641
  %ao_needs_arming = getelementptr inbounds %struct.ni_private, %struct.ni_private* %28, i32 0, i32 50, !dbg !9642
  %bf.load = load i16, i16* %ao_needs_arming, align 8, !dbg !9643
  %bf.clear = and i16 %bf.load, -1025, !dbg !9643
  %bf.set = or i16 %bf.clear, 1024, !dbg !9643
  store i16 %bf.set, i16* %ao_needs_arming, align 8, !dbg !9643
  store i32 0, i32* %retval, align 4, !dbg !9644
  br label %return, !dbg !9644

return:                                           ; preds = %if.end, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !9645
  ret i32 %29, !dbg !9645
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_ao_reset(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #2 !dbg !9646 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9647, metadata !DIExpression()), !dbg !9648
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !9649, metadata !DIExpression()), !dbg !9650
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !9651, metadata !DIExpression()), !dbg !9652
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9653
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !9654
  %1 = load i8*, i8** %private, align 8, !dbg !9654
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !9653
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !9652
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9655
  call void @ni_release_ao_mite_channel(%struct.comedi_device* %3) #9, !dbg !9656
  %4 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9657
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %4, i32 0, i32 50, !dbg !9659
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !9659
  %bf.clear = and i16 %bf.load, 1, !dbg !9659
  %bf.cast = zext i16 %bf.clear to i32, !dbg !9659
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !9657
  br i1 %tobool, label %if.then, label %if.end, !dbg !9660

if.then:                                          ; preds = %entry
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9661
  call void @ni_stc_writew(%struct.comedi_device* %5, i32 2, i32 72) #9, !dbg !9662
  br label %if.end, !dbg !9662

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9663
  call void @ni_stc_writew(%struct.comedi_device* %6, i32 32, i32 72) #9, !dbg !9664
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9665
  call void @ni_stc_writew(%struct.comedi_device* %7, i32 8192, i32 9) #9, !dbg !9666
  %8 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9667
  %ao_cmd1 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %8, i32 0, i32 17, !dbg !9668
  store i16 0, i16* %ao_cmd1, align 4, !dbg !9669
  %9 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9670
  %ao_cmd2 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %9, i32 0, i32 18, !dbg !9671
  store i16 0, i16* %ao_cmd2, align 2, !dbg !9672
  %10 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9673
  %ao_mode1 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %10, i32 0, i32 14, !dbg !9674
  store i16 0, i16* %ao_mode1, align 2, !dbg !9675
  %11 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9676
  %ao_mode2 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %11, i32 0, i32 15, !dbg !9677
  store i16 0, i16* %ao_mode2, align 8, !dbg !9678
  %12 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9679
  %is_m_series1 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %12, i32 0, i32 50, !dbg !9681
  %bf.load2 = load i16, i16* %is_m_series1, align 8, !dbg !9681
  %bf.clear3 = and i16 %bf.load2, 1, !dbg !9681
  %bf.cast4 = zext i16 %bf.clear3 to i32, !dbg !9681
  %tobool5 = icmp ne i32 %bf.cast4, 0, !dbg !9679
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !9682

if.then6:                                         ; preds = %if.end
  %13 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9683
  %ao_mode3 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %13, i32 0, i32 16, !dbg !9684
  store i16 1, i16* %ao_mode3, align 2, !dbg !9685
  br label %if.end8, !dbg !9683

if.else:                                          ; preds = %if.end
  %14 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9686
  %ao_mode37 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %14, i32 0, i32 16, !dbg !9687
  store i16 0, i16* %ao_mode37, align 2, !dbg !9688
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then6
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9689
  call void @ni_stc_writew(%struct.comedi_device* %15, i32 0, i32 78) #9, !dbg !9690
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9691
  call void @ni_stc_writew(%struct.comedi_device* %16, i32 0, i32 9) #9, !dbg !9692
  %17 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9693
  call void @ni_stc_writew(%struct.comedi_device* %17, i32 0, i32 5) #9, !dbg !9694
  %18 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9695
  call void @ni_stc_writew(%struct.comedi_device* %18, i32 0, i32 38) #9, !dbg !9696
  %19 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9697
  call void @ni_stc_writew(%struct.comedi_device* %19, i32 0, i32 39) #9, !dbg !9698
  %20 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9699
  call void @ni_stc_writew(%struct.comedi_device* %20, i32 0, i32 86) #9, !dbg !9700
  %21 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9701
  %22 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9702
  %ao_mode39 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %22, i32 0, i32 16, !dbg !9703
  %23 = load i16, i16* %ao_mode39, align 2, !dbg !9703
  %conv = zext i16 %23 to i32, !dbg !9702
  call void @ni_stc_writew(%struct.comedi_device* %21, i32 %conv, i32 70) #9, !dbg !9704
  %24 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9705
  call void @ni_stc_writew(%struct.comedi_device* %24, i32 0, i32 66) #9, !dbg !9706
  %25 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9707
  call void @ni_stc_writew(%struct.comedi_device* %25, i32 0, i32 67) #9, !dbg !9708
  %26 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9709
  call void @ni_set_bits(%struct.comedi_device* %26, i32 75, i32 -1, i32 0) #9, !dbg !9710
  %27 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9711
  call void @ni_stc_writew(%struct.comedi_device* %27, i32 16, i32 78) #9, !dbg !9712
  %28 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9713
  call void @ni_stc_writew(%struct.comedi_device* %28, i32 16280, i32 3) #9, !dbg !9714
  %29 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9715
  %is_6xxx = getelementptr inbounds %struct.ni_private, %struct.ni_private* %29, i32 0, i32 50, !dbg !9717
  %bf.load10 = load i16, i16* %is_6xxx, align 8, !dbg !9717
  %bf.lshr = lshr i16 %bf.load10, 1, !dbg !9717
  %bf.clear11 = and i16 %bf.lshr, 1, !dbg !9717
  %bf.cast12 = zext i16 %bf.clear11 to i32, !dbg !9717
  %tobool13 = icmp ne i32 %bf.cast12, 0, !dbg !9715
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !9718

if.then14:                                        ; preds = %if.end8
  %30 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9719
  %31 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9721
  %n_chan = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %31, i32 0, i32 3, !dbg !9722
  %32 = load i32, i32* %n_chan, align 8, !dbg !9722
  %shl = shl i32 1, %32, !dbg !9723
  %sub = sub i32 %shl, 1, !dbg !9724
  call void @ni_ao_win_outw(%struct.comedi_device* %30, i32 %sub, i32 17) #9, !dbg !9725
  %33 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9726
  call void @ni_ao_win_outw(%struct.comedi_device* %33, i32 1, i32 22) #9, !dbg !9727
  br label %if.end15, !dbg !9728

if.end15:                                         ; preds = %if.then14, %if.end8
  %34 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9729
  call void @ni_stc_writew(%struct.comedi_device* %34, i32 512, i32 72) #9, !dbg !9730
  ret i32 0, !dbg !9731
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_ao_munge(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, i8* %data, i32 %num_bytes, i32 %chan_index) #2 !dbg !9732 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %data.addr = alloca i8*, align 8
  %num_bytes.addr = alloca i32, align 4
  %chan_index.addr = alloca i32, align 4
  %cmd = alloca %struct.comedi_cmd*, align 8
  %nsamples = alloca i32, align 4
  %array = alloca i16*, align 8
  %i = alloca i32, align 4
  %buf = alloca i16, align 2
  %barray = alloca i16*, align 8
  %range = alloca i32, align 4
  %val = alloca i16, align 2
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9733, metadata !DIExpression()), !dbg !9734
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !9735, metadata !DIExpression()), !dbg !9736
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9737, metadata !DIExpression()), !dbg !9738
  store i32 %num_bytes, i32* %num_bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_bytes.addr, metadata !9739, metadata !DIExpression()), !dbg !9740
  store i32 %chan_index, i32* %chan_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chan_index.addr, metadata !9741, metadata !DIExpression()), !dbg !9742
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd, metadata !9743, metadata !DIExpression()), !dbg !9744
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9745
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %0, i32 0, i32 7, !dbg !9746
  %1 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !9746
  %cmd1 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %1, i32 0, i32 17, !dbg !9747
  store %struct.comedi_cmd* %cmd1, %struct.comedi_cmd** %cmd, align 8, !dbg !9744
  call void @llvm.dbg.declare(metadata i32* %nsamples, metadata !9748, metadata !DIExpression()), !dbg !9749
  %2 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9750
  %3 = load i32, i32* %num_bytes.addr, align 4, !dbg !9751
  %call = call i32 @comedi_bytes_to_samples(%struct.comedi_subdevice* %2, i32 %3) #9, !dbg !9752
  store i32 %call, i32* %nsamples, align 4, !dbg !9749
  call void @llvm.dbg.declare(metadata i16** %array, metadata !9753, metadata !DIExpression()), !dbg !9754
  %4 = load i8*, i8** %data.addr, align 8, !dbg !9755
  %5 = bitcast i8* %4 to i16*, !dbg !9755
  store i16* %5, i16** %array, align 8, !dbg !9754
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9756, metadata !DIExpression()), !dbg !9757
  call void @llvm.dbg.declare(metadata i16* %buf, metadata !9758, metadata !DIExpression()), !dbg !9759
  call void @llvm.dbg.declare(metadata i16** %barray, metadata !9760, metadata !DIExpression()), !dbg !9761
  %6 = load i8*, i8** %data.addr, align 8, !dbg !9762
  %7 = bitcast i8* %6 to i16*, !dbg !9762
  store i16* %7, i16** %barray, align 8, !dbg !9761
  store i32 0, i32* %i, align 4, !dbg !9763
  br label %for.cond, !dbg !9765

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !9766
  %9 = load i32, i32* %nsamples, align 4, !dbg !9768
  %cmp = icmp ult i32 %8, %9, !dbg !9769
  br i1 %cmp, label %for.body, label %for.end, !dbg !9770

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %range, metadata !9771, metadata !DIExpression()), !dbg !9773
  %10 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !9774
  %chanlist = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %10, i32 0, i32 12, !dbg !9774
  %11 = load i32*, i32** %chanlist, align 8, !dbg !9774
  %12 = load i32, i32* %chan_index.addr, align 4, !dbg !9774
  %idxprom = zext i32 %12 to i64, !dbg !9774
  %arrayidx = getelementptr i32, i32* %11, i64 %idxprom, !dbg !9774
  %13 = load i32, i32* %arrayidx, align 4, !dbg !9774
  %shr = lshr i32 %13, 16, !dbg !9774
  %and = and i32 %shr, 255, !dbg !9774
  store i32 %and, i32* %range, align 4, !dbg !9773
  call void @llvm.dbg.declare(metadata i16* %val, metadata !9775, metadata !DIExpression()), !dbg !9776
  %14 = load i16*, i16** %array, align 8, !dbg !9777
  %15 = load i32, i32* %i, align 4, !dbg !9778
  %idxprom2 = zext i32 %15 to i64, !dbg !9777
  %arrayidx3 = getelementptr i16, i16* %14, i64 %idxprom2, !dbg !9777
  %16 = load i16, i16* %arrayidx3, align 2, !dbg !9777
  store i16 %16, i16* %val, align 2, !dbg !9776
  %17 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9779
  %18 = load i32, i32* %range, align 4, !dbg !9781
  %call4 = call zeroext i1 @comedi_range_is_bipolar(%struct.comedi_subdevice* %17, i32 %18) #9, !dbg !9782
  br i1 %call4, label %if.then, label %if.end, !dbg !9783

if.then:                                          ; preds = %for.body
  %19 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9784
  %20 = load i16, i16* %val, align 2, !dbg !9785
  %conv = zext i16 %20 to i32, !dbg !9785
  %call5 = call i32 @comedi_offset_munge(%struct.comedi_subdevice* %19, i32 %conv) #9, !dbg !9786
  %conv6 = trunc i32 %call5 to i16, !dbg !9786
  store i16 %conv6, i16* %val, align 2, !dbg !9787
  br label %if.end, !dbg !9788

if.end:                                           ; preds = %if.then, %for.body
  %21 = load i16, i16* %val, align 2, !dbg !9789
  store i16 %21, i16* %buf, align 2, !dbg !9790
  %22 = load i16, i16* %buf, align 2, !dbg !9791
  %23 = load i16*, i16** %barray, align 8, !dbg !9792
  %24 = load i32, i32* %i, align 4, !dbg !9793
  %idxprom7 = zext i32 %24 to i64, !dbg !9792
  %arrayidx8 = getelementptr i16, i16* %23, i64 %idxprom7, !dbg !9792
  store i16 %22, i16* %arrayidx8, align 2, !dbg !9794
  %25 = load i32, i32* %chan_index.addr, align 4, !dbg !9795
  %inc = add i32 %25, 1, !dbg !9795
  store i32 %inc, i32* %chan_index.addr, align 4, !dbg !9795
  %26 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !9796
  %chanlist_len = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %26, i32 0, i32 13, !dbg !9797
  %27 = load i32, i32* %chanlist_len, align 8, !dbg !9797
  %28 = load i32, i32* %chan_index.addr, align 4, !dbg !9798
  %rem = urem i32 %28, %27, !dbg !9798
  store i32 %rem, i32* %chan_index.addr, align 4, !dbg !9798
  br label %for.inc, !dbg !9799

for.inc:                                          ; preds = %if.end
  %29 = load i32, i32* %i, align 4, !dbg !9800
  %inc9 = add i32 %29, 1, !dbg !9800
  store i32 %inc9, i32* %i, align 4, !dbg !9800
  br label %for.cond, !dbg !9801, !llvm.loop !9802

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9804
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @init_ao_67xx(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #2 !dbg !9805 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %i = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9806, metadata !DIExpression()), !dbg !9807
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !9808, metadata !DIExpression()), !dbg !9809
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9810, metadata !DIExpression()), !dbg !9811
  store i32 0, i32* %i, align 4, !dbg !9812
  br label %for.cond, !dbg !9814

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9815
  %1 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9817
  %n_chan = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %1, i32 0, i32 3, !dbg !9818
  %2 = load i32, i32* %n_chan, align 8, !dbg !9818
  %cmp = icmp slt i32 %0, %2, !dbg !9819
  br i1 %cmp, label %for.body, label %for.end, !dbg !9820

for.body:                                         ; preds = %for.cond
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9821
  %4 = load i32, i32* %i, align 4, !dbg !9823
  %shl = shl i32 %4, 8, !dbg !9823
  call void @ni_ao_win_outw(%struct.comedi_device* %3, i32 %shl, i32 24) #9, !dbg !9824
  br label %for.inc, !dbg !9825

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !9826
  %inc = add i32 %5, 1, !dbg !9826
  store i32 %inc, i32* %i, align 4, !dbg !9826
  br label %for.cond, !dbg !9827, !llvm.loop !9828

for.end:                                          ; preds = %for.cond
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9830
  call void @ni_ao_win_outw(%struct.comedi_device* %6, i32 0, i32 20) #9, !dbg !9831
  ret void, !dbg !9832
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_m_series_dio_insn_bits(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !9833 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9834, metadata !DIExpression()), !dbg !9835
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !9836, metadata !DIExpression()), !dbg !9837
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !9838, metadata !DIExpression()), !dbg !9839
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !9840, metadata !DIExpression()), !dbg !9841
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9842
  %1 = load i32*, i32** %data.addr, align 8, !dbg !9844
  %call = call i32 @comedi_dio_update_state(%struct.comedi_subdevice* %0, i32* %1) #9, !dbg !9845
  %tobool = icmp ne i32 %call, 0, !dbg !9845
  br i1 %tobool, label %if.then, label %if.end, !dbg !9846

if.then:                                          ; preds = %entry
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9847
  %3 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9848
  %state = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %3, i32 0, i32 29, !dbg !9849
  %4 = load i32, i32* %state, align 4, !dbg !9849
  call void @ni_writel(%struct.comedi_device* %2, i32 %4, i32 36) #9, !dbg !9850
  br label %if.end, !dbg !9850

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9851
  %call1 = call i32 @ni_readl(%struct.comedi_device* %5, i32 36) #9, !dbg !9852
  %6 = load i32*, i32** %data.addr, align 8, !dbg !9853
  %arrayidx = getelementptr i32, i32* %6, i64 1, !dbg !9853
  store i32 %call1, i32* %arrayidx, align 4, !dbg !9854
  %7 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9855
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %7, i32 0, i32 1, !dbg !9856
  %8 = load i32, i32* %n, align 4, !dbg !9856
  ret i32 %8, !dbg !9857
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_m_series_dio_insn_config(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !9858 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %ret = alloca i32, align 4
  %board = alloca %struct.ni_board_struct*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9859, metadata !DIExpression()), !dbg !9860
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !9861, metadata !DIExpression()), !dbg !9862
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !9863, metadata !DIExpression()), !dbg !9864
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !9865, metadata !DIExpression()), !dbg !9866
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9867, metadata !DIExpression()), !dbg !9868
  %0 = load i32*, i32** %data.addr, align 8, !dbg !9869
  %arrayidx = getelementptr i32, i32* %0, i64 0, !dbg !9869
  %1 = load i32, i32* %arrayidx, align 4, !dbg !9869
  %cmp = icmp eq i32 %1, 5005, !dbg !9871
  br i1 %cmp, label %if.then, label %if.end, !dbg !9872

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ni_board_struct** %board, metadata !9873, metadata !DIExpression()), !dbg !9875
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9876
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %2, i32 0, i32 9, !dbg !9877
  %3 = load i8*, i8** %board_ptr, align 8, !dbg !9877
  %4 = bitcast i8* %3 to %struct.ni_board_struct*, !dbg !9876
  store %struct.ni_board_struct* %4, %struct.ni_board_struct** %board, align 8, !dbg !9875
  %5 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !9878
  %dio_speed = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %5, i32 0, i32 17, !dbg !9879
  %6 = load i32, i32* %dio_speed, align 4, !dbg !9879
  %7 = load i32*, i32** %data.addr, align 8, !dbg !9880
  %arrayidx1 = getelementptr i32, i32* %7, i64 1, !dbg !9880
  store i32 %6, i32* %arrayidx1, align 4, !dbg !9881
  %8 = load i32*, i32** %data.addr, align 8, !dbg !9882
  %arrayidx2 = getelementptr i32, i32* %8, i64 2, !dbg !9882
  store i32 0, i32* %arrayidx2, align 4, !dbg !9883
  store i32 0, i32* %retval, align 4, !dbg !9884
  br label %return, !dbg !9884

if.end:                                           ; preds = %entry
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9885
  %10 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9886
  %11 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9887
  %12 = load i32*, i32** %data.addr, align 8, !dbg !9888
  %call = call i32 @comedi_dio_insn_config(%struct.comedi_device* %9, %struct.comedi_subdevice* %10, %struct.comedi_insn* %11, i32* %12, i32 0) #9, !dbg !9889
  store i32 %call, i32* %ret, align 4, !dbg !9890
  %13 = load i32, i32* %ret, align 4, !dbg !9891
  %tobool = icmp ne i32 %13, 0, !dbg !9891
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !9893

if.then3:                                         ; preds = %if.end
  %14 = load i32, i32* %ret, align 4, !dbg !9894
  store i32 %14, i32* %retval, align 4, !dbg !9895
  br label %return, !dbg !9895

if.end4:                                          ; preds = %if.end
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9896
  %16 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9897
  %io_bits = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %16, i32 0, i32 12, !dbg !9898
  %17 = load i32, i32* %io_bits, align 4, !dbg !9898
  call void @ni_writel(%struct.comedi_device* %15, i32 %17, i32 40) #9, !dbg !9899
  %18 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !9900
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %18, i32 0, i32 1, !dbg !9901
  %19 = load i32, i32* %n, align 4, !dbg !9901
  store i32 %19, i32* %retval, align 4, !dbg !9902
  br label %return, !dbg !9902

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !9903
  ret i32 %20, !dbg !9903
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_cdio_cmdtest(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_cmd* %cmd) #2 !dbg !9904 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %bytes_per_scan = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9905, metadata !DIExpression()), !dbg !9906
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !9907, metadata !DIExpression()), !dbg !9908
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !9909, metadata !DIExpression()), !dbg !9910
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !9911, metadata !DIExpression()), !dbg !9912
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9913
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !9914
  %1 = load i8*, i8** %private, align 8, !dbg !9914
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !9913
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !9912
  call void @llvm.dbg.declare(metadata i32* %bytes_per_scan, metadata !9915, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9917, metadata !DIExpression()), !dbg !9918
  store i32 0, i32* %err, align 4, !dbg !9918
  %3 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9919
  %start_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %3, i32 0, i32 2, !dbg !9920
  %call = call i32 @comedi_check_trigger_src(i32* %start_src, i32 128) #9, !dbg !9921
  %4 = load i32, i32* %err, align 4, !dbg !9922
  %or = or i32 %4, %call, !dbg !9922
  store i32 %or, i32* %err, align 4, !dbg !9922
  %5 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9923
  %scan_begin_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %5, i32 0, i32 4, !dbg !9924
  %call1 = call i32 @comedi_check_trigger_src(i32* %scan_begin_src, i32 64) #9, !dbg !9925
  %6 = load i32, i32* %err, align 4, !dbg !9926
  %or2 = or i32 %6, %call1, !dbg !9926
  store i32 %or2, i32* %err, align 4, !dbg !9926
  %7 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9927
  %convert_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %7, i32 0, i32 6, !dbg !9928
  %call3 = call i32 @comedi_check_trigger_src(i32* %convert_src, i32 2) #9, !dbg !9929
  %8 = load i32, i32* %err, align 4, !dbg !9930
  %or4 = or i32 %8, %call3, !dbg !9930
  store i32 %or4, i32* %err, align 4, !dbg !9930
  %9 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9931
  %scan_end_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %9, i32 0, i32 8, !dbg !9932
  %call5 = call i32 @comedi_check_trigger_src(i32* %scan_end_src, i32 32) #9, !dbg !9933
  %10 = load i32, i32* %err, align 4, !dbg !9934
  %or6 = or i32 %10, %call5, !dbg !9934
  store i32 %or6, i32* %err, align 4, !dbg !9934
  %11 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9935
  %stop_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %11, i32 0, i32 10, !dbg !9936
  %call7 = call i32 @comedi_check_trigger_src(i32* %stop_src, i32 1) #9, !dbg !9937
  %12 = load i32, i32* %err, align 4, !dbg !9938
  %or8 = or i32 %12, %call7, !dbg !9938
  store i32 %or8, i32* %err, align 4, !dbg !9938
  %13 = load i32, i32* %err, align 4, !dbg !9939
  %tobool = icmp ne i32 %13, 0, !dbg !9939
  br i1 %tobool, label %if.then, label %if.end, !dbg !9941

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !9942
  br label %return, !dbg !9942

if.end:                                           ; preds = %entry
  %14 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9943
  %start_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %14, i32 0, i32 3, !dbg !9944
  %call9 = call i32 @comedi_check_trigger_arg_is(i32* %start_arg, i32 0) #9, !dbg !9945
  %15 = load i32, i32* %err, align 4, !dbg !9946
  %or10 = or i32 %15, %call9, !dbg !9946
  store i32 %or10, i32* %err, align 4, !dbg !9946
  %16 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9947
  %scan_begin_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %16, i32 0, i32 5, !dbg !9947
  %17 = load i32, i32* %scan_begin_arg, align 4, !dbg !9947
  %and = and i32 %17, 65535, !dbg !9947
  %18 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !9948
  %routing_tables = getelementptr inbounds %struct.ni_private, %struct.ni_private* %18, i32 0, i32 51, !dbg !9949
  %call11 = call i32 @ni_check_trigger_arg(i32 %and, i32 32951, %struct.ni_route_tables* %routing_tables) #9, !dbg !9950
  %19 = load i32, i32* %err, align 4, !dbg !9951
  %or12 = or i32 %19, %call11, !dbg !9951
  store i32 %or12, i32* %err, align 4, !dbg !9951
  %20 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9952
  %scan_begin_arg13 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %20, i32 0, i32 5, !dbg !9952
  %21 = load i32, i32* %scan_begin_arg13, align 4, !dbg !9952
  %shr = lshr i32 %21, 16, !dbg !9952
  %and14 = and i32 %shr, 255, !dbg !9952
  %cmp = icmp ne i32 %and14, 0, !dbg !9954
  br i1 %cmp, label %if.then19, label %lor.lhs.false, !dbg !9955

lor.lhs.false:                                    ; preds = %if.end
  %22 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9956
  %scan_begin_arg15 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %22, i32 0, i32 5, !dbg !9956
  %23 = load i32, i32* %scan_begin_arg15, align 4, !dbg !9956
  %shr16 = lshr i32 %23, 24, !dbg !9956
  %and17 = and i32 %shr16, 3, !dbg !9956
  %cmp18 = icmp ne i32 %and17, 0, !dbg !9957
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !9958

if.then19:                                        ; preds = %lor.lhs.false, %if.end
  %24 = load i32, i32* %err, align 4, !dbg !9959
  %or20 = or i32 %24, -22, !dbg !9959
  store i32 %or20, i32* %err, align 4, !dbg !9959
  br label %if.end21, !dbg !9960

if.end21:                                         ; preds = %if.then19, %lor.lhs.false
  %25 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9961
  %convert_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %25, i32 0, i32 7, !dbg !9962
  %call22 = call i32 @comedi_check_trigger_arg_is(i32* %convert_arg, i32 0) #9, !dbg !9963
  %26 = load i32, i32* %err, align 4, !dbg !9964
  %or23 = or i32 %26, %call22, !dbg !9964
  store i32 %or23, i32* %err, align 4, !dbg !9964
  %27 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9965
  %scan_end_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %27, i32 0, i32 9, !dbg !9966
  %28 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9967
  %chanlist_len = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %28, i32 0, i32 13, !dbg !9968
  %29 = load i32, i32* %chanlist_len, align 8, !dbg !9968
  %call24 = call i32 @comedi_check_trigger_arg_is(i32* %scan_end_arg, i32 %29) #9, !dbg !9969
  %30 = load i32, i32* %err, align 4, !dbg !9970
  %or25 = or i32 %30, %call24, !dbg !9970
  store i32 %or25, i32* %err, align 4, !dbg !9970
  %31 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9971
  %32 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9972
  %call26 = call i32 @comedi_bytes_per_scan_cmd(%struct.comedi_subdevice* %31, %struct.comedi_cmd* %32) #9, !dbg !9973
  store i32 %call26, i32* %bytes_per_scan, align 4, !dbg !9974
  %33 = load i32, i32* %bytes_per_scan, align 4, !dbg !9975
  %tobool27 = icmp ne i32 %33, 0, !dbg !9975
  br i1 %tobool27, label %if.then28, label %if.end31, !dbg !9977

if.then28:                                        ; preds = %if.end21
  %34 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9978
  %stop_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %34, i32 0, i32 11, !dbg !9980
  %35 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !9981
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %35, i32 0, i32 7, !dbg !9982
  %36 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !9982
  %prealloc_bufsz = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %36, i32 0, i32 1, !dbg !9983
  %37 = load i32, i32* %prealloc_bufsz, align 8, !dbg !9983
  %38 = load i32, i32* %bytes_per_scan, align 4, !dbg !9984
  %div = udiv i32 %37, %38, !dbg !9985
  %call29 = call i32 @comedi_check_trigger_arg_max(i32* %stop_arg, i32 %div) #9, !dbg !9986
  %39 = load i32, i32* %err, align 4, !dbg !9987
  %or30 = or i32 %39, %call29, !dbg !9987
  store i32 %or30, i32* %err, align 4, !dbg !9987
  br label %if.end31, !dbg !9988

if.end31:                                         ; preds = %if.then28, %if.end21
  %40 = load i32, i32* %err, align 4, !dbg !9989
  %tobool32 = icmp ne i32 %40, 0, !dbg !9989
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !9991

if.then33:                                        ; preds = %if.end31
  store i32 3, i32* %retval, align 4, !dbg !9992
  br label %return, !dbg !9992

if.end34:                                         ; preds = %if.end31
  %41 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9993
  %chanlist = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %41, i32 0, i32 12, !dbg !9995
  %42 = load i32*, i32** %chanlist, align 8, !dbg !9995
  %tobool35 = icmp ne i32* %42, null, !dbg !9993
  br i1 %tobool35, label %land.lhs.true, label %if.end41, !dbg !9996

land.lhs.true:                                    ; preds = %if.end34
  %43 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9997
  %chanlist_len36 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %43, i32 0, i32 13, !dbg !9998
  %44 = load i32, i32* %chanlist_len36, align 8, !dbg !9998
  %cmp37 = icmp ugt i32 %44, 0, !dbg !9999
  br i1 %cmp37, label %if.then38, label %if.end41, !dbg !10000

if.then38:                                        ; preds = %land.lhs.true
  %45 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10001
  %46 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10002
  %47 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10003
  %call39 = call i32 @ni_cdio_check_chanlist(%struct.comedi_device* %45, %struct.comedi_subdevice* %46, %struct.comedi_cmd* %47) #9, !dbg !10004
  %48 = load i32, i32* %err, align 4, !dbg !10005
  %or40 = or i32 %48, %call39, !dbg !10005
  store i32 %or40, i32* %err, align 4, !dbg !10005
  br label %if.end41, !dbg !10006

if.end41:                                         ; preds = %if.then38, %land.lhs.true, %if.end34
  %49 = load i32, i32* %err, align 4, !dbg !10007
  %tobool42 = icmp ne i32 %49, 0, !dbg !10007
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !10009

if.then43:                                        ; preds = %if.end41
  store i32 5, i32* %retval, align 4, !dbg !10010
  br label %return, !dbg !10010

if.end44:                                         ; preds = %if.end41
  store i32 0, i32* %retval, align 4, !dbg !10011
  br label %return, !dbg !10011

return:                                           ; preds = %if.end44, %if.then43, %if.then33, %if.then
  %50 = load i32, i32* %retval, align 4, !dbg !10012
  ret i32 %50, !dbg !10012
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_cdio_cmd(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #2 !dbg !10013 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %cmd = alloca %struct.comedi_cmd*, align 8
  %cdo_mode_bits = alloca i32, align 4
  %retval2 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10014, metadata !DIExpression()), !dbg !10015
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !10016, metadata !DIExpression()), !dbg !10017
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !10018, metadata !DIExpression()), !dbg !10019
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10020
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !10021
  %1 = load i8*, i8** %private, align 8, !dbg !10021
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !10020
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !10019
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd, metadata !10022, metadata !DIExpression()), !dbg !10023
  %3 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10024
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %3, i32 0, i32 7, !dbg !10025
  %4 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !10025
  %cmd1 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %4, i32 0, i32 17, !dbg !10026
  store %struct.comedi_cmd* %cmd1, %struct.comedi_cmd** %cmd, align 8, !dbg !10023
  call void @llvm.dbg.declare(metadata i32* %cdo_mode_bits, metadata !10027, metadata !DIExpression()), !dbg !10028
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !10029, metadata !DIExpression()), !dbg !10030
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10031
  call void @ni_writel(%struct.comedi_device* %5, i32 16, i32 548) #9, !dbg !10032
  %6 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !10033
  %scan_begin_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %6, i32 0, i32 5, !dbg !10033
  %7 = load i32, i32* %scan_begin_arg, align 4, !dbg !10033
  %and = and i32 %7, 65535, !dbg !10033
  %8 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10033
  %routing_tables = getelementptr inbounds %struct.ni_private, %struct.ni_private* %8, i32 0, i32 51, !dbg !10033
  %call = call i32 @ni_get_reg_value(i32 %and, i32 32951, %struct.ni_route_tables* %routing_tables) #9, !dbg !10033
  %and3 = and i32 %call, 63, !dbg !10033
  %shl = shl i32 %and3, 0, !dbg !10033
  %conv = sext i32 %shl to i64, !dbg !10033
  %or = or i64 2560, %conv, !dbg !10034
  %conv4 = trunc i64 %or to i32, !dbg !10035
  store i32 %conv4, i32* %cdo_mode_bits, align 4, !dbg !10036
  %9 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !10037
  %scan_begin_arg5 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %9, i32 0, i32 5, !dbg !10039
  %10 = load i32, i32* %scan_begin_arg5, align 4, !dbg !10039
  %and6 = and i32 %10, -2147483648, !dbg !10040
  %tobool = icmp ne i32 %and6, 0, !dbg !10040
  br i1 %tobool, label %if.then, label %if.end, !dbg !10041

if.then:                                          ; preds = %entry
  %11 = load i32, i32* %cdo_mode_bits, align 4, !dbg !10042
  %conv7 = zext i32 %11 to i64, !dbg !10042
  %or8 = or i64 %conv7, 1024, !dbg !10042
  %conv9 = trunc i64 %or8 to i32, !dbg !10042
  store i32 %conv9, i32* %cdo_mode_bits, align 4, !dbg !10042
  br label %if.end, !dbg !10043

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10044
  %13 = load i32, i32* %cdo_mode_bits, align 4, !dbg !10045
  call void @ni_writel(%struct.comedi_device* %12, i32 %13, i32 556) #9, !dbg !10046
  %14 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10047
  %io_bits = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %14, i32 0, i32 12, !dbg !10049
  %15 = load i32, i32* %io_bits, align 4, !dbg !10049
  %tobool10 = icmp ne i32 %15, 0, !dbg !10047
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !10050

if.then11:                                        ; preds = %if.end
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10051
  %17 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10053
  %state = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %17, i32 0, i32 29, !dbg !10054
  %18 = load i32, i32* %state, align 4, !dbg !10054
  call void @ni_writel(%struct.comedi_device* %16, i32 %18, i32 544) #9, !dbg !10055
  %19 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10056
  call void @ni_writel(%struct.comedi_device* %19, i32 524288, i32 548) #9, !dbg !10057
  %20 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10058
  %21 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10059
  %io_bits12 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %21, i32 0, i32 12, !dbg !10060
  %22 = load i32, i32* %io_bits12, align 4, !dbg !10060
  call void @ni_writel(%struct.comedi_device* %20, i32 %22, i32 564) #9, !dbg !10061
  br label %if.end13, !dbg !10062

if.else:                                          ; preds = %if.end
  %23 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10063
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %23, i32 0, i32 4, !dbg !10063
  %24 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !10063
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %24, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.105, i64 0, i64 0)) #11, !dbg !10063
  store i32 -5, i32* %retval, align 4, !dbg !10065
  br label %return, !dbg !10065

if.end13:                                         ; preds = %if.then11
  %25 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10066
  %call14 = call i32 @ni_request_cdo_mite_channel(%struct.comedi_device* %25) #9, !dbg !10067
  store i32 %call14, i32* %retval2, align 4, !dbg !10068
  %26 = load i32, i32* %retval2, align 4, !dbg !10069
  %cmp = icmp slt i32 %26, 0, !dbg !10071
  br i1 %cmp, label %if.then16, label %if.end17, !dbg !10072

if.then16:                                        ; preds = %if.end13
  %27 = load i32, i32* %retval2, align 4, !dbg !10073
  store i32 %27, i32* %retval, align 4, !dbg !10074
  br label %return, !dbg !10074

if.end17:                                         ; preds = %if.end13
  %28 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10075
  %cdo_mite_ring = getelementptr inbounds %struct.ni_private, %struct.ni_private* %28, i32 0, i32 48, !dbg !10076
  %29 = load %struct.mite_ring*, %struct.mite_ring** %cdo_mite_ring, align 8, !dbg !10076
  %30 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10077
  %31 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !10078
  %32 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10079
  %async18 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %32, i32 0, i32 7, !dbg !10080
  %33 = load %struct.comedi_async*, %struct.comedi_async** %async18, align 8, !dbg !10080
  %prealloc_bufsz = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %33, i32 0, i32 1, !dbg !10081
  %34 = load i32, i32* %prealloc_bufsz, align 8, !dbg !10081
  %35 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10082
  %call19 = call i32 @comedi_bytes_per_scan(%struct.comedi_subdevice* %35) #9, !dbg !10083
  %div = udiv i32 %34, %call19, !dbg !10084
  call void @ni_cmd_set_mite_transfer(%struct.mite_ring* %29, %struct.comedi_subdevice* %30, %struct.comedi_cmd* %31, i32 %div) #9, !dbg !10085
  %36 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10086
  %async20 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %36, i32 0, i32 7, !dbg !10087
  %37 = load %struct.comedi_async*, %struct.comedi_async** %async20, align 8, !dbg !10087
  %inttrig = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %37, i32 0, i32 20, !dbg !10088
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)* @ni_cdo_inttrig, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)** %inttrig, align 8, !dbg !10089
  store i32 0, i32* %retval, align 4, !dbg !10090
  br label %return, !dbg !10090

return:                                           ; preds = %if.end17, %if.then16, %if.else
  %38 = load i32, i32* %retval, align 4, !dbg !10091
  ret i32 %38, !dbg !10091
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_cdio_cancel(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #2 !dbg !10092 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10093, metadata !DIExpression()), !dbg !10094
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !10095, metadata !DIExpression()), !dbg !10096
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10097
  call void @ni_writel(%struct.comedi_device* %0, i32 133249, i32 548) #9, !dbg !10098
  %1 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10099
  call void @ni_writel(%struct.comedi_device* %1, i32 0, i32 564) #9, !dbg !10100
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10101
  call void @ni_release_cdo_mite_channel(%struct.comedi_device* %2) #9, !dbg !10102
  ret i32 0, !dbg !10103
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_dio_insn_bits(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !10104 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10105, metadata !DIExpression()), !dbg !10106
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !10107, metadata !DIExpression()), !dbg !10108
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !10109, metadata !DIExpression()), !dbg !10110
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !10111, metadata !DIExpression()), !dbg !10112
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !10113, metadata !DIExpression()), !dbg !10114
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10115
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !10116
  %1 = load i8*, i8** %private, align 8, !dbg !10116
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !10115
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !10114
  %3 = load i32*, i32** %data.addr, align 8, !dbg !10117
  %arrayidx = getelementptr i32, i32* %3, i64 0, !dbg !10117
  %4 = load i32, i32* %arrayidx, align 4, !dbg !10117
  %conv = zext i32 %4 to i64, !dbg !10117
  %and = and i64 %conv, 17, !dbg !10119
  %tobool = icmp ne i64 %and, 0, !dbg !10119
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10120

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10121
  %serial_interval_ns = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 22, !dbg !10122
  %6 = load i64, i64* %serial_interval_ns, align 8, !dbg !10122
  %tobool1 = icmp ne i64 %6, 0, !dbg !10121
  br i1 %tobool1, label %if.then, label %if.end, !dbg !10123

if.then:                                          ; preds = %land.lhs.true
  store i32 -16, i32* %retval, align 4, !dbg !10124
  br label %return, !dbg !10124

if.end:                                           ; preds = %land.lhs.true, %entry
  %7 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10125
  %8 = load i32*, i32** %data.addr, align 8, !dbg !10127
  %call = call i32 @comedi_dio_update_state(%struct.comedi_subdevice* %7, i32* %8) #9, !dbg !10128
  %tobool2 = icmp ne i32 %call, 0, !dbg !10128
  br i1 %tobool2, label %if.then3, label %if.end13, !dbg !10129

if.then3:                                         ; preds = %if.end
  %9 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10130
  %dio_output = getelementptr inbounds %struct.ni_private, %struct.ni_private* %9, i32 0, i32 0, !dbg !10132
  %10 = load i16, i16* %dio_output, align 8, !dbg !10133
  %conv4 = zext i16 %10 to i32, !dbg !10133
  %and5 = and i32 %conv4, -256, !dbg !10133
  %conv6 = trunc i32 %and5 to i16, !dbg !10133
  store i16 %conv6, i16* %dio_output, align 8, !dbg !10133
  %11 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10134
  %state = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %11, i32 0, i32 29, !dbg !10134
  %12 = load i32, i32* %state, align 4, !dbg !10134
  %and7 = and i32 %12, 255, !dbg !10134
  %13 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10135
  %dio_output8 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %13, i32 0, i32 0, !dbg !10136
  %14 = load i16, i16* %dio_output8, align 8, !dbg !10137
  %conv9 = zext i16 %14 to i32, !dbg !10137
  %or = or i32 %conv9, %and7, !dbg !10137
  %conv10 = trunc i32 %or to i16, !dbg !10137
  store i16 %conv10, i16* %dio_output8, align 8, !dbg !10137
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10138
  %16 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10139
  %dio_output11 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %16, i32 0, i32 0, !dbg !10140
  %17 = load i16, i16* %dio_output11, align 8, !dbg !10140
  %conv12 = zext i16 %17 to i32, !dbg !10139
  call void @ni_stc_writew(%struct.comedi_device* %15, i32 %conv12, i32 10) #9, !dbg !10141
  br label %if.end13, !dbg !10142

if.end13:                                         ; preds = %if.then3, %if.end
  %18 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10143
  %call14 = call i32 @ni_stc_readw(%struct.comedi_device* %18, i32 7) #9, !dbg !10144
  %19 = load i32*, i32** %data.addr, align 8, !dbg !10145
  %arrayidx15 = getelementptr i32, i32* %19, i64 1, !dbg !10145
  store i32 %call14, i32* %arrayidx15, align 4, !dbg !10146
  %20 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10147
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %20, i32 0, i32 1, !dbg !10148
  %21 = load i32, i32* %n, align 4, !dbg !10148
  store i32 %21, i32* %retval, align 4, !dbg !10149
  br label %return, !dbg !10149

return:                                           ; preds = %if.end13, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !10150
  ret i32 %22, !dbg !10150
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_dio_insn_config(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !10151 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %ret = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10152, metadata !DIExpression()), !dbg !10153
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !10154, metadata !DIExpression()), !dbg !10155
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !10156, metadata !DIExpression()), !dbg !10157
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !10158, metadata !DIExpression()), !dbg !10159
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !10160, metadata !DIExpression()), !dbg !10161
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10162
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !10163
  %1 = load i8*, i8** %private, align 8, !dbg !10163
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !10162
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !10161
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10164, metadata !DIExpression()), !dbg !10165
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10166
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10167
  %5 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10168
  %6 = load i32*, i32** %data.addr, align 8, !dbg !10169
  %call = call i32 @comedi_dio_insn_config(%struct.comedi_device* %3, %struct.comedi_subdevice* %4, %struct.comedi_insn* %5, i32* %6, i32 0) #9, !dbg !10170
  store i32 %call, i32* %ret, align 4, !dbg !10171
  %7 = load i32, i32* %ret, align 4, !dbg !10172
  %tobool = icmp ne i32 %7, 0, !dbg !10172
  br i1 %tobool, label %if.then, label %if.end, !dbg !10174

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %ret, align 4, !dbg !10175
  store i32 %8, i32* %retval, align 4, !dbg !10176
  br label %return, !dbg !10176

if.end:                                           ; preds = %entry
  %9 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10177
  %dio_control = getelementptr inbounds %struct.ni_private, %struct.ni_private* %9, i32 0, i32 1, !dbg !10178
  %10 = load i16, i16* %dio_control, align 2, !dbg !10179
  %conv = zext i16 %10 to i32, !dbg !10179
  %and = and i32 %conv, -256, !dbg !10179
  %conv1 = trunc i32 %and to i16, !dbg !10179
  store i16 %conv1, i16* %dio_control, align 2, !dbg !10179
  %11 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10180
  %io_bits = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %11, i32 0, i32 12, !dbg !10180
  %12 = load i32, i32* %io_bits, align 4, !dbg !10180
  %and2 = and i32 %12, 255, !dbg !10180
  %13 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10181
  %dio_control3 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %13, i32 0, i32 1, !dbg !10182
  %14 = load i16, i16* %dio_control3, align 2, !dbg !10183
  %conv4 = zext i16 %14 to i32, !dbg !10183
  %or = or i32 %conv4, %and2, !dbg !10183
  %conv5 = trunc i32 %or to i16, !dbg !10183
  store i16 %conv5, i16* %dio_control3, align 2, !dbg !10183
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10184
  %16 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10185
  %dio_control6 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %16, i32 0, i32 1, !dbg !10186
  %17 = load i16, i16* %dio_control6, align 2, !dbg !10186
  %conv7 = zext i16 %17 to i32, !dbg !10185
  call void @ni_stc_writew(%struct.comedi_device* %15, i32 %conv7, i32 11) #9, !dbg !10187
  %18 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10188
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %18, i32 0, i32 1, !dbg !10189
  %19 = load i32, i32* %n, align 4, !dbg !10189
  store i32 %19, i32* %retval, align 4, !dbg !10190
  br label %return, !dbg !10190

return:                                           ; preds = %if.end, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !10191
  ret i32 %20, !dbg !10191
}

; Function Attrs: noredzone
declare dso_local i32 @subdev_8255_init(%struct.comedi_device*, %struct.comedi_subdevice*, i32 (%struct.comedi_device*, i32, i32, i32, i64)*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_8255_callback(%struct.comedi_device* %dev, i32 %dir, i32 %port, i32 %data, i64 %iobase) #2 !dbg !10192 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %dir.addr = alloca i32, align 4
  %port.addr = alloca i32, align 4
  %data.addr = alloca i32, align 4
  %iobase.addr = alloca i64, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10195, metadata !DIExpression()), !dbg !10196
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !10197, metadata !DIExpression()), !dbg !10198
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !10199, metadata !DIExpression()), !dbg !10200
  store i32 %data, i32* %data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data.addr, metadata !10201, metadata !DIExpression()), !dbg !10202
  store i64 %iobase, i64* %iobase.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %iobase.addr, metadata !10203, metadata !DIExpression()), !dbg !10204
  %0 = load i32, i32* %dir.addr, align 4, !dbg !10205
  %tobool = icmp ne i32 %0, 0, !dbg !10205
  br i1 %tobool, label %if.then, label %if.end, !dbg !10207

if.then:                                          ; preds = %entry
  %1 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10208
  %2 = load i32, i32* %data.addr, align 4, !dbg !10210
  %3 = load i64, i64* %iobase.addr, align 8, !dbg !10211
  %4 = load i32, i32* %port.addr, align 4, !dbg !10212
  %mul = mul i32 2, %4, !dbg !10213
  %conv = sext i32 %mul to i64, !dbg !10214
  %add = add i64 %3, %conv, !dbg !10215
  %conv1 = trunc i64 %add to i32, !dbg !10211
  call void @ni_writeb(%struct.comedi_device* %1, i32 %2, i32 %conv1) #9, !dbg !10216
  store i32 0, i32* %retval, align 4, !dbg !10217
  br label %return, !dbg !10217

if.end:                                           ; preds = %entry
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10218
  %6 = load i64, i64* %iobase.addr, align 8, !dbg !10219
  %7 = load i32, i32* %port.addr, align 4, !dbg !10220
  %mul2 = mul i32 2, %7, !dbg !10221
  %conv3 = sext i32 %mul2 to i64, !dbg !10222
  %add4 = add i64 %6, %conv3, !dbg !10223
  %conv5 = trunc i64 %add4 to i32, !dbg !10219
  %call = call i32 @ni_readb(%struct.comedi_device* %5, i32 %conv5) #9, !dbg !10224
  store i32 %call, i32* %retval, align 4, !dbg !10225
  br label %return, !dbg !10225

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !10226
  ret i32 %8, !dbg !10226
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_m_series_pwm_config(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !10227 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %up_count = alloca i32, align 4
  %down_count = alloca i32, align 4
  %__x = alloca i32, align 4
  %__d = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__x17 = alloca i32, align 4
  %__d19 = alloca i32, align 4
  %tmp21 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10228, metadata !DIExpression()), !dbg !10229
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !10230, metadata !DIExpression()), !dbg !10231
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !10232, metadata !DIExpression()), !dbg !10233
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !10234, metadata !DIExpression()), !dbg !10235
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !10236, metadata !DIExpression()), !dbg !10237
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10238
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !10239
  %1 = load i8*, i8** %private, align 8, !dbg !10239
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !10238
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !10237
  call void @llvm.dbg.declare(metadata i32* %up_count, metadata !10240, metadata !DIExpression()), !dbg !10241
  call void @llvm.dbg.declare(metadata i32* %down_count, metadata !10242, metadata !DIExpression()), !dbg !10243
  %3 = load i32*, i32** %data.addr, align 8, !dbg !10244
  %arrayidx = getelementptr i32, i32* %3, i64 0, !dbg !10244
  %4 = load i32, i32* %arrayidx, align 4, !dbg !10244
  switch i32 %4, label %sw.default54 [
    i32 29, label %sw.bb
    i32 30, label %sw.bb53
  ], !dbg !10245

sw.bb:                                            ; preds = %entry
  %5 = load i32*, i32** %data.addr, align 8, !dbg !10246
  %arrayidx1 = getelementptr i32, i32* %5, i64 1, !dbg !10246
  %6 = load i32, i32* %arrayidx1, align 4, !dbg !10246
  switch i32 %6, label %sw.default [
    i32 0, label %sw.bb2
    i32 65536, label %sw.bb5
    i32 131072, label %sw.bb9
  ], !dbg !10248

sw.bb2:                                           ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !10249, metadata !DIExpression()), !dbg !10252
  %7 = load i32*, i32** %data.addr, align 8, !dbg !10252
  %arrayidx3 = getelementptr i32, i32* %7, i64 2, !dbg !10252
  %8 = load i32, i32* %arrayidx3, align 4, !dbg !10252
  store i32 %8, i32* %__x, align 4, !dbg !10252
  call void @llvm.dbg.declare(metadata i32* %__d, metadata !10253, metadata !DIExpression()), !dbg !10252
  %9 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10252
  %clock_ns = getelementptr inbounds %struct.ni_private, %struct.ni_private* %9, i32 0, i32 36, !dbg !10252
  %10 = load i32, i32* %clock_ns, align 4, !dbg !10252
  store i32 %10, i32* %__d, align 4, !dbg !10252
  %11 = load i32, i32* %__x, align 4, !dbg !10252
  %12 = load i32, i32* %__d, align 4, !dbg !10252
  %div = udiv i32 %12, 2, !dbg !10252
  %add = add i32 %11, %div, !dbg !10252
  %13 = load i32, i32* %__d, align 4, !dbg !10252
  %div4 = udiv i32 %add, %13, !dbg !10252
  store i32 %div4, i32* %tmp, align 4, !dbg !10252
  %14 = load i32, i32* %tmp, align 4, !dbg !10252
  store i32 %14, i32* %up_count, align 4, !dbg !10254
  br label %sw.epilog, !dbg !10255

sw.bb5:                                           ; preds = %sw.bb
  %15 = load i32*, i32** %data.addr, align 8, !dbg !10256
  %arrayidx6 = getelementptr i32, i32* %15, i64 2, !dbg !10256
  %16 = load i32, i32* %arrayidx6, align 4, !dbg !10256
  %17 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10257
  %clock_ns7 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %17, i32 0, i32 36, !dbg !10258
  %18 = load i32, i32* %clock_ns7, align 4, !dbg !10258
  %div8 = udiv i32 %16, %18, !dbg !10259
  store i32 %div8, i32* %up_count, align 4, !dbg !10260
  br label %sw.epilog, !dbg !10261

sw.bb9:                                           ; preds = %sw.bb
  %19 = load i32*, i32** %data.addr, align 8, !dbg !10262
  %arrayidx10 = getelementptr i32, i32* %19, i64 2, !dbg !10262
  %20 = load i32, i32* %arrayidx10, align 4, !dbg !10262
  %21 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10262
  %clock_ns11 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %21, i32 0, i32 36, !dbg !10262
  %22 = load i32, i32* %clock_ns11, align 4, !dbg !10262
  %add12 = add i32 %20, %22, !dbg !10262
  %sub = sub i32 %add12, 1, !dbg !10262
  %23 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10262
  %clock_ns13 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %23, i32 0, i32 36, !dbg !10262
  %24 = load i32, i32* %clock_ns13, align 4, !dbg !10262
  %div14 = udiv i32 %sub, %24, !dbg !10262
  store i32 %div14, i32* %up_count, align 4, !dbg !10263
  br label %sw.epilog, !dbg !10264

sw.default:                                       ; preds = %sw.bb
  store i32 -22, i32* %retval, align 4, !dbg !10265
  br label %return, !dbg !10265

sw.epilog:                                        ; preds = %sw.bb9, %sw.bb5, %sw.bb2
  %25 = load i32*, i32** %data.addr, align 8, !dbg !10266
  %arrayidx15 = getelementptr i32, i32* %25, i64 3, !dbg !10266
  %26 = load i32, i32* %arrayidx15, align 4, !dbg !10266
  switch i32 %26, label %sw.default36 [
    i32 0, label %sw.bb16
    i32 65536, label %sw.bb25
    i32 131072, label %sw.bb29
  ], !dbg !10267

sw.bb16:                                          ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata i32* %__x17, metadata !10268, metadata !DIExpression()), !dbg !10271
  %27 = load i32*, i32** %data.addr, align 8, !dbg !10271
  %arrayidx18 = getelementptr i32, i32* %27, i64 4, !dbg !10271
  %28 = load i32, i32* %arrayidx18, align 4, !dbg !10271
  store i32 %28, i32* %__x17, align 4, !dbg !10271
  call void @llvm.dbg.declare(metadata i32* %__d19, metadata !10272, metadata !DIExpression()), !dbg !10271
  %29 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10271
  %clock_ns20 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %29, i32 0, i32 36, !dbg !10271
  %30 = load i32, i32* %clock_ns20, align 4, !dbg !10271
  store i32 %30, i32* %__d19, align 4, !dbg !10271
  %31 = load i32, i32* %__x17, align 4, !dbg !10271
  %32 = load i32, i32* %__d19, align 4, !dbg !10271
  %div22 = udiv i32 %32, 2, !dbg !10271
  %add23 = add i32 %31, %div22, !dbg !10271
  %33 = load i32, i32* %__d19, align 4, !dbg !10271
  %div24 = udiv i32 %add23, %33, !dbg !10271
  store i32 %div24, i32* %tmp21, align 4, !dbg !10271
  %34 = load i32, i32* %tmp21, align 4, !dbg !10271
  store i32 %34, i32* %down_count, align 4, !dbg !10273
  br label %sw.epilog37, !dbg !10274

sw.bb25:                                          ; preds = %sw.epilog
  %35 = load i32*, i32** %data.addr, align 8, !dbg !10275
  %arrayidx26 = getelementptr i32, i32* %35, i64 4, !dbg !10275
  %36 = load i32, i32* %arrayidx26, align 4, !dbg !10275
  %37 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10276
  %clock_ns27 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %37, i32 0, i32 36, !dbg !10277
  %38 = load i32, i32* %clock_ns27, align 4, !dbg !10277
  %div28 = udiv i32 %36, %38, !dbg !10278
  store i32 %div28, i32* %down_count, align 4, !dbg !10279
  br label %sw.epilog37, !dbg !10280

sw.bb29:                                          ; preds = %sw.epilog
  %39 = load i32*, i32** %data.addr, align 8, !dbg !10281
  %arrayidx30 = getelementptr i32, i32* %39, i64 4, !dbg !10281
  %40 = load i32, i32* %arrayidx30, align 4, !dbg !10281
  %41 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10281
  %clock_ns31 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %41, i32 0, i32 36, !dbg !10281
  %42 = load i32, i32* %clock_ns31, align 4, !dbg !10281
  %add32 = add i32 %40, %42, !dbg !10281
  %sub33 = sub i32 %add32, 1, !dbg !10281
  %43 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10281
  %clock_ns34 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %43, i32 0, i32 36, !dbg !10281
  %44 = load i32, i32* %clock_ns34, align 4, !dbg !10281
  %div35 = udiv i32 %sub33, %44, !dbg !10281
  store i32 %div35, i32* %down_count, align 4, !dbg !10282
  br label %sw.epilog37, !dbg !10283

sw.default36:                                     ; preds = %sw.epilog
  store i32 -22, i32* %retval, align 4, !dbg !10284
  br label %return, !dbg !10284

sw.epilog37:                                      ; preds = %sw.bb29, %sw.bb25, %sw.bb16
  %45 = load i32, i32* %up_count, align 4, !dbg !10285
  %46 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10287
  %clock_ns38 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %46, i32 0, i32 36, !dbg !10288
  %47 = load i32, i32* %clock_ns38, align 4, !dbg !10288
  %mul = mul i32 %45, %47, !dbg !10289
  %48 = load i32*, i32** %data.addr, align 8, !dbg !10290
  %arrayidx39 = getelementptr i32, i32* %48, i64 2, !dbg !10290
  %49 = load i32, i32* %arrayidx39, align 4, !dbg !10290
  %cmp = icmp ne i32 %mul, %49, !dbg !10291
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10292

lor.lhs.false:                                    ; preds = %sw.epilog37
  %50 = load i32, i32* %down_count, align 4, !dbg !10293
  %51 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10294
  %clock_ns40 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %51, i32 0, i32 36, !dbg !10295
  %52 = load i32, i32* %clock_ns40, align 4, !dbg !10295
  %mul41 = mul i32 %50, %52, !dbg !10296
  %53 = load i32*, i32** %data.addr, align 8, !dbg !10297
  %arrayidx42 = getelementptr i32, i32* %53, i64 4, !dbg !10297
  %54 = load i32, i32* %arrayidx42, align 4, !dbg !10297
  %cmp43 = icmp ne i32 %mul41, %54, !dbg !10298
  br i1 %cmp43, label %if.then, label %if.end, !dbg !10299

if.then:                                          ; preds = %lor.lhs.false, %sw.epilog37
  %55 = load i32, i32* %up_count, align 4, !dbg !10300
  %56 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10302
  %clock_ns44 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %56, i32 0, i32 36, !dbg !10303
  %57 = load i32, i32* %clock_ns44, align 4, !dbg !10303
  %mul45 = mul i32 %55, %57, !dbg !10304
  %58 = load i32*, i32** %data.addr, align 8, !dbg !10305
  %arrayidx46 = getelementptr i32, i32* %58, i64 2, !dbg !10305
  store i32 %mul45, i32* %arrayidx46, align 4, !dbg !10306
  %59 = load i32, i32* %down_count, align 4, !dbg !10307
  %60 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10308
  %clock_ns47 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %60, i32 0, i32 36, !dbg !10309
  %61 = load i32, i32* %clock_ns47, align 4, !dbg !10309
  %mul48 = mul i32 %59, %61, !dbg !10310
  %62 = load i32*, i32** %data.addr, align 8, !dbg !10311
  %arrayidx49 = getelementptr i32, i32* %62, i64 4, !dbg !10311
  store i32 %mul48, i32* %arrayidx49, align 4, !dbg !10312
  store i32 -11, i32* %retval, align 4, !dbg !10313
  br label %return, !dbg !10313

if.end:                                           ; preds = %lor.lhs.false
  %63 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10314
  %64 = load i32, i32* %up_count, align 4, !dbg !10315
  %and = and i32 %64, 65535, !dbg !10315
  %shl = shl i32 %and, 16, !dbg !10315
  %65 = load i32, i32* %down_count, align 4, !dbg !10316
  %and50 = and i32 %65, 65535, !dbg !10316
  %shl51 = shl i32 %and50, 0, !dbg !10316
  %or = or i32 %shl, %shl51, !dbg !10317
  call void @ni_writel(%struct.comedi_device* %63, i32 %or, i32 64) #9, !dbg !10318
  %66 = load i32, i32* %up_count, align 4, !dbg !10319
  %conv = trunc i32 %66 to i16, !dbg !10319
  %67 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10320
  %pwm_up_count = getelementptr inbounds %struct.ni_private, %struct.ni_private* %67, i32 0, i32 38, !dbg !10321
  store i16 %conv, i16* %pwm_up_count, align 4, !dbg !10322
  %68 = load i32, i32* %down_count, align 4, !dbg !10323
  %conv52 = trunc i32 %68 to i16, !dbg !10323
  %69 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10324
  %pwm_down_count = getelementptr inbounds %struct.ni_private, %struct.ni_private* %69, i32 0, i32 39, !dbg !10325
  store i16 %conv52, i16* %pwm_down_count, align 2, !dbg !10326
  store i32 5, i32* %retval, align 4, !dbg !10327
  br label %return, !dbg !10327

sw.bb53:                                          ; preds = %entry
  %70 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10328
  %71 = load i32*, i32** %data.addr, align 8, !dbg !10329
  %call = call i32 @ni_get_pwm_config(%struct.comedi_device* %70, i32* %71) #9, !dbg !10330
  store i32 %call, i32* %retval, align 4, !dbg !10331
  br label %return, !dbg !10331

sw.default54:                                     ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10332
  br label %return, !dbg !10332

return:                                           ; preds = %sw.default54, %sw.bb53, %if.end, %if.then, %sw.default36, %sw.default
  %72 = load i32, i32* %retval, align 4, !dbg !10333
  ret i32 %72, !dbg !10333
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_6143_pwm_config(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !10334 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %up_count = alloca i32, align 4
  %down_count = alloca i32, align 4
  %__x = alloca i32, align 4
  %__d = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__x17 = alloca i32, align 4
  %__d19 = alloca i32, align 4
  %tmp21 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10335, metadata !DIExpression()), !dbg !10336
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !10337, metadata !DIExpression()), !dbg !10338
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !10339, metadata !DIExpression()), !dbg !10340
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !10341, metadata !DIExpression()), !dbg !10342
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !10343, metadata !DIExpression()), !dbg !10344
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10345
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !10346
  %1 = load i8*, i8** %private, align 8, !dbg !10346
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !10345
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !10344
  call void @llvm.dbg.declare(metadata i32* %up_count, metadata !10347, metadata !DIExpression()), !dbg !10348
  call void @llvm.dbg.declare(metadata i32* %down_count, metadata !10349, metadata !DIExpression()), !dbg !10350
  %3 = load i32*, i32** %data.addr, align 8, !dbg !10351
  %arrayidx = getelementptr i32, i32* %3, i64 0, !dbg !10351
  %4 = load i32, i32* %arrayidx, align 4, !dbg !10351
  switch i32 %4, label %sw.default52 [
    i32 29, label %sw.bb
    i32 30, label %sw.bb51
  ], !dbg !10352

sw.bb:                                            ; preds = %entry
  %5 = load i32*, i32** %data.addr, align 8, !dbg !10353
  %arrayidx1 = getelementptr i32, i32* %5, i64 1, !dbg !10353
  %6 = load i32, i32* %arrayidx1, align 4, !dbg !10353
  switch i32 %6, label %sw.default [
    i32 0, label %sw.bb2
    i32 65536, label %sw.bb5
    i32 131072, label %sw.bb9
  ], !dbg !10355

sw.bb2:                                           ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !10356, metadata !DIExpression()), !dbg !10359
  %7 = load i32*, i32** %data.addr, align 8, !dbg !10359
  %arrayidx3 = getelementptr i32, i32* %7, i64 2, !dbg !10359
  %8 = load i32, i32* %arrayidx3, align 4, !dbg !10359
  store i32 %8, i32* %__x, align 4, !dbg !10359
  call void @llvm.dbg.declare(metadata i32* %__d, metadata !10360, metadata !DIExpression()), !dbg !10359
  %9 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10359
  %clock_ns = getelementptr inbounds %struct.ni_private, %struct.ni_private* %9, i32 0, i32 36, !dbg !10359
  %10 = load i32, i32* %clock_ns, align 4, !dbg !10359
  store i32 %10, i32* %__d, align 4, !dbg !10359
  %11 = load i32, i32* %__x, align 4, !dbg !10359
  %12 = load i32, i32* %__d, align 4, !dbg !10359
  %div = udiv i32 %12, 2, !dbg !10359
  %add = add i32 %11, %div, !dbg !10359
  %13 = load i32, i32* %__d, align 4, !dbg !10359
  %div4 = udiv i32 %add, %13, !dbg !10359
  store i32 %div4, i32* %tmp, align 4, !dbg !10359
  %14 = load i32, i32* %tmp, align 4, !dbg !10359
  store i32 %14, i32* %up_count, align 4, !dbg !10361
  br label %sw.epilog, !dbg !10362

sw.bb5:                                           ; preds = %sw.bb
  %15 = load i32*, i32** %data.addr, align 8, !dbg !10363
  %arrayidx6 = getelementptr i32, i32* %15, i64 2, !dbg !10363
  %16 = load i32, i32* %arrayidx6, align 4, !dbg !10363
  %17 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10364
  %clock_ns7 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %17, i32 0, i32 36, !dbg !10365
  %18 = load i32, i32* %clock_ns7, align 4, !dbg !10365
  %div8 = udiv i32 %16, %18, !dbg !10366
  store i32 %div8, i32* %up_count, align 4, !dbg !10367
  br label %sw.epilog, !dbg !10368

sw.bb9:                                           ; preds = %sw.bb
  %19 = load i32*, i32** %data.addr, align 8, !dbg !10369
  %arrayidx10 = getelementptr i32, i32* %19, i64 2, !dbg !10369
  %20 = load i32, i32* %arrayidx10, align 4, !dbg !10369
  %21 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10369
  %clock_ns11 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %21, i32 0, i32 36, !dbg !10369
  %22 = load i32, i32* %clock_ns11, align 4, !dbg !10369
  %add12 = add i32 %20, %22, !dbg !10369
  %sub = sub i32 %add12, 1, !dbg !10369
  %23 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10369
  %clock_ns13 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %23, i32 0, i32 36, !dbg !10369
  %24 = load i32, i32* %clock_ns13, align 4, !dbg !10369
  %div14 = udiv i32 %sub, %24, !dbg !10369
  store i32 %div14, i32* %up_count, align 4, !dbg !10370
  br label %sw.epilog, !dbg !10371

sw.default:                                       ; preds = %sw.bb
  store i32 -22, i32* %retval, align 4, !dbg !10372
  br label %return, !dbg !10372

sw.epilog:                                        ; preds = %sw.bb9, %sw.bb5, %sw.bb2
  %25 = load i32*, i32** %data.addr, align 8, !dbg !10373
  %arrayidx15 = getelementptr i32, i32* %25, i64 3, !dbg !10373
  %26 = load i32, i32* %arrayidx15, align 4, !dbg !10373
  switch i32 %26, label %sw.default36 [
    i32 0, label %sw.bb16
    i32 65536, label %sw.bb25
    i32 131072, label %sw.bb29
  ], !dbg !10374

sw.bb16:                                          ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata i32* %__x17, metadata !10375, metadata !DIExpression()), !dbg !10378
  %27 = load i32*, i32** %data.addr, align 8, !dbg !10378
  %arrayidx18 = getelementptr i32, i32* %27, i64 4, !dbg !10378
  %28 = load i32, i32* %arrayidx18, align 4, !dbg !10378
  store i32 %28, i32* %__x17, align 4, !dbg !10378
  call void @llvm.dbg.declare(metadata i32* %__d19, metadata !10379, metadata !DIExpression()), !dbg !10378
  %29 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10378
  %clock_ns20 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %29, i32 0, i32 36, !dbg !10378
  %30 = load i32, i32* %clock_ns20, align 4, !dbg !10378
  store i32 %30, i32* %__d19, align 4, !dbg !10378
  %31 = load i32, i32* %__x17, align 4, !dbg !10378
  %32 = load i32, i32* %__d19, align 4, !dbg !10378
  %div22 = udiv i32 %32, 2, !dbg !10378
  %add23 = add i32 %31, %div22, !dbg !10378
  %33 = load i32, i32* %__d19, align 4, !dbg !10378
  %div24 = udiv i32 %add23, %33, !dbg !10378
  store i32 %div24, i32* %tmp21, align 4, !dbg !10378
  %34 = load i32, i32* %tmp21, align 4, !dbg !10378
  store i32 %34, i32* %down_count, align 4, !dbg !10380
  br label %sw.epilog37, !dbg !10381

sw.bb25:                                          ; preds = %sw.epilog
  %35 = load i32*, i32** %data.addr, align 8, !dbg !10382
  %arrayidx26 = getelementptr i32, i32* %35, i64 4, !dbg !10382
  %36 = load i32, i32* %arrayidx26, align 4, !dbg !10382
  %37 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10383
  %clock_ns27 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %37, i32 0, i32 36, !dbg !10384
  %38 = load i32, i32* %clock_ns27, align 4, !dbg !10384
  %div28 = udiv i32 %36, %38, !dbg !10385
  store i32 %div28, i32* %down_count, align 4, !dbg !10386
  br label %sw.epilog37, !dbg !10387

sw.bb29:                                          ; preds = %sw.epilog
  %39 = load i32*, i32** %data.addr, align 8, !dbg !10388
  %arrayidx30 = getelementptr i32, i32* %39, i64 4, !dbg !10388
  %40 = load i32, i32* %arrayidx30, align 4, !dbg !10388
  %41 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10388
  %clock_ns31 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %41, i32 0, i32 36, !dbg !10388
  %42 = load i32, i32* %clock_ns31, align 4, !dbg !10388
  %add32 = add i32 %40, %42, !dbg !10388
  %sub33 = sub i32 %add32, 1, !dbg !10388
  %43 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10388
  %clock_ns34 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %43, i32 0, i32 36, !dbg !10388
  %44 = load i32, i32* %clock_ns34, align 4, !dbg !10388
  %div35 = udiv i32 %sub33, %44, !dbg !10388
  store i32 %div35, i32* %down_count, align 4, !dbg !10389
  br label %sw.epilog37, !dbg !10390

sw.default36:                                     ; preds = %sw.epilog
  store i32 -22, i32* %retval, align 4, !dbg !10391
  br label %return, !dbg !10391

sw.epilog37:                                      ; preds = %sw.bb29, %sw.bb25, %sw.bb16
  %45 = load i32, i32* %up_count, align 4, !dbg !10392
  %46 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10394
  %clock_ns38 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %46, i32 0, i32 36, !dbg !10395
  %47 = load i32, i32* %clock_ns38, align 4, !dbg !10395
  %mul = mul i32 %45, %47, !dbg !10396
  %48 = load i32*, i32** %data.addr, align 8, !dbg !10397
  %arrayidx39 = getelementptr i32, i32* %48, i64 2, !dbg !10397
  %49 = load i32, i32* %arrayidx39, align 4, !dbg !10397
  %cmp = icmp ne i32 %mul, %49, !dbg !10398
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10399

lor.lhs.false:                                    ; preds = %sw.epilog37
  %50 = load i32, i32* %down_count, align 4, !dbg !10400
  %51 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10401
  %clock_ns40 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %51, i32 0, i32 36, !dbg !10402
  %52 = load i32, i32* %clock_ns40, align 4, !dbg !10402
  %mul41 = mul i32 %50, %52, !dbg !10403
  %53 = load i32*, i32** %data.addr, align 8, !dbg !10404
  %arrayidx42 = getelementptr i32, i32* %53, i64 4, !dbg !10404
  %54 = load i32, i32* %arrayidx42, align 4, !dbg !10404
  %cmp43 = icmp ne i32 %mul41, %54, !dbg !10405
  br i1 %cmp43, label %if.then, label %if.end, !dbg !10406

if.then:                                          ; preds = %lor.lhs.false, %sw.epilog37
  %55 = load i32, i32* %up_count, align 4, !dbg !10407
  %56 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10409
  %clock_ns44 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %56, i32 0, i32 36, !dbg !10410
  %57 = load i32, i32* %clock_ns44, align 4, !dbg !10410
  %mul45 = mul i32 %55, %57, !dbg !10411
  %58 = load i32*, i32** %data.addr, align 8, !dbg !10412
  %arrayidx46 = getelementptr i32, i32* %58, i64 2, !dbg !10412
  store i32 %mul45, i32* %arrayidx46, align 4, !dbg !10413
  %59 = load i32, i32* %down_count, align 4, !dbg !10414
  %60 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10415
  %clock_ns47 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %60, i32 0, i32 36, !dbg !10416
  %61 = load i32, i32* %clock_ns47, align 4, !dbg !10416
  %mul48 = mul i32 %59, %61, !dbg !10417
  %62 = load i32*, i32** %data.addr, align 8, !dbg !10418
  %arrayidx49 = getelementptr i32, i32* %62, i64 4, !dbg !10418
  store i32 %mul48, i32* %arrayidx49, align 4, !dbg !10419
  store i32 -11, i32* %retval, align 4, !dbg !10420
  br label %return, !dbg !10420

if.end:                                           ; preds = %lor.lhs.false
  %63 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10421
  %64 = load i32, i32* %up_count, align 4, !dbg !10422
  call void @ni_writel(%struct.comedi_device* %63, i32 %64, i32 34) #9, !dbg !10423
  %65 = load i32, i32* %up_count, align 4, !dbg !10424
  %conv = trunc i32 %65 to i16, !dbg !10424
  %66 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10425
  %pwm_up_count = getelementptr inbounds %struct.ni_private, %struct.ni_private* %66, i32 0, i32 38, !dbg !10426
  store i16 %conv, i16* %pwm_up_count, align 4, !dbg !10427
  %67 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10428
  %68 = load i32, i32* %down_count, align 4, !dbg !10429
  call void @ni_writel(%struct.comedi_device* %67, i32 %68, i32 32) #9, !dbg !10430
  %69 = load i32, i32* %down_count, align 4, !dbg !10431
  %conv50 = trunc i32 %69 to i16, !dbg !10431
  %70 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10432
  %pwm_down_count = getelementptr inbounds %struct.ni_private, %struct.ni_private* %70, i32 0, i32 39, !dbg !10433
  store i16 %conv50, i16* %pwm_down_count, align 2, !dbg !10434
  store i32 5, i32* %retval, align 4, !dbg !10435
  br label %return, !dbg !10435

sw.bb51:                                          ; preds = %entry
  %71 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10436
  %72 = load i32*, i32** %data.addr, align 8, !dbg !10437
  %call = call i32 @ni_get_pwm_config(%struct.comedi_device* %71, i32* %72) #9, !dbg !10438
  store i32 %call, i32* %retval, align 4, !dbg !10439
  br label %return, !dbg !10439

sw.default52:                                     ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10440
  br label %return, !dbg !10440

return:                                           ; preds = %sw.default52, %sw.bb51, %if.end, %if.then, %sw.default36, %sw.default
  %73 = load i32, i32* %retval, align 4, !dbg !10441
  ret i32 %73, !dbg !10441
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_calib_insn_read(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !10442 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %i = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10443, metadata !DIExpression()), !dbg !10444
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !10445, metadata !DIExpression()), !dbg !10446
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !10447, metadata !DIExpression()), !dbg !10448
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !10449, metadata !DIExpression()), !dbg !10450
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !10451, metadata !DIExpression()), !dbg !10452
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10453
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !10454
  %1 = load i8*, i8** %private, align 8, !dbg !10454
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !10453
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !10452
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10455, metadata !DIExpression()), !dbg !10456
  store i32 0, i32* %i, align 4, !dbg !10457
  br label %for.cond, !dbg !10459

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !10460
  %4 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10462
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %4, i32 0, i32 1, !dbg !10463
  %5 = load i32, i32* %n, align 4, !dbg !10463
  %cmp = icmp ult i32 %3, %5, !dbg !10464
  br i1 %cmp, label %for.body, label %for.end, !dbg !10465

for.body:                                         ; preds = %for.cond
  %6 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10466
  %caldacs = getelementptr inbounds %struct.ni_private, %struct.ni_private* %6, i32 0, i32 11, !dbg !10467
  %7 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10468
  %chanspec = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %7, i32 0, i32 4, !dbg !10468
  %8 = load i32, i32* %chanspec, align 4, !dbg !10468
  %and = and i32 %8, 65535, !dbg !10468
  %idxprom = zext i32 %and to i64, !dbg !10466
  %arrayidx = getelementptr [34 x i16], [34 x i16]* %caldacs, i64 0, i64 %idxprom, !dbg !10466
  %9 = load i16, i16* %arrayidx, align 2, !dbg !10466
  %conv = zext i16 %9 to i32, !dbg !10466
  %10 = load i32*, i32** %data.addr, align 8, !dbg !10469
  %arrayidx1 = getelementptr i32, i32* %10, i64 0, !dbg !10469
  store i32 %conv, i32* %arrayidx1, align 4, !dbg !10470
  br label %for.inc, !dbg !10469

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !10471
  %inc = add i32 %11, 1, !dbg !10471
  store i32 %inc, i32* %i, align 4, !dbg !10471
  br label %for.cond, !dbg !10472, !llvm.loop !10473

for.end:                                          ; preds = %for.cond
  %12 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10475
  %n2 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %12, i32 0, i32 1, !dbg !10476
  %13 = load i32, i32* %n2, align 4, !dbg !10476
  ret i32 %13, !dbg !10477
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_calib_insn_write(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !10478 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10479, metadata !DIExpression()), !dbg !10480
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !10481, metadata !DIExpression()), !dbg !10482
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !10483, metadata !DIExpression()), !dbg !10484
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !10485, metadata !DIExpression()), !dbg !10486
  %0 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10487
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %0, i32 0, i32 1, !dbg !10489
  %1 = load i32, i32* %n, align 4, !dbg !10489
  %tobool = icmp ne i32 %1, 0, !dbg !10487
  br i1 %tobool, label %if.then, label %if.end, !dbg !10490

if.then:                                          ; preds = %entry
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10491
  %3 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10493
  %chanspec = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %3, i32 0, i32 4, !dbg !10493
  %4 = load i32, i32* %chanspec, align 4, !dbg !10493
  %and = and i32 %4, 65535, !dbg !10493
  %5 = load i32*, i32** %data.addr, align 8, !dbg !10494
  %6 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10495
  %n1 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %6, i32 0, i32 1, !dbg !10496
  %7 = load i32, i32* %n1, align 4, !dbg !10496
  %sub = sub i32 %7, 1, !dbg !10497
  %idxprom = zext i32 %sub to i64, !dbg !10494
  %arrayidx = getelementptr i32, i32* %5, i64 %idxprom, !dbg !10494
  %8 = load i32, i32* %arrayidx, align 4, !dbg !10494
  call void @ni_write_caldac(%struct.comedi_device* %2, i32 %and, i32 %8) #9, !dbg !10498
  br label %if.end, !dbg !10499

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10500
  %n2 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %9, i32 0, i32 1, !dbg !10501
  %10 = load i32, i32* %n2, align 4, !dbg !10501
  ret i32 %10, !dbg !10502
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @caldac_setup(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #2 !dbg !10503 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %board = alloca %struct.ni_board_struct*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %n_dacs = alloca i32, align 4
  %n_chans = alloca i32, align 4
  %n_bits = alloca i32, align 4
  %diffbits = alloca i32, align 4
  %type = alloca i32, align 4
  %chan = alloca i32, align 4
  %maxdata_list = alloca i32*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10504, metadata !DIExpression()), !dbg !10505
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !10506, metadata !DIExpression()), !dbg !10507
  call void @llvm.dbg.declare(metadata %struct.ni_board_struct** %board, metadata !10508, metadata !DIExpression()), !dbg !10509
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10510
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !10511
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !10511
  %2 = bitcast i8* %1 to %struct.ni_board_struct*, !dbg !10510
  store %struct.ni_board_struct* %2, %struct.ni_board_struct** %board, align 8, !dbg !10509
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !10512, metadata !DIExpression()), !dbg !10513
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10514
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !10515
  %4 = load i8*, i8** %private, align 8, !dbg !10515
  %5 = bitcast i8* %4 to %struct.ni_private*, !dbg !10514
  store %struct.ni_private* %5, %struct.ni_private** %devpriv, align 8, !dbg !10513
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10516, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10518, metadata !DIExpression()), !dbg !10519
  call void @llvm.dbg.declare(metadata i32* %n_dacs, metadata !10520, metadata !DIExpression()), !dbg !10521
  call void @llvm.dbg.declare(metadata i32* %n_chans, metadata !10522, metadata !DIExpression()), !dbg !10523
  store i32 0, i32* %n_chans, align 4, !dbg !10523
  call void @llvm.dbg.declare(metadata i32* %n_bits, metadata !10524, metadata !DIExpression()), !dbg !10525
  call void @llvm.dbg.declare(metadata i32* %diffbits, metadata !10526, metadata !DIExpression()), !dbg !10527
  store i32 0, i32* %diffbits, align 4, !dbg !10527
  call void @llvm.dbg.declare(metadata i32* %type, metadata !10528, metadata !DIExpression()), !dbg !10529
  call void @llvm.dbg.declare(metadata i32* %chan, metadata !10530, metadata !DIExpression()), !dbg !10531
  %6 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !10532
  %caldac = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %6, i32 0, i32 18, !dbg !10533
  %arrayidx = getelementptr [3 x i32], [3 x i32]* %caldac, i64 0, i64 0, !dbg !10532
  %7 = load i32, i32* %arrayidx, align 8, !dbg !10532
  store i32 %7, i32* %type, align 4, !dbg !10534
  %8 = load i32, i32* %type, align 4, !dbg !10535
  %cmp = icmp eq i32 %8, 0, !dbg !10537
  br i1 %cmp, label %if.then, label %if.end, !dbg !10538

if.then:                                          ; preds = %entry
  br label %if.end74, !dbg !10539

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %type, align 4, !dbg !10540
  %idxprom = sext i32 %9 to i64, !dbg !10541
  %arrayidx1 = getelementptr [8 x %struct.caldac_struct], [8 x %struct.caldac_struct]* @caldacs, i64 0, i64 %idxprom, !dbg !10541
  %n_bits2 = getelementptr inbounds %struct.caldac_struct, %struct.caldac_struct* %arrayidx1, i32 0, i32 1, !dbg !10542
  %10 = load i32, i32* %n_bits2, align 4, !dbg !10542
  store i32 %10, i32* %n_bits, align 4, !dbg !10543
  store i32 0, i32* %i, align 4, !dbg !10544
  br label %for.cond, !dbg !10546

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i32, i32* %i, align 4, !dbg !10547
  %cmp3 = icmp slt i32 %11, 3, !dbg !10549
  br i1 %cmp3, label %for.body, label %for.end, !dbg !10550

for.body:                                         ; preds = %for.cond
  %12 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !10551
  %caldac4 = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %12, i32 0, i32 18, !dbg !10553
  %13 = load i32, i32* %i, align 4, !dbg !10554
  %idxprom5 = sext i32 %13 to i64, !dbg !10551
  %arrayidx6 = getelementptr [3 x i32], [3 x i32]* %caldac4, i64 0, i64 %idxprom5, !dbg !10551
  %14 = load i32, i32* %arrayidx6, align 4, !dbg !10551
  store i32 %14, i32* %type, align 4, !dbg !10555
  %15 = load i32, i32* %type, align 4, !dbg !10556
  %cmp7 = icmp eq i32 %15, 0, !dbg !10558
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !10559

if.then8:                                         ; preds = %for.body
  br label %for.end, !dbg !10560

if.end9:                                          ; preds = %for.body
  %16 = load i32, i32* %type, align 4, !dbg !10561
  %idxprom10 = sext i32 %16 to i64, !dbg !10563
  %arrayidx11 = getelementptr [8 x %struct.caldac_struct], [8 x %struct.caldac_struct]* @caldacs, i64 0, i64 %idxprom10, !dbg !10563
  %n_bits12 = getelementptr inbounds %struct.caldac_struct, %struct.caldac_struct* %arrayidx11, i32 0, i32 1, !dbg !10564
  %17 = load i32, i32* %n_bits12, align 4, !dbg !10564
  %18 = load i32, i32* %n_bits, align 4, !dbg !10565
  %cmp13 = icmp ne i32 %17, %18, !dbg !10566
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !10567

if.then14:                                        ; preds = %if.end9
  store i32 1, i32* %diffbits, align 4, !dbg !10568
  br label %if.end15, !dbg !10569

if.end15:                                         ; preds = %if.then14, %if.end9
  %19 = load i32, i32* %type, align 4, !dbg !10570
  %idxprom16 = sext i32 %19 to i64, !dbg !10571
  %arrayidx17 = getelementptr [8 x %struct.caldac_struct], [8 x %struct.caldac_struct]* @caldacs, i64 0, i64 %idxprom16, !dbg !10571
  %n_chans18 = getelementptr inbounds %struct.caldac_struct, %struct.caldac_struct* %arrayidx17, i32 0, i32 0, !dbg !10572
  %20 = load i32, i32* %n_chans18, align 16, !dbg !10572
  %21 = load i32, i32* %n_chans, align 4, !dbg !10573
  %add = add i32 %21, %20, !dbg !10573
  store i32 %add, i32* %n_chans, align 4, !dbg !10573
  br label %for.inc, !dbg !10574

for.inc:                                          ; preds = %if.end15
  %22 = load i32, i32* %i, align 4, !dbg !10575
  %inc = add i32 %22, 1, !dbg !10575
  store i32 %inc, i32* %i, align 4, !dbg !10575
  br label %for.cond, !dbg !10576, !llvm.loop !10577

for.end:                                          ; preds = %if.then8, %for.cond
  %23 = load i32, i32* %i, align 4, !dbg !10579
  store i32 %23, i32* %n_dacs, align 4, !dbg !10580
  %24 = load i32, i32* %n_chans, align 4, !dbg !10581
  %25 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10582
  %n_chan = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %25, i32 0, i32 3, !dbg !10583
  store i32 %24, i32* %n_chan, align 8, !dbg !10584
  %26 = load i32, i32* %diffbits, align 4, !dbg !10585
  %tobool = icmp ne i32 %26, 0, !dbg !10585
  br i1 %tobool, label %if.then19, label %if.else, !dbg !10587

if.then19:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32** %maxdata_list, metadata !10588, metadata !DIExpression()), !dbg !10590
  %27 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10591
  %caldac_maxdata_list = getelementptr inbounds %struct.ni_private, %struct.ni_private* %27, i32 0, i32 10, !dbg !10592
  %arraydecay = getelementptr inbounds [34 x i32], [34 x i32]* %caldac_maxdata_list, i64 0, i64 0, !dbg !10591
  store i32* %arraydecay, i32** %maxdata_list, align 8, !dbg !10590
  %28 = load i32, i32* %n_chans, align 4, !dbg !10593
  %cmp20 = icmp sgt i32 %28, 34, !dbg !10595
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !10596

if.then21:                                        ; preds = %if.then19
  %29 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10597
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %29, i32 0, i32 4, !dbg !10597
  %30 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !10597
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %30, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.109, i64 0, i64 0)) #11, !dbg !10597
  br label %if.end22, !dbg !10597

if.end22:                                         ; preds = %if.then21, %if.then19
  %31 = load i32*, i32** %maxdata_list, align 8, !dbg !10598
  %32 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10599
  %maxdata_list23 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %32, i32 0, i32 14, !dbg !10600
  store i32* %31, i32** %maxdata_list23, align 8, !dbg !10601
  store i32 0, i32* %chan, align 4, !dbg !10602
  store i32 0, i32* %i, align 4, !dbg !10603
  br label %for.cond24, !dbg !10605

for.cond24:                                       ; preds = %for.inc45, %if.end22
  %33 = load i32, i32* %i, align 4, !dbg !10606
  %34 = load i32, i32* %n_dacs, align 4, !dbg !10608
  %cmp25 = icmp slt i32 %33, %34, !dbg !10609
  br i1 %cmp25, label %for.body26, label %for.end47, !dbg !10610

for.body26:                                       ; preds = %for.cond24
  %35 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !10611
  %caldac27 = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %35, i32 0, i32 18, !dbg !10613
  %36 = load i32, i32* %i, align 4, !dbg !10614
  %idxprom28 = sext i32 %36 to i64, !dbg !10611
  %arrayidx29 = getelementptr [3 x i32], [3 x i32]* %caldac27, i64 0, i64 %idxprom28, !dbg !10611
  %37 = load i32, i32* %arrayidx29, align 4, !dbg !10611
  store i32 %37, i32* %type, align 4, !dbg !10615
  store i32 0, i32* %j, align 4, !dbg !10616
  br label %for.cond30, !dbg !10618

for.cond30:                                       ; preds = %for.inc42, %for.body26
  %38 = load i32, i32* %j, align 4, !dbg !10619
  %39 = load i32, i32* %type, align 4, !dbg !10621
  %idxprom31 = sext i32 %39 to i64, !dbg !10622
  %arrayidx32 = getelementptr [8 x %struct.caldac_struct], [8 x %struct.caldac_struct]* @caldacs, i64 0, i64 %idxprom31, !dbg !10622
  %n_chans33 = getelementptr inbounds %struct.caldac_struct, %struct.caldac_struct* %arrayidx32, i32 0, i32 0, !dbg !10623
  %40 = load i32, i32* %n_chans33, align 16, !dbg !10623
  %cmp34 = icmp slt i32 %38, %40, !dbg !10624
  br i1 %cmp34, label %for.body35, label %for.end44, !dbg !10625

for.body35:                                       ; preds = %for.cond30
  %41 = load i32, i32* %type, align 4, !dbg !10626
  %idxprom36 = sext i32 %41 to i64, !dbg !10628
  %arrayidx37 = getelementptr [8 x %struct.caldac_struct], [8 x %struct.caldac_struct]* @caldacs, i64 0, i64 %idxprom36, !dbg !10628
  %n_bits38 = getelementptr inbounds %struct.caldac_struct, %struct.caldac_struct* %arrayidx37, i32 0, i32 1, !dbg !10629
  %42 = load i32, i32* %n_bits38, align 4, !dbg !10629
  %shl = shl i32 1, %42, !dbg !10630
  %sub = sub i32 %shl, 1, !dbg !10631
  %43 = load i32*, i32** %maxdata_list, align 8, !dbg !10632
  %44 = load i32, i32* %chan, align 4, !dbg !10633
  %idxprom39 = sext i32 %44 to i64, !dbg !10632
  %arrayidx40 = getelementptr i32, i32* %43, i64 %idxprom39, !dbg !10632
  store i32 %sub, i32* %arrayidx40, align 4, !dbg !10634
  %45 = load i32, i32* %chan, align 4, !dbg !10635
  %inc41 = add i32 %45, 1, !dbg !10635
  store i32 %inc41, i32* %chan, align 4, !dbg !10635
  br label %for.inc42, !dbg !10636

for.inc42:                                        ; preds = %for.body35
  %46 = load i32, i32* %j, align 4, !dbg !10637
  %inc43 = add i32 %46, 1, !dbg !10637
  store i32 %inc43, i32* %j, align 4, !dbg !10637
  br label %for.cond30, !dbg !10638, !llvm.loop !10639

for.end44:                                        ; preds = %for.cond30
  br label %for.inc45, !dbg !10641

for.inc45:                                        ; preds = %for.end44
  %47 = load i32, i32* %i, align 4, !dbg !10642
  %inc46 = add i32 %47, 1, !dbg !10642
  store i32 %inc46, i32* %i, align 4, !dbg !10642
  br label %for.cond24, !dbg !10643, !llvm.loop !10644

for.end47:                                        ; preds = %for.cond24
  store i32 0, i32* %chan, align 4, !dbg !10646
  br label %for.cond48, !dbg !10648

for.cond48:                                       ; preds = %for.inc55, %for.end47
  %48 = load i32, i32* %chan, align 4, !dbg !10649
  %49 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10651
  %n_chan49 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %49, i32 0, i32 3, !dbg !10652
  %50 = load i32, i32* %n_chan49, align 8, !dbg !10652
  %cmp50 = icmp slt i32 %48, %50, !dbg !10653
  br i1 %cmp50, label %for.body51, label %for.end57, !dbg !10654

for.body51:                                       ; preds = %for.cond48
  %51 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10655
  %52 = load i32, i32* %i, align 4, !dbg !10656
  %53 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10657
  %maxdata_list52 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %53, i32 0, i32 14, !dbg !10658
  %54 = load i32*, i32** %maxdata_list52, align 8, !dbg !10658
  %55 = load i32, i32* %i, align 4, !dbg !10659
  %idxprom53 = sext i32 %55 to i64, !dbg !10657
  %arrayidx54 = getelementptr i32, i32* %54, i64 %idxprom53, !dbg !10657
  %56 = load i32, i32* %arrayidx54, align 4, !dbg !10657
  %div = udiv i32 %56, 2, !dbg !10660
  call void @ni_write_caldac(%struct.comedi_device* %51, i32 %52, i32 %div) #9, !dbg !10661
  br label %for.inc55, !dbg !10661

for.inc55:                                        ; preds = %for.body51
  %57 = load i32, i32* %chan, align 4, !dbg !10662
  %inc56 = add i32 %57, 1, !dbg !10662
  store i32 %inc56, i32* %chan, align 4, !dbg !10662
  br label %for.cond48, !dbg !10663, !llvm.loop !10664

for.end57:                                        ; preds = %for.cond48
  br label %if.end74, !dbg !10666

if.else:                                          ; preds = %for.end
  %58 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !10667
  %caldac58 = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %58, i32 0, i32 18, !dbg !10669
  %arrayidx59 = getelementptr [3 x i32], [3 x i32]* %caldac58, i64 0, i64 0, !dbg !10667
  %59 = load i32, i32* %arrayidx59, align 8, !dbg !10667
  store i32 %59, i32* %type, align 4, !dbg !10670
  %60 = load i32, i32* %type, align 4, !dbg !10671
  %idxprom60 = sext i32 %60 to i64, !dbg !10672
  %arrayidx61 = getelementptr [8 x %struct.caldac_struct], [8 x %struct.caldac_struct]* @caldacs, i64 0, i64 %idxprom60, !dbg !10672
  %n_bits62 = getelementptr inbounds %struct.caldac_struct, %struct.caldac_struct* %arrayidx61, i32 0, i32 1, !dbg !10673
  %61 = load i32, i32* %n_bits62, align 4, !dbg !10673
  %shl63 = shl i32 1, %61, !dbg !10674
  %sub64 = sub i32 %shl63, 1, !dbg !10675
  %62 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10676
  %maxdata = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %62, i32 0, i32 13, !dbg !10677
  store i32 %sub64, i32* %maxdata, align 8, !dbg !10678
  store i32 0, i32* %chan, align 4, !dbg !10679
  br label %for.cond65, !dbg !10681

for.cond65:                                       ; preds = %for.inc71, %if.else
  %63 = load i32, i32* %chan, align 4, !dbg !10682
  %64 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10684
  %n_chan66 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %64, i32 0, i32 3, !dbg !10685
  %65 = load i32, i32* %n_chan66, align 8, !dbg !10685
  %cmp67 = icmp slt i32 %63, %65, !dbg !10686
  br i1 %cmp67, label %for.body68, label %for.end73, !dbg !10687

for.body68:                                       ; preds = %for.cond65
  %66 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10688
  %67 = load i32, i32* %i, align 4, !dbg !10689
  %68 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10690
  %maxdata69 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %68, i32 0, i32 13, !dbg !10691
  %69 = load i32, i32* %maxdata69, align 8, !dbg !10691
  %div70 = udiv i32 %69, 2, !dbg !10692
  call void @ni_write_caldac(%struct.comedi_device* %66, i32 %67, i32 %div70) #9, !dbg !10693
  br label %for.inc71, !dbg !10693

for.inc71:                                        ; preds = %for.body68
  %70 = load i32, i32* %chan, align 4, !dbg !10694
  %inc72 = add i32 %70, 1, !dbg !10694
  store i32 %inc72, i32* %chan, align 4, !dbg !10694
  br label %for.cond65, !dbg !10695, !llvm.loop !10696

for.end73:                                        ; preds = %for.cond65
  br label %if.end74

if.end74:                                         ; preds = %if.then, %for.end73, %for.end57
  ret void, !dbg !10698
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_m_series_eeprom_insn_read(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !10699 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %i = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10700, metadata !DIExpression()), !dbg !10701
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !10702, metadata !DIExpression()), !dbg !10703
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !10704, metadata !DIExpression()), !dbg !10705
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !10706, metadata !DIExpression()), !dbg !10707
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !10708, metadata !DIExpression()), !dbg !10709
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10710
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !10711
  %1 = load i8*, i8** %private, align 8, !dbg !10711
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !10710
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !10709
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10712, metadata !DIExpression()), !dbg !10713
  store i32 0, i32* %i, align 4, !dbg !10714
  br label %for.cond, !dbg !10716

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !10717
  %4 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10719
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %4, i32 0, i32 1, !dbg !10720
  %5 = load i32, i32* %n, align 4, !dbg !10720
  %cmp = icmp ult i32 %3, %5, !dbg !10721
  br i1 %cmp, label %for.body, label %for.end, !dbg !10722

for.body:                                         ; preds = %for.cond
  %6 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10723
  %eeprom_buffer = getelementptr inbounds %struct.ni_private, %struct.ni_private* %6, i32 0, i32 41, !dbg !10724
  %7 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10725
  %chanspec = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %7, i32 0, i32 4, !dbg !10725
  %8 = load i32, i32* %chanspec, align 4, !dbg !10725
  %and = and i32 %8, 65535, !dbg !10725
  %idxprom = zext i32 %and to i64, !dbg !10723
  %arrayidx = getelementptr [1024 x i8], [1024 x i8]* %eeprom_buffer, i64 0, i64 %idxprom, !dbg !10723
  %9 = load i8, i8* %arrayidx, align 1, !dbg !10723
  %conv = zext i8 %9 to i32, !dbg !10723
  %10 = load i32*, i32** %data.addr, align 8, !dbg !10726
  %11 = load i32, i32* %i, align 4, !dbg !10727
  %idxprom1 = zext i32 %11 to i64, !dbg !10726
  %arrayidx2 = getelementptr i32, i32* %10, i64 %idxprom1, !dbg !10726
  store i32 %conv, i32* %arrayidx2, align 4, !dbg !10728
  br label %for.inc, !dbg !10726

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !10729
  %inc = add i32 %12, 1, !dbg !10729
  store i32 %inc, i32* %i, align 4, !dbg !10729
  br label %for.cond, !dbg !10730, !llvm.loop !10731

for.end:                                          ; preds = %for.cond
  %13 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10733
  %n3 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %13, i32 0, i32 1, !dbg !10734
  %14 = load i32, i32* %n3, align 4, !dbg !10734
  ret i32 %14, !dbg !10735
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_eeprom_insn_read(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !10736 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %val = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10737, metadata !DIExpression()), !dbg !10738
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !10739, metadata !DIExpression()), !dbg !10740
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !10741, metadata !DIExpression()), !dbg !10742
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !10743, metadata !DIExpression()), !dbg !10744
  call void @llvm.dbg.declare(metadata i32* %val, metadata !10745, metadata !DIExpression()), !dbg !10746
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10747, metadata !DIExpression()), !dbg !10748
  %0 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10749
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %0, i32 0, i32 1, !dbg !10751
  %1 = load i32, i32* %n, align 4, !dbg !10751
  %tobool = icmp ne i32 %1, 0, !dbg !10749
  br i1 %tobool, label %if.then, label %if.end, !dbg !10752

if.then:                                          ; preds = %entry
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10753
  %3 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10755
  %chanspec = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %3, i32 0, i32 4, !dbg !10755
  %4 = load i32, i32* %chanspec, align 4, !dbg !10755
  %and = and i32 %4, 65535, !dbg !10755
  %call = call i32 @ni_read_eeprom(%struct.comedi_device* %2, i32 %and) #9, !dbg !10756
  store i32 %call, i32* %val, align 4, !dbg !10757
  store i32 0, i32* %i, align 4, !dbg !10758
  br label %for.cond, !dbg !10760

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load i32, i32* %i, align 4, !dbg !10761
  %6 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10763
  %n1 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %6, i32 0, i32 1, !dbg !10764
  %7 = load i32, i32* %n1, align 4, !dbg !10764
  %cmp = icmp ult i32 %5, %7, !dbg !10765
  br i1 %cmp, label %for.body, label %for.end, !dbg !10766

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %val, align 4, !dbg !10767
  %9 = load i32*, i32** %data.addr, align 8, !dbg !10768
  %10 = load i32, i32* %i, align 4, !dbg !10769
  %idxprom = zext i32 %10 to i64, !dbg !10768
  %arrayidx = getelementptr i32, i32* %9, i64 %idxprom, !dbg !10768
  store i32 %8, i32* %arrayidx, align 4, !dbg !10770
  br label %for.inc, !dbg !10768

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !10771
  %inc = add i32 %11, 1, !dbg !10771
  store i32 %inc, i32* %i, align 4, !dbg !10771
  br label %for.cond, !dbg !10772, !llvm.loop !10773

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !10775

if.end:                                           ; preds = %for.end, %entry
  %12 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10776
  %n2 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %12, i32 0, i32 1, !dbg !10777
  %13 = load i32, i32* %n2, align 4, !dbg !10777
  ret i32 %13, !dbg !10778
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_pfi_insn_bits(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !10779 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10780, metadata !DIExpression()), !dbg !10781
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !10782, metadata !DIExpression()), !dbg !10783
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !10784, metadata !DIExpression()), !dbg !10785
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !10786, metadata !DIExpression()), !dbg !10787
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !10788, metadata !DIExpression()), !dbg !10789
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10790
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !10791
  %1 = load i8*, i8** %private, align 8, !dbg !10791
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !10790
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !10789
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10792
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 50, !dbg !10794
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !10794
  %bf.clear = and i16 %bf.load, 1, !dbg !10794
  %bf.cast = zext i16 %bf.clear to i32, !dbg !10794
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !10792
  br i1 %tobool, label %if.end, label %if.then, !dbg !10795

if.then:                                          ; preds = %entry
  store i32 -524, i32* %retval, align 4, !dbg !10796
  br label %return, !dbg !10796

if.end:                                           ; preds = %entry
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10797
  %5 = load i32*, i32** %data.addr, align 8, !dbg !10799
  %call = call i32 @comedi_dio_update_state(%struct.comedi_subdevice* %4, i32* %5) #9, !dbg !10800
  %tobool1 = icmp ne i32 %call, 0, !dbg !10800
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !10801

if.then2:                                         ; preds = %if.end
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10802
  %7 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10803
  %state = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %7, i32 0, i32 29, !dbg !10804
  %8 = load i32, i32* %state, align 4, !dbg !10804
  call void @ni_writew(%struct.comedi_device* %6, i32 %8, i32 478) #9, !dbg !10805
  br label %if.end3, !dbg !10805

if.end3:                                          ; preds = %if.then2, %if.end
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10806
  %call4 = call i32 @ni_readw(%struct.comedi_device* %9, i32 476) #9, !dbg !10807
  %10 = load i32*, i32** %data.addr, align 8, !dbg !10808
  %arrayidx = getelementptr i32, i32* %10, i64 1, !dbg !10808
  store i32 %call4, i32* %arrayidx, align 4, !dbg !10809
  %11 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10810
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %11, i32 0, i32 1, !dbg !10811
  %12 = load i32, i32* %n, align 4, !dbg !10811
  store i32 %12, i32* %retval, align 4, !dbg !10812
  br label %return, !dbg !10812

return:                                           ; preds = %if.end3, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !10813
  ret i32 %13, !dbg !10813
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_pfi_insn_config(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !10814 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %chan = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10815, metadata !DIExpression()), !dbg !10816
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !10817, metadata !DIExpression()), !dbg !10818
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !10819, metadata !DIExpression()), !dbg !10820
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !10821, metadata !DIExpression()), !dbg !10822
  call void @llvm.dbg.declare(metadata i32* %chan, metadata !10823, metadata !DIExpression()), !dbg !10824
  %0 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10825
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %0, i32 0, i32 1, !dbg !10827
  %1 = load i32, i32* %n, align 4, !dbg !10827
  %cmp = icmp ult i32 %1, 1, !dbg !10828
  br i1 %cmp, label %if.then, label %if.end, !dbg !10829

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10830
  br label %return, !dbg !10830

if.end:                                           ; preds = %entry
  %2 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10831
  %chanspec = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %2, i32 0, i32 4, !dbg !10831
  %3 = load i32, i32* %chanspec, align 4, !dbg !10831
  %and = and i32 %3, 65535, !dbg !10831
  store i32 %and, i32* %chan, align 4, !dbg !10832
  %4 = load i32*, i32** %data.addr, align 8, !dbg !10833
  %arrayidx = getelementptr i32, i32* %4, i64 0, !dbg !10833
  %5 = load i32, i32* %arrayidx, align 4, !dbg !10833
  switch i32 %5, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb
    i32 28, label %sw.bb2
    i32 4099, label %sw.bb4
    i32 4109, label %sw.bb7
    i32 24, label %sw.bb10
  ], !dbg !10834

sw.bb:                                            ; preds = %if.end, %if.end
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10835
  %7 = load i32, i32* %chan, align 4, !dbg !10837
  %8 = load i32*, i32** %data.addr, align 8, !dbg !10838
  %arrayidx1 = getelementptr i32, i32* %8, i64 0, !dbg !10838
  %9 = load i32, i32* %arrayidx1, align 4, !dbg !10838
  call void @ni_set_pfi_direction(%struct.comedi_device* %6, i32 %7, i32 %9) #9, !dbg !10839
  br label %sw.epilog, !dbg !10840

sw.bb2:                                           ; preds = %if.end
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10841
  %11 = load i32, i32* %chan, align 4, !dbg !10842
  %call = call i32 @ni_get_pfi_direction(%struct.comedi_device* %10, i32 %11) #9, !dbg !10843
  %12 = load i32*, i32** %data.addr, align 8, !dbg !10844
  %arrayidx3 = getelementptr i32, i32* %12, i64 1, !dbg !10844
  store i32 %call, i32* %arrayidx3, align 4, !dbg !10845
  br label %sw.epilog, !dbg !10846

sw.bb4:                                           ; preds = %if.end
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10847
  %14 = load i32, i32* %chan, align 4, !dbg !10848
  %15 = load i32*, i32** %data.addr, align 8, !dbg !10849
  %arrayidx5 = getelementptr i32, i32* %15, i64 1, !dbg !10849
  %16 = load i32, i32* %arrayidx5, align 4, !dbg !10849
  %call6 = call i32 @ni_set_pfi_routing(%struct.comedi_device* %13, i32 %14, i32 %16) #9, !dbg !10850
  store i32 %call6, i32* %retval, align 4, !dbg !10851
  br label %return, !dbg !10851

sw.bb7:                                           ; preds = %if.end
  %17 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10852
  %18 = load i32, i32* %chan, align 4, !dbg !10853
  %call8 = call i32 @ni_get_pfi_routing(%struct.comedi_device* %17, i32 %18) #9, !dbg !10854
  %19 = load i32*, i32** %data.addr, align 8, !dbg !10855
  %arrayidx9 = getelementptr i32, i32* %19, i64 1, !dbg !10855
  store i32 %call8, i32* %arrayidx9, align 4, !dbg !10856
  br label %sw.epilog, !dbg !10857

sw.bb10:                                          ; preds = %if.end
  %20 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10858
  %21 = load i32, i32* %chan, align 4, !dbg !10859
  %22 = load i32*, i32** %data.addr, align 8, !dbg !10860
  %arrayidx11 = getelementptr i32, i32* %22, i64 1, !dbg !10860
  %23 = load i32, i32* %arrayidx11, align 4, !dbg !10860
  %call12 = call i32 @ni_config_pfi_filter(%struct.comedi_device* %20, i32 %21, i32 %23) #9, !dbg !10861
  store i32 %call12, i32* %retval, align 4, !dbg !10862
  br label %return, !dbg !10862

sw.default:                                       ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !10863
  br label %return, !dbg !10863

sw.epilog:                                        ; preds = %sw.bb7, %sw.bb2, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !10864
  br label %return, !dbg !10864

return:                                           ; preds = %sw.epilog, %sw.default, %sw.bb10, %sw.bb4, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !10865
  ret i32 %24, !dbg !10865
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_set_bits(%struct.comedi_device* %dev, i32 %reg, i32 %bits, i32 %value) #2 !dbg !10866 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %reg.addr = alloca i32, align 4
  %bits.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %bit_values = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10869, metadata !DIExpression()), !dbg !10870
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !10871, metadata !DIExpression()), !dbg !10872
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !10873, metadata !DIExpression()), !dbg !10874
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !10875, metadata !DIExpression()), !dbg !10876
  call void @llvm.dbg.declare(metadata i32* %bit_values, metadata !10877, metadata !DIExpression()), !dbg !10878
  %0 = load i32, i32* %value.addr, align 4, !dbg !10879
  %tobool = icmp ne i32 %0, 0, !dbg !10879
  br i1 %tobool, label %if.then, label %if.else, !dbg !10881

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %bits.addr, align 4, !dbg !10882
  store i32 %1, i32* %bit_values, align 4, !dbg !10883
  br label %if.end, !dbg !10884

if.else:                                          ; preds = %entry
  store i32 0, i32* %bit_values, align 4, !dbg !10885
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10886
  %3 = load i32, i32* %reg.addr, align 4, !dbg !10887
  %4 = load i32, i32* %bits.addr, align 4, !dbg !10888
  %5 = load i32, i32* %bit_values, align 4, !dbg !10889
  call void @ni_set_bitfield(%struct.comedi_device* %2, i32 %3, i32 %4, i32 %5) #9, !dbg !10890
  ret void, !dbg !10891
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cs5529_ai_insn_read(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !10892 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %n = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %sample = alloca i16, align 2
  %channel_select = alloca i32, align 4
  %INTERNAL_REF = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10893, metadata !DIExpression()), !dbg !10894
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !10895, metadata !DIExpression()), !dbg !10896
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !10897, metadata !DIExpression()), !dbg !10898
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !10899, metadata !DIExpression()), !dbg !10900
  call void @llvm.dbg.declare(metadata i32* %n, metadata !10901, metadata !DIExpression()), !dbg !10902
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !10903, metadata !DIExpression()), !dbg !10904
  call void @llvm.dbg.declare(metadata i16* %sample, metadata !10905, metadata !DIExpression()), !dbg !10906
  call void @llvm.dbg.declare(metadata i32* %channel_select, metadata !10907, metadata !DIExpression()), !dbg !10908
  call void @llvm.dbg.declare(metadata i32* %INTERNAL_REF, metadata !10909, metadata !DIExpression()), !dbg !10910
  store i32 4096, i32* %INTERNAL_REF, align 4, !dbg !10910
  %0 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10911
  %chanspec = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %0, i32 0, i32 4, !dbg !10913
  %1 = load i32, i32* %chanspec, align 4, !dbg !10913
  %and = and i32 %1, 134217728, !dbg !10914
  %tobool = icmp ne i32 %and, 0, !dbg !10914
  br i1 %tobool, label %if.then, label %if.else, !dbg !10915

if.then:                                          ; preds = %entry
  store i32 4096, i32* %channel_select, align 4, !dbg !10916
  br label %if.end, !dbg !10917

if.else:                                          ; preds = %entry
  %2 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10918
  %chanspec2 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %2, i32 0, i32 4, !dbg !10918
  %3 = load i32, i32* %chanspec2, align 4, !dbg !10918
  %and3 = and i32 %3, 65535, !dbg !10918
  store i32 %and3, i32* %channel_select, align 4, !dbg !10919
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10920
  %5 = load i32, i32* %channel_select, align 4, !dbg !10921
  call void @ni_ao_win_outw(%struct.comedi_device* %4, i32 %5, i32 23) #9, !dbg !10922
  store i32 0, i32* %n, align 4, !dbg !10923
  br label %for.cond, !dbg !10925

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %n, align 4, !dbg !10926
  %7 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10928
  %n4 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %7, i32 0, i32 1, !dbg !10929
  %8 = load i32, i32* %n4, align 4, !dbg !10929
  %cmp = icmp ult i32 %6, %8, !dbg !10930
  br i1 %cmp, label %for.body, label %for.end, !dbg !10931

for.body:                                         ; preds = %for.cond
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10932
  %call = call i32 @cs5529_do_conversion(%struct.comedi_device* %9, i16* %sample) #9, !dbg !10934
  store i32 %call, i32* %retval1, align 4, !dbg !10935
  %10 = load i32, i32* %retval1, align 4, !dbg !10936
  %cmp5 = icmp slt i32 %10, 0, !dbg !10938
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !10939

if.then6:                                         ; preds = %for.body
  %11 = load i32, i32* %retval1, align 4, !dbg !10940
  store i32 %11, i32* %retval, align 4, !dbg !10941
  br label %return, !dbg !10941

if.end7:                                          ; preds = %for.body
  %12 = load i16, i16* %sample, align 2, !dbg !10942
  %conv = zext i16 %12 to i32, !dbg !10942
  %13 = load i32*, i32** %data.addr, align 8, !dbg !10943
  %14 = load i32, i32* %n, align 4, !dbg !10944
  %idxprom = sext i32 %14 to i64, !dbg !10943
  %arrayidx = getelementptr i32, i32* %13, i64 %idxprom, !dbg !10943
  store i32 %conv, i32* %arrayidx, align 4, !dbg !10945
  br label %for.inc, !dbg !10946

for.inc:                                          ; preds = %if.end7
  %15 = load i32, i32* %n, align 4, !dbg !10947
  %inc = add i32 %15, 1, !dbg !10947
  store i32 %inc, i32* %n, align 4, !dbg !10947
  br label %for.cond, !dbg !10948, !llvm.loop !10949

for.end:                                          ; preds = %for.cond
  %16 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10951
  %n8 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %16, i32 0, i32 1, !dbg !10952
  %17 = load i32, i32* %n8, align 4, !dbg !10952
  store i32 %17, i32* %retval, align 4, !dbg !10953
  br label %return, !dbg !10953

return:                                           ; preds = %for.end, %if.then6
  %18 = load i32, i32* %retval, align 4, !dbg !10954
  ret i32 %18, !dbg !10954
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @init_cs5529(%struct.comedi_device* %dev) #2 !dbg !10955 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %config_bits = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10956, metadata !DIExpression()), !dbg !10957
  call void @llvm.dbg.declare(metadata i32* %config_bits, metadata !10958, metadata !DIExpression()), !dbg !10959
  store i32 32, i32* %config_bits, align 4, !dbg !10959
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10960
  %1 = load i32, i32* %config_bits, align 4, !dbg !10961
  %or = or i32 %1, 3, !dbg !10962
  call void @cs5529_config_write(%struct.comedi_device* %0, i32 %or, i32 4) #9, !dbg !10963
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10964
  %call = call i32 @cs5529_do_conversion(%struct.comedi_device* %2, i16* null) #9, !dbg !10965
  ret i32 0, !dbg !10966
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_serial_insn_config(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !10967 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %clk_fout = alloca i32, align 4
  %err = alloca i32, align 4
  %byte_out = alloca i8, align 1
  %byte_in = alloca i8, align 1
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10968, metadata !DIExpression()), !dbg !10969
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !10970, metadata !DIExpression()), !dbg !10971
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !10972, metadata !DIExpression()), !dbg !10973
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !10974, metadata !DIExpression()), !dbg !10975
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !10976, metadata !DIExpression()), !dbg !10977
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10978
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !10979
  %1 = load i8*, i8** %private, align 8, !dbg !10979
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !10978
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !10977
  call void @llvm.dbg.declare(metadata i32* %clk_fout, metadata !10980, metadata !DIExpression()), !dbg !10981
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !10982
  %clock_and_fout = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 24, !dbg !10983
  %4 = load i16, i16* %clock_and_fout, align 2, !dbg !10983
  %conv = zext i16 %4 to i32, !dbg !10982
  store i32 %conv, i32* %clk_fout, align 4, !dbg !10981
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10984, metadata !DIExpression()), !dbg !10985
  %5 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10986
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %5, i32 0, i32 1, !dbg !10987
  %6 = load i32, i32* %n, align 4, !dbg !10987
  store i32 %6, i32* %err, align 4, !dbg !10985
  call void @llvm.dbg.declare(metadata i8* %byte_out, metadata !10988, metadata !DIExpression()), !dbg !10989
  call void @llvm.dbg.declare(metadata i8* %byte_in, metadata !10990, metadata !DIExpression()), !dbg !10991
  store i8 0, i8* %byte_in, align 1, !dbg !10991
  %7 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10992
  %n1 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %7, i32 0, i32 1, !dbg !10994
  %8 = load i32, i32* %n1, align 4, !dbg !10994
  %cmp = icmp ne i32 %8, 2, !dbg !10995
  br i1 %cmp, label %if.then, label %if.end, !dbg !10996

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10997
  br label %return, !dbg !10997

if.end:                                           ; preds = %entry
  %9 = load i32*, i32** %data.addr, align 8, !dbg !10998
  %arrayidx = getelementptr i32, i32* %9, i64 0, !dbg !10998
  %10 = load i32, i32* %arrayidx, align 4, !dbg !10998
  switch i32 %10, label %sw.default [
    i32 26, label %sw.bb
    i32 27, label %sw.bb87
  ], !dbg !10999

sw.bb:                                            ; preds = %if.end
  %11 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11000
  %serial_hw_mode = getelementptr inbounds %struct.ni_private, %struct.ni_private* %11, i32 0, i32 23, !dbg !11002
  store i8 1, i8* %serial_hw_mode, align 8, !dbg !11003
  %12 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11004
  %dio_control = getelementptr inbounds %struct.ni_private, %struct.ni_private* %12, i32 0, i32 1, !dbg !11005
  %13 = load i16, i16* %dio_control, align 2, !dbg !11006
  %conv3 = zext i16 %13 to i64, !dbg !11006
  %or = or i64 %conv3, 512, !dbg !11006
  %conv4 = trunc i64 %or to i16, !dbg !11006
  store i16 %conv4, i16* %dio_control, align 2, !dbg !11006
  %14 = load i32*, i32** %data.addr, align 8, !dbg !11007
  %arrayidx5 = getelementptr i32, i32* %14, i64 1, !dbg !11007
  %15 = load i32, i32* %arrayidx5, align 4, !dbg !11007
  %cmp6 = icmp eq i32 %15, 0, !dbg !11009
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !11010

if.then8:                                         ; preds = %sw.bb
  %16 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11011
  %serial_hw_mode9 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %16, i32 0, i32 23, !dbg !11013
  store i8 0, i8* %serial_hw_mode9, align 8, !dbg !11014
  %17 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11015
  %dio_control10 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %17, i32 0, i32 1, !dbg !11016
  %18 = load i16, i16* %dio_control10, align 2, !dbg !11017
  %conv11 = zext i16 %18 to i64, !dbg !11017
  %and = and i64 %conv11, -2561, !dbg !11017
  %conv12 = trunc i64 %and to i16, !dbg !11017
  store i16 %conv12, i16* %dio_control10, align 2, !dbg !11017
  %19 = load i32*, i32** %data.addr, align 8, !dbg !11018
  %arrayidx13 = getelementptr i32, i32* %19, i64 1, !dbg !11018
  store i32 0, i32* %arrayidx13, align 4, !dbg !11019
  %20 = load i32*, i32** %data.addr, align 8, !dbg !11020
  %arrayidx14 = getelementptr i32, i32* %20, i64 1, !dbg !11020
  %21 = load i32, i32* %arrayidx14, align 4, !dbg !11020
  %conv15 = zext i32 %21 to i64, !dbg !11020
  %22 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11021
  %serial_interval_ns = getelementptr inbounds %struct.ni_private, %struct.ni_private* %22, i32 0, i32 22, !dbg !11022
  store i64 %conv15, i64* %serial_interval_ns, align 8, !dbg !11023
  br label %if.end80, !dbg !11024

if.else:                                          ; preds = %sw.bb
  %23 = load i32*, i32** %data.addr, align 8, !dbg !11025
  %arrayidx16 = getelementptr i32, i32* %23, i64 1, !dbg !11025
  %24 = load i32, i32* %arrayidx16, align 4, !dbg !11025
  %cmp17 = icmp ule i32 %24, 600, !dbg !11027
  br i1 %cmp17, label %if.then19, label %if.else34, !dbg !11028

if.then19:                                        ; preds = %if.else
  %25 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11029
  %dio_control20 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %25, i32 0, i32 1, !dbg !11031
  %26 = load i16, i16* %dio_control20, align 2, !dbg !11032
  %conv21 = zext i16 %26 to i64, !dbg !11032
  %and22 = and i64 %conv21, -1025, !dbg !11032
  %conv23 = trunc i64 %and22 to i16, !dbg !11032
  store i16 %conv23, i16* %dio_control20, align 2, !dbg !11032
  %27 = load i32, i32* %clk_fout, align 4, !dbg !11033
  %conv24 = zext i32 %27 to i64, !dbg !11033
  %or25 = or i64 %conv24, 2048, !dbg !11033
  %conv26 = trunc i64 %or25 to i32, !dbg !11033
  store i32 %conv26, i32* %clk_fout, align 4, !dbg !11033
  %28 = load i32, i32* %clk_fout, align 4, !dbg !11034
  %conv27 = zext i32 %28 to i64, !dbg !11034
  %and28 = and i64 %conv27, -8193, !dbg !11034
  %conv29 = trunc i64 %and28 to i32, !dbg !11034
  store i32 %conv29, i32* %clk_fout, align 4, !dbg !11034
  %29 = load i32*, i32** %data.addr, align 8, !dbg !11035
  %arrayidx30 = getelementptr i32, i32* %29, i64 1, !dbg !11035
  store i32 600, i32* %arrayidx30, align 4, !dbg !11036
  %30 = load i32*, i32** %data.addr, align 8, !dbg !11037
  %arrayidx31 = getelementptr i32, i32* %30, i64 1, !dbg !11037
  %31 = load i32, i32* %arrayidx31, align 4, !dbg !11037
  %conv32 = zext i32 %31 to i64, !dbg !11037
  %32 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11038
  %serial_interval_ns33 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %32, i32 0, i32 22, !dbg !11039
  store i64 %conv32, i64* %serial_interval_ns33, align 8, !dbg !11040
  br label %if.end79, !dbg !11041

if.else34:                                        ; preds = %if.else
  %33 = load i32*, i32** %data.addr, align 8, !dbg !11042
  %arrayidx35 = getelementptr i32, i32* %33, i64 1, !dbg !11042
  %34 = load i32, i32* %arrayidx35, align 4, !dbg !11042
  %cmp36 = icmp ule i32 %34, 1200, !dbg !11044
  br i1 %cmp36, label %if.then38, label %if.else50, !dbg !11045

if.then38:                                        ; preds = %if.else34
  %35 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11046
  %dio_control39 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %35, i32 0, i32 1, !dbg !11048
  %36 = load i16, i16* %dio_control39, align 2, !dbg !11049
  %conv40 = zext i16 %36 to i64, !dbg !11049
  %and41 = and i64 %conv40, -1025, !dbg !11049
  %conv42 = trunc i64 %and41 to i16, !dbg !11049
  store i16 %conv42, i16* %dio_control39, align 2, !dbg !11049
  %37 = load i32, i32* %clk_fout, align 4, !dbg !11050
  %conv43 = zext i32 %37 to i64, !dbg !11050
  %or44 = or i64 %conv43, 10240, !dbg !11050
  %conv45 = trunc i64 %or44 to i32, !dbg !11050
  store i32 %conv45, i32* %clk_fout, align 4, !dbg !11050
  %38 = load i32*, i32** %data.addr, align 8, !dbg !11051
  %arrayidx46 = getelementptr i32, i32* %38, i64 1, !dbg !11051
  store i32 1200, i32* %arrayidx46, align 4, !dbg !11052
  %39 = load i32*, i32** %data.addr, align 8, !dbg !11053
  %arrayidx47 = getelementptr i32, i32* %39, i64 1, !dbg !11053
  %40 = load i32, i32* %arrayidx47, align 4, !dbg !11053
  %conv48 = zext i32 %40 to i64, !dbg !11053
  %41 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11054
  %serial_interval_ns49 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %41, i32 0, i32 22, !dbg !11055
  store i64 %conv48, i64* %serial_interval_ns49, align 8, !dbg !11056
  br label %if.end78, !dbg !11057

if.else50:                                        ; preds = %if.else34
  %42 = load i32*, i32** %data.addr, align 8, !dbg !11058
  %arrayidx51 = getelementptr i32, i32* %42, i64 1, !dbg !11058
  %43 = load i32, i32* %arrayidx51, align 4, !dbg !11058
  %cmp52 = icmp ule i32 %43, 10000, !dbg !11060
  br i1 %cmp52, label %if.then54, label %if.else66, !dbg !11061

if.then54:                                        ; preds = %if.else50
  %44 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11062
  %dio_control55 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %44, i32 0, i32 1, !dbg !11064
  %45 = load i16, i16* %dio_control55, align 2, !dbg !11065
  %conv56 = zext i16 %45 to i64, !dbg !11065
  %or57 = or i64 %conv56, 1024, !dbg !11065
  %conv58 = trunc i64 %or57 to i16, !dbg !11065
  store i16 %conv58, i16* %dio_control55, align 2, !dbg !11065
  %46 = load i32, i32* %clk_fout, align 4, !dbg !11066
  %conv59 = zext i32 %46 to i64, !dbg !11066
  %or60 = or i64 %conv59, 10240, !dbg !11066
  %conv61 = trunc i64 %or60 to i32, !dbg !11066
  store i32 %conv61, i32* %clk_fout, align 4, !dbg !11066
  %47 = load i32*, i32** %data.addr, align 8, !dbg !11067
  %arrayidx62 = getelementptr i32, i32* %47, i64 1, !dbg !11067
  store i32 10000, i32* %arrayidx62, align 4, !dbg !11068
  %48 = load i32*, i32** %data.addr, align 8, !dbg !11069
  %arrayidx63 = getelementptr i32, i32* %48, i64 1, !dbg !11069
  %49 = load i32, i32* %arrayidx63, align 4, !dbg !11069
  %conv64 = zext i32 %49 to i64, !dbg !11069
  %50 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11070
  %serial_interval_ns65 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %50, i32 0, i32 22, !dbg !11071
  store i64 %conv64, i64* %serial_interval_ns65, align 8, !dbg !11072
  br label %if.end77, !dbg !11073

if.else66:                                        ; preds = %if.else50
  %51 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11074
  %dio_control67 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %51, i32 0, i32 1, !dbg !11076
  %52 = load i16, i16* %dio_control67, align 2, !dbg !11077
  %conv68 = zext i16 %52 to i64, !dbg !11077
  %and69 = and i64 %conv68, -2561, !dbg !11077
  %conv70 = trunc i64 %and69 to i16, !dbg !11077
  store i16 %conv70, i16* %dio_control67, align 2, !dbg !11077
  %53 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11078
  %serial_hw_mode71 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %53, i32 0, i32 23, !dbg !11079
  store i8 0, i8* %serial_hw_mode71, align 8, !dbg !11080
  %54 = load i32*, i32** %data.addr, align 8, !dbg !11081
  %arrayidx72 = getelementptr i32, i32* %54, i64 1, !dbg !11081
  %55 = load i32, i32* %arrayidx72, align 4, !dbg !11081
  %div = udiv i32 %55, 1000, !dbg !11082
  %mul = mul i32 %div, 1000, !dbg !11083
  %56 = load i32*, i32** %data.addr, align 8, !dbg !11084
  %arrayidx73 = getelementptr i32, i32* %56, i64 1, !dbg !11084
  store i32 %mul, i32* %arrayidx73, align 4, !dbg !11085
  %57 = load i32*, i32** %data.addr, align 8, !dbg !11086
  %arrayidx74 = getelementptr i32, i32* %57, i64 1, !dbg !11086
  %58 = load i32, i32* %arrayidx74, align 4, !dbg !11086
  %conv75 = zext i32 %58 to i64, !dbg !11086
  %59 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11087
  %serial_interval_ns76 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %59, i32 0, i32 22, !dbg !11088
  store i64 %conv75, i64* %serial_interval_ns76, align 8, !dbg !11089
  br label %if.end77

if.end77:                                         ; preds = %if.else66, %if.then54
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.then38
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %if.then19
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.then8
  %60 = load i32, i32* %clk_fout, align 4, !dbg !11090
  %conv81 = trunc i32 %60 to i16, !dbg !11090
  %61 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11091
  %clock_and_fout82 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %61, i32 0, i32 24, !dbg !11092
  store i16 %conv81, i16* %clock_and_fout82, align 2, !dbg !11093
  %62 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11094
  %63 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11095
  %dio_control83 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %63, i32 0, i32 1, !dbg !11096
  %64 = load i16, i16* %dio_control83, align 2, !dbg !11096
  %conv84 = zext i16 %64 to i32, !dbg !11095
  call void @ni_stc_writew(%struct.comedi_device* %62, i32 %conv84, i32 11) #9, !dbg !11097
  %65 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11098
  %66 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11099
  %clock_and_fout85 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %66, i32 0, i32 24, !dbg !11100
  %67 = load i16, i16* %clock_and_fout85, align 2, !dbg !11100
  %conv86 = zext i16 %67 to i32, !dbg !11099
  call void @ni_stc_writew(%struct.comedi_device* %65, i32 %conv86, i32 56) #9, !dbg !11101
  store i32 1, i32* %retval, align 4, !dbg !11102
  br label %return, !dbg !11102

sw.bb87:                                          ; preds = %if.end
  %68 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11103
  %serial_interval_ns88 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %68, i32 0, i32 22, !dbg !11105
  %69 = load i64, i64* %serial_interval_ns88, align 8, !dbg !11105
  %cmp89 = icmp eq i64 %69, 0, !dbg !11106
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !11107

if.then91:                                        ; preds = %sw.bb87
  store i32 -22, i32* %retval, align 4, !dbg !11108
  br label %return, !dbg !11108

if.end92:                                         ; preds = %sw.bb87
  %70 = load i32*, i32** %data.addr, align 8, !dbg !11109
  %arrayidx93 = getelementptr i32, i32* %70, i64 1, !dbg !11109
  %71 = load i32, i32* %arrayidx93, align 4, !dbg !11109
  %and94 = and i32 %71, 255, !dbg !11110
  %conv95 = trunc i32 %and94 to i8, !dbg !11109
  store i8 %conv95, i8* %byte_out, align 1, !dbg !11111
  %72 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11112
  %serial_hw_mode96 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %72, i32 0, i32 23, !dbg !11114
  %73 = load i8, i8* %serial_hw_mode96, align 8, !dbg !11114
  %tobool = icmp ne i8 %73, 0, !dbg !11112
  br i1 %tobool, label %if.then97, label %if.else98, !dbg !11115

if.then97:                                        ; preds = %if.end92
  %74 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11116
  %75 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !11118
  %76 = load i8, i8* %byte_out, align 1, !dbg !11119
  %call = call i32 @ni_serial_hw_readwrite8(%struct.comedi_device* %74, %struct.comedi_subdevice* %75, i8 zeroext %76, i8* %byte_in) #9, !dbg !11120
  store i32 %call, i32* %err, align 4, !dbg !11121
  br label %if.end106, !dbg !11122

if.else98:                                        ; preds = %if.end92
  %77 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11123
  %serial_interval_ns99 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %77, i32 0, i32 22, !dbg !11125
  %78 = load i64, i64* %serial_interval_ns99, align 8, !dbg !11125
  %cmp100 = icmp ugt i64 %78, 0, !dbg !11126
  br i1 %cmp100, label %if.then102, label %if.else104, !dbg !11127

if.then102:                                       ; preds = %if.else98
  %79 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11128
  %80 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !11130
  %81 = load i8, i8* %byte_out, align 1, !dbg !11131
  %call103 = call i32 @ni_serial_sw_readwrite8(%struct.comedi_device* %79, %struct.comedi_subdevice* %80, i8 zeroext %81, i8* %byte_in) #9, !dbg !11132
  store i32 %call103, i32* %err, align 4, !dbg !11133
  br label %if.end105, !dbg !11134

if.else104:                                       ; preds = %if.else98
  %82 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11135
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %82, i32 0, i32 4, !dbg !11135
  %83 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !11135
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %83, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.115, i64 0, i64 0)) #11, !dbg !11135
  store i32 -22, i32* %retval, align 4, !dbg !11137
  br label %return, !dbg !11137

if.end105:                                        ; preds = %if.then102
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.then97
  %84 = load i32, i32* %err, align 4, !dbg !11138
  %cmp107 = icmp slt i32 %84, 0, !dbg !11140
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !11141

if.then109:                                       ; preds = %if.end106
  %85 = load i32, i32* %err, align 4, !dbg !11142
  store i32 %85, i32* %retval, align 4, !dbg !11143
  br label %return, !dbg !11143

if.end110:                                        ; preds = %if.end106
  %86 = load i8, i8* %byte_in, align 1, !dbg !11144
  %conv111 = zext i8 %86 to i32, !dbg !11144
  %and112 = and i32 %conv111, 255, !dbg !11145
  %87 = load i32*, i32** %data.addr, align 8, !dbg !11146
  %arrayidx113 = getelementptr i32, i32* %87, i64 1, !dbg !11146
  store i32 %and112, i32* %arrayidx113, align 4, !dbg !11147
  %88 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11148
  %n114 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %88, i32 0, i32 1, !dbg !11149
  %89 = load i32, i32* %n114, align 4, !dbg !11149
  store i32 %89, i32* %retval, align 4, !dbg !11150
  br label %return, !dbg !11150

sw.default:                                       ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !11151
  br label %return, !dbg !11151

return:                                           ; preds = %sw.default, %if.end110, %if.then109, %if.else104, %if.then91, %if.end80, %if.then
  %90 = load i32, i32* %retval, align 4, !dbg !11152
  ret i32 %90, !dbg !11152
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_rtsi_insn_bits(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !11153 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11154, metadata !DIExpression()), !dbg !11155
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !11156, metadata !DIExpression()), !dbg !11157
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !11158, metadata !DIExpression()), !dbg !11159
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !11160, metadata !DIExpression()), !dbg !11161
  %0 = load i32*, i32** %data.addr, align 8, !dbg !11162
  %arrayidx = getelementptr i32, i32* %0, i64 1, !dbg !11162
  store i32 0, i32* %arrayidx, align 4, !dbg !11163
  %1 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11164
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %1, i32 0, i32 1, !dbg !11165
  %2 = load i32, i32* %n, align 4, !dbg !11165
  ret i32 %2, !dbg !11166
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_rtsi_insn_config(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !11167 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %chan = alloca i32, align 4
  %ret = alloca i32, align 4
  %ret15 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11168, metadata !DIExpression()), !dbg !11169
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !11170, metadata !DIExpression()), !dbg !11171
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !11172, metadata !DIExpression()), !dbg !11173
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !11174, metadata !DIExpression()), !dbg !11175
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !11176, metadata !DIExpression()), !dbg !11177
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11178
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !11179
  %1 = load i8*, i8** %private, align 8, !dbg !11179
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !11178
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !11177
  call void @llvm.dbg.declare(metadata i32* %chan, metadata !11180, metadata !DIExpression()), !dbg !11181
  %3 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11182
  %chanspec = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %3, i32 0, i32 4, !dbg !11182
  %4 = load i32, i32* %chanspec, align 4, !dbg !11182
  %and = and i32 %4, 65535, !dbg !11182
  store i32 %and, i32* %chan, align 4, !dbg !11181
  %5 = load i32*, i32** %data.addr, align 8, !dbg !11183
  %arrayidx = getelementptr i32, i32* %5, i64 0, !dbg !11183
  %6 = load i32, i32* %arrayidx, align 4, !dbg !11183
  switch i32 %6, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb
    i32 28, label %sw.bb2
    i32 2003, label %sw.bb4
    i32 2004, label %sw.bb8
    i32 4099, label %sw.bb11
    i32 4109, label %sw.bb14
  ], !dbg !11184

sw.bb:                                            ; preds = %entry, %entry
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11185
  %8 = load i32, i32* %chan, align 4, !dbg !11187
  %9 = load i32*, i32** %data.addr, align 8, !dbg !11188
  %arrayidx1 = getelementptr i32, i32* %9, i64 0, !dbg !11188
  %10 = load i32, i32* %arrayidx1, align 4, !dbg !11188
  call void @ni_set_rtsi_direction(%struct.comedi_device* %7, i32 %8, i32 %10) #9, !dbg !11189
  br label %sw.epilog, !dbg !11190

sw.bb2:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11191, metadata !DIExpression()), !dbg !11193
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11194
  %12 = load i32, i32* %chan, align 4, !dbg !11195
  %call = call i32 @ni_get_rtsi_direction(%struct.comedi_device* %11, i32 %12) #9, !dbg !11196
  store i32 %call, i32* %ret, align 4, !dbg !11193
  %13 = load i32, i32* %ret, align 4, !dbg !11197
  %cmp = icmp slt i32 %13, 0, !dbg !11199
  br i1 %cmp, label %if.then, label %if.end, !dbg !11200

if.then:                                          ; preds = %sw.bb2
  %14 = load i32, i32* %ret, align 4, !dbg !11201
  store i32 %14, i32* %retval, align 4, !dbg !11202
  br label %return, !dbg !11202

if.end:                                           ; preds = %sw.bb2
  %15 = load i32, i32* %ret, align 4, !dbg !11203
  %16 = load i32*, i32** %data.addr, align 8, !dbg !11204
  %arrayidx3 = getelementptr i32, i32* %16, i64 1, !dbg !11204
  store i32 %15, i32* %arrayidx3, align 4, !dbg !11205
  store i32 2, i32* %retval, align 4, !dbg !11206
  br label %return, !dbg !11206

sw.bb4:                                           ; preds = %entry
  %17 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11207
  %18 = load i32*, i32** %data.addr, align 8, !dbg !11208
  %arrayidx5 = getelementptr i32, i32* %18, i64 1, !dbg !11208
  %19 = load i32, i32* %arrayidx5, align 4, !dbg !11208
  %20 = load i32*, i32** %data.addr, align 8, !dbg !11209
  %arrayidx6 = getelementptr i32, i32* %20, i64 2, !dbg !11209
  %21 = load i32, i32* %arrayidx6, align 4, !dbg !11209
  %call7 = call i32 @ni_set_master_clock(%struct.comedi_device* %17, i32 %19, i32 %21) #9, !dbg !11210
  store i32 %call7, i32* %retval, align 4, !dbg !11211
  br label %return, !dbg !11211

sw.bb8:                                           ; preds = %entry
  %22 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11212
  %clock_source = getelementptr inbounds %struct.ni_private, %struct.ni_private* %22, i32 0, i32 37, !dbg !11213
  %23 = load i32, i32* %clock_source, align 8, !dbg !11213
  %24 = load i32*, i32** %data.addr, align 8, !dbg !11214
  %arrayidx9 = getelementptr i32, i32* %24, i64 1, !dbg !11214
  store i32 %23, i32* %arrayidx9, align 4, !dbg !11215
  %25 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11216
  %clock_ns = getelementptr inbounds %struct.ni_private, %struct.ni_private* %25, i32 0, i32 36, !dbg !11217
  %26 = load i32, i32* %clock_ns, align 4, !dbg !11217
  %27 = load i32*, i32** %data.addr, align 8, !dbg !11218
  %arrayidx10 = getelementptr i32, i32* %27, i64 2, !dbg !11218
  store i32 %26, i32* %arrayidx10, align 4, !dbg !11219
  store i32 3, i32* %retval, align 4, !dbg !11220
  br label %return, !dbg !11220

sw.bb11:                                          ; preds = %entry
  %28 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11221
  %29 = load i32, i32* %chan, align 4, !dbg !11222
  %30 = load i32*, i32** %data.addr, align 8, !dbg !11223
  %arrayidx12 = getelementptr i32, i32* %30, i64 1, !dbg !11223
  %31 = load i32, i32* %arrayidx12, align 4, !dbg !11223
  %call13 = call i32 @ni_set_rtsi_routing(%struct.comedi_device* %28, i32 %29, i32 %31) #9, !dbg !11224
  store i32 %call13, i32* %retval, align 4, !dbg !11225
  br label %return, !dbg !11225

sw.bb14:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %ret15, metadata !11226, metadata !DIExpression()), !dbg !11228
  %32 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11229
  %33 = load i32, i32* %chan, align 4, !dbg !11230
  %call16 = call i32 @ni_get_rtsi_routing(%struct.comedi_device* %32, i32 %33) #9, !dbg !11231
  store i32 %call16, i32* %ret15, align 4, !dbg !11228
  %34 = load i32, i32* %ret15, align 4, !dbg !11232
  %cmp17 = icmp slt i32 %34, 0, !dbg !11234
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !11235

if.then18:                                        ; preds = %sw.bb14
  %35 = load i32, i32* %ret15, align 4, !dbg !11236
  store i32 %35, i32* %retval, align 4, !dbg !11237
  br label %return, !dbg !11237

if.end19:                                         ; preds = %sw.bb14
  %36 = load i32, i32* %ret15, align 4, !dbg !11238
  %37 = load i32*, i32** %data.addr, align 8, !dbg !11239
  %arrayidx20 = getelementptr i32, i32* %37, i64 1, !dbg !11239
  store i32 %36, i32* %arrayidx20, align 4, !dbg !11240
  store i32 2, i32* %retval, align 4, !dbg !11241
  br label %return, !dbg !11241

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11242
  br label %return, !dbg !11242

sw.epilog:                                        ; preds = %sw.bb
  store i32 1, i32* %retval, align 4, !dbg !11243
  br label %return, !dbg !11243

return:                                           ; preds = %sw.epilog, %sw.default, %if.end19, %if.then18, %sw.bb11, %sw.bb8, %sw.bb4, %if.end, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !11244
  ret i32 %38, !dbg !11244
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_rtsi_init(%struct.comedi_device* %dev) #2 !dbg !11245 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %i = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11246, metadata !DIExpression()), !dbg !11247
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !11248, metadata !DIExpression()), !dbg !11249
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11250
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !11251
  %1 = load i8*, i8** %private, align 8, !dbg !11251
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !11250
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !11249
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11252, metadata !DIExpression()), !dbg !11253
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11254
  %clock_and_fout2 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 25, !dbg !11255
  store i16 128, i16* %clock_and_fout2, align 4, !dbg !11256
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11257
  %call = call i32 @ni_set_master_clock(%struct.comedi_device* %4, i32 0, i32 0) #9, !dbg !11259
  %cmp = icmp slt i32 %call, 0, !dbg !11260
  br i1 %cmp, label %if.then, label %if.end, !dbg !11261

if.then:                                          ; preds = %entry
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11262
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %5, i32 0, i32 4, !dbg !11262
  %6 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !11262
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.121, i64 0, i64 0)) #11, !dbg !11262
  br label %if.end, !dbg !11262

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !11263
  br label %for.cond, !dbg !11265

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %i, align 4, !dbg !11266
  %cmp1 = icmp slt i32 %7, 8, !dbg !11268
  br i1 %cmp1, label %for.body, label %for.end, !dbg !11269

for.body:                                         ; preds = %for.cond
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11270
  %9 = load i32, i32* %i, align 4, !dbg !11272
  call void @ni_set_rtsi_direction(%struct.comedi_device* %8, i32 %9, i32 0) #9, !dbg !11273
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11274
  %11 = load i32, i32* %i, align 4, !dbg !11275
  %12 = load i32, i32* %i, align 4, !dbg !11276
  %idxprom = sext i32 %12 to i64, !dbg !11277
  %arrayidx = getelementptr [8 x i32], [8 x i32]* @default_rtsi_routing, i64 0, i64 %idxprom, !dbg !11277
  %13 = load i32, i32* %arrayidx, align 4, !dbg !11277
  %call2 = call i32 @ni_set_rtsi_routing(%struct.comedi_device* %10, i32 %11, i32 %13) #9, !dbg !11278
  br label %for.inc, !dbg !11279

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !11280
  %inc = add i32 %14, 1, !dbg !11280
  store i32 %inc, i32* %i, align 4, !dbg !11280
  br label %for.cond, !dbg !11281, !llvm.loop !11282

for.end:                                          ; preds = %for.cond
  %15 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11284
  %rtsi_shared_mux_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %15, i32 0, i32 53, !dbg !11285
  store i16 0, i16* %rtsi_shared_mux_reg, align 4, !dbg !11286
  store i32 0, i32* %i, align 4, !dbg !11287
  br label %for.cond3, !dbg !11289

for.cond3:                                        ; preds = %for.inc6, %for.end
  %16 = load i32, i32* %i, align 4, !dbg !11290
  %cmp4 = icmp slt i32 %16, 4, !dbg !11292
  br i1 %cmp4, label %for.body5, label %for.end8, !dbg !11293

for.body5:                                        ; preds = %for.cond3
  %17 = load i32, i32* %i, align 4, !dbg !11294
  %18 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11295
  call void @set_ith_rtsi_brd_reg(i32 %17, i32 0, %struct.comedi_device* %18) #9, !dbg !11296
  br label %for.inc6, !dbg !11296

for.inc6:                                         ; preds = %for.body5
  %19 = load i32, i32* %i, align 4, !dbg !11297
  %inc7 = add i32 %19, 1, !dbg !11297
  store i32 %inc7, i32* %i, align 4, !dbg !11297
  br label %for.cond3, !dbg !11298, !llvm.loop !11299

for.end8:                                         ; preds = %for.cond3
  %20 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11301
  %rtsi_shared_mux_usage = getelementptr inbounds %struct.ni_private, %struct.ni_private* %20, i32 0, i32 52, !dbg !11302
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %rtsi_shared_mux_usage, i64 0, i64 0, !dbg !11303
  call void @llvm.memset.p0i8.i64(i8* align 8 %arraydecay, i8 0, i64 4, i1 false), !dbg !11303
  %21 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11304
  %rgout0_usage = getelementptr inbounds %struct.ni_private, %struct.ni_private* %21, i32 0, i32 54, !dbg !11305
  store i8 0, i8* %rgout0_usage, align 2, !dbg !11306
  %22 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11307
  call void @set_rgout0_reg(i32 0, %struct.comedi_device* %22) #9, !dbg !11308
  ret void, !dbg !11309
}

; Function Attrs: noredzone
declare dso_local %struct.ni_gpct_device* @ni_gpct_device_construct(%struct.comedi_device*, void (%struct.ni_gpct*, i32, i32)*, i32 (%struct.ni_gpct*, i32)*, i32, i32, i32, %struct.ni_route_tables*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_gpct_write_register(%struct.ni_gpct* %counter, i32 %bits, i32 %reg) #2 !dbg !11310 {
entry:
  %counter.addr = alloca %struct.ni_gpct*, align 8
  %bits.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  %dev = alloca %struct.comedi_device*, align 8
  %stc_register = alloca i32, align 4
  store %struct.ni_gpct* %counter, %struct.ni_gpct** %counter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ni_gpct** %counter.addr, metadata !11311, metadata !DIExpression()), !dbg !11312
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !11313, metadata !DIExpression()), !dbg !11314
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !11315, metadata !DIExpression()), !dbg !11316
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !11317, metadata !DIExpression()), !dbg !11318
  %0 = load %struct.ni_gpct*, %struct.ni_gpct** %counter.addr, align 8, !dbg !11319
  %counter_dev = getelementptr inbounds %struct.ni_gpct, %struct.ni_gpct* %0, i32 0, i32 0, !dbg !11320
  %1 = load %struct.ni_gpct_device*, %struct.ni_gpct_device** %counter_dev, align 8, !dbg !11320
  %dev1 = getelementptr inbounds %struct.ni_gpct_device, %struct.ni_gpct_device* %1, i32 0, i32 0, !dbg !11321
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev1, align 8, !dbg !11321
  store %struct.comedi_device* %2, %struct.comedi_device** %dev, align 8, !dbg !11318
  call void @llvm.dbg.declare(metadata i32* %stc_register, metadata !11322, metadata !DIExpression()), !dbg !11323
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !11324
  %4 = load i32, i32* %reg.addr, align 4, !dbg !11325
  %call = call i32 @ni_gpct_to_stc_register(%struct.comedi_device* %3, i32 %4) #9, !dbg !11326
  store i32 %call, i32* %stc_register, align 4, !dbg !11323
  %5 = load i32, i32* %stc_register, align 4, !dbg !11327
  %cmp = icmp eq i32 %5, 0, !dbg !11329
  br i1 %cmp, label %if.then, label %if.end, !dbg !11330

if.then:                                          ; preds = %entry
  br label %sw.epilog, !dbg !11331

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %reg.addr, align 4, !dbg !11332
  switch i32 %6, label %sw.default [
    i32 32, label %sw.bb
    i32 33, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 20, label %sw.bb2
    i32 21, label %sw.bb2
    i32 24, label %sw.bb2
    i32 25, label %sw.bb2
    i32 66, label %sw.bb3
    i32 67, label %sw.bb4
  ], !dbg !11333

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !11334
  %8 = load i32, i32* %bits.addr, align 4, !dbg !11336
  %9 = load i32, i32* %stc_register, align 4, !dbg !11337
  call void @ni_writew(%struct.comedi_device* %7, i32 %8, i32 %9) #9, !dbg !11338
  br label %sw.epilog, !dbg !11339

sw.bb2:                                           ; preds = %if.end, %if.end, %if.end, %if.end
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !11340
  %11 = load i32, i32* %bits.addr, align 4, !dbg !11341
  %12 = load i32, i32* %stc_register, align 4, !dbg !11342
  call void @ni_stc_writel(%struct.comedi_device* %10, i32 %11, i32 %12) #9, !dbg !11343
  br label %sw.epilog, !dbg !11344

sw.bb3:                                           ; preds = %if.end
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !11345
  %14 = load i32, i32* %stc_register, align 4, !dbg !11346
  %15 = load i32, i32* %bits.addr, align 4, !dbg !11347
  call void @ni_set_bitfield(%struct.comedi_device* %13, i32 %14, i32 320, i32 %15) #9, !dbg !11348
  br label %sw.epilog, !dbg !11349

sw.bb4:                                           ; preds = %if.end
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !11350
  %17 = load i32, i32* %stc_register, align 4, !dbg !11351
  %18 = load i32, i32* %bits.addr, align 4, !dbg !11352
  call void @ni_set_bitfield(%struct.comedi_device* %16, i32 %17, i32 1536, i32 %18) #9, !dbg !11353
  br label %sw.epilog, !dbg !11354

sw.default:                                       ; preds = %if.end
  %19 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !11355
  %20 = load i32, i32* %bits.addr, align 4, !dbg !11356
  %21 = load i32, i32* %stc_register, align 4, !dbg !11357
  call void @ni_stc_writew(%struct.comedi_device* %19, i32 %20, i32 %21) #9, !dbg !11358
  br label %sw.epilog, !dbg !11359

sw.epilog:                                        ; preds = %if.then, %sw.default, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb
  ret void, !dbg !11360
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_gpct_read_register(%struct.ni_gpct* %counter, i32 %reg) #2 !dbg !11361 {
entry:
  %retval = alloca i32, align 4
  %counter.addr = alloca %struct.ni_gpct*, align 8
  %reg.addr = alloca i32, align 4
  %dev = alloca %struct.comedi_device*, align 8
  %stc_register = alloca i32, align 4
  store %struct.ni_gpct* %counter, %struct.ni_gpct** %counter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ni_gpct** %counter.addr, metadata !11362, metadata !DIExpression()), !dbg !11363
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !11364, metadata !DIExpression()), !dbg !11365
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !11366, metadata !DIExpression()), !dbg !11367
  %0 = load %struct.ni_gpct*, %struct.ni_gpct** %counter.addr, align 8, !dbg !11368
  %counter_dev = getelementptr inbounds %struct.ni_gpct, %struct.ni_gpct* %0, i32 0, i32 0, !dbg !11369
  %1 = load %struct.ni_gpct_device*, %struct.ni_gpct_device** %counter_dev, align 8, !dbg !11369
  %dev1 = getelementptr inbounds %struct.ni_gpct_device, %struct.ni_gpct_device* %1, i32 0, i32 0, !dbg !11370
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev1, align 8, !dbg !11370
  store %struct.comedi_device* %2, %struct.comedi_device** %dev, align 8, !dbg !11367
  call void @llvm.dbg.declare(metadata i32* %stc_register, metadata !11371, metadata !DIExpression()), !dbg !11372
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !11373
  %4 = load i32, i32* %reg.addr, align 4, !dbg !11374
  %call = call i32 @ni_gpct_to_stc_register(%struct.comedi_device* %3, i32 %4) #9, !dbg !11375
  store i32 %call, i32* %stc_register, align 4, !dbg !11372
  %5 = load i32, i32* %stc_register, align 4, !dbg !11376
  %cmp = icmp eq i32 %5, 0, !dbg !11378
  br i1 %cmp, label %if.then, label %if.end, !dbg !11379

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11380
  br label %return, !dbg !11380

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %reg.addr, align 4, !dbg !11381
  switch i32 %6, label %sw.default [
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 8, label %sw.bb3
    i32 9, label %sw.bb3
    i32 12, label %sw.bb3
    i32 13, label %sw.bb3
  ], !dbg !11382

sw.bb:                                            ; preds = %if.end, %if.end
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !11383
  %8 = load i32, i32* %stc_register, align 4, !dbg !11385
  %call2 = call i32 @ni_readw(%struct.comedi_device* %7, i32 %8) #9, !dbg !11386
  store i32 %call2, i32* %retval, align 4, !dbg !11387
  br label %return, !dbg !11387

sw.bb3:                                           ; preds = %if.end, %if.end, %if.end, %if.end
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !11388
  %10 = load i32, i32* %stc_register, align 4, !dbg !11389
  %call4 = call i32 @ni_stc_readl(%struct.comedi_device* %9, i32 %10) #9, !dbg !11390
  store i32 %call4, i32* %retval, align 4, !dbg !11391
  br label %return, !dbg !11391

sw.default:                                       ; preds = %if.end
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !11392
  %12 = load i32, i32* %stc_register, align 4, !dbg !11393
  %call5 = call i32 @ni_stc_readw(%struct.comedi_device* %11, i32 %12) #9, !dbg !11394
  store i32 %call5, i32* %retval, align 4, !dbg !11395
  br label %return, !dbg !11395

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !11396
  ret i32 %13, !dbg !11396
}

; Function Attrs: noredzone
declare dso_local void @ni_tio_init_counter(%struct.ni_gpct*) #1

; Function Attrs: noredzone
declare dso_local i32 @ni_tio_insn_read(%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*) #1

; Function Attrs: noredzone
declare dso_local i32 @ni_tio_insn_write(%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*) #1

; Function Attrs: noredzone
declare dso_local i32 @ni_tio_insn_config(%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*) #1

; Function Attrs: noredzone
declare dso_local i32 @ni_tio_cmdtest(%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_cmd*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_gpct_cmd(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #2 !dbg !11397 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %counter = alloca %struct.ni_gpct*, align 8
  %retval1 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11398, metadata !DIExpression()), !dbg !11399
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !11400, metadata !DIExpression()), !dbg !11401
  call void @llvm.dbg.declare(metadata %struct.ni_gpct** %counter, metadata !11402, metadata !DIExpression()), !dbg !11403
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !11404
  %private = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %0, i32 0, i32 6, !dbg !11405
  %1 = load i8*, i8** %private, align 8, !dbg !11405
  %2 = bitcast i8* %1 to %struct.ni_gpct*, !dbg !11404
  store %struct.ni_gpct* %2, %struct.ni_gpct** %counter, align 8, !dbg !11403
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !11406, metadata !DIExpression()), !dbg !11407
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11408
  %4 = load %struct.ni_gpct*, %struct.ni_gpct** %counter, align 8, !dbg !11409
  %counter_index = getelementptr inbounds %struct.ni_gpct, %struct.ni_gpct* %4, i32 0, i32 1, !dbg !11410
  %5 = load i32, i32* %counter_index, align 8, !dbg !11410
  %call = call i32 @ni_request_gpct_mite_channel(%struct.comedi_device* %3, i32 %5, i32 0) #9, !dbg !11411
  store i32 %call, i32* %retval1, align 4, !dbg !11412
  %6 = load i32, i32* %retval1, align 4, !dbg !11413
  %tobool = icmp ne i32 %6, 0, !dbg !11413
  br i1 %tobool, label %if.then, label %if.end, !dbg !11415

if.then:                                          ; preds = %entry
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11416
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %7, i32 0, i32 4, !dbg !11416
  %8 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !11416
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %8, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.122, i64 0, i64 0)) #11, !dbg !11416
  %9 = load i32, i32* %retval1, align 4, !dbg !11418
  store i32 %9, i32* %retval, align 4, !dbg !11419
  br label %return, !dbg !11419

if.end:                                           ; preds = %entry
  %10 = load %struct.ni_gpct*, %struct.ni_gpct** %counter, align 8, !dbg !11420
  call void @ni_tio_acknowledge(%struct.ni_gpct* %10) #9, !dbg !11421
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11422
  %12 = load %struct.ni_gpct*, %struct.ni_gpct** %counter, align 8, !dbg !11423
  %counter_index2 = getelementptr inbounds %struct.ni_gpct, %struct.ni_gpct* %12, i32 0, i32 1, !dbg !11424
  %13 = load i32, i32* %counter_index2, align 8, !dbg !11424
  call void @ni_e_series_enable_second_irq(%struct.comedi_device* %11, i32 %13, i16 signext 1) #9, !dbg !11425
  %14 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11426
  %15 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !11427
  %call3 = call i32 @ni_tio_cmd(%struct.comedi_device* %14, %struct.comedi_subdevice* %15) #9, !dbg !11428
  store i32 %call3, i32* %retval, align 4, !dbg !11429
  br label %return, !dbg !11429

return:                                           ; preds = %if.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !11430
  ret i32 %16, !dbg !11430
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_gpct_cancel(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #2 !dbg !11431 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %counter = alloca %struct.ni_gpct*, align 8
  %retval1 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11432, metadata !DIExpression()), !dbg !11433
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !11434, metadata !DIExpression()), !dbg !11435
  call void @llvm.dbg.declare(metadata %struct.ni_gpct** %counter, metadata !11436, metadata !DIExpression()), !dbg !11437
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !11438
  %private = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %0, i32 0, i32 6, !dbg !11439
  %1 = load i8*, i8** %private, align 8, !dbg !11439
  %2 = bitcast i8* %1 to %struct.ni_gpct*, !dbg !11438
  store %struct.ni_gpct* %2, %struct.ni_gpct** %counter, align 8, !dbg !11437
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !11440, metadata !DIExpression()), !dbg !11441
  %3 = load %struct.ni_gpct*, %struct.ni_gpct** %counter, align 8, !dbg !11442
  %call = call i32 @ni_tio_cancel(%struct.ni_gpct* %3) #9, !dbg !11443
  store i32 %call, i32* %retval1, align 4, !dbg !11444
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11445
  %5 = load %struct.ni_gpct*, %struct.ni_gpct** %counter, align 8, !dbg !11446
  %counter_index = getelementptr inbounds %struct.ni_gpct, %struct.ni_gpct* %5, i32 0, i32 1, !dbg !11447
  %6 = load i32, i32* %counter_index, align 8, !dbg !11447
  call void @ni_e_series_enable_second_irq(%struct.comedi_device* %4, i32 %6, i16 signext 0) #9, !dbg !11448
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11449
  %8 = load %struct.ni_gpct*, %struct.ni_gpct** %counter, align 8, !dbg !11450
  %counter_index2 = getelementptr inbounds %struct.ni_gpct, %struct.ni_gpct* %8, i32 0, i32 1, !dbg !11451
  %9 = load i32, i32* %counter_index2, align 8, !dbg !11451
  call void @ni_release_gpct_mite_channel(%struct.comedi_device* %7, i32 %9) #9, !dbg !11452
  %10 = load i32, i32* %retval1, align 4, !dbg !11453
  ret i32 %10, !dbg !11454
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_set_gout_routing(i32 %src, i32 %dest, %struct.comedi_device* %dev) #2 !dbg !11455 {
entry:
  %retval = alloca i32, align 4
  %src.addr = alloca i32, align 4
  %dest.addr = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  store i32 %src, i32* %src.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src.addr, metadata !11458, metadata !DIExpression()), !dbg !11459
  store i32 %dest, i32* %dest.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest.addr, metadata !11460, metadata !DIExpression()), !dbg !11461
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11462, metadata !DIExpression()), !dbg !11463
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !11464, metadata !DIExpression()), !dbg !11465
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11466
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !11467
  %1 = load i8*, i8** %private, align 8, !dbg !11467
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !11466
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !11465
  %3 = load i32, i32* %dest.addr, align 4, !dbg !11468
  switch i32 %3, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb8
  ], !dbg !11469

sw.bb:                                            ; preds = %entry
  %4 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11470
  %an_trig_etc_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %4, i32 0, i32 20, !dbg !11472
  %5 = load i16, i16* %an_trig_etc_reg, align 8, !dbg !11473
  %conv = zext i16 %5 to i32, !dbg !11473
  %and = and i32 %conv, -14337, !dbg !11473
  %conv1 = trunc i32 %and to i16, !dbg !11473
  store i16 %conv1, i16* %an_trig_etc_reg, align 8, !dbg !11473
  %6 = load i32, i32* %src.addr, align 4, !dbg !11474
  %and2 = and i32 %6, 7, !dbg !11474
  %shl = shl i32 %and2, 11, !dbg !11474
  %conv3 = zext i32 %shl to i64, !dbg !11474
  %or = or i64 16384, %conv3, !dbg !11475
  %7 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11476
  %an_trig_etc_reg4 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %7, i32 0, i32 20, !dbg !11477
  %8 = load i16, i16* %an_trig_etc_reg4, align 8, !dbg !11478
  %conv5 = zext i16 %8 to i64, !dbg !11478
  %or6 = or i64 %conv5, %or, !dbg !11478
  %conv7 = trunc i64 %or6 to i16, !dbg !11478
  store i16 %conv7, i16* %an_trig_etc_reg4, align 8, !dbg !11478
  br label %sw.epilog, !dbg !11479

sw.bb8:                                           ; preds = %entry
  %9 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11480
  %an_trig_etc_reg9 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %9, i32 0, i32 20, !dbg !11481
  %10 = load i16, i16* %an_trig_etc_reg9, align 8, !dbg !11482
  %conv10 = zext i16 %10 to i64, !dbg !11482
  %and11 = and i64 %conv10, -129, !dbg !11482
  %conv12 = trunc i64 %and11 to i16, !dbg !11482
  store i16 %conv12, i16* %an_trig_etc_reg9, align 8, !dbg !11482
  %11 = load i32, i32* %src.addr, align 4, !dbg !11483
  %tobool = icmp ne i32 %11, 0, !dbg !11483
  %12 = zext i1 %tobool to i64, !dbg !11483
  %cond = select i1 %tobool, i64 128, i64 0, !dbg !11483
  %conv13 = trunc i64 %cond to i32, !dbg !11483
  store i32 %conv13, i32* %src.addr, align 4, !dbg !11484
  %13 = load i32, i32* %src.addr, align 4, !dbg !11485
  %conv14 = zext i32 %13 to i64, !dbg !11485
  %or15 = or i64 32768, %conv14, !dbg !11486
  %14 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11487
  %an_trig_etc_reg16 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %14, i32 0, i32 20, !dbg !11488
  %15 = load i16, i16* %an_trig_etc_reg16, align 8, !dbg !11489
  %conv17 = zext i16 %15 to i64, !dbg !11489
  %or18 = or i64 %conv17, %or15, !dbg !11489
  %conv19 = trunc i64 %or18 to i16, !dbg !11489
  store i16 %conv19, i16* %an_trig_etc_reg16, align 8, !dbg !11489
  br label %sw.epilog, !dbg !11490

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11491
  br label %return, !dbg !11491

sw.epilog:                                        ; preds = %sw.bb8, %sw.bb
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11492
  %17 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11493
  %an_trig_etc_reg20 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %17, i32 0, i32 20, !dbg !11494
  %18 = load i16, i16* %an_trig_etc_reg20, align 8, !dbg !11494
  %conv21 = zext i16 %18 to i32, !dbg !11493
  call void @ni_stc_writew(%struct.comedi_device* %16, i32 %conv21, i32 61) #9, !dbg !11495
  store i32 0, i32* %retval, align 4, !dbg !11496
  br label %return, !dbg !11496

return:                                           ; preds = %sw.epilog, %sw.default
  %19 = load i32, i32* %retval, align 4, !dbg !11497
  ret i32 %19, !dbg !11497
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_freq_out_insn_read(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !11498 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %val = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11499, metadata !DIExpression()), !dbg !11500
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !11501, metadata !DIExpression()), !dbg !11502
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !11503, metadata !DIExpression()), !dbg !11504
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !11505, metadata !DIExpression()), !dbg !11506
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !11507, metadata !DIExpression()), !dbg !11508
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11509
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !11510
  %1 = load i8*, i8** %private, align 8, !dbg !11510
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !11509
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !11508
  call void @llvm.dbg.declare(metadata i32* %val, metadata !11511, metadata !DIExpression()), !dbg !11512
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11513
  %clock_and_fout = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 24, !dbg !11513
  %4 = load i16, i16* %clock_and_fout, align 2, !dbg !11513
  %conv = zext i16 %4 to i32, !dbg !11513
  %shr = ashr i32 %conv, 0, !dbg !11513
  %and = and i32 %shr, 15, !dbg !11513
  store i32 %and, i32* %val, align 4, !dbg !11512
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11514, metadata !DIExpression()), !dbg !11515
  store i32 0, i32* %i, align 4, !dbg !11516
  br label %for.cond, !dbg !11518

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !11519
  %6 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11521
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %6, i32 0, i32 1, !dbg !11522
  %7 = load i32, i32* %n, align 4, !dbg !11522
  %cmp = icmp ult i32 %5, %7, !dbg !11523
  br i1 %cmp, label %for.body, label %for.end, !dbg !11524

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %val, align 4, !dbg !11525
  %9 = load i32*, i32** %data.addr, align 8, !dbg !11526
  %10 = load i32, i32* %i, align 4, !dbg !11527
  %idxprom = sext i32 %10 to i64, !dbg !11526
  %arrayidx = getelementptr i32, i32* %9, i64 %idxprom, !dbg !11526
  store i32 %8, i32* %arrayidx, align 4, !dbg !11528
  br label %for.inc, !dbg !11526

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !11529
  %inc = add i32 %11, 1, !dbg !11529
  store i32 %inc, i32* %i, align 4, !dbg !11529
  br label %for.cond, !dbg !11530, !llvm.loop !11531

for.end:                                          ; preds = %for.cond
  %12 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11533
  %n2 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %12, i32 0, i32 1, !dbg !11534
  %13 = load i32, i32* %n2, align 4, !dbg !11534
  ret i32 %13, !dbg !11535
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_freq_out_insn_write(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !11536 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %val = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11537, metadata !DIExpression()), !dbg !11538
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !11539, metadata !DIExpression()), !dbg !11540
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !11541, metadata !DIExpression()), !dbg !11542
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !11543, metadata !DIExpression()), !dbg !11544
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !11545, metadata !DIExpression()), !dbg !11546
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11547
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !11548
  %1 = load i8*, i8** %private, align 8, !dbg !11548
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !11547
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !11546
  %3 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11549
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %3, i32 0, i32 1, !dbg !11551
  %4 = load i32, i32* %n, align 4, !dbg !11551
  %tobool = icmp ne i32 %4, 0, !dbg !11549
  br i1 %tobool, label %if.then, label %if.end, !dbg !11552

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %val, metadata !11553, metadata !DIExpression()), !dbg !11555
  %5 = load i32*, i32** %data.addr, align 8, !dbg !11556
  %6 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11557
  %n1 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %6, i32 0, i32 1, !dbg !11558
  %7 = load i32, i32* %n1, align 4, !dbg !11558
  %sub = sub i32 %7, 1, !dbg !11559
  %idxprom = zext i32 %sub to i64, !dbg !11556
  %arrayidx = getelementptr i32, i32* %5, i64 %idxprom, !dbg !11556
  %8 = load i32, i32* %arrayidx, align 4, !dbg !11556
  store i32 %8, i32* %val, align 4, !dbg !11555
  %9 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11560
  %clock_and_fout = getelementptr inbounds %struct.ni_private, %struct.ni_private* %9, i32 0, i32 24, !dbg !11561
  %10 = load i16, i16* %clock_and_fout, align 2, !dbg !11562
  %conv = zext i16 %10 to i64, !dbg !11562
  %and = and i64 %conv, -32769, !dbg !11562
  %conv2 = trunc i64 %and to i16, !dbg !11562
  store i16 %conv2, i16* %clock_and_fout, align 2, !dbg !11562
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11563
  %12 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11564
  %clock_and_fout3 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %12, i32 0, i32 24, !dbg !11565
  %13 = load i16, i16* %clock_and_fout3, align 2, !dbg !11565
  %conv4 = zext i16 %13 to i32, !dbg !11564
  call void @ni_stc_writew(%struct.comedi_device* %11, i32 %conv4, i32 56) #9, !dbg !11566
  %14 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11567
  %clock_and_fout5 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %14, i32 0, i32 24, !dbg !11568
  %15 = load i16, i16* %clock_and_fout5, align 2, !dbg !11569
  %conv6 = zext i16 %15 to i32, !dbg !11569
  %and7 = and i32 %conv6, -16, !dbg !11569
  %conv8 = trunc i32 %and7 to i16, !dbg !11569
  store i16 %conv8, i16* %clock_and_fout5, align 2, !dbg !11569
  %16 = load i32, i32* %val, align 4, !dbg !11570
  %and9 = and i32 %16, 15, !dbg !11570
  %shl = shl i32 %and9, 0, !dbg !11570
  %17 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11571
  %clock_and_fout10 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %17, i32 0, i32 24, !dbg !11572
  %18 = load i16, i16* %clock_and_fout10, align 2, !dbg !11573
  %conv11 = zext i16 %18 to i32, !dbg !11573
  %or = or i32 %conv11, %shl, !dbg !11573
  %conv12 = trunc i32 %or to i16, !dbg !11573
  store i16 %conv12, i16* %clock_and_fout10, align 2, !dbg !11573
  %19 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11574
  %clock_and_fout13 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %19, i32 0, i32 24, !dbg !11575
  %20 = load i16, i16* %clock_and_fout13, align 2, !dbg !11576
  %conv14 = zext i16 %20 to i64, !dbg !11576
  %or15 = or i64 %conv14, 32768, !dbg !11576
  %conv16 = trunc i64 %or15 to i16, !dbg !11576
  store i16 %conv16, i16* %clock_and_fout13, align 2, !dbg !11576
  %21 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11577
  %22 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11578
  %clock_and_fout17 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %22, i32 0, i32 24, !dbg !11579
  %23 = load i16, i16* %clock_and_fout17, align 2, !dbg !11579
  %conv18 = zext i16 %23 to i32, !dbg !11578
  call void @ni_stc_writew(%struct.comedi_device* %21, i32 %conv18, i32 56) #9, !dbg !11580
  br label %if.end, !dbg !11581

if.end:                                           ; preds = %if.then, %entry
  %24 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11582
  %n19 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %24, i32 0, i32 1, !dbg !11583
  %25 = load i32, i32* %n19, align 4, !dbg !11583
  ret i32 %25, !dbg !11584
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_freq_out_insn_config(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_insn* %insn, i32* %data) #2 !dbg !11585 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11586, metadata !DIExpression()), !dbg !11587
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !11588, metadata !DIExpression()), !dbg !11589
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !11590, metadata !DIExpression()), !dbg !11591
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !11592, metadata !DIExpression()), !dbg !11593
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !11594, metadata !DIExpression()), !dbg !11595
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11596
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !11597
  %1 = load i8*, i8** %private, align 8, !dbg !11597
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !11596
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !11595
  %3 = load i32*, i32** %data.addr, align 8, !dbg !11598
  %arrayidx = getelementptr i32, i32* %3, i64 0, !dbg !11598
  %4 = load i32, i32* %arrayidx, align 4, !dbg !11598
  switch i32 %4, label %sw.default18 [
    i32 2003, label %sw.bb
    i32 2004, label %sw.bb10
  ], !dbg !11599

sw.bb:                                            ; preds = %entry
  %5 = load i32*, i32** %data.addr, align 8, !dbg !11600
  %arrayidx1 = getelementptr i32, i32* %5, i64 1, !dbg !11600
  %6 = load i32, i32* %arrayidx1, align 4, !dbg !11600
  switch i32 %6, label %sw.default [
    i32 0, label %sw.bb2
    i32 1, label %sw.bb4
  ], !dbg !11602

sw.bb2:                                           ; preds = %sw.bb
  %7 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11603
  %clock_and_fout = getelementptr inbounds %struct.ni_private, %struct.ni_private* %7, i32 0, i32 24, !dbg !11605
  %8 = load i16, i16* %clock_and_fout, align 2, !dbg !11606
  %conv = zext i16 %8 to i64, !dbg !11606
  %and = and i64 %conv, -16385, !dbg !11606
  %conv3 = trunc i64 %and to i16, !dbg !11606
  store i16 %conv3, i16* %clock_and_fout, align 2, !dbg !11606
  br label %sw.epilog, !dbg !11607

sw.bb4:                                           ; preds = %sw.bb
  %9 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11608
  %clock_and_fout5 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %9, i32 0, i32 24, !dbg !11609
  %10 = load i16, i16* %clock_and_fout5, align 2, !dbg !11610
  %conv6 = zext i16 %10 to i64, !dbg !11610
  %or = or i64 %conv6, 16384, !dbg !11610
  %conv7 = trunc i64 %or to i16, !dbg !11610
  store i16 %conv7, i16* %clock_and_fout5, align 2, !dbg !11610
  br label %sw.epilog, !dbg !11611

sw.default:                                       ; preds = %sw.bb
  store i32 -22, i32* %retval, align 4, !dbg !11612
  br label %return, !dbg !11612

sw.epilog:                                        ; preds = %sw.bb4, %sw.bb2
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11613
  %12 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11614
  %clock_and_fout8 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %12, i32 0, i32 24, !dbg !11615
  %13 = load i16, i16* %clock_and_fout8, align 2, !dbg !11615
  %conv9 = zext i16 %13 to i32, !dbg !11614
  call void @ni_stc_writew(%struct.comedi_device* %11, i32 %conv9, i32 56) #9, !dbg !11616
  br label %sw.epilog19, !dbg !11617

sw.bb10:                                          ; preds = %entry
  %14 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11618
  %clock_and_fout11 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %14, i32 0, i32 24, !dbg !11620
  %15 = load i16, i16* %clock_and_fout11, align 2, !dbg !11620
  %conv12 = zext i16 %15 to i64, !dbg !11618
  %and13 = and i64 %conv12, 16384, !dbg !11621
  %tobool = icmp ne i64 %and13, 0, !dbg !11621
  br i1 %tobool, label %if.then, label %if.else, !dbg !11622

if.then:                                          ; preds = %sw.bb10
  %16 = load i32*, i32** %data.addr, align 8, !dbg !11623
  %arrayidx14 = getelementptr i32, i32* %16, i64 1, !dbg !11623
  store i32 1, i32* %arrayidx14, align 4, !dbg !11625
  %17 = load i32*, i32** %data.addr, align 8, !dbg !11626
  %arrayidx15 = getelementptr i32, i32* %17, i64 2, !dbg !11626
  store i32 10000, i32* %arrayidx15, align 4, !dbg !11627
  br label %if.end, !dbg !11628

if.else:                                          ; preds = %sw.bb10
  %18 = load i32*, i32** %data.addr, align 8, !dbg !11629
  %arrayidx16 = getelementptr i32, i32* %18, i64 1, !dbg !11629
  store i32 0, i32* %arrayidx16, align 4, !dbg !11631
  %19 = load i32*, i32** %data.addr, align 8, !dbg !11632
  %arrayidx17 = getelementptr i32, i32* %19, i64 2, !dbg !11632
  store i32 100, i32* %arrayidx17, align 4, !dbg !11633
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog19, !dbg !11634

sw.default18:                                     ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11635
  br label %return, !dbg !11635

sw.epilog19:                                      ; preds = %if.end, %sw.epilog
  %20 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11636
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %20, i32 0, i32 1, !dbg !11637
  %21 = load i32, i32* %n, align 4, !dbg !11637
  store i32 %21, i32* %retval, align 4, !dbg !11638
  br label %return, !dbg !11638

return:                                           ; preds = %sw.epilog19, %sw.default18, %sw.default
  %22 = load i32, i32* %retval, align 4, !dbg !11639
  ret i32 %22, !dbg !11639
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @test_route(i32 %src, i32 %dest, %struct.comedi_device* %dev) #2 !dbg !11640 {
entry:
  %retval = alloca i32, align 4
  %src.addr = alloca i32, align 4
  %dest.addr = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %reg = alloca i8, align 1
  store i32 %src, i32* %src.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src.addr, metadata !11641, metadata !DIExpression()), !dbg !11642
  store i32 %dest, i32* %dest.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest.addr, metadata !11643, metadata !DIExpression()), !dbg !11644
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11645, metadata !DIExpression()), !dbg !11646
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !11647, metadata !DIExpression()), !dbg !11648
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11649
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !11650
  %1 = load i8*, i8** %private, align 8, !dbg !11650
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !11649
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !11648
  call void @llvm.dbg.declare(metadata i8* %reg, metadata !11651, metadata !DIExpression()), !dbg !11655
  %3 = load i32, i32* %src.addr, align 4, !dbg !11656
  %and = and i32 %3, 65535, !dbg !11656
  %4 = load i32, i32* %dest.addr, align 4, !dbg !11657
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11658
  %routing_tables = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 51, !dbg !11659
  %call = call signext i8 @ni_route_to_register(i32 %and, i32 %4, %struct.ni_route_tables* %routing_tables) #9, !dbg !11660
  store i8 %call, i8* %reg, align 1, !dbg !11655
  %6 = load i8, i8* %reg, align 1, !dbg !11661
  %conv = sext i8 %6 to i32, !dbg !11661
  %cmp = icmp slt i32 %conv, 0, !dbg !11663
  br i1 %cmp, label %if.then, label %if.end, !dbg !11664

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !11665
  br label %return, !dbg !11665

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %dest.addr, align 4, !dbg !11666
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11668
  %call2 = call i32 @get_output_select_source(i32 %7, %struct.comedi_device* %8) #9, !dbg !11669
  %9 = load i32, i32* %src.addr, align 4, !dbg !11670
  %and3 = and i32 %9, 65535, !dbg !11670
  %cmp4 = icmp ne i32 %call2, %and3, !dbg !11671
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !11672

if.then6:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11673
  br label %return, !dbg !11673

if.end7:                                          ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !11674
  br label %return, !dbg !11674

return:                                           ; preds = %if.end7, %if.then6, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !11675
  ret i32 %10, !dbg !11675
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @connect_route(i32 %src, i32 %dest, %struct.comedi_device* %dev) #2 !dbg !11676 {
entry:
  %retval = alloca i32, align 4
  %src.addr = alloca i32, align 4
  %dest.addr = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %reg = alloca i8, align 1
  %current_src = alloca i8, align 1
  %ret = alloca i32, align 4
  %brd = alloca i32, align 4
  store i32 %src, i32* %src.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src.addr, metadata !11677, metadata !DIExpression()), !dbg !11678
  store i32 %dest, i32* %dest.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest.addr, metadata !11679, metadata !DIExpression()), !dbg !11680
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11681, metadata !DIExpression()), !dbg !11682
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !11683, metadata !DIExpression()), !dbg !11684
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11685
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !11686
  %1 = load i8*, i8** %private, align 8, !dbg !11686
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !11685
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !11684
  call void @llvm.dbg.declare(metadata i8* %reg, metadata !11687, metadata !DIExpression()), !dbg !11688
  %3 = load i32, i32* %src.addr, align 4, !dbg !11689
  %and = and i32 %3, 65535, !dbg !11689
  %4 = load i32, i32* %dest.addr, align 4, !dbg !11690
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11691
  %routing_tables = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 51, !dbg !11692
  %call = call signext i8 @ni_route_to_register(i32 %and, i32 %4, %struct.ni_route_tables* %routing_tables) #9, !dbg !11693
  store i8 %call, i8* %reg, align 1, !dbg !11688
  call void @llvm.dbg.declare(metadata i8* %current_src, metadata !11694, metadata !DIExpression()), !dbg !11695
  %6 = load i8, i8* %reg, align 1, !dbg !11696
  %conv = sext i8 %6 to i32, !dbg !11696
  %cmp = icmp slt i32 %conv, 0, !dbg !11698
  br i1 %cmp, label %if.then, label %if.end, !dbg !11699

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11700
  br label %return, !dbg !11700

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %dest.addr, align 4, !dbg !11701
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11702
  %call2 = call i32 @get_output_select_source(i32 %7, %struct.comedi_device* %8) #9, !dbg !11703
  %conv3 = trunc i32 %call2 to i8, !dbg !11703
  store i8 %conv3, i8* %current_src, align 1, !dbg !11704
  %9 = load i8, i8* %current_src, align 1, !dbg !11705
  %conv4 = sext i8 %9 to i32, !dbg !11705
  %10 = load i32, i32* %src.addr, align 4, !dbg !11707
  %and5 = and i32 %10, 65535, !dbg !11707
  %cmp6 = icmp eq i32 %conv4, %and5, !dbg !11708
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !11709

if.then8:                                         ; preds = %if.end
  store i32 -114, i32* %retval, align 4, !dbg !11710
  br label %return, !dbg !11710

if.end9:                                          ; preds = %if.end
  %11 = load i8, i8* %current_src, align 1, !dbg !11711
  %conv10 = sext i8 %11 to i32, !dbg !11711
  %cmp11 = icmp sge i32 %conv10, 0, !dbg !11713
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !11714

if.then13:                                        ; preds = %if.end9
  store i32 -16, i32* %retval, align 4, !dbg !11715
  br label %return, !dbg !11715

if.end14:                                         ; preds = %if.end9
  %12 = load i32, i32* %dest.addr, align 4, !dbg !11716
  %call15 = call zeroext i1 @channel_is_pfi(i32 %12) #9, !dbg !11718
  br i1 %call15, label %if.then16, label %if.else, !dbg !11719

if.then16:                                        ; preds = %if.end14
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11720
  %14 = load i32, i32* %dest.addr, align 4, !dbg !11722
  %15 = load i8, i8* %reg, align 1, !dbg !11723
  %conv17 = sext i8 %15 to i32, !dbg !11723
  %call18 = call i32 @ni_set_pfi_routing(%struct.comedi_device* %13, i32 %14, i32 %conv17) #9, !dbg !11724
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11725
  %17 = load i32, i32* %dest.addr, align 4, !dbg !11726
  call void @ni_set_pfi_direction(%struct.comedi_device* %16, i32 %17, i32 1) #9, !dbg !11727
  br label %if.end67, !dbg !11728

if.else:                                          ; preds = %if.end14
  %18 = load i32, i32* %dest.addr, align 4, !dbg !11729
  %call19 = call zeroext i1 @channel_is_rtsi(i32 %18) #9, !dbg !11731
  br i1 %call19, label %if.then20, label %if.else44, !dbg !11732

if.then20:                                        ; preds = %if.else
  %19 = load i8, i8* %reg, align 1, !dbg !11733
  %conv21 = sext i8 %19 to i32, !dbg !11733
  %cmp22 = icmp eq i32 %conv21, 7, !dbg !11736
  br i1 %cmp22, label %if.then24, label %if.else30, !dbg !11737

if.then24:                                        ; preds = %if.then20
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11738, metadata !DIExpression()), !dbg !11740
  %20 = load i32, i32* %src.addr, align 4, !dbg !11741
  %21 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11742
  %call25 = call i32 @incr_rgout0_src_use(i32 %20, %struct.comedi_device* %21) #9, !dbg !11743
  store i32 %call25, i32* %ret, align 4, !dbg !11740
  %22 = load i32, i32* %ret, align 4, !dbg !11744
  %cmp26 = icmp slt i32 %22, 0, !dbg !11746
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !11747

if.then28:                                        ; preds = %if.then24
  %23 = load i32, i32* %ret, align 4, !dbg !11748
  store i32 %23, i32* %retval, align 4, !dbg !11749
  br label %return, !dbg !11749

if.end29:                                         ; preds = %if.then24
  br label %if.end41, !dbg !11750

if.else30:                                        ; preds = %if.then20
  %24 = load i8, i8* %reg, align 1, !dbg !11751
  %call31 = call zeroext i1 @ni_rtsi_route_requires_mux(i8 signext %24) #9, !dbg !11753
  br i1 %call31, label %if.then32, label %if.end40, !dbg !11754

if.then32:                                        ; preds = %if.else30
  call void @llvm.dbg.declare(metadata i32* %brd, metadata !11755, metadata !DIExpression()), !dbg !11757
  %25 = load i32, i32* %src.addr, align 4, !dbg !11758
  %26 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11759
  %call33 = call i32 @incr_rtsi_brd_src_use(i32 %25, %struct.comedi_device* %26) #9, !dbg !11760
  store i32 %call33, i32* %brd, align 4, !dbg !11757
  %27 = load i32, i32* %brd, align 4, !dbg !11761
  %cmp34 = icmp slt i32 %27, 0, !dbg !11763
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !11764

if.then36:                                        ; preds = %if.then32
  %28 = load i32, i32* %brd, align 4, !dbg !11765
  store i32 %28, i32* %retval, align 4, !dbg !11766
  br label %return, !dbg !11766

if.end37:                                         ; preds = %if.then32
  %29 = load i32, i32* %brd, align 4, !dbg !11767
  %30 = load i32, i32* %dest.addr, align 4, !dbg !11768
  %31 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11769
  %routing_tables38 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %31, i32 0, i32 51, !dbg !11770
  %call39 = call signext i8 @ni_lookup_route_register(i32 %29, i32 %30, %struct.ni_route_tables* %routing_tables38) #9, !dbg !11771
  store i8 %call39, i8* %reg, align 1, !dbg !11772
  br label %if.end40, !dbg !11773

if.end40:                                         ; preds = %if.end37, %if.else30
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end29
  %32 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11774
  %33 = load i32, i32* %dest.addr, align 4, !dbg !11775
  call void @ni_set_rtsi_direction(%struct.comedi_device* %32, i32 %33, i32 1) #9, !dbg !11776
  %34 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11777
  %35 = load i32, i32* %dest.addr, align 4, !dbg !11778
  %36 = load i8, i8* %reg, align 1, !dbg !11779
  %conv42 = sext i8 %36 to i32, !dbg !11779
  %call43 = call i32 @ni_set_rtsi_routing(%struct.comedi_device* %34, i32 %35, i32 %conv42) #9, !dbg !11780
  br label %if.end66, !dbg !11781

if.else44:                                        ; preds = %if.else
  %37 = load i32, i32* %dest.addr, align 4, !dbg !11782
  %cmp45 = icmp uge i32 %37, 32908, !dbg !11784
  br i1 %cmp45, label %land.lhs.true, label %if.else57, !dbg !11785

land.lhs.true:                                    ; preds = %if.else44
  %38 = load i32, i32* %dest.addr, align 4, !dbg !11786
  %cmp47 = icmp ule i32 %38, 32915, !dbg !11787
  br i1 %cmp47, label %if.then49, label %if.else57, !dbg !11788

if.then49:                                        ; preds = %land.lhs.true
  %39 = load i32, i32* %dest.addr, align 4, !dbg !11789
  %sub = sub i32 %39, 32908, !dbg !11789
  store i32 %sub, i32* %dest.addr, align 4, !dbg !11789
  %40 = load i32, i32* %dest.addr, align 4, !dbg !11791
  %cmp50 = icmp ugt i32 %40, 1, !dbg !11793
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !11794

if.then52:                                        ; preds = %if.then49
  store i32 -22, i32* %retval, align 4, !dbg !11795
  br label %return, !dbg !11795

if.end53:                                         ; preds = %if.then49
  %41 = load i32, i32* %src.addr, align 4, !dbg !11796
  %42 = load i32, i32* %dest.addr, align 4, !dbg !11798
  %43 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11799
  %call54 = call i32 @ni_set_gout_routing(i32 %41, i32 %42, %struct.comedi_device* %43) #9, !dbg !11800
  %tobool = icmp ne i32 %call54, 0, !dbg !11800
  br i1 %tobool, label %if.then55, label %if.end56, !dbg !11801

if.then55:                                        ; preds = %if.end53
  store i32 -22, i32* %retval, align 4, !dbg !11802
  br label %return, !dbg !11802

if.end56:                                         ; preds = %if.end53
  br label %if.end65, !dbg !11803

if.else57:                                        ; preds = %land.lhs.true, %if.else44
  %44 = load i32, i32* %dest.addr, align 4, !dbg !11804
  %call58 = call zeroext i1 @channel_is_ctr(i32 %44) #9, !dbg !11806
  br i1 %call58, label %if.then59, label %if.else63, !dbg !11807

if.then59:                                        ; preds = %if.else57
  %45 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11808
  %counter_dev = getelementptr inbounds %struct.ni_private, %struct.ni_private* %45, i32 0, i32 19, !dbg !11810
  %46 = load %struct.ni_gpct_device*, %struct.ni_gpct_device** %counter_dev, align 8, !dbg !11810
  %47 = load i32, i32* %dest.addr, align 4, !dbg !11811
  %48 = load i8, i8* %reg, align 1, !dbg !11812
  %conv60 = sext i8 %48 to i32, !dbg !11812
  %49 = load i32, i32* %src.addr, align 4, !dbg !11813
  %and61 = and i32 %49, -65536, !dbg !11814
  %or = or i32 %conv60, %and61, !dbg !11815
  %call62 = call i32 @ni_tio_set_routing(%struct.ni_gpct_device* %46, i32 %47, i32 %or) #9, !dbg !11816
  br label %if.end64, !dbg !11817

if.else63:                                        ; preds = %if.else57
  store i32 -22, i32* %retval, align 4, !dbg !11818
  br label %return, !dbg !11818

if.end64:                                         ; preds = %if.then59
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.end56
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.end41
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then16
  store i32 0, i32* %retval, align 4, !dbg !11820
  br label %return, !dbg !11820

return:                                           ; preds = %if.end67, %if.else63, %if.then55, %if.then52, %if.then36, %if.then28, %if.then13, %if.then8, %if.then
  %50 = load i32, i32* %retval, align 4, !dbg !11821
  ret i32 %50, !dbg !11821
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @disconnect_route(i32 %src, i32 %dest, %struct.comedi_device* %dev) #2 !dbg !11822 {
entry:
  %retval = alloca i32, align 4
  %src.addr = alloca i32, align 4
  %dest.addr = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %reg = alloca i8, align 1
  %ret = alloca i32, align 4
  %brd = alloca i32, align 4
  store i32 %src, i32* %src.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src.addr, metadata !11823, metadata !DIExpression()), !dbg !11824
  store i32 %dest, i32* %dest.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest.addr, metadata !11825, metadata !DIExpression()), !dbg !11826
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11827, metadata !DIExpression()), !dbg !11828
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !11829, metadata !DIExpression()), !dbg !11830
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11831
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !11832
  %1 = load i8*, i8** %private, align 8, !dbg !11832
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !11831
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !11830
  call void @llvm.dbg.declare(metadata i8* %reg, metadata !11833, metadata !DIExpression()), !dbg !11834
  %3 = load i32, i32* %src.addr, align 4, !dbg !11835
  %and = and i32 %3, 65535, !dbg !11835
  %4 = load i32, i32* %dest.addr, align 4, !dbg !11836
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11837
  %routing_tables = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 51, !dbg !11838
  %call = call signext i8 @ni_route_to_register(i32 %and, i32 %4, %struct.ni_route_tables* %routing_tables) #9, !dbg !11839
  store i8 %call, i8* %reg, align 1, !dbg !11834
  %6 = load i8, i8* %reg, align 1, !dbg !11840
  %conv = sext i8 %6 to i32, !dbg !11840
  %cmp = icmp slt i32 %conv, 0, !dbg !11842
  br i1 %cmp, label %if.then, label %if.end, !dbg !11843

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11844
  br label %return, !dbg !11844

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %dest.addr, align 4, !dbg !11845
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11847
  %call2 = call i32 @get_output_select_source(i32 %7, %struct.comedi_device* %8) #9, !dbg !11848
  %9 = load i32, i32* %src.addr, align 4, !dbg !11849
  %cmp3 = icmp ne i32 %call2, %9, !dbg !11850
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !11851

if.then5:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !11852
  br label %return, !dbg !11852

if.end6:                                          ; preds = %if.end
  %10 = load i32, i32* %dest.addr, align 4, !dbg !11853
  %call7 = call zeroext i1 @channel_is_pfi(i32 %10) #9, !dbg !11855
  br i1 %call7, label %if.then8, label %if.else, !dbg !11856

if.then8:                                         ; preds = %if.end6
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11857
  %12 = load i32, i32* %dest.addr, align 4, !dbg !11859
  call void @ni_set_pfi_direction(%struct.comedi_device* %11, i32 %12, i32 0) #9, !dbg !11860
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11861
  %14 = load i32, i32* %dest.addr, align 4, !dbg !11862
  %call9 = call i32 @ni_set_pfi_routing(%struct.comedi_device* %13, i32 %14, i32 0) #9, !dbg !11863
  br label %if.end59, !dbg !11864

if.else:                                          ; preds = %if.end6
  %15 = load i32, i32* %dest.addr, align 4, !dbg !11865
  %call10 = call zeroext i1 @channel_is_rtsi(i32 %15) #9, !dbg !11867
  br i1 %call10, label %if.then11, label %if.else38, !dbg !11868

if.then11:                                        ; preds = %if.else
  %16 = load i8, i8* %reg, align 1, !dbg !11869
  %conv12 = sext i8 %16 to i32, !dbg !11869
  %cmp13 = icmp eq i32 %conv12, 7, !dbg !11872
  br i1 %cmp13, label %if.then15, label %if.else21, !dbg !11873

if.then15:                                        ; preds = %if.then11
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11874, metadata !DIExpression()), !dbg !11876
  %17 = load i32, i32* %src.addr, align 4, !dbg !11877
  %18 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11878
  %call16 = call i32 @decr_rgout0_src_use(i32 %17, %struct.comedi_device* %18) #9, !dbg !11879
  store i32 %call16, i32* %ret, align 4, !dbg !11876
  %19 = load i32, i32* %ret, align 4, !dbg !11880
  %cmp17 = icmp slt i32 %19, 0, !dbg !11882
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !11883

if.then19:                                        ; preds = %if.then15
  %20 = load i32, i32* %ret, align 4, !dbg !11884
  store i32 %20, i32* %retval, align 4, !dbg !11885
  br label %return, !dbg !11885

if.end20:                                         ; preds = %if.then15
  br label %if.end34, !dbg !11886

if.else21:                                        ; preds = %if.then11
  %21 = load i8, i8* %reg, align 1, !dbg !11887
  %call22 = call zeroext i1 @ni_rtsi_route_requires_mux(i8 signext %21) #9, !dbg !11889
  br i1 %call22, label %if.then23, label %if.end33, !dbg !11890

if.then23:                                        ; preds = %if.else21
  call void @llvm.dbg.declare(metadata i32* %brd, metadata !11891, metadata !DIExpression()), !dbg !11893
  %22 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11894
  %23 = load i32, i32* %dest.addr, align 4, !dbg !11895
  %call24 = call i32 @ni_get_rtsi_routing(%struct.comedi_device* %22, i32 %23) #9, !dbg !11896
  %conv25 = trunc i32 %call24 to i8, !dbg !11896
  %24 = load i32, i32* %dest.addr, align 4, !dbg !11897
  %25 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11898
  %routing_tables26 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %25, i32 0, i32 51, !dbg !11899
  %call27 = call i32 @ni_find_route_source(i8 zeroext %conv25, i32 %24, %struct.ni_route_tables* %routing_tables26) #9, !dbg !11900
  store i32 %call27, i32* %brd, align 4, !dbg !11893
  %26 = load i32, i32* %brd, align 4, !dbg !11901
  %cmp28 = icmp slt i32 %26, 0, !dbg !11903
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !11904

if.then30:                                        ; preds = %if.then23
  %27 = load i32, i32* %brd, align 4, !dbg !11905
  store i32 %27, i32* %retval, align 4, !dbg !11906
  br label %return, !dbg !11906

if.end31:                                         ; preds = %if.then23
  %28 = load i32, i32* %src.addr, align 4, !dbg !11907
  %29 = load i32, i32* %brd, align 4, !dbg !11908
  %30 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11909
  %call32 = call i32 @decr_rtsi_brd_src_use(i32 %28, i32 %29, %struct.comedi_device* %30) #9, !dbg !11910
  br label %if.end33, !dbg !11911

if.end33:                                         ; preds = %if.end31, %if.else21
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.end20
  %31 = load i32, i32* %dest.addr, align 4, !dbg !11912
  %sub = sub i32 %31, 32832, !dbg !11913
  %idxprom = zext i32 %sub to i64, !dbg !11914
  %arrayidx = getelementptr [8 x i32], [8 x i32]* @default_rtsi_routing, i64 0, i64 %idxprom, !dbg !11914
  %32 = load i32, i32* %arrayidx, align 4, !dbg !11914
  %conv35 = trunc i32 %32 to i8, !dbg !11914
  store i8 %conv35, i8* %reg, align 1, !dbg !11915
  %33 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11916
  %34 = load i32, i32* %dest.addr, align 4, !dbg !11917
  call void @ni_set_rtsi_direction(%struct.comedi_device* %33, i32 %34, i32 0) #9, !dbg !11918
  %35 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11919
  %36 = load i32, i32* %dest.addr, align 4, !dbg !11920
  %37 = load i8, i8* %reg, align 1, !dbg !11921
  %conv36 = sext i8 %37 to i32, !dbg !11921
  %call37 = call i32 @ni_set_rtsi_routing(%struct.comedi_device* %35, i32 %36, i32 %conv36) #9, !dbg !11922
  br label %if.end58, !dbg !11923

if.else38:                                        ; preds = %if.else
  %38 = load i32, i32* %dest.addr, align 4, !dbg !11924
  %cmp39 = icmp uge i32 %38, 32908, !dbg !11926
  br i1 %cmp39, label %land.lhs.true, label %if.else51, !dbg !11927

land.lhs.true:                                    ; preds = %if.else38
  %39 = load i32, i32* %dest.addr, align 4, !dbg !11928
  %cmp41 = icmp ule i32 %39, 32915, !dbg !11929
  br i1 %cmp41, label %if.then43, label %if.else51, !dbg !11930

if.then43:                                        ; preds = %land.lhs.true
  %40 = load i32, i32* %dest.addr, align 4, !dbg !11931
  %sub44 = sub i32 %40, 32908, !dbg !11931
  store i32 %sub44, i32* %dest.addr, align 4, !dbg !11931
  %41 = load i32, i32* %dest.addr, align 4, !dbg !11933
  %cmp45 = icmp ugt i32 %41, 1, !dbg !11935
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !11936

if.then47:                                        ; preds = %if.then43
  store i32 -22, i32* %retval, align 4, !dbg !11937
  br label %return, !dbg !11937

if.end48:                                         ; preds = %if.then43
  %42 = load i32, i32* %dest.addr, align 4, !dbg !11938
  %43 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11939
  %call49 = call i32 @ni_disable_gout_routing(i32 %42, %struct.comedi_device* %43) #9, !dbg !11940
  %conv50 = trunc i32 %call49 to i8, !dbg !11940
  store i8 %conv50, i8* %reg, align 1, !dbg !11941
  br label %if.end57, !dbg !11942

if.else51:                                        ; preds = %land.lhs.true, %if.else38
  %44 = load i32, i32* %dest.addr, align 4, !dbg !11943
  %call52 = call zeroext i1 @channel_is_ctr(i32 %44) #9, !dbg !11945
  br i1 %call52, label %if.then53, label %if.else55, !dbg !11946

if.then53:                                        ; preds = %if.else51
  %45 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !11947
  %counter_dev = getelementptr inbounds %struct.ni_private, %struct.ni_private* %45, i32 0, i32 19, !dbg !11949
  %46 = load %struct.ni_gpct_device*, %struct.ni_gpct_device** %counter_dev, align 8, !dbg !11949
  %47 = load i32, i32* %dest.addr, align 4, !dbg !11950
  %call54 = call i32 @ni_tio_unset_routing(%struct.ni_gpct_device* %46, i32 %47) #9, !dbg !11951
  br label %if.end56, !dbg !11952

if.else55:                                        ; preds = %if.else51
  store i32 -22, i32* %retval, align 4, !dbg !11953
  br label %return, !dbg !11953

if.end56:                                         ; preds = %if.then53
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.end48
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end34
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.then8
  store i32 0, i32* %retval, align 4, !dbg !11955
  br label %return, !dbg !11955

return:                                           ; preds = %if.end59, %if.else55, %if.then47, %if.then30, %if.then19, %if.then5, %if.then
  %48 = load i32, i32* %retval, align 4, !dbg !11956
  ret i32 %48, !dbg !11956
}

; Function Attrs: noredzone
declare dso_local signext i8 @ni_route_to_register(i32, i32, %struct.ni_route_tables*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_output_select_source(i32 %dest, %struct.comedi_device* %dev) #2 !dbg !11957 {
entry:
  %retval = alloca i32, align 4
  %dest.addr = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %reg = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %dest, i32* %dest.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest.addr, metadata !11960, metadata !DIExpression()), !dbg !11961
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11962, metadata !DIExpression()), !dbg !11963
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !11964, metadata !DIExpression()), !dbg !11965
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11966
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !11967
  %1 = load i8*, i8** %private, align 8, !dbg !11967
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !11966
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !11965
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !11968, metadata !DIExpression()), !dbg !11969
  store i32 -1, i32* %reg, align 4, !dbg !11969
  %3 = load i32, i32* %dest.addr, align 4, !dbg !11970
  %call = call zeroext i1 @channel_is_pfi(i32 %3) #9, !dbg !11972
  br i1 %call, label %if.then, label %if.else, !dbg !11973

if.then:                                          ; preds = %entry
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11974
  %5 = load i32, i32* %dest.addr, align 4, !dbg !11977
  %call1 = call i32 @ni_get_pfi_direction(%struct.comedi_device* %4, i32 %5) #9, !dbg !11978
  %cmp = icmp eq i32 %call1, 1, !dbg !11979
  br i1 %cmp, label %if.then2, label %if.end, !dbg !11980

if.then2:                                         ; preds = %if.then
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11981
  %7 = load i32, i32* %dest.addr, align 4, !dbg !11982
  %call3 = call i32 @ni_get_pfi_routing(%struct.comedi_device* %6, i32 %7) #9, !dbg !11983
  store i32 %call3, i32* %reg, align 4, !dbg !11984
  br label %if.end, !dbg !11985

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end39, !dbg !11986

if.else:                                          ; preds = %entry
  %8 = load i32, i32* %dest.addr, align 4, !dbg !11987
  %call4 = call zeroext i1 @channel_is_rtsi(i32 %8) #9, !dbg !11989
  br i1 %call4, label %if.then5, label %if.else21, !dbg !11990

if.then5:                                         ; preds = %if.else
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11991
  %10 = load i32, i32* %dest.addr, align 4, !dbg !11994
  %call6 = call i32 @ni_get_rtsi_direction(%struct.comedi_device* %9, i32 %10) #9, !dbg !11995
  %cmp7 = icmp eq i32 %call6, 1, !dbg !11996
  br i1 %cmp7, label %if.then8, label %if.end20, !dbg !11997

if.then8:                                         ; preds = %if.then5
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11998
  %12 = load i32, i32* %dest.addr, align 4, !dbg !12000
  %call9 = call i32 @ni_get_rtsi_routing(%struct.comedi_device* %11, i32 %12) #9, !dbg !12001
  store i32 %call9, i32* %reg, align 4, !dbg !12002
  %13 = load i32, i32* %reg, align 4, !dbg !12003
  %cmp10 = icmp eq i32 %13, 7, !dbg !12005
  br i1 %cmp10, label %if.then11, label %if.else13, !dbg !12006

if.then11:                                        ; preds = %if.then8
  store i32 32977, i32* %dest.addr, align 4, !dbg !12007
  %14 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12009
  %call12 = call i32 @get_rgout0_reg(%struct.comedi_device* %14) #9, !dbg !12010
  store i32 %call12, i32* %reg, align 4, !dbg !12011
  br label %if.end19, !dbg !12012

if.else13:                                        ; preds = %if.then8
  %15 = load i32, i32* %reg, align 4, !dbg !12013
  %cmp14 = icmp sge i32 %15, 8, !dbg !12015
  br i1 %cmp14, label %land.lhs.true, label %if.end18, !dbg !12016

land.lhs.true:                                    ; preds = %if.else13
  %16 = load i32, i32* %reg, align 4, !dbg !12017
  %cmp15 = icmp sle i32 %16, 11, !dbg !12018
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !12019

if.then16:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12020, metadata !DIExpression()), !dbg !12022
  %17 = load i32, i32* %reg, align 4, !dbg !12023
  %sub = sub i32 %17, 8, !dbg !12024
  store i32 %sub, i32* %i, align 4, !dbg !12022
  %18 = load i32, i32* %i, align 4, !dbg !12025
  %and = and i32 %18, 3, !dbg !12025
  %add = add i32 32840, %and, !dbg !12025
  store i32 %add, i32* %dest.addr, align 4, !dbg !12026
  %19 = load i32, i32* %i, align 4, !dbg !12027
  %20 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12028
  %call17 = call i32 @get_ith_rtsi_brd_reg(i32 %19, %struct.comedi_device* %20) #9, !dbg !12029
  store i32 %call17, i32* %reg, align 4, !dbg !12030
  br label %if.end18, !dbg !12031

if.end18:                                         ; preds = %if.then16, %land.lhs.true, %if.else13
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then11
  br label %if.end20, !dbg !12032

if.end20:                                         ; preds = %if.end19, %if.then5
  br label %if.end38, !dbg !12033

if.else21:                                        ; preds = %if.else
  %21 = load i32, i32* %dest.addr, align 4, !dbg !12034
  %cmp22 = icmp uge i32 %21, 32908, !dbg !12036
  br i1 %cmp22, label %land.lhs.true23, label %if.else31, !dbg !12037

land.lhs.true23:                                  ; preds = %if.else21
  %22 = load i32, i32* %dest.addr, align 4, !dbg !12038
  %cmp24 = icmp ule i32 %22, 32915, !dbg !12039
  br i1 %cmp24, label %if.then25, label %if.else31, !dbg !12040

if.then25:                                        ; preds = %land.lhs.true23
  %23 = load i32, i32* %dest.addr, align 4, !dbg !12041
  %sub26 = sub i32 %23, 32908, !dbg !12041
  store i32 %sub26, i32* %dest.addr, align 4, !dbg !12041
  %24 = load i32, i32* %dest.addr, align 4, !dbg !12043
  %cmp27 = icmp sgt i32 %24, 1, !dbg !12045
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !12046

if.then28:                                        ; preds = %if.then25
  store i32 -22, i32* %retval, align 4, !dbg !12047
  br label %return, !dbg !12047

if.end29:                                         ; preds = %if.then25
  %25 = load i32, i32* %dest.addr, align 4, !dbg !12048
  %26 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12049
  %call30 = call i32 @ni_get_gout_routing(i32 %25, %struct.comedi_device* %26) #9, !dbg !12050
  store i32 %call30, i32* %reg, align 4, !dbg !12051
  br label %if.end37, !dbg !12052

if.else31:                                        ; preds = %land.lhs.true23, %if.else21
  %27 = load i32, i32* %dest.addr, align 4, !dbg !12053
  %call32 = call zeroext i1 @channel_is_ctr(i32 %27) #9, !dbg !12055
  br i1 %call32, label %if.then33, label %if.else35, !dbg !12056

if.then33:                                        ; preds = %if.else31
  %28 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12057
  %counter_dev = getelementptr inbounds %struct.ni_private, %struct.ni_private* %28, i32 0, i32 19, !dbg !12059
  %29 = load %struct.ni_gpct_device*, %struct.ni_gpct_device** %counter_dev, align 8, !dbg !12059
  %30 = load i32, i32* %dest.addr, align 4, !dbg !12060
  %call34 = call i32 @ni_tio_get_routing(%struct.ni_gpct_device* %29, i32 %30) #9, !dbg !12061
  store i32 %call34, i32* %reg, align 4, !dbg !12062
  br label %if.end36, !dbg !12063

if.else35:                                        ; preds = %if.else31
  br label %if.end36

if.end36:                                         ; preds = %if.else35, %if.then33
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end29
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end20
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end
  %31 = load i32, i32* %reg, align 4, !dbg !12064
  %cmp40 = icmp sge i32 %31, 0, !dbg !12066
  br i1 %cmp40, label %if.then41, label %if.end44, !dbg !12067

if.then41:                                        ; preds = %if.end39
  %32 = load i32, i32* %reg, align 4, !dbg !12068
  %and42 = and i32 %32, 65535, !dbg !12068
  %conv = trunc i32 %and42 to i8, !dbg !12068
  %33 = load i32, i32* %dest.addr, align 4, !dbg !12069
  %34 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12070
  %routing_tables = getelementptr inbounds %struct.ni_private, %struct.ni_private* %34, i32 0, i32 51, !dbg !12071
  %call43 = call i32 @ni_find_route_source(i8 zeroext %conv, i32 %33, %struct.ni_route_tables* %routing_tables) #9, !dbg !12072
  store i32 %call43, i32* %retval, align 4, !dbg !12073
  br label %return, !dbg !12073

if.end44:                                         ; preds = %if.end39
  store i32 -22, i32* %retval, align 4, !dbg !12074
  br label %return, !dbg !12074

return:                                           ; preds = %if.end44, %if.then41, %if.then28
  %35 = load i32, i32* %retval, align 4, !dbg !12075
  ret i32 %35, !dbg !12075
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @channel_is_pfi(i32 %channel) #2 !dbg !12076 {
entry:
  %channel.addr = alloca i32, align 4
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !12079, metadata !DIExpression()), !dbg !12080
  %0 = load i32, i32* %channel.addr, align 4, !dbg !12081
  %cmp = icmp ule i32 32768, %0, !dbg !12082
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12083

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %channel.addr, align 4, !dbg !12084
  %cmp1 = icmp ule i32 %1, 32831, !dbg !12085
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !12086
  ret i1 %2, !dbg !12087
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_get_pfi_direction(%struct.comedi_device* %dev, i32 %chan) #2 !dbg !12088 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %chan.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !12091, metadata !DIExpression()), !dbg !12092
  store i32 %chan, i32* %chan.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chan.addr, metadata !12093, metadata !DIExpression()), !dbg !12094
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !12095, metadata !DIExpression()), !dbg !12096
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12097
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !12098
  %1 = load i8*, i8** %private, align 8, !dbg !12098
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !12097
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !12096
  %3 = load i32, i32* %chan.addr, align 4, !dbg !12099
  %cmp = icmp uge i32 %3, 32768, !dbg !12101
  br i1 %cmp, label %if.then, label %if.end, !dbg !12102

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %chan.addr, align 4, !dbg !12103
  %sub = sub i32 %4, 32768, !dbg !12103
  store i32 %sub, i32* %chan.addr, align 4, !dbg !12103
  br label %if.end, !dbg !12105

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12106
  %io_bidirection_pin_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 28, !dbg !12107
  %6 = load i16, i16* %io_bidirection_pin_reg, align 2, !dbg !12107
  %conv = zext i16 %6 to i32, !dbg !12106
  %7 = load i32, i32* %chan.addr, align 4, !dbg !12108
  %shl = shl i32 1, %7, !dbg !12109
  %and = and i32 %conv, %shl, !dbg !12110
  %tobool = icmp ne i32 %and, 0, !dbg !12106
  %8 = zext i1 %tobool to i64, !dbg !12106
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !12106
  ret i32 %cond, !dbg !12111
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_get_pfi_routing(%struct.comedi_device* %dev, i32 %chan) #2 !dbg !12112 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %chan.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !12113, metadata !DIExpression()), !dbg !12114
  store i32 %chan, i32* %chan.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chan.addr, metadata !12115, metadata !DIExpression()), !dbg !12116
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !12117, metadata !DIExpression()), !dbg !12118
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12119
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !12120
  %1 = load i8*, i8** %private, align 8, !dbg !12120
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !12119
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !12118
  %3 = load i32, i32* %chan.addr, align 4, !dbg !12121
  %cmp = icmp uge i32 %3, 32768, !dbg !12123
  br i1 %cmp, label %if.then, label %if.end, !dbg !12124

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %chan.addr, align 4, !dbg !12125
  %sub = sub i32 %4, 32768, !dbg !12125
  store i32 %sub, i32* %chan.addr, align 4, !dbg !12125
  br label %if.end, !dbg !12127

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12128
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 50, !dbg !12129
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !12129
  %bf.clear = and i16 %bf.load, 1, !dbg !12129
  %bf.cast = zext i16 %bf.clear to i32, !dbg !12129
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !12130
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !12130

cond.true:                                        ; preds = %if.end
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12131
  %7 = load i32, i32* %chan.addr, align 4, !dbg !12132
  %call = call i32 @ni_m_series_get_pfi_routing(%struct.comedi_device* %6, i32 %7) #9, !dbg !12133
  br label %cond.end, !dbg !12130

cond.false:                                       ; preds = %if.end
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12134
  %9 = load i32, i32* %chan.addr, align 4, !dbg !12135
  %call1 = call i32 @ni_old_get_pfi_routing(%struct.comedi_device* %8, i32 %9) #9, !dbg !12136
  br label %cond.end, !dbg !12130

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !12130
  ret i32 %cond, !dbg !12137
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @channel_is_rtsi(i32 %channel) #2 !dbg !12138 {
entry:
  %channel.addr = alloca i32, align 4
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !12139, metadata !DIExpression()), !dbg !12140
  %0 = load i32, i32* %channel.addr, align 4, !dbg !12141
  %cmp = icmp ule i32 32832, %0, !dbg !12142
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12143

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %channel.addr, align 4, !dbg !12144
  %cmp1 = icmp ule i32 %1, 32839, !dbg !12145
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !12146
  ret i1 %2, !dbg !12147
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_get_rtsi_direction(%struct.comedi_device* %dev, i32 %chan) #2 !dbg !12148 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %chan.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  %max_chan = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !12149, metadata !DIExpression()), !dbg !12150
  store i32 %chan, i32* %chan.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chan.addr, metadata !12151, metadata !DIExpression()), !dbg !12152
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !12153, metadata !DIExpression()), !dbg !12154
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12155
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !12156
  %1 = load i8*, i8** %private, align 8, !dbg !12156
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !12155
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !12154
  call void @llvm.dbg.declare(metadata i32* %max_chan, metadata !12157, metadata !DIExpression()), !dbg !12158
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12159
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 50, !dbg !12159
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !12159
  %bf.clear = and i16 %bf.load, 1, !dbg !12159
  %bf.cast = zext i16 %bf.clear to i32, !dbg !12159
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !12159
  %4 = zext i1 %tobool to i64, !dbg !12159
  %cond = select i1 %tobool, i32 8, i32 7, !dbg !12159
  store i32 %cond, i32* %max_chan, align 4, !dbg !12158
  %5 = load i32, i32* %chan.addr, align 4, !dbg !12160
  %cmp = icmp uge i32 %5, 32832, !dbg !12162
  br i1 %cmp, label %if.then, label %if.end, !dbg !12163

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %chan.addr, align 4, !dbg !12164
  %sub = sub i32 %6, 32832, !dbg !12164
  store i32 %sub, i32* %chan.addr, align 4, !dbg !12164
  br label %if.end, !dbg !12165

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %chan.addr, align 4, !dbg !12166
  %8 = load i32, i32* %max_chan, align 4, !dbg !12168
  %cmp1 = icmp ult i32 %7, %8, !dbg !12169
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !12170

if.then2:                                         ; preds = %if.end
  %9 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12171
  %rtsi_trig_direction_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %9, i32 0, i32 29, !dbg !12173
  %10 = load i16, i16* %rtsi_trig_direction_reg, align 4, !dbg !12173
  %conv = zext i16 %10 to i64, !dbg !12171
  %11 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12174
  %is_m_series3 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %11, i32 0, i32 50, !dbg !12174
  %bf.load4 = load i16, i16* %is_m_series3, align 8, !dbg !12174
  %bf.clear5 = and i16 %bf.load4, 1, !dbg !12174
  %bf.cast6 = zext i16 %bf.clear5 to i32, !dbg !12174
  %tobool7 = icmp ne i32 %bf.cast6, 0, !dbg !12174
  br i1 %tobool7, label %cond.true, label %cond.false, !dbg !12174

cond.true:                                        ; preds = %if.then2
  %12 = load i32, i32* %chan.addr, align 4, !dbg !12174
  %add = add i32 8, %12, !dbg !12174
  %sh_prom = zext i32 %add to i64, !dbg !12174
  %shl = shl i64 1, %sh_prom, !dbg !12174
  br label %cond.end, !dbg !12174

cond.false:                                       ; preds = %if.then2
  %13 = load i32, i32* %chan.addr, align 4, !dbg !12174
  %add8 = add i32 7, %13, !dbg !12174
  %sh_prom9 = zext i32 %add8 to i64, !dbg !12174
  %shl10 = shl i64 1, %sh_prom9, !dbg !12174
  br label %cond.end, !dbg !12174

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond11 = phi i64 [ %shl, %cond.true ], [ %shl10, %cond.false ], !dbg !12174
  %and = and i64 %conv, %cond11, !dbg !12175
  %tobool12 = icmp ne i64 %and, 0, !dbg !12176
  %14 = zext i1 %tobool12 to i64, !dbg !12176
  %cond13 = select i1 %tobool12, i32 1, i32 0, !dbg !12176
  store i32 %cond13, i32* %retval, align 4, !dbg !12177
  br label %return, !dbg !12177

if.else:                                          ; preds = %if.end
  %15 = load i32, i32* %chan.addr, align 4, !dbg !12178
  %cmp14 = icmp eq i32 %15, 7, !dbg !12180
  br i1 %cmp14, label %if.then16, label %if.end22, !dbg !12181

if.then16:                                        ; preds = %if.else
  %16 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12182
  %rtsi_trig_direction_reg17 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %16, i32 0, i32 29, !dbg !12184
  %17 = load i16, i16* %rtsi_trig_direction_reg17, align 4, !dbg !12184
  %conv18 = zext i16 %17 to i64, !dbg !12182
  %and19 = and i64 %conv18, 1, !dbg !12185
  %tobool20 = icmp ne i64 %and19, 0, !dbg !12186
  %18 = zext i1 %tobool20 to i64, !dbg !12186
  %cond21 = select i1 %tobool20, i32 1, i32 0, !dbg !12186
  store i32 %cond21, i32* %retval, align 4, !dbg !12187
  br label %return, !dbg !12187

if.end22:                                         ; preds = %if.else
  br label %if.end23

if.end23:                                         ; preds = %if.end22
  store i32 -22, i32* %retval, align 4, !dbg !12188
  br label %return, !dbg !12188

return:                                           ; preds = %if.end23, %if.then16, %cond.end
  %19 = load i32, i32* %retval, align 4, !dbg !12189
  ret i32 %19, !dbg !12189
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_get_rtsi_routing(%struct.comedi_device* %dev, i32 %chan) #2 !dbg !12190 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %chan.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !12191, metadata !DIExpression()), !dbg !12192
  store i32 %chan, i32* %chan.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chan.addr, metadata !12193, metadata !DIExpression()), !dbg !12194
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !12195, metadata !DIExpression()), !dbg !12196
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12197
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !12198
  %1 = load i8*, i8** %private, align 8, !dbg !12198
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !12197
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !12196
  %3 = load i32, i32* %chan.addr, align 4, !dbg !12199
  %cmp = icmp uge i32 %3, 32832, !dbg !12201
  br i1 %cmp, label %if.then, label %if.end, !dbg !12202

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %chan.addr, align 4, !dbg !12203
  %sub = sub i32 %4, 32832, !dbg !12203
  store i32 %sub, i32* %chan.addr, align 4, !dbg !12203
  br label %if.end, !dbg !12204

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %chan.addr, align 4, !dbg !12205
  %cmp1 = icmp ult i32 %5, 4, !dbg !12207
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !12208

if.then2:                                         ; preds = %if.end
  %6 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12209
  %rtsi_trig_a_output_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %6, i32 0, i32 30, !dbg !12209
  %7 = load i16, i16* %rtsi_trig_a_output_reg, align 2, !dbg !12209
  %conv = zext i16 %7 to i32, !dbg !12209
  %8 = load i32, i32* %chan.addr, align 4, !dbg !12209
  %rem = urem i32 %8, 4, !dbg !12209
  %mul = mul i32 %rem, 4, !dbg !12209
  %shr = ashr i32 %conv, %mul, !dbg !12209
  %and = and i32 %shr, 15, !dbg !12209
  store i32 %and, i32* %retval, align 4, !dbg !12211
  br label %return, !dbg !12211

if.else:                                          ; preds = %if.end
  %9 = load i32, i32* %chan.addr, align 4, !dbg !12212
  %10 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12214
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %10, i32 0, i32 50, !dbg !12214
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !12214
  %bf.clear = and i16 %bf.load, 1, !dbg !12214
  %bf.cast = zext i16 %bf.clear to i32, !dbg !12214
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !12214
  %11 = zext i1 %tobool to i64, !dbg !12214
  %cond = select i1 %tobool, i32 8, i32 7, !dbg !12214
  %cmp3 = icmp ult i32 %9, %cond, !dbg !12215
  br i1 %cmp3, label %if.then5, label %if.else11, !dbg !12216

if.then5:                                         ; preds = %if.else
  %12 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12217
  %rtsi_trig_b_output_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %12, i32 0, i32 31, !dbg !12217
  %13 = load i16, i16* %rtsi_trig_b_output_reg, align 8, !dbg !12217
  %conv6 = zext i16 %13 to i32, !dbg !12217
  %14 = load i32, i32* %chan.addr, align 4, !dbg !12217
  %rem7 = urem i32 %14, 4, !dbg !12217
  %mul8 = mul i32 %rem7, 4, !dbg !12217
  %shr9 = ashr i32 %conv6, %mul8, !dbg !12217
  %and10 = and i32 %shr9, 15, !dbg !12217
  store i32 %and10, i32* %retval, align 4, !dbg !12219
  br label %return, !dbg !12219

if.else11:                                        ; preds = %if.else
  %15 = load i32, i32* %chan.addr, align 4, !dbg !12220
  %cmp12 = icmp eq i32 %15, 7, !dbg !12222
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !12223

if.then14:                                        ; preds = %if.else11
  store i32 12, i32* %retval, align 4, !dbg !12224
  br label %return, !dbg !12224

if.end15:                                         ; preds = %if.else11
  br label %if.end16

if.end16:                                         ; preds = %if.end15
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12226
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %16, i32 0, i32 4, !dbg !12226
  %17 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !12226
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %17, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.ni_get_rtsi_routing, i64 0, i64 0)) #11, !dbg !12226
  store i32 -22, i32* %retval, align 4, !dbg !12227
  br label %return, !dbg !12227

return:                                           ; preds = %if.end17, %if.then14, %if.then5, %if.then2
  %18 = load i32, i32* %retval, align 4, !dbg !12228
  ret i32 %18, !dbg !12228
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_rgout0_reg(%struct.comedi_device* %dev) #2 !dbg !12229 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %reg = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !12230, metadata !DIExpression()), !dbg !12231
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !12232, metadata !DIExpression()), !dbg !12233
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12234
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !12235
  %1 = load i8*, i8** %private, align 8, !dbg !12235
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !12234
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !12233
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !12236, metadata !DIExpression()), !dbg !12237
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12238
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 50, !dbg !12240
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !12240
  %bf.clear = and i16 %bf.load, 1, !dbg !12240
  %bf.cast = zext i16 %bf.clear to i32, !dbg !12240
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !12238
  br i1 %tobool, label %if.then, label %if.else, !dbg !12241

if.then:                                          ; preds = %entry
  %4 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12242
  %rtsi_trig_direction_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %4, i32 0, i32 29, !dbg !12243
  %5 = load i16, i16* %rtsi_trig_direction_reg, align 4, !dbg !12243
  %conv = zext i16 %5 to i64, !dbg !12242
  %and = and i64 %conv, 4, !dbg !12244
  %shr = lshr i64 %and, 2, !dbg !12245
  %conv1 = trunc i64 %shr to i32, !dbg !12246
  store i32 %conv1, i32* %reg, align 4, !dbg !12247
  br label %if.end, !dbg !12248

if.else:                                          ; preds = %entry
  %6 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12249
  %rtsi_trig_b_output_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %6, i32 0, i32 31, !dbg !12250
  %7 = load i16, i16* %rtsi_trig_b_output_reg, align 8, !dbg !12250
  %conv2 = zext i16 %7 to i64, !dbg !12249
  %and3 = and i64 %conv2, 32768, !dbg !12251
  %shr4 = lshr i64 %and3, 15, !dbg !12252
  %conv5 = trunc i64 %shr4 to i32, !dbg !12253
  store i32 %conv5, i32* %reg, align 4, !dbg !12254
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load i32, i32* %reg, align 4, !dbg !12255
  ret i32 %8, !dbg !12256
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_ith_rtsi_brd_reg(i32 %i, %struct.comedi_device* %dev) #2 !dbg !12257 {
entry:
  %i.addr = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %reg_i_sz = alloca i32, align 4
  %reg_i_mask = alloca i32, align 4
  %reg_i_shift = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !12258, metadata !DIExpression()), !dbg !12259
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !12260, metadata !DIExpression()), !dbg !12261
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !12262, metadata !DIExpression()), !dbg !12263
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12264
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !12265
  %1 = load i8*, i8** %private, align 8, !dbg !12265
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !12264
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !12263
  call void @llvm.dbg.declare(metadata i32* %reg_i_sz, metadata !12266, metadata !DIExpression()), !dbg !12267
  store i32 3, i32* %reg_i_sz, align 4, !dbg !12267
  call void @llvm.dbg.declare(metadata i32* %reg_i_mask, metadata !12268, metadata !DIExpression()), !dbg !12269
  call void @llvm.dbg.declare(metadata i32* %reg_i_shift, metadata !12270, metadata !DIExpression()), !dbg !12271
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12272
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 50, !dbg !12274
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !12274
  %bf.clear = and i16 %bf.load, 1, !dbg !12274
  %bf.cast = zext i16 %bf.clear to i32, !dbg !12274
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !12272
  br i1 %tobool, label %if.then, label %if.end, !dbg !12275

if.then:                                          ; preds = %entry
  store i32 4, i32* %reg_i_sz, align 4, !dbg !12276
  br label %if.end, !dbg !12277

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %reg_i_sz, align 4, !dbg !12278
  %shl = shl i32 -1, %4, !dbg !12279
  %neg = xor i32 %shl, -1, !dbg !12280
  store i32 %neg, i32* %reg_i_mask, align 4, !dbg !12281
  %5 = load i32, i32* %i.addr, align 4, !dbg !12282
  %6 = load i32, i32* %reg_i_sz, align 4, !dbg !12283
  %mul = mul i32 %5, %6, !dbg !12284
  store i32 %mul, i32* %reg_i_shift, align 4, !dbg !12285
  %7 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12286
  %rtsi_shared_mux_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %7, i32 0, i32 53, !dbg !12287
  %8 = load i16, i16* %rtsi_shared_mux_reg, align 4, !dbg !12287
  %conv = zext i16 %8 to i32, !dbg !12286
  %9 = load i32, i32* %reg_i_shift, align 4, !dbg !12288
  %shr = ashr i32 %conv, %9, !dbg !12289
  %10 = load i32, i32* %reg_i_mask, align 4, !dbg !12290
  %and = and i32 %shr, %10, !dbg !12291
  ret i32 %and, !dbg !12292
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_get_gout_routing(i32 %dest, %struct.comedi_device* %dev) #2 !dbg !12293 {
entry:
  %retval = alloca i32, align 4
  %dest.addr = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %reg = alloca i32, align 4
  store i32 %dest, i32* %dest.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest.addr, metadata !12296, metadata !DIExpression()), !dbg !12297
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !12298, metadata !DIExpression()), !dbg !12299
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !12300, metadata !DIExpression()), !dbg !12301
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12302
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !12303
  %1 = load i8*, i8** %private, align 8, !dbg !12303
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !12302
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !12301
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !12304, metadata !DIExpression()), !dbg !12305
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12306
  %an_trig_etc_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 20, !dbg !12307
  %4 = load i16, i16* %an_trig_etc_reg, align 8, !dbg !12307
  %conv = zext i16 %4 to i32, !dbg !12306
  store i32 %conv, i32* %reg, align 4, !dbg !12305
  %5 = load i32, i32* %dest.addr, align 4, !dbg !12308
  switch i32 %5, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb3
  ], !dbg !12309

sw.bb:                                            ; preds = %entry
  %6 = load i32, i32* %reg, align 4, !dbg !12310
  %conv1 = zext i32 %6 to i64, !dbg !12310
  %and = and i64 %conv1, 16384, !dbg !12313
  %tobool = icmp ne i64 %and, 0, !dbg !12313
  br i1 %tobool, label %if.then, label %if.end, !dbg !12314

if.then:                                          ; preds = %sw.bb
  %7 = load i32, i32* %reg, align 4, !dbg !12315
  %shr = lshr i32 %7, 11, !dbg !12315
  %and2 = and i32 %shr, 7, !dbg !12315
  store i32 %and2, i32* %retval, align 4, !dbg !12316
  br label %return, !dbg !12316

if.end:                                           ; preds = %sw.bb
  br label %sw.epilog, !dbg !12317

sw.bb3:                                           ; preds = %entry
  %8 = load i32, i32* %reg, align 4, !dbg !12318
  %conv4 = zext i32 %8 to i64, !dbg !12318
  %and5 = and i64 %conv4, 32768, !dbg !12320
  %tobool6 = icmp ne i64 %and5, 0, !dbg !12320
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !12321

if.then7:                                         ; preds = %sw.bb3
  %9 = load i32, i32* %reg, align 4, !dbg !12322
  %shr8 = lshr i32 %9, 7, !dbg !12322
  %and9 = and i32 %shr8, 1, !dbg !12322
  store i32 %and9, i32* %retval, align 4, !dbg !12323
  br label %return, !dbg !12323

if.end10:                                         ; preds = %sw.bb3
  br label %sw.epilog, !dbg !12324

sw.epilog:                                        ; preds = %entry, %if.end10, %if.end
  store i32 -22, i32* %retval, align 4, !dbg !12325
  br label %return, !dbg !12325

return:                                           ; preds = %sw.epilog, %if.then7, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !12326
  ret i32 %10, !dbg !12326
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @channel_is_ctr(i32 %channel) #2 !dbg !12327 {
entry:
  %channel.addr = alloca i32, align 4
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !12328, metadata !DIExpression()), !dbg !12329
  %0 = load i32, i32* %channel.addr, align 4, !dbg !12330
  %cmp = icmp uge i32 %0, 32844, !dbg !12331
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12332

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %channel.addr, align 4, !dbg !12333
  %cmp1 = icmp ule i32 %1, 32923, !dbg !12334
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !12335
  ret i1 %2, !dbg !12336
}

; Function Attrs: noredzone
declare dso_local i32 @ni_tio_get_routing(%struct.ni_gpct_device*, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @ni_find_route_source(i8 zeroext, i32, %struct.ni_route_tables*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_m_series_get_pfi_routing(%struct.comedi_device* %dev, i32 %chan) #2 !dbg !12337 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %chan.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  %array_offset = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !12338, metadata !DIExpression()), !dbg !12339
  store i32 %chan, i32* %chan.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chan.addr, metadata !12340, metadata !DIExpression()), !dbg !12341
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !12342, metadata !DIExpression()), !dbg !12343
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12344
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !12345
  %1 = load i8*, i8** %private, align 8, !dbg !12345
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !12344
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !12343
  call void @llvm.dbg.declare(metadata i32* %array_offset, metadata !12346, metadata !DIExpression()), !dbg !12347
  %3 = load i32, i32* %chan.addr, align 4, !dbg !12348
  %div = udiv i32 %3, 3, !dbg !12349
  store i32 %div, i32* %array_offset, align 4, !dbg !12347
  %4 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12350
  %pfi_output_select_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %4, i32 0, i32 32, !dbg !12350
  %5 = load i32, i32* %array_offset, align 4, !dbg !12350
  %idxprom = zext i32 %5 to i64, !dbg !12350
  %arrayidx = getelementptr [6 x i16], [6 x i16]* %pfi_output_select_reg, i64 0, i64 %idxprom, !dbg !12350
  %6 = load i16, i16* %arrayidx, align 2, !dbg !12350
  %conv = zext i16 %6 to i32, !dbg !12350
  %7 = load i32, i32* %chan.addr, align 4, !dbg !12350
  %rem = urem i32 %7, 3, !dbg !12350
  %mul = mul i32 %rem, 5, !dbg !12350
  %shr = ashr i32 %conv, %mul, !dbg !12350
  %and = and i32 %shr, 31, !dbg !12350
  ret i32 %and, !dbg !12351
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_old_get_pfi_routing(%struct.comedi_device* %dev, i32 %chan) #2 !dbg !12352 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %chan.addr = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !12353, metadata !DIExpression()), !dbg !12354
  store i32 %chan, i32* %chan.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chan.addr, metadata !12355, metadata !DIExpression()), !dbg !12356
  %0 = load i32, i32* %chan.addr, align 4, !dbg !12357
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
    i32 4, label %sw.bb4
    i32 5, label %sw.bb5
    i32 6, label %sw.bb6
    i32 7, label %sw.bb7
    i32 8, label %sw.bb8
    i32 9, label %sw.bb9
  ], !dbg !12358

sw.bb:                                            ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !12359
  br label %return, !dbg !12359

sw.bb1:                                           ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !12361
  br label %return, !dbg !12361

sw.bb2:                                           ; preds = %entry
  store i32 3, i32* %retval, align 4, !dbg !12362
  br label %return, !dbg !12362

sw.bb3:                                           ; preds = %entry
  store i32 4, i32* %retval, align 4, !dbg !12363
  br label %return, !dbg !12363

sw.bb4:                                           ; preds = %entry
  store i32 5, i32* %retval, align 4, !dbg !12364
  br label %return, !dbg !12364

sw.bb5:                                           ; preds = %entry
  store i32 6, i32* %retval, align 4, !dbg !12365
  br label %return, !dbg !12365

sw.bb6:                                           ; preds = %entry
  store i32 7, i32* %retval, align 4, !dbg !12366
  br label %return, !dbg !12366

sw.bb7:                                           ; preds = %entry
  store i32 8, i32* %retval, align 4, !dbg !12367
  br label %return, !dbg !12367

sw.bb8:                                           ; preds = %entry
  store i32 9, i32* %retval, align 4, !dbg !12368
  br label %return, !dbg !12368

sw.bb9:                                           ; preds = %entry
  store i32 10, i32* %retval, align 4, !dbg !12369
  br label %return, !dbg !12369

sw.default:                                       ; preds = %entry
  %1 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12370
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %1, i32 0, i32 4, !dbg !12370
  %2 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !12370
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.81, i64 0, i64 0)) #11, !dbg !12370
  br label %sw.epilog, !dbg !12371

sw.epilog:                                        ; preds = %sw.default
  store i32 0, i32* %retval, align 4, !dbg !12372
  br label %return, !dbg !12372

return:                                           ; preds = %sw.epilog, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !12373
  ret i32 %3, !dbg !12373
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_set_pfi_routing(%struct.comedi_device* %dev, i32 %chan, i32 %source) #2 !dbg !12374 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %chan.addr = alloca i32, align 4
  %source.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !12375, metadata !DIExpression()), !dbg !12376
  store i32 %chan, i32* %chan.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chan.addr, metadata !12377, metadata !DIExpression()), !dbg !12378
  store i32 %source, i32* %source.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source.addr, metadata !12379, metadata !DIExpression()), !dbg !12380
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !12381, metadata !DIExpression()), !dbg !12382
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12383
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !12384
  %1 = load i8*, i8** %private, align 8, !dbg !12384
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !12383
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !12382
  %3 = load i32, i32* %chan.addr, align 4, !dbg !12385
  %cmp = icmp uge i32 %3, 32768, !dbg !12387
  br i1 %cmp, label %if.then, label %if.end, !dbg !12388

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %chan.addr, align 4, !dbg !12389
  %sub = sub i32 %4, 32768, !dbg !12389
  store i32 %sub, i32* %chan.addr, align 4, !dbg !12389
  br label %if.end, !dbg !12391

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12392
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 50, !dbg !12393
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !12393
  %bf.clear = and i16 %bf.load, 1, !dbg !12393
  %bf.cast = zext i16 %bf.clear to i32, !dbg !12393
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !12394
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !12394

cond.true:                                        ; preds = %if.end
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12395
  %7 = load i32, i32* %chan.addr, align 4, !dbg !12396
  %8 = load i32, i32* %source.addr, align 4, !dbg !12397
  %call = call i32 @ni_m_series_set_pfi_routing(%struct.comedi_device* %6, i32 %7, i32 %8) #9, !dbg !12398
  br label %cond.end, !dbg !12394

cond.false:                                       ; preds = %if.end
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12399
  %10 = load i32, i32* %chan.addr, align 4, !dbg !12400
  %11 = load i32, i32* %source.addr, align 4, !dbg !12401
  %call1 = call i32 @ni_old_set_pfi_routing(%struct.comedi_device* %9, i32 %10, i32 %11) #9, !dbg !12402
  br label %cond.end, !dbg !12394

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !12394
  ret i32 %cond, !dbg !12403
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_set_pfi_direction(%struct.comedi_device* %dev, i32 %chan, i32 %direction) #2 !dbg !12404 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %chan.addr = alloca i32, align 4
  %direction.addr = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !12407, metadata !DIExpression()), !dbg !12408
  store i32 %chan, i32* %chan.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chan.addr, metadata !12409, metadata !DIExpression()), !dbg !12410
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !12411, metadata !DIExpression()), !dbg !12412
  %0 = load i32, i32* %chan.addr, align 4, !dbg !12413
  %cmp = icmp uge i32 %0, 32768, !dbg !12415
  br i1 %cmp, label %if.then, label %if.end, !dbg !12416

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %chan.addr, align 4, !dbg !12417
  %sub = sub i32 %1, 32768, !dbg !12417
  store i32 %sub, i32* %chan.addr, align 4, !dbg !12417
  br label %if.end, !dbg !12419

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %direction.addr, align 4, !dbg !12420
  %cmp1 = icmp eq i32 %2, 1, !dbg !12421
  %3 = zext i1 %cmp1 to i64, !dbg !12422
  %cond = select i1 %cmp1, i32 1, i32 0, !dbg !12422
  store i32 %cond, i32* %direction.addr, align 4, !dbg !12423
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12424
  %5 = load i32, i32* %chan.addr, align 4, !dbg !12425
  %shl = shl i32 1, %5, !dbg !12426
  %6 = load i32, i32* %direction.addr, align 4, !dbg !12427
  call void @ni_set_bits(%struct.comedi_device* %4, i32 57, i32 %shl, i32 %6) #9, !dbg !12428
  ret void, !dbg !12429
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @incr_rgout0_src_use(i32 %src, %struct.comedi_device* %dev) #2 !dbg !12430 {
entry:
  %retval = alloca i32, align 4
  %src.addr = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %reg = alloca i8, align 1
  store i32 %src, i32* %src.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src.addr, metadata !12431, metadata !DIExpression()), !dbg !12432
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !12433, metadata !DIExpression()), !dbg !12434
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !12435, metadata !DIExpression()), !dbg !12436
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12437
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !12438
  %1 = load i8*, i8** %private, align 8, !dbg !12438
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !12437
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !12436
  call void @llvm.dbg.declare(metadata i8* %reg, metadata !12439, metadata !DIExpression()), !dbg !12440
  %3 = load i32, i32* %src.addr, align 4, !dbg !12441
  %and = and i32 %3, 65535, !dbg !12441
  %4 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12442
  %routing_tables = getelementptr inbounds %struct.ni_private, %struct.ni_private* %4, i32 0, i32 51, !dbg !12443
  %call = call signext i8 @ni_lookup_route_register(i32 %and, i32 32977, %struct.ni_route_tables* %routing_tables) #9, !dbg !12444
  store i8 %call, i8* %reg, align 1, !dbg !12440
  %5 = load i8, i8* %reg, align 1, !dbg !12445
  %conv = sext i8 %5 to i32, !dbg !12445
  %cmp = icmp slt i32 %conv, 0, !dbg !12447
  br i1 %cmp, label %if.then, label %if.end, !dbg !12448

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !12449
  br label %return, !dbg !12449

if.end:                                           ; preds = %entry
  %6 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12450
  %rgout0_usage = getelementptr inbounds %struct.ni_private, %struct.ni_private* %6, i32 0, i32 54, !dbg !12452
  %7 = load i8, i8* %rgout0_usage, align 2, !dbg !12452
  %conv2 = zext i8 %7 to i32, !dbg !12450
  %cmp3 = icmp sgt i32 %conv2, 0, !dbg !12453
  br i1 %cmp3, label %land.lhs.true, label %if.end10, !dbg !12454

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12455
  %call5 = call i32 @get_rgout0_reg(%struct.comedi_device* %8) #9, !dbg !12456
  %9 = load i8, i8* %reg, align 1, !dbg !12457
  %conv6 = sext i8 %9 to i32, !dbg !12457
  %cmp7 = icmp ne i32 %call5, %conv6, !dbg !12458
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !12459

if.then9:                                         ; preds = %land.lhs.true
  store i32 -16, i32* %retval, align 4, !dbg !12460
  br label %return, !dbg !12460

if.end10:                                         ; preds = %land.lhs.true, %if.end
  %10 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12461
  %rgout0_usage11 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %10, i32 0, i32 54, !dbg !12462
  %11 = load i8, i8* %rgout0_usage11, align 2, !dbg !12463
  %inc = add i8 %11, 1, !dbg !12463
  store i8 %inc, i8* %rgout0_usage11, align 2, !dbg !12463
  %12 = load i8, i8* %reg, align 1, !dbg !12464
  %conv12 = sext i8 %12 to i32, !dbg !12464
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12465
  call void @set_rgout0_reg(i32 %conv12, %struct.comedi_device* %13) #9, !dbg !12466
  store i32 0, i32* %retval, align 4, !dbg !12467
  br label %return, !dbg !12467

return:                                           ; preds = %if.end10, %if.then9, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !12468
  ret i32 %14, !dbg !12468
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ni_rtsi_route_requires_mux(i8 signext %value) #2 !dbg !12469 {
entry:
  %value.addr = alloca i8, align 1
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !12472, metadata !DIExpression()), !dbg !12473
  %0 = load i8, i8* %value.addr, align 1, !dbg !12474
  %conv = sext i8 %0 to i64, !dbg !12474
  %and = and i64 %conv, 64, !dbg !12475
  %tobool = icmp ne i64 %and, 0, !dbg !12474
  ret i1 %tobool, !dbg !12476
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @incr_rtsi_brd_src_use(i32 %src, %struct.comedi_device* %dev) #2 !dbg !12477 {
entry:
  %retval = alloca i32, align 4
  %src.addr = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %first_available = alloca i32, align 4
  %err = alloca i32, align 4
  %reg = alloca i8, align 1
  %i = alloca i32, align 4
  store i32 %src, i32* %src.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src.addr, metadata !12478, metadata !DIExpression()), !dbg !12479
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !12480, metadata !DIExpression()), !dbg !12481
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !12482, metadata !DIExpression()), !dbg !12483
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12484
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !12485
  %1 = load i8*, i8** %private, align 8, !dbg !12485
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !12484
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !12483
  call void @llvm.dbg.declare(metadata i32* %first_available, metadata !12486, metadata !DIExpression()), !dbg !12487
  store i32 -1, i32* %first_available, align 4, !dbg !12487
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12488, metadata !DIExpression()), !dbg !12489
  store i32 -22, i32* %err, align 4, !dbg !12489
  call void @llvm.dbg.declare(metadata i8* %reg, metadata !12490, metadata !DIExpression()), !dbg !12491
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12492, metadata !DIExpression()), !dbg !12493
  store i32 0, i32* %i, align 4, !dbg !12494
  br label %for.cond, !dbg !12496

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !12497
  %cmp = icmp ult i32 %3, 4, !dbg !12499
  br i1 %cmp, label %for.body, label %for.end, !dbg !12500

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %src.addr, align 4, !dbg !12501
  %and = and i32 %4, 65535, !dbg !12501
  %5 = load i32, i32* %i, align 4, !dbg !12503
  %and1 = and i32 %5, 3, !dbg !12503
  %add = add i32 32840, %and1, !dbg !12503
  %6 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12504
  %routing_tables = getelementptr inbounds %struct.ni_private, %struct.ni_private* %6, i32 0, i32 51, !dbg !12505
  %call = call signext i8 @ni_lookup_route_register(i32 %and, i32 %add, %struct.ni_route_tables* %routing_tables) #9, !dbg !12506
  store i8 %call, i8* %reg, align 1, !dbg !12507
  %7 = load i8, i8* %reg, align 1, !dbg !12508
  %conv = sext i8 %7 to i32, !dbg !12508
  %cmp2 = icmp slt i32 %conv, 0, !dbg !12510
  br i1 %cmp2, label %if.then, label %if.end, !dbg !12511

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !12512

if.end:                                           ; preds = %for.body
  %8 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12513
  %rtsi_shared_mux_usage = getelementptr inbounds %struct.ni_private, %struct.ni_private* %8, i32 0, i32 52, !dbg !12515
  %9 = load i32, i32* %i, align 4, !dbg !12516
  %idxprom = sext i32 %9 to i64, !dbg !12513
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %rtsi_shared_mux_usage, i64 0, i64 %idxprom, !dbg !12513
  %10 = load i8, i8* %arrayidx, align 1, !dbg !12513
  %tobool = icmp ne i8 %10, 0, !dbg !12513
  br i1 %tobool, label %if.else, label %if.then4, !dbg !12517

if.then4:                                         ; preds = %if.end
  %11 = load i32, i32* %first_available, align 4, !dbg !12518
  %cmp5 = icmp slt i32 %11, 0, !dbg !12521
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !12522

if.then7:                                         ; preds = %if.then4
  %12 = load i32, i32* %i, align 4, !dbg !12523
  store i32 %12, i32* %first_available, align 4, !dbg !12524
  br label %if.end8, !dbg !12525

if.end8:                                          ; preds = %if.then7, %if.then4
  br label %if.end15, !dbg !12526

if.else:                                          ; preds = %if.end
  store i32 -16, i32* %err, align 4, !dbg !12527
  %13 = load i32, i32* %i, align 4, !dbg !12529
  %14 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12531
  %call9 = call i32 @get_ith_rtsi_brd_reg(i32 %13, %struct.comedi_device* %14) #9, !dbg !12532
  %15 = load i8, i8* %reg, align 1, !dbg !12533
  %conv10 = sext i8 %15 to i32, !dbg !12533
  %cmp11 = icmp eq i32 %call9, %conv10, !dbg !12534
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !12535

if.then13:                                        ; preds = %if.else
  br label %success, !dbg !12536

if.end14:                                         ; preds = %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.end8
  br label %for.inc, !dbg !12538

for.inc:                                          ; preds = %if.end15, %if.then
  %16 = load i32, i32* %i, align 4, !dbg !12539
  %inc = add i32 %16, 1, !dbg !12539
  store i32 %inc, i32* %i, align 4, !dbg !12539
  br label %for.cond, !dbg !12540, !llvm.loop !12541

for.end:                                          ; preds = %for.cond
  %17 = load i32, i32* %first_available, align 4, !dbg !12543
  %cmp16 = icmp slt i32 %17, 0, !dbg !12545
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !12546

if.then18:                                        ; preds = %for.end
  %18 = load i32, i32* %err, align 4, !dbg !12547
  store i32 %18, i32* %retval, align 4, !dbg !12548
  br label %return, !dbg !12548

if.end19:                                         ; preds = %for.end
  %19 = load i32, i32* %first_available, align 4, !dbg !12549
  store i32 %19, i32* %i, align 4, !dbg !12550
  br label %success, !dbg !12551

success:                                          ; preds = %if.end19, %if.then13
  call void @llvm.dbg.label(metadata !12552), !dbg !12553
  %20 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12554
  %rtsi_shared_mux_usage20 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %20, i32 0, i32 52, !dbg !12555
  %21 = load i32, i32* %i, align 4, !dbg !12556
  %idxprom21 = sext i32 %21 to i64, !dbg !12554
  %arrayidx22 = getelementptr [4 x i8], [4 x i8]* %rtsi_shared_mux_usage20, i64 0, i64 %idxprom21, !dbg !12554
  %22 = load i8, i8* %arrayidx22, align 1, !dbg !12557
  %inc23 = add i8 %22, 1, !dbg !12557
  store i8 %inc23, i8* %arrayidx22, align 1, !dbg !12557
  %23 = load i32, i32* %i, align 4, !dbg !12558
  %24 = load i8, i8* %reg, align 1, !dbg !12559
  %conv24 = sext i8 %24 to i32, !dbg !12559
  %25 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12560
  call void @set_ith_rtsi_brd_reg(i32 %23, i32 %conv24, %struct.comedi_device* %25) #9, !dbg !12561
  %26 = load i32, i32* %i, align 4, !dbg !12562
  %and25 = and i32 %26, 3, !dbg !12562
  %add26 = add i32 32840, %and25, !dbg !12562
  store i32 %add26, i32* %retval, align 4, !dbg !12563
  br label %return, !dbg !12563

return:                                           ; preds = %success, %if.then18
  %27 = load i32, i32* %retval, align 4, !dbg !12564
  ret i32 %27, !dbg !12564
}

; Function Attrs: noredzone
declare dso_local signext i8 @ni_lookup_route_register(i32, i32, %struct.ni_route_tables*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_set_rtsi_direction(%struct.comedi_device* %dev, i32 %chan, i32 %direction) #2 !dbg !12565 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %chan.addr = alloca i32, align 4
  %direction.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  %max_chan = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !12566, metadata !DIExpression()), !dbg !12567
  store i32 %chan, i32* %chan.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chan.addr, metadata !12568, metadata !DIExpression()), !dbg !12569
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !12570, metadata !DIExpression()), !dbg !12571
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !12572, metadata !DIExpression()), !dbg !12573
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12574
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !12575
  %1 = load i8*, i8** %private, align 8, !dbg !12575
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !12574
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !12573
  call void @llvm.dbg.declare(metadata i32* %max_chan, metadata !12576, metadata !DIExpression()), !dbg !12577
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12578
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 50, !dbg !12578
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !12578
  %bf.clear = and i16 %bf.load, 1, !dbg !12578
  %bf.cast = zext i16 %bf.clear to i32, !dbg !12578
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !12578
  %4 = zext i1 %tobool to i64, !dbg !12578
  %cond = select i1 %tobool, i32 8, i32 7, !dbg !12578
  store i32 %cond, i32* %max_chan, align 4, !dbg !12577
  %5 = load i32, i32* %chan.addr, align 4, !dbg !12579
  %cmp = icmp uge i32 %5, 32832, !dbg !12581
  br i1 %cmp, label %if.then, label %if.end, !dbg !12582

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %chan.addr, align 4, !dbg !12583
  %sub = sub i32 %6, 32832, !dbg !12583
  store i32 %sub, i32* %chan.addr, align 4, !dbg !12583
  br label %if.end, !dbg !12584

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %direction.addr, align 4, !dbg !12585
  %cmp1 = icmp eq i32 %7, 1, !dbg !12587
  br i1 %cmp1, label %if.then2, label %if.else24, !dbg !12588

if.then2:                                         ; preds = %if.end
  %8 = load i32, i32* %chan.addr, align 4, !dbg !12589
  %9 = load i32, i32* %max_chan, align 4, !dbg !12592
  %cmp3 = icmp ult i32 %8, %9, !dbg !12593
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !12594

if.then4:                                         ; preds = %if.then2
  %10 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12595
  %is_m_series5 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %10, i32 0, i32 50, !dbg !12595
  %bf.load6 = load i16, i16* %is_m_series5, align 8, !dbg !12595
  %bf.clear7 = and i16 %bf.load6, 1, !dbg !12595
  %bf.cast8 = zext i16 %bf.clear7 to i32, !dbg !12595
  %tobool9 = icmp ne i32 %bf.cast8, 0, !dbg !12595
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !12595

cond.true:                                        ; preds = %if.then4
  %11 = load i32, i32* %chan.addr, align 4, !dbg !12595
  %add = add i32 8, %11, !dbg !12595
  %sh_prom = zext i32 %add to i64, !dbg !12595
  %shl = shl i64 1, %sh_prom, !dbg !12595
  br label %cond.end, !dbg !12595

cond.false:                                       ; preds = %if.then4
  %12 = load i32, i32* %chan.addr, align 4, !dbg !12595
  %add10 = add i32 7, %12, !dbg !12595
  %sh_prom11 = zext i32 %add10 to i64, !dbg !12595
  %shl12 = shl i64 1, %sh_prom11, !dbg !12595
  br label %cond.end, !dbg !12595

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond13 = phi i64 [ %shl, %cond.true ], [ %shl12, %cond.false ], !dbg !12595
  %13 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12597
  %rtsi_trig_direction_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %13, i32 0, i32 29, !dbg !12598
  %14 = load i16, i16* %rtsi_trig_direction_reg, align 4, !dbg !12599
  %conv = zext i16 %14 to i64, !dbg !12599
  %or = or i64 %conv, %cond13, !dbg !12599
  %conv14 = trunc i64 %or to i16, !dbg !12599
  store i16 %conv14, i16* %rtsi_trig_direction_reg, align 4, !dbg !12599
  br label %if.end23, !dbg !12600

if.else:                                          ; preds = %if.then2
  %15 = load i32, i32* %chan.addr, align 4, !dbg !12601
  %cmp15 = icmp eq i32 %15, 7, !dbg !12603
  br i1 %cmp15, label %if.then17, label %if.end22, !dbg !12604

if.then17:                                        ; preds = %if.else
  %16 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12605
  %rtsi_trig_direction_reg18 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %16, i32 0, i32 29, !dbg !12607
  %17 = load i16, i16* %rtsi_trig_direction_reg18, align 4, !dbg !12608
  %conv19 = zext i16 %17 to i64, !dbg !12608
  %or20 = or i64 %conv19, 1, !dbg !12608
  %conv21 = trunc i64 %or20 to i16, !dbg !12608
  store i16 %conv21, i16* %rtsi_trig_direction_reg18, align 4, !dbg !12608
  br label %if.end22, !dbg !12609

if.end22:                                         ; preds = %if.then17, %if.else
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %cond.end
  br label %if.end56, !dbg !12610

if.else24:                                        ; preds = %if.end
  %18 = load i32, i32* %chan.addr, align 4, !dbg !12611
  %19 = load i32, i32* %max_chan, align 4, !dbg !12614
  %cmp25 = icmp ult i32 %18, %19, !dbg !12615
  br i1 %cmp25, label %if.then27, label %if.else46, !dbg !12616

if.then27:                                        ; preds = %if.else24
  %20 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12617
  %is_m_series28 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %20, i32 0, i32 50, !dbg !12617
  %bf.load29 = load i16, i16* %is_m_series28, align 8, !dbg !12617
  %bf.clear30 = and i16 %bf.load29, 1, !dbg !12617
  %bf.cast31 = zext i16 %bf.clear30 to i32, !dbg !12617
  %tobool32 = icmp ne i32 %bf.cast31, 0, !dbg !12617
  br i1 %tobool32, label %cond.true33, label %cond.false37, !dbg !12617

cond.true33:                                      ; preds = %if.then27
  %21 = load i32, i32* %chan.addr, align 4, !dbg !12617
  %add34 = add i32 8, %21, !dbg !12617
  %sh_prom35 = zext i32 %add34 to i64, !dbg !12617
  %shl36 = shl i64 1, %sh_prom35, !dbg !12617
  br label %cond.end41, !dbg !12617

cond.false37:                                     ; preds = %if.then27
  %22 = load i32, i32* %chan.addr, align 4, !dbg !12617
  %add38 = add i32 7, %22, !dbg !12617
  %sh_prom39 = zext i32 %add38 to i64, !dbg !12617
  %shl40 = shl i64 1, %sh_prom39, !dbg !12617
  br label %cond.end41, !dbg !12617

cond.end41:                                       ; preds = %cond.false37, %cond.true33
  %cond42 = phi i64 [ %shl36, %cond.true33 ], [ %shl40, %cond.false37 ], !dbg !12617
  %neg = xor i64 %cond42, -1, !dbg !12619
  %23 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12620
  %rtsi_trig_direction_reg43 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %23, i32 0, i32 29, !dbg !12621
  %24 = load i16, i16* %rtsi_trig_direction_reg43, align 4, !dbg !12622
  %conv44 = zext i16 %24 to i64, !dbg !12622
  %and = and i64 %conv44, %neg, !dbg !12622
  %conv45 = trunc i64 %and to i16, !dbg !12622
  store i16 %conv45, i16* %rtsi_trig_direction_reg43, align 4, !dbg !12622
  br label %if.end55, !dbg !12623

if.else46:                                        ; preds = %if.else24
  %25 = load i32, i32* %chan.addr, align 4, !dbg !12624
  %cmp47 = icmp eq i32 %25, 7, !dbg !12626
  br i1 %cmp47, label %if.then49, label %if.end54, !dbg !12627

if.then49:                                        ; preds = %if.else46
  %26 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12628
  %rtsi_trig_direction_reg50 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %26, i32 0, i32 29, !dbg !12630
  %27 = load i16, i16* %rtsi_trig_direction_reg50, align 4, !dbg !12631
  %conv51 = zext i16 %27 to i64, !dbg !12631
  %and52 = and i64 %conv51, -2, !dbg !12631
  %conv53 = trunc i64 %and52 to i16, !dbg !12631
  store i16 %conv53, i16* %rtsi_trig_direction_reg50, align 4, !dbg !12631
  br label %if.end54, !dbg !12632

if.end54:                                         ; preds = %if.then49, %if.else46
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %cond.end41
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end23
  %28 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12633
  %29 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12634
  %rtsi_trig_direction_reg57 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %29, i32 0, i32 29, !dbg !12635
  %30 = load i16, i16* %rtsi_trig_direction_reg57, align 4, !dbg !12635
  %conv58 = zext i16 %30 to i32, !dbg !12634
  call void @ni_stc_writew(%struct.comedi_device* %28, i32 %conv58, i32 58) #9, !dbg !12636
  ret void, !dbg !12637
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_set_rtsi_routing(%struct.comedi_device* %dev, i32 %chan, i32 %src) #2 !dbg !12638 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %chan.addr = alloca i32, align 4
  %src.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !12639, metadata !DIExpression()), !dbg !12640
  store i32 %chan, i32* %chan.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chan.addr, metadata !12641, metadata !DIExpression()), !dbg !12642
  store i32 %src, i32* %src.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src.addr, metadata !12643, metadata !DIExpression()), !dbg !12644
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !12645, metadata !DIExpression()), !dbg !12646
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12647
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !12648
  %1 = load i8*, i8** %private, align 8, !dbg !12648
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !12647
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !12646
  %3 = load i32, i32* %chan.addr, align 4, !dbg !12649
  %cmp = icmp uge i32 %3, 32832, !dbg !12651
  br i1 %cmp, label %if.then, label %if.end, !dbg !12652

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %chan.addr, align 4, !dbg !12653
  %sub = sub i32 %4, 32832, !dbg !12653
  store i32 %sub, i32* %chan.addr, align 4, !dbg !12653
  br label %if.end, !dbg !12654

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12655
  %6 = load i32, i32* %chan.addr, align 4, !dbg !12657
  %7 = load i32, i32* %src.addr, align 4, !dbg !12658
  %call = call i32 @ni_valid_rtsi_output_source(%struct.comedi_device* %5, i32 %6, i32 %7) #9, !dbg !12659
  %cmp1 = icmp eq i32 %call, 0, !dbg !12660
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !12661

if.then2:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !12662
  br label %return, !dbg !12662

if.end3:                                          ; preds = %if.end
  %8 = load i32, i32* %chan.addr, align 4, !dbg !12663
  %cmp4 = icmp ult i32 %8, 4, !dbg !12665
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !12666

if.then5:                                         ; preds = %if.end3
  %9 = load i32, i32* %chan.addr, align 4, !dbg !12667
  %rem = urem i32 %9, 4, !dbg !12667
  %mul = mul i32 %rem, 4, !dbg !12667
  %shl = shl i32 15, %mul, !dbg !12667
  %neg = xor i32 %shl, -1, !dbg !12669
  %10 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12670
  %rtsi_trig_a_output_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %10, i32 0, i32 30, !dbg !12671
  %11 = load i16, i16* %rtsi_trig_a_output_reg, align 2, !dbg !12672
  %conv = zext i16 %11 to i32, !dbg !12672
  %and = and i32 %conv, %neg, !dbg !12672
  %conv6 = trunc i32 %and to i16, !dbg !12672
  store i16 %conv6, i16* %rtsi_trig_a_output_reg, align 2, !dbg !12672
  %12 = load i32, i32* %src.addr, align 4, !dbg !12673
  %and7 = and i32 %12, 15, !dbg !12673
  %13 = load i32, i32* %chan.addr, align 4, !dbg !12673
  %rem8 = urem i32 %13, 4, !dbg !12673
  %mul9 = mul i32 %rem8, 4, !dbg !12673
  %shl10 = shl i32 %and7, %mul9, !dbg !12673
  %14 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12674
  %rtsi_trig_a_output_reg11 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %14, i32 0, i32 30, !dbg !12675
  %15 = load i16, i16* %rtsi_trig_a_output_reg11, align 2, !dbg !12676
  %conv12 = zext i16 %15 to i32, !dbg !12676
  %or = or i32 %conv12, %shl10, !dbg !12676
  %conv13 = trunc i32 %or to i16, !dbg !12676
  store i16 %conv13, i16* %rtsi_trig_a_output_reg11, align 2, !dbg !12676
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12677
  %17 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12678
  %rtsi_trig_a_output_reg14 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %17, i32 0, i32 30, !dbg !12679
  %18 = load i16, i16* %rtsi_trig_a_output_reg14, align 2, !dbg !12679
  %conv15 = zext i16 %18 to i32, !dbg !12678
  call void @ni_stc_writew(%struct.comedi_device* %16, i32 %conv15, i32 79) #9, !dbg !12680
  br label %if.end42, !dbg !12681

if.else:                                          ; preds = %if.end3
  %19 = load i32, i32* %chan.addr, align 4, !dbg !12682
  %20 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12684
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %20, i32 0, i32 50, !dbg !12684
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !12684
  %bf.clear = and i16 %bf.load, 1, !dbg !12684
  %bf.cast = zext i16 %bf.clear to i32, !dbg !12684
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !12684
  %21 = zext i1 %tobool to i64, !dbg !12684
  %cond = select i1 %tobool, i32 8, i32 7, !dbg !12684
  %cmp16 = icmp ult i32 %19, %cond, !dbg !12685
  br i1 %cmp16, label %if.then18, label %if.else36, !dbg !12686

if.then18:                                        ; preds = %if.else
  %22 = load i32, i32* %chan.addr, align 4, !dbg !12687
  %rem19 = urem i32 %22, 4, !dbg !12687
  %mul20 = mul i32 %rem19, 4, !dbg !12687
  %shl21 = shl i32 15, %mul20, !dbg !12687
  %neg22 = xor i32 %shl21, -1, !dbg !12689
  %23 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12690
  %rtsi_trig_b_output_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %23, i32 0, i32 31, !dbg !12691
  %24 = load i16, i16* %rtsi_trig_b_output_reg, align 8, !dbg !12692
  %conv23 = zext i16 %24 to i32, !dbg !12692
  %and24 = and i32 %conv23, %neg22, !dbg !12692
  %conv25 = trunc i32 %and24 to i16, !dbg !12692
  store i16 %conv25, i16* %rtsi_trig_b_output_reg, align 8, !dbg !12692
  %25 = load i32, i32* %src.addr, align 4, !dbg !12693
  %and26 = and i32 %25, 15, !dbg !12693
  %26 = load i32, i32* %chan.addr, align 4, !dbg !12693
  %rem27 = urem i32 %26, 4, !dbg !12693
  %mul28 = mul i32 %rem27, 4, !dbg !12693
  %shl29 = shl i32 %and26, %mul28, !dbg !12693
  %27 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12694
  %rtsi_trig_b_output_reg30 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %27, i32 0, i32 31, !dbg !12695
  %28 = load i16, i16* %rtsi_trig_b_output_reg30, align 8, !dbg !12696
  %conv31 = zext i16 %28 to i32, !dbg !12696
  %or32 = or i32 %conv31, %shl29, !dbg !12696
  %conv33 = trunc i32 %or32 to i16, !dbg !12696
  store i16 %conv33, i16* %rtsi_trig_b_output_reg30, align 8, !dbg !12696
  %29 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12697
  %30 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12698
  %rtsi_trig_b_output_reg34 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %30, i32 0, i32 31, !dbg !12699
  %31 = load i16, i16* %rtsi_trig_b_output_reg34, align 8, !dbg !12699
  %conv35 = zext i16 %31 to i32, !dbg !12698
  call void @ni_stc_writew(%struct.comedi_device* %29, i32 %conv35, i32 80) #9, !dbg !12700
  br label %if.end41, !dbg !12701

if.else36:                                        ; preds = %if.else
  %32 = load i32, i32* %chan.addr, align 4, !dbg !12702
  %cmp37 = icmp ne i32 %32, 7, !dbg !12704
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !12705

if.then39:                                        ; preds = %if.else36
  %33 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12706
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %33, i32 0, i32 4, !dbg !12706
  %34 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !12706
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %34, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.ni_set_rtsi_routing, i64 0, i64 0)) #11, !dbg !12706
  store i32 -22, i32* %retval, align 4, !dbg !12708
  br label %return, !dbg !12708

if.end40:                                         ; preds = %if.else36
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then18
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then5
  store i32 2, i32* %retval, align 4, !dbg !12709
  br label %return, !dbg !12709

return:                                           ; preds = %if.end42, %if.then39, %if.then2
  %35 = load i32, i32* %retval, align 4, !dbg !12710
  ret i32 %35, !dbg !12710
}

; Function Attrs: noredzone
declare dso_local i32 @ni_tio_set_routing(%struct.ni_gpct_device*, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_m_series_set_pfi_routing(%struct.comedi_device* %dev, i32 %chan, i32 %source) #2 !dbg !12711 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %chan.addr = alloca i32, align 4
  %source.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  %index = alloca i32, align 4
  %val = alloca i16, align 2
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !12712, metadata !DIExpression()), !dbg !12713
  store i32 %chan, i32* %chan.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chan.addr, metadata !12714, metadata !DIExpression()), !dbg !12715
  store i32 %source, i32* %source.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source.addr, metadata !12716, metadata !DIExpression()), !dbg !12717
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !12718, metadata !DIExpression()), !dbg !12719
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12720
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !12721
  %1 = load i8*, i8** %private, align 8, !dbg !12721
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !12720
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !12719
  call void @llvm.dbg.declare(metadata i32* %index, metadata !12722, metadata !DIExpression()), !dbg !12723
  %3 = load i32, i32* %chan.addr, align 4, !dbg !12724
  %div = udiv i32 %3, 3, !dbg !12725
  store i32 %div, i32* %index, align 4, !dbg !12723
  call void @llvm.dbg.declare(metadata i16* %val, metadata !12726, metadata !DIExpression()), !dbg !12727
  %4 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12728
  %pfi_output_select_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %4, i32 0, i32 32, !dbg !12729
  %5 = load i32, i32* %index, align 4, !dbg !12730
  %idxprom = zext i32 %5 to i64, !dbg !12728
  %arrayidx = getelementptr [6 x i16], [6 x i16]* %pfi_output_select_reg, i64 0, i64 %idxprom, !dbg !12728
  %6 = load i16, i16* %arrayidx, align 2, !dbg !12728
  store i16 %6, i16* %val, align 2, !dbg !12727
  %7 = load i32, i32* %source.addr, align 4, !dbg !12731
  %and = and i32 %7, 31, !dbg !12733
  %8 = load i32, i32* %source.addr, align 4, !dbg !12734
  %cmp = icmp ne i32 %and, %8, !dbg !12735
  br i1 %cmp, label %if.then, label %if.end, !dbg !12736

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !12737
  br label %return, !dbg !12737

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %chan.addr, align 4, !dbg !12738
  %rem = urem i32 %9, 3, !dbg !12738
  %mul = mul i32 %rem, 5, !dbg !12738
  %shl = shl i32 31, %mul, !dbg !12738
  %neg = xor i32 %shl, -1, !dbg !12739
  %10 = load i16, i16* %val, align 2, !dbg !12740
  %conv = zext i16 %10 to i32, !dbg !12740
  %and1 = and i32 %conv, %neg, !dbg !12740
  %conv2 = trunc i32 %and1 to i16, !dbg !12740
  store i16 %conv2, i16* %val, align 2, !dbg !12740
  %11 = load i32, i32* %source.addr, align 4, !dbg !12741
  %and3 = and i32 %11, 31, !dbg !12741
  %12 = load i32, i32* %chan.addr, align 4, !dbg !12741
  %rem4 = urem i32 %12, 3, !dbg !12741
  %mul5 = mul i32 %rem4, 5, !dbg !12741
  %shl6 = shl i32 %and3, %mul5, !dbg !12741
  %13 = load i16, i16* %val, align 2, !dbg !12742
  %conv7 = zext i16 %13 to i32, !dbg !12742
  %or = or i32 %conv7, %shl6, !dbg !12742
  %conv8 = trunc i32 %or to i16, !dbg !12742
  store i16 %conv8, i16* %val, align 2, !dbg !12742
  %14 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12743
  %15 = load i16, i16* %val, align 2, !dbg !12744
  %conv9 = zext i16 %15 to i32, !dbg !12744
  %16 = load i32, i32* %index, align 4, !dbg !12745
  %mul10 = mul i32 %16, 2, !dbg !12745
  %add = add i32 464, %mul10, !dbg !12745
  call void @ni_writew(%struct.comedi_device* %14, i32 %conv9, i32 %add) #9, !dbg !12746
  %17 = load i16, i16* %val, align 2, !dbg !12747
  %18 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12748
  %pfi_output_select_reg11 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %18, i32 0, i32 32, !dbg !12749
  %19 = load i32, i32* %index, align 4, !dbg !12750
  %idxprom12 = zext i32 %19 to i64, !dbg !12748
  %arrayidx13 = getelementptr [6 x i16], [6 x i16]* %pfi_output_select_reg11, i64 0, i64 %idxprom12, !dbg !12748
  store i16 %17, i16* %arrayidx13, align 2, !dbg !12751
  store i32 2, i32* %retval, align 4, !dbg !12752
  br label %return, !dbg !12752

return:                                           ; preds = %if.end, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !12753
  ret i32 %20, !dbg !12753
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_old_set_pfi_routing(%struct.comedi_device* %dev, i32 %chan, i32 %source) #2 !dbg !12754 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %chan.addr = alloca i32, align 4
  %source.addr = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !12755, metadata !DIExpression()), !dbg !12756
  store i32 %chan, i32* %chan.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chan.addr, metadata !12757, metadata !DIExpression()), !dbg !12758
  store i32 %source, i32* %source.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source.addr, metadata !12759, metadata !DIExpression()), !dbg !12760
  %0 = load i32, i32* %source.addr, align 4, !dbg !12761
  %1 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12763
  %2 = load i32, i32* %chan.addr, align 4, !dbg !12764
  %call = call i32 @ni_old_get_pfi_routing(%struct.comedi_device* %1, i32 %2) #9, !dbg !12765
  %cmp = icmp ne i32 %0, %call, !dbg !12766
  br i1 %cmp, label %if.then, label %if.end, !dbg !12767

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !12768
  br label %return, !dbg !12768

if.end:                                           ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !12769
  br label %return, !dbg !12769

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !12770
  ret i32 %3, !dbg !12770
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_rgout0_reg(i32 %reg, %struct.comedi_device* %dev) #2 !dbg !12771 {
entry:
  %reg.addr = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !12774, metadata !DIExpression()), !dbg !12775
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !12776, metadata !DIExpression()), !dbg !12777
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !12778, metadata !DIExpression()), !dbg !12779
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12780
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !12781
  %1 = load i8*, i8** %private, align 8, !dbg !12781
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !12780
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !12779
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12782
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 50, !dbg !12784
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !12784
  %bf.clear = and i16 %bf.load, 1, !dbg !12784
  %bf.cast = zext i16 %bf.clear to i32, !dbg !12784
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !12782
  br i1 %tobool, label %if.then, label %if.else, !dbg !12785

if.then:                                          ; preds = %entry
  %4 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12786
  %rtsi_trig_direction_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %4, i32 0, i32 29, !dbg !12788
  %5 = load i16, i16* %rtsi_trig_direction_reg, align 4, !dbg !12789
  %conv = zext i16 %5 to i64, !dbg !12789
  %and = and i64 %conv, -5, !dbg !12789
  %conv1 = trunc i64 %and to i16, !dbg !12789
  store i16 %conv1, i16* %rtsi_trig_direction_reg, align 4, !dbg !12789
  %6 = load i32, i32* %reg.addr, align 4, !dbg !12790
  %shl = shl i32 %6, 2, !dbg !12791
  %conv2 = sext i32 %shl to i64, !dbg !12792
  %and3 = and i64 %conv2, 4, !dbg !12793
  %7 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12794
  %rtsi_trig_direction_reg4 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %7, i32 0, i32 29, !dbg !12795
  %8 = load i16, i16* %rtsi_trig_direction_reg4, align 4, !dbg !12796
  %conv5 = zext i16 %8 to i64, !dbg !12796
  %or = or i64 %conv5, %and3, !dbg !12796
  %conv6 = trunc i64 %or to i16, !dbg !12796
  store i16 %conv6, i16* %rtsi_trig_direction_reg4, align 4, !dbg !12796
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12797
  %10 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12798
  %rtsi_trig_direction_reg7 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %10, i32 0, i32 29, !dbg !12799
  %11 = load i16, i16* %rtsi_trig_direction_reg7, align 4, !dbg !12799
  %conv8 = zext i16 %11 to i32, !dbg !12798
  call void @ni_stc_writew(%struct.comedi_device* %9, i32 %conv8, i32 58) #9, !dbg !12800
  br label %if.end, !dbg !12801

if.else:                                          ; preds = %entry
  %12 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12802
  %rtsi_trig_b_output_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %12, i32 0, i32 31, !dbg !12804
  %13 = load i16, i16* %rtsi_trig_b_output_reg, align 8, !dbg !12805
  %conv9 = zext i16 %13 to i64, !dbg !12805
  %and10 = and i64 %conv9, -32769, !dbg !12805
  %conv11 = trunc i64 %and10 to i16, !dbg !12805
  store i16 %conv11, i16* %rtsi_trig_b_output_reg, align 8, !dbg !12805
  %14 = load i32, i32* %reg.addr, align 4, !dbg !12806
  %shl12 = shl i32 %14, 15, !dbg !12807
  %conv13 = sext i32 %shl12 to i64, !dbg !12808
  %and14 = and i64 %conv13, 32768, !dbg !12809
  %15 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12810
  %rtsi_trig_b_output_reg15 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %15, i32 0, i32 31, !dbg !12811
  %16 = load i16, i16* %rtsi_trig_b_output_reg15, align 8, !dbg !12812
  %conv16 = zext i16 %16 to i64, !dbg !12812
  %or17 = or i64 %conv16, %and14, !dbg !12812
  %conv18 = trunc i64 %or17 to i16, !dbg !12812
  store i16 %conv18, i16* %rtsi_trig_b_output_reg15, align 8, !dbg !12812
  %17 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12813
  %18 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12814
  %rtsi_trig_b_output_reg19 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %18, i32 0, i32 31, !dbg !12815
  %19 = load i16, i16* %rtsi_trig_b_output_reg19, align 8, !dbg !12815
  %conv20 = zext i16 %19 to i32, !dbg !12814
  call void @ni_stc_writew(%struct.comedi_device* %17, i32 %conv20, i32 80) #9, !dbg !12816
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !12817
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_ith_rtsi_brd_reg(i32 %i, i32 %reg, %struct.comedi_device* %dev) #2 !dbg !12818 {
entry:
  %i.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %reg_i_sz = alloca i32, align 4
  %reg_i_mask = alloca i32, align 4
  %reg_i_shift = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !12821, metadata !DIExpression()), !dbg !12822
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !12823, metadata !DIExpression()), !dbg !12824
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !12825, metadata !DIExpression()), !dbg !12826
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !12827, metadata !DIExpression()), !dbg !12828
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12829
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !12830
  %1 = load i8*, i8** %private, align 8, !dbg !12830
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !12829
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !12828
  call void @llvm.dbg.declare(metadata i32* %reg_i_sz, metadata !12831, metadata !DIExpression()), !dbg !12832
  store i32 3, i32* %reg_i_sz, align 4, !dbg !12832
  call void @llvm.dbg.declare(metadata i32* %reg_i_mask, metadata !12833, metadata !DIExpression()), !dbg !12834
  call void @llvm.dbg.declare(metadata i32* %reg_i_shift, metadata !12835, metadata !DIExpression()), !dbg !12836
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12837
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 50, !dbg !12839
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !12839
  %bf.clear = and i16 %bf.load, 1, !dbg !12839
  %bf.cast = zext i16 %bf.clear to i32, !dbg !12839
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !12837
  br i1 %tobool, label %if.then, label %if.end, !dbg !12840

if.then:                                          ; preds = %entry
  store i32 4, i32* %reg_i_sz, align 4, !dbg !12841
  br label %if.end, !dbg !12842

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %reg_i_sz, align 4, !dbg !12843
  %shl = shl i32 -1, %4, !dbg !12844
  %neg = xor i32 %shl, -1, !dbg !12845
  store i32 %neg, i32* %reg_i_mask, align 4, !dbg !12846
  %5 = load i32, i32* %i.addr, align 4, !dbg !12847
  %6 = load i32, i32* %reg_i_sz, align 4, !dbg !12848
  %mul = mul i32 %5, %6, !dbg !12849
  store i32 %mul, i32* %reg_i_shift, align 4, !dbg !12850
  %7 = load i32, i32* %reg_i_mask, align 4, !dbg !12851
  %8 = load i32, i32* %reg_i_shift, align 4, !dbg !12852
  %shl1 = shl i32 %7, %8, !dbg !12853
  %neg2 = xor i32 %shl1, -1, !dbg !12854
  %9 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12855
  %rtsi_shared_mux_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %9, i32 0, i32 53, !dbg !12856
  %10 = load i16, i16* %rtsi_shared_mux_reg, align 4, !dbg !12857
  %conv = zext i16 %10 to i32, !dbg !12857
  %and = and i32 %conv, %neg2, !dbg !12857
  %conv3 = trunc i32 %and to i16, !dbg !12857
  store i16 %conv3, i16* %rtsi_shared_mux_reg, align 4, !dbg !12857
  %11 = load i32, i32* %reg.addr, align 4, !dbg !12858
  %12 = load i32, i32* %reg_i_mask, align 4, !dbg !12859
  %and4 = and i32 %11, %12, !dbg !12860
  %13 = load i32, i32* %reg_i_shift, align 4, !dbg !12861
  %shl5 = shl i32 %and4, %13, !dbg !12862
  %14 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12863
  %rtsi_shared_mux_reg6 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %14, i32 0, i32 53, !dbg !12864
  %15 = load i16, i16* %rtsi_shared_mux_reg6, align 4, !dbg !12865
  %conv7 = zext i16 %15 to i32, !dbg !12865
  %or = or i32 %conv7, %shl5, !dbg !12865
  %conv8 = trunc i32 %or to i16, !dbg !12865
  store i16 %conv8, i16* %rtsi_shared_mux_reg6, align 4, !dbg !12865
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12866
  %17 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12867
  %rtsi_shared_mux_reg9 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %17, i32 0, i32 53, !dbg !12868
  %18 = load i16, i16* %rtsi_shared_mux_reg9, align 4, !dbg !12868
  %conv10 = zext i16 %18 to i32, !dbg !12867
  call void @ni_stc_writew(%struct.comedi_device* %16, i32 %conv10, i32 81) #9, !dbg !12869
  ret void, !dbg !12870
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_valid_rtsi_output_source(%struct.comedi_device* %dev, i32 %chan, i32 %source) #2 !dbg !12871 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %chan.addr = alloca i32, align 4
  %source.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !12872, metadata !DIExpression()), !dbg !12873
  store i32 %chan, i32* %chan.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chan.addr, metadata !12874, metadata !DIExpression()), !dbg !12875
  store i32 %source, i32* %source.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source.addr, metadata !12876, metadata !DIExpression()), !dbg !12877
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !12878, metadata !DIExpression()), !dbg !12879
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12880
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !12881
  %1 = load i8*, i8** %private, align 8, !dbg !12881
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !12880
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !12879
  %3 = load i32, i32* %chan.addr, align 4, !dbg !12882
  %4 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12884
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %4, i32 0, i32 50, !dbg !12884
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !12884
  %bf.clear = and i16 %bf.load, 1, !dbg !12884
  %bf.cast = zext i16 %bf.clear to i32, !dbg !12884
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !12884
  %5 = zext i1 %tobool to i64, !dbg !12884
  %cond = select i1 %tobool, i32 8, i32 7, !dbg !12884
  %cmp = icmp uge i32 %3, %cond, !dbg !12885
  br i1 %cmp, label %if.then, label %if.end6, !dbg !12886

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %chan.addr, align 4, !dbg !12887
  %cmp1 = icmp eq i32 %6, 7, !dbg !12890
  br i1 %cmp1, label %if.then2, label %if.end5, !dbg !12891

if.then2:                                         ; preds = %if.then
  %7 = load i32, i32* %source.addr, align 4, !dbg !12892
  %cmp3 = icmp eq i32 %7, 12, !dbg !12895
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !12896

if.then4:                                         ; preds = %if.then2
  store i32 1, i32* %retval, align 4, !dbg !12897
  br label %return, !dbg !12897

if.end:                                           ; preds = %if.then2
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12898
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %8, i32 0, i32 4, !dbg !12898
  %9 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !12898
  %10 = load i32, i32* %chan.addr, align 4, !dbg !12898
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %9, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.ni_valid_rtsi_output_source, i64 0, i64 0), i32 %10, i32 7) #11, !dbg !12898
  store i32 0, i32* %retval, align 4, !dbg !12899
  br label %return, !dbg !12899

if.end5:                                          ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !12900
  br label %return, !dbg !12900

if.end6:                                          ; preds = %entry
  %11 = load i32, i32* %source.addr, align 4, !dbg !12901
  switch i32 %11, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
    i32 11, label %sw.bb
    i32 12, label %sw.bb7
  ], !dbg !12902

sw.bb:                                            ; preds = %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6
  store i32 1, i32* %retval, align 4, !dbg !12903
  br label %return, !dbg !12903

sw.bb7:                                           ; preds = %if.end6
  %12 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12905
  %is_m_series8 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %12, i32 0, i32 50, !dbg !12906
  %bf.load9 = load i16, i16* %is_m_series8, align 8, !dbg !12906
  %bf.clear10 = and i16 %bf.load9, 1, !dbg !12906
  %bf.cast11 = zext i16 %bf.clear10 to i32, !dbg !12906
  %tobool12 = icmp ne i32 %bf.cast11, 0, !dbg !12907
  %13 = zext i1 %tobool12 to i64, !dbg !12907
  %cond13 = select i1 %tobool12, i32 1, i32 0, !dbg !12907
  store i32 %cond13, i32* %retval, align 4, !dbg !12908
  br label %return, !dbg !12908

sw.default:                                       ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !12909
  br label %return, !dbg !12909

return:                                           ; preds = %sw.default, %sw.bb7, %sw.bb, %if.end5, %if.end, %if.then4
  %14 = load i32, i32* %retval, align 4, !dbg !12910
  ret i32 %14, !dbg !12910
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @decr_rgout0_src_use(i32 %src, %struct.comedi_device* %dev) #2 !dbg !12911 {
entry:
  %retval = alloca i32, align 4
  %src.addr = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %reg = alloca i8, align 1
  store i32 %src, i32* %src.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src.addr, metadata !12912, metadata !DIExpression()), !dbg !12913
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !12914, metadata !DIExpression()), !dbg !12915
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !12916, metadata !DIExpression()), !dbg !12917
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12918
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !12919
  %1 = load i8*, i8** %private, align 8, !dbg !12919
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !12918
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !12917
  call void @llvm.dbg.declare(metadata i8* %reg, metadata !12920, metadata !DIExpression()), !dbg !12921
  %3 = load i32, i32* %src.addr, align 4, !dbg !12922
  %and = and i32 %3, 65535, !dbg !12922
  %4 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12923
  %routing_tables = getelementptr inbounds %struct.ni_private, %struct.ni_private* %4, i32 0, i32 51, !dbg !12924
  %call = call signext i8 @ni_lookup_route_register(i32 %and, i32 32977, %struct.ni_route_tables* %routing_tables) #9, !dbg !12925
  store i8 %call, i8* %reg, align 1, !dbg !12921
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12926
  %rgout0_usage = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 54, !dbg !12928
  %6 = load i8, i8* %rgout0_usage, align 2, !dbg !12928
  %conv = zext i8 %6 to i32, !dbg !12926
  %cmp = icmp sgt i32 %conv, 0, !dbg !12929
  br i1 %cmp, label %land.lhs.true, label %if.end9, !dbg !12930

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12931
  %call2 = call i32 @get_rgout0_reg(%struct.comedi_device* %7) #9, !dbg !12932
  %8 = load i8, i8* %reg, align 1, !dbg !12933
  %conv3 = sext i8 %8 to i32, !dbg !12933
  %cmp4 = icmp eq i32 %call2, %conv3, !dbg !12934
  br i1 %cmp4, label %if.then, label %if.end9, !dbg !12935

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12936
  %rgout0_usage6 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %9, i32 0, i32 54, !dbg !12938
  %10 = load i8, i8* %rgout0_usage6, align 2, !dbg !12939
  %dec = add i8 %10, -1, !dbg !12939
  store i8 %dec, i8* %rgout0_usage6, align 2, !dbg !12939
  %11 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12940
  %rgout0_usage7 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %11, i32 0, i32 54, !dbg !12942
  %12 = load i8, i8* %rgout0_usage7, align 2, !dbg !12942
  %tobool = icmp ne i8 %12, 0, !dbg !12940
  br i1 %tobool, label %if.end, label %if.then8, !dbg !12943

if.then8:                                         ; preds = %if.then
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12944
  call void @set_rgout0_reg(i32 0, %struct.comedi_device* %13) #9, !dbg !12945
  br label %if.end, !dbg !12945

if.end:                                           ; preds = %if.then8, %if.then
  store i32 0, i32* %retval, align 4, !dbg !12946
  br label %return, !dbg !12946

if.end9:                                          ; preds = %land.lhs.true, %entry
  store i32 -22, i32* %retval, align 4, !dbg !12947
  br label %return, !dbg !12947

return:                                           ; preds = %if.end9, %if.end
  %14 = load i32, i32* %retval, align 4, !dbg !12948
  ret i32 %14, !dbg !12948
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @decr_rtsi_brd_src_use(i32 %src, i32 %rtsi_brd, %struct.comedi_device* %dev) #2 !dbg !12949 {
entry:
  %retval = alloca i32, align 4
  %src.addr = alloca i32, align 4
  %rtsi_brd.addr = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %reg = alloca i8, align 1
  %i = alloca i32, align 4
  store i32 %src, i32* %src.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src.addr, metadata !12952, metadata !DIExpression()), !dbg !12953
  store i32 %rtsi_brd, i32* %rtsi_brd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rtsi_brd.addr, metadata !12954, metadata !DIExpression()), !dbg !12955
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !12956, metadata !DIExpression()), !dbg !12957
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !12958, metadata !DIExpression()), !dbg !12959
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12960
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !12961
  %1 = load i8*, i8** %private, align 8, !dbg !12961
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !12960
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !12959
  call void @llvm.dbg.declare(metadata i8* %reg, metadata !12962, metadata !DIExpression()), !dbg !12963
  %3 = load i32, i32* %src.addr, align 4, !dbg !12964
  %and = and i32 %3, 65535, !dbg !12964
  %4 = load i32, i32* %rtsi_brd.addr, align 4, !dbg !12965
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12966
  %routing_tables = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 51, !dbg !12967
  %call = call signext i8 @ni_lookup_route_register(i32 %and, i32 %4, %struct.ni_route_tables* %routing_tables) #9, !dbg !12968
  store i8 %call, i8* %reg, align 1, !dbg !12963
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12969, metadata !DIExpression()), !dbg !12970
  %6 = load i32, i32* %rtsi_brd.addr, align 4, !dbg !12971
  %sub = sub i32 %6, 32840, !dbg !12972
  store i32 %sub, i32* %i, align 4, !dbg !12970
  %7 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12973
  %rtsi_shared_mux_usage = getelementptr inbounds %struct.ni_private, %struct.ni_private* %7, i32 0, i32 52, !dbg !12975
  %8 = load i32, i32* %i, align 4, !dbg !12976
  %idxprom = sext i32 %8 to i64, !dbg !12973
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %rtsi_shared_mux_usage, i64 0, i64 %idxprom, !dbg !12973
  %9 = load i8, i8* %arrayidx, align 1, !dbg !12973
  %conv = zext i8 %9 to i32, !dbg !12973
  %cmp = icmp sgt i32 %conv, 0, !dbg !12977
  br i1 %cmp, label %land.lhs.true, label %if.end13, !dbg !12978

land.lhs.true:                                    ; preds = %entry
  %10 = load i32, i32* %i, align 4, !dbg !12979
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12980
  %call2 = call i32 @get_ith_rtsi_brd_reg(i32 %10, %struct.comedi_device* %11) #9, !dbg !12981
  %12 = load i8, i8* %reg, align 1, !dbg !12982
  %conv3 = sext i8 %12 to i32, !dbg !12982
  %cmp4 = icmp eq i32 %call2, %conv3, !dbg !12983
  br i1 %cmp4, label %if.then, label %if.end13, !dbg !12984

if.then:                                          ; preds = %land.lhs.true
  %13 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12985
  %rtsi_shared_mux_usage6 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %13, i32 0, i32 52, !dbg !12987
  %14 = load i32, i32* %i, align 4, !dbg !12988
  %idxprom7 = sext i32 %14 to i64, !dbg !12985
  %arrayidx8 = getelementptr [4 x i8], [4 x i8]* %rtsi_shared_mux_usage6, i64 0, i64 %idxprom7, !dbg !12985
  %15 = load i8, i8* %arrayidx8, align 1, !dbg !12989
  %dec = add i8 %15, -1, !dbg !12989
  store i8 %dec, i8* %arrayidx8, align 1, !dbg !12989
  %16 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !12990
  %rtsi_shared_mux_usage9 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %16, i32 0, i32 52, !dbg !12992
  %17 = load i32, i32* %i, align 4, !dbg !12993
  %idxprom10 = sext i32 %17 to i64, !dbg !12990
  %arrayidx11 = getelementptr [4 x i8], [4 x i8]* %rtsi_shared_mux_usage9, i64 0, i64 %idxprom10, !dbg !12990
  %18 = load i8, i8* %arrayidx11, align 1, !dbg !12990
  %tobool = icmp ne i8 %18, 0, !dbg !12990
  br i1 %tobool, label %if.end, label %if.then12, !dbg !12994

if.then12:                                        ; preds = %if.then
  %19 = load i32, i32* %i, align 4, !dbg !12995
  %20 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12996
  call void @set_ith_rtsi_brd_reg(i32 %19, i32 0, %struct.comedi_device* %20) #9, !dbg !12997
  br label %if.end, !dbg !12997

if.end:                                           ; preds = %if.then12, %if.then
  store i32 0, i32* %retval, align 4, !dbg !12998
  br label %return, !dbg !12998

if.end13:                                         ; preds = %land.lhs.true, %entry
  store i32 -22, i32* %retval, align 4, !dbg !12999
  br label %return, !dbg !12999

return:                                           ; preds = %if.end13, %if.end
  %21 = load i32, i32* %retval, align 4, !dbg !13000
  ret i32 %21, !dbg !13000
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_disable_gout_routing(i32 %dest, %struct.comedi_device* %dev) #2 !dbg !13001 {
entry:
  %retval = alloca i32, align 4
  %dest.addr = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  store i32 %dest, i32* %dest.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest.addr, metadata !13002, metadata !DIExpression()), !dbg !13003
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !13004, metadata !DIExpression()), !dbg !13005
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !13006, metadata !DIExpression()), !dbg !13007
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13008
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !13009
  %1 = load i8*, i8** %private, align 8, !dbg !13009
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !13008
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !13007
  %3 = load i32, i32* %dest.addr, align 4, !dbg !13010
  switch i32 %3, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
  ], !dbg !13011

sw.bb:                                            ; preds = %entry
  %4 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13012
  %an_trig_etc_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %4, i32 0, i32 20, !dbg !13014
  %5 = load i16, i16* %an_trig_etc_reg, align 8, !dbg !13015
  %conv = zext i16 %5 to i64, !dbg !13015
  %and = and i64 %conv, -16385, !dbg !13015
  %conv1 = trunc i64 %and to i16, !dbg !13015
  store i16 %conv1, i16* %an_trig_etc_reg, align 8, !dbg !13015
  br label %sw.epilog, !dbg !13016

sw.bb2:                                           ; preds = %entry
  %6 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13017
  %an_trig_etc_reg3 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %6, i32 0, i32 20, !dbg !13018
  %7 = load i16, i16* %an_trig_etc_reg3, align 8, !dbg !13019
  %conv4 = zext i16 %7 to i64, !dbg !13019
  %and5 = and i64 %conv4, -32769, !dbg !13019
  %conv6 = trunc i64 %and5 to i16, !dbg !13019
  store i16 %conv6, i16* %an_trig_etc_reg3, align 8, !dbg !13019
  br label %sw.epilog, !dbg !13020

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !13021
  br label %return, !dbg !13021

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13022
  %9 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13023
  %an_trig_etc_reg7 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %9, i32 0, i32 20, !dbg !13024
  %10 = load i16, i16* %an_trig_etc_reg7, align 8, !dbg !13024
  %conv8 = zext i16 %10 to i32, !dbg !13023
  call void @ni_stc_writew(%struct.comedi_device* %8, i32 %conv8, i32 61) #9, !dbg !13025
  store i32 0, i32* %retval, align 4, !dbg !13026
  br label %return, !dbg !13026

return:                                           ; preds = %sw.epilog, %sw.default
  %11 = load i32, i32* %retval, align 4, !dbg !13027
  ret i32 %11, !dbg !13027
}

; Function Attrs: noredzone
declare dso_local i32 @ni_tio_unset_routing(%struct.ni_gpct_device*, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @ni_get_valid_routes(%struct.ni_route_tables*, i32, i32*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_load_channelgain_list(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, i32 %n_chan, i32* %list) #2 !dbg !13028 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %n_chan.addr = alloca i32, align 4
  %list.addr = alloca i32*, align 8
  %board = alloca %struct.ni_board_struct*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %offset = alloca i32, align 4
  %chan = alloca i32, align 4
  %range = alloca i32, align 4
  %aref = alloca i32, align 4
  %i = alloca i32, align 4
  %hi = alloca i32, align 4
  %lo = alloca i32, align 4
  %dither = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !13031, metadata !DIExpression()), !dbg !13032
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !13033, metadata !DIExpression()), !dbg !13034
  store i32 %n_chan, i32* %n_chan.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_chan.addr, metadata !13035, metadata !DIExpression()), !dbg !13036
  store i32* %list, i32** %list.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %list.addr, metadata !13037, metadata !DIExpression()), !dbg !13038
  call void @llvm.dbg.declare(metadata %struct.ni_board_struct** %board, metadata !13039, metadata !DIExpression()), !dbg !13040
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13041
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !13042
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !13042
  %2 = bitcast i8* %1 to %struct.ni_board_struct*, !dbg !13041
  store %struct.ni_board_struct* %2, %struct.ni_board_struct** %board, align 8, !dbg !13040
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !13043, metadata !DIExpression()), !dbg !13044
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13045
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !13046
  %4 = load i8*, i8** %private, align 8, !dbg !13046
  %5 = bitcast i8* %4 to %struct.ni_private*, !dbg !13045
  store %struct.ni_private* %5, %struct.ni_private** %devpriv, align 8, !dbg !13044
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !13047, metadata !DIExpression()), !dbg !13048
  %6 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !13049
  %maxdata = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %6, i32 0, i32 13, !dbg !13050
  %7 = load i32, i32* %maxdata, align 8, !dbg !13050
  %add = add i32 %7, 1, !dbg !13051
  %shr = lshr i32 %add, 1, !dbg !13052
  store i32 %shr, i32* %offset, align 4, !dbg !13048
  call void @llvm.dbg.declare(metadata i32* %chan, metadata !13053, metadata !DIExpression()), !dbg !13054
  call void @llvm.dbg.declare(metadata i32* %range, metadata !13055, metadata !DIExpression()), !dbg !13056
  call void @llvm.dbg.declare(metadata i32* %aref, metadata !13057, metadata !DIExpression()), !dbg !13058
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13059, metadata !DIExpression()), !dbg !13060
  call void @llvm.dbg.declare(metadata i32* %hi, metadata !13061, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.declare(metadata i32* %lo, metadata !13063, metadata !DIExpression()), !dbg !13064
  call void @llvm.dbg.declare(metadata i32* %dither, metadata !13065, metadata !DIExpression()), !dbg !13066
  %8 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13067
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %8, i32 0, i32 50, !dbg !13069
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !13069
  %bf.clear = and i16 %bf.load, 1, !dbg !13069
  %bf.cast = zext i16 %bf.clear to i32, !dbg !13069
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !13067
  br i1 %tobool, label %if.then, label %if.end, !dbg !13070

if.then:                                          ; preds = %entry
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13071
  %10 = load i32, i32* %n_chan.addr, align 4, !dbg !13073
  %11 = load i32*, i32** %list.addr, align 8, !dbg !13074
  call void @ni_m_series_load_channelgain_list(%struct.comedi_device* %9, i32 %10, i32* %11) #9, !dbg !13075
  br label %if.end188, !dbg !13076

if.end:                                           ; preds = %entry
  %12 = load i32, i32* %n_chan.addr, align 4, !dbg !13077
  %cmp = icmp eq i32 %12, 1, !dbg !13079
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !13080

land.lhs.true:                                    ; preds = %if.end
  %13 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13081
  %is_611x = getelementptr inbounds %struct.ni_private, %struct.ni_private* %13, i32 0, i32 50, !dbg !13082
  %bf.load1 = load i16, i16* %is_611x, align 8, !dbg !13082
  %bf.lshr = lshr i16 %bf.load1, 2, !dbg !13082
  %bf.clear2 = and i16 %bf.lshr, 1, !dbg !13082
  %bf.cast3 = zext i16 %bf.clear2 to i32, !dbg !13082
  %tobool4 = icmp ne i32 %bf.cast3, 0, !dbg !13081
  br i1 %tobool4, label %if.else, label %land.lhs.true5, !dbg !13083

land.lhs.true5:                                   ; preds = %land.lhs.true
  %14 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13084
  %is_6143 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %14, i32 0, i32 50, !dbg !13085
  %bf.load6 = load i16, i16* %is_6143, align 8, !dbg !13085
  %bf.lshr7 = lshr i16 %bf.load6, 3, !dbg !13085
  %bf.clear8 = and i16 %bf.lshr7, 1, !dbg !13085
  %bf.cast9 = zext i16 %bf.clear8 to i32, !dbg !13085
  %tobool10 = icmp ne i32 %bf.cast9, 0, !dbg !13084
  br i1 %tobool10, label %if.else, label %if.then11, !dbg !13086

if.then11:                                        ; preds = %land.lhs.true5
  %15 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13087
  %changain_state = getelementptr inbounds %struct.ni_private, %struct.ni_private* %15, i32 0, i32 8, !dbg !13090
  %16 = load i32, i32* %changain_state, align 8, !dbg !13090
  %tobool12 = icmp ne i32 %16, 0, !dbg !13087
  br i1 %tobool12, label %land.lhs.true13, label %if.end16, !dbg !13091

land.lhs.true13:                                  ; preds = %if.then11
  %17 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13092
  %changain_spec = getelementptr inbounds %struct.ni_private, %struct.ni_private* %17, i32 0, i32 9, !dbg !13093
  %18 = load i32, i32* %changain_spec, align 4, !dbg !13093
  %19 = load i32*, i32** %list.addr, align 8, !dbg !13094
  %arrayidx = getelementptr i32, i32* %19, i64 0, !dbg !13094
  %20 = load i32, i32* %arrayidx, align 4, !dbg !13094
  %cmp14 = icmp eq i32 %18, %20, !dbg !13095
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !13096

if.then15:                                        ; preds = %land.lhs.true13
  br label %if.end188, !dbg !13097

if.end16:                                         ; preds = %land.lhs.true13, %if.then11
  %21 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13099
  %changain_state17 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %21, i32 0, i32 8, !dbg !13100
  store i32 1, i32* %changain_state17, align 8, !dbg !13101
  %22 = load i32*, i32** %list.addr, align 8, !dbg !13102
  %arrayidx18 = getelementptr i32, i32* %22, i64 0, !dbg !13102
  %23 = load i32, i32* %arrayidx18, align 4, !dbg !13102
  %24 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13103
  %changain_spec19 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %24, i32 0, i32 9, !dbg !13104
  store i32 %23, i32* %changain_spec19, align 4, !dbg !13105
  br label %if.end21, !dbg !13106

if.else:                                          ; preds = %land.lhs.true5, %land.lhs.true, %if.end
  %25 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13107
  %changain_state20 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %25, i32 0, i32 8, !dbg !13109
  store i32 0, i32* %changain_state20, align 8, !dbg !13110
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.end16
  %26 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13111
  call void @ni_stc_writew(%struct.comedi_device* %26, i32 1, i32 82) #9, !dbg !13112
  %27 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13113
  %is_614322 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %27, i32 0, i32 50, !dbg !13115
  %bf.load23 = load i16, i16* %is_614322, align 8, !dbg !13115
  %bf.lshr24 = lshr i16 %bf.load23, 3, !dbg !13115
  %bf.clear25 = and i16 %bf.lshr24, 1, !dbg !13115
  %bf.cast26 = zext i16 %bf.clear25 to i32, !dbg !13115
  %tobool27 = icmp ne i32 %bf.cast26, 0, !dbg !13113
  br i1 %tobool27, label %if.then28, label %if.end54, !dbg !13116

if.then28:                                        ; preds = %if.end21
  %28 = load i32*, i32** %list.addr, align 8, !dbg !13117
  %arrayidx29 = getelementptr i32, i32* %28, i64 0, !dbg !13117
  %29 = load i32, i32* %arrayidx29, align 4, !dbg !13117
  %and = and i32 %29, 134217728, !dbg !13120
  %tobool30 = icmp ne i32 %and, 0, !dbg !13120
  br i1 %tobool30, label %land.lhs.true31, label %if.else37, !dbg !13121

land.lhs.true31:                                  ; preds = %if.then28
  %30 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13122
  %ai_calib_source_enabled = getelementptr inbounds %struct.ni_private, %struct.ni_private* %30, i32 0, i32 4, !dbg !13123
  %31 = load i32, i32* %ai_calib_source_enabled, align 4, !dbg !13123
  %tobool32 = icmp ne i32 %31, 0, !dbg !13122
  br i1 %tobool32, label %if.else37, label %if.then33, !dbg !13124

if.then33:                                        ; preds = %land.lhs.true31
  %32 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13125
  %33 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13127
  %ai_calib_source = getelementptr inbounds %struct.ni_private, %struct.ni_private* %33, i32 0, i32 3, !dbg !13128
  %34 = load i32, i32* %ai_calib_source, align 8, !dbg !13128
  %conv = zext i32 %34 to i64, !dbg !13127
  %or = or i64 %conv, 32768, !dbg !13129
  %conv34 = trunc i64 %or to i32, !dbg !13127
  call void @ni_writew(%struct.comedi_device* %32, i32 %conv34, i32 66) #9, !dbg !13130
  %35 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13131
  %36 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13132
  %ai_calib_source35 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %36, i32 0, i32 3, !dbg !13133
  %37 = load i32, i32* %ai_calib_source35, align 8, !dbg !13133
  call void @ni_writew(%struct.comedi_device* %35, i32 %37, i32 66) #9, !dbg !13134
  %38 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13135
  %ai_calib_source_enabled36 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %38, i32 0, i32 4, !dbg !13136
  store i32 1, i32* %ai_calib_source_enabled36, align 4, !dbg !13137
  %call = call i64 @msleep_interruptible(i32 100) #9, !dbg !13138
  br label %if.end53, !dbg !13139

if.else37:                                        ; preds = %land.lhs.true31, %if.then28
  %39 = load i32*, i32** %list.addr, align 8, !dbg !13140
  %arrayidx38 = getelementptr i32, i32* %39, i64 0, !dbg !13140
  %40 = load i32, i32* %arrayidx38, align 4, !dbg !13140
  %and39 = and i32 %40, 134217728, !dbg !13142
  %tobool40 = icmp ne i32 %and39, 0, !dbg !13142
  br i1 %tobool40, label %if.end52, label %land.lhs.true41, !dbg !13143

land.lhs.true41:                                  ; preds = %if.else37
  %41 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13144
  %ai_calib_source_enabled42 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %41, i32 0, i32 4, !dbg !13145
  %42 = load i32, i32* %ai_calib_source_enabled42, align 4, !dbg !13145
  %tobool43 = icmp ne i32 %42, 0, !dbg !13144
  br i1 %tobool43, label %if.then44, label %if.end52, !dbg !13146

if.then44:                                        ; preds = %land.lhs.true41
  %43 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13147
  %44 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13149
  %ai_calib_source45 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %44, i32 0, i32 3, !dbg !13150
  %45 = load i32, i32* %ai_calib_source45, align 8, !dbg !13150
  %conv46 = zext i32 %45 to i64, !dbg !13149
  %or47 = or i64 %conv46, 16384, !dbg !13151
  %conv48 = trunc i64 %or47 to i32, !dbg !13149
  call void @ni_writew(%struct.comedi_device* %43, i32 %conv48, i32 66) #9, !dbg !13152
  %46 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13153
  %47 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13154
  %ai_calib_source49 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %47, i32 0, i32 3, !dbg !13155
  %48 = load i32, i32* %ai_calib_source49, align 8, !dbg !13155
  call void @ni_writew(%struct.comedi_device* %46, i32 %48, i32 66) #9, !dbg !13156
  %49 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13157
  %ai_calib_source_enabled50 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %49, i32 0, i32 4, !dbg !13158
  store i32 0, i32* %ai_calib_source_enabled50, align 4, !dbg !13159
  %call51 = call i64 @msleep_interruptible(i32 100) #9, !dbg !13160
  br label %if.end52, !dbg !13161

if.end52:                                         ; preds = %if.then44, %land.lhs.true41, %if.else37
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then33
  br label %if.end54, !dbg !13162

if.end54:                                         ; preds = %if.end53, %if.end21
  store i32 0, i32* %i, align 4, !dbg !13163
  br label %for.cond, !dbg !13165

for.cond:                                         ; preds = %for.inc, %if.end54
  %50 = load i32, i32* %i, align 4, !dbg !13166
  %51 = load i32, i32* %n_chan.addr, align 4, !dbg !13168
  %cmp55 = icmp ult i32 %50, %51, !dbg !13169
  br i1 %cmp55, label %for.body, label %for.end, !dbg !13170

for.body:                                         ; preds = %for.cond
  %52 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13171
  %is_614357 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %52, i32 0, i32 50, !dbg !13174
  %bf.load58 = load i16, i16* %is_614357, align 8, !dbg !13174
  %bf.lshr59 = lshr i16 %bf.load58, 3, !dbg !13174
  %bf.clear60 = and i16 %bf.lshr59, 1, !dbg !13174
  %bf.cast61 = zext i16 %bf.clear60 to i32, !dbg !13174
  %tobool62 = icmp ne i32 %bf.cast61, 0, !dbg !13171
  br i1 %tobool62, label %if.else69, label %land.lhs.true63, !dbg !13175

land.lhs.true63:                                  ; preds = %for.body
  %53 = load i32*, i32** %list.addr, align 8, !dbg !13176
  %54 = load i32, i32* %i, align 4, !dbg !13177
  %idxprom = zext i32 %54 to i64, !dbg !13176
  %arrayidx64 = getelementptr i32, i32* %53, i64 %idxprom, !dbg !13176
  %55 = load i32, i32* %arrayidx64, align 4, !dbg !13176
  %and65 = and i32 %55, 134217728, !dbg !13178
  %tobool66 = icmp ne i32 %and65, 0, !dbg !13178
  br i1 %tobool66, label %if.then67, label %if.else69, !dbg !13179

if.then67:                                        ; preds = %land.lhs.true63
  %56 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13180
  %ai_calib_source68 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %56, i32 0, i32 3, !dbg !13181
  %57 = load i32, i32* %ai_calib_source68, align 8, !dbg !13181
  store i32 %57, i32* %chan, align 4, !dbg !13182
  br label %if.end73, !dbg !13183

if.else69:                                        ; preds = %land.lhs.true63, %for.body
  %58 = load i32*, i32** %list.addr, align 8, !dbg !13184
  %59 = load i32, i32* %i, align 4, !dbg !13184
  %idxprom70 = zext i32 %59 to i64, !dbg !13184
  %arrayidx71 = getelementptr i32, i32* %58, i64 %idxprom70, !dbg !13184
  %60 = load i32, i32* %arrayidx71, align 4, !dbg !13184
  %and72 = and i32 %60, 65535, !dbg !13184
  store i32 %and72, i32* %chan, align 4, !dbg !13185
  br label %if.end73

if.end73:                                         ; preds = %if.else69, %if.then67
  %61 = load i32*, i32** %list.addr, align 8, !dbg !13186
  %62 = load i32, i32* %i, align 4, !dbg !13186
  %idxprom74 = zext i32 %62 to i64, !dbg !13186
  %arrayidx75 = getelementptr i32, i32* %61, i64 %idxprom74, !dbg !13186
  %63 = load i32, i32* %arrayidx75, align 4, !dbg !13186
  %shr76 = lshr i32 %63, 24, !dbg !13186
  %and77 = and i32 %shr76, 3, !dbg !13186
  store i32 %and77, i32* %aref, align 4, !dbg !13187
  %64 = load i32*, i32** %list.addr, align 8, !dbg !13188
  %65 = load i32, i32* %i, align 4, !dbg !13188
  %idxprom78 = zext i32 %65 to i64, !dbg !13188
  %arrayidx79 = getelementptr i32, i32* %64, i64 %idxprom78, !dbg !13188
  %66 = load i32, i32* %arrayidx79, align 4, !dbg !13188
  %shr80 = lshr i32 %66, 16, !dbg !13188
  %and81 = and i32 %shr80, 255, !dbg !13188
  store i32 %and81, i32* %range, align 4, !dbg !13189
  %67 = load i32*, i32** %list.addr, align 8, !dbg !13190
  %68 = load i32, i32* %i, align 4, !dbg !13191
  %idxprom82 = zext i32 %68 to i64, !dbg !13190
  %arrayidx83 = getelementptr i32, i32* %67, i64 %idxprom82, !dbg !13190
  %69 = load i32, i32* %arrayidx83, align 4, !dbg !13190
  %and84 = and i32 %69, 67108864, !dbg !13192
  %cmp85 = icmp ne i32 %and84, 0, !dbg !13193
  %conv86 = zext i1 %cmp85 to i32, !dbg !13193
  store i32 %conv86, i32* %dither, align 4, !dbg !13194
  %70 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !13195
  %gainlkup = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %70, i32 0, i32 8, !dbg !13196
  %71 = load i32, i32* %gainlkup, align 8, !dbg !13196
  %idxprom87 = sext i32 %71 to i64, !dbg !13197
  %arrayidx88 = getelementptr [8 x [16 x i16]], [8 x [16 x i16]]* bitcast (<{ [16 x i16], <{ [8 x i16], [8 x i16] }>, [16 x i16], <{ i16, i16, i16, i16, [12 x i16] }>, <{ [8 x i16], [8 x i16] }>, <{ i16, i16, i16, i16, [12 x i16] }>, <{ i16, i16, i16, i16, i16, i16, i16, [9 x i16] }>, [16 x i16] }>* @ni_gainlkup to [8 x [16 x i16]]*), i64 0, i64 %idxprom87, !dbg !13197
  %72 = load i32, i32* %range, align 4, !dbg !13198
  %idxprom89 = zext i32 %72 to i64, !dbg !13197
  %arrayidx90 = getelementptr [16 x i16], [16 x i16]* %arrayidx88, i64 0, i64 %idxprom89, !dbg !13197
  %73 = load i16, i16* %arrayidx90, align 2, !dbg !13197
  %conv91 = sext i16 %73 to i32, !dbg !13197
  store i32 %conv91, i32* %range, align 4, !dbg !13199
  %74 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13200
  %is_611x92 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %74, i32 0, i32 50, !dbg !13202
  %bf.load93 = load i16, i16* %is_611x92, align 8, !dbg !13202
  %bf.lshr94 = lshr i16 %bf.load93, 2, !dbg !13202
  %bf.clear95 = and i16 %bf.lshr94, 1, !dbg !13202
  %bf.cast96 = zext i16 %bf.clear95 to i32, !dbg !13202
  %tobool97 = icmp ne i32 %bf.cast96, 0, !dbg !13200
  br i1 %tobool97, label %if.then98, label %if.else101, !dbg !13203

if.then98:                                        ; preds = %if.end73
  %75 = load i32, i32* %offset, align 4, !dbg !13204
  %76 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13205
  %ai_offset = getelementptr inbounds %struct.ni_private, %struct.ni_private* %76, i32 0, i32 21, !dbg !13206
  %77 = load i32, i32* %i, align 4, !dbg !13207
  %idxprom99 = zext i32 %77 to i64, !dbg !13205
  %arrayidx100 = getelementptr [512 x i32], [512 x i32]* %ai_offset, i64 0, i64 %idxprom99, !dbg !13205
  store i32 %75, i32* %arrayidx100, align 4, !dbg !13208
  br label %if.end107, !dbg !13205

if.else101:                                       ; preds = %if.end73
  %78 = load i32, i32* %range, align 4, !dbg !13209
  %and102 = and i32 %78, 256, !dbg !13210
  %tobool103 = icmp ne i32 %and102, 0, !dbg !13210
  br i1 %tobool103, label %cond.true, label %cond.false, !dbg !13211

cond.true:                                        ; preds = %if.else101
  br label %cond.end, !dbg !13211

cond.false:                                       ; preds = %if.else101
  %79 = load i32, i32* %offset, align 4, !dbg !13212
  br label %cond.end, !dbg !13211

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %79, %cond.false ], !dbg !13211
  %80 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13213
  %ai_offset104 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %80, i32 0, i32 21, !dbg !13214
  %81 = load i32, i32* %i, align 4, !dbg !13215
  %idxprom105 = zext i32 %81 to i64, !dbg !13213
  %arrayidx106 = getelementptr [512 x i32], [512 x i32]* %ai_offset104, i64 0, i64 %idxprom105, !dbg !13213
  store i32 %cond, i32* %arrayidx106, align 4, !dbg !13216
  br label %if.end107

if.end107:                                        ; preds = %cond.end, %if.then98
  store i32 0, i32* %hi, align 4, !dbg !13217
  %82 = load i32*, i32** %list.addr, align 8, !dbg !13218
  %83 = load i32, i32* %i, align 4, !dbg !13220
  %idxprom108 = zext i32 %83 to i64, !dbg !13218
  %arrayidx109 = getelementptr i32, i32* %82, i64 %idxprom108, !dbg !13218
  %84 = load i32, i32* %arrayidx109, align 4, !dbg !13218
  %and110 = and i32 %84, 134217728, !dbg !13221
  %tobool111 = icmp ne i32 %and110, 0, !dbg !13221
  br i1 %tobool111, label %if.then112, label %if.else125, !dbg !13222

if.then112:                                       ; preds = %if.end107
  %85 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13223
  %is_611x113 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %85, i32 0, i32 50, !dbg !13226
  %bf.load114 = load i16, i16* %is_611x113, align 8, !dbg !13226
  %bf.lshr115 = lshr i16 %bf.load114, 2, !dbg !13226
  %bf.clear116 = and i16 %bf.lshr115, 1, !dbg !13226
  %bf.cast117 = zext i16 %bf.clear116 to i32, !dbg !13226
  %tobool118 = icmp ne i32 %bf.cast117, 0, !dbg !13223
  br i1 %tobool118, label %if.then119, label %if.end124, !dbg !13227

if.then119:                                       ; preds = %if.then112
  %86 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13228
  %87 = load i32*, i32** %list.addr, align 8, !dbg !13229
  %88 = load i32, i32* %i, align 4, !dbg !13229
  %idxprom120 = zext i32 %88 to i64, !dbg !13229
  %arrayidx121 = getelementptr i32, i32* %87, i64 %idxprom120, !dbg !13229
  %89 = load i32, i32* %arrayidx121, align 4, !dbg !13229
  %and122 = and i32 %89, 65535, !dbg !13229
  %and123 = and i32 %and122, 3, !dbg !13230
  call void @ni_writew(%struct.comedi_device* %86, i32 %and123, i32 26) #9, !dbg !13231
  br label %if.end124, !dbg !13231

if.end124:                                        ; preds = %if.then119, %if.then112
  br label %if.end149, !dbg !13232

if.else125:                                       ; preds = %if.end107
  %90 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13233
  %is_611x126 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %90, i32 0, i32 50, !dbg !13236
  %bf.load127 = load i16, i16* %is_611x126, align 8, !dbg !13236
  %bf.lshr128 = lshr i16 %bf.load127, 2, !dbg !13236
  %bf.clear129 = and i16 %bf.lshr128, 1, !dbg !13236
  %bf.cast130 = zext i16 %bf.clear129 to i32, !dbg !13236
  %tobool131 = icmp ne i32 %bf.cast130, 0, !dbg !13233
  br i1 %tobool131, label %if.then132, label %if.else133, !dbg !13237

if.then132:                                       ; preds = %if.else125
  store i32 2, i32* %aref, align 4, !dbg !13238
  br label %if.end142, !dbg !13239

if.else133:                                       ; preds = %if.else125
  %91 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13240
  %is_6143134 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %91, i32 0, i32 50, !dbg !13242
  %bf.load135 = load i16, i16* %is_6143134, align 8, !dbg !13242
  %bf.lshr136 = lshr i16 %bf.load135, 3, !dbg !13242
  %bf.clear137 = and i16 %bf.lshr136, 1, !dbg !13242
  %bf.cast138 = zext i16 %bf.clear137 to i32, !dbg !13242
  %tobool139 = icmp ne i32 %bf.cast138, 0, !dbg !13240
  br i1 %tobool139, label %if.then140, label %if.end141, !dbg !13243

if.then140:                                       ; preds = %if.else133
  store i32 3, i32* %aref, align 4, !dbg !13244
  br label %if.end141, !dbg !13245

if.end141:                                        ; preds = %if.then140, %if.else133
  br label %if.end142

if.end142:                                        ; preds = %if.end141, %if.then132
  %92 = load i32, i32* %aref, align 4, !dbg !13246
  switch i32 %92, label %sw.epilog [
    i32 2, label %sw.bb
    i32 1, label %sw.bb144
    i32 0, label %sw.bb146
    i32 3, label %sw.bb148
  ], !dbg !13247

sw.bb:                                            ; preds = %if.end142
  %93 = load i32, i32* %hi, align 4, !dbg !13248
  %or143 = or i32 %93, 4096, !dbg !13248
  store i32 %or143, i32* %hi, align 4, !dbg !13248
  br label %sw.epilog, !dbg !13250

sw.bb144:                                         ; preds = %if.end142
  %94 = load i32, i32* %hi, align 4, !dbg !13251
  %or145 = or i32 %94, 8192, !dbg !13251
  store i32 %or145, i32* %hi, align 4, !dbg !13251
  br label %sw.epilog, !dbg !13252

sw.bb146:                                         ; preds = %if.end142
  %95 = load i32, i32* %hi, align 4, !dbg !13253
  %or147 = or i32 %95, 12288, !dbg !13253
  store i32 %or147, i32* %hi, align 4, !dbg !13253
  br label %sw.epilog, !dbg !13254

sw.bb148:                                         ; preds = %if.end142
  br label %sw.epilog, !dbg !13255

sw.epilog:                                        ; preds = %if.end142, %sw.bb148, %sw.bb146, %sw.bb144, %sw.bb
  br label %if.end149

if.end149:                                        ; preds = %sw.epilog, %if.end124
  %96 = load i32, i32* %chan, align 4, !dbg !13256
  %and150 = and i32 %96, 63, !dbg !13256
  %shl = shl i32 %and150, 0, !dbg !13256
  %97 = load i32, i32* %hi, align 4, !dbg !13257
  %or151 = or i32 %97, %shl, !dbg !13257
  store i32 %or151, i32* %hi, align 4, !dbg !13257
  %98 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13258
  %99 = load i32, i32* %hi, align 4, !dbg !13259
  call void @ni_writew(%struct.comedi_device* %98, i32 %99, i32 18) #9, !dbg !13260
  %100 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13261
  %is_6143152 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %100, i32 0, i32 50, !dbg !13263
  %bf.load153 = load i16, i16* %is_6143152, align 8, !dbg !13263
  %bf.lshr154 = lshr i16 %bf.load153, 3, !dbg !13263
  %bf.clear155 = and i16 %bf.lshr154, 1, !dbg !13263
  %bf.cast156 = zext i16 %bf.clear155 to i32, !dbg !13263
  %tobool157 = icmp ne i32 %bf.cast156, 0, !dbg !13261
  br i1 %tobool157, label %if.end173, label %if.then158, !dbg !13264

if.then158:                                       ; preds = %if.end149
  %101 = load i32, i32* %range, align 4, !dbg !13265
  %shl159 = shl i32 %101, 0, !dbg !13265
  store i32 %shl159, i32* %lo, align 4, !dbg !13267
  %102 = load i32, i32* %i, align 4, !dbg !13268
  %103 = load i32, i32* %n_chan.addr, align 4, !dbg !13270
  %sub = sub i32 %103, 1, !dbg !13271
  %cmp160 = icmp eq i32 %102, %sub, !dbg !13272
  br i1 %cmp160, label %if.then162, label %if.end166, !dbg !13273

if.then162:                                       ; preds = %if.then158
  %104 = load i32, i32* %lo, align 4, !dbg !13274
  %conv163 = zext i32 %104 to i64, !dbg !13274
  %or164 = or i64 %conv163, 32768, !dbg !13274
  %conv165 = trunc i64 %or164 to i32, !dbg !13274
  store i32 %conv165, i32* %lo, align 4, !dbg !13274
  br label %if.end166, !dbg !13275

if.end166:                                        ; preds = %if.then162, %if.then158
  %105 = load i32, i32* %dither, align 4, !dbg !13276
  %tobool167 = icmp ne i32 %105, 0, !dbg !13276
  br i1 %tobool167, label %if.then168, label %if.end172, !dbg !13278

if.then168:                                       ; preds = %if.end166
  %106 = load i32, i32* %lo, align 4, !dbg !13279
  %conv169 = zext i32 %106 to i64, !dbg !13279
  %or170 = or i64 %conv169, 512, !dbg !13279
  %conv171 = trunc i64 %or170 to i32, !dbg !13279
  store i32 %conv171, i32* %lo, align 4, !dbg !13279
  br label %if.end172, !dbg !13280

if.end172:                                        ; preds = %if.then168, %if.end166
  %107 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13281
  %108 = load i32, i32* %lo, align 4, !dbg !13282
  call void @ni_writew(%struct.comedi_device* %107, i32 %108, i32 16) #9, !dbg !13283
  br label %if.end173, !dbg !13284

if.end173:                                        ; preds = %if.end172, %if.end149
  br label %for.inc, !dbg !13285

for.inc:                                          ; preds = %if.end173
  %109 = load i32, i32* %i, align 4, !dbg !13286
  %inc = add i32 %109, 1, !dbg !13286
  store i32 %inc, i32* %i, align 4, !dbg !13286
  br label %for.cond, !dbg !13287, !llvm.loop !13288

for.end:                                          ; preds = %for.cond
  %110 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13290
  %is_611x174 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %110, i32 0, i32 50, !dbg !13292
  %bf.load175 = load i16, i16* %is_611x174, align 8, !dbg !13292
  %bf.lshr176 = lshr i16 %bf.load175, 2, !dbg !13292
  %bf.clear177 = and i16 %bf.lshr176, 1, !dbg !13292
  %bf.cast178 = zext i16 %bf.clear177 to i32, !dbg !13292
  %tobool179 = icmp ne i32 %bf.cast178, 0, !dbg !13290
  br i1 %tobool179, label %if.end188, label %land.lhs.true180, !dbg !13293

land.lhs.true180:                                 ; preds = %for.end
  %111 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13294
  %is_6143181 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %111, i32 0, i32 50, !dbg !13295
  %bf.load182 = load i16, i16* %is_6143181, align 8, !dbg !13295
  %bf.lshr183 = lshr i16 %bf.load182, 3, !dbg !13295
  %bf.clear184 = and i16 %bf.lshr183, 1, !dbg !13295
  %bf.cast185 = zext i16 %bf.clear184 to i32, !dbg !13295
  %tobool186 = icmp ne i32 %bf.cast185, 0, !dbg !13294
  br i1 %tobool186, label %if.end188, label %if.then187, !dbg !13296

if.then187:                                       ; preds = %land.lhs.true180
  %112 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13297
  call void @ni_prime_channelgain_list(%struct.comedi_device* %112) #9, !dbg !13298
  br label %if.end188, !dbg !13298

if.end188:                                        ; preds = %if.then, %if.then15, %if.then187, %land.lhs.true180, %for.end
  ret void, !dbg !13299
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_clear_ai_fifo(%struct.comedi_device* %dev) #2 !dbg !4385 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %i = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !13300, metadata !DIExpression()), !dbg !13301
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !13302, metadata !DIExpression()), !dbg !13303
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13304
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !13305
  %1 = load i8*, i8** %private, align 8, !dbg !13305
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !13304
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !13303
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13306, metadata !DIExpression()), !dbg !13307
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13308
  %is_6143 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 50, !dbg !13310
  %bf.load = load i16, i16* %is_6143, align 8, !dbg !13310
  %bf.lshr = lshr i16 %bf.load, 3, !dbg !13310
  %bf.clear = and i16 %bf.lshr, 1, !dbg !13310
  %bf.cast = zext i16 %bf.clear to i32, !dbg !13310
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !13308
  br i1 %tobool, label %if.then, label %if.else, !dbg !13311

if.then:                                          ; preds = %entry
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13312
  call void @ni_writel(%struct.comedi_device* %4, i32 16, i32 136) #9, !dbg !13314
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13315
  call void @ni_writel(%struct.comedi_device* %5, i32 0, i32 136) #9, !dbg !13316
  store i32 0, i32* %i, align 4, !dbg !13317
  br label %for.cond, !dbg !13319

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i32, i32* %i, align 4, !dbg !13320
  %cmp = icmp slt i32 %6, 10000, !dbg !13322
  br i1 %cmp, label %for.body, label %for.end, !dbg !13323

for.body:                                         ; preds = %for.cond
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13324
  %call = call i32 @ni_readl(%struct.comedi_device* %7, i32 136) #9, !dbg !13327
  %and = and i32 %call, 16, !dbg !13328
  %tobool1 = icmp ne i32 %and, 0, !dbg !13328
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !13329

if.then2:                                         ; preds = %for.body
  br label %for.end, !dbg !13330

if.end:                                           ; preds = %for.body
  call void @__const_udelay(i64 4295) #9, !dbg !13331
  br label %for.inc, !dbg !13336

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !13337
  %inc = add i32 %8, 1, !dbg !13337
  store i32 %inc, i32* %i, align 4, !dbg !13337
  br label %for.cond, !dbg !13338, !llvm.loop !13339

for.end:                                          ; preds = %if.then2, %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !13341
  %cmp3 = icmp eq i32 %9, 10000, !dbg !13343
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !13344

if.then4:                                         ; preds = %for.end
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13345
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %10, i32 0, i32 4, !dbg !13345
  %11 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !13345
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %11, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.94, i64 0, i64 0)) #11, !dbg !13345
  br label %if.end5, !dbg !13345

if.end5:                                          ; preds = %if.then4, %for.end
  br label %if.end13, !dbg !13346

if.else:                                          ; preds = %entry
  %12 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13347
  call void @ni_stc_writew(%struct.comedi_device* %12, i32 1, i32 83) #9, !dbg !13349
  %13 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13350
  %is_625x = getelementptr inbounds %struct.ni_private, %struct.ni_private* %13, i32 0, i32 50, !dbg !13352
  %bf.load6 = load i16, i16* %is_625x, align 8, !dbg !13352
  %bf.lshr7 = lshr i16 %bf.load6, 5, !dbg !13352
  %bf.clear8 = and i16 %bf.lshr7, 1, !dbg !13352
  %bf.cast9 = zext i16 %bf.clear8 to i32, !dbg !13352
  %tobool10 = icmp ne i32 %bf.cast9, 0, !dbg !13350
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !13353

if.then11:                                        ; preds = %if.else
  %14 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13354
  call void @ni_writeb(%struct.comedi_device* %14, i32 0, i32 100) #9, !dbg !13356
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13357
  call void @ni_writeb(%struct.comedi_device* %15, i32 1, i32 100) #9, !dbg !13358
  br label %if.end12, !dbg !13359

if.end12:                                         ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end5
  ret void, !dbg !13360
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_m_series_load_channelgain_list(%struct.comedi_device* %dev, i32 %n_chan, i32* %list) #2 !dbg !13361 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %n_chan.addr = alloca i32, align 4
  %list.addr = alloca i32*, align 8
  %board = alloca %struct.ni_board_struct*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %chan = alloca i32, align 4
  %range = alloca i32, align 4
  %aref = alloca i32, align 4
  %i = alloca i32, align 4
  %dither = alloca i32, align 4
  %range_code = alloca i32, align 4
  %bypass_bits = alloca i32, align 4
  %config_bits = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !13364, metadata !DIExpression()), !dbg !13365
  store i32 %n_chan, i32* %n_chan.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_chan.addr, metadata !13366, metadata !DIExpression()), !dbg !13367
  store i32* %list, i32** %list.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %list.addr, metadata !13368, metadata !DIExpression()), !dbg !13369
  call void @llvm.dbg.declare(metadata %struct.ni_board_struct** %board, metadata !13370, metadata !DIExpression()), !dbg !13371
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13372
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !13373
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !13373
  %2 = bitcast i8* %1 to %struct.ni_board_struct*, !dbg !13372
  store %struct.ni_board_struct* %2, %struct.ni_board_struct** %board, align 8, !dbg !13371
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !13374, metadata !DIExpression()), !dbg !13375
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13376
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !13377
  %4 = load i8*, i8** %private, align 8, !dbg !13377
  %5 = bitcast i8* %4 to %struct.ni_private*, !dbg !13376
  store %struct.ni_private* %5, %struct.ni_private** %devpriv, align 8, !dbg !13375
  call void @llvm.dbg.declare(metadata i32* %chan, metadata !13378, metadata !DIExpression()), !dbg !13379
  call void @llvm.dbg.declare(metadata i32* %range, metadata !13380, metadata !DIExpression()), !dbg !13381
  call void @llvm.dbg.declare(metadata i32* %aref, metadata !13382, metadata !DIExpression()), !dbg !13383
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13384, metadata !DIExpression()), !dbg !13385
  call void @llvm.dbg.declare(metadata i32* %dither, metadata !13386, metadata !DIExpression()), !dbg !13387
  call void @llvm.dbg.declare(metadata i32* %range_code, metadata !13388, metadata !DIExpression()), !dbg !13389
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13390
  call void @ni_stc_writew(%struct.comedi_device* %6, i32 1, i32 82) #9, !dbg !13391
  %7 = load i32*, i32** %list.addr, align 8, !dbg !13392
  %arrayidx = getelementptr i32, i32* %7, i64 0, !dbg !13392
  %8 = load i32, i32* %arrayidx, align 4, !dbg !13392
  %and = and i32 %8, 134217728, !dbg !13394
  %tobool = icmp ne i32 %and, 0, !dbg !13394
  br i1 %tobool, label %if.then, label %if.else, !dbg !13395

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %bypass_bits, metadata !13396, metadata !DIExpression()), !dbg !13398
  %9 = load i32*, i32** %list.addr, align 8, !dbg !13399
  %arrayidx1 = getelementptr i32, i32* %9, i64 0, !dbg !13399
  %10 = load i32, i32* %arrayidx1, align 4, !dbg !13399
  %and2 = and i32 %10, 65535, !dbg !13399
  store i32 %and2, i32* %chan, align 4, !dbg !13400
  %11 = load i32*, i32** %list.addr, align 8, !dbg !13401
  %arrayidx3 = getelementptr i32, i32* %11, i64 0, !dbg !13401
  %12 = load i32, i32* %arrayidx3, align 4, !dbg !13401
  %shr = lshr i32 %12, 16, !dbg !13401
  %and4 = and i32 %shr, 255, !dbg !13401
  store i32 %and4, i32* %range, align 4, !dbg !13402
  %13 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !13403
  %gainlkup = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %13, i32 0, i32 8, !dbg !13404
  %14 = load i32, i32* %gainlkup, align 8, !dbg !13404
  %idxprom = sext i32 %14 to i64, !dbg !13405
  %arrayidx5 = getelementptr [8 x [16 x i16]], [8 x [16 x i16]]* bitcast (<{ [16 x i16], <{ [8 x i16], [8 x i16] }>, [16 x i16], <{ i16, i16, i16, i16, [12 x i16] }>, <{ [8 x i16], [8 x i16] }>, <{ i16, i16, i16, i16, [12 x i16] }>, <{ i16, i16, i16, i16, i16, i16, i16, [9 x i16] }>, [16 x i16] }>* @ni_gainlkup to [8 x [16 x i16]]*), i64 0, i64 %idxprom, !dbg !13405
  %15 = load i32, i32* %range, align 4, !dbg !13406
  %idxprom6 = zext i32 %15 to i64, !dbg !13405
  %arrayidx7 = getelementptr [16 x i16], [16 x i16]* %arrayidx5, i64 0, i64 %idxprom6, !dbg !13405
  %16 = load i16, i16* %arrayidx7, align 2, !dbg !13405
  %conv = sext i16 %16 to i32, !dbg !13405
  store i32 %conv, i32* %range_code, align 4, !dbg !13407
  %17 = load i32*, i32** %list.addr, align 8, !dbg !13408
  %arrayidx8 = getelementptr i32, i32* %17, i64 0, !dbg !13408
  %18 = load i32, i32* %arrayidx8, align 4, !dbg !13408
  %and9 = and i32 %18, 67108864, !dbg !13409
  %cmp = icmp ne i32 %and9, 0, !dbg !13410
  %conv10 = zext i1 %cmp to i32, !dbg !13410
  store i32 %conv10, i32* %dither, align 4, !dbg !13411
  %19 = load i32, i32* %chan, align 4, !dbg !13412
  %and11 = and i32 %19, 7, !dbg !13412
  %shl = shl i32 %and11, 0, !dbg !13412
  %conv12 = zext i32 %shl to i64, !dbg !13412
  %or = or i64 2147483648, %conv12, !dbg !13413
  %20 = load i32, i32* %range_code, align 4, !dbg !13414
  %and13 = and i32 %20, 7, !dbg !13414
  %shl14 = shl i32 %and13, 18, !dbg !13414
  %conv15 = zext i32 %shl14 to i64, !dbg !13414
  %or16 = or i64 %or, %conv15, !dbg !13415
  %21 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13416
  %ai_calib_source = getelementptr inbounds %struct.ni_private, %struct.ni_private* %21, i32 0, i32 3, !dbg !13417
  %22 = load i32, i32* %ai_calib_source, align 8, !dbg !13417
  %conv17 = zext i32 %22 to i64, !dbg !13416
  %or18 = or i64 %or16, %conv17, !dbg !13418
  %conv19 = trunc i64 %or18 to i32, !dbg !13419
  store i32 %conv19, i32* %bypass_bits, align 4, !dbg !13420
  %23 = load i32, i32* %dither, align 4, !dbg !13421
  %tobool20 = icmp ne i32 %23, 0, !dbg !13421
  br i1 %tobool20, label %if.then21, label %if.end, !dbg !13423

if.then21:                                        ; preds = %if.then
  %24 = load i32, i32* %bypass_bits, align 4, !dbg !13424
  %conv22 = zext i32 %24 to i64, !dbg !13424
  %or23 = or i64 %conv22, 2097152, !dbg !13424
  %conv24 = trunc i64 %or23 to i32, !dbg !13424
  store i32 %conv24, i32* %bypass_bits, align 4, !dbg !13424
  br label %if.end, !dbg !13425

if.end:                                           ; preds = %if.then21, %if.then
  %25 = load i32, i32* %bypass_bits, align 4, !dbg !13426
  %conv25 = zext i32 %25 to i64, !dbg !13426
  %or26 = or i64 %conv25, 4194304, !dbg !13426
  %conv27 = trunc i64 %or26 to i32, !dbg !13426
  store i32 %conv27, i32* %bypass_bits, align 4, !dbg !13426
  %26 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13427
  %27 = load i32, i32* %bypass_bits, align 4, !dbg !13428
  call void @ni_writel(%struct.comedi_device* %26, i32 %27, i32 536) #9, !dbg !13429
  br label %if.end28, !dbg !13430

if.else:                                          ; preds = %entry
  %28 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13431
  call void @ni_writel(%struct.comedi_device* %28, i32 0, i32 536) #9, !dbg !13433
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.end
  store i32 0, i32* %i, align 4, !dbg !13434
  br label %for.cond, !dbg !13436

for.cond:                                         ; preds = %for.inc, %if.end28
  %29 = load i32, i32* %i, align 4, !dbg !13437
  %30 = load i32, i32* %n_chan.addr, align 4, !dbg !13439
  %cmp29 = icmp ult i32 %29, %30, !dbg !13440
  br i1 %cmp29, label %for.body, label %for.end, !dbg !13441

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %config_bits, metadata !13442, metadata !DIExpression()), !dbg !13444
  store i32 0, i32* %config_bits, align 4, !dbg !13444
  %31 = load i32*, i32** %list.addr, align 8, !dbg !13445
  %32 = load i32, i32* %i, align 4, !dbg !13445
  %idxprom31 = zext i32 %32 to i64, !dbg !13445
  %arrayidx32 = getelementptr i32, i32* %31, i64 %idxprom31, !dbg !13445
  %33 = load i32, i32* %arrayidx32, align 4, !dbg !13445
  %and33 = and i32 %33, 65535, !dbg !13445
  store i32 %and33, i32* %chan, align 4, !dbg !13446
  %34 = load i32*, i32** %list.addr, align 8, !dbg !13447
  %35 = load i32, i32* %i, align 4, !dbg !13447
  %idxprom34 = zext i32 %35 to i64, !dbg !13447
  %arrayidx35 = getelementptr i32, i32* %34, i64 %idxprom34, !dbg !13447
  %36 = load i32, i32* %arrayidx35, align 4, !dbg !13447
  %shr36 = lshr i32 %36, 24, !dbg !13447
  %and37 = and i32 %shr36, 3, !dbg !13447
  store i32 %and37, i32* %aref, align 4, !dbg !13448
  %37 = load i32*, i32** %list.addr, align 8, !dbg !13449
  %38 = load i32, i32* %i, align 4, !dbg !13449
  %idxprom38 = zext i32 %38 to i64, !dbg !13449
  %arrayidx39 = getelementptr i32, i32* %37, i64 %idxprom38, !dbg !13449
  %39 = load i32, i32* %arrayidx39, align 4, !dbg !13449
  %shr40 = lshr i32 %39, 16, !dbg !13449
  %and41 = and i32 %shr40, 255, !dbg !13449
  store i32 %and41, i32* %range, align 4, !dbg !13450
  %40 = load i32*, i32** %list.addr, align 8, !dbg !13451
  %41 = load i32, i32* %i, align 4, !dbg !13452
  %idxprom42 = zext i32 %41 to i64, !dbg !13451
  %arrayidx43 = getelementptr i32, i32* %40, i64 %idxprom42, !dbg !13451
  %42 = load i32, i32* %arrayidx43, align 4, !dbg !13451
  %and44 = and i32 %42, 67108864, !dbg !13453
  %cmp45 = icmp ne i32 %and44, 0, !dbg !13454
  %conv46 = zext i1 %cmp45 to i32, !dbg !13454
  store i32 %conv46, i32* %dither, align 4, !dbg !13455
  %43 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !13456
  %gainlkup47 = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %43, i32 0, i32 8, !dbg !13457
  %44 = load i32, i32* %gainlkup47, align 8, !dbg !13457
  %idxprom48 = sext i32 %44 to i64, !dbg !13458
  %arrayidx49 = getelementptr [8 x [16 x i16]], [8 x [16 x i16]]* bitcast (<{ [16 x i16], <{ [8 x i16], [8 x i16] }>, [16 x i16], <{ i16, i16, i16, i16, [12 x i16] }>, <{ [8 x i16], [8 x i16] }>, <{ i16, i16, i16, i16, [12 x i16] }>, <{ i16, i16, i16, i16, i16, i16, i16, [9 x i16] }>, [16 x i16] }>* @ni_gainlkup to [8 x [16 x i16]]*), i64 0, i64 %idxprom48, !dbg !13458
  %45 = load i32, i32* %range, align 4, !dbg !13459
  %idxprom50 = zext i32 %45 to i64, !dbg !13458
  %arrayidx51 = getelementptr [16 x i16], [16 x i16]* %arrayidx49, i64 0, i64 %idxprom50, !dbg !13458
  %46 = load i16, i16* %arrayidx51, align 2, !dbg !13458
  %conv52 = sext i16 %46 to i32, !dbg !13458
  store i32 %conv52, i32* %range_code, align 4, !dbg !13460
  %47 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13461
  %ai_offset = getelementptr inbounds %struct.ni_private, %struct.ni_private* %47, i32 0, i32 21, !dbg !13462
  %48 = load i32, i32* %i, align 4, !dbg !13463
  %idxprom53 = zext i32 %48 to i64, !dbg !13461
  %arrayidx54 = getelementptr [512 x i32], [512 x i32]* %ai_offset, i64 0, i64 %idxprom53, !dbg !13461
  store i32 0, i32* %arrayidx54, align 4, !dbg !13464
  %49 = load i32, i32* %aref, align 4, !dbg !13465
  switch i32 %49, label %sw.epilog [
    i32 2, label %sw.bb
    i32 1, label %sw.bb56
    i32 0, label %sw.bb58
    i32 3, label %sw.bb60
  ], !dbg !13466

sw.bb:                                            ; preds = %for.body
  %50 = load i32, i32* %config_bits, align 4, !dbg !13467
  %or55 = or i32 %50, 64, !dbg !13467
  store i32 %or55, i32* %config_bits, align 4, !dbg !13467
  br label %sw.epilog, !dbg !13469

sw.bb56:                                          ; preds = %for.body
  %51 = load i32, i32* %config_bits, align 4, !dbg !13470
  %or57 = or i32 %51, 128, !dbg !13470
  store i32 %or57, i32* %config_bits, align 4, !dbg !13470
  br label %sw.epilog, !dbg !13471

sw.bb58:                                          ; preds = %for.body
  %52 = load i32, i32* %config_bits, align 4, !dbg !13472
  %or59 = or i32 %52, 192, !dbg !13472
  store i32 %or59, i32* %config_bits, align 4, !dbg !13472
  br label %sw.epilog, !dbg !13473

sw.bb60:                                          ; preds = %for.body
  br label %sw.epilog, !dbg !13474

sw.epilog:                                        ; preds = %for.body, %sw.bb60, %sw.bb58, %sw.bb56, %sw.bb
  %53 = load i32, i32* %chan, align 4, !dbg !13475
  %and61 = and i32 %53, 15, !dbg !13475
  %shl62 = shl i32 %and61, 0, !dbg !13475
  %54 = load i32, i32* %config_bits, align 4, !dbg !13476
  %or63 = or i32 %54, %shl62, !dbg !13476
  store i32 %or63, i32* %config_bits, align 4, !dbg !13476
  %55 = load i32, i32* %chan, align 4, !dbg !13477
  %and64 = and i32 %55, 64, !dbg !13477
  %shl65 = shl i32 %and64, 4, !dbg !13477
  %56 = load i32, i32* %chan, align 4, !dbg !13477
  %and66 = and i32 %56, 48, !dbg !13477
  %or67 = or i32 %shl65, %and66, !dbg !13477
  %57 = load i32, i32* %config_bits, align 4, !dbg !13478
  %or68 = or i32 %57, %or67, !dbg !13478
  store i32 %or68, i32* %config_bits, align 4, !dbg !13478
  %58 = load i32, i32* %range_code, align 4, !dbg !13479
  %and69 = and i32 %58, 7, !dbg !13479
  %shl70 = shl i32 %and69, 9, !dbg !13479
  %59 = load i32, i32* %config_bits, align 4, !dbg !13480
  %or71 = or i32 %59, %shl70, !dbg !13480
  store i32 %or71, i32* %config_bits, align 4, !dbg !13480
  %60 = load i32, i32* %i, align 4, !dbg !13481
  %61 = load i32, i32* %n_chan.addr, align 4, !dbg !13483
  %sub = sub i32 %61, 1, !dbg !13484
  %cmp72 = icmp eq i32 %60, %sub, !dbg !13485
  br i1 %cmp72, label %if.then74, label %if.end78, !dbg !13486

if.then74:                                        ; preds = %sw.epilog
  %62 = load i32, i32* %config_bits, align 4, !dbg !13487
  %conv75 = zext i32 %62 to i64, !dbg !13487
  %or76 = or i64 %conv75, 16384, !dbg !13487
  %conv77 = trunc i64 %or76 to i32, !dbg !13487
  store i32 %conv77, i32* %config_bits, align 4, !dbg !13487
  br label %if.end78, !dbg !13488

if.end78:                                         ; preds = %if.then74, %sw.epilog
  %63 = load i32, i32* %dither, align 4, !dbg !13489
  %tobool79 = icmp ne i32 %63, 0, !dbg !13489
  br i1 %tobool79, label %if.then80, label %if.end84, !dbg !13491

if.then80:                                        ; preds = %if.end78
  %64 = load i32, i32* %config_bits, align 4, !dbg !13492
  %conv81 = zext i32 %64 to i64, !dbg !13492
  %or82 = or i64 %conv81, 8192, !dbg !13492
  %conv83 = trunc i64 %or82 to i32, !dbg !13492
  store i32 %conv83, i32* %config_bits, align 4, !dbg !13492
  br label %if.end84, !dbg !13493

if.end84:                                         ; preds = %if.then80, %if.end78
  %65 = load i32, i32* %config_bits, align 4, !dbg !13494
  %conv85 = zext i32 %65 to i64, !dbg !13494
  %or86 = or i64 %conv85, 4096, !dbg !13494
  %conv87 = trunc i64 %or86 to i32, !dbg !13494
  store i32 %conv87, i32* %config_bits, align 4, !dbg !13494
  %66 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13495
  %67 = load i32, i32* %config_bits, align 4, !dbg !13496
  call void @ni_writew(%struct.comedi_device* %66, i32 %67, i32 94) #9, !dbg !13497
  br label %for.inc, !dbg !13498

for.inc:                                          ; preds = %if.end84
  %68 = load i32, i32* %i, align 4, !dbg !13499
  %inc = add i32 %68, 1, !dbg !13499
  store i32 %inc, i32* %i, align 4, !dbg !13499
  br label %for.cond, !dbg !13500, !llvm.loop !13501

for.end:                                          ; preds = %for.cond
  %69 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13503
  call void @ni_prime_channelgain_list(%struct.comedi_device* %69) #9, !dbg !13504
  ret void, !dbg !13505
}

; Function Attrs: noredzone
declare dso_local i64 @msleep_interruptible(i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_prime_channelgain_list(%struct.comedi_device* %dev) #2 !dbg !13506 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %i = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !13507, metadata !DIExpression()), !dbg !13508
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13509, metadata !DIExpression()), !dbg !13510
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13511
  call void @ni_stc_writew(%struct.comedi_device* %0, i32 1, i32 8) #9, !dbg !13512
  store i32 0, i32* %i, align 4, !dbg !13513
  br label %for.cond, !dbg !13515

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !13516
  %cmp = icmp slt i32 %1, 1000, !dbg !13518
  br i1 %cmp, label %for.body, label %for.end, !dbg !13519

for.body:                                         ; preds = %for.cond
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13520
  %call = call i32 @ni_stc_readw(%struct.comedi_device* %2, i32 2) #9, !dbg !13523
  %conv = zext i32 %call to i64, !dbg !13523
  %and = and i64 %conv, 4096, !dbg !13524
  %tobool = icmp ne i64 %and, 0, !dbg !13524
  br i1 %tobool, label %if.end, label %if.then, !dbg !13525

if.then:                                          ; preds = %for.body
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13526
  call void @ni_stc_writew(%struct.comedi_device* %3, i32 1, i32 83) #9, !dbg !13528
  br label %return, !dbg !13529

if.end:                                           ; preds = %for.body
  call void @__const_udelay(i64 4295) #9, !dbg !13530
  br label %for.inc, !dbg !13535

for.inc:                                          ; preds = %if.end
  %4 = load i32, i32* %i, align 4, !dbg !13536
  %inc = add i32 %4, 1, !dbg !13536
  store i32 %inc, i32* %i, align 4, !dbg !13536
  br label %for.cond, !dbg !13537, !llvm.loop !13538

for.end:                                          ; preds = %for.cond
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13540
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %5, i32 0, i32 4, !dbg !13540
  %6 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !13540
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %6, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.93, i64 0, i64 0)) #11, !dbg !13540
  br label %return, !dbg !13541

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !13541
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_min_ai_scan_period_ns(%struct.comedi_device* %dev, i32 %num_channels) #2 !dbg !13542 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %num_channels.addr = alloca i32, align 4
  %board = alloca %struct.ni_board_struct*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !13543, metadata !DIExpression()), !dbg !13544
  store i32 %num_channels, i32* %num_channels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_channels.addr, metadata !13545, metadata !DIExpression()), !dbg !13546
  call void @llvm.dbg.declare(metadata %struct.ni_board_struct** %board, metadata !13547, metadata !DIExpression()), !dbg !13548
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13549
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !13550
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !13550
  %2 = bitcast i8* %1 to %struct.ni_board_struct*, !dbg !13549
  store %struct.ni_board_struct* %2, %struct.ni_board_struct** %board, align 8, !dbg !13548
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !13551, metadata !DIExpression()), !dbg !13552
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13553
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !13554
  %4 = load i8*, i8** %private, align 8, !dbg !13554
  %5 = bitcast i8* %4 to %struct.ni_private*, !dbg !13553
  store %struct.ni_private* %5, %struct.ni_private** %devpriv, align 8, !dbg !13552
  %6 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13555
  %is_611x = getelementptr inbounds %struct.ni_private, %struct.ni_private* %6, i32 0, i32 50, !dbg !13557
  %bf.load = load i16, i16* %is_611x, align 8, !dbg !13557
  %bf.lshr = lshr i16 %bf.load, 2, !dbg !13557
  %bf.clear = and i16 %bf.lshr, 1, !dbg !13557
  %bf.cast = zext i16 %bf.clear to i32, !dbg !13557
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !13555
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !13558

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13559
  %is_6143 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %7, i32 0, i32 50, !dbg !13560
  %bf.load1 = load i16, i16* %is_6143, align 8, !dbg !13560
  %bf.lshr2 = lshr i16 %bf.load1, 3, !dbg !13560
  %bf.clear3 = and i16 %bf.lshr2, 1, !dbg !13560
  %bf.cast4 = zext i16 %bf.clear3 to i32, !dbg !13560
  %tobool5 = icmp ne i32 %bf.cast4, 0, !dbg !13559
  br i1 %tobool5, label %if.then, label %if.end, !dbg !13561

if.then:                                          ; preds = %lor.lhs.false, %entry
  %8 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !13562
  %ai_speed = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %8, i32 0, i32 9, !dbg !13563
  %9 = load i32, i32* %ai_speed, align 4, !dbg !13563
  store i32 %9, i32* %retval, align 4, !dbg !13564
  br label %return, !dbg !13564

if.end:                                           ; preds = %lor.lhs.false
  %10 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !13565
  %ai_speed6 = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %10, i32 0, i32 9, !dbg !13566
  %11 = load i32, i32* %ai_speed6, align 4, !dbg !13566
  %12 = load i32, i32* %num_channels.addr, align 4, !dbg !13567
  %mul = mul i32 %11, %12, !dbg !13568
  store i32 %mul, i32* %retval, align 4, !dbg !13569
  br label %return, !dbg !13569

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !13570
  ret i32 %13, !dbg !13570
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_check_trigger_src(i32* %src, i32 %flags) #2 !dbg !13571 {
entry:
  %retval = alloca i32, align 4
  %src.addr = alloca i32*, align 8
  %flags.addr = alloca i32, align 4
  %orig_src = alloca i32, align 4
  store i32* %src, i32** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %src.addr, metadata !13574, metadata !DIExpression()), !dbg !13575
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13576, metadata !DIExpression()), !dbg !13577
  call void @llvm.dbg.declare(metadata i32* %orig_src, metadata !13578, metadata !DIExpression()), !dbg !13579
  %0 = load i32*, i32** %src.addr, align 8, !dbg !13580
  %1 = load i32, i32* %0, align 4, !dbg !13581
  store i32 %1, i32* %orig_src, align 4, !dbg !13579
  %2 = load i32, i32* %orig_src, align 4, !dbg !13582
  %3 = load i32, i32* %flags.addr, align 4, !dbg !13583
  %and = and i32 %2, %3, !dbg !13584
  %4 = load i32*, i32** %src.addr, align 8, !dbg !13585
  store i32 %and, i32* %4, align 4, !dbg !13586
  %5 = load i32*, i32** %src.addr, align 8, !dbg !13587
  %6 = load i32, i32* %5, align 4, !dbg !13589
  %cmp = icmp eq i32 %6, 0, !dbg !13590
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !13591

lor.lhs.false:                                    ; preds = %entry
  %7 = load i32*, i32** %src.addr, align 8, !dbg !13592
  %8 = load i32, i32* %7, align 4, !dbg !13593
  %9 = load i32, i32* %orig_src, align 4, !dbg !13594
  %cmp1 = icmp ne i32 %8, %9, !dbg !13595
  br i1 %cmp1, label %if.then, label %if.end, !dbg !13596

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !13597
  br label %return, !dbg !13597

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !13598
  br label %return, !dbg !13598

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !13599
  ret i32 %10, !dbg !13599
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_check_trigger_is_unique(i32 %src) #2 !dbg !13600 {
entry:
  %retval = alloca i32, align 4
  %src.addr = alloca i32, align 4
  store i32 %src, i32* %src.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src.addr, metadata !13603, metadata !DIExpression()), !dbg !13604
  %0 = load i32, i32* %src.addr, align 4, !dbg !13605
  %1 = load i32, i32* %src.addr, align 4, !dbg !13607
  %sub = sub i32 %1, 1, !dbg !13608
  %and = and i32 %0, %sub, !dbg !13609
  %cmp = icmp ne i32 %and, 0, !dbg !13610
  br i1 %cmp, label %if.then, label %if.end, !dbg !13611

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !13612
  br label %return, !dbg !13612

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13613
  br label %return, !dbg !13613

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !13614
  ret i32 %2, !dbg !13614
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_check_trigger_arg_is(i32* %arg, i32 %val) #2 !dbg !13615 {
entry:
  %retval = alloca i32, align 4
  %arg.addr = alloca i32*, align 8
  %val.addr = alloca i32, align 4
  store i32* %arg, i32** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %arg.addr, metadata !13616, metadata !DIExpression()), !dbg !13617
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13618, metadata !DIExpression()), !dbg !13619
  %0 = load i32*, i32** %arg.addr, align 8, !dbg !13620
  %1 = load i32, i32* %0, align 4, !dbg !13622
  %2 = load i32, i32* %val.addr, align 4, !dbg !13623
  %cmp = icmp ne i32 %1, %2, !dbg !13624
  br i1 %cmp, label %if.then, label %if.end, !dbg !13625

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %val.addr, align 4, !dbg !13626
  %4 = load i32*, i32** %arg.addr, align 8, !dbg !13628
  store i32 %3, i32* %4, align 4, !dbg !13629
  store i32 -22, i32* %retval, align 4, !dbg !13630
  br label %return, !dbg !13630

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13631
  br label %return, !dbg !13631

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !13632
  ret i32 %5, !dbg !13632
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_check_trigger_arg_roffs(i32 %src, i32 %dest, %struct.ni_route_tables* %tables, i32 %direct_reg_offset) #2 !dbg !13633 {
entry:
  %retval = alloca i32, align 4
  %src.addr = alloca i32, align 4
  %dest.addr = alloca i32, align 4
  %tables.addr = alloca %struct.ni_route_tables*, align 8
  %direct_reg_offset.addr = alloca i32, align 4
  store i32 %src, i32* %src.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src.addr, metadata !13636, metadata !DIExpression()), !dbg !13637
  store i32 %dest, i32* %dest.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest.addr, metadata !13638, metadata !DIExpression()), !dbg !13639
  store %struct.ni_route_tables* %tables, %struct.ni_route_tables** %tables.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ni_route_tables** %tables.addr, metadata !13640, metadata !DIExpression()), !dbg !13641
  store i32 %direct_reg_offset, i32* %direct_reg_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direct_reg_offset.addr, metadata !13642, metadata !DIExpression()), !dbg !13643
  %0 = load i32, i32* %src.addr, align 4, !dbg !13644
  %1 = load i32, i32* %dest.addr, align 4, !dbg !13646
  %2 = load %struct.ni_route_tables*, %struct.ni_route_tables** %tables.addr, align 8, !dbg !13647
  %3 = load i32, i32* %direct_reg_offset.addr, align 4, !dbg !13648
  %call = call signext i8 @ni_get_reg_value_roffs(i32 %0, i32 %1, %struct.ni_route_tables* %2, i32 %3) #9, !dbg !13649
  %conv = sext i8 %call to i32, !dbg !13649
  %cmp = icmp slt i32 %conv, 0, !dbg !13650
  br i1 %cmp, label %if.then, label %if.end, !dbg !13651

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !13652
  br label %return, !dbg !13652

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13653
  br label %return, !dbg !13653

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !13654
  ret i32 %4, !dbg !13654
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_check_trigger_arg_min(i32* %arg, i32 %val) #2 !dbg !13655 {
entry:
  %retval = alloca i32, align 4
  %arg.addr = alloca i32*, align 8
  %val.addr = alloca i32, align 4
  store i32* %arg, i32** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %arg.addr, metadata !13656, metadata !DIExpression()), !dbg !13657
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13658, metadata !DIExpression()), !dbg !13659
  %0 = load i32*, i32** %arg.addr, align 8, !dbg !13660
  %1 = load i32, i32* %0, align 4, !dbg !13662
  %2 = load i32, i32* %val.addr, align 4, !dbg !13663
  %cmp = icmp ult i32 %1, %2, !dbg !13664
  br i1 %cmp, label %if.then, label %if.end, !dbg !13665

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %val.addr, align 4, !dbg !13666
  %4 = load i32*, i32** %arg.addr, align 8, !dbg !13668
  store i32 %3, i32* %4, align 4, !dbg !13669
  store i32 -22, i32* %retval, align 4, !dbg !13670
  br label %return, !dbg !13670

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13671
  br label %return, !dbg !13671

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !13672
  ret i32 %5, !dbg !13672
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_check_trigger_arg_max(i32* %arg, i32 %val) #2 !dbg !13673 {
entry:
  %retval = alloca i32, align 4
  %arg.addr = alloca i32*, align 8
  %val.addr = alloca i32, align 4
  store i32* %arg, i32** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %arg.addr, metadata !13674, metadata !DIExpression()), !dbg !13675
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13676, metadata !DIExpression()), !dbg !13677
  %0 = load i32*, i32** %arg.addr, align 8, !dbg !13678
  %1 = load i32, i32* %0, align 4, !dbg !13680
  %2 = load i32, i32* %val.addr, align 4, !dbg !13681
  %cmp = icmp ugt i32 %1, %2, !dbg !13682
  br i1 %cmp, label %if.then, label %if.end, !dbg !13683

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %val.addr, align 4, !dbg !13684
  %4 = load i32*, i32** %arg.addr, align 8, !dbg !13686
  store i32 %3, i32* %4, align 4, !dbg !13687
  store i32 -22, i32* %retval, align 4, !dbg !13688
  br label %return, !dbg !13688

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13689
  br label %return, !dbg !13689

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !13690
  ret i32 %5, !dbg !13690
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_timer_to_ns(%struct.comedi_device* %dev, i32 %timer) #2 !dbg !13691 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %timer.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !13696, metadata !DIExpression()), !dbg !13697
  store i32 %timer, i32* %timer.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timer.addr, metadata !13698, metadata !DIExpression()), !dbg !13699
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !13700, metadata !DIExpression()), !dbg !13701
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13702
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !13703
  %1 = load i8*, i8** %private, align 8, !dbg !13703
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !13702
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !13701
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13704
  %clock_ns = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 36, !dbg !13705
  %4 = load i32, i32* %clock_ns, align 4, !dbg !13705
  %5 = load i32, i32* %timer.addr, align 4, !dbg !13706
  %add = add i32 %5, 1, !dbg !13707
  %mul = mul i32 %4, %add, !dbg !13708
  ret i32 %mul, !dbg !13709
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_ns_to_timer(%struct.comedi_device* %dev, i32 %nanosec, i32 %flags) #2 !dbg !13710 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %nanosec.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  %divider = alloca i32, align 4
  %__x = alloca i32, align 4
  %__d = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !13713, metadata !DIExpression()), !dbg !13714
  store i32 %nanosec, i32* %nanosec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nanosec.addr, metadata !13715, metadata !DIExpression()), !dbg !13716
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13717, metadata !DIExpression()), !dbg !13718
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !13719, metadata !DIExpression()), !dbg !13720
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13721
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !13722
  %1 = load i8*, i8** %private, align 8, !dbg !13722
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !13721
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !13720
  call void @llvm.dbg.declare(metadata i32* %divider, metadata !13723, metadata !DIExpression()), !dbg !13724
  %3 = load i32, i32* %flags.addr, align 4, !dbg !13725
  %and = and i32 %3, 196608, !dbg !13726
  switch i32 %and, label %sw.default [
    i32 0, label %sw.bb
    i32 65536, label %sw.bb2
    i32 131072, label %sw.bb5
  ], !dbg !13727

sw.bb:                                            ; preds = %entry
  br label %sw.default, !dbg !13728

sw.default:                                       ; preds = %entry, %sw.bb
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !13729, metadata !DIExpression()), !dbg !13732
  %4 = load i32, i32* %nanosec.addr, align 4, !dbg !13732
  store i32 %4, i32* %__x, align 4, !dbg !13732
  call void @llvm.dbg.declare(metadata i32* %__d, metadata !13733, metadata !DIExpression()), !dbg !13732
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13732
  %clock_ns = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 36, !dbg !13732
  %6 = load i32, i32* %clock_ns, align 4, !dbg !13732
  store i32 %6, i32* %__d, align 4, !dbg !13732
  %7 = load i32, i32* %__x, align 4, !dbg !13732
  %8 = load i32, i32* %__d, align 4, !dbg !13732
  %div = udiv i32 %8, 2, !dbg !13732
  %add = add i32 %7, %div, !dbg !13732
  %9 = load i32, i32* %__d, align 4, !dbg !13732
  %div1 = udiv i32 %add, %9, !dbg !13732
  store i32 %div1, i32* %tmp, align 4, !dbg !13732
  %10 = load i32, i32* %tmp, align 4, !dbg !13732
  store i32 %10, i32* %divider, align 4, !dbg !13734
  br label %sw.epilog, !dbg !13735

sw.bb2:                                           ; preds = %entry
  %11 = load i32, i32* %nanosec.addr, align 4, !dbg !13736
  %12 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13737
  %clock_ns3 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %12, i32 0, i32 36, !dbg !13738
  %13 = load i32, i32* %clock_ns3, align 4, !dbg !13738
  %div4 = udiv i32 %11, %13, !dbg !13739
  store i32 %div4, i32* %divider, align 4, !dbg !13740
  br label %sw.epilog, !dbg !13741

sw.bb5:                                           ; preds = %entry
  %14 = load i32, i32* %nanosec.addr, align 4, !dbg !13742
  %15 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13742
  %clock_ns6 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %15, i32 0, i32 36, !dbg !13742
  %16 = load i32, i32* %clock_ns6, align 4, !dbg !13742
  %add7 = add i32 %14, %16, !dbg !13742
  %sub = sub i32 %add7, 1, !dbg !13742
  %17 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13742
  %clock_ns8 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %17, i32 0, i32 36, !dbg !13742
  %18 = load i32, i32* %clock_ns8, align 4, !dbg !13742
  %div9 = udiv i32 %sub, %18, !dbg !13742
  store i32 %div9, i32* %divider, align 4, !dbg !13743
  br label %sw.epilog, !dbg !13744

sw.epilog:                                        ; preds = %sw.bb5, %sw.bb2, %sw.default
  %19 = load i32, i32* %divider, align 4, !dbg !13745
  %sub10 = sub i32 %19, 1, !dbg !13746
  ret i32 %sub10, !dbg !13747
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal signext i8 @ni_get_reg_value_roffs(i32 %src, i32 %dest, %struct.ni_route_tables* %tables, i32 %direct_reg_offset) #2 !dbg !13748 {
entry:
  %retval = alloca i8, align 1
  %src.addr = alloca i32, align 4
  %dest.addr = alloca i32, align 4
  %tables.addr = alloca %struct.ni_route_tables*, align 8
  %direct_reg_offset.addr = alloca i32, align 4
  store i32 %src, i32* %src.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src.addr, metadata !13751, metadata !DIExpression()), !dbg !13752
  store i32 %dest, i32* %dest.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest.addr, metadata !13753, metadata !DIExpression()), !dbg !13754
  store %struct.ni_route_tables* %tables, %struct.ni_route_tables** %tables.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ni_route_tables** %tables.addr, metadata !13755, metadata !DIExpression()), !dbg !13756
  store i32 %direct_reg_offset, i32* %direct_reg_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direct_reg_offset.addr, metadata !13757, metadata !DIExpression()), !dbg !13758
  %0 = load i32, i32* %src.addr, align 4, !dbg !13759
  %cmp = icmp ult i32 %0, 32768, !dbg !13761
  br i1 %cmp, label %if.then, label %if.end3, !dbg !13762

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %direct_reg_offset.addr, align 4, !dbg !13763
  %2 = load i32, i32* %src.addr, align 4, !dbg !13765
  %add = add i32 %2, %1, !dbg !13765
  store i32 %add, i32* %src.addr, align 4, !dbg !13765
  %3 = load i32, i32* %src.addr, align 4, !dbg !13766
  %conv = trunc i32 %3 to i8, !dbg !13766
  %4 = load i32, i32* %dest.addr, align 4, !dbg !13768
  %5 = load %struct.ni_route_tables*, %struct.ni_route_tables** %tables.addr, align 8, !dbg !13769
  %call = call zeroext i1 @route_register_is_valid(i8 zeroext %conv, i32 %4, %struct.ni_route_tables* %5) #9, !dbg !13770
  br i1 %call, label %if.then1, label %if.end, !dbg !13771

if.then1:                                         ; preds = %if.then
  %6 = load i32, i32* %src.addr, align 4, !dbg !13772
  %conv2 = trunc i32 %6 to i8, !dbg !13772
  store i8 %conv2, i8* %retval, align 1, !dbg !13773
  br label %return, !dbg !13773

if.end:                                           ; preds = %if.then
  store i8 -1, i8* %retval, align 1, !dbg !13774
  br label %return, !dbg !13774

if.end3:                                          ; preds = %entry
  %7 = load i32, i32* %src.addr, align 4, !dbg !13775
  %8 = load i32, i32* %dest.addr, align 4, !dbg !13776
  %9 = load %struct.ni_route_tables*, %struct.ni_route_tables** %tables.addr, align 8, !dbg !13777
  %call4 = call signext i8 @ni_route_to_register(i32 %7, i32 %8, %struct.ni_route_tables* %9) #9, !dbg !13778
  store i8 %call4, i8* %retval, align 1, !dbg !13779
  br label %return, !dbg !13779

return:                                           ; preds = %if.end3, %if.end, %if.then1
  %10 = load i8, i8* %retval, align 1, !dbg !13780
  ret i8 %10, !dbg !13780
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @route_register_is_valid(i8 zeroext %src_sel_reg_value, i32 %dest, %struct.ni_route_tables* %tables) #2 !dbg !13781 {
entry:
  %src_sel_reg_value.addr = alloca i8, align 1
  %dest.addr = alloca i32, align 4
  %tables.addr = alloca %struct.ni_route_tables*, align 8
  store i8 %src_sel_reg_value, i8* %src_sel_reg_value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %src_sel_reg_value.addr, metadata !13784, metadata !DIExpression()), !dbg !13785
  store i32 %dest, i32* %dest.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest.addr, metadata !13786, metadata !DIExpression()), !dbg !13787
  store %struct.ni_route_tables* %tables, %struct.ni_route_tables** %tables.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ni_route_tables** %tables.addr, metadata !13788, metadata !DIExpression()), !dbg !13789
  %0 = load i8, i8* %src_sel_reg_value.addr, align 1, !dbg !13790
  %1 = load i32, i32* %dest.addr, align 4, !dbg !13791
  %2 = load %struct.ni_route_tables*, %struct.ni_route_tables** %tables.addr, align 8, !dbg !13792
  %call = call i32 @ni_find_route_source(i8 zeroext %0, i32 %1, %struct.ni_route_tables* %2) #9, !dbg !13793
  %cmp = icmp sge i32 %call, 0, !dbg !13794
  ret i1 %cmp, !dbg !13795
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_stc_writel(%struct.comedi_device* %dev, i32 %data, i32 %reg) #2 !dbg !13796 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %data.addr = alloca i32, align 4
  %reg.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !13797, metadata !DIExpression()), !dbg !13798
  store i32 %data, i32* %data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data.addr, metadata !13799, metadata !DIExpression()), !dbg !13800
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !13801, metadata !DIExpression()), !dbg !13802
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !13803, metadata !DIExpression()), !dbg !13804
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13805
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !13806
  %1 = load i8*, i8** %private, align 8, !dbg !13806
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !13805
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !13804
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13807
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 50, !dbg !13809
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !13809
  %bf.clear = and i16 %bf.load, 1, !dbg !13809
  %bf.cast = zext i16 %bf.clear to i32, !dbg !13809
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !13807
  br i1 %tobool, label %if.then, label %if.else, !dbg !13810

if.then:                                          ; preds = %entry
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13811
  %5 = load i32, i32* %data.addr, align 4, !dbg !13813
  %6 = load i32, i32* %reg.addr, align 4, !dbg !13814
  call void @m_series_stc_write(%struct.comedi_device* %4, i32 %5, i32 %6) #9, !dbg !13815
  br label %if.end, !dbg !13816

if.else:                                          ; preds = %entry
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13817
  %8 = load i32, i32* %data.addr, align 4, !dbg !13819
  %shr = lshr i32 %8, 16, !dbg !13820
  %9 = load i32, i32* %reg.addr, align 4, !dbg !13821
  call void @ni_stc_writew(%struct.comedi_device* %7, i32 %shr, i32 %9) #9, !dbg !13822
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13823
  %11 = load i32, i32* %data.addr, align 4, !dbg !13824
  %and = and i32 %11, 65535, !dbg !13825
  %12 = load i32, i32* %reg.addr, align 4, !dbg !13826
  %add = add i32 %12, 1, !dbg !13827
  call void @ni_stc_writew(%struct.comedi_device* %10, i32 %and, i32 %add) #9, !dbg !13828
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !13829
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_ai_setup_MITE_dma(%struct.comedi_device* %dev) #2 !dbg !13830 {
entry:
  %lock.addr.i49 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i49, metadata !5432, metadata !DIExpression()), !dbg !13831
  %flags.addr.i50 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i50, metadata !5440, metadata !DIExpression()), !dbg !13835
  %tmp.i51 = alloca i32, align 4
  %tmp8.i52 = alloca i32, align 4
  %lock.addr.i47 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i47, metadata !5432, metadata !DIExpression()), !dbg !13836
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5440, metadata !DIExpression()), !dbg !13838
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5232, metadata !DIExpression()), !dbg !13839
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %retval1 = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !13846, metadata !DIExpression()), !dbg !13847
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !13848, metadata !DIExpression()), !dbg !13849
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13850
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !13851
  %1 = load i8*, i8** %private, align 8, !dbg !13851
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !13850
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !13849
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !13852, metadata !DIExpression()), !dbg !13853
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13854
  %read_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 21, !dbg !13855
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %read_subdev, align 8, !dbg !13855
  store %struct.comedi_subdevice* %4, %struct.comedi_subdevice** %s, align 8, !dbg !13853
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !13856, metadata !DIExpression()), !dbg !13857
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13858, metadata !DIExpression()), !dbg !13859
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13860
  %call = call i32 @ni_request_ai_mite_channel(%struct.comedi_device* %5) #9, !dbg !13861
  store i32 %call, i32* %retval1, align 4, !dbg !13862
  %6 = load i32, i32* %retval1, align 4, !dbg !13863
  %tobool = icmp ne i32 %6, 0, !dbg !13863
  br i1 %tobool, label %if.then, label %if.end, !dbg !13865

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %retval1, align 4, !dbg !13866
  store i32 %7, i32* %retval, align 4, !dbg !13867
  br label %return, !dbg !13867

if.end:                                           ; preds = %entry
  %8 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !13868
  %9 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !13869
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %9, i32 0, i32 7, !dbg !13870
  %10 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !13870
  %prealloc_bufsz = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %10, i32 0, i32 1, !dbg !13871
  %11 = load i32, i32* %prealloc_bufsz, align 8, !dbg !13871
  %call2 = call i32 @comedi_buf_write_alloc(%struct.comedi_subdevice* %8, i32 %11) #9, !dbg !13872
  br label %do.body, !dbg !13873

do.body:                                          ; preds = %if.end
  br label %do.body3, !dbg !13874

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13875, metadata !DIExpression()), !dbg !13877
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13878, metadata !DIExpression()), !dbg !13877
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13877
  %conv = zext i1 %cmp to i32, !dbg !13877
  store i32 1, i32* %tmp, align 4, !dbg !13877
  %12 = load i32, i32* %tmp, align 4, !dbg !13877
  br label %do.body4, !dbg !13879

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !13880

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !13881

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !13883, metadata !DIExpression()), !dbg !13886
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !13887, metadata !DIExpression()), !dbg !13886
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !13886
  %conv10 = zext i1 %cmp9 to i32, !dbg !13886
  store i32 1, i32* %tmp11, align 4, !dbg !13886
  %13 = load i32, i32* %tmp11, align 4, !dbg !13886
  %call12 = call i64 @arch_local_irq_save() #9, !dbg !13888
  store i64 %call12, i64* %flags, align 8, !dbg !13888
  br label %do.end, !dbg !13888

do.end:                                           ; preds = %do.body6
  br label %do.end13, !dbg !13881

do.end13:                                         ; preds = %do.end
  br label %do.body14, !dbg !13880

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13889, !srcloc !13890
  br label %do.body15, !dbg !13889

do.body15:                                        ; preds = %do.body14
  %14 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13891
  %mite_channel_lock = getelementptr inbounds %struct.ni_private, %struct.ni_private* %14, i32 0, i32 7, !dbg !13891
  store %struct.spinlock* %mite_channel_lock, %struct.spinlock** %lock.addr.i, align 8
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13892
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !13893
  %rlock.i = bitcast %union.anon.3* %16 to %struct.raw_spinlock*, !dbg !13893
  br label %do.end17, !dbg !13891

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !13889

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !13880

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !13879

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !13874

do.end21:                                         ; preds = %do.end20
  %17 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13894
  %ai_mite_chan = getelementptr inbounds %struct.ni_private, %struct.ni_private* %17, i32 0, i32 43, !dbg !13895
  %18 = load %struct.mite_channel*, %struct.mite_channel** %ai_mite_chan, align 8, !dbg !13895
  %tobool22 = icmp ne %struct.mite_channel* %18, null, !dbg !13894
  br i1 %tobool22, label %if.end25, label %if.then23, !dbg !13896

if.then23:                                        ; preds = %do.end21
  %19 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13897
  %mite_channel_lock24 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %19, i32 0, i32 7, !dbg !13898
  %20 = load i64, i64* %flags, align 8, !dbg !13899
  store %struct.spinlock* %mite_channel_lock24, %struct.spinlock** %lock.addr.i49, align 8
  store i64 %20, i64* %flags.addr.i50, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !13900
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !13900
  store i32 1, i32* %tmp.i51, align 4, !dbg !13900
  %21 = load i32, i32* %tmp.i51, align 4, !dbg !13900
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !13901
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !13901
  store i32 1, i32* %tmp8.i52, align 4, !dbg !13901
  %22 = load i32, i32* %tmp8.i52, align 4, !dbg !13901
  %23 = load i64, i64* %flags.addr.i50, align 8, !dbg !13902
  call void @arch_local_irq_restore(i64 %23) #10, !dbg !13902
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13903, !srcloc !5582
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i49, align 8, !dbg !13904
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !13904
  %rlock.i53 = bitcast %union.anon.3* %25 to %struct.raw_spinlock*, !dbg !13904
  store i32 -5, i32* %retval, align 4, !dbg !13905
  br label %return, !dbg !13905

if.end25:                                         ; preds = %do.end21
  %26 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13906
  %is_611x = getelementptr inbounds %struct.ni_private, %struct.ni_private* %26, i32 0, i32 50, !dbg !13908
  %bf.load = load i16, i16* %is_611x, align 8, !dbg !13908
  %bf.lshr = lshr i16 %bf.load, 2, !dbg !13908
  %bf.clear = and i16 %bf.lshr, 1, !dbg !13908
  %bf.cast = zext i16 %bf.clear to i32, !dbg !13908
  %tobool26 = icmp ne i32 %bf.cast, 0, !dbg !13906
  br i1 %tobool26, label %if.then32, label %lor.lhs.false, !dbg !13909

lor.lhs.false:                                    ; preds = %if.end25
  %27 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13910
  %is_6143 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %27, i32 0, i32 50, !dbg !13911
  %bf.load27 = load i16, i16* %is_6143, align 8, !dbg !13911
  %bf.lshr28 = lshr i16 %bf.load27, 3, !dbg !13911
  %bf.clear29 = and i16 %bf.lshr28, 1, !dbg !13911
  %bf.cast30 = zext i16 %bf.clear29 to i32, !dbg !13911
  %tobool31 = icmp ne i32 %bf.cast30, 0, !dbg !13910
  br i1 %tobool31, label %if.then32, label %if.else, !dbg !13912

if.then32:                                        ; preds = %lor.lhs.false, %if.end25
  %28 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13913
  %ai_mite_chan33 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %28, i32 0, i32 43, !dbg !13914
  %29 = load %struct.mite_channel*, %struct.mite_channel** %ai_mite_chan33, align 8, !dbg !13914
  call void @mite_prep_dma(%struct.mite_channel* %29, i32 32, i32 16) #9, !dbg !13915
  br label %if.end44, !dbg !13915

if.else:                                          ; preds = %lor.lhs.false
  %30 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13916
  %is_628x = getelementptr inbounds %struct.ni_private, %struct.ni_private* %30, i32 0, i32 50, !dbg !13918
  %bf.load34 = load i16, i16* %is_628x, align 8, !dbg !13918
  %bf.lshr35 = lshr i16 %bf.load34, 6, !dbg !13918
  %bf.clear36 = and i16 %bf.lshr35, 1, !dbg !13918
  %bf.cast37 = zext i16 %bf.clear36 to i32, !dbg !13918
  %tobool38 = icmp ne i32 %bf.cast37, 0, !dbg !13916
  br i1 %tobool38, label %if.then39, label %if.else41, !dbg !13919

if.then39:                                        ; preds = %if.else
  %31 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13920
  %ai_mite_chan40 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %31, i32 0, i32 43, !dbg !13921
  %32 = load %struct.mite_channel*, %struct.mite_channel** %ai_mite_chan40, align 8, !dbg !13921
  call void @mite_prep_dma(%struct.mite_channel* %32, i32 32, i32 32) #9, !dbg !13922
  br label %if.end43, !dbg !13922

if.else41:                                        ; preds = %if.else
  %33 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13923
  %ai_mite_chan42 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %33, i32 0, i32 43, !dbg !13924
  %34 = load %struct.mite_channel*, %struct.mite_channel** %ai_mite_chan42, align 8, !dbg !13924
  call void @mite_prep_dma(%struct.mite_channel* %34, i32 16, i32 16) #9, !dbg !13925
  br label %if.end43

if.end43:                                         ; preds = %if.else41, %if.then39
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then32
  %35 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13926
  %ai_mite_chan45 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %35, i32 0, i32 43, !dbg !13927
  %36 = load %struct.mite_channel*, %struct.mite_channel** %ai_mite_chan45, align 8, !dbg !13927
  call void @mite_dma_arm(%struct.mite_channel* %36) #9, !dbg !13928
  %37 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13929
  %mite_channel_lock46 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %37, i32 0, i32 7, !dbg !13930
  %38 = load i64, i64* %flags, align 8, !dbg !13931
  store %struct.spinlock* %mite_channel_lock46, %struct.spinlock** %lock.addr.i47, align 8
  store i64 %38, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !13932
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !13932
  store i32 1, i32* %tmp.i, align 4, !dbg !13932
  %39 = load i32, i32* %tmp.i, align 4, !dbg !13932
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !13933
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !13933
  store i32 1, i32* %tmp8.i, align 4, !dbg !13933
  %40 = load i32, i32* %tmp8.i, align 4, !dbg !13933
  %41 = load i64, i64* %flags.addr.i, align 8, !dbg !13934
  call void @arch_local_irq_restore(i64 %41) #10, !dbg !13934
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13935, !srcloc !5582
  %42 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i47, align 8, !dbg !13936
  %43 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %42, i32 0, i32 0, !dbg !13936
  %rlock.i48 = bitcast %union.anon.3* %43 to %struct.raw_spinlock*, !dbg !13936
  store i32 0, i32* %retval, align 4, !dbg !13937
  br label %return, !dbg !13937

return:                                           ; preds = %if.end44, %if.then23, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !13938
  ret i32 %44, !dbg !13938
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_ai_inttrig(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, i32 %trig_num) #2 !dbg !13939 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %trig_num.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  %cmd = alloca %struct.comedi_cmd*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !13940, metadata !DIExpression()), !dbg !13941
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !13942, metadata !DIExpression()), !dbg !13943
  store i32 %trig_num, i32* %trig_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %trig_num.addr, metadata !13944, metadata !DIExpression()), !dbg !13945
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !13946, metadata !DIExpression()), !dbg !13947
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13948
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !13949
  %1 = load i8*, i8** %private, align 8, !dbg !13949
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !13948
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !13947
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd, metadata !13950, metadata !DIExpression()), !dbg !13951
  %3 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !13952
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %3, i32 0, i32 7, !dbg !13953
  %4 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !13953
  %cmd1 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %4, i32 0, i32 17, !dbg !13954
  store %struct.comedi_cmd* %cmd1, %struct.comedi_cmd** %cmd, align 8, !dbg !13951
  %5 = load i32, i32* %trig_num.addr, align 4, !dbg !13955
  %6 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !13957
  %start_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %6, i32 0, i32 3, !dbg !13958
  %7 = load i32, i32* %start_arg, align 4, !dbg !13958
  %cmp = icmp ne i32 %5, %7, !dbg !13959
  br i1 %cmp, label %if.then, label %if.end, !dbg !13960

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !13961
  br label %return, !dbg !13961

if.end:                                           ; preds = %entry
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13962
  %9 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !13963
  %ai_cmd2 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %9, i32 0, i32 12, !dbg !13964
  %10 = load i16, i16* %ai_cmd2, align 4, !dbg !13964
  %conv = zext i16 %10 to i64, !dbg !13963
  %or = or i64 1, %conv, !dbg !13965
  %conv2 = trunc i64 %or to i32, !dbg !13966
  call void @ni_stc_writew(%struct.comedi_device* %8, i32 %conv2, i32 4) #9, !dbg !13967
  %11 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !13968
  %async3 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %11, i32 0, i32 7, !dbg !13969
  %12 = load %struct.comedi_async*, %struct.comedi_async** %async3, align 8, !dbg !13969
  %inttrig = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %12, i32 0, i32 20, !dbg !13970
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)* null, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)** %inttrig, align 8, !dbg !13971
  store i32 1, i32* %retval, align 4, !dbg !13972
  br label %return, !dbg !13972

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !13973
  ret i32 %13, !dbg !13973
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_request_ai_mite_channel(%struct.comedi_device* %dev) #2 !dbg !13974 {
entry:
  %lock.addr.i41 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i41, metadata !5432, metadata !DIExpression()), !dbg !13975
  %flags.addr.i42 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i42, metadata !5440, metadata !DIExpression()), !dbg !13979
  %tmp.i43 = alloca i32, align 4
  %tmp8.i44 = alloca i32, align 4
  %lock.addr.i39 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i39, metadata !5432, metadata !DIExpression()), !dbg !13980
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5440, metadata !DIExpression()), !dbg !13982
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5232, metadata !DIExpression()), !dbg !13983
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %mite_chan = alloca %struct.mite_channel*, align 8
  %flags = alloca i64, align 8
  %bits = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !13990, metadata !DIExpression()), !dbg !13991
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !13992, metadata !DIExpression()), !dbg !13993
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !13994
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !13995
  %1 = load i8*, i8** %private, align 8, !dbg !13995
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !13994
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !13993
  call void @llvm.dbg.declare(metadata %struct.mite_channel** %mite_chan, metadata !13996, metadata !DIExpression()), !dbg !13997
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13998, metadata !DIExpression()), !dbg !13999
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !14000, metadata !DIExpression()), !dbg !14001
  br label %do.body, !dbg !14002

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !14003

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !14004, metadata !DIExpression()), !dbg !14006
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !14007, metadata !DIExpression()), !dbg !14006
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !14006
  %conv = zext i1 %cmp to i32, !dbg !14006
  store i32 1, i32* %tmp, align 4, !dbg !14006
  %3 = load i32, i32* %tmp, align 4, !dbg !14006
  br label %do.body2, !dbg !14008

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !14009

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !14010

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !14012, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !14016, metadata !DIExpression()), !dbg !14015
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !14015
  %conv8 = zext i1 %cmp7 to i32, !dbg !14015
  store i32 1, i32* %tmp9, align 4, !dbg !14015
  %4 = load i32, i32* %tmp9, align 4, !dbg !14015
  %call = call i64 @arch_local_irq_save() #9, !dbg !14017
  store i64 %call, i64* %flags, align 8, !dbg !14017
  br label %do.end, !dbg !14017

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !14010

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !14009

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14018, !srcloc !14019
  br label %do.body12, !dbg !14018

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14020
  %mite_channel_lock = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 7, !dbg !14020
  store %struct.spinlock* %mite_channel_lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14021
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !14022
  %rlock.i = bitcast %union.anon.3* %7 to %struct.raw_spinlock*, !dbg !14022
  br label %do.end14, !dbg !14020

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !14018

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !14009

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !14008

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !14003

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14023
  %mite = getelementptr inbounds %struct.ni_private, %struct.ni_private* %8, i32 0, i32 42, !dbg !14024
  %9 = load %struct.mite*, %struct.mite** %mite, align 8, !dbg !14024
  %10 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14025
  %ai_mite_ring = getelementptr inbounds %struct.ni_private, %struct.ni_private* %10, i32 0, i32 46, !dbg !14026
  %11 = load %struct.mite_ring*, %struct.mite_ring** %ai_mite_ring, align 8, !dbg !14026
  %call19 = call %struct.mite_channel* @mite_request_channel(%struct.mite* %9, %struct.mite_ring* %11) #9, !dbg !14027
  store %struct.mite_channel* %call19, %struct.mite_channel** %mite_chan, align 8, !dbg !14028
  %12 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !14029
  %tobool = icmp ne %struct.mite_channel* %12, null, !dbg !14029
  br i1 %tobool, label %if.end, label %if.then, !dbg !14030

if.then:                                          ; preds = %do.end18
  %13 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14031
  %mite_channel_lock20 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %13, i32 0, i32 7, !dbg !14032
  %14 = load i64, i64* %flags, align 8, !dbg !14033
  store %struct.spinlock* %mite_channel_lock20, %struct.spinlock** %lock.addr.i41, align 8
  store i64 %14, i64* %flags.addr.i42, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !14034
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !14034
  store i32 1, i32* %tmp.i43, align 4, !dbg !14034
  %15 = load i32, i32* %tmp.i43, align 4, !dbg !14034
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !14035
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !14035
  store i32 1, i32* %tmp8.i44, align 4, !dbg !14035
  %16 = load i32, i32* %tmp8.i44, align 4, !dbg !14035
  %17 = load i64, i64* %flags.addr.i42, align 8, !dbg !14036
  call void @arch_local_irq_restore(i64 %17) #10, !dbg !14036
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14037, !srcloc !5582
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i41, align 8, !dbg !14038
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !14038
  %rlock.i45 = bitcast %union.anon.3* %19 to %struct.raw_spinlock*, !dbg !14038
  %20 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14039
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %20, i32 0, i32 4, !dbg !14039
  %21 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !14039
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %21, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.96, i64 0, i64 0)) #11, !dbg !14039
  store i32 -16, i32* %retval, align 4, !dbg !14040
  br label %return, !dbg !14040

if.end:                                           ; preds = %do.end18
  %22 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !14041
  %dir = getelementptr inbounds %struct.mite_channel, %struct.mite_channel* %22, i32 0, i32 2, !dbg !14042
  store i32 0, i32* %dir, align 4, !dbg !14043
  %23 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !14044
  %24 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14045
  %ai_mite_chan = getelementptr inbounds %struct.ni_private, %struct.ni_private* %24, i32 0, i32 43, !dbg !14046
  store %struct.mite_channel* %23, %struct.mite_channel** %ai_mite_chan, align 8, !dbg !14047
  %25 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !14048
  %channel = getelementptr inbounds %struct.mite_channel, %struct.mite_channel* %25, i32 0, i32 1, !dbg !14048
  %26 = load i32, i32* %channel, align 8, !dbg !14048
  %cmp21 = icmp ult i32 %26, 4, !dbg !14048
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !14048

cond.true:                                        ; preds = %if.end
  %27 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !14048
  %channel23 = getelementptr inbounds %struct.mite_channel, %struct.mite_channel* %27, i32 0, i32 1, !dbg !14048
  %28 = load i32, i32* %channel23, align 8, !dbg !14048
  %sh_prom = zext i32 %28 to i64, !dbg !14048
  %shl = shl i64 1, %sh_prom, !dbg !14048
  br label %cond.end34, !dbg !14048

cond.false:                                       ; preds = %if.end
  %29 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !14048
  %channel24 = getelementptr inbounds %struct.mite_channel, %struct.mite_channel* %29, i32 0, i32 1, !dbg !14048
  %30 = load i32, i32* %channel24, align 8, !dbg !14048
  %cmp25 = icmp eq i32 %30, 4, !dbg !14048
  br i1 %cmp25, label %cond.true27, label %cond.false28, !dbg !14048

cond.true27:                                      ; preds = %cond.false
  br label %cond.end, !dbg !14048

cond.false28:                                     ; preds = %cond.false
  %31 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !14048
  %channel29 = getelementptr inbounds %struct.mite_channel, %struct.mite_channel* %31, i32 0, i32 1, !dbg !14048
  %32 = load i32, i32* %channel29, align 8, !dbg !14048
  %cmp30 = icmp eq i32 %32, 5, !dbg !14048
  %33 = zext i1 %cmp30 to i64, !dbg !14048
  %cond = select i1 %cmp30, i32 5, i32 0, !dbg !14048
  br label %cond.end, !dbg !14048

cond.end:                                         ; preds = %cond.false28, %cond.true27
  %cond32 = phi i32 [ 3, %cond.true27 ], [ %cond, %cond.false28 ], !dbg !14048
  %conv33 = sext i32 %cond32 to i64, !dbg !14048
  br label %cond.end34, !dbg !14048

cond.end34:                                       ; preds = %cond.end, %cond.true
  %cond35 = phi i64 [ %shl, %cond.true ], [ %conv33, %cond.end ], !dbg !14048
  %conv36 = trunc i64 %cond35 to i32, !dbg !14048
  store i32 %conv36, i32* %bits, align 4, !dbg !14049
  %34 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14050
  %35 = load i32, i32* %bits, align 4, !dbg !14051
  %and = and i32 %35, 15, !dbg !14051
  %shl37 = shl i32 %and, 0, !dbg !14051
  call void @ni_set_bitfield(%struct.comedi_device* %34, i32 9, i32 15, i32 %shl37) #9, !dbg !14052
  %36 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14053
  %mite_channel_lock38 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %36, i32 0, i32 7, !dbg !14054
  %37 = load i64, i64* %flags, align 8, !dbg !14055
  store %struct.spinlock* %mite_channel_lock38, %struct.spinlock** %lock.addr.i39, align 8
  store i64 %37, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !14056
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !14056
  store i32 1, i32* %tmp.i, align 4, !dbg !14056
  %38 = load i32, i32* %tmp.i, align 4, !dbg !14056
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !14057
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !14057
  store i32 1, i32* %tmp8.i, align 4, !dbg !14057
  %39 = load i32, i32* %tmp8.i, align 4, !dbg !14057
  %40 = load i64, i64* %flags.addr.i, align 8, !dbg !14058
  call void @arch_local_irq_restore(i64 %40) #10, !dbg !14058
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14059, !srcloc !5582
  %41 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i39, align 8, !dbg !14060
  %42 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %41, i32 0, i32 0, !dbg !14060
  %rlock.i40 = bitcast %union.anon.3* %42 to %struct.raw_spinlock*, !dbg !14060
  store i32 0, i32* %retval, align 4, !dbg !14061
  br label %return, !dbg !14061

return:                                           ; preds = %cond.end34, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !14062
  ret i32 %43, !dbg !14062
}

; Function Attrs: noredzone
declare dso_local i32 @comedi_buf_write_alloc(%struct.comedi_subdevice*, i32) #1

; Function Attrs: noredzone
declare dso_local void @mite_prep_dma(%struct.mite_channel*, i32, i32) #1

; Function Attrs: noredzone
declare dso_local void @mite_dma_arm(%struct.mite_channel*) #1

; Function Attrs: noredzone
declare dso_local %struct.mite_channel* @mite_request_channel(%struct.mite*, %struct.mite_ring*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_set_bitfield(%struct.comedi_device* %dev, i32 %reg, i32 %bit_mask, i32 %bit_values) #2 !dbg !14063 {
entry:
  %lock.addr.i88 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i88, metadata !5432, metadata !DIExpression()), !dbg !14064
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5440, metadata !DIExpression()), !dbg !14066
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5232, metadata !DIExpression()), !dbg !14067
  %dev.addr = alloca %struct.comedi_device*, align 8
  %reg.addr = alloca i32, align 4
  %bit_mask.addr = alloca i32, align 4
  %bit_values.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !14074, metadata !DIExpression()), !dbg !14075
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !14076, metadata !DIExpression()), !dbg !14077
  store i32 %bit_mask, i32* %bit_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_mask.addr, metadata !14078, metadata !DIExpression()), !dbg !14079
  store i32 %bit_values, i32* %bit_values.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit_values.addr, metadata !14080, metadata !DIExpression()), !dbg !14081
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !14082, metadata !DIExpression()), !dbg !14083
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14084
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !14085
  %1 = load i8*, i8** %private, align 8, !dbg !14085
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !14084
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !14083
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !14086, metadata !DIExpression()), !dbg !14087
  br label %do.body, !dbg !14088

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !14089

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !14090, metadata !DIExpression()), !dbg !14092
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !14093, metadata !DIExpression()), !dbg !14092
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !14092
  %conv = zext i1 %cmp to i32, !dbg !14092
  store i32 1, i32* %tmp, align 4, !dbg !14092
  %3 = load i32, i32* %tmp, align 4, !dbg !14092
  br label %do.body2, !dbg !14094

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !14095

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !14096

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !14098, metadata !DIExpression()), !dbg !14101
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !14102, metadata !DIExpression()), !dbg !14101
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !14101
  %conv8 = zext i1 %cmp7 to i32, !dbg !14101
  store i32 1, i32* %tmp9, align 4, !dbg !14101
  %4 = load i32, i32* %tmp9, align 4, !dbg !14101
  %call = call i64 @arch_local_irq_save() #9, !dbg !14103
  store i64 %call, i64* %flags, align 8, !dbg !14103
  br label %do.end, !dbg !14103

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !14096

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !14095

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14104, !srcloc !14105
  br label %do.body12, !dbg !14104

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14106
  %soft_reg_copy_lock = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 6, !dbg !14106
  store %struct.spinlock* %soft_reg_copy_lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14107
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !14108
  %rlock.i = bitcast %union.anon.3* %7 to %struct.raw_spinlock*, !dbg !14108
  br label %do.end14, !dbg !14106

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !14104

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !14095

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !14094

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !14089

do.end18:                                         ; preds = %do.end17
  %8 = load i32, i32* %reg.addr, align 4, !dbg !14109
  switch i32 %8, label %sw.default [
    i32 73, label %sw.bb
    i32 75, label %sw.bb27
    i32 57, label %sw.bb39
    i32 9, label %sw.bb51
    i32 11, label %sw.bb63
    i32 7, label %sw.bb75
  ], !dbg !14110

sw.bb:                                            ; preds = %do.end18
  %9 = load i32, i32* %bit_mask.addr, align 4, !dbg !14111
  %neg = xor i32 %9, -1, !dbg !14113
  %10 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14114
  %int_a_enable_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %10, i32 0, i32 26, !dbg !14115
  %11 = load i16, i16* %int_a_enable_reg, align 2, !dbg !14116
  %conv19 = zext i16 %11 to i32, !dbg !14116
  %and = and i32 %conv19, %neg, !dbg !14116
  %conv20 = trunc i32 %and to i16, !dbg !14116
  store i16 %conv20, i16* %int_a_enable_reg, align 2, !dbg !14116
  %12 = load i32, i32* %bit_values.addr, align 4, !dbg !14117
  %13 = load i32, i32* %bit_mask.addr, align 4, !dbg !14118
  %and21 = and i32 %12, %13, !dbg !14119
  %14 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14120
  %int_a_enable_reg22 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %14, i32 0, i32 26, !dbg !14121
  %15 = load i16, i16* %int_a_enable_reg22, align 2, !dbg !14122
  %conv23 = zext i16 %15 to i32, !dbg !14122
  %or = or i32 %conv23, %and21, !dbg !14122
  %conv24 = trunc i32 %or to i16, !dbg !14122
  store i16 %conv24, i16* %int_a_enable_reg22, align 2, !dbg !14122
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14123
  %17 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14124
  %int_a_enable_reg25 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %17, i32 0, i32 26, !dbg !14125
  %18 = load i16, i16* %int_a_enable_reg25, align 2, !dbg !14125
  %conv26 = zext i16 %18 to i32, !dbg !14124
  %19 = load i32, i32* %reg.addr, align 4, !dbg !14126
  call void @ni_stc_writew(%struct.comedi_device* %16, i32 %conv26, i32 %19) #9, !dbg !14127
  br label %sw.epilog, !dbg !14128

sw.bb27:                                          ; preds = %do.end18
  %20 = load i32, i32* %bit_mask.addr, align 4, !dbg !14129
  %neg28 = xor i32 %20, -1, !dbg !14130
  %21 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14131
  %int_b_enable_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %21, i32 0, i32 27, !dbg !14132
  %22 = load i16, i16* %int_b_enable_reg, align 8, !dbg !14133
  %conv29 = zext i16 %22 to i32, !dbg !14133
  %and30 = and i32 %conv29, %neg28, !dbg !14133
  %conv31 = trunc i32 %and30 to i16, !dbg !14133
  store i16 %conv31, i16* %int_b_enable_reg, align 8, !dbg !14133
  %23 = load i32, i32* %bit_values.addr, align 4, !dbg !14134
  %24 = load i32, i32* %bit_mask.addr, align 4, !dbg !14135
  %and32 = and i32 %23, %24, !dbg !14136
  %25 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14137
  %int_b_enable_reg33 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %25, i32 0, i32 27, !dbg !14138
  %26 = load i16, i16* %int_b_enable_reg33, align 8, !dbg !14139
  %conv34 = zext i16 %26 to i32, !dbg !14139
  %or35 = or i32 %conv34, %and32, !dbg !14139
  %conv36 = trunc i32 %or35 to i16, !dbg !14139
  store i16 %conv36, i16* %int_b_enable_reg33, align 8, !dbg !14139
  %27 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14140
  %28 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14141
  %int_b_enable_reg37 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %28, i32 0, i32 27, !dbg !14142
  %29 = load i16, i16* %int_b_enable_reg37, align 8, !dbg !14142
  %conv38 = zext i16 %29 to i32, !dbg !14141
  %30 = load i32, i32* %reg.addr, align 4, !dbg !14143
  call void @ni_stc_writew(%struct.comedi_device* %27, i32 %conv38, i32 %30) #9, !dbg !14144
  br label %sw.epilog, !dbg !14145

sw.bb39:                                          ; preds = %do.end18
  %31 = load i32, i32* %bit_mask.addr, align 4, !dbg !14146
  %neg40 = xor i32 %31, -1, !dbg !14147
  %32 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14148
  %io_bidirection_pin_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %32, i32 0, i32 28, !dbg !14149
  %33 = load i16, i16* %io_bidirection_pin_reg, align 2, !dbg !14150
  %conv41 = zext i16 %33 to i32, !dbg !14150
  %and42 = and i32 %conv41, %neg40, !dbg !14150
  %conv43 = trunc i32 %and42 to i16, !dbg !14150
  store i16 %conv43, i16* %io_bidirection_pin_reg, align 2, !dbg !14150
  %34 = load i32, i32* %bit_values.addr, align 4, !dbg !14151
  %35 = load i32, i32* %bit_mask.addr, align 4, !dbg !14152
  %and44 = and i32 %34, %35, !dbg !14153
  %36 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14154
  %io_bidirection_pin_reg45 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %36, i32 0, i32 28, !dbg !14155
  %37 = load i16, i16* %io_bidirection_pin_reg45, align 2, !dbg !14156
  %conv46 = zext i16 %37 to i32, !dbg !14156
  %or47 = or i32 %conv46, %and44, !dbg !14156
  %conv48 = trunc i32 %or47 to i16, !dbg !14156
  store i16 %conv48, i16* %io_bidirection_pin_reg45, align 2, !dbg !14156
  %38 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14157
  %39 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14158
  %io_bidirection_pin_reg49 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %39, i32 0, i32 28, !dbg !14159
  %40 = load i16, i16* %io_bidirection_pin_reg49, align 2, !dbg !14159
  %conv50 = zext i16 %40 to i32, !dbg !14158
  %41 = load i32, i32* %reg.addr, align 4, !dbg !14160
  call void @ni_stc_writew(%struct.comedi_device* %38, i32 %conv50, i32 %41) #9, !dbg !14161
  br label %sw.epilog, !dbg !14162

sw.bb51:                                          ; preds = %do.end18
  %42 = load i32, i32* %bit_mask.addr, align 4, !dbg !14163
  %neg52 = xor i32 %42, -1, !dbg !14164
  %43 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14165
  %ai_ao_select_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %43, i32 0, i32 33, !dbg !14166
  %44 = load i16, i16* %ai_ao_select_reg, align 2, !dbg !14167
  %conv53 = zext i16 %44 to i32, !dbg !14167
  %and54 = and i32 %conv53, %neg52, !dbg !14167
  %conv55 = trunc i32 %and54 to i16, !dbg !14167
  store i16 %conv55, i16* %ai_ao_select_reg, align 2, !dbg !14167
  %45 = load i32, i32* %bit_values.addr, align 4, !dbg !14168
  %46 = load i32, i32* %bit_mask.addr, align 4, !dbg !14169
  %and56 = and i32 %45, %46, !dbg !14170
  %47 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14171
  %ai_ao_select_reg57 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %47, i32 0, i32 33, !dbg !14172
  %48 = load i16, i16* %ai_ao_select_reg57, align 2, !dbg !14173
  %conv58 = zext i16 %48 to i32, !dbg !14173
  %or59 = or i32 %conv58, %and56, !dbg !14173
  %conv60 = trunc i32 %or59 to i16, !dbg !14173
  store i16 %conv60, i16* %ai_ao_select_reg57, align 2, !dbg !14173
  %49 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14174
  %50 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14175
  %ai_ao_select_reg61 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %50, i32 0, i32 33, !dbg !14176
  %51 = load i16, i16* %ai_ao_select_reg61, align 2, !dbg !14176
  %conv62 = zext i16 %51 to i32, !dbg !14175
  %52 = load i32, i32* %reg.addr, align 4, !dbg !14177
  call void @ni_writeb(%struct.comedi_device* %49, i32 %conv62, i32 %52) #9, !dbg !14178
  br label %sw.epilog, !dbg !14179

sw.bb63:                                          ; preds = %do.end18
  %53 = load i32, i32* %bit_mask.addr, align 4, !dbg !14180
  %neg64 = xor i32 %53, -1, !dbg !14181
  %54 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14182
  %g0_g1_select_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %54, i32 0, i32 34, !dbg !14183
  %55 = load i16, i16* %g0_g1_select_reg, align 8, !dbg !14184
  %conv65 = zext i16 %55 to i32, !dbg !14184
  %and66 = and i32 %conv65, %neg64, !dbg !14184
  %conv67 = trunc i32 %and66 to i16, !dbg !14184
  store i16 %conv67, i16* %g0_g1_select_reg, align 8, !dbg !14184
  %56 = load i32, i32* %bit_values.addr, align 4, !dbg !14185
  %57 = load i32, i32* %bit_mask.addr, align 4, !dbg !14186
  %and68 = and i32 %56, %57, !dbg !14187
  %58 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14188
  %g0_g1_select_reg69 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %58, i32 0, i32 34, !dbg !14189
  %59 = load i16, i16* %g0_g1_select_reg69, align 8, !dbg !14190
  %conv70 = zext i16 %59 to i32, !dbg !14190
  %or71 = or i32 %conv70, %and68, !dbg !14190
  %conv72 = trunc i32 %or71 to i16, !dbg !14190
  store i16 %conv72, i16* %g0_g1_select_reg69, align 8, !dbg !14190
  %60 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14191
  %61 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14192
  %g0_g1_select_reg73 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %61, i32 0, i32 34, !dbg !14193
  %62 = load i16, i16* %g0_g1_select_reg73, align 8, !dbg !14193
  %conv74 = zext i16 %62 to i32, !dbg !14192
  %63 = load i32, i32* %reg.addr, align 4, !dbg !14194
  call void @ni_writeb(%struct.comedi_device* %60, i32 %conv74, i32 %63) #9, !dbg !14195
  br label %sw.epilog, !dbg !14196

sw.bb75:                                          ; preds = %do.end18
  %64 = load i32, i32* %bit_mask.addr, align 4, !dbg !14197
  %neg76 = xor i32 %64, -1, !dbg !14198
  %65 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14199
  %cdio_dma_select_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %65, i32 0, i32 35, !dbg !14200
  %66 = load i16, i16* %cdio_dma_select_reg, align 2, !dbg !14201
  %conv77 = zext i16 %66 to i32, !dbg !14201
  %and78 = and i32 %conv77, %neg76, !dbg !14201
  %conv79 = trunc i32 %and78 to i16, !dbg !14201
  store i16 %conv79, i16* %cdio_dma_select_reg, align 2, !dbg !14201
  %67 = load i32, i32* %bit_values.addr, align 4, !dbg !14202
  %68 = load i32, i32* %bit_mask.addr, align 4, !dbg !14203
  %and80 = and i32 %67, %68, !dbg !14204
  %69 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14205
  %cdio_dma_select_reg81 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %69, i32 0, i32 35, !dbg !14206
  %70 = load i16, i16* %cdio_dma_select_reg81, align 2, !dbg !14207
  %conv82 = zext i16 %70 to i32, !dbg !14207
  %or83 = or i32 %conv82, %and80, !dbg !14207
  %conv84 = trunc i32 %or83 to i16, !dbg !14207
  store i16 %conv84, i16* %cdio_dma_select_reg81, align 2, !dbg !14207
  %71 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14208
  %72 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14209
  %cdio_dma_select_reg85 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %72, i32 0, i32 35, !dbg !14210
  %73 = load i16, i16* %cdio_dma_select_reg85, align 2, !dbg !14210
  %conv86 = zext i16 %73 to i32, !dbg !14209
  %74 = load i32, i32* %reg.addr, align 4, !dbg !14211
  call void @ni_writeb(%struct.comedi_device* %71, i32 %conv86, i32 %74) #9, !dbg !14212
  br label %sw.epilog, !dbg !14213

sw.default:                                       ; preds = %do.end18
  %75 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14214
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %75, i32 0, i32 4, !dbg !14214
  %76 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !14214
  %77 = load i32, i32* %reg.addr, align 4, !dbg !14214
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %76, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.97, i64 0, i64 0), i32 %77) #11, !dbg !14214
  br label %sw.epilog, !dbg !14215

sw.epilog:                                        ; preds = %sw.default, %sw.bb75, %sw.bb63, %sw.bb51, %sw.bb39, %sw.bb27, %sw.bb
  %78 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14216
  %soft_reg_copy_lock87 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %78, i32 0, i32 6, !dbg !14217
  %79 = load i64, i64* %flags, align 8, !dbg !14218
  store %struct.spinlock* %soft_reg_copy_lock87, %struct.spinlock** %lock.addr.i88, align 8
  store i64 %79, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !14219
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !14219
  store i32 1, i32* %tmp.i, align 4, !dbg !14219
  %80 = load i32, i32* %tmp.i, align 4, !dbg !14219
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !14220
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !14220
  store i32 1, i32* %tmp8.i, align 4, !dbg !14220
  %81 = load i32, i32* %tmp8.i, align 4, !dbg !14220
  %82 = load i64, i64* %flags.addr.i, align 8, !dbg !14221
  call void @arch_local_irq_restore(i64 %82) #10, !dbg !14221
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14222, !srcloc !5582
  %83 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i88, align 8, !dbg !14223
  %84 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %83, i32 0, i32 0, !dbg !14223
  %rlock.i89 = bitcast %union.anon.3* %84 to %struct.raw_spinlock*, !dbg !14223
  ret void, !dbg !14224
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_release_ai_mite_channel(%struct.comedi_device* %dev) #2 !dbg !14225 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5432, metadata !DIExpression()), !dbg !14226
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5440, metadata !DIExpression()), !dbg !14228
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5232, metadata !DIExpression()), !dbg !14229
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !14236, metadata !DIExpression()), !dbg !14237
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !14238, metadata !DIExpression()), !dbg !14239
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14240
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !14241
  %1 = load i8*, i8** %private, align 8, !dbg !14241
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !14240
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !14239
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !14242, metadata !DIExpression()), !dbg !14243
  br label %do.body, !dbg !14244

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !14245

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !14246, metadata !DIExpression()), !dbg !14248
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !14249, metadata !DIExpression()), !dbg !14248
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !14248
  %conv = zext i1 %cmp to i32, !dbg !14248
  store i32 1, i32* %tmp, align 4, !dbg !14248
  %3 = load i32, i32* %tmp, align 4, !dbg !14248
  br label %do.body2, !dbg !14250

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !14251

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !14252

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !14254, metadata !DIExpression()), !dbg !14257
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !14258, metadata !DIExpression()), !dbg !14257
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !14257
  %conv8 = zext i1 %cmp7 to i32, !dbg !14257
  store i32 1, i32* %tmp9, align 4, !dbg !14257
  %4 = load i32, i32* %tmp9, align 4, !dbg !14257
  %call = call i64 @arch_local_irq_save() #9, !dbg !14259
  store i64 %call, i64* %flags, align 8, !dbg !14259
  br label %do.end, !dbg !14259

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !14252

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !14251

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14260, !srcloc !14261
  br label %do.body12, !dbg !14260

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14262
  %mite_channel_lock = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 7, !dbg !14262
  store %struct.spinlock* %mite_channel_lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14263
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !14264
  %rlock.i = bitcast %union.anon.3* %7 to %struct.raw_spinlock*, !dbg !14264
  br label %do.end14, !dbg !14262

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !14260

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !14251

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !14250

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !14245

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14265
  %ai_mite_chan = getelementptr inbounds %struct.ni_private, %struct.ni_private* %8, i32 0, i32 43, !dbg !14267
  %9 = load %struct.mite_channel*, %struct.mite_channel** %ai_mite_chan, align 8, !dbg !14267
  %tobool = icmp ne %struct.mite_channel* %9, null, !dbg !14265
  br i1 %tobool, label %if.then, label %if.end, !dbg !14268

if.then:                                          ; preds = %do.end18
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14269
  call void @ni_set_bitfield(%struct.comedi_device* %10, i32 9, i32 15, i32 0) #9, !dbg !14271
  %11 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14272
  %ai_mite_chan19 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %11, i32 0, i32 43, !dbg !14273
  %12 = load %struct.mite_channel*, %struct.mite_channel** %ai_mite_chan19, align 8, !dbg !14273
  call void @mite_release_channel(%struct.mite_channel* %12) #9, !dbg !14274
  %13 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14275
  %ai_mite_chan20 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %13, i32 0, i32 43, !dbg !14276
  store %struct.mite_channel* null, %struct.mite_channel** %ai_mite_chan20, align 8, !dbg !14277
  br label %if.end, !dbg !14278

if.end:                                           ; preds = %if.then, %do.end18
  %14 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14279
  %mite_channel_lock21 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %14, i32 0, i32 7, !dbg !14280
  %15 = load i64, i64* %flags, align 8, !dbg !14281
  store %struct.spinlock* %mite_channel_lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %15, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !14282
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !14282
  store i32 1, i32* %tmp.i, align 4, !dbg !14282
  %16 = load i32, i32* %tmp.i, align 4, !dbg !14282
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !14283
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !14283
  store i32 1, i32* %tmp8.i, align 4, !dbg !14283
  %17 = load i32, i32* %tmp8.i, align 4, !dbg !14283
  %18 = load i64, i64* %flags.addr.i, align 8, !dbg !14284
  call void @arch_local_irq_restore(i64 %18) #10, !dbg !14284
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14285, !srcloc !5582
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !14286
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !14286
  %rlock.i23 = bitcast %union.anon.3* %20 to %struct.raw_spinlock*, !dbg !14286
  ret void, !dbg !14287
}

; Function Attrs: noredzone
declare dso_local void @mite_release_channel(%struct.mite_channel*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_buf_n_bytes_ready(%struct.comedi_subdevice* %s) #2 !dbg !14288 {
entry:
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !14291, metadata !DIExpression()), !dbg !14292
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !14293
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %0, i32 0, i32 7, !dbg !14294
  %1 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !14294
  %buf_write_count = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %1, i32 0, i32 4, !dbg !14295
  %2 = load i32, i32* %buf_write_count, align 4, !dbg !14295
  %3 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !14296
  %async1 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %3, i32 0, i32 7, !dbg !14297
  %4 = load %struct.comedi_async*, %struct.comedi_async** %async1, align 8, !dbg !14297
  %buf_read_count = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %4, i32 0, i32 6, !dbg !14298
  %5 = load i32, i32* %buf_read_count, align 4, !dbg !14298
  %sub = sub i32 %2, %5, !dbg !14299
  ret i32 %sub, !dbg !14300
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_bytes_to_samples(%struct.comedi_subdevice* %s, i32 %nbytes) #2 !dbg !14301 {
entry:
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %nbytes.addr = alloca i32, align 4
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !14304, metadata !DIExpression()), !dbg !14305
  store i32 %nbytes, i32* %nbytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbytes.addr, metadata !14306, metadata !DIExpression()), !dbg !14307
  %0 = load i32, i32* %nbytes.addr, align 4, !dbg !14308
  %1 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !14309
  %call = call i32 @comedi_sample_shift(%struct.comedi_subdevice* %1) #9, !dbg !14310
  %shr = lshr i32 %0, %call, !dbg !14311
  ret i32 %shr, !dbg !14312
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_sample_shift(%struct.comedi_subdevice* %s) #2 !dbg !14313 {
entry:
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !14314, metadata !DIExpression()), !dbg !14315
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !14316
  %subdev_flags = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %0, i32 0, i32 4, !dbg !14317
  %1 = load i32, i32* %subdev_flags, align 4, !dbg !14317
  %and = and i32 %1, 268435456, !dbg !14318
  %tobool = icmp ne i32 %and, 0, !dbg !14316
  %2 = zext i1 %tobool to i64, !dbg !14316
  %cond = select i1 %tobool, i32 2, i32 1, !dbg !14316
  ret i32 %cond, !dbg !14319
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_samples_to_bytes(%struct.comedi_subdevice* %s, i32 %nsamples) #2 !dbg !14320 {
entry:
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %nsamples.addr = alloca i32, align 4
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !14321, metadata !DIExpression()), !dbg !14322
  store i32 %nsamples, i32* %nsamples.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nsamples.addr, metadata !14323, metadata !DIExpression()), !dbg !14324
  %0 = load i32, i32* %nsamples.addr, align 4, !dbg !14325
  %1 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !14326
  %call = call i32 @comedi_sample_shift(%struct.comedi_subdevice* %1) #9, !dbg !14327
  %shl = shl i32 %0, %call, !dbg !14328
  ret i32 %shl, !dbg !14329
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_ao_arm(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #2 !dbg !4388 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %ret = alloca i32, align 4
  %interrupt_b_bits = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !14330, metadata !DIExpression()), !dbg !14331
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !14332, metadata !DIExpression()), !dbg !14333
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !14334, metadata !DIExpression()), !dbg !14335
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14336
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !14337
  %1 = load i8*, i8** %private, align 8, !dbg !14337
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !14336
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !14335
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14338, metadata !DIExpression()), !dbg !14339
  call void @llvm.dbg.declare(metadata i32* %interrupt_b_bits, metadata !14340, metadata !DIExpression()), !dbg !14341
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14342, metadata !DIExpression()), !dbg !14343
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14344
  %ao_needs_arming = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 50, !dbg !14346
  %bf.load = load i16, i16* %ao_needs_arming, align 8, !dbg !14346
  %bf.lshr = lshr i16 %bf.load, 10, !dbg !14346
  %bf.clear = and i16 %bf.lshr, 1, !dbg !14346
  %bf.cast = zext i16 %bf.clear to i32, !dbg !14346
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !14344
  br i1 %tobool, label %if.end, label %if.then, !dbg !14347

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !14348
  br label %return, !dbg !14348

if.end:                                           ; preds = %entry
  %4 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14350
  %ao_needs_arming1 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %4, i32 0, i32 50, !dbg !14351
  %bf.load2 = load i16, i16* %ao_needs_arming1, align 8, !dbg !14352
  %bf.clear3 = and i16 %bf.load2, -1025, !dbg !14352
  store i16 %bf.clear3, i16* %ao_needs_arming1, align 8, !dbg !14352
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14353
  call void @ni_set_bits(%struct.comedi_device* %5, i32 75, i32 288, i32 0) #9, !dbg !14354
  store i32 32, i32* %interrupt_b_bits, align 4, !dbg !14355
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14356
  call void @ni_stc_writew(%struct.comedi_device* %6, i32 1, i32 84) #9, !dbg !14357
  %7 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14358
  %is_6xxx = getelementptr inbounds %struct.ni_private, %struct.ni_private* %7, i32 0, i32 50, !dbg !14360
  %bf.load4 = load i16, i16* %is_6xxx, align 8, !dbg !14360
  %bf.lshr5 = lshr i16 %bf.load4, 1, !dbg !14360
  %bf.clear6 = and i16 %bf.lshr5, 1, !dbg !14360
  %bf.cast7 = zext i16 %bf.clear6 to i32, !dbg !14360
  %tobool8 = icmp ne i32 %bf.cast7, 0, !dbg !14358
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !14361

if.then9:                                         ; preds = %if.end
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14362
  call void @ni_ao_win_outl(%struct.comedi_device* %8, i32 6, i32 19) #9, !dbg !14363
  br label %if.end10, !dbg !14363

if.end10:                                         ; preds = %if.then9, %if.end
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14364
  %call = call i32 @ni_ao_setup_MITE_dma(%struct.comedi_device* %9) #9, !dbg !14365
  store i32 %call, i32* %ret, align 4, !dbg !14366
  %10 = load i32, i32* %ret, align 4, !dbg !14367
  %tobool11 = icmp ne i32 %10, 0, !dbg !14367
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !14369

if.then12:                                        ; preds = %if.end10
  %11 = load i32, i32* %ret, align 4, !dbg !14370
  store i32 %11, i32* %retval, align 4, !dbg !14371
  br label %return, !dbg !14371

if.end13:                                         ; preds = %if.end10
  %12 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14372
  %call14 = call i32 @ni_ao_wait_for_dma_load(%struct.comedi_device* %12) #9, !dbg !14373
  store i32 %call14, i32* %ret, align 4, !dbg !14374
  %13 = load i32, i32* %ret, align 4, !dbg !14375
  %cmp = icmp slt i32 %13, 0, !dbg !14377
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !14378

if.then15:                                        ; preds = %if.end13
  %14 = load i32, i32* %ret, align 4, !dbg !14379
  store i32 %14, i32* %retval, align 4, !dbg !14380
  br label %return, !dbg !14380

if.end16:                                         ; preds = %if.end13
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14381
  %16 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14382
  %ao_mode3 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %16, i32 0, i32 16, !dbg !14383
  %17 = load i16, i16* %ao_mode3, align 2, !dbg !14383
  %conv = zext i16 %17 to i64, !dbg !14382
  %or = or i64 %conv, 4, !dbg !14384
  %conv17 = trunc i64 %or to i32, !dbg !14382
  call void @ni_stc_writew(%struct.comedi_device* %15, i32 %conv17, i32 70) #9, !dbg !14385
  %18 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14386
  %19 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14387
  %ao_mode318 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %19, i32 0, i32 16, !dbg !14388
  %20 = load i16, i16* %ao_mode318, align 2, !dbg !14388
  %conv19 = zext i16 %20 to i32, !dbg !14387
  call void @ni_stc_writew(%struct.comedi_device* %18, i32 %conv19, i32 70) #9, !dbg !14389
  store i32 0, i32* %i, align 4, !dbg !14390
  br label %for.cond, !dbg !14392

for.cond:                                         ; preds = %for.inc, %if.end16
  %21 = load i32, i32* %i, align 4, !dbg !14393
  %cmp20 = icmp slt i32 %21, 1000, !dbg !14395
  br i1 %cmp20, label %for.body, label %for.end, !dbg !14396

for.body:                                         ; preds = %for.cond
  call void @__const_udelay(i64 4295) #9, !dbg !14397
  %22 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14403
  %call22 = call i32 @ni_stc_readw(%struct.comedi_device* %22, i32 29) #9, !dbg !14405
  %conv23 = zext i32 %call22 to i64, !dbg !14405
  %and = and i64 %conv23, 32, !dbg !14406
  %cmp24 = icmp eq i64 %and, 0, !dbg !14407
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !14408

if.then26:                                        ; preds = %for.body
  br label %for.end, !dbg !14409

if.end27:                                         ; preds = %for.body
  br label %for.inc, !dbg !14410

for.inc:                                          ; preds = %if.end27
  %23 = load i32, i32* %i, align 4, !dbg !14411
  %inc = add i32 %23, 1, !dbg !14411
  store i32 %inc, i32* %i, align 4, !dbg !14411
  br label %for.cond, !dbg !14412, !llvm.loop !14413

for.end:                                          ; preds = %if.then26, %for.cond
  %24 = load i32, i32* %i, align 4, !dbg !14415
  %cmp28 = icmp eq i32 %24, 1000, !dbg !14417
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !14418

if.then30:                                        ; preds = %for.end
  %25 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14419
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %25, i32 0, i32 4, !dbg !14419
  %26 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !14419
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %26, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.98, i64 0, i64 0)) #11, !dbg !14419
  store i32 -5, i32* %retval, align 4, !dbg !14421
  br label %return, !dbg !14421

if.end31:                                         ; preds = %for.end
  %27 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14422
  call void @ni_stc_writew(%struct.comedi_device* %27, i32 8192, i32 3) #9, !dbg !14423
  %28 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14424
  %29 = load i32, i32* %interrupt_b_bits, align 4, !dbg !14425
  call void @ni_set_bits(%struct.comedi_device* %28, i32 75, i32 %29, i32 1) #9, !dbg !14426
  %30 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14427
  %31 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14428
  %ao_cmd1 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %31, i32 0, i32 17, !dbg !14429
  %32 = load i16, i16* %ao_cmd1, align 4, !dbg !14429
  %conv32 = zext i16 %32 to i64, !dbg !14428
  %or33 = or i64 1344, %conv32, !dbg !14430
  %conv34 = trunc i64 %or33 to i32, !dbg !14431
  call void @ni_stc_writew(%struct.comedi_device* %30, i32 %conv34, i32 9) #9, !dbg !14432
  store i32 0, i32* %retval, align 4, !dbg !14433
  br label %return, !dbg !14433

return:                                           ; preds = %if.end31, %if.then30, %if.then15, %if.then12, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !14434
  ret i32 %33, !dbg !14434
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_ao_win_outl(%struct.comedi_device* %dev, i32 %data, i32 %addr) #2 !dbg !14435 {
entry:
  %lock.addr.i20 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i20, metadata !5432, metadata !DIExpression()), !dbg !14436
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5440, metadata !DIExpression()), !dbg !14438
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5232, metadata !DIExpression()), !dbg !14439
  %dev.addr = alloca %struct.comedi_device*, align 8
  %data.addr = alloca i32, align 4
  %addr.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !14446, metadata !DIExpression()), !dbg !14447
  store i32 %data, i32* %data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data.addr, metadata !14448, metadata !DIExpression()), !dbg !14449
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !14450, metadata !DIExpression()), !dbg !14451
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !14452, metadata !DIExpression()), !dbg !14453
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14454
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !14455
  %1 = load i8*, i8** %private, align 8, !dbg !14455
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !14454
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !14453
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !14456, metadata !DIExpression()), !dbg !14457
  br label %do.body, !dbg !14458

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !14459

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !14460, metadata !DIExpression()), !dbg !14462
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !14463, metadata !DIExpression()), !dbg !14462
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !14462
  %conv = zext i1 %cmp to i32, !dbg !14462
  store i32 1, i32* %tmp, align 4, !dbg !14462
  %3 = load i32, i32* %tmp, align 4, !dbg !14462
  br label %do.body2, !dbg !14464

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !14465

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !14466

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !14468, metadata !DIExpression()), !dbg !14471
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !14472, metadata !DIExpression()), !dbg !14471
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !14471
  %conv8 = zext i1 %cmp7 to i32, !dbg !14471
  store i32 1, i32* %tmp9, align 4, !dbg !14471
  %4 = load i32, i32* %tmp9, align 4, !dbg !14471
  %call = call i64 @arch_local_irq_save() #9, !dbg !14473
  store i64 %call, i64* %flags, align 8, !dbg !14473
  br label %do.end, !dbg !14473

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !14466

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !14465

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14474, !srcloc !14475
  br label %do.body12, !dbg !14474

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14476
  %window_lock = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 5, !dbg !14476
  store %struct.spinlock* %window_lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14477
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !14478
  %rlock.i = bitcast %union.anon.3* %7 to %struct.raw_spinlock*, !dbg !14478
  br label %do.end14, !dbg !14476

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !14474

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !14465

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !14464

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !14459

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14479
  %9 = load i32, i32* %addr.addr, align 4, !dbg !14480
  call void @ni_writew(%struct.comedi_device* %8, i32 %9, i32 24) #9, !dbg !14481
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14482
  %11 = load i32, i32* %data.addr, align 4, !dbg !14483
  call void @ni_writel(%struct.comedi_device* %10, i32 %11, i32 30) #9, !dbg !14484
  %12 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14485
  %window_lock19 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %12, i32 0, i32 5, !dbg !14486
  %13 = load i64, i64* %flags, align 8, !dbg !14487
  store %struct.spinlock* %window_lock19, %struct.spinlock** %lock.addr.i20, align 8
  store i64 %13, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !14488
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !14488
  store i32 1, i32* %tmp.i, align 4, !dbg !14488
  %14 = load i32, i32* %tmp.i, align 4, !dbg !14488
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !14489
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !14489
  store i32 1, i32* %tmp8.i, align 4, !dbg !14489
  %15 = load i32, i32* %tmp8.i, align 4, !dbg !14489
  %16 = load i64, i64* %flags.addr.i, align 8, !dbg !14490
  call void @arch_local_irq_restore(i64 %16) #10, !dbg !14490
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14491, !srcloc !5582
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i20, align 8, !dbg !14492
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !14492
  %rlock.i21 = bitcast %union.anon.3* %18 to %struct.raw_spinlock*, !dbg !14492
  ret void, !dbg !14493
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_ao_setup_MITE_dma(%struct.comedi_device* %dev) #2 !dbg !14494 {
entry:
  %lock.addr.i38 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i38, metadata !5432, metadata !DIExpression()), !dbg !14495
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5440, metadata !DIExpression()), !dbg !14497
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5232, metadata !DIExpression()), !dbg !14498
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %retval1 = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !14505, metadata !DIExpression()), !dbg !14506
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !14507, metadata !DIExpression()), !dbg !14508
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14509
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !14510
  %1 = load i8*, i8** %private, align 8, !dbg !14510
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !14509
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !14508
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !14511, metadata !DIExpression()), !dbg !14512
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14513
  %write_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 22, !dbg !14514
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %write_subdev, align 8, !dbg !14514
  store %struct.comedi_subdevice* %4, %struct.comedi_subdevice** %s, align 8, !dbg !14512
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !14515, metadata !DIExpression()), !dbg !14516
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !14517, metadata !DIExpression()), !dbg !14518
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14519
  %call = call i32 @ni_request_ao_mite_channel(%struct.comedi_device* %5) #9, !dbg !14520
  store i32 %call, i32* %retval1, align 4, !dbg !14521
  %6 = load i32, i32* %retval1, align 4, !dbg !14522
  %tobool = icmp ne i32 %6, 0, !dbg !14522
  br i1 %tobool, label %if.then, label %if.end, !dbg !14524

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %retval1, align 4, !dbg !14525
  store i32 %7, i32* %retval, align 4, !dbg !14526
  br label %return, !dbg !14526

if.end:                                           ; preds = %entry
  %8 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !14527
  %9 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !14528
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %9, i32 0, i32 7, !dbg !14529
  %10 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !14529
  %prealloc_bufsz = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %10, i32 0, i32 1, !dbg !14530
  %11 = load i32, i32* %prealloc_bufsz, align 8, !dbg !14530
  %call2 = call i32 @comedi_buf_read_alloc(%struct.comedi_subdevice* %8, i32 %11) #9, !dbg !14531
  br label %do.body, !dbg !14532

do.body:                                          ; preds = %if.end
  br label %do.body3, !dbg !14533

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !14534, metadata !DIExpression()), !dbg !14536
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !14537, metadata !DIExpression()), !dbg !14536
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !14536
  %conv = zext i1 %cmp to i32, !dbg !14536
  store i32 1, i32* %tmp, align 4, !dbg !14536
  %12 = load i32, i32* %tmp, align 4, !dbg !14536
  br label %do.body4, !dbg !14538

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !14539

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !14540

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !14542, metadata !DIExpression()), !dbg !14545
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !14546, metadata !DIExpression()), !dbg !14545
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !14545
  %conv10 = zext i1 %cmp9 to i32, !dbg !14545
  store i32 1, i32* %tmp11, align 4, !dbg !14545
  %13 = load i32, i32* %tmp11, align 4, !dbg !14545
  %call12 = call i64 @arch_local_irq_save() #9, !dbg !14547
  store i64 %call12, i64* %flags, align 8, !dbg !14547
  br label %do.end, !dbg !14547

do.end:                                           ; preds = %do.body6
  br label %do.end13, !dbg !14540

do.end13:                                         ; preds = %do.end
  br label %do.body14, !dbg !14539

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14548, !srcloc !14549
  br label %do.body15, !dbg !14548

do.body15:                                        ; preds = %do.body14
  %14 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14550
  %mite_channel_lock = getelementptr inbounds %struct.ni_private, %struct.ni_private* %14, i32 0, i32 7, !dbg !14550
  store %struct.spinlock* %mite_channel_lock, %struct.spinlock** %lock.addr.i, align 8
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14551
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !14552
  %rlock.i = bitcast %union.anon.3* %16 to %struct.raw_spinlock*, !dbg !14552
  br label %do.end17, !dbg !14550

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !14548

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !14539

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !14538

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !14533

do.end21:                                         ; preds = %do.end20
  %17 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14553
  %ao_mite_chan = getelementptr inbounds %struct.ni_private, %struct.ni_private* %17, i32 0, i32 44, !dbg !14555
  %18 = load %struct.mite_channel*, %struct.mite_channel** %ao_mite_chan, align 8, !dbg !14555
  %tobool22 = icmp ne %struct.mite_channel* %18, null, !dbg !14553
  br i1 %tobool22, label %if.then23, label %if.else35, !dbg !14556

if.then23:                                        ; preds = %do.end21
  %19 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14557
  %is_611x = getelementptr inbounds %struct.ni_private, %struct.ni_private* %19, i32 0, i32 50, !dbg !14560
  %bf.load = load i16, i16* %is_611x, align 8, !dbg !14560
  %bf.lshr = lshr i16 %bf.load, 2, !dbg !14560
  %bf.clear = and i16 %bf.lshr, 1, !dbg !14560
  %bf.cast = zext i16 %bf.clear to i32, !dbg !14560
  %tobool24 = icmp ne i32 %bf.cast, 0, !dbg !14557
  br i1 %tobool24, label %if.then30, label %lor.lhs.false, !dbg !14561

lor.lhs.false:                                    ; preds = %if.then23
  %20 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14562
  %is_6713 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %20, i32 0, i32 50, !dbg !14563
  %bf.load25 = load i16, i16* %is_6713, align 8, !dbg !14563
  %bf.lshr26 = lshr i16 %bf.load25, 9, !dbg !14563
  %bf.clear27 = and i16 %bf.lshr26, 1, !dbg !14563
  %bf.cast28 = zext i16 %bf.clear27 to i32, !dbg !14563
  %tobool29 = icmp ne i32 %bf.cast28, 0, !dbg !14562
  br i1 %tobool29, label %if.then30, label %if.else, !dbg !14564

if.then30:                                        ; preds = %lor.lhs.false, %if.then23
  %21 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14565
  %ao_mite_chan31 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %21, i32 0, i32 44, !dbg !14567
  %22 = load %struct.mite_channel*, %struct.mite_channel** %ao_mite_chan31, align 8, !dbg !14567
  call void @mite_prep_dma(%struct.mite_channel* %22, i32 32, i32 32) #9, !dbg !14568
  br label %if.end33, !dbg !14569

if.else:                                          ; preds = %lor.lhs.false
  %23 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14570
  %ao_mite_chan32 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %23, i32 0, i32 44, !dbg !14572
  %24 = load %struct.mite_channel*, %struct.mite_channel** %ao_mite_chan32, align 8, !dbg !14572
  call void @mite_prep_dma(%struct.mite_channel* %24, i32 16, i32 32) #9, !dbg !14573
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then30
  %25 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14574
  %ao_mite_chan34 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %25, i32 0, i32 44, !dbg !14575
  %26 = load %struct.mite_channel*, %struct.mite_channel** %ao_mite_chan34, align 8, !dbg !14575
  call void @mite_dma_arm(%struct.mite_channel* %26) #9, !dbg !14576
  br label %if.end36, !dbg !14577

if.else35:                                        ; preds = %do.end21
  store i32 -5, i32* %retval1, align 4, !dbg !14578
  br label %if.end36

if.end36:                                         ; preds = %if.else35, %if.end33
  %27 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14580
  %mite_channel_lock37 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %27, i32 0, i32 7, !dbg !14581
  %28 = load i64, i64* %flags, align 8, !dbg !14582
  store %struct.spinlock* %mite_channel_lock37, %struct.spinlock** %lock.addr.i38, align 8
  store i64 %28, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !14583
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !14583
  store i32 1, i32* %tmp.i, align 4, !dbg !14583
  %29 = load i32, i32* %tmp.i, align 4, !dbg !14583
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !14584
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !14584
  store i32 1, i32* %tmp8.i, align 4, !dbg !14584
  %30 = load i32, i32* %tmp8.i, align 4, !dbg !14584
  %31 = load i64, i64* %flags.addr.i, align 8, !dbg !14585
  call void @arch_local_irq_restore(i64 %31) #10, !dbg !14585
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14586, !srcloc !5582
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i38, align 8, !dbg !14587
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !14587
  %rlock.i39 = bitcast %union.anon.3* %33 to %struct.raw_spinlock*, !dbg !14587
  %34 = load i32, i32* %retval1, align 4, !dbg !14588
  store i32 %34, i32* %retval, align 4, !dbg !14589
  br label %return, !dbg !14589

return:                                           ; preds = %if.end36, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !14590
  ret i32 %35, !dbg !14590
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_ao_wait_for_dma_load(%struct.comedi_device* %dev) #2 !dbg !4391 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %i = alloca i32, align 4
  %b_status = alloca i16, align 2
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !14591, metadata !DIExpression()), !dbg !14592
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14593, metadata !DIExpression()), !dbg !14594
  store i32 0, i32* %i, align 4, !dbg !14595
  br label %for.cond, !dbg !14597

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !14598
  %cmp = icmp slt i32 %0, 10000, !dbg !14600
  br i1 %cmp, label %for.body, label %for.end, !dbg !14601

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16* %b_status, metadata !14602, metadata !DIExpression()), !dbg !14604
  %1 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14605
  %call = call i32 @ni_stc_readw(%struct.comedi_device* %1, i32 3) #9, !dbg !14606
  %conv = trunc i32 %call to i16, !dbg !14606
  store i16 %conv, i16* %b_status, align 2, !dbg !14607
  %2 = load i16, i16* %b_status, align 2, !dbg !14608
  %conv1 = zext i16 %2 to i64, !dbg !14608
  %and = and i64 %conv1, 8192, !dbg !14610
  %tobool = icmp ne i64 %and, 0, !dbg !14610
  br i1 %tobool, label %if.then, label %if.end, !dbg !14611

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !14612

if.end:                                           ; preds = %for.body
  call void @usleep_range(i64 10, i64 100) #9, !dbg !14613
  br label %for.inc, !dbg !14614

for.inc:                                          ; preds = %if.end
  %3 = load i32, i32* %i, align 4, !dbg !14615
  %inc = add i32 %3, 1, !dbg !14615
  store i32 %inc, i32* %i, align 4, !dbg !14615
  br label %for.cond, !dbg !14616, !llvm.loop !14617

for.end:                                          ; preds = %if.then, %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !14619
  %cmp2 = icmp eq i32 %4, 10000, !dbg !14621
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !14622

if.then4:                                         ; preds = %for.end
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14623
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %5, i32 0, i32 4, !dbg !14623
  %6 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !14623
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.100, i64 0, i64 0)) #11, !dbg !14623
  store i32 -32, i32* %retval, align 4, !dbg !14625
  br label %return, !dbg !14625

if.end5:                                          ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !14626
  br label %return, !dbg !14626

return:                                           ; preds = %if.end5, %if.then4
  %7 = load i32, i32* %retval, align 4, !dbg !14627
  ret i32 %7, !dbg !14627
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_request_ao_mite_channel(%struct.comedi_device* %dev) #2 !dbg !14628 {
entry:
  %lock.addr.i41 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i41, metadata !5432, metadata !DIExpression()), !dbg !14629
  %flags.addr.i42 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i42, metadata !5440, metadata !DIExpression()), !dbg !14633
  %tmp.i43 = alloca i32, align 4
  %tmp8.i44 = alloca i32, align 4
  %lock.addr.i39 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i39, metadata !5432, metadata !DIExpression()), !dbg !14634
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5440, metadata !DIExpression()), !dbg !14636
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5232, metadata !DIExpression()), !dbg !14637
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %mite_chan = alloca %struct.mite_channel*, align 8
  %flags = alloca i64, align 8
  %bits = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !14644, metadata !DIExpression()), !dbg !14645
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !14646, metadata !DIExpression()), !dbg !14647
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14648
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !14649
  %1 = load i8*, i8** %private, align 8, !dbg !14649
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !14648
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !14647
  call void @llvm.dbg.declare(metadata %struct.mite_channel** %mite_chan, metadata !14650, metadata !DIExpression()), !dbg !14651
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !14652, metadata !DIExpression()), !dbg !14653
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !14654, metadata !DIExpression()), !dbg !14655
  br label %do.body, !dbg !14656

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !14657

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !14658, metadata !DIExpression()), !dbg !14660
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !14661, metadata !DIExpression()), !dbg !14660
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !14660
  %conv = zext i1 %cmp to i32, !dbg !14660
  store i32 1, i32* %tmp, align 4, !dbg !14660
  %3 = load i32, i32* %tmp, align 4, !dbg !14660
  br label %do.body2, !dbg !14662

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !14663

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !14664

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !14666, metadata !DIExpression()), !dbg !14669
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !14670, metadata !DIExpression()), !dbg !14669
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !14669
  %conv8 = zext i1 %cmp7 to i32, !dbg !14669
  store i32 1, i32* %tmp9, align 4, !dbg !14669
  %4 = load i32, i32* %tmp9, align 4, !dbg !14669
  %call = call i64 @arch_local_irq_save() #9, !dbg !14671
  store i64 %call, i64* %flags, align 8, !dbg !14671
  br label %do.end, !dbg !14671

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !14664

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !14663

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14672, !srcloc !14673
  br label %do.body12, !dbg !14672

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14674
  %mite_channel_lock = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 7, !dbg !14674
  store %struct.spinlock* %mite_channel_lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14675
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !14676
  %rlock.i = bitcast %union.anon.3* %7 to %struct.raw_spinlock*, !dbg !14676
  br label %do.end14, !dbg !14674

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !14672

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !14663

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !14662

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !14657

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14677
  %mite = getelementptr inbounds %struct.ni_private, %struct.ni_private* %8, i32 0, i32 42, !dbg !14678
  %9 = load %struct.mite*, %struct.mite** %mite, align 8, !dbg !14678
  %10 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14679
  %ao_mite_ring = getelementptr inbounds %struct.ni_private, %struct.ni_private* %10, i32 0, i32 47, !dbg !14680
  %11 = load %struct.mite_ring*, %struct.mite_ring** %ao_mite_ring, align 8, !dbg !14680
  %call19 = call %struct.mite_channel* @mite_request_channel(%struct.mite* %9, %struct.mite_ring* %11) #9, !dbg !14681
  store %struct.mite_channel* %call19, %struct.mite_channel** %mite_chan, align 8, !dbg !14682
  %12 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !14683
  %tobool = icmp ne %struct.mite_channel* %12, null, !dbg !14683
  br i1 %tobool, label %if.end, label %if.then, !dbg !14684

if.then:                                          ; preds = %do.end18
  %13 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14685
  %mite_channel_lock20 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %13, i32 0, i32 7, !dbg !14686
  %14 = load i64, i64* %flags, align 8, !dbg !14687
  store %struct.spinlock* %mite_channel_lock20, %struct.spinlock** %lock.addr.i41, align 8
  store i64 %14, i64* %flags.addr.i42, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !14688
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !14688
  store i32 1, i32* %tmp.i43, align 4, !dbg !14688
  %15 = load i32, i32* %tmp.i43, align 4, !dbg !14688
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !14689
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !14689
  store i32 1, i32* %tmp8.i44, align 4, !dbg !14689
  %16 = load i32, i32* %tmp8.i44, align 4, !dbg !14689
  %17 = load i64, i64* %flags.addr.i42, align 8, !dbg !14690
  call void @arch_local_irq_restore(i64 %17) #10, !dbg !14690
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14691, !srcloc !5582
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i41, align 8, !dbg !14692
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !14692
  %rlock.i45 = bitcast %union.anon.3* %19 to %struct.raw_spinlock*, !dbg !14692
  %20 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14693
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %20, i32 0, i32 4, !dbg !14693
  %21 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !14693
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %21, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.99, i64 0, i64 0)) #11, !dbg !14693
  store i32 -16, i32* %retval, align 4, !dbg !14694
  br label %return, !dbg !14694

if.end:                                           ; preds = %do.end18
  %22 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !14695
  %dir = getelementptr inbounds %struct.mite_channel, %struct.mite_channel* %22, i32 0, i32 2, !dbg !14696
  store i32 1, i32* %dir, align 4, !dbg !14697
  %23 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !14698
  %24 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14699
  %ao_mite_chan = getelementptr inbounds %struct.ni_private, %struct.ni_private* %24, i32 0, i32 44, !dbg !14700
  store %struct.mite_channel* %23, %struct.mite_channel** %ao_mite_chan, align 8, !dbg !14701
  %25 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !14702
  %channel = getelementptr inbounds %struct.mite_channel, %struct.mite_channel* %25, i32 0, i32 1, !dbg !14702
  %26 = load i32, i32* %channel, align 8, !dbg !14702
  %cmp21 = icmp ult i32 %26, 4, !dbg !14702
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !14702

cond.true:                                        ; preds = %if.end
  %27 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !14702
  %channel23 = getelementptr inbounds %struct.mite_channel, %struct.mite_channel* %27, i32 0, i32 1, !dbg !14702
  %28 = load i32, i32* %channel23, align 8, !dbg !14702
  %sh_prom = zext i32 %28 to i64, !dbg !14702
  %shl = shl i64 1, %sh_prom, !dbg !14702
  br label %cond.end34, !dbg !14702

cond.false:                                       ; preds = %if.end
  %29 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !14702
  %channel24 = getelementptr inbounds %struct.mite_channel, %struct.mite_channel* %29, i32 0, i32 1, !dbg !14702
  %30 = load i32, i32* %channel24, align 8, !dbg !14702
  %cmp25 = icmp eq i32 %30, 4, !dbg !14702
  br i1 %cmp25, label %cond.true27, label %cond.false28, !dbg !14702

cond.true27:                                      ; preds = %cond.false
  br label %cond.end, !dbg !14702

cond.false28:                                     ; preds = %cond.false
  %31 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !14702
  %channel29 = getelementptr inbounds %struct.mite_channel, %struct.mite_channel* %31, i32 0, i32 1, !dbg !14702
  %32 = load i32, i32* %channel29, align 8, !dbg !14702
  %cmp30 = icmp eq i32 %32, 5, !dbg !14702
  %33 = zext i1 %cmp30 to i64, !dbg !14702
  %cond = select i1 %cmp30, i32 5, i32 0, !dbg !14702
  br label %cond.end, !dbg !14702

cond.end:                                         ; preds = %cond.false28, %cond.true27
  %cond32 = phi i32 [ 3, %cond.true27 ], [ %cond, %cond.false28 ], !dbg !14702
  %conv33 = sext i32 %cond32 to i64, !dbg !14702
  br label %cond.end34, !dbg !14702

cond.end34:                                       ; preds = %cond.end, %cond.true
  %cond35 = phi i64 [ %shl, %cond.true ], [ %conv33, %cond.end ], !dbg !14702
  %conv36 = trunc i64 %cond35 to i32, !dbg !14702
  store i32 %conv36, i32* %bits, align 4, !dbg !14703
  %34 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14704
  %35 = load i32, i32* %bits, align 4, !dbg !14705
  %and = and i32 %35, 15, !dbg !14705
  %shl37 = shl i32 %and, 4, !dbg !14705
  call void @ni_set_bitfield(%struct.comedi_device* %34, i32 9, i32 240, i32 %shl37) #9, !dbg !14706
  %36 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14707
  %mite_channel_lock38 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %36, i32 0, i32 7, !dbg !14708
  %37 = load i64, i64* %flags, align 8, !dbg !14709
  store %struct.spinlock* %mite_channel_lock38, %struct.spinlock** %lock.addr.i39, align 8
  store i64 %37, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !14710
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !14710
  store i32 1, i32* %tmp.i, align 4, !dbg !14710
  %38 = load i32, i32* %tmp.i, align 4, !dbg !14710
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !14711
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !14711
  store i32 1, i32* %tmp8.i, align 4, !dbg !14711
  %39 = load i32, i32* %tmp8.i, align 4, !dbg !14711
  %40 = load i64, i64* %flags.addr.i, align 8, !dbg !14712
  call void @arch_local_irq_restore(i64 %40) #10, !dbg !14712
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14713, !srcloc !5582
  %41 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i39, align 8, !dbg !14714
  %42 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %41, i32 0, i32 0, !dbg !14714
  %rlock.i40 = bitcast %union.anon.3* %42 to %struct.raw_spinlock*, !dbg !14714
  store i32 0, i32* %retval, align 4, !dbg !14715
  br label %return, !dbg !14715

return:                                           ; preds = %cond.end34, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !14716
  ret i32 %43, !dbg !14716
}

; Function Attrs: noredzone
declare dso_local i32 @comedi_buf_read_alloc(%struct.comedi_subdevice*, i32) #1

; Function Attrs: noredzone
declare dso_local void @usleep_range(i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_ao_win_outw(%struct.comedi_device* %dev, i32 %data, i32 %addr) #2 !dbg !14717 {
entry:
  %lock.addr.i20 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i20, metadata !5432, metadata !DIExpression()), !dbg !14718
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5440, metadata !DIExpression()), !dbg !14720
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5232, metadata !DIExpression()), !dbg !14721
  %dev.addr = alloca %struct.comedi_device*, align 8
  %data.addr = alloca i32, align 4
  %addr.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !14728, metadata !DIExpression()), !dbg !14729
  store i32 %data, i32* %data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data.addr, metadata !14730, metadata !DIExpression()), !dbg !14731
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !14732, metadata !DIExpression()), !dbg !14733
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !14734, metadata !DIExpression()), !dbg !14735
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14736
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !14737
  %1 = load i8*, i8** %private, align 8, !dbg !14737
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !14736
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !14735
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !14738, metadata !DIExpression()), !dbg !14739
  br label %do.body, !dbg !14740

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !14741

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !14742, metadata !DIExpression()), !dbg !14744
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !14745, metadata !DIExpression()), !dbg !14744
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !14744
  %conv = zext i1 %cmp to i32, !dbg !14744
  store i32 1, i32* %tmp, align 4, !dbg !14744
  %3 = load i32, i32* %tmp, align 4, !dbg !14744
  br label %do.body2, !dbg !14746

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !14747

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !14748

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !14750, metadata !DIExpression()), !dbg !14753
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !14754, metadata !DIExpression()), !dbg !14753
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !14753
  %conv8 = zext i1 %cmp7 to i32, !dbg !14753
  store i32 1, i32* %tmp9, align 4, !dbg !14753
  %4 = load i32, i32* %tmp9, align 4, !dbg !14753
  %call = call i64 @arch_local_irq_save() #9, !dbg !14755
  store i64 %call, i64* %flags, align 8, !dbg !14755
  br label %do.end, !dbg !14755

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !14748

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !14747

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14756, !srcloc !14757
  br label %do.body12, !dbg !14756

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14758
  %window_lock = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 5, !dbg !14758
  store %struct.spinlock* %window_lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14759
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !14760
  %rlock.i = bitcast %union.anon.3* %7 to %struct.raw_spinlock*, !dbg !14760
  br label %do.end14, !dbg !14758

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !14756

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !14747

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !14746

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !14741

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14761
  %9 = load i32, i32* %addr.addr, align 4, !dbg !14762
  call void @ni_writew(%struct.comedi_device* %8, i32 %9, i32 24) #9, !dbg !14763
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14764
  %11 = load i32, i32* %data.addr, align 4, !dbg !14765
  call void @ni_writew(%struct.comedi_device* %10, i32 %11, i32 30) #9, !dbg !14766
  %12 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14767
  %window_lock19 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %12, i32 0, i32 5, !dbg !14768
  %13 = load i64, i64* %flags, align 8, !dbg !14769
  store %struct.spinlock* %window_lock19, %struct.spinlock** %lock.addr.i20, align 8
  store i64 %13, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !14770
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !14770
  store i32 1, i32* %tmp.i, align 4, !dbg !14770
  %14 = load i32, i32* %tmp.i, align 4, !dbg !14770
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !14771
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !14771
  store i32 1, i32* %tmp8.i, align 4, !dbg !14771
  %15 = load i32, i32* %tmp8.i, align 4, !dbg !14771
  %16 = load i64, i64* %flags.addr.i, align 8, !dbg !14772
  call void @arch_local_irq_restore(i64 %16) #10, !dbg !14772
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14773, !srcloc !5582
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i20, align 8, !dbg !14774
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !14774
  %rlock.i21 = bitcast %union.anon.3* %18 to %struct.raw_spinlock*, !dbg !14774
  ret void, !dbg !14775
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_ao_config_chanlist(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, i32* %chanspec, i32 %n_chans, i32 %timed) #2 !dbg !14776 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %chanspec.addr = alloca i32*, align 8
  %n_chans.addr = alloca i32, align 4
  %timed.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !14779, metadata !DIExpression()), !dbg !14780
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !14781, metadata !DIExpression()), !dbg !14782
  store i32* %chanspec, i32** %chanspec.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %chanspec.addr, metadata !14783, metadata !DIExpression()), !dbg !14784
  store i32 %n_chans, i32* %n_chans.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_chans.addr, metadata !14785, metadata !DIExpression()), !dbg !14786
  store i32 %timed, i32* %timed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timed.addr, metadata !14787, metadata !DIExpression()), !dbg !14788
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !14789, metadata !DIExpression()), !dbg !14790
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14791
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !14792
  %1 = load i8*, i8** %private, align 8, !dbg !14792
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !14791
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !14790
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14793
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 50, !dbg !14795
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !14795
  %bf.clear = and i16 %bf.load, 1, !dbg !14795
  %bf.cast = zext i16 %bf.clear to i32, !dbg !14795
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !14793
  br i1 %tobool, label %if.then, label %if.else, !dbg !14796

if.then:                                          ; preds = %entry
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14797
  %5 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !14798
  %6 = load i32*, i32** %chanspec.addr, align 8, !dbg !14799
  %7 = load i32, i32* %n_chans.addr, align 4, !dbg !14800
  %8 = load i32, i32* %timed.addr, align 4, !dbg !14801
  %call = call i32 @ni_m_series_ao_config_chanlist(%struct.comedi_device* %4, %struct.comedi_subdevice* %5, i32* %6, i32 %7, i32 %8) #9, !dbg !14802
  store i32 %call, i32* %retval, align 4, !dbg !14803
  br label %return, !dbg !14803

if.else:                                          ; preds = %entry
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14804
  %10 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !14805
  %11 = load i32*, i32** %chanspec.addr, align 8, !dbg !14806
  %12 = load i32, i32* %n_chans.addr, align 4, !dbg !14807
  %call1 = call i32 @ni_old_ao_config_chanlist(%struct.comedi_device* %9, %struct.comedi_subdevice* %10, i32* %11, i32 %12) #9, !dbg !14808
  store i32 %call1, i32* %retval, align 4, !dbg !14809
  br label %return, !dbg !14809

return:                                           ; preds = %if.else, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !14810
  ret i32 %13, !dbg !14810
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_offset_munge(%struct.comedi_subdevice* %s, i32 %val) #2 !dbg !14811 {
entry:
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %val.addr = alloca i32, align 4
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !14812, metadata !DIExpression()), !dbg !14813
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14814, metadata !DIExpression()), !dbg !14815
  %0 = load i32, i32* %val.addr, align 4, !dbg !14816
  %1 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !14817
  %maxdata = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %1, i32 0, i32 13, !dbg !14818
  %2 = load i32, i32* %maxdata, align 8, !dbg !14818
  %xor = xor i32 %0, %2, !dbg !14819
  %3 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !14820
  %maxdata1 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %3, i32 0, i32 13, !dbg !14821
  %4 = load i32, i32* %maxdata1, align 8, !dbg !14821
  %shr = lshr i32 %4, 1, !dbg !14822
  %xor2 = xor i32 %xor, %shr, !dbg !14823
  ret i32 %xor2, !dbg !14824
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @comedi_range_is_bipolar(%struct.comedi_subdevice* %s, i32 %range) #2 !dbg !14825 {
entry:
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %range.addr = alloca i32, align 4
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !14828, metadata !DIExpression()), !dbg !14829
  store i32 %range, i32* %range.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %range.addr, metadata !14830, metadata !DIExpression()), !dbg !14831
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !14832
  %range_table = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %0, i32 0, i32 15, !dbg !14833
  %1 = load %struct.comedi_lrange*, %struct.comedi_lrange** %range_table, align 8, !dbg !14833
  %range1 = getelementptr inbounds %struct.comedi_lrange, %struct.comedi_lrange* %1, i32 0, i32 1, !dbg !14834
  %2 = load i32, i32* %range.addr, align 4, !dbg !14835
  %idxprom = zext i32 %2 to i64, !dbg !14832
  %arrayidx = getelementptr [0 x %struct.comedi_krange], [0 x %struct.comedi_krange]* %range1, i64 0, i64 %idxprom, !dbg !14832
  %min = getelementptr inbounds %struct.comedi_krange, %struct.comedi_krange* %arrayidx, i32 0, i32 0, !dbg !14836
  %3 = load i32, i32* %min, align 4, !dbg !14836
  %cmp = icmp slt i32 %3, 0, !dbg !14837
  ret i1 %cmp, !dbg !14838
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_m_series_ao_config_chanlist(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, i32* %chanspec, i32 %n_chans, i32 %timed) #2 !dbg !14839 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %chanspec.addr = alloca i32*, align 8
  %n_chans.addr = alloca i32, align 4
  %timed.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  %range = alloca i32, align 4
  %chan = alloca i32, align 4
  %conf = alloca i32, align 4
  %i = alloca i32, align 4
  %invert = alloca i32, align 4
  %krange = alloca %struct.comedi_krange*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !14840, metadata !DIExpression()), !dbg !14841
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !14842, metadata !DIExpression()), !dbg !14843
  store i32* %chanspec, i32** %chanspec.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %chanspec.addr, metadata !14844, metadata !DIExpression()), !dbg !14845
  store i32 %n_chans, i32* %n_chans.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_chans.addr, metadata !14846, metadata !DIExpression()), !dbg !14847
  store i32 %timed, i32* %timed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timed.addr, metadata !14848, metadata !DIExpression()), !dbg !14849
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !14850, metadata !DIExpression()), !dbg !14851
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14852
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !14853
  %1 = load i8*, i8** %private, align 8, !dbg !14853
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !14852
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !14851
  call void @llvm.dbg.declare(metadata i32* %range, metadata !14854, metadata !DIExpression()), !dbg !14855
  call void @llvm.dbg.declare(metadata i32* %chan, metadata !14856, metadata !DIExpression()), !dbg !14857
  call void @llvm.dbg.declare(metadata i32* %conf, metadata !14858, metadata !DIExpression()), !dbg !14859
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14860, metadata !DIExpression()), !dbg !14861
  call void @llvm.dbg.declare(metadata i32* %invert, metadata !14862, metadata !DIExpression()), !dbg !14863
  store i32 0, i32* %invert, align 4, !dbg !14863
  %3 = load i32, i32* %timed.addr, align 4, !dbg !14864
  %tobool = icmp ne i32 %3, 0, !dbg !14864
  br i1 %tobool, label %if.then, label %if.end, !dbg !14866

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !14867
  br label %for.cond, !dbg !14870

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load i32, i32* %i, align 4, !dbg !14871
  %5 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !14873
  %n_chan = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %5, i32 0, i32 3, !dbg !14874
  %6 = load i32, i32* %n_chan, align 8, !dbg !14874
  %cmp = icmp slt i32 %4, %6, !dbg !14875
  br i1 %cmp, label %for.body, label %for.end, !dbg !14876

for.body:                                         ; preds = %for.cond
  %7 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14877
  %ao_conf = getelementptr inbounds %struct.ni_private, %struct.ni_private* %7, i32 0, i32 13, !dbg !14879
  %8 = load i32, i32* %i, align 4, !dbg !14880
  %idxprom = sext i32 %8 to i64, !dbg !14877
  %arrayidx = getelementptr [8 x i16], [8 x i16]* %ao_conf, i64 0, i64 %idxprom, !dbg !14877
  %9 = load i16, i16* %arrayidx, align 2, !dbg !14881
  %conv = zext i16 %9 to i64, !dbg !14881
  %and = and i64 %conv, -65, !dbg !14881
  %conv1 = trunc i64 %and to i16, !dbg !14881
  store i16 %conv1, i16* %arrayidx, align 2, !dbg !14881
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14882
  %11 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14883
  %ao_conf2 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %11, i32 0, i32 13, !dbg !14884
  %12 = load i32, i32* %i, align 4, !dbg !14885
  %idxprom3 = sext i32 %12 to i64, !dbg !14883
  %arrayidx4 = getelementptr [8 x i16], [8 x i16]* %ao_conf2, i64 0, i64 %idxprom3, !dbg !14883
  %13 = load i16, i16* %arrayidx4, align 2, !dbg !14883
  %conv5 = zext i16 %13 to i32, !dbg !14883
  %14 = load i32, i32* %i, align 4, !dbg !14886
  %mul = mul i32 %14, 4, !dbg !14886
  %add = add i32 195, %mul, !dbg !14886
  call void @ni_writeb(%struct.comedi_device* %10, i32 %conv5, i32 %add) #9, !dbg !14887
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14888
  %16 = load i32, i32* %i, align 4, !dbg !14889
  %mul6 = mul i32 %16, 4, !dbg !14889
  %add7 = add i32 194, %mul6, !dbg !14889
  call void @ni_writeb(%struct.comedi_device* %15, i32 15, i32 %add7) #9, !dbg !14890
  br label %for.inc, !dbg !14891

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !14892
  %inc = add i32 %17, 1, !dbg !14892
  store i32 %inc, i32* %i, align 4, !dbg !14892
  br label %for.cond, !dbg !14893, !llvm.loop !14894

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !14896

if.end:                                           ; preds = %for.end, %entry
  store i32 0, i32* %i, align 4, !dbg !14897
  br label %for.cond8, !dbg !14899

for.cond8:                                        ; preds = %for.inc50, %if.end
  %18 = load i32, i32* %i, align 4, !dbg !14900
  %19 = load i32, i32* %n_chans.addr, align 4, !dbg !14902
  %cmp9 = icmp ult i32 %18, %19, !dbg !14903
  br i1 %cmp9, label %for.body11, label %for.end52, !dbg !14904

for.body11:                                       ; preds = %for.cond8
  call void @llvm.dbg.declare(metadata %struct.comedi_krange** %krange, metadata !14905, metadata !DIExpression()), !dbg !14909
  %20 = load i32*, i32** %chanspec.addr, align 8, !dbg !14910
  %21 = load i32, i32* %i, align 4, !dbg !14910
  %idxprom12 = sext i32 %21 to i64, !dbg !14910
  %arrayidx13 = getelementptr i32, i32* %20, i64 %idxprom12, !dbg !14910
  %22 = load i32, i32* %arrayidx13, align 4, !dbg !14910
  %and14 = and i32 %22, 65535, !dbg !14910
  store i32 %and14, i32* %chan, align 4, !dbg !14911
  %23 = load i32*, i32** %chanspec.addr, align 8, !dbg !14912
  %24 = load i32, i32* %i, align 4, !dbg !14912
  %idxprom15 = sext i32 %24 to i64, !dbg !14912
  %arrayidx16 = getelementptr i32, i32* %23, i64 %idxprom15, !dbg !14912
  %25 = load i32, i32* %arrayidx16, align 4, !dbg !14912
  %shr = lshr i32 %25, 16, !dbg !14912
  %and17 = and i32 %shr, 255, !dbg !14912
  store i32 %and17, i32* %range, align 4, !dbg !14913
  %26 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !14914
  %range_table = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %26, i32 0, i32 15, !dbg !14915
  %27 = load %struct.comedi_lrange*, %struct.comedi_lrange** %range_table, align 8, !dbg !14915
  %range18 = getelementptr inbounds %struct.comedi_lrange, %struct.comedi_lrange* %27, i32 0, i32 1, !dbg !14916
  %arraydecay = getelementptr inbounds [0 x %struct.comedi_krange], [0 x %struct.comedi_krange]* %range18, i64 0, i64 0, !dbg !14914
  %28 = load i32, i32* %range, align 4, !dbg !14917
  %idx.ext = zext i32 %28 to i64, !dbg !14918
  %add.ptr = getelementptr %struct.comedi_krange, %struct.comedi_krange* %arraydecay, i64 %idx.ext, !dbg !14918
  store %struct.comedi_krange* %add.ptr, %struct.comedi_krange** %krange, align 8, !dbg !14919
  store i32 0, i32* %invert, align 4, !dbg !14920
  store i32 0, i32* %conf, align 4, !dbg !14921
  %29 = load %struct.comedi_krange*, %struct.comedi_krange** %krange, align 8, !dbg !14922
  %max = getelementptr inbounds %struct.comedi_krange, %struct.comedi_krange* %29, i32 0, i32 1, !dbg !14923
  %30 = load i32, i32* %max, align 4, !dbg !14923
  %31 = load %struct.comedi_krange*, %struct.comedi_krange** %krange, align 8, !dbg !14924
  %min = getelementptr inbounds %struct.comedi_krange, %struct.comedi_krange* %31, i32 0, i32 0, !dbg !14925
  %32 = load i32, i32* %min, align 4, !dbg !14925
  %sub = sub i32 %30, %32, !dbg !14926
  switch i32 %sub, label %sw.default [
    i32 20000000, label %sw.bb
    i32 10000000, label %sw.bb20
    i32 4000000, label %sw.bb22
    i32 2000000, label %sw.bb24
  ], !dbg !14927

sw.bb:                                            ; preds = %for.body11
  %33 = load i32, i32* %conf, align 4, !dbg !14928
  store i32 %33, i32* %conf, align 4, !dbg !14928
  %34 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14930
  %35 = load i32, i32* %chan, align 4, !dbg !14931
  %add19 = add i32 612, %35, !dbg !14931
  call void @ni_writeb(%struct.comedi_device* %34, i32 0, i32 %add19) #9, !dbg !14932
  br label %sw.epilog, !dbg !14933

sw.bb20:                                          ; preds = %for.body11
  %36 = load i32, i32* %conf, align 4, !dbg !14934
  %or = or i32 %36, 8, !dbg !14934
  store i32 %or, i32* %conf, align 4, !dbg !14934
  %37 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14935
  %38 = load i32, i32* %chan, align 4, !dbg !14936
  %add21 = add i32 612, %38, !dbg !14936
  call void @ni_writeb(%struct.comedi_device* %37, i32 0, i32 %add21) #9, !dbg !14937
  br label %sw.epilog, !dbg !14938

sw.bb22:                                          ; preds = %for.body11
  %39 = load i32, i32* %conf, align 4, !dbg !14939
  store i32 %39, i32* %conf, align 4, !dbg !14939
  %40 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14940
  %41 = load i32, i32* %chan, align 4, !dbg !14941
  %add23 = add i32 612, %41, !dbg !14941
  call void @ni_writeb(%struct.comedi_device* %40, i32 1, i32 %add23) #9, !dbg !14942
  br label %sw.epilog, !dbg !14943

sw.bb24:                                          ; preds = %for.body11
  %42 = load i32, i32* %conf, align 4, !dbg !14944
  %or25 = or i32 %42, 8, !dbg !14944
  store i32 %or25, i32* %conf, align 4, !dbg !14944
  %43 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14945
  %44 = load i32, i32* %chan, align 4, !dbg !14946
  %add26 = add i32 612, %44, !dbg !14946
  call void @ni_writeb(%struct.comedi_device* %43, i32 1, i32 %add26) #9, !dbg !14947
  br label %sw.epilog, !dbg !14948

sw.default:                                       ; preds = %for.body11
  %45 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14949
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %45, i32 0, i32 4, !dbg !14949
  %46 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !14949
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %46, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.101, i64 0, i64 0)) #11, !dbg !14949
  br label %sw.epilog, !dbg !14950

sw.epilog:                                        ; preds = %sw.default, %sw.bb24, %sw.bb22, %sw.bb20, %sw.bb
  %47 = load %struct.comedi_krange*, %struct.comedi_krange** %krange, align 8, !dbg !14951
  %max27 = getelementptr inbounds %struct.comedi_krange, %struct.comedi_krange* %47, i32 0, i32 1, !dbg !14952
  %48 = load i32, i32* %max27, align 4, !dbg !14952
  %49 = load %struct.comedi_krange*, %struct.comedi_krange** %krange, align 8, !dbg !14953
  %min28 = getelementptr inbounds %struct.comedi_krange, %struct.comedi_krange* %49, i32 0, i32 0, !dbg !14954
  %50 = load i32, i32* %min28, align 4, !dbg !14954
  %add29 = add i32 %48, %50, !dbg !14955
  switch i32 %add29, label %sw.default33 [
    i32 0, label %sw.bb30
    i32 10000000, label %sw.bb31
  ], !dbg !14956

sw.bb30:                                          ; preds = %sw.epilog
  %51 = load i32, i32* %conf, align 4, !dbg !14957
  store i32 %51, i32* %conf, align 4, !dbg !14957
  br label %sw.epilog35, !dbg !14959

sw.bb31:                                          ; preds = %sw.epilog
  %52 = load i32, i32* %conf, align 4, !dbg !14960
  %or32 = or i32 %52, 1, !dbg !14960
  store i32 %or32, i32* %conf, align 4, !dbg !14960
  br label %sw.epilog35, !dbg !14961

sw.default33:                                     ; preds = %sw.epilog
  %53 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14962
  %class_dev34 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %53, i32 0, i32 4, !dbg !14962
  %54 = load %struct.device*, %struct.device** %class_dev34, align 8, !dbg !14962
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %54, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.102, i64 0, i64 0)) #11, !dbg !14962
  br label %sw.epilog35, !dbg !14963

sw.epilog35:                                      ; preds = %sw.default33, %sw.bb31, %sw.bb30
  %55 = load i32, i32* %timed.addr, align 4, !dbg !14964
  %tobool36 = icmp ne i32 %55, 0, !dbg !14964
  br i1 %tobool36, label %if.then37, label %if.end41, !dbg !14966

if.then37:                                        ; preds = %sw.epilog35
  %56 = load i32, i32* %conf, align 4, !dbg !14967
  %conv38 = zext i32 %56 to i64, !dbg !14967
  %or39 = or i64 %conv38, 64, !dbg !14967
  %conv40 = trunc i64 %or39 to i32, !dbg !14967
  store i32 %conv40, i32* %conf, align 4, !dbg !14967
  br label %if.end41, !dbg !14968

if.end41:                                         ; preds = %if.then37, %sw.epilog35
  %57 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14969
  %58 = load i32, i32* %conf, align 4, !dbg !14970
  %59 = load i32, i32* %chan, align 4, !dbg !14971
  %mul42 = mul i32 %59, 4, !dbg !14971
  %add43 = add i32 195, %mul42, !dbg !14971
  call void @ni_writeb(%struct.comedi_device* %57, i32 %58, i32 %add43) #9, !dbg !14972
  %60 = load i32, i32* %conf, align 4, !dbg !14973
  %conv44 = trunc i32 %60 to i16, !dbg !14973
  %61 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !14974
  %ao_conf45 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %61, i32 0, i32 13, !dbg !14975
  %62 = load i32, i32* %chan, align 4, !dbg !14976
  %idxprom46 = zext i32 %62 to i64, !dbg !14974
  %arrayidx47 = getelementptr [8 x i16], [8 x i16]* %ao_conf45, i64 0, i64 %idxprom46, !dbg !14974
  store i16 %conv44, i16* %arrayidx47, align 2, !dbg !14977
  %63 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !14978
  %64 = load i32, i32* %i, align 4, !dbg !14979
  %65 = load i32, i32* %chan, align 4, !dbg !14980
  %mul48 = mul i32 %65, 4, !dbg !14980
  %add49 = add i32 194, %mul48, !dbg !14980
  call void @ni_writeb(%struct.comedi_device* %63, i32 %64, i32 %add49) #9, !dbg !14981
  br label %for.inc50, !dbg !14982

for.inc50:                                        ; preds = %if.end41
  %66 = load i32, i32* %i, align 4, !dbg !14983
  %inc51 = add i32 %66, 1, !dbg !14983
  store i32 %inc51, i32* %i, align 4, !dbg !14983
  br label %for.cond8, !dbg !14984, !llvm.loop !14985

for.end52:                                        ; preds = %for.cond8
  %67 = load i32, i32* %invert, align 4, !dbg !14987
  ret i32 %67, !dbg !14988
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_old_ao_config_chanlist(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, i32* %chanspec, i32 %n_chans) #2 !dbg !14989 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %chanspec.addr = alloca i32*, align 8
  %n_chans.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  %range = alloca i32, align 4
  %chan = alloca i32, align 4
  %conf = alloca i32, align 4
  %i = alloca i32, align 4
  %invert = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !14992, metadata !DIExpression()), !dbg !14993
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !14994, metadata !DIExpression()), !dbg !14995
  store i32* %chanspec, i32** %chanspec.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %chanspec.addr, metadata !14996, metadata !DIExpression()), !dbg !14997
  store i32 %n_chans, i32* %n_chans.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_chans.addr, metadata !14998, metadata !DIExpression()), !dbg !14999
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !15000, metadata !DIExpression()), !dbg !15001
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15002
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !15003
  %1 = load i8*, i8** %private, align 8, !dbg !15003
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !15002
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !15001
  call void @llvm.dbg.declare(metadata i32* %range, metadata !15004, metadata !DIExpression()), !dbg !15005
  call void @llvm.dbg.declare(metadata i32* %chan, metadata !15006, metadata !DIExpression()), !dbg !15007
  call void @llvm.dbg.declare(metadata i32* %conf, metadata !15008, metadata !DIExpression()), !dbg !15009
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15010, metadata !DIExpression()), !dbg !15011
  call void @llvm.dbg.declare(metadata i32* %invert, metadata !15012, metadata !DIExpression()), !dbg !15013
  store i32 0, i32* %invert, align 4, !dbg !15013
  store i32 0, i32* %i, align 4, !dbg !15014
  br label %for.cond, !dbg !15016

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !15017
  %4 = load i32, i32* %n_chans.addr, align 4, !dbg !15019
  %cmp = icmp ult i32 %3, %4, !dbg !15020
  br i1 %cmp, label %for.body, label %for.end, !dbg !15021

for.body:                                         ; preds = %for.cond
  %5 = load i32*, i32** %chanspec.addr, align 8, !dbg !15022
  %6 = load i32, i32* %i, align 4, !dbg !15022
  %idxprom = sext i32 %6 to i64, !dbg !15022
  %arrayidx = getelementptr i32, i32* %5, i64 %idxprom, !dbg !15022
  %7 = load i32, i32* %arrayidx, align 4, !dbg !15022
  %and = and i32 %7, 65535, !dbg !15022
  store i32 %and, i32* %chan, align 4, !dbg !15024
  %8 = load i32*, i32** %chanspec.addr, align 8, !dbg !15025
  %9 = load i32, i32* %i, align 4, !dbg !15025
  %idxprom1 = sext i32 %9 to i64, !dbg !15025
  %arrayidx2 = getelementptr i32, i32* %8, i64 %idxprom1, !dbg !15025
  %10 = load i32, i32* %arrayidx2, align 4, !dbg !15025
  %shr = lshr i32 %10, 16, !dbg !15025
  %and3 = and i32 %shr, 255, !dbg !15025
  store i32 %and3, i32* %range, align 4, !dbg !15026
  %11 = load i32, i32* %chan, align 4, !dbg !15027
  %shl = shl i32 %11, 8, !dbg !15027
  store i32 %shl, i32* %conf, align 4, !dbg !15028
  %12 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !15029
  %13 = load i32, i32* %range, align 4, !dbg !15031
  %call = call zeroext i1 @comedi_range_is_bipolar(%struct.comedi_subdevice* %12, i32 %13) #9, !dbg !15032
  br i1 %call, label %if.then, label %if.else, !dbg !15033

if.then:                                          ; preds = %for.body
  %14 = load i32, i32* %conf, align 4, !dbg !15034
  %conv = zext i32 %14 to i64, !dbg !15034
  %or = or i64 %conv, 1, !dbg !15034
  %conv4 = trunc i64 %or to i32, !dbg !15034
  store i32 %conv4, i32* %conf, align 4, !dbg !15034
  %15 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !15036
  %maxdata = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %15, i32 0, i32 13, !dbg !15037
  %16 = load i32, i32* %maxdata, align 8, !dbg !15037
  %add = add i32 %16, 1, !dbg !15038
  %shr5 = lshr i32 %add, 1, !dbg !15039
  store i32 %shr5, i32* %invert, align 4, !dbg !15040
  br label %if.end, !dbg !15041

if.else:                                          ; preds = %for.body
  store i32 0, i32* %invert, align 4, !dbg !15042
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %17 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !15044
  %18 = load i32, i32* %range, align 4, !dbg !15046
  %call6 = call zeroext i1 @comedi_range_is_external(%struct.comedi_subdevice* %17, i32 %18) #9, !dbg !15047
  br i1 %call6, label %if.then7, label %if.end11, !dbg !15048

if.then7:                                         ; preds = %if.end
  %19 = load i32, i32* %conf, align 4, !dbg !15049
  %conv8 = zext i32 %19 to i64, !dbg !15049
  %or9 = or i64 %conv8, 4, !dbg !15049
  %conv10 = trunc i64 %or9 to i32, !dbg !15049
  store i32 %conv10, i32* %conf, align 4, !dbg !15049
  br label %if.end11, !dbg !15050

if.end11:                                         ; preds = %if.then7, %if.end
  %20 = load i32*, i32** %chanspec.addr, align 8, !dbg !15051
  %21 = load i32, i32* %i, align 4, !dbg !15053
  %idxprom12 = sext i32 %21 to i64, !dbg !15051
  %arrayidx13 = getelementptr i32, i32* %20, i64 %idxprom12, !dbg !15051
  %22 = load i32, i32* %arrayidx13, align 4, !dbg !15051
  %and14 = and i32 %22, 67108864, !dbg !15054
  %tobool = icmp ne i32 %and14, 0, !dbg !15054
  br i1 %tobool, label %if.then15, label %if.end19, !dbg !15055

if.then15:                                        ; preds = %if.end11
  %23 = load i32, i32* %conf, align 4, !dbg !15056
  %conv16 = zext i32 %23 to i64, !dbg !15056
  %or17 = or i64 %conv16, 2, !dbg !15056
  %conv18 = trunc i64 %or17 to i32, !dbg !15056
  store i32 %conv18, i32* %conf, align 4, !dbg !15056
  br label %if.end19, !dbg !15057

if.end19:                                         ; preds = %if.then15, %if.end11
  %24 = load i32*, i32** %chanspec.addr, align 8, !dbg !15058
  %25 = load i32, i32* %i, align 4, !dbg !15058
  %idxprom20 = sext i32 %25 to i64, !dbg !15058
  %arrayidx21 = getelementptr i32, i32* %24, i64 %idxprom20, !dbg !15058
  %26 = load i32, i32* %arrayidx21, align 4, !dbg !15058
  %shr22 = lshr i32 %26, 24, !dbg !15058
  %and23 = and i32 %shr22, 3, !dbg !15058
  %cmp24 = icmp eq i32 %and23, 3, !dbg !15060
  br i1 %cmp24, label %if.then26, label %if.end30, !dbg !15061

if.then26:                                        ; preds = %if.end19
  %27 = load i32, i32* %conf, align 4, !dbg !15062
  %conv27 = zext i32 %27 to i64, !dbg !15062
  %or28 = or i64 %conv27, 8, !dbg !15062
  %conv29 = trunc i64 %or28 to i32, !dbg !15062
  store i32 %conv29, i32* %conf, align 4, !dbg !15062
  br label %if.end30, !dbg !15063

if.end30:                                         ; preds = %if.then26, %if.end19
  %28 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15064
  %29 = load i32, i32* %conf, align 4, !dbg !15065
  call void @ni_writew(%struct.comedi_device* %28, i32 %29, i32 22) #9, !dbg !15066
  %30 = load i32, i32* %conf, align 4, !dbg !15067
  %conv31 = trunc i32 %30 to i16, !dbg !15067
  %31 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15068
  %ao_conf = getelementptr inbounds %struct.ni_private, %struct.ni_private* %31, i32 0, i32 13, !dbg !15069
  %32 = load i32, i32* %chan, align 4, !dbg !15070
  %idxprom32 = zext i32 %32 to i64, !dbg !15068
  %arrayidx33 = getelementptr [8 x i16], [8 x i16]* %ao_conf, i64 0, i64 %idxprom32, !dbg !15068
  store i16 %conv31, i16* %arrayidx33, align 2, !dbg !15071
  br label %for.inc, !dbg !15072

for.inc:                                          ; preds = %if.end30
  %33 = load i32, i32* %i, align 4, !dbg !15073
  %inc = add i32 %33, 1, !dbg !15073
  store i32 %inc, i32* %i, align 4, !dbg !15073
  br label %for.cond, !dbg !15074, !llvm.loop !15075

for.end:                                          ; preds = %for.cond
  %34 = load i32, i32* %invert, align 4, !dbg !15077
  ret i32 %34, !dbg !15078
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @comedi_range_is_external(%struct.comedi_subdevice* %s, i32 %range) #2 !dbg !15079 {
entry:
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %range.addr = alloca i32, align 4
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !15080, metadata !DIExpression()), !dbg !15081
  store i32 %range, i32* %range.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %range.addr, metadata !15082, metadata !DIExpression()), !dbg !15083
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !15084
  %range_table = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %0, i32 0, i32 15, !dbg !15085
  %1 = load %struct.comedi_lrange*, %struct.comedi_lrange** %range_table, align 8, !dbg !15085
  %range1 = getelementptr inbounds %struct.comedi_lrange, %struct.comedi_lrange* %1, i32 0, i32 1, !dbg !15086
  %2 = load i32, i32* %range.addr, align 4, !dbg !15087
  %idxprom = zext i32 %2 to i64, !dbg !15084
  %arrayidx = getelementptr [0 x %struct.comedi_krange], [0 x %struct.comedi_krange]* %range1, i64 0, i64 %idxprom, !dbg !15084
  %flags = getelementptr inbounds %struct.comedi_krange, %struct.comedi_krange* %arrayidx, i32 0, i32 2, !dbg !15088
  %3 = load i32, i32* %flags, align 4, !dbg !15088
  %and = and i32 %3, 256, !dbg !15089
  %tobool = icmp ne i32 %and, 0, !dbg !15090
  %lnot = xor i1 %tobool, true, !dbg !15090
  %lnot2 = xor i1 %lnot, true, !dbg !15091
  ret i1 %lnot2, !dbg !15092
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_check_trigger_arg(i32 %src, i32 %dest, %struct.ni_route_tables* %tables) #2 !dbg !15093 {
entry:
  %src.addr = alloca i32, align 4
  %dest.addr = alloca i32, align 4
  %tables.addr = alloca %struct.ni_route_tables*, align 8
  store i32 %src, i32* %src.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src.addr, metadata !15096, metadata !DIExpression()), !dbg !15097
  store i32 %dest, i32* %dest.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest.addr, metadata !15098, metadata !DIExpression()), !dbg !15099
  store %struct.ni_route_tables* %tables, %struct.ni_route_tables** %tables.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ni_route_tables** %tables.addr, metadata !15100, metadata !DIExpression()), !dbg !15101
  %0 = load i32, i32* %src.addr, align 4, !dbg !15102
  %1 = load i32, i32* %dest.addr, align 4, !dbg !15103
  %2 = load %struct.ni_route_tables*, %struct.ni_route_tables** %tables.addr, align 8, !dbg !15104
  %call = call i32 @ni_check_trigger_arg_roffs(i32 %0, i32 %1, %struct.ni_route_tables* %2, i32 0) #9, !dbg !15105
  ret i32 %call, !dbg !15106
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_ao_cmd_personalize(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd) #2 !dbg !15107 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %board = alloca %struct.ni_board_struct*, align 8
  %bits = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !15110, metadata !DIExpression()), !dbg !15111
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !15112, metadata !DIExpression()), !dbg !15113
  call void @llvm.dbg.declare(metadata %struct.ni_board_struct** %board, metadata !15114, metadata !DIExpression()), !dbg !15115
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15116
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !15117
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !15117
  %2 = bitcast i8* %1 to %struct.ni_board_struct*, !dbg !15116
  store %struct.ni_board_struct* %2, %struct.ni_board_struct** %board, align 8, !dbg !15115
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !15118, metadata !DIExpression()), !dbg !15119
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15120
  call void @ni_stc_writew(%struct.comedi_device* %3, i32 32, i32 72) #9, !dbg !15121
  %4 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !15122
  %ao_fifo_depth = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %4, i32 0, i32 12, !dbg !15123
  %5 = load i32, i32* %ao_fifo_depth, align 8, !dbg !15123
  %tobool = icmp ne i32 %5, 0, !dbg !15122
  %6 = zext i1 %tobool to i64, !dbg !15122
  %cond = select i1 %tobool, i64 1024, i64 256, !dbg !15122
  %or = or i64 4144, %cond, !dbg !15124
  %conv = trunc i64 %or to i32, !dbg !15125
  store i32 %conv, i32* %bits, align 4, !dbg !15126
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15127
  %8 = load i32, i32* %bits, align 4, !dbg !15128
  call void @ni_stc_writew(%struct.comedi_device* %7, i32 %8, i32 78) #9, !dbg !15129
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15130
  call void @ni_stc_writew(%struct.comedi_device* %9, i32 512, i32 72) #9, !dbg !15131
  ret void, !dbg !15132
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_ao_cmd_set_trigger(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd) #2 !dbg !15133 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %trigsel = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !15134, metadata !DIExpression()), !dbg !15135
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !15136, metadata !DIExpression()), !dbg !15137
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !15138, metadata !DIExpression()), !dbg !15139
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15140
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !15141
  %1 = load i8*, i8** %private, align 8, !dbg !15141
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !15140
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !15139
  call void @llvm.dbg.declare(metadata i32* %trigsel, metadata !15142, metadata !DIExpression()), !dbg !15143
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15144
  call void @ni_stc_writew(%struct.comedi_device* %3, i32 32, i32 72) #9, !dbg !15145
  %4 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !15146
  %stop_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %4, i32 0, i32 10, !dbg !15148
  %5 = load i32, i32* %stop_src, align 8, !dbg !15148
  %cmp = icmp eq i32 %5, 1, !dbg !15149
  br i1 %cmp, label %if.then, label %if.else, !dbg !15150

if.then:                                          ; preds = %entry
  %6 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15151
  %ao_mode1 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %6, i32 0, i32 14, !dbg !15153
  %7 = load i16, i16* %ao_mode1, align 2, !dbg !15154
  %conv = zext i16 %7 to i64, !dbg !15154
  %or = or i64 %conv, 2, !dbg !15154
  %conv1 = trunc i64 %or to i16, !dbg !15154
  store i16 %conv1, i16* %ao_mode1, align 2, !dbg !15154
  %8 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15155
  %ao_mode12 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %8, i32 0, i32 14, !dbg !15156
  %9 = load i16, i16* %ao_mode12, align 2, !dbg !15157
  %conv3 = zext i16 %9 to i64, !dbg !15157
  %and = and i64 %conv3, -2, !dbg !15157
  %conv4 = trunc i64 %and to i16, !dbg !15157
  store i16 %conv4, i16* %ao_mode12, align 2, !dbg !15157
  br label %if.end, !dbg !15158

if.else:                                          ; preds = %entry
  %10 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15159
  %ao_mode15 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %10, i32 0, i32 14, !dbg !15161
  %11 = load i16, i16* %ao_mode15, align 2, !dbg !15162
  %conv6 = zext i16 %11 to i64, !dbg !15162
  %and7 = and i64 %conv6, -3, !dbg !15162
  %conv8 = trunc i64 %and7 to i16, !dbg !15162
  store i16 %conv8, i16* %ao_mode15, align 2, !dbg !15162
  %12 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15163
  %ao_mode19 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %12, i32 0, i32 14, !dbg !15164
  %13 = load i16, i16* %ao_mode19, align 2, !dbg !15165
  %conv10 = zext i16 %13 to i64, !dbg !15165
  %or11 = or i64 %conv10, 1, !dbg !15165
  %conv12 = trunc i64 %or11 to i16, !dbg !15165
  store i16 %conv12, i16* %ao_mode19, align 2, !dbg !15165
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15166
  %15 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15167
  %ao_mode113 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %15, i32 0, i32 14, !dbg !15168
  %16 = load i16, i16* %ao_mode113, align 2, !dbg !15168
  %conv14 = zext i16 %16 to i32, !dbg !15167
  call void @ni_stc_writew(%struct.comedi_device* %14, i32 %conv14, i32 38) #9, !dbg !15169
  %17 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !15170
  %start_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %17, i32 0, i32 2, !dbg !15172
  %18 = load i32, i32* %start_src, align 8, !dbg !15172
  %cmp15 = icmp eq i32 %18, 128, !dbg !15173
  br i1 %cmp15, label %if.then17, label %if.else18, !dbg !15174

if.then17:                                        ; preds = %if.end
  store i32 96, i32* %trigsel, align 4, !dbg !15175
  br label %if.end37, !dbg !15177

if.else18:                                        ; preds = %if.end
  %19 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !15178
  %start_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %19, i32 0, i32 3, !dbg !15178
  %20 = load i32, i32* %start_arg, align 4, !dbg !15178
  %and19 = and i32 %20, 65535, !dbg !15178
  %21 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15178
  %routing_tables = getelementptr inbounds %struct.ni_private, %struct.ni_private* %21, i32 0, i32 51, !dbg !15178
  %call = call signext i8 @ni_get_reg_value_roffs(i32 %and19, i32 32940, %struct.ni_route_tables* %routing_tables, i32 1) #9, !dbg !15178
  %conv20 = sext i8 %call to i32, !dbg !15178
  %and21 = and i32 %conv20, 31, !dbg !15178
  %shl = shl i32 %and21, 0, !dbg !15178
  store i32 %shl, i32* %trigsel, align 4, !dbg !15180
  %22 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !15181
  %start_arg22 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %22, i32 0, i32 3, !dbg !15183
  %23 = load i32, i32* %start_arg22, align 4, !dbg !15183
  %and23 = and i32 %23, -2147483648, !dbg !15184
  %tobool = icmp ne i32 %and23, 0, !dbg !15184
  br i1 %tobool, label %if.then24, label %if.end28, !dbg !15185

if.then24:                                        ; preds = %if.else18
  %24 = load i32, i32* %trigsel, align 4, !dbg !15186
  %conv25 = zext i32 %24 to i64, !dbg !15186
  %or26 = or i64 %conv25, 8192, !dbg !15186
  %conv27 = trunc i64 %or26 to i32, !dbg !15186
  store i32 %conv27, i32* %trigsel, align 4, !dbg !15186
  br label %if.end28, !dbg !15187

if.end28:                                         ; preds = %if.then24, %if.else18
  %25 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !15188
  %start_arg29 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %25, i32 0, i32 3, !dbg !15190
  %26 = load i32, i32* %start_arg29, align 4, !dbg !15190
  %and30 = and i32 %26, 1073741824, !dbg !15191
  %tobool31 = icmp ne i32 %and30, 0, !dbg !15191
  br i1 %tobool31, label %if.then32, label %if.end36, !dbg !15192

if.then32:                                        ; preds = %if.end28
  %27 = load i32, i32* %trigsel, align 4, !dbg !15193
  %conv33 = zext i32 %27 to i64, !dbg !15193
  %or34 = or i64 %conv33, 32, !dbg !15193
  %conv35 = trunc i64 %or34 to i32, !dbg !15193
  store i32 %conv35, i32* %trigsel, align 4, !dbg !15193
  br label %if.end36, !dbg !15194

if.end36:                                         ; preds = %if.then32, %if.end28
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then17
  %28 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15195
  %29 = load i32, i32* %trigsel, align 4, !dbg !15196
  call void @ni_stc_writew(%struct.comedi_device* %28, i32 %29, i32 67) #9, !dbg !15197
  %30 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15198
  %ao_mode3 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %30, i32 0, i32 16, !dbg !15199
  %31 = load i16, i16* %ao_mode3, align 2, !dbg !15200
  %conv38 = zext i16 %31 to i64, !dbg !15200
  %and39 = and i64 %conv38, -2049, !dbg !15200
  %conv40 = trunc i64 %and39 to i16, !dbg !15200
  store i16 %conv40, i16* %ao_mode3, align 2, !dbg !15200
  %32 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15201
  %33 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15202
  %ao_mode341 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %33, i32 0, i32 16, !dbg !15203
  %34 = load i16, i16* %ao_mode341, align 2, !dbg !15203
  %conv42 = zext i16 %34 to i32, !dbg !15202
  call void @ni_stc_writew(%struct.comedi_device* %32, i32 %conv42, i32 70) #9, !dbg !15204
  %35 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15205
  call void @ni_stc_writew(%struct.comedi_device* %35, i32 512, i32 72) #9, !dbg !15206
  ret void, !dbg !15207
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_ao_cmd_set_counters(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd) #2 !dbg !15208 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %stop_arg = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !15209, metadata !DIExpression()), !dbg !15210
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !15211, metadata !DIExpression()), !dbg !15212
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !15213, metadata !DIExpression()), !dbg !15214
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15215
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !15216
  %1 = load i8*, i8** %private, align 8, !dbg !15216
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !15215
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !15214
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15217
  call void @ni_stc_writew(%struct.comedi_device* %3, i32 32, i32 72) #9, !dbg !15218
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15219
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15220
  %ao_mode1 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 14, !dbg !15221
  %6 = load i16, i16* %ao_mode1, align 2, !dbg !15221
  %conv = zext i16 %6 to i32, !dbg !15220
  call void @ni_stc_writew(%struct.comedi_device* %4, i32 %conv, i32 38) #9, !dbg !15222
  %7 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15223
  %ao_mode2 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %7, i32 0, i32 15, !dbg !15224
  %8 = load i16, i16* %ao_mode2, align 8, !dbg !15225
  %conv1 = zext i16 %8 to i64, !dbg !15225
  %and = and i64 %conv1, -5, !dbg !15225
  %conv2 = trunc i64 %and to i16, !dbg !15225
  store i16 %conv2, i16* %ao_mode2, align 8, !dbg !15225
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15226
  %10 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15227
  %ao_mode23 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %10, i32 0, i32 15, !dbg !15228
  %11 = load i16, i16* %ao_mode23, align 8, !dbg !15228
  %conv4 = zext i16 %11 to i32, !dbg !15227
  call void @ni_stc_writew(%struct.comedi_device* %9, i32 %conv4, i32 39) #9, !dbg !15229
  %12 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15230
  call void @ni_stc_writel(%struct.comedi_device* %12, i32 0, i32 44) #9, !dbg !15231
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15232
  call void @ni_stc_writew(%struct.comedi_device* %13, i32 32, i32 9) #9, !dbg !15233
  %14 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15234
  %ao_mode25 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %14, i32 0, i32 15, !dbg !15235
  %15 = load i16, i16* %ao_mode25, align 8, !dbg !15236
  %conv6 = zext i16 %15 to i64, !dbg !15236
  %and7 = and i64 %conv6, -2049, !dbg !15236
  %conv8 = trunc i64 %and7 to i16, !dbg !15236
  store i16 %conv8, i16* %ao_mode25, align 8, !dbg !15236
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15237
  %17 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15238
  %ao_mode29 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %17, i32 0, i32 15, !dbg !15239
  %18 = load i16, i16* %ao_mode29, align 8, !dbg !15239
  %conv10 = zext i16 %18 to i32, !dbg !15238
  call void @ni_stc_writew(%struct.comedi_device* %16, i32 %conv10, i32 39) #9, !dbg !15240
  call void @llvm.dbg.declare(metadata i32* %stop_arg, metadata !15241, metadata !DIExpression()), !dbg !15243
  %19 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !15244
  %stop_arg11 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %19, i32 0, i32 11, !dbg !15245
  %20 = load i32, i32* %stop_arg11, align 4, !dbg !15245
  %cmp = icmp ugt i32 %20, 0, !dbg !15246
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !15244

cond.true:                                        ; preds = %entry
  %21 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !15247
  %stop_arg13 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %21, i32 0, i32 11, !dbg !15248
  %22 = load i32, i32* %stop_arg13, align 4, !dbg !15248
  %and14 = and i32 %22, 16777215, !dbg !15249
  br label %cond.end, !dbg !15244

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !15244

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %and14, %cond.true ], [ 16777215, %cond.false ], !dbg !15244
  store i32 %cond, i32* %stop_arg, align 4, !dbg !15243
  %23 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15250
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %23, i32 0, i32 50, !dbg !15252
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !15252
  %bf.clear = and i16 %bf.load, 1, !dbg !15252
  %bf.cast = zext i16 %bf.clear to i32, !dbg !15252
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !15250
  br i1 %tobool, label %if.then, label %if.else, !dbg !15253

if.then:                                          ; preds = %cond.end
  %24 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15254
  %25 = load i32, i32* %stop_arg, align 4, !dbg !15256
  %sub = sub i32 %25, 1, !dbg !15257
  call void @ni_stc_writel(%struct.comedi_device* %24, i32 %sub, i32 48) #9, !dbg !15258
  %26 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15259
  call void @ni_stc_writew(%struct.comedi_device* %26, i32 128, i32 9) #9, !dbg !15260
  br label %if.end, !dbg !15261

if.else:                                          ; preds = %cond.end
  %27 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15262
  %28 = load i32, i32* %stop_arg, align 4, !dbg !15264
  call void @ni_stc_writel(%struct.comedi_device* %27, i32 %28, i32 48) #9, !dbg !15265
  %29 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15266
  call void @ni_stc_writew(%struct.comedi_device* %29, i32 128, i32 9) #9, !dbg !15267
  %30 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15268
  %31 = load i32, i32* %stop_arg, align 4, !dbg !15269
  %sub15 = sub i32 %31, 1, !dbg !15270
  call void @ni_stc_writel(%struct.comedi_device* %30, i32 %sub15, i32 48) #9, !dbg !15271
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %32 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15272
  call void @ni_stc_writew(%struct.comedi_device* %32, i32 512, i32 72) #9, !dbg !15273
  ret void, !dbg !15274
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_ao_cmd_set_update(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd) #2 !dbg !15275 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %trigvar = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !15276, metadata !DIExpression()), !dbg !15277
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !15278, metadata !DIExpression()), !dbg !15279
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !15280, metadata !DIExpression()), !dbg !15281
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15282
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !15283
  %1 = load i8*, i8** %private, align 8, !dbg !15283
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !15282
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !15281
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15284
  call void @ni_stc_writew(%struct.comedi_device* %3, i32 32, i32 72) #9, !dbg !15285
  %4 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15286
  %ao_mode1 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %4, i32 0, i32 14, !dbg !15287
  %5 = load i16, i16* %ao_mode1, align 2, !dbg !15288
  %conv = zext i16 %5 to i64, !dbg !15288
  %and = and i64 %conv, -65497, !dbg !15288
  %conv1 = trunc i64 %and to i16, !dbg !15288
  store i16 %conv1, i16* %ao_mode1, align 2, !dbg !15288
  %6 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !15289
  %scan_begin_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %6, i32 0, i32 4, !dbg !15291
  %7 = load i32, i32* %scan_begin_src, align 8, !dbg !15291
  %cmp = icmp eq i32 %7, 16, !dbg !15292
  br i1 %cmp, label %if.then, label %if.else, !dbg !15293

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %trigvar, metadata !15294, metadata !DIExpression()), !dbg !15296
  %8 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15297
  %ao_cmd2 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %8, i32 0, i32 18, !dbg !15298
  %9 = load i16, i16* %ao_cmd2, align 2, !dbg !15299
  %conv3 = zext i16 %9 to i64, !dbg !15299
  %and4 = and i64 %conv3, -2049, !dbg !15299
  %conv5 = trunc i64 %and4 to i16, !dbg !15299
  store i16 %conv5, i16* %ao_cmd2, align 2, !dbg !15299
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15300
  %11 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !15301
  %scan_begin_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %11, i32 0, i32 5, !dbg !15302
  %12 = load i32, i32* %scan_begin_arg, align 4, !dbg !15302
  %call = call i32 @ni_ns_to_timer(%struct.comedi_device* %10, i32 %12, i32 0) #9, !dbg !15303
  store i32 %call, i32* %trigvar, align 4, !dbg !15304
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15305
  call void @ni_stc_writel(%struct.comedi_device* %13, i32 1, i32 40) #9, !dbg !15306
  %14 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15307
  call void @ni_stc_writew(%struct.comedi_device* %14, i32 512, i32 9) #9, !dbg !15308
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15309
  %16 = load i32, i32* %trigvar, align 4, !dbg !15310
  call void @ni_stc_writel(%struct.comedi_device* %15, i32 %16, i32 40) #9, !dbg !15311
  br label %if.end24, !dbg !15312

if.else:                                          ; preds = %entry
  %17 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15313
  %ao_cmd26 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %17, i32 0, i32 18, !dbg !15315
  %18 = load i16, i16* %ao_cmd26, align 2, !dbg !15316
  %conv7 = zext i16 %18 to i64, !dbg !15316
  %or = or i64 %conv7, 2048, !dbg !15316
  %conv8 = trunc i64 %or to i16, !dbg !15316
  store i16 %conv8, i16* %ao_cmd26, align 2, !dbg !15316
  %19 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !15317
  %scan_begin_arg9 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %19, i32 0, i32 5, !dbg !15317
  %20 = load i32, i32* %scan_begin_arg9, align 4, !dbg !15317
  %and10 = and i32 %20, 65535, !dbg !15317
  %21 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15317
  %routing_tables = getelementptr inbounds %struct.ni_private, %struct.ni_private* %21, i32 0, i32 51, !dbg !15317
  %call11 = call i32 @ni_get_reg_value(i32 %and10, i32 32938, %struct.ni_route_tables* %routing_tables) #9, !dbg !15317
  %and12 = and i32 %call11, 31, !dbg !15317
  %shl = shl i32 %and12, 11, !dbg !15317
  %22 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15318
  %ao_mode113 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %22, i32 0, i32 14, !dbg !15319
  %23 = load i16, i16* %ao_mode113, align 2, !dbg !15320
  %conv14 = zext i16 %23 to i32, !dbg !15320
  %or15 = or i32 %conv14, %shl, !dbg !15320
  %conv16 = trunc i32 %or15 to i16, !dbg !15320
  store i16 %conv16, i16* %ao_mode113, align 2, !dbg !15320
  %24 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !15321
  %scan_begin_arg17 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %24, i32 0, i32 5, !dbg !15323
  %25 = load i32, i32* %scan_begin_arg17, align 4, !dbg !15323
  %and18 = and i32 %25, -2147483648, !dbg !15324
  %tobool = icmp ne i32 %and18, 0, !dbg !15324
  br i1 %tobool, label %if.then19, label %if.end, !dbg !15325

if.then19:                                        ; preds = %if.else
  %26 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15326
  %ao_mode120 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %26, i32 0, i32 14, !dbg !15327
  %27 = load i16, i16* %ao_mode120, align 2, !dbg !15328
  %conv21 = zext i16 %27 to i64, !dbg !15328
  %or22 = or i64 %conv21, 16, !dbg !15328
  %conv23 = trunc i64 %or22 to i16, !dbg !15328
  store i16 %conv23, i16* %ao_mode120, align 2, !dbg !15328
  br label %if.end, !dbg !15326

if.end:                                           ; preds = %if.then19, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end, %if.then
  %28 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15329
  %29 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15330
  %ao_cmd225 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %29, i32 0, i32 18, !dbg !15331
  %30 = load i16, i16* %ao_cmd225, align 2, !dbg !15331
  %conv26 = zext i16 %30 to i32, !dbg !15330
  call void @ni_stc_writew(%struct.comedi_device* %28, i32 %conv26, i32 5) #9, !dbg !15332
  %31 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15333
  %32 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15334
  %ao_mode127 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %32, i32 0, i32 14, !dbg !15335
  %33 = load i16, i16* %ao_mode127, align 2, !dbg !15335
  %conv28 = zext i16 %33 to i32, !dbg !15334
  call void @ni_stc_writew(%struct.comedi_device* %31, i32 %conv28, i32 38) #9, !dbg !15336
  %34 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15337
  %ao_mode2 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %34, i32 0, i32 15, !dbg !15338
  %35 = load i16, i16* %ao_mode2, align 8, !dbg !15339
  %conv29 = zext i16 %35 to i64, !dbg !15339
  %and30 = and i64 %conv29, -177, !dbg !15339
  %conv31 = trunc i64 %and30 to i16, !dbg !15339
  store i16 %conv31, i16* %ao_mode2, align 8, !dbg !15339
  %36 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15340
  %37 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15341
  %ao_mode232 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %37, i32 0, i32 15, !dbg !15342
  %38 = load i16, i16* %ao_mode232, align 8, !dbg !15342
  %conv33 = zext i16 %38 to i32, !dbg !15341
  call void @ni_stc_writew(%struct.comedi_device* %36, i32 %conv33, i32 39) #9, !dbg !15343
  %39 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15344
  %ao_cmd1 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %39, i32 0, i32 17, !dbg !15345
  %40 = load i16, i16* %ao_cmd1, align 4, !dbg !15346
  %conv34 = zext i16 %40 to i64, !dbg !15346
  %or35 = or i64 %conv34, 20, !dbg !15346
  %conv36 = trunc i64 %or35 to i16, !dbg !15346
  store i16 %conv36, i16* %ao_cmd1, align 4, !dbg !15346
  %41 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15347
  %42 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15348
  %ao_cmd137 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %42, i32 0, i32 17, !dbg !15349
  %43 = load i16, i16* %ao_cmd137, align 4, !dbg !15349
  %conv38 = zext i16 %43 to i32, !dbg !15348
  call void @ni_stc_writew(%struct.comedi_device* %41, i32 %conv38, i32 9) #9, !dbg !15350
  %44 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15351
  call void @ni_stc_writew(%struct.comedi_device* %44, i32 512, i32 72) #9, !dbg !15352
  ret void, !dbg !15353
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_ao_cmd_set_channels(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #2 !dbg !15354 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %cmd = alloca %struct.comedi_cmd*, align 8
  %bits = alloca i32, align 4
  %i = alloca i32, align 4
  %chan = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !15355, metadata !DIExpression()), !dbg !15356
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !15357, metadata !DIExpression()), !dbg !15358
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !15359, metadata !DIExpression()), !dbg !15360
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15361
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !15362
  %1 = load i8*, i8** %private, align 8, !dbg !15362
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !15361
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !15360
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd, metadata !15363, metadata !DIExpression()), !dbg !15364
  %3 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !15365
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %3, i32 0, i32 7, !dbg !15366
  %4 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !15366
  %cmd1 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %4, i32 0, i32 17, !dbg !15367
  store %struct.comedi_cmd* %cmd1, %struct.comedi_cmd** %cmd, align 8, !dbg !15364
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !15368, metadata !DIExpression()), !dbg !15369
  store i32 0, i32* %bits, align 4, !dbg !15369
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15370
  call void @ni_stc_writew(%struct.comedi_device* %5, i32 32, i32 72) #9, !dbg !15371
  %6 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15372
  %is_6xxx = getelementptr inbounds %struct.ni_private, %struct.ni_private* %6, i32 0, i32 50, !dbg !15374
  %bf.load = load i16, i16* %is_6xxx, align 8, !dbg !15374
  %bf.lshr = lshr i16 %bf.load, 1, !dbg !15374
  %bf.clear = and i16 %bf.lshr, 1, !dbg !15374
  %bf.cast = zext i16 %bf.clear to i32, !dbg !15374
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !15372
  br i1 %tobool, label %if.then, label %if.end, !dbg !15375

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15376, metadata !DIExpression()), !dbg !15378
  store i32 0, i32* %bits, align 4, !dbg !15379
  store i32 0, i32* %i, align 4, !dbg !15380
  br label %for.cond, !dbg !15382

for.cond:                                         ; preds = %for.inc, %if.then
  %7 = load i32, i32* %i, align 4, !dbg !15383
  %8 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !15385
  %chanlist_len = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %8, i32 0, i32 13, !dbg !15386
  %9 = load i32, i32* %chanlist_len, align 8, !dbg !15386
  %cmp = icmp ult i32 %7, %9, !dbg !15387
  br i1 %cmp, label %for.body, label %for.end, !dbg !15388

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %chan, metadata !15389, metadata !DIExpression()), !dbg !15391
  %10 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !15392
  %chanlist = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %10, i32 0, i32 12, !dbg !15392
  %11 = load i32*, i32** %chanlist, align 8, !dbg !15392
  %12 = load i32, i32* %i, align 4, !dbg !15392
  %idxprom = zext i32 %12 to i64, !dbg !15392
  %arrayidx = getelementptr i32, i32* %11, i64 %idxprom, !dbg !15392
  %13 = load i32, i32* %arrayidx, align 4, !dbg !15392
  %and = and i32 %13, 65535, !dbg !15392
  store i32 %and, i32* %chan, align 4, !dbg !15391
  %14 = load i32, i32* %chan, align 4, !dbg !15393
  %shl = shl i32 1, %14, !dbg !15394
  %15 = load i32, i32* %bits, align 4, !dbg !15395
  %or = or i32 %15, %shl, !dbg !15395
  store i32 %or, i32* %bits, align 4, !dbg !15395
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15396
  %17 = load i32, i32* %chan, align 4, !dbg !15397
  call void @ni_ao_win_outw(%struct.comedi_device* %16, i32 %17, i32 21) #9, !dbg !15398
  br label %for.inc, !dbg !15399

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !15400
  %inc = add i32 %18, 1, !dbg !15400
  store i32 %inc, i32* %i, align 4, !dbg !15400
  br label %for.cond, !dbg !15401, !llvm.loop !15402

for.end:                                          ; preds = %for.cond
  %19 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15404
  %20 = load i32, i32* %bits, align 4, !dbg !15405
  call void @ni_ao_win_outw(%struct.comedi_device* %19, i32 %20, i32 16) #9, !dbg !15406
  br label %if.end, !dbg !15407

if.end:                                           ; preds = %for.end, %entry
  %21 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15408
  %22 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !15409
  %23 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !15410
  %chanlist2 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %23, i32 0, i32 12, !dbg !15411
  %24 = load i32*, i32** %chanlist2, align 8, !dbg !15411
  %25 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !15412
  %chanlist_len3 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %25, i32 0, i32 13, !dbg !15413
  %26 = load i32, i32* %chanlist_len3, align 8, !dbg !15413
  %call = call i32 @ni_ao_config_chanlist(%struct.comedi_device* %21, %struct.comedi_subdevice* %22, i32* %24, i32 %26, i32 1) #9, !dbg !15414
  %27 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !15415
  %scan_end_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %27, i32 0, i32 9, !dbg !15417
  %28 = load i32, i32* %scan_end_arg, align 4, !dbg !15417
  %cmp4 = icmp ugt i32 %28, 1, !dbg !15418
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !15419

if.then5:                                         ; preds = %if.end
  %29 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15420
  %ao_mode1 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %29, i32 0, i32 14, !dbg !15422
  %30 = load i16, i16* %ao_mode1, align 2, !dbg !15423
  %conv = zext i16 %30 to i64, !dbg !15423
  %or6 = or i64 %conv, 32, !dbg !15423
  %conv7 = trunc i64 %or6 to i16, !dbg !15423
  store i16 %conv7, i16* %ao_mode1, align 2, !dbg !15423
  %31 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !15424
  %scan_end_arg8 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %31, i32 0, i32 9, !dbg !15424
  %32 = load i32, i32* %scan_end_arg8, align 4, !dbg !15424
  %sub = sub i32 %32, 1, !dbg !15424
  %and9 = and i32 %sub, 15, !dbg !15424
  %shl10 = shl i32 %and9, 6, !dbg !15424
  store i32 %shl10, i32* %bits, align 4, !dbg !15425
  br label %if.end34, !dbg !15426

if.else:                                          ; preds = %if.end
  %33 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15427
  %ao_mode111 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %33, i32 0, i32 14, !dbg !15429
  %34 = load i16, i16* %ao_mode111, align 2, !dbg !15430
  %conv12 = zext i16 %34 to i64, !dbg !15430
  %and13 = and i64 %conv12, -33, !dbg !15430
  %conv14 = trunc i64 %and13 to i16, !dbg !15430
  store i16 %conv14, i16* %ao_mode111, align 2, !dbg !15430
  store i32 0, i32* %bits, align 4, !dbg !15431
  %35 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15432
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %35, i32 0, i32 50, !dbg !15434
  %bf.load15 = load i16, i16* %is_m_series, align 8, !dbg !15434
  %bf.clear16 = and i16 %bf.load15, 1, !dbg !15434
  %bf.cast17 = zext i16 %bf.clear16 to i32, !dbg !15434
  %36 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15435
  %is_6xxx18 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %36, i32 0, i32 50, !dbg !15436
  %bf.load19 = load i16, i16* %is_6xxx18, align 8, !dbg !15436
  %bf.lshr20 = lshr i16 %bf.load19, 1, !dbg !15436
  %bf.clear21 = and i16 %bf.lshr20, 1, !dbg !15436
  %bf.cast22 = zext i16 %bf.clear21 to i32, !dbg !15436
  %or23 = or i32 %bf.cast17, %bf.cast22, !dbg !15437
  %tobool24 = icmp ne i32 %or23, 0, !dbg !15437
  br i1 %tobool24, label %if.then25, label %if.else26, !dbg !15438

if.then25:                                        ; preds = %if.else
  %37 = load i32, i32* %bits, align 4, !dbg !15439
  store i32 %37, i32* %bits, align 4, !dbg !15439
  br label %if.end33, !dbg !15440

if.else26:                                        ; preds = %if.else
  %38 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !15441
  %chanlist27 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %38, i32 0, i32 12, !dbg !15441
  %39 = load i32*, i32** %chanlist27, align 8, !dbg !15441
  %arrayidx28 = getelementptr i32, i32* %39, i64 0, !dbg !15441
  %40 = load i32, i32* %arrayidx28, align 4, !dbg !15441
  %and29 = and i32 %40, 65535, !dbg !15441
  %and30 = and i32 %and29, 15, !dbg !15441
  %shl31 = shl i32 %and30, 6, !dbg !15441
  %41 = load i32, i32* %bits, align 4, !dbg !15442
  %or32 = or i32 %41, %shl31, !dbg !15442
  store i32 %or32, i32* %bits, align 4, !dbg !15442
  br label %if.end33

if.end33:                                         ; preds = %if.else26, %if.then25
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then5
  %42 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15443
  %43 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15444
  %ao_mode135 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %43, i32 0, i32 14, !dbg !15445
  %44 = load i16, i16* %ao_mode135, align 2, !dbg !15445
  %conv36 = zext i16 %44 to i32, !dbg !15444
  call void @ni_stc_writew(%struct.comedi_device* %42, i32 %conv36, i32 38) #9, !dbg !15446
  %45 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15447
  %46 = load i32, i32* %bits, align 4, !dbg !15448
  call void @ni_stc_writew(%struct.comedi_device* %45, i32 %46, i32 86) #9, !dbg !15449
  %47 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15450
  call void @ni_stc_writew(%struct.comedi_device* %47, i32 512, i32 72) #9, !dbg !15451
  ret void, !dbg !15452
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_ao_cmd_set_stop_conditions(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd) #2 !dbg !15453 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !15454, metadata !DIExpression()), !dbg !15455
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !15456, metadata !DIExpression()), !dbg !15457
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !15458, metadata !DIExpression()), !dbg !15459
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15460
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !15461
  %1 = load i8*, i8** %private, align 8, !dbg !15461
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !15460
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !15459
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15462
  call void @ni_stc_writew(%struct.comedi_device* %3, i32 32, i32 72) #9, !dbg !15463
  %4 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15464
  %ao_mode3 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %4, i32 0, i32 16, !dbg !15465
  %5 = load i16, i16* %ao_mode3, align 2, !dbg !15466
  %conv = zext i16 %5 to i64, !dbg !15466
  %or = or i64 %conv, 32, !dbg !15466
  %conv1 = trunc i64 %or to i16, !dbg !15466
  store i16 %conv1, i16* %ao_mode3, align 2, !dbg !15466
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15467
  %7 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15468
  %ao_mode32 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %7, i32 0, i32 16, !dbg !15469
  %8 = load i16, i16* %ao_mode32, align 2, !dbg !15469
  %conv3 = zext i16 %8 to i32, !dbg !15468
  call void @ni_stc_writew(%struct.comedi_device* %6, i32 %conv3, i32 70) #9, !dbg !15470
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15471
  call void @ni_stc_writew(%struct.comedi_device* %9, i32 512, i32 72) #9, !dbg !15472
  ret void, !dbg !15473
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_ao_cmd_set_fifo_mode(%struct.comedi_device* %dev) #2 !dbg !15474 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !15475, metadata !DIExpression()), !dbg !15476
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !15477, metadata !DIExpression()), !dbg !15478
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15479
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !15480
  %1 = load i8*, i8** %private, align 8, !dbg !15480
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !15479
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !15478
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15481
  call void @ni_stc_writew(%struct.comedi_device* %3, i32 32, i32 72) #9, !dbg !15482
  %4 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15483
  %ao_mode2 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %4, i32 0, i32 15, !dbg !15484
  %5 = load i16, i16* %ao_mode2, align 8, !dbg !15485
  %conv = zext i16 %5 to i32, !dbg !15485
  %and = and i32 %conv, -49153, !dbg !15485
  %conv1 = trunc i32 %and to i16, !dbg !15485
  store i16 %conv1, i16* %ao_mode2, align 8, !dbg !15485
  %6 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15486
  %ao_mode22 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %6, i32 0, i32 15, !dbg !15487
  %7 = load i16, i16* %ao_mode22, align 8, !dbg !15488
  %conv3 = zext i16 %7 to i32, !dbg !15488
  %or = or i32 %conv3, 49152, !dbg !15488
  %conv4 = trunc i32 %or to i16, !dbg !15488
  store i16 %conv4, i16* %ao_mode22, align 8, !dbg !15488
  %8 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15489
  %ao_mode25 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %8, i32 0, i32 15, !dbg !15490
  %9 = load i16, i16* %ao_mode25, align 8, !dbg !15491
  %conv6 = zext i16 %9 to i64, !dbg !15491
  %and7 = and i64 %conv6, -8193, !dbg !15491
  %conv8 = trunc i64 %and7 to i16, !dbg !15491
  store i16 %conv8, i16* %ao_mode25, align 8, !dbg !15491
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15492
  %11 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15493
  %ao_mode29 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %11, i32 0, i32 15, !dbg !15494
  %12 = load i16, i16* %ao_mode29, align 8, !dbg !15494
  %conv10 = zext i16 %12 to i32, !dbg !15493
  call void @ni_stc_writew(%struct.comedi_device* %10, i32 %conv10, i32 39) #9, !dbg !15495
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15496
  call void @ni_stc_writew(%struct.comedi_device* %13, i32 4096, i32 66) #9, !dbg !15497
  %14 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15498
  call void @ni_stc_writew(%struct.comedi_device* %14, i32 512, i32 72) #9, !dbg !15499
  ret void, !dbg !15500
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_cmd_set_mite_transfer(%struct.mite_ring* %ring, %struct.comedi_subdevice* %sdev, %struct.comedi_cmd* %cmd, i32 %max_count) #2 !dbg !15501 {
entry:
  %ring.addr = alloca %struct.mite_ring*, align 8
  %sdev.addr = alloca %struct.comedi_subdevice*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %max_count.addr = alloca i32, align 4
  %nbytes = alloca i32, align 4
  store %struct.mite_ring* %ring, %struct.mite_ring** %ring.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mite_ring** %ring.addr, metadata !15504, metadata !DIExpression()), !dbg !15505
  store %struct.comedi_subdevice* %sdev, %struct.comedi_subdevice** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %sdev.addr, metadata !15506, metadata !DIExpression()), !dbg !15507
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !15508, metadata !DIExpression()), !dbg !15509
  store i32 %max_count, i32* %max_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_count.addr, metadata !15510, metadata !DIExpression()), !dbg !15511
  call void @llvm.dbg.declare(metadata i32* %nbytes, metadata !15512, metadata !DIExpression()), !dbg !15513
  %0 = load i32, i32* %max_count.addr, align 4, !dbg !15514
  store i32 %0, i32* %nbytes, align 4, !dbg !15513
  %1 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !15515
  %stop_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %1, i32 0, i32 11, !dbg !15517
  %2 = load i32, i32* %stop_arg, align 4, !dbg !15517
  %cmp = icmp ugt i32 %2, 0, !dbg !15518
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !15519

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !15520
  %stop_arg1 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %3, i32 0, i32 11, !dbg !15521
  %4 = load i32, i32* %stop_arg1, align 4, !dbg !15521
  %5 = load i32, i32* %max_count.addr, align 4, !dbg !15522
  %cmp2 = icmp ult i32 %4, %5, !dbg !15523
  br i1 %cmp2, label %if.then, label %if.end, !dbg !15524

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !15525
  %stop_arg3 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %6, i32 0, i32 11, !dbg !15526
  %7 = load i32, i32* %stop_arg3, align 4, !dbg !15526
  store i32 %7, i32* %nbytes, align 4, !dbg !15527
  br label %if.end, !dbg !15528

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %8 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %sdev.addr, align 8, !dbg !15529
  %call = call i32 @comedi_bytes_per_scan(%struct.comedi_subdevice* %8) #9, !dbg !15530
  %9 = load i32, i32* %nbytes, align 4, !dbg !15531
  %mul = mul i32 %9, %call, !dbg !15531
  store i32 %mul, i32* %nbytes, align 4, !dbg !15531
  %10 = load i32, i32* %nbytes, align 4, !dbg !15532
  %11 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %sdev.addr, align 8, !dbg !15534
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %11, i32 0, i32 7, !dbg !15535
  %12 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !15535
  %prealloc_bufsz = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %12, i32 0, i32 1, !dbg !15536
  %13 = load i32, i32* %prealloc_bufsz, align 8, !dbg !15536
  %cmp4 = icmp ugt i32 %10, %13, !dbg !15537
  br i1 %cmp4, label %if.then5, label %if.end12, !dbg !15538

if.then5:                                         ; preds = %if.end
  %14 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !15539
  %stop_arg6 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %14, i32 0, i32 11, !dbg !15542
  %15 = load i32, i32* %stop_arg6, align 4, !dbg !15542
  %cmp7 = icmp ugt i32 %15, 0, !dbg !15543
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !15544

if.then8:                                         ; preds = %if.then5
  %16 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %sdev.addr, align 8, !dbg !15545
  %device = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %16, i32 0, i32 0, !dbg !15545
  %17 = load %struct.comedi_device*, %struct.comedi_device** %device, align 8, !dbg !15545
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %17, i32 0, i32 4, !dbg !15545
  %18 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !15545
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %18, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.104, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.ni_cmd_set_mite_transfer, i64 0, i64 0)) #11, !dbg !15545
  br label %if.end9, !dbg !15545

if.end9:                                          ; preds = %if.then8, %if.then5
  %19 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %sdev.addr, align 8, !dbg !15546
  %async10 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %19, i32 0, i32 7, !dbg !15547
  %20 = load %struct.comedi_async*, %struct.comedi_async** %async10, align 8, !dbg !15547
  %prealloc_bufsz11 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %20, i32 0, i32 1, !dbg !15548
  %21 = load i32, i32* %prealloc_bufsz11, align 8, !dbg !15548
  store i32 %21, i32* %nbytes, align 4, !dbg !15549
  br label %if.end12, !dbg !15550

if.end12:                                         ; preds = %if.end9, %if.end
  %22 = load %struct.mite_ring*, %struct.mite_ring** %ring.addr, align 8, !dbg !15551
  %23 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %sdev.addr, align 8, !dbg !15552
  %24 = load i32, i32* %nbytes, align 4, !dbg !15553
  %call13 = call i32 @mite_init_ring_descriptors(%struct.mite_ring* %22, %struct.comedi_subdevice* %23, i32 %24) #9, !dbg !15554
  ret void, !dbg !15555
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_ao_cmd_set_interrupts(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #2 !dbg !15556 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !15557, metadata !DIExpression()), !dbg !15558
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !15559, metadata !DIExpression()), !dbg !15560
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !15561
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %0, i32 0, i32 7, !dbg !15563
  %1 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !15563
  %cmd = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %1, i32 0, i32 17, !dbg !15564
  %stop_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %cmd, i32 0, i32 10, !dbg !15565
  %2 = load i32, i32* %stop_src, align 8, !dbg !15565
  %cmp = icmp eq i32 %2, 32, !dbg !15566
  br i1 %cmp, label %if.then, label %if.end, !dbg !15567

if.then:                                          ; preds = %entry
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15568
  call void @ni_set_bits(%struct.comedi_device* %3, i32 75, i32 1, i32 1) #9, !dbg !15569
  br label %if.end, !dbg !15569

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !15570
  %async1 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %4, i32 0, i32 7, !dbg !15571
  %5 = load %struct.comedi_async*, %struct.comedi_async** %async1, align 8, !dbg !15571
  %inttrig = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %5, i32 0, i32 20, !dbg !15572
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)* @ni_ao_inttrig, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)** %inttrig, align 8, !dbg !15573
  ret void, !dbg !15574
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_get_reg_value(i32 %src, i32 %dest, %struct.ni_route_tables* %tables) #2 !dbg !15575 {
entry:
  %src.addr = alloca i32, align 4
  %dest.addr = alloca i32, align 4
  %tables.addr = alloca %struct.ni_route_tables*, align 8
  store i32 %src, i32* %src.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src.addr, metadata !15576, metadata !DIExpression()), !dbg !15577
  store i32 %dest, i32* %dest.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dest.addr, metadata !15578, metadata !DIExpression()), !dbg !15579
  store %struct.ni_route_tables* %tables, %struct.ni_route_tables** %tables.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ni_route_tables** %tables.addr, metadata !15580, metadata !DIExpression()), !dbg !15581
  %0 = load i32, i32* %src.addr, align 4, !dbg !15582
  %1 = load i32, i32* %dest.addr, align 4, !dbg !15583
  %2 = load %struct.ni_route_tables*, %struct.ni_route_tables** %tables.addr, align 8, !dbg !15584
  %call = call signext i8 @ni_get_reg_value_roffs(i32 %0, i32 %1, %struct.ni_route_tables* %2, i32 0) #9, !dbg !15585
  %conv = sext i8 %call to i32, !dbg !15585
  ret i32 %conv, !dbg !15586
}

; Function Attrs: noredzone
declare dso_local i32 @comedi_bytes_per_scan(%struct.comedi_subdevice*) #1

; Function Attrs: noredzone
declare dso_local i32 @mite_init_ring_descriptors(%struct.mite_ring*, %struct.comedi_subdevice*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_ao_inttrig(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, i32 %trig_num) #2 !dbg !15587 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %trig_num.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  %cmd = alloca %struct.comedi_cmd*, align 8
  %ret = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !15588, metadata !DIExpression()), !dbg !15589
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !15590, metadata !DIExpression()), !dbg !15591
  store i32 %trig_num, i32* %trig_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %trig_num.addr, metadata !15592, metadata !DIExpression()), !dbg !15593
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !15594, metadata !DIExpression()), !dbg !15595
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15596
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !15597
  %1 = load i8*, i8** %private, align 8, !dbg !15597
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !15596
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !15595
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd, metadata !15598, metadata !DIExpression()), !dbg !15599
  %3 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !15600
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %3, i32 0, i32 7, !dbg !15601
  %4 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !15601
  %cmd1 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %4, i32 0, i32 17, !dbg !15602
  store %struct.comedi_cmd* %cmd1, %struct.comedi_cmd** %cmd, align 8, !dbg !15599
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !15603, metadata !DIExpression()), !dbg !15604
  %5 = load i32, i32* %trig_num.addr, align 4, !dbg !15605
  %6 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !15607
  %start_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %6, i32 0, i32 3, !dbg !15608
  %7 = load i32, i32* %start_arg, align 4, !dbg !15608
  %cmp = icmp eq i32 %5, %7, !dbg !15609
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !15610

lor.lhs.false:                                    ; preds = %entry
  %8 = load i32, i32* %trig_num.addr, align 4, !dbg !15611
  %cmp2 = icmp eq i32 %8, 0, !dbg !15612
  br i1 %cmp2, label %land.lhs.true, label %if.then, !dbg !15613

land.lhs.true:                                    ; preds = %lor.lhs.false
  %9 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !15614
  %start_src = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %9, i32 0, i32 2, !dbg !15615
  %10 = load i32, i32* %start_src, align 8, !dbg !15615
  %cmp3 = icmp ne i32 %10, 128, !dbg !15616
  br i1 %cmp3, label %if.end, label %if.then, !dbg !15617

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false
  store i32 -22, i32* %retval, align 4, !dbg !15618
  br label %return, !dbg !15618

if.end:                                           ; preds = %land.lhs.true, %entry
  %11 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !15619
  %async4 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %11, i32 0, i32 7, !dbg !15620
  %12 = load %struct.comedi_async*, %struct.comedi_async** %async4, align 8, !dbg !15620
  %inttrig = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %12, i32 0, i32 20, !dbg !15621
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)* null, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)** %inttrig, align 8, !dbg !15622
  %13 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15623
  %ao_needs_arming = getelementptr inbounds %struct.ni_private, %struct.ni_private* %13, i32 0, i32 50, !dbg !15625
  %bf.load = load i16, i16* %ao_needs_arming, align 8, !dbg !15625
  %bf.lshr = lshr i16 %bf.load, 10, !dbg !15625
  %bf.clear = and i16 %bf.lshr, 1, !dbg !15625
  %bf.cast = zext i16 %bf.clear to i32, !dbg !15625
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !15623
  br i1 %tobool, label %if.then5, label %if.end9, !dbg !15626

if.then5:                                         ; preds = %if.end
  %14 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15627
  %15 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !15629
  %call = call i32 @ni_ao_arm(%struct.comedi_device* %14, %struct.comedi_subdevice* %15) #9, !dbg !15630
  store i32 %call, i32* %ret, align 4, !dbg !15631
  %16 = load i32, i32* %ret, align 4, !dbg !15632
  %tobool6 = icmp ne i32 %16, 0, !dbg !15632
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !15634

if.then7:                                         ; preds = %if.then5
  %17 = load i32, i32* %ret, align 4, !dbg !15635
  store i32 %17, i32* %retval, align 4, !dbg !15636
  br label %return, !dbg !15636

if.end8:                                          ; preds = %if.then5
  br label %if.end9, !dbg !15637

if.end9:                                          ; preds = %if.end8, %if.end
  %18 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15638
  %19 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15639
  %ao_cmd2 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %19, i32 0, i32 18, !dbg !15640
  %20 = load i16, i16* %ao_cmd2, align 2, !dbg !15640
  %conv = zext i16 %20 to i64, !dbg !15639
  %or = or i64 1, %conv, !dbg !15641
  %conv10 = trunc i64 %or to i32, !dbg !15642
  call void @ni_stc_writew(%struct.comedi_device* %18, i32 %conv10, i32 5) #9, !dbg !15643
  store i32 0, i32* %retval, align 4, !dbg !15644
  br label %return, !dbg !15644

return:                                           ; preds = %if.end9, %if.then7, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !15645
  ret i32 %21, !dbg !15645
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_release_ao_mite_channel(%struct.comedi_device* %dev) #2 !dbg !15646 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5432, metadata !DIExpression()), !dbg !15647
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5440, metadata !DIExpression()), !dbg !15649
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5232, metadata !DIExpression()), !dbg !15650
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !15657, metadata !DIExpression()), !dbg !15658
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !15659, metadata !DIExpression()), !dbg !15660
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15661
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !15662
  %1 = load i8*, i8** %private, align 8, !dbg !15662
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !15661
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !15660
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !15663, metadata !DIExpression()), !dbg !15664
  br label %do.body, !dbg !15665

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !15666

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !15667, metadata !DIExpression()), !dbg !15669
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !15670, metadata !DIExpression()), !dbg !15669
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !15669
  %conv = zext i1 %cmp to i32, !dbg !15669
  store i32 1, i32* %tmp, align 4, !dbg !15669
  %3 = load i32, i32* %tmp, align 4, !dbg !15669
  br label %do.body2, !dbg !15671

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !15672

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !15673

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !15675, metadata !DIExpression()), !dbg !15678
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !15679, metadata !DIExpression()), !dbg !15678
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !15678
  %conv8 = zext i1 %cmp7 to i32, !dbg !15678
  store i32 1, i32* %tmp9, align 4, !dbg !15678
  %4 = load i32, i32* %tmp9, align 4, !dbg !15678
  %call = call i64 @arch_local_irq_save() #9, !dbg !15680
  store i64 %call, i64* %flags, align 8, !dbg !15680
  br label %do.end, !dbg !15680

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !15673

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !15672

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15681, !srcloc !15682
  br label %do.body12, !dbg !15681

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15683
  %mite_channel_lock = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 7, !dbg !15683
  store %struct.spinlock* %mite_channel_lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15684
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !15685
  %rlock.i = bitcast %union.anon.3* %7 to %struct.raw_spinlock*, !dbg !15685
  br label %do.end14, !dbg !15683

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !15681

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !15672

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !15671

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !15666

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15686
  %ao_mite_chan = getelementptr inbounds %struct.ni_private, %struct.ni_private* %8, i32 0, i32 44, !dbg !15688
  %9 = load %struct.mite_channel*, %struct.mite_channel** %ao_mite_chan, align 8, !dbg !15688
  %tobool = icmp ne %struct.mite_channel* %9, null, !dbg !15686
  br i1 %tobool, label %if.then, label %if.end, !dbg !15689

if.then:                                          ; preds = %do.end18
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15690
  call void @ni_set_bitfield(%struct.comedi_device* %10, i32 9, i32 240, i32 0) #9, !dbg !15692
  %11 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15693
  %ao_mite_chan19 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %11, i32 0, i32 44, !dbg !15694
  %12 = load %struct.mite_channel*, %struct.mite_channel** %ao_mite_chan19, align 8, !dbg !15694
  call void @mite_release_channel(%struct.mite_channel* %12) #9, !dbg !15695
  %13 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15696
  %ao_mite_chan20 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %13, i32 0, i32 44, !dbg !15697
  store %struct.mite_channel* null, %struct.mite_channel** %ao_mite_chan20, align 8, !dbg !15698
  br label %if.end, !dbg !15699

if.end:                                           ; preds = %if.then, %do.end18
  %14 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15700
  %mite_channel_lock21 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %14, i32 0, i32 7, !dbg !15701
  %15 = load i64, i64* %flags, align 8, !dbg !15702
  store %struct.spinlock* %mite_channel_lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %15, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !15703
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !15703
  store i32 1, i32* %tmp.i, align 4, !dbg !15703
  %16 = load i32, i32* %tmp.i, align 4, !dbg !15703
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !15704
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !15704
  store i32 1, i32* %tmp8.i, align 4, !dbg !15704
  %17 = load i32, i32* %tmp8.i, align 4, !dbg !15704
  %18 = load i64, i64* %flags.addr.i, align 8, !dbg !15705
  call void @arch_local_irq_restore(i64 %18) #10, !dbg !15705
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15706, !srcloc !5582
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !15707
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !15707
  %rlock.i23 = bitcast %union.anon.3* %20 to %struct.raw_spinlock*, !dbg !15707
  ret void, !dbg !15708
}

; Function Attrs: noredzone
declare dso_local i32 @comedi_dio_update_state(%struct.comedi_subdevice*, i32*) #1

; Function Attrs: noredzone
declare dso_local i32 @comedi_dio_insn_config(%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @comedi_bytes_per_scan_cmd(%struct.comedi_subdevice*, %struct.comedi_cmd*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_cdio_check_chanlist(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, %struct.comedi_cmd* %cmd) #2 !dbg !15709 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %i = alloca i32, align 4
  %chan = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !15710, metadata !DIExpression()), !dbg !15711
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !15712, metadata !DIExpression()), !dbg !15713
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !15714, metadata !DIExpression()), !dbg !15715
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15716, metadata !DIExpression()), !dbg !15717
  store i32 0, i32* %i, align 4, !dbg !15718
  br label %for.cond, !dbg !15720

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !15721
  %1 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !15723
  %chanlist_len = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %1, i32 0, i32 13, !dbg !15724
  %2 = load i32, i32* %chanlist_len, align 8, !dbg !15724
  %cmp = icmp ult i32 %0, %2, !dbg !15725
  br i1 %cmp, label %for.body, label %for.end, !dbg !15726

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %chan, metadata !15727, metadata !DIExpression()), !dbg !15729
  %3 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !15730
  %chanlist = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %3, i32 0, i32 12, !dbg !15730
  %4 = load i32*, i32** %chanlist, align 8, !dbg !15730
  %5 = load i32, i32* %i, align 4, !dbg !15730
  %idxprom = sext i32 %5 to i64, !dbg !15730
  %arrayidx = getelementptr i32, i32* %4, i64 %idxprom, !dbg !15730
  %6 = load i32, i32* %arrayidx, align 4, !dbg !15730
  %and = and i32 %6, 65535, !dbg !15730
  store i32 %and, i32* %chan, align 4, !dbg !15729
  %7 = load i32, i32* %chan, align 4, !dbg !15731
  %8 = load i32, i32* %i, align 4, !dbg !15733
  %cmp1 = icmp ne i32 %7, %8, !dbg !15734
  br i1 %cmp1, label %if.then, label %if.end, !dbg !15735

if.then:                                          ; preds = %for.body
  store i32 -22, i32* %retval, align 4, !dbg !15736
  br label %return, !dbg !15736

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !15737

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4, !dbg !15738
  %inc = add i32 %9, 1, !dbg !15738
  store i32 %inc, i32* %i, align 4, !dbg !15738
  br label %for.cond, !dbg !15739, !llvm.loop !15740

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !15742
  br label %return, !dbg !15742

return:                                           ; preds = %for.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !15743
  ret i32 %10, !dbg !15743
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_request_cdo_mite_channel(%struct.comedi_device* %dev) #2 !dbg !15744 {
entry:
  %lock.addr.i41 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i41, metadata !5432, metadata !DIExpression()), !dbg !15745
  %flags.addr.i42 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i42, metadata !5440, metadata !DIExpression()), !dbg !15749
  %tmp.i43 = alloca i32, align 4
  %tmp8.i44 = alloca i32, align 4
  %lock.addr.i39 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i39, metadata !5432, metadata !DIExpression()), !dbg !15750
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5440, metadata !DIExpression()), !dbg !15752
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5232, metadata !DIExpression()), !dbg !15753
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %mite_chan = alloca %struct.mite_channel*, align 8
  %flags = alloca i64, align 8
  %bits = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !15760, metadata !DIExpression()), !dbg !15761
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !15762, metadata !DIExpression()), !dbg !15763
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15764
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !15765
  %1 = load i8*, i8** %private, align 8, !dbg !15765
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !15764
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !15763
  call void @llvm.dbg.declare(metadata %struct.mite_channel** %mite_chan, metadata !15766, metadata !DIExpression()), !dbg !15767
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !15768, metadata !DIExpression()), !dbg !15769
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !15770, metadata !DIExpression()), !dbg !15771
  br label %do.body, !dbg !15772

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !15773

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !15774, metadata !DIExpression()), !dbg !15776
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !15777, metadata !DIExpression()), !dbg !15776
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !15776
  %conv = zext i1 %cmp to i32, !dbg !15776
  store i32 1, i32* %tmp, align 4, !dbg !15776
  %3 = load i32, i32* %tmp, align 4, !dbg !15776
  br label %do.body2, !dbg !15778

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !15779

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !15780

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !15782, metadata !DIExpression()), !dbg !15785
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !15786, metadata !DIExpression()), !dbg !15785
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !15785
  %conv8 = zext i1 %cmp7 to i32, !dbg !15785
  store i32 1, i32* %tmp9, align 4, !dbg !15785
  %4 = load i32, i32* %tmp9, align 4, !dbg !15785
  %call = call i64 @arch_local_irq_save() #9, !dbg !15787
  store i64 %call, i64* %flags, align 8, !dbg !15787
  br label %do.end, !dbg !15787

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !15780

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !15779

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15788, !srcloc !15789
  br label %do.body12, !dbg !15788

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15790
  %mite_channel_lock = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 7, !dbg !15790
  store %struct.spinlock* %mite_channel_lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15791
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !15792
  %rlock.i = bitcast %union.anon.3* %7 to %struct.raw_spinlock*, !dbg !15792
  br label %do.end14, !dbg !15790

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !15788

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !15779

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !15778

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !15773

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15793
  %mite = getelementptr inbounds %struct.ni_private, %struct.ni_private* %8, i32 0, i32 42, !dbg !15794
  %9 = load %struct.mite*, %struct.mite** %mite, align 8, !dbg !15794
  %10 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15795
  %cdo_mite_ring = getelementptr inbounds %struct.ni_private, %struct.ni_private* %10, i32 0, i32 48, !dbg !15796
  %11 = load %struct.mite_ring*, %struct.mite_ring** %cdo_mite_ring, align 8, !dbg !15796
  %call19 = call %struct.mite_channel* @mite_request_channel(%struct.mite* %9, %struct.mite_ring* %11) #9, !dbg !15797
  store %struct.mite_channel* %call19, %struct.mite_channel** %mite_chan, align 8, !dbg !15798
  %12 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !15799
  %tobool = icmp ne %struct.mite_channel* %12, null, !dbg !15799
  br i1 %tobool, label %if.end, label %if.then, !dbg !15800

if.then:                                          ; preds = %do.end18
  %13 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15801
  %mite_channel_lock20 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %13, i32 0, i32 7, !dbg !15802
  %14 = load i64, i64* %flags, align 8, !dbg !15803
  store %struct.spinlock* %mite_channel_lock20, %struct.spinlock** %lock.addr.i41, align 8
  store i64 %14, i64* %flags.addr.i42, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !15804
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !15804
  store i32 1, i32* %tmp.i43, align 4, !dbg !15804
  %15 = load i32, i32* %tmp.i43, align 4, !dbg !15804
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !15805
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !15805
  store i32 1, i32* %tmp8.i44, align 4, !dbg !15805
  %16 = load i32, i32* %tmp8.i44, align 4, !dbg !15805
  %17 = load i64, i64* %flags.addr.i42, align 8, !dbg !15806
  call void @arch_local_irq_restore(i64 %17) #10, !dbg !15806
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15807, !srcloc !5582
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i41, align 8, !dbg !15808
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !15808
  %rlock.i45 = bitcast %union.anon.3* %19 to %struct.raw_spinlock*, !dbg !15808
  %20 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15809
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %20, i32 0, i32 4, !dbg !15809
  %21 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !15809
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %21, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.106, i64 0, i64 0)) #11, !dbg !15809
  store i32 -16, i32* %retval, align 4, !dbg !15810
  br label %return, !dbg !15810

if.end:                                           ; preds = %do.end18
  %22 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !15811
  %dir = getelementptr inbounds %struct.mite_channel, %struct.mite_channel* %22, i32 0, i32 2, !dbg !15812
  store i32 1, i32* %dir, align 4, !dbg !15813
  %23 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !15814
  %24 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15815
  %cdo_mite_chan = getelementptr inbounds %struct.ni_private, %struct.ni_private* %24, i32 0, i32 45, !dbg !15816
  store %struct.mite_channel* %23, %struct.mite_channel** %cdo_mite_chan, align 8, !dbg !15817
  %25 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !15818
  %channel = getelementptr inbounds %struct.mite_channel, %struct.mite_channel* %25, i32 0, i32 1, !dbg !15818
  %26 = load i32, i32* %channel, align 8, !dbg !15818
  %cmp21 = icmp ult i32 %26, 4, !dbg !15818
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !15818

cond.true:                                        ; preds = %if.end
  %27 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !15818
  %channel23 = getelementptr inbounds %struct.mite_channel, %struct.mite_channel* %27, i32 0, i32 1, !dbg !15818
  %28 = load i32, i32* %channel23, align 8, !dbg !15818
  %sh_prom = zext i32 %28 to i64, !dbg !15818
  %shl = shl i64 1, %sh_prom, !dbg !15818
  br label %cond.end34, !dbg !15818

cond.false:                                       ; preds = %if.end
  %29 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !15818
  %channel24 = getelementptr inbounds %struct.mite_channel, %struct.mite_channel* %29, i32 0, i32 1, !dbg !15818
  %30 = load i32, i32* %channel24, align 8, !dbg !15818
  %cmp25 = icmp eq i32 %30, 4, !dbg !15818
  br i1 %cmp25, label %cond.true27, label %cond.false28, !dbg !15818

cond.true27:                                      ; preds = %cond.false
  br label %cond.end, !dbg !15818

cond.false28:                                     ; preds = %cond.false
  %31 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !15818
  %channel29 = getelementptr inbounds %struct.mite_channel, %struct.mite_channel* %31, i32 0, i32 1, !dbg !15818
  %32 = load i32, i32* %channel29, align 8, !dbg !15818
  %cmp30 = icmp eq i32 %32, 5, !dbg !15818
  %33 = zext i1 %cmp30 to i64, !dbg !15818
  %cond = select i1 %cmp30, i32 5, i32 0, !dbg !15818
  br label %cond.end, !dbg !15818

cond.end:                                         ; preds = %cond.false28, %cond.true27
  %cond32 = phi i32 [ 3, %cond.true27 ], [ %cond, %cond.false28 ], !dbg !15818
  %conv33 = sext i32 %cond32 to i64, !dbg !15818
  br label %cond.end34, !dbg !15818

cond.end34:                                       ; preds = %cond.end, %cond.true
  %cond35 = phi i64 [ %shl, %cond.true ], [ %conv33, %cond.end ], !dbg !15818
  %conv36 = trunc i64 %cond35 to i32, !dbg !15818
  store i32 %conv36, i32* %bits, align 4, !dbg !15819
  %34 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15820
  %35 = load i32, i32* %bits, align 4, !dbg !15821
  %and = and i32 %35, 15, !dbg !15821
  %shl37 = shl i32 %and, 4, !dbg !15821
  call void @ni_set_bitfield(%struct.comedi_device* %34, i32 7, i32 240, i32 %shl37) #9, !dbg !15822
  %36 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15823
  %mite_channel_lock38 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %36, i32 0, i32 7, !dbg !15824
  %37 = load i64, i64* %flags, align 8, !dbg !15825
  store %struct.spinlock* %mite_channel_lock38, %struct.spinlock** %lock.addr.i39, align 8
  store i64 %37, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !15826
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !15826
  store i32 1, i32* %tmp.i, align 4, !dbg !15826
  %38 = load i32, i32* %tmp.i, align 4, !dbg !15826
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !15827
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !15827
  store i32 1, i32* %tmp8.i, align 4, !dbg !15827
  %39 = load i32, i32* %tmp8.i, align 4, !dbg !15827
  %40 = load i64, i64* %flags.addr.i, align 8, !dbg !15828
  call void @arch_local_irq_restore(i64 %40) #10, !dbg !15828
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15829, !srcloc !5582
  %41 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i39, align 8, !dbg !15830
  %42 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %41, i32 0, i32 0, !dbg !15830
  %rlock.i40 = bitcast %union.anon.3* %42 to %struct.raw_spinlock*, !dbg !15830
  store i32 0, i32* %retval, align 4, !dbg !15831
  br label %return, !dbg !15831

return:                                           ; preds = %cond.end34, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !15832
  ret i32 %43, !dbg !15832
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_cdo_inttrig(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, i32 %trig_num) #2 !dbg !15833 {
entry:
  %lock.addr.i47 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i47, metadata !5432, metadata !DIExpression()), !dbg !15834
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5440, metadata !DIExpression()), !dbg !15836
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5232, metadata !DIExpression()), !dbg !15837
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %trig_num.addr = alloca i32, align 4
  %cmd = alloca %struct.comedi_cmd*, align 8
  %timeout = alloca i32, align 4
  %retval2 = alloca i32, align 4
  %i = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy10 = alloca i64, align 8
  %__dummy211 = alloca i64, align 8
  %tmp14 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !15844, metadata !DIExpression()), !dbg !15845
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !15846, metadata !DIExpression()), !dbg !15847
  store i32 %trig_num, i32* %trig_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %trig_num.addr, metadata !15848, metadata !DIExpression()), !dbg !15849
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd, metadata !15850, metadata !DIExpression()), !dbg !15851
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !15852
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %0, i32 0, i32 7, !dbg !15853
  %1 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !15853
  %cmd1 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %1, i32 0, i32 17, !dbg !15854
  store %struct.comedi_cmd* %cmd1, %struct.comedi_cmd** %cmd, align 8, !dbg !15851
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !15855, metadata !DIExpression()), !dbg !15856
  store i32 1000, i32* %timeout, align 4, !dbg !15856
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !15857, metadata !DIExpression()), !dbg !15858
  store i32 0, i32* %retval2, align 4, !dbg !15858
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15859, metadata !DIExpression()), !dbg !15860
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !15861, metadata !DIExpression()), !dbg !15862
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15863
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %2, i32 0, i32 3, !dbg !15864
  %3 = load i8*, i8** %private, align 8, !dbg !15864
  %4 = bitcast i8* %3 to %struct.ni_private*, !dbg !15863
  store %struct.ni_private* %4, %struct.ni_private** %devpriv, align 8, !dbg !15862
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !15865, metadata !DIExpression()), !dbg !15866
  %5 = load i32, i32* %trig_num.addr, align 4, !dbg !15867
  %6 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd, align 8, !dbg !15869
  %start_arg = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %6, i32 0, i32 3, !dbg !15870
  %7 = load i32, i32* %start_arg, align 4, !dbg !15870
  %cmp = icmp ne i32 %5, %7, !dbg !15871
  br i1 %cmp, label %if.then, label %if.end, !dbg !15872

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !15873
  br label %return, !dbg !15873

if.end:                                           ; preds = %entry
  %8 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !15874
  %async3 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %8, i32 0, i32 7, !dbg !15875
  %9 = load %struct.comedi_async*, %struct.comedi_async** %async3, align 8, !dbg !15875
  %inttrig = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %9, i32 0, i32 20, !dbg !15876
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)* null, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)** %inttrig, align 8, !dbg !15877
  %10 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !15878
  %11 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !15879
  %async4 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %11, i32 0, i32 7, !dbg !15880
  %12 = load %struct.comedi_async*, %struct.comedi_async** %async4, align 8, !dbg !15880
  %prealloc_bufsz = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %12, i32 0, i32 1, !dbg !15881
  %13 = load i32, i32* %prealloc_bufsz, align 8, !dbg !15881
  %call = call i32 @comedi_buf_read_alloc(%struct.comedi_subdevice* %10, i32 %13) #9, !dbg !15882
  br label %do.body, !dbg !15883

do.body:                                          ; preds = %if.end
  br label %do.body5, !dbg !15884

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !15885, metadata !DIExpression()), !dbg !15887
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !15888, metadata !DIExpression()), !dbg !15887
  %cmp6 = icmp eq i64* %__dummy, %__dummy2, !dbg !15887
  %conv = zext i1 %cmp6 to i32, !dbg !15887
  store i32 1, i32* %tmp, align 4, !dbg !15887
  %14 = load i32, i32* %tmp, align 4, !dbg !15887
  br label %do.body7, !dbg !15889

do.body7:                                         ; preds = %do.body5
  br label %do.body8, !dbg !15890

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !15891

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy10, metadata !15893, metadata !DIExpression()), !dbg !15896
  call void @llvm.dbg.declare(metadata i64* %__dummy211, metadata !15897, metadata !DIExpression()), !dbg !15896
  %cmp12 = icmp eq i64* %__dummy10, %__dummy211, !dbg !15896
  %conv13 = zext i1 %cmp12 to i32, !dbg !15896
  store i32 1, i32* %tmp14, align 4, !dbg !15896
  %15 = load i32, i32* %tmp14, align 4, !dbg !15896
  %call15 = call i64 @arch_local_irq_save() #9, !dbg !15898
  store i64 %call15, i64* %flags, align 8, !dbg !15898
  br label %do.end, !dbg !15898

do.end:                                           ; preds = %do.body9
  br label %do.end16, !dbg !15891

do.end16:                                         ; preds = %do.end
  br label %do.body17, !dbg !15890

do.body17:                                        ; preds = %do.end16
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15899, !srcloc !15900
  br label %do.body18, !dbg !15899

do.body18:                                        ; preds = %do.body17
  %16 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15901
  %mite_channel_lock = getelementptr inbounds %struct.ni_private, %struct.ni_private* %16, i32 0, i32 7, !dbg !15901
  store %struct.spinlock* %mite_channel_lock, %struct.spinlock** %lock.addr.i, align 8
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15902
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !15903
  %rlock.i = bitcast %union.anon.3* %18 to %struct.raw_spinlock*, !dbg !15903
  br label %do.end20, !dbg !15901

do.end20:                                         ; preds = %do.body18
  br label %do.end21, !dbg !15899

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !15890

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !15889

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !15884

do.end24:                                         ; preds = %do.end23
  %19 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15904
  %cdo_mite_chan = getelementptr inbounds %struct.ni_private, %struct.ni_private* %19, i32 0, i32 45, !dbg !15906
  %20 = load %struct.mite_channel*, %struct.mite_channel** %cdo_mite_chan, align 8, !dbg !15906
  %tobool = icmp ne %struct.mite_channel* %20, null, !dbg !15904
  br i1 %tobool, label %if.then25, label %if.else, !dbg !15907

if.then25:                                        ; preds = %do.end24
  %21 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15908
  %cdo_mite_chan26 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %21, i32 0, i32 45, !dbg !15910
  %22 = load %struct.mite_channel*, %struct.mite_channel** %cdo_mite_chan26, align 8, !dbg !15910
  call void @mite_prep_dma(%struct.mite_channel* %22, i32 32, i32 32) #9, !dbg !15911
  %23 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15912
  %cdo_mite_chan27 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %23, i32 0, i32 45, !dbg !15913
  %24 = load %struct.mite_channel*, %struct.mite_channel** %cdo_mite_chan27, align 8, !dbg !15913
  call void @mite_dma_arm(%struct.mite_channel* %24) #9, !dbg !15914
  br label %if.end28, !dbg !15915

if.else:                                          ; preds = %do.end24
  %25 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15916
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %25, i32 0, i32 4, !dbg !15916
  %26 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !15916
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %26, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.107, i64 0, i64 0)) #11, !dbg !15916
  store i32 -5, i32* %retval2, align 4, !dbg !15918
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then25
  %27 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !15919
  %mite_channel_lock29 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %27, i32 0, i32 7, !dbg !15920
  %28 = load i64, i64* %flags, align 8, !dbg !15921
  store %struct.spinlock* %mite_channel_lock29, %struct.spinlock** %lock.addr.i47, align 8
  store i64 %28, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !15922
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !15922
  store i32 1, i32* %tmp.i, align 4, !dbg !15922
  %29 = load i32, i32* %tmp.i, align 4, !dbg !15922
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !15923
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !15923
  store i32 1, i32* %tmp8.i, align 4, !dbg !15923
  %30 = load i32, i32* %tmp8.i, align 4, !dbg !15923
  %31 = load i64, i64* %flags.addr.i, align 8, !dbg !15924
  call void @arch_local_irq_restore(i64 %31) #10, !dbg !15924
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15925, !srcloc !5582
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i47, align 8, !dbg !15926
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !15926
  %rlock.i48 = bitcast %union.anon.3* %33 to %struct.raw_spinlock*, !dbg !15926
  %34 = load i32, i32* %retval2, align 4, !dbg !15927
  %cmp30 = icmp slt i32 %34, 0, !dbg !15929
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !15930

if.then32:                                        ; preds = %if.end28
  %35 = load i32, i32* %retval2, align 4, !dbg !15931
  store i32 %35, i32* %retval, align 4, !dbg !15932
  br label %return, !dbg !15932

if.end33:                                         ; preds = %if.end28
  store i32 0, i32* %i, align 4, !dbg !15933
  br label %for.cond, !dbg !15935

for.cond:                                         ; preds = %for.inc, %if.end33
  %36 = load i32, i32* %i, align 4, !dbg !15936
  %cmp34 = icmp ult i32 %36, 1000, !dbg !15938
  br i1 %cmp34, label %for.body, label %for.end, !dbg !15939

for.body:                                         ; preds = %for.cond
  %37 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15940
  %call36 = call i32 @ni_readl(%struct.comedi_device* %37, i32 548) #9, !dbg !15943
  %conv37 = zext i32 %call36 to i64, !dbg !15943
  %and = and i64 %conv37, 2, !dbg !15944
  %tobool38 = icmp ne i64 %and, 0, !dbg !15944
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !15945

if.then39:                                        ; preds = %for.body
  br label %for.end, !dbg !15946

if.end40:                                         ; preds = %for.body
  call void @usleep_range(i64 10, i64 100) #9, !dbg !15947
  br label %for.inc, !dbg !15948

for.inc:                                          ; preds = %if.end40
  %38 = load i32, i32* %i, align 4, !dbg !15949
  %inc = add i32 %38, 1, !dbg !15949
  store i32 %inc, i32* %i, align 4, !dbg !15949
  br label %for.cond, !dbg !15950, !llvm.loop !15951

for.end:                                          ; preds = %if.then39, %for.cond
  %39 = load i32, i32* %i, align 4, !dbg !15953
  %cmp41 = icmp eq i32 %39, 1000, !dbg !15955
  br i1 %cmp41, label %if.then43, label %if.end46, !dbg !15956

if.then43:                                        ; preds = %for.end
  %40 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15957
  %class_dev44 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %40, i32 0, i32 4, !dbg !15957
  %41 = load %struct.device*, %struct.device** %class_dev44, align 8, !dbg !15957
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %41, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.108, i64 0, i64 0)) #11, !dbg !15957
  %42 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !15959
  %cancel = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %42, i32 0, i32 25, !dbg !15960
  %43 = load i32 (%struct.comedi_device*, %struct.comedi_subdevice*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %cancel, align 8, !dbg !15960
  %44 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15961
  %45 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !15962
  %call45 = call i32 %43(%struct.comedi_device* %44, %struct.comedi_subdevice* %45) #9, !dbg !15959
  store i32 -5, i32* %retval, align 4, !dbg !15963
  br label %return, !dbg !15963

if.end46:                                         ; preds = %for.end
  %46 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15964
  call void @ni_writel(%struct.comedi_device* %46, i32 65602, i32 548) #9, !dbg !15965
  %47 = load i32, i32* %retval2, align 4, !dbg !15966
  store i32 %47, i32* %retval, align 4, !dbg !15967
  br label %return, !dbg !15967

return:                                           ; preds = %if.end46, %if.then43, %if.then32, %if.then
  %48 = load i32, i32* %retval, align 4, !dbg !15968
  ret i32 %48, !dbg !15968
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_release_cdo_mite_channel(%struct.comedi_device* %dev) #2 !dbg !15969 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5432, metadata !DIExpression()), !dbg !15970
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5440, metadata !DIExpression()), !dbg !15972
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5232, metadata !DIExpression()), !dbg !15973
  %dev.addr = alloca %struct.comedi_device*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !15980, metadata !DIExpression()), !dbg !15981
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !15982, metadata !DIExpression()), !dbg !15983
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !15984
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !15985
  %1 = load i8*, i8** %private, align 8, !dbg !15985
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !15984
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !15983
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !15986, metadata !DIExpression()), !dbg !15987
  br label %do.body, !dbg !15988

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !15989

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !15990, metadata !DIExpression()), !dbg !15992
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !15993, metadata !DIExpression()), !dbg !15992
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !15992
  %conv = zext i1 %cmp to i32, !dbg !15992
  store i32 1, i32* %tmp, align 4, !dbg !15992
  %3 = load i32, i32* %tmp, align 4, !dbg !15992
  br label %do.body2, !dbg !15994

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !15995

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !15996

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !15998, metadata !DIExpression()), !dbg !16001
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !16002, metadata !DIExpression()), !dbg !16001
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !16001
  %conv8 = zext i1 %cmp7 to i32, !dbg !16001
  store i32 1, i32* %tmp9, align 4, !dbg !16001
  %4 = load i32, i32* %tmp9, align 4, !dbg !16001
  %call = call i64 @arch_local_irq_save() #9, !dbg !16003
  store i64 %call, i64* %flags, align 8, !dbg !16003
  br label %do.end, !dbg !16003

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !15996

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !15995

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16004, !srcloc !16005
  br label %do.body12, !dbg !16004

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16006
  %mite_channel_lock = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 7, !dbg !16006
  store %struct.spinlock* %mite_channel_lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16007
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !16008
  %rlock.i = bitcast %union.anon.3* %7 to %struct.raw_spinlock*, !dbg !16008
  br label %do.end14, !dbg !16006

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !16004

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !15995

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !15994

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !15989

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16009
  %cdo_mite_chan = getelementptr inbounds %struct.ni_private, %struct.ni_private* %8, i32 0, i32 45, !dbg !16011
  %9 = load %struct.mite_channel*, %struct.mite_channel** %cdo_mite_chan, align 8, !dbg !16011
  %tobool = icmp ne %struct.mite_channel* %9, null, !dbg !16009
  br i1 %tobool, label %if.then, label %if.end, !dbg !16012

if.then:                                          ; preds = %do.end18
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16013
  call void @ni_set_bitfield(%struct.comedi_device* %10, i32 7, i32 240, i32 0) #9, !dbg !16015
  %11 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16016
  %cdo_mite_chan19 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %11, i32 0, i32 45, !dbg !16017
  %12 = load %struct.mite_channel*, %struct.mite_channel** %cdo_mite_chan19, align 8, !dbg !16017
  call void @mite_release_channel(%struct.mite_channel* %12) #9, !dbg !16018
  %13 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16019
  %cdo_mite_chan20 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %13, i32 0, i32 45, !dbg !16020
  store %struct.mite_channel* null, %struct.mite_channel** %cdo_mite_chan20, align 8, !dbg !16021
  br label %if.end, !dbg !16022

if.end:                                           ; preds = %if.then, %do.end18
  %14 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16023
  %mite_channel_lock21 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %14, i32 0, i32 7, !dbg !16024
  %15 = load i64, i64* %flags, align 8, !dbg !16025
  store %struct.spinlock* %mite_channel_lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %15, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !16026
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !16026
  store i32 1, i32* %tmp.i, align 4, !dbg !16026
  %16 = load i32, i32* %tmp.i, align 4, !dbg !16026
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !16027
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !16027
  store i32 1, i32* %tmp8.i, align 4, !dbg !16027
  %17 = load i32, i32* %tmp8.i, align 4, !dbg !16027
  %18 = load i64, i64* %flags.addr.i, align 8, !dbg !16028
  call void @arch_local_irq_restore(i64 %18) #10, !dbg !16028
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16029, !srcloc !5582
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !16030
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !16030
  %rlock.i23 = bitcast %union.anon.3* %20 to %struct.raw_spinlock*, !dbg !16030
  ret void, !dbg !16031
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_get_pwm_config(%struct.comedi_device* %dev, i32* %data) #2 !dbg !16032 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %data.addr = alloca i32*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !16035, metadata !DIExpression()), !dbg !16036
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !16037, metadata !DIExpression()), !dbg !16038
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !16039, metadata !DIExpression()), !dbg !16040
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16041
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !16042
  %1 = load i8*, i8** %private, align 8, !dbg !16042
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !16041
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !16040
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16043
  %pwm_up_count = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 38, !dbg !16044
  %4 = load i16, i16* %pwm_up_count, align 4, !dbg !16044
  %conv = zext i16 %4 to i32, !dbg !16043
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16045
  %clock_ns = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 36, !dbg !16046
  %6 = load i32, i32* %clock_ns, align 4, !dbg !16046
  %mul = mul i32 %conv, %6, !dbg !16047
  %7 = load i32*, i32** %data.addr, align 8, !dbg !16048
  %arrayidx = getelementptr i32, i32* %7, i64 1, !dbg !16048
  store i32 %mul, i32* %arrayidx, align 4, !dbg !16049
  %8 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16050
  %pwm_down_count = getelementptr inbounds %struct.ni_private, %struct.ni_private* %8, i32 0, i32 39, !dbg !16051
  %9 = load i16, i16* %pwm_down_count, align 2, !dbg !16051
  %conv1 = zext i16 %9 to i32, !dbg !16050
  %10 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16052
  %clock_ns2 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %10, i32 0, i32 36, !dbg !16053
  %11 = load i32, i32* %clock_ns2, align 4, !dbg !16053
  %mul3 = mul i32 %conv1, %11, !dbg !16054
  %12 = load i32*, i32** %data.addr, align 8, !dbg !16055
  %arrayidx4 = getelementptr i32, i32* %12, i64 2, !dbg !16055
  store i32 %mul3, i32* %arrayidx4, align 4, !dbg !16056
  ret i32 3, !dbg !16057
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_write_caldac(%struct.comedi_device* %dev, i32 %addr, i32 %val) #2 !dbg !16058 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %addr.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %board = alloca %struct.ni_board_struct*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %loadbit = alloca i32, align 4
  %bits = alloca i32, align 4
  %bit = alloca i32, align 4
  %bitstring = alloca i32, align 4
  %cmd = alloca i32, align 4
  %i = alloca i32, align 4
  %type = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !16061, metadata !DIExpression()), !dbg !16062
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !16063, metadata !DIExpression()), !dbg !16064
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16065, metadata !DIExpression()), !dbg !16066
  call void @llvm.dbg.declare(metadata %struct.ni_board_struct** %board, metadata !16067, metadata !DIExpression()), !dbg !16068
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16069
  %board_ptr = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 9, !dbg !16070
  %1 = load i8*, i8** %board_ptr, align 8, !dbg !16070
  %2 = bitcast i8* %1 to %struct.ni_board_struct*, !dbg !16069
  store %struct.ni_board_struct* %2, %struct.ni_board_struct** %board, align 8, !dbg !16068
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !16071, metadata !DIExpression()), !dbg !16072
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16073
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 3, !dbg !16074
  %4 = load i8*, i8** %private, align 8, !dbg !16074
  %5 = bitcast i8* %4 to %struct.ni_private*, !dbg !16073
  store %struct.ni_private* %5, %struct.ni_private** %devpriv, align 8, !dbg !16072
  call void @llvm.dbg.declare(metadata i32* %loadbit, metadata !16075, metadata !DIExpression()), !dbg !16076
  store i32 0, i32* %loadbit, align 4, !dbg !16076
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !16077, metadata !DIExpression()), !dbg !16078
  store i32 0, i32* %bits, align 4, !dbg !16078
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !16079, metadata !DIExpression()), !dbg !16080
  call void @llvm.dbg.declare(metadata i32* %bitstring, metadata !16081, metadata !DIExpression()), !dbg !16082
  store i32 0, i32* %bitstring, align 4, !dbg !16082
  call void @llvm.dbg.declare(metadata i32* %cmd, metadata !16083, metadata !DIExpression()), !dbg !16084
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16085, metadata !DIExpression()), !dbg !16086
  call void @llvm.dbg.declare(metadata i32* %type, metadata !16087, metadata !DIExpression()), !dbg !16088
  %6 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16089
  %caldacs = getelementptr inbounds %struct.ni_private, %struct.ni_private* %6, i32 0, i32 11, !dbg !16091
  %7 = load i32, i32* %addr.addr, align 4, !dbg !16092
  %idxprom = sext i32 %7 to i64, !dbg !16089
  %arrayidx = getelementptr [34 x i16], [34 x i16]* %caldacs, i64 0, i64 %idxprom, !dbg !16089
  %8 = load i16, i16* %arrayidx, align 2, !dbg !16089
  %conv = zext i16 %8 to i32, !dbg !16089
  %9 = load i32, i32* %val.addr, align 4, !dbg !16093
  %cmp = icmp eq i32 %conv, %9, !dbg !16094
  br i1 %cmp, label %if.then, label %if.end, !dbg !16095

if.then:                                          ; preds = %entry
  br label %return, !dbg !16096

if.end:                                           ; preds = %entry
  %10 = load i32, i32* %val.addr, align 4, !dbg !16097
  %conv2 = trunc i32 %10 to i16, !dbg !16097
  %11 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16098
  %caldacs3 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %11, i32 0, i32 11, !dbg !16099
  %12 = load i32, i32* %addr.addr, align 4, !dbg !16100
  %idxprom4 = sext i32 %12 to i64, !dbg !16098
  %arrayidx5 = getelementptr [34 x i16], [34 x i16]* %caldacs3, i64 0, i64 %idxprom4, !dbg !16098
  store i16 %conv2, i16* %arrayidx5, align 2, !dbg !16101
  store i32 0, i32* %i, align 4, !dbg !16102
  br label %for.cond, !dbg !16104

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load i32, i32* %i, align 4, !dbg !16105
  %cmp6 = icmp slt i32 %13, 3, !dbg !16107
  br i1 %cmp6, label %for.body, label %for.end, !dbg !16108

for.body:                                         ; preds = %for.cond
  %14 = load %struct.ni_board_struct*, %struct.ni_board_struct** %board, align 8, !dbg !16109
  %caldac = getelementptr inbounds %struct.ni_board_struct, %struct.ni_board_struct* %14, i32 0, i32 18, !dbg !16111
  %15 = load i32, i32* %i, align 4, !dbg !16112
  %idxprom8 = sext i32 %15 to i64, !dbg !16109
  %arrayidx9 = getelementptr [3 x i32], [3 x i32]* %caldac, i64 0, i64 %idxprom8, !dbg !16109
  %16 = load i32, i32* %arrayidx9, align 4, !dbg !16109
  store i32 %16, i32* %type, align 4, !dbg !16113
  %17 = load i32, i32* %type, align 4, !dbg !16114
  %cmp10 = icmp eq i32 %17, 0, !dbg !16116
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !16117

if.then12:                                        ; preds = %for.body
  br label %for.end, !dbg !16118

if.end13:                                         ; preds = %for.body
  %18 = load i32, i32* %addr.addr, align 4, !dbg !16119
  %19 = load i32, i32* %type, align 4, !dbg !16121
  %idxprom14 = sext i32 %19 to i64, !dbg !16122
  %arrayidx15 = getelementptr [8 x %struct.caldac_struct], [8 x %struct.caldac_struct]* @caldacs, i64 0, i64 %idxprom14, !dbg !16122
  %n_chans = getelementptr inbounds %struct.caldac_struct, %struct.caldac_struct* %arrayidx15, i32 0, i32 0, !dbg !16123
  %20 = load i32, i32* %n_chans, align 16, !dbg !16123
  %cmp16 = icmp slt i32 %18, %20, !dbg !16124
  br i1 %cmp16, label %if.then18, label %if.end22, !dbg !16125

if.then18:                                        ; preds = %if.end13
  %21 = load i32, i32* %type, align 4, !dbg !16126
  %idxprom19 = sext i32 %21 to i64, !dbg !16128
  %arrayidx20 = getelementptr [8 x %struct.caldac_struct], [8 x %struct.caldac_struct]* @caldacs, i64 0, i64 %idxprom19, !dbg !16128
  %packbits = getelementptr inbounds %struct.caldac_struct, %struct.caldac_struct* %arrayidx20, i32 0, i32 2, !dbg !16129
  %22 = load i32 (i32, i32, i32*)*, i32 (i32, i32, i32*)** %packbits, align 8, !dbg !16129
  %23 = load i32, i32* %addr.addr, align 4, !dbg !16130
  %24 = load i32, i32* %val.addr, align 4, !dbg !16131
  %call = call i32 %22(i32 %23, i32 %24, i32* %bitstring) #9, !dbg !16128
  store i32 %call, i32* %bits, align 4, !dbg !16132
  %25 = load i32, i32* %i, align 4, !dbg !16133
  %add = add i32 3, %25, !dbg !16133
  %sh_prom = zext i32 %add to i64, !dbg !16133
  %shl = shl i64 1, %sh_prom, !dbg !16133
  %conv21 = trunc i64 %shl to i32, !dbg !16133
  store i32 %conv21, i32* %loadbit, align 4, !dbg !16134
  br label %for.end, !dbg !16135

if.end22:                                         ; preds = %if.end13
  %26 = load i32, i32* %type, align 4, !dbg !16136
  %idxprom23 = sext i32 %26 to i64, !dbg !16137
  %arrayidx24 = getelementptr [8 x %struct.caldac_struct], [8 x %struct.caldac_struct]* @caldacs, i64 0, i64 %idxprom23, !dbg !16137
  %n_chans25 = getelementptr inbounds %struct.caldac_struct, %struct.caldac_struct* %arrayidx24, i32 0, i32 0, !dbg !16138
  %27 = load i32, i32* %n_chans25, align 16, !dbg !16138
  %28 = load i32, i32* %addr.addr, align 4, !dbg !16139
  %sub = sub i32 %28, %27, !dbg !16139
  store i32 %sub, i32* %addr.addr, align 4, !dbg !16139
  br label %for.inc, !dbg !16140

for.inc:                                          ; preds = %if.end22
  %29 = load i32, i32* %i, align 4, !dbg !16141
  %inc = add i32 %29, 1, !dbg !16141
  store i32 %inc, i32* %i, align 4, !dbg !16141
  br label %for.cond, !dbg !16142, !llvm.loop !16143

for.end:                                          ; preds = %if.then18, %if.then12, %for.cond
  %30 = load i32, i32* %bits, align 4, !dbg !16145
  %cmp26 = icmp eq i32 %30, 0, !dbg !16147
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !16148

if.then28:                                        ; preds = %for.end
  br label %return, !dbg !16149

if.end29:                                         ; preds = %for.end
  %31 = load i32, i32* %bits, align 4, !dbg !16150
  %sub30 = sub i32 %31, 1, !dbg !16152
  %shl31 = shl i32 1, %sub30, !dbg !16153
  store i32 %shl31, i32* %bit, align 4, !dbg !16154
  br label %for.cond32, !dbg !16155

for.cond32:                                       ; preds = %for.inc38, %if.end29
  %32 = load i32, i32* %bit, align 4, !dbg !16156
  %tobool = icmp ne i32 %32, 0, !dbg !16158
  br i1 %tobool, label %for.body33, label %for.end39, !dbg !16158

for.body33:                                       ; preds = %for.cond32
  %33 = load i32, i32* %bit, align 4, !dbg !16159
  %34 = load i32, i32* %bitstring, align 4, !dbg !16161
  %and = and i32 %33, %34, !dbg !16162
  %tobool34 = icmp ne i32 %and, 0, !dbg !16163
  %35 = zext i1 %tobool34 to i64, !dbg !16163
  %cond = select i1 %tobool34, i64 2, i64 0, !dbg !16163
  %conv35 = trunc i64 %cond to i32, !dbg !16163
  store i32 %conv35, i32* %cmd, align 4, !dbg !16164
  %36 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16165
  %37 = load i32, i32* %cmd, align 4, !dbg !16166
  call void @ni_writeb(%struct.comedi_device* %36, i32 %37, i32 13) #9, !dbg !16167
  call void @__const_udelay(i64 4295) #9, !dbg !16168
  %38 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16173
  %39 = load i32, i32* %cmd, align 4, !dbg !16174
  %conv36 = zext i32 %39 to i64, !dbg !16174
  %or = or i64 1, %conv36, !dbg !16175
  %conv37 = trunc i64 %or to i32, !dbg !16176
  call void @ni_writeb(%struct.comedi_device* %38, i32 %conv37, i32 13) #9, !dbg !16177
  call void @__const_udelay(i64 4295) #9, !dbg !16178
  br label %for.inc38, !dbg !16183

for.inc38:                                        ; preds = %for.body33
  %40 = load i32, i32* %bit, align 4, !dbg !16184
  %shr = lshr i32 %40, 1, !dbg !16184
  store i32 %shr, i32* %bit, align 4, !dbg !16184
  br label %for.cond32, !dbg !16185, !llvm.loop !16186

for.end39:                                        ; preds = %for.cond32
  %41 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16188
  %42 = load i32, i32* %loadbit, align 4, !dbg !16189
  call void @ni_writeb(%struct.comedi_device* %41, i32 %42, i32 13) #9, !dbg !16190
  call void @__const_udelay(i64 4295) #9, !dbg !16191
  %43 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16196
  call void @ni_writeb(%struct.comedi_device* %43, i32 0, i32 13) #9, !dbg !16197
  br label %return, !dbg !16198

return:                                           ; preds = %for.end39, %if.then28, %if.then
  ret void, !dbg !16198
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pack_mb88341(i32 %addr, i32 %val, i32* %bitstring) #2 !dbg !16199 {
entry:
  %addr.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %bitstring.addr = alloca i32*, align 8
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !16200, metadata !DIExpression()), !dbg !16201
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16202, metadata !DIExpression()), !dbg !16203
  store i32* %bitstring, i32** %bitstring.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bitstring.addr, metadata !16204, metadata !DIExpression()), !dbg !16205
  %0 = load i32, i32* %addr.addr, align 4, !dbg !16206
  %inc = add i32 %0, 1, !dbg !16206
  store i32 %inc, i32* %addr.addr, align 4, !dbg !16206
  %1 = load i32, i32* %addr.addr, align 4, !dbg !16207
  %and = and i32 %1, 1, !dbg !16208
  %shl = shl i32 %and, 11, !dbg !16209
  %2 = load i32, i32* %addr.addr, align 4, !dbg !16210
  %and1 = and i32 %2, 2, !dbg !16211
  %shl2 = shl i32 %and1, 9, !dbg !16212
  %or = or i32 %shl, %shl2, !dbg !16213
  %3 = load i32, i32* %addr.addr, align 4, !dbg !16214
  %and3 = and i32 %3, 4, !dbg !16215
  %shl4 = shl i32 %and3, 7, !dbg !16216
  %or5 = or i32 %or, %shl4, !dbg !16217
  %4 = load i32, i32* %addr.addr, align 4, !dbg !16218
  %and6 = and i32 %4, 8, !dbg !16219
  %shl7 = shl i32 %and6, 5, !dbg !16220
  %or8 = or i32 %or5, %shl7, !dbg !16221
  %5 = load i32, i32* %val.addr, align 4, !dbg !16222
  %and9 = and i32 %5, 255, !dbg !16223
  %or10 = or i32 %or8, %and9, !dbg !16224
  %6 = load i32*, i32** %bitstring.addr, align 8, !dbg !16225
  store i32 %or10, i32* %6, align 4, !dbg !16226
  ret i32 12, !dbg !16227
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pack_dac8800(i32 %addr, i32 %val, i32* %bitstring) #2 !dbg !16228 {
entry:
  %addr.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %bitstring.addr = alloca i32*, align 8
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !16229, metadata !DIExpression()), !dbg !16230
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16231, metadata !DIExpression()), !dbg !16232
  store i32* %bitstring, i32** %bitstring.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bitstring.addr, metadata !16233, metadata !DIExpression()), !dbg !16234
  %0 = load i32, i32* %addr.addr, align 4, !dbg !16235
  %and = and i32 %0, 7, !dbg !16236
  %shl = shl i32 %and, 8, !dbg !16237
  %1 = load i32, i32* %val.addr, align 4, !dbg !16238
  %and1 = and i32 %1, 255, !dbg !16239
  %or = or i32 %shl, %and1, !dbg !16240
  %2 = load i32*, i32** %bitstring.addr, align 8, !dbg !16241
  store i32 %or, i32* %2, align 4, !dbg !16242
  ret i32 11, !dbg !16243
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pack_dac8043(i32 %addr, i32 %val, i32* %bitstring) #2 !dbg !16244 {
entry:
  %addr.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %bitstring.addr = alloca i32*, align 8
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !16245, metadata !DIExpression()), !dbg !16246
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16247, metadata !DIExpression()), !dbg !16248
  store i32* %bitstring, i32** %bitstring.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bitstring.addr, metadata !16249, metadata !DIExpression()), !dbg !16250
  %0 = load i32, i32* %val.addr, align 4, !dbg !16251
  %and = and i32 %0, 4095, !dbg !16252
  %1 = load i32*, i32** %bitstring.addr, align 8, !dbg !16253
  store i32 %and, i32* %1, align 4, !dbg !16254
  ret i32 12, !dbg !16255
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pack_ad8522(i32 %addr, i32 %val, i32* %bitstring) #2 !dbg !16256 {
entry:
  %addr.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %bitstring.addr = alloca i32*, align 8
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !16257, metadata !DIExpression()), !dbg !16258
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16259, metadata !DIExpression()), !dbg !16260
  store i32* %bitstring, i32** %bitstring.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bitstring.addr, metadata !16261, metadata !DIExpression()), !dbg !16262
  %0 = load i32, i32* %val.addr, align 4, !dbg !16263
  %and = and i32 %0, 4095, !dbg !16264
  %1 = load i32, i32* %addr.addr, align 4, !dbg !16265
  %tobool = icmp ne i32 %1, 0, !dbg !16265
  %2 = zext i1 %tobool to i64, !dbg !16265
  %cond = select i1 %tobool, i32 49152, i32 40960, !dbg !16265
  %or = or i32 %and, %cond, !dbg !16266
  %3 = load i32*, i32** %bitstring.addr, align 8, !dbg !16267
  store i32 %or, i32* %3, align 4, !dbg !16268
  ret i32 16, !dbg !16269
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pack_ad8804(i32 %addr, i32 %val, i32* %bitstring) #2 !dbg !16270 {
entry:
  %addr.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %bitstring.addr = alloca i32*, align 8
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !16271, metadata !DIExpression()), !dbg !16272
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16273, metadata !DIExpression()), !dbg !16274
  store i32* %bitstring, i32** %bitstring.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bitstring.addr, metadata !16275, metadata !DIExpression()), !dbg !16276
  %0 = load i32, i32* %addr.addr, align 4, !dbg !16277
  %and = and i32 %0, 15, !dbg !16278
  %shl = shl i32 %and, 8, !dbg !16279
  %1 = load i32, i32* %val.addr, align 4, !dbg !16280
  %and1 = and i32 %1, 255, !dbg !16281
  %or = or i32 %shl, %and1, !dbg !16282
  %2 = load i32*, i32** %bitstring.addr, align 8, !dbg !16283
  store i32 %or, i32* %2, align 4, !dbg !16284
  ret i32 12, !dbg !16285
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pack_ad8842(i32 %addr, i32 %val, i32* %bitstring) #2 !dbg !16286 {
entry:
  %addr.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %bitstring.addr = alloca i32*, align 8
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !16287, metadata !DIExpression()), !dbg !16288
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !16289, metadata !DIExpression()), !dbg !16290
  store i32* %bitstring, i32** %bitstring.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bitstring.addr, metadata !16291, metadata !DIExpression()), !dbg !16292
  %0 = load i32, i32* %addr.addr, align 4, !dbg !16293
  %add = add i32 %0, 1, !dbg !16294
  %shl = shl i32 %add, 8, !dbg !16295
  %1 = load i32, i32* %val.addr, align 4, !dbg !16296
  %and = and i32 %1, 255, !dbg !16297
  %or = or i32 %shl, %and, !dbg !16298
  %2 = load i32*, i32** %bitstring.addr, align 8, !dbg !16299
  store i32 %or, i32* %2, align 4, !dbg !16300
  ret i32 12, !dbg !16301
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_read_eeprom(%struct.comedi_device* %dev, i32 %addr) #2 !dbg !16302 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %addr.addr = alloca i32, align 4
  %cmd = alloca i32, align 4
  %bit = alloca i32, align 4
  %bitstring = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !16303, metadata !DIExpression()), !dbg !16304
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !16305, metadata !DIExpression()), !dbg !16306
  call void @llvm.dbg.declare(metadata i32* %cmd, metadata !16307, metadata !DIExpression()), !dbg !16308
  store i32 4, i32* %cmd, align 4, !dbg !16308
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !16309, metadata !DIExpression()), !dbg !16310
  call void @llvm.dbg.declare(metadata i32* %bitstring, metadata !16311, metadata !DIExpression()), !dbg !16312
  %0 = load i32, i32* %addr.addr, align 4, !dbg !16313
  %and = and i32 %0, 256, !dbg !16314
  %shl = shl i32 %and, 3, !dbg !16315
  %or = or i32 768, %shl, !dbg !16316
  %1 = load i32, i32* %addr.addr, align 4, !dbg !16317
  %and1 = and i32 %1, 255, !dbg !16318
  %or2 = or i32 %or, %and1, !dbg !16319
  store i32 %or2, i32* %bitstring, align 4, !dbg !16320
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16321
  %3 = load i32, i32* %cmd, align 4, !dbg !16322
  call void @ni_writeb(%struct.comedi_device* %2, i32 %3, i32 13) #9, !dbg !16323
  store i32 32768, i32* %bit, align 4, !dbg !16324
  br label %for.cond, !dbg !16326

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %bit, align 4, !dbg !16327
  %tobool = icmp ne i32 %4, 0, !dbg !16329
  br i1 %tobool, label %for.body, label %for.end, !dbg !16329

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %bit, align 4, !dbg !16330
  %6 = load i32, i32* %bitstring, align 4, !dbg !16333
  %and3 = and i32 %5, %6, !dbg !16334
  %tobool4 = icmp ne i32 %and3, 0, !dbg !16334
  br i1 %tobool4, label %if.then, label %if.else, !dbg !16335

if.then:                                          ; preds = %for.body
  %7 = load i32, i32* %cmd, align 4, !dbg !16336
  %conv = zext i32 %7 to i64, !dbg !16336
  %or5 = or i64 %conv, 2, !dbg !16336
  %conv6 = trunc i64 %or5 to i32, !dbg !16336
  store i32 %conv6, i32* %cmd, align 4, !dbg !16336
  br label %if.end, !dbg !16337

if.else:                                          ; preds = %for.body
  %8 = load i32, i32* %cmd, align 4, !dbg !16338
  %conv7 = zext i32 %8 to i64, !dbg !16338
  %and8 = and i64 %conv7, -3, !dbg !16338
  %conv9 = trunc i64 %and8 to i32, !dbg !16338
  store i32 %conv9, i32* %cmd, align 4, !dbg !16338
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16339
  %10 = load i32, i32* %cmd, align 4, !dbg !16340
  call void @ni_writeb(%struct.comedi_device* %9, i32 %10, i32 13) #9, !dbg !16341
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16342
  %12 = load i32, i32* %cmd, align 4, !dbg !16343
  %conv10 = zext i32 %12 to i64, !dbg !16343
  %or11 = or i64 1, %conv10, !dbg !16344
  %conv12 = trunc i64 %or11 to i32, !dbg !16345
  call void @ni_writeb(%struct.comedi_device* %11, i32 %conv12, i32 13) #9, !dbg !16346
  br label %for.inc, !dbg !16347

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %bit, align 4, !dbg !16348
  %shr = ashr i32 %13, 1, !dbg !16348
  store i32 %shr, i32* %bit, align 4, !dbg !16348
  br label %for.cond, !dbg !16349, !llvm.loop !16350

for.end:                                          ; preds = %for.cond
  store i32 4, i32* %cmd, align 4, !dbg !16352
  store i32 0, i32* %bitstring, align 4, !dbg !16353
  store i32 128, i32* %bit, align 4, !dbg !16354
  br label %for.cond13, !dbg !16356

for.cond13:                                       ; preds = %for.inc25, %for.end
  %14 = load i32, i32* %bit, align 4, !dbg !16357
  %tobool14 = icmp ne i32 %14, 0, !dbg !16359
  br i1 %tobool14, label %for.body15, label %for.end27, !dbg !16359

for.body15:                                       ; preds = %for.cond13
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16360
  %16 = load i32, i32* %cmd, align 4, !dbg !16362
  call void @ni_writeb(%struct.comedi_device* %15, i32 %16, i32 13) #9, !dbg !16363
  %17 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16364
  %18 = load i32, i32* %cmd, align 4, !dbg !16365
  %conv16 = zext i32 %18 to i64, !dbg !16365
  %or17 = or i64 1, %conv16, !dbg !16366
  %conv18 = trunc i64 %or17 to i32, !dbg !16367
  call void @ni_writeb(%struct.comedi_device* %17, i32 %conv18, i32 13) #9, !dbg !16368
  %19 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16369
  %call = call i32 @ni_readb(%struct.comedi_device* %19, i32 1) #9, !dbg !16371
  %conv19 = zext i32 %call to i64, !dbg !16371
  %and20 = and i64 %conv19, 1, !dbg !16372
  %tobool21 = icmp ne i64 %and20, 0, !dbg !16372
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !16373

if.then22:                                        ; preds = %for.body15
  %20 = load i32, i32* %bit, align 4, !dbg !16374
  %21 = load i32, i32* %bitstring, align 4, !dbg !16375
  %or23 = or i32 %21, %20, !dbg !16375
  store i32 %or23, i32* %bitstring, align 4, !dbg !16375
  br label %if.end24, !dbg !16376

if.end24:                                         ; preds = %if.then22, %for.body15
  br label %for.inc25, !dbg !16377

for.inc25:                                        ; preds = %if.end24
  %22 = load i32, i32* %bit, align 4, !dbg !16378
  %shr26 = ashr i32 %22, 1, !dbg !16378
  store i32 %shr26, i32* %bit, align 4, !dbg !16378
  br label %for.cond13, !dbg !16379, !llvm.loop !16380

for.end27:                                        ; preds = %for.cond13
  %23 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16382
  call void @ni_writeb(%struct.comedi_device* %23, i32 0, i32 13) #9, !dbg !16383
  %24 = load i32, i32* %bitstring, align 4, !dbg !16384
  ret i32 %24, !dbg !16385
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_config_pfi_filter(%struct.comedi_device* %dev, i32 %chan, i32 %filter) #2 !dbg !16386 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %chan.addr = alloca i32, align 4
  %filter.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  %bits = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !16389, metadata !DIExpression()), !dbg !16390
  store i32 %chan, i32* %chan.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chan.addr, metadata !16391, metadata !DIExpression()), !dbg !16392
  store i32 %filter, i32* %filter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %filter.addr, metadata !16393, metadata !DIExpression()), !dbg !16394
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !16395, metadata !DIExpression()), !dbg !16396
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16397
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !16398
  %1 = load i8*, i8** %private, align 8, !dbg !16398
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !16397
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !16396
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !16399, metadata !DIExpression()), !dbg !16400
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16401
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 50, !dbg !16403
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !16403
  %bf.clear = and i16 %bf.load, 1, !dbg !16403
  %bf.cast = zext i16 %bf.clear to i32, !dbg !16403
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !16401
  br i1 %tobool, label %if.end, label %if.then, !dbg !16404

if.then:                                          ; preds = %entry
  store i32 -524, i32* %retval, align 4, !dbg !16405
  br label %return, !dbg !16405

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %chan.addr, align 4, !dbg !16406
  %cmp = icmp uge i32 %4, 32768, !dbg !16408
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !16409

if.then1:                                         ; preds = %if.end
  %5 = load i32, i32* %chan.addr, align 4, !dbg !16410
  %sub = sub i32 %5, 32768, !dbg !16410
  store i32 %sub, i32* %chan.addr, align 4, !dbg !16410
  br label %if.end2, !dbg !16412

if.end2:                                          ; preds = %if.then1, %if.end
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16413
  %call = call i32 @ni_readl(%struct.comedi_device* %6, i32 176) #9, !dbg !16414
  store i32 %call, i32* %bits, align 4, !dbg !16415
  %7 = load i32, i32* %chan.addr, align 4, !dbg !16416
  %mul = mul i32 %7, 2, !dbg !16416
  %shl = shl i32 3, %mul, !dbg !16416
  %neg = xor i32 %shl, -1, !dbg !16417
  %8 = load i32, i32* %bits, align 4, !dbg !16418
  %and = and i32 %8, %neg, !dbg !16418
  store i32 %and, i32* %bits, align 4, !dbg !16418
  %9 = load i32, i32* %filter.addr, align 4, !dbg !16419
  %and3 = and i32 %9, 3, !dbg !16419
  %10 = load i32, i32* %chan.addr, align 4, !dbg !16419
  %mul4 = mul i32 %10, 2, !dbg !16419
  %shl5 = shl i32 %and3, %mul4, !dbg !16419
  %11 = load i32, i32* %bits, align 4, !dbg !16420
  %or = or i32 %11, %shl5, !dbg !16420
  store i32 %or, i32* %bits, align 4, !dbg !16420
  %12 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16421
  %13 = load i32, i32* %bits, align 4, !dbg !16422
  call void @ni_writel(%struct.comedi_device* %12, i32 %13, i32 176) #9, !dbg !16423
  store i32 0, i32* %retval, align 4, !dbg !16424
  br label %return, !dbg !16424

return:                                           ; preds = %if.end2, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !16425
  ret i32 %14, !dbg !16425
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cs5529_do_conversion(%struct.comedi_device* %dev, i16* %data) #2 !dbg !16426 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %data.addr = alloca i16*, align 8
  %retval1 = alloca i32, align 4
  %status = alloca i16, align 2
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !16429, metadata !DIExpression()), !dbg !16430
  store i16* %data, i16** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %data.addr, metadata !16431, metadata !DIExpression()), !dbg !16432
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !16433, metadata !DIExpression()), !dbg !16434
  call void @llvm.dbg.declare(metadata i16* %status, metadata !16435, metadata !DIExpression()), !dbg !16436
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16437
  call void @cs5529_command(%struct.comedi_device* %0, i16 zeroext 192) #9, !dbg !16438
  %1 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16439
  %call = call i32 @cs5529_wait_for_idle(%struct.comedi_device* %1) #9, !dbg !16440
  store i32 %call, i32* %retval1, align 4, !dbg !16441
  %2 = load i32, i32* %retval1, align 4, !dbg !16442
  %tobool = icmp ne i32 %2, 0, !dbg !16442
  br i1 %tobool, label %if.then, label %if.end, !dbg !16444

if.then:                                          ; preds = %entry
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16445
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 4, !dbg !16445
  %4 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !16445
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.110, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.cs5529_do_conversion, i64 0, i64 0)) #11, !dbg !16445
  store i32 -62, i32* %retval, align 4, !dbg !16447
  br label %return, !dbg !16447

if.end:                                           ; preds = %entry
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16448
  %call2 = call zeroext i16 @ni_ao_win_inw(%struct.comedi_device* %5, i32 26) #9, !dbg !16449
  store i16 %call2, i16* %status, align 2, !dbg !16450
  %6 = load i16, i16* %status, align 2, !dbg !16451
  %conv = zext i16 %6 to i64, !dbg !16451
  %and = and i64 %conv, 2, !dbg !16453
  %tobool3 = icmp ne i64 %and, 0, !dbg !16453
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !16454

if.then4:                                         ; preds = %if.end
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16455
  %class_dev5 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %7, i32 0, i32 4, !dbg !16455
  %8 = load %struct.device*, %struct.device** %class_dev5, align 8, !dbg !16455
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %8, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.111, i64 0, i64 0)) #11, !dbg !16455
  store i32 -5, i32* %retval, align 4, !dbg !16457
  br label %return, !dbg !16457

if.end6:                                          ; preds = %if.end
  %9 = load i16, i16* %status, align 2, !dbg !16458
  %conv7 = zext i16 %9 to i64, !dbg !16458
  %and8 = and i64 %conv7, 4, !dbg !16460
  %tobool9 = icmp ne i64 %and8, 0, !dbg !16460
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !16461

if.then10:                                        ; preds = %if.end6
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16462
  %class_dev11 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %10, i32 0, i32 4, !dbg !16462
  %11 = load %struct.device*, %struct.device** %class_dev11, align 8, !dbg !16462
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %11, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.112, i64 0, i64 0)) #11, !dbg !16462
  br label %if.end12, !dbg !16464

if.end12:                                         ; preds = %if.then10, %if.end6
  %12 = load i16*, i16** %data.addr, align 8, !dbg !16465
  %tobool13 = icmp ne i16* %12, null, !dbg !16465
  br i1 %tobool13, label %if.then14, label %if.end18, !dbg !16467

if.then14:                                        ; preds = %if.end12
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16468
  %call15 = call zeroext i16 @ni_ao_win_inw(%struct.comedi_device* %13, i32 27) #9, !dbg !16470
  %14 = load i16*, i16** %data.addr, align 8, !dbg !16471
  store i16 %call15, i16* %14, align 2, !dbg !16472
  %15 = load i16*, i16** %data.addr, align 8, !dbg !16473
  %16 = load i16, i16* %15, align 2, !dbg !16474
  %conv16 = zext i16 %16 to i64, !dbg !16474
  %xor = xor i64 %conv16, 32768, !dbg !16474
  %conv17 = trunc i64 %xor to i16, !dbg !16474
  store i16 %conv17, i16* %15, align 2, !dbg !16474
  br label %if.end18, !dbg !16475

if.end18:                                         ; preds = %if.then14, %if.end12
  store i32 0, i32* %retval, align 4, !dbg !16476
  br label %return, !dbg !16476

return:                                           ; preds = %if.end18, %if.then4, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !16477
  ret i32 %17, !dbg !16477
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cs5529_command(%struct.comedi_device* %dev, i16 zeroext %value) #2 !dbg !4405 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %value.addr = alloca i16, align 2
  %i = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !16478, metadata !DIExpression()), !dbg !16479
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !16480, metadata !DIExpression()), !dbg !16481
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16482, metadata !DIExpression()), !dbg !16483
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16484
  %1 = load i16, i16* %value.addr, align 2, !dbg !16485
  %conv = zext i16 %1 to i32, !dbg !16485
  call void @ni_ao_win_outw(%struct.comedi_device* %0, i32 %conv, i32 25) #9, !dbg !16486
  store i32 0, i32* %i, align 4, !dbg !16487
  br label %for.cond, !dbg !16489

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !16490
  %cmp = icmp slt i32 %2, 100, !dbg !16492
  br i1 %cmp, label %for.body, label %for.end, !dbg !16493

for.body:                                         ; preds = %for.cond
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16494
  %call = call zeroext i16 @ni_ao_win_inw(%struct.comedi_device* %3, i32 26) #9, !dbg !16497
  %conv2 = zext i16 %call to i64, !dbg !16497
  %and = and i64 %conv2, 1, !dbg !16498
  %tobool = icmp ne i64 %and, 0, !dbg !16498
  br i1 %tobool, label %if.then, label %if.end, !dbg !16499

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !16500

if.end:                                           ; preds = %for.body
  call void @__const_udelay(i64 4295) #9, !dbg !16501
  br label %for.inc, !dbg !16506

for.inc:                                          ; preds = %if.end
  %4 = load i32, i32* %i, align 4, !dbg !16507
  %inc = add i32 %4, 1, !dbg !16507
  store i32 %inc, i32* %i, align 4, !dbg !16507
  br label %for.cond, !dbg !16508, !llvm.loop !16509

for.end:                                          ; preds = %if.then, %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !16511
  %cmp3 = icmp eq i32 %5, 100, !dbg !16513
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !16514

if.then5:                                         ; preds = %for.end
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16515
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %6, i32 0, i32 4, !dbg !16515
  %7 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !16515
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %7, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.113, i64 0, i64 0)) #11, !dbg !16515
  br label %if.end6, !dbg !16515

if.end6:                                          ; preds = %if.then5, %for.end
  ret void, !dbg !16516
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cs5529_wait_for_idle(%struct.comedi_device* %dev) #2 !dbg !16517 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !16518, metadata !DIExpression()), !dbg !16524
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !16532, metadata !DIExpression()), !dbg !16534
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !16535, metadata !DIExpression()), !dbg !16537
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %status = alloca i16, align 2
  %timeout = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !16538, metadata !DIExpression()), !dbg !16539
  call void @llvm.dbg.declare(metadata i16* %status, metadata !16540, metadata !DIExpression()), !dbg !16541
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !16542, metadata !DIExpression()), !dbg !16543
  store i32 250, i32* %timeout, align 4, !dbg !16543
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16544, metadata !DIExpression()), !dbg !16545
  store i32 0, i32* %i, align 4, !dbg !16546
  br label %for.cond, !dbg !16547

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !16548
  %cmp = icmp slt i32 %0, 250, !dbg !16549
  br i1 %cmp, label %for.body, label %for.end, !dbg !16550

for.body:                                         ; preds = %for.cond
  %1 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16551
  %call = call zeroext i16 @ni_ao_win_inw(%struct.comedi_device* %1, i32 26) #9, !dbg !16552
  store i16 %call, i16* %status, align 2, !dbg !16553
  %2 = load i16, i16* %status, align 2, !dbg !16554
  %conv = zext i16 %2 to i64, !dbg !16554
  %and = and i64 %conv, 1, !dbg !16556
  %cmp1 = icmp eq i64 %and, 0, !dbg !16557
  br i1 %cmp1, label %if.then, label %if.end, !dbg !16558

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !16559

if.end:                                           ; preds = %for.body
  br label %do.body, !dbg !16560

do.body:                                          ; preds = %if.end
  br label %do.body3, !dbg !16561

do.body3:                                         ; preds = %do.body
  br label %do.body4, !dbg !16562

do.body4:                                         ; preds = %do.body3
  br label %do.end, !dbg !16563

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !16562

do.body5:                                         ; preds = %do.end
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !16534
  %3 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !16534
  %4 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #12, !dbg !16537, !srcloc !16565
  store i64 %4, i64* %pfo_val__.i, align 8, !dbg !16537
  %5 = load i64, i64* %pfo_val__.i, align 8, !dbg !16537
  %6 = inttoptr i64 %5 to %struct.task_struct*, !dbg !16537
  store %struct.task_struct* %6, %struct.task_struct** %tmp.i, align 8, !dbg !16537
  %7 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !16537
  store %struct.task_struct* %7, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !16524
  %8 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !16524
  store %struct.task_struct* %8, %struct.task_struct** %tmp1.i, align 8, !dbg !16524
  %9 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !16524
  %state = getelementptr inbounds %struct.task_struct, %struct.task_struct* %9, i32 0, i32 1, !dbg !16566
  store volatile i64 1, i64* %state, align 16, !dbg !16566
  br label %do.end7, !dbg !16566

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !16562

do.end8:                                          ; preds = %do.end7
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16561, !srcloc !16567
  br label %do.end9, !dbg !16561

do.end9:                                          ; preds = %do.end8
  %call10 = call i64 @schedule_timeout(i64 1) #9, !dbg !16568
  %tobool = icmp ne i64 %call10, 0, !dbg !16568
  br i1 %tobool, label %if.then11, label %if.end12, !dbg !16570

if.then11:                                        ; preds = %do.end9
  store i32 -5, i32* %retval, align 4, !dbg !16571
  br label %return, !dbg !16571

if.end12:                                         ; preds = %do.end9
  br label %for.inc, !dbg !16572

for.inc:                                          ; preds = %if.end12
  %10 = load i32, i32* %i, align 4, !dbg !16573
  %inc = add i32 %10, 1, !dbg !16573
  store i32 %inc, i32* %i, align 4, !dbg !16573
  br label %for.cond, !dbg !16574, !llvm.loop !16575

for.end:                                          ; preds = %if.then, %for.cond
  %11 = load i32, i32* %i, align 4, !dbg !16577
  %cmp13 = icmp eq i32 %11, 250, !dbg !16579
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !16580

if.then15:                                        ; preds = %for.end
  %12 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16581
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %12, i32 0, i32 4, !dbg !16581
  %13 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !16581
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %13, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.91, i64 0, i64 0)) #11, !dbg !16581
  store i32 -62, i32* %retval, align 4, !dbg !16583
  br label %return, !dbg !16583

if.end16:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !16584
  br label %return, !dbg !16584

return:                                           ; preds = %if.end16, %if.then15, %if.then11
  %14 = load i32, i32* %retval, align 4, !dbg !16585
  ret i32 %14, !dbg !16585
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @ni_ao_win_inw(%struct.comedi_device* %dev, i32 %addr) #2 !dbg !16586 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5432, metadata !DIExpression()), !dbg !16589
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5440, metadata !DIExpression()), !dbg !16591
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5232, metadata !DIExpression()), !dbg !16592
  %dev.addr = alloca %struct.comedi_device*, align 8
  %addr.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  %flags = alloca i64, align 8
  %data = alloca i16, align 2
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !16599, metadata !DIExpression()), !dbg !16600
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !16601, metadata !DIExpression()), !dbg !16602
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !16603, metadata !DIExpression()), !dbg !16604
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16605
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !16606
  %1 = load i8*, i8** %private, align 8, !dbg !16606
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !16605
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !16604
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !16607, metadata !DIExpression()), !dbg !16608
  call void @llvm.dbg.declare(metadata i16* %data, metadata !16609, metadata !DIExpression()), !dbg !16610
  br label %do.body, !dbg !16611

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !16612

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !16613, metadata !DIExpression()), !dbg !16615
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !16616, metadata !DIExpression()), !dbg !16615
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !16615
  %conv = zext i1 %cmp to i32, !dbg !16615
  store i32 1, i32* %tmp, align 4, !dbg !16615
  %3 = load i32, i32* %tmp, align 4, !dbg !16615
  br label %do.body2, !dbg !16617

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !16618

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !16619

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !16621, metadata !DIExpression()), !dbg !16624
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !16625, metadata !DIExpression()), !dbg !16624
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !16624
  %conv8 = zext i1 %cmp7 to i32, !dbg !16624
  store i32 1, i32* %tmp9, align 4, !dbg !16624
  %4 = load i32, i32* %tmp9, align 4, !dbg !16624
  %call = call i64 @arch_local_irq_save() #9, !dbg !16626
  store i64 %call, i64* %flags, align 8, !dbg !16626
  br label %do.end, !dbg !16626

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !16619

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !16618

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16627, !srcloc !16628
  br label %do.body12, !dbg !16627

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16629
  %window_lock = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 5, !dbg !16629
  store %struct.spinlock* %window_lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16630
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !16631
  %rlock.i = bitcast %union.anon.3* %7 to %struct.raw_spinlock*, !dbg !16631
  br label %do.end14, !dbg !16629

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !16627

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !16618

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !16617

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !16612

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16632
  %9 = load i32, i32* %addr.addr, align 4, !dbg !16633
  call void @ni_writew(%struct.comedi_device* %8, i32 %9, i32 24) #9, !dbg !16634
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16635
  %call19 = call i32 @ni_readw(%struct.comedi_device* %10, i32 30) #9, !dbg !16636
  %conv20 = trunc i32 %call19 to i16, !dbg !16636
  store i16 %conv20, i16* %data, align 2, !dbg !16637
  %11 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16638
  %window_lock21 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %11, i32 0, i32 5, !dbg !16639
  %12 = load i64, i64* %flags, align 8, !dbg !16640
  store %struct.spinlock* %window_lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %12, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !16641
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !16641
  store i32 1, i32* %tmp.i, align 4, !dbg !16641
  %13 = load i32, i32* %tmp.i, align 4, !dbg !16641
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !16642
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !16642
  store i32 1, i32* %tmp8.i, align 4, !dbg !16642
  %14 = load i32, i32* %tmp8.i, align 4, !dbg !16642
  %15 = load i64, i64* %flags.addr.i, align 8, !dbg !16643
  call void @arch_local_irq_restore(i64 %15) #10, !dbg !16643
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16644, !srcloc !5582
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !16645
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !16645
  %rlock.i23 = bitcast %union.anon.3* %17 to %struct.raw_spinlock*, !dbg !16645
  %18 = load i16, i16* %data, align 2, !dbg !16646
  ret i16 %18, !dbg !16647
}

; Function Attrs: noredzone
declare dso_local i64 @schedule_timeout(i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cs5529_config_write(%struct.comedi_device* %dev, i32 %value, i32 %reg_select_bits) #2 !dbg !16648 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %value.addr = alloca i32, align 4
  %reg_select_bits.addr = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !16649, metadata !DIExpression()), !dbg !16650
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !16651, metadata !DIExpression()), !dbg !16652
  store i32 %reg_select_bits, i32* %reg_select_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg_select_bits.addr, metadata !16653, metadata !DIExpression()), !dbg !16654
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16655
  %1 = load i32, i32* %value.addr, align 4, !dbg !16656
  %shr = lshr i32 %1, 16, !dbg !16657
  %and = and i32 %shr, 255, !dbg !16658
  call void @ni_ao_win_outw(%struct.comedi_device* %0, i32 %and, i32 28) #9, !dbg !16659
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16660
  %3 = load i32, i32* %value.addr, align 4, !dbg !16661
  %and1 = and i32 %3, 65535, !dbg !16662
  call void @ni_ao_win_outw(%struct.comedi_device* %2, i32 %and1, i32 29) #9, !dbg !16663
  %4 = load i32, i32* %reg_select_bits.addr, align 4, !dbg !16664
  %and2 = and i32 %4, 14, !dbg !16664
  store i32 %and2, i32* %reg_select_bits.addr, align 4, !dbg !16664
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16665
  %6 = load i32, i32* %reg_select_bits.addr, align 4, !dbg !16666
  %conv = zext i32 %6 to i64, !dbg !16666
  %or = or i64 128, %conv, !dbg !16667
  %conv3 = trunc i64 %or to i16, !dbg !16668
  call void @cs5529_command(%struct.comedi_device* %5, i16 zeroext %conv3) #9, !dbg !16669
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16670
  %call = call i32 @cs5529_wait_for_idle(%struct.comedi_device* %7) #9, !dbg !16672
  %tobool = icmp ne i32 %call, 0, !dbg !16672
  br i1 %tobool, label %if.then, label %if.end, !dbg !16673

if.then:                                          ; preds = %entry
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16674
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %8, i32 0, i32 4, !dbg !16674
  %9 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !16674
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %9, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.cs5529_config_write, i64 0, i64 0)) #11, !dbg !16674
  br label %if.end, !dbg !16674

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !16675
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_serial_hw_readwrite8(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, i8 zeroext %data_out, i8* %data_in) #2 !dbg !16676 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %data_out.addr = alloca i8, align 1
  %data_in.addr = alloca i8*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %status1 = alloca i32, align 4
  %err = alloca i32, align 4
  %count = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !16680, metadata !DIExpression()), !dbg !16681
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !16682, metadata !DIExpression()), !dbg !16683
  store i8 %data_out, i8* %data_out.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %data_out.addr, metadata !16684, metadata !DIExpression()), !dbg !16685
  store i8* %data_in, i8** %data_in.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data_in.addr, metadata !16686, metadata !DIExpression()), !dbg !16687
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !16688, metadata !DIExpression()), !dbg !16689
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16690
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !16691
  %1 = load i8*, i8** %private, align 8, !dbg !16691
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !16690
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !16689
  call void @llvm.dbg.declare(metadata i32* %status1, metadata !16692, metadata !DIExpression()), !dbg !16693
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16694, metadata !DIExpression()), !dbg !16695
  store i32 0, i32* %err, align 4, !dbg !16695
  call void @llvm.dbg.declare(metadata i32* %count, metadata !16696, metadata !DIExpression()), !dbg !16697
  store i32 20, i32* %count, align 4, !dbg !16697
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16698
  %dio_output = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 0, !dbg !16699
  %4 = load i16, i16* %dio_output, align 8, !dbg !16700
  %conv = zext i16 %4 to i32, !dbg !16700
  %and = and i32 %conv, -65281, !dbg !16700
  %conv1 = trunc i32 %and to i16, !dbg !16700
  store i16 %conv1, i16* %dio_output, align 8, !dbg !16700
  %5 = load i8, i8* %data_out.addr, align 1, !dbg !16701
  %conv2 = zext i8 %5 to i32, !dbg !16701
  %and3 = and i32 %conv2, 255, !dbg !16701
  %shl = shl i32 %and3, 8, !dbg !16701
  %6 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16702
  %dio_output4 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %6, i32 0, i32 0, !dbg !16703
  %7 = load i16, i16* %dio_output4, align 8, !dbg !16704
  %conv5 = zext i16 %7 to i32, !dbg !16704
  %or = or i32 %conv5, %shl, !dbg !16704
  %conv6 = trunc i32 %or to i16, !dbg !16704
  store i16 %conv6, i16* %dio_output4, align 8, !dbg !16704
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16705
  %9 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16706
  %dio_output7 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %9, i32 0, i32 0, !dbg !16707
  %10 = load i16, i16* %dio_output7, align 8, !dbg !16707
  %conv8 = zext i16 %10 to i32, !dbg !16706
  call void @ni_stc_writew(%struct.comedi_device* %8, i32 %conv8, i32 10) #9, !dbg !16708
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16709
  %call = call i32 @ni_stc_readw(%struct.comedi_device* %11, i32 27) #9, !dbg !16710
  store i32 %call, i32* %status1, align 4, !dbg !16711
  %12 = load i32, i32* %status1, align 4, !dbg !16712
  %conv9 = zext i32 %12 to i64, !dbg !16712
  %and10 = and i64 %conv9, 4096, !dbg !16714
  %tobool = icmp ne i64 %and10, 0, !dbg !16714
  br i1 %tobool, label %if.then, label %if.end, !dbg !16715

if.then:                                          ; preds = %entry
  store i32 -16, i32* %err, align 4, !dbg !16716
  br label %error, !dbg !16718

if.end:                                           ; preds = %entry
  %13 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16719
  %dio_control = getelementptr inbounds %struct.ni_private, %struct.ni_private* %13, i32 0, i32 1, !dbg !16720
  %14 = load i16, i16* %dio_control, align 2, !dbg !16721
  %conv11 = zext i16 %14 to i64, !dbg !16721
  %or12 = or i64 %conv11, 256, !dbg !16721
  %conv13 = trunc i64 %or12 to i16, !dbg !16721
  store i16 %conv13, i16* %dio_control, align 2, !dbg !16721
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16722
  %16 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16723
  %dio_control14 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %16, i32 0, i32 1, !dbg !16724
  %17 = load i16, i16* %dio_control14, align 2, !dbg !16724
  %conv15 = zext i16 %17 to i32, !dbg !16723
  call void @ni_stc_writew(%struct.comedi_device* %15, i32 %conv15, i32 11) #9, !dbg !16725
  %18 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16726
  %dio_control16 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %18, i32 0, i32 1, !dbg !16727
  %19 = load i16, i16* %dio_control16, align 2, !dbg !16728
  %conv17 = zext i16 %19 to i64, !dbg !16728
  %and18 = and i64 %conv17, -257, !dbg !16728
  %conv19 = trunc i64 %and18 to i16, !dbg !16728
  store i16 %conv19, i16* %dio_control16, align 2, !dbg !16728
  br label %while.cond, !dbg !16729

while.cond:                                       ; preds = %if.end43, %if.end
  %20 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16730
  %call20 = call i32 @ni_stc_readw(%struct.comedi_device* %20, i32 27) #9, !dbg !16731
  store i32 %call20, i32* %status1, align 4, !dbg !16732
  %conv21 = zext i32 %call20 to i64, !dbg !16733
  %and22 = and i64 %conv21, 4096, !dbg !16734
  %tobool23 = icmp ne i64 %and22, 0, !dbg !16729
  br i1 %tobool23, label %while.body, label %while.end, !dbg !16729

while.body:                                       ; preds = %while.cond
  %21 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16735
  %serial_interval_ns = getelementptr inbounds %struct.ni_private, %struct.ni_private* %21, i32 0, i32 22, !dbg !16735
  %22 = load i64, i64* %serial_interval_ns, align 8, !dbg !16735
  %add = add i64 %22, 999, !dbg !16735
  %div = udiv i64 %add, 1000, !dbg !16735
  %23 = call i1 @llvm.is.constant.i64(i64 %div), !dbg !16735
  br i1 %23, label %if.then24, label %if.else35, !dbg !16739

if.then24:                                        ; preds = %while.body
  %24 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16740
  %serial_interval_ns25 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %24, i32 0, i32 22, !dbg !16740
  %25 = load i64, i64* %serial_interval_ns25, align 8, !dbg !16740
  %add26 = add i64 %25, 999, !dbg !16740
  %div27 = udiv i64 %add26, 1000, !dbg !16740
  %div28 = udiv i64 %div27, 20000, !dbg !16740
  %cmp = icmp uge i64 %div28, 1, !dbg !16740
  br i1 %cmp, label %if.then30, label %if.else, !dbg !16743

if.then30:                                        ; preds = %if.then24
  call void @__bad_udelay() #9, !dbg !16740
  br label %if.end34, !dbg !16740

if.else:                                          ; preds = %if.then24
  %26 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16740
  %serial_interval_ns31 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %26, i32 0, i32 22, !dbg !16740
  %27 = load i64, i64* %serial_interval_ns31, align 8, !dbg !16740
  %add32 = add i64 %27, 999, !dbg !16740
  %div33 = udiv i64 %add32, 1000, !dbg !16740
  %mul = mul i64 %div33, 4295, !dbg !16740
  call void @__const_udelay(i64 %mul) #9, !dbg !16740
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then30
  br label %if.end39, !dbg !16743

if.else35:                                        ; preds = %while.body
  %28 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16744
  %serial_interval_ns36 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %28, i32 0, i32 22, !dbg !16744
  %29 = load i64, i64* %serial_interval_ns36, align 8, !dbg !16744
  %add37 = add i64 %29, 999, !dbg !16744
  %div38 = udiv i64 %add37, 1000, !dbg !16744
  call void @__udelay(i64 %div38) #9, !dbg !16744
  br label %if.end39

if.end39:                                         ; preds = %if.else35, %if.end34
  %30 = load i32, i32* %count, align 4, !dbg !16746
  %dec = add i32 %30, -1, !dbg !16746
  store i32 %dec, i32* %count, align 4, !dbg !16746
  %cmp40 = icmp slt i32 %dec, 0, !dbg !16748
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !16749

if.then42:                                        ; preds = %if.end39
  %31 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16750
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %31, i32 0, i32 4, !dbg !16750
  %32 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !16750
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %32, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.116, i64 0, i64 0)) #11, !dbg !16750
  store i32 -62, i32* %err, align 4, !dbg !16752
  br label %error, !dbg !16753

if.end43:                                         ; preds = %if.end39
  br label %while.cond, !dbg !16729, !llvm.loop !16754

while.end:                                        ; preds = %while.cond
  %33 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16756
  %serial_interval_ns44 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %33, i32 0, i32 22, !dbg !16756
  %34 = load i64, i64* %serial_interval_ns44, align 8, !dbg !16756
  %add45 = add i64 %34, 999, !dbg !16756
  %div46 = udiv i64 %add45, 1000, !dbg !16756
  %35 = call i1 @llvm.is.constant.i64(i64 %div46), !dbg !16756
  br i1 %35, label %if.then47, label %if.else61, !dbg !16759

if.then47:                                        ; preds = %while.end
  %36 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16760
  %serial_interval_ns48 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %36, i32 0, i32 22, !dbg !16760
  %37 = load i64, i64* %serial_interval_ns48, align 8, !dbg !16760
  %add49 = add i64 %37, 999, !dbg !16760
  %div50 = udiv i64 %add49, 1000, !dbg !16760
  %div51 = udiv i64 %div50, 20000, !dbg !16760
  %cmp52 = icmp uge i64 %div51, 1, !dbg !16760
  br i1 %cmp52, label %if.then54, label %if.else55, !dbg !16763

if.then54:                                        ; preds = %if.then47
  call void @__bad_udelay() #9, !dbg !16760
  br label %if.end60, !dbg !16760

if.else55:                                        ; preds = %if.then47
  %38 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16760
  %serial_interval_ns56 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %38, i32 0, i32 22, !dbg !16760
  %39 = load i64, i64* %serial_interval_ns56, align 8, !dbg !16760
  %add57 = add i64 %39, 999, !dbg !16760
  %div58 = udiv i64 %add57, 1000, !dbg !16760
  %mul59 = mul i64 %div58, 4295, !dbg !16760
  call void @__const_udelay(i64 %mul59) #9, !dbg !16760
  br label %if.end60

if.end60:                                         ; preds = %if.else55, %if.then54
  br label %if.end65, !dbg !16763

if.else61:                                        ; preds = %while.end
  %40 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16764
  %serial_interval_ns62 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %40, i32 0, i32 22, !dbg !16764
  %41 = load i64, i64* %serial_interval_ns62, align 8, !dbg !16764
  %add63 = add i64 %41, 999, !dbg !16764
  %div64 = udiv i64 %add63, 1000, !dbg !16764
  call void @__udelay(i64 %div64) #9, !dbg !16764
  br label %if.end65

if.end65:                                         ; preds = %if.else61, %if.end60
  %42 = load i8*, i8** %data_in.addr, align 8, !dbg !16766
  %tobool66 = icmp ne i8* %42, null, !dbg !16766
  br i1 %tobool66, label %if.then67, label %if.end70, !dbg !16768

if.then67:                                        ; preds = %if.end65
  %43 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16769
  %call68 = call i32 @ni_stc_readw(%struct.comedi_device* %43, i32 28) #9, !dbg !16770
  %conv69 = trunc i32 %call68 to i8, !dbg !16770
  %44 = load i8*, i8** %data_in.addr, align 8, !dbg !16771
  store i8 %conv69, i8* %44, align 1, !dbg !16772
  br label %if.end70, !dbg !16773

if.end70:                                         ; preds = %if.then67, %if.end65
  br label %error, !dbg !16766

error:                                            ; preds = %if.end70, %if.then42, %if.then
  call void @llvm.dbg.label(metadata !16774), !dbg !16775
  %45 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16776
  %46 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16777
  %dio_control71 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %46, i32 0, i32 1, !dbg !16778
  %47 = load i16, i16* %dio_control71, align 2, !dbg !16778
  %conv72 = zext i16 %47 to i32, !dbg !16777
  call void @ni_stc_writew(%struct.comedi_device* %45, i32 %conv72, i32 11) #9, !dbg !16779
  %48 = load i32, i32* %err, align 4, !dbg !16780
  ret i32 %48, !dbg !16781
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_serial_sw_readwrite8(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, i8 zeroext %data_out, i8* %data_in) #2 !dbg !16782 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %data_out.addr = alloca i8, align 1
  %data_in.addr = alloca i8*, align 8
  %devpriv = alloca %struct.ni_private*, align 8
  %mask = alloca i8, align 1
  %input = alloca i8, align 1
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !16783, metadata !DIExpression()), !dbg !16784
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !16785, metadata !DIExpression()), !dbg !16786
  store i8 %data_out, i8* %data_out.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %data_out.addr, metadata !16787, metadata !DIExpression()), !dbg !16788
  store i8* %data_in, i8** %data_in.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data_in.addr, metadata !16789, metadata !DIExpression()), !dbg !16790
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !16791, metadata !DIExpression()), !dbg !16792
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16793
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !16794
  %1 = load i8*, i8** %private, align 8, !dbg !16794
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !16793
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !16792
  call void @llvm.dbg.declare(metadata i8* %mask, metadata !16795, metadata !DIExpression()), !dbg !16796
  call void @llvm.dbg.declare(metadata i8* %input, metadata !16797, metadata !DIExpression()), !dbg !16798
  store i8 0, i8* %input, align 1, !dbg !16798
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16799
  %serial_interval_ns = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 22, !dbg !16799
  %4 = load i64, i64* %serial_interval_ns, align 8, !dbg !16799
  %add = add i64 %4, 999, !dbg !16799
  %div = udiv i64 %add, 1000, !dbg !16799
  %5 = call i1 @llvm.is.constant.i64(i64 %div), !dbg !16799
  br i1 %5, label %if.then, label %if.else9, !dbg !16802

if.then:                                          ; preds = %entry
  %6 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16803
  %serial_interval_ns1 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %6, i32 0, i32 22, !dbg !16803
  %7 = load i64, i64* %serial_interval_ns1, align 8, !dbg !16803
  %add2 = add i64 %7, 999, !dbg !16803
  %div3 = udiv i64 %add2, 1000, !dbg !16803
  %div4 = udiv i64 %div3, 20000, !dbg !16803
  %cmp = icmp uge i64 %div4, 1, !dbg !16803
  br i1 %cmp, label %if.then5, label %if.else, !dbg !16806

if.then5:                                         ; preds = %if.then
  call void @__bad_udelay() #9, !dbg !16803
  br label %if.end, !dbg !16803

if.else:                                          ; preds = %if.then
  %8 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16803
  %serial_interval_ns6 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %8, i32 0, i32 22, !dbg !16803
  %9 = load i64, i64* %serial_interval_ns6, align 8, !dbg !16803
  %add7 = add i64 %9, 999, !dbg !16803
  %div8 = udiv i64 %add7, 1000, !dbg !16803
  %mul = mul i64 %div8, 4295, !dbg !16803
  call void @__const_udelay(i64 %mul) #9, !dbg !16803
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %if.end13, !dbg !16806

if.else9:                                         ; preds = %entry
  %10 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16807
  %serial_interval_ns10 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %10, i32 0, i32 22, !dbg !16807
  %11 = load i64, i64* %serial_interval_ns10, align 8, !dbg !16807
  %add11 = add i64 %11, 999, !dbg !16807
  %div12 = udiv i64 %add11, 1000, !dbg !16807
  call void @__udelay(i64 %div12) #9, !dbg !16807
  br label %if.end13

if.end13:                                         ; preds = %if.else9, %if.end
  store i8 -128, i8* %mask, align 1, !dbg !16809
  br label %for.cond, !dbg !16811

for.cond:                                         ; preds = %for.inc, %if.end13
  %12 = load i8, i8* %mask, align 1, !dbg !16812
  %tobool = icmp ne i8 %12, 0, !dbg !16814
  br i1 %tobool, label %for.body, label %for.end, !dbg !16814

for.body:                                         ; preds = %for.cond
  %13 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16815
  %dio_output = getelementptr inbounds %struct.ni_private, %struct.ni_private* %13, i32 0, i32 0, !dbg !16817
  %14 = load i16, i16* %dio_output, align 8, !dbg !16818
  %conv = zext i16 %14 to i64, !dbg !16818
  %and = and i64 %conv, -2, !dbg !16818
  %conv14 = trunc i64 %and to i16, !dbg !16818
  store i16 %conv14, i16* %dio_output, align 8, !dbg !16818
  %15 = load i8, i8* %data_out.addr, align 1, !dbg !16819
  %conv15 = zext i8 %15 to i32, !dbg !16819
  %16 = load i8, i8* %mask, align 1, !dbg !16821
  %conv16 = zext i8 %16 to i32, !dbg !16821
  %and17 = and i32 %conv15, %conv16, !dbg !16822
  %tobool18 = icmp ne i32 %and17, 0, !dbg !16822
  br i1 %tobool18, label %if.then19, label %if.end23, !dbg !16823

if.then19:                                        ; preds = %for.body
  %17 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16824
  %dio_output20 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %17, i32 0, i32 0, !dbg !16825
  %18 = load i16, i16* %dio_output20, align 8, !dbg !16826
  %conv21 = zext i16 %18 to i64, !dbg !16826
  %or = or i64 %conv21, 1, !dbg !16826
  %conv22 = trunc i64 %or to i16, !dbg !16826
  store i16 %conv22, i16* %dio_output20, align 8, !dbg !16826
  br label %if.end23, !dbg !16824

if.end23:                                         ; preds = %if.then19, %for.body
  %19 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16827
  %20 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16828
  %dio_output24 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %20, i32 0, i32 0, !dbg !16829
  %21 = load i16, i16* %dio_output24, align 8, !dbg !16829
  %conv25 = zext i16 %21 to i32, !dbg !16828
  call void @ni_stc_writew(%struct.comedi_device* %19, i32 %conv25, i32 10) #9, !dbg !16830
  %22 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16831
  %dio_control = getelementptr inbounds %struct.ni_private, %struct.ni_private* %22, i32 0, i32 1, !dbg !16832
  %23 = load i16, i16* %dio_control, align 2, !dbg !16833
  %conv26 = zext i16 %23 to i64, !dbg !16833
  %or27 = or i64 %conv26, 2048, !dbg !16833
  %conv28 = trunc i64 %or27 to i16, !dbg !16833
  store i16 %conv28, i16* %dio_control, align 2, !dbg !16833
  %24 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16834
  %25 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16835
  %dio_control29 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %25, i32 0, i32 1, !dbg !16836
  %26 = load i16, i16* %dio_control29, align 2, !dbg !16836
  %conv30 = zext i16 %26 to i32, !dbg !16835
  call void @ni_stc_writew(%struct.comedi_device* %24, i32 %conv30, i32 11) #9, !dbg !16837
  %27 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16838
  %serial_interval_ns31 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %27, i32 0, i32 22, !dbg !16838
  %28 = load i64, i64* %serial_interval_ns31, align 8, !dbg !16838
  %add32 = add i64 %28, 999, !dbg !16838
  %div33 = udiv i64 %add32, 2000, !dbg !16838
  %29 = call i1 @llvm.is.constant.i64(i64 %div33), !dbg !16838
  br i1 %29, label %if.then34, label %if.else48, !dbg !16841

if.then34:                                        ; preds = %if.end23
  %30 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16842
  %serial_interval_ns35 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %30, i32 0, i32 22, !dbg !16842
  %31 = load i64, i64* %serial_interval_ns35, align 8, !dbg !16842
  %add36 = add i64 %31, 999, !dbg !16842
  %div37 = udiv i64 %add36, 2000, !dbg !16842
  %div38 = udiv i64 %div37, 20000, !dbg !16842
  %cmp39 = icmp uge i64 %div38, 1, !dbg !16842
  br i1 %cmp39, label %if.then41, label %if.else42, !dbg !16845

if.then41:                                        ; preds = %if.then34
  call void @__bad_udelay() #9, !dbg !16842
  br label %if.end47, !dbg !16842

if.else42:                                        ; preds = %if.then34
  %32 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16842
  %serial_interval_ns43 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %32, i32 0, i32 22, !dbg !16842
  %33 = load i64, i64* %serial_interval_ns43, align 8, !dbg !16842
  %add44 = add i64 %33, 999, !dbg !16842
  %div45 = udiv i64 %add44, 2000, !dbg !16842
  %mul46 = mul i64 %div45, 4295, !dbg !16842
  call void @__const_udelay(i64 %mul46) #9, !dbg !16842
  br label %if.end47

if.end47:                                         ; preds = %if.else42, %if.then41
  br label %if.end52, !dbg !16845

if.else48:                                        ; preds = %if.end23
  %34 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16846
  %serial_interval_ns49 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %34, i32 0, i32 22, !dbg !16846
  %35 = load i64, i64* %serial_interval_ns49, align 8, !dbg !16846
  %add50 = add i64 %35, 999, !dbg !16846
  %div51 = udiv i64 %add50, 2000, !dbg !16846
  call void @__udelay(i64 %div51) #9, !dbg !16846
  br label %if.end52

if.end52:                                         ; preds = %if.else48, %if.end47
  %36 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16848
  %dio_control53 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %36, i32 0, i32 1, !dbg !16849
  %37 = load i16, i16* %dio_control53, align 2, !dbg !16850
  %conv54 = zext i16 %37 to i64, !dbg !16850
  %and55 = and i64 %conv54, -2049, !dbg !16850
  %conv56 = trunc i64 %and55 to i16, !dbg !16850
  store i16 %conv56, i16* %dio_control53, align 2, !dbg !16850
  %38 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16851
  %39 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16852
  %dio_control57 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %39, i32 0, i32 1, !dbg !16853
  %40 = load i16, i16* %dio_control57, align 2, !dbg !16853
  %conv58 = zext i16 %40 to i32, !dbg !16852
  call void @ni_stc_writew(%struct.comedi_device* %38, i32 %conv58, i32 11) #9, !dbg !16854
  %41 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16855
  %serial_interval_ns59 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %41, i32 0, i32 22, !dbg !16855
  %42 = load i64, i64* %serial_interval_ns59, align 8, !dbg !16855
  %add60 = add i64 %42, 999, !dbg !16855
  %div61 = udiv i64 %add60, 2000, !dbg !16855
  %43 = call i1 @llvm.is.constant.i64(i64 %div61), !dbg !16855
  br i1 %43, label %if.then62, label %if.else76, !dbg !16858

if.then62:                                        ; preds = %if.end52
  %44 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16859
  %serial_interval_ns63 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %44, i32 0, i32 22, !dbg !16859
  %45 = load i64, i64* %serial_interval_ns63, align 8, !dbg !16859
  %add64 = add i64 %45, 999, !dbg !16859
  %div65 = udiv i64 %add64, 2000, !dbg !16859
  %div66 = udiv i64 %div65, 20000, !dbg !16859
  %cmp67 = icmp uge i64 %div66, 1, !dbg !16859
  br i1 %cmp67, label %if.then69, label %if.else70, !dbg !16862

if.then69:                                        ; preds = %if.then62
  call void @__bad_udelay() #9, !dbg !16859
  br label %if.end75, !dbg !16859

if.else70:                                        ; preds = %if.then62
  %46 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16859
  %serial_interval_ns71 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %46, i32 0, i32 22, !dbg !16859
  %47 = load i64, i64* %serial_interval_ns71, align 8, !dbg !16859
  %add72 = add i64 %47, 999, !dbg !16859
  %div73 = udiv i64 %add72, 2000, !dbg !16859
  %mul74 = mul i64 %div73, 4295, !dbg !16859
  call void @__const_udelay(i64 %mul74) #9, !dbg !16859
  br label %if.end75

if.end75:                                         ; preds = %if.else70, %if.then69
  br label %if.end80, !dbg !16862

if.else76:                                        ; preds = %if.end52
  %48 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16863
  %serial_interval_ns77 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %48, i32 0, i32 22, !dbg !16863
  %49 = load i64, i64* %serial_interval_ns77, align 8, !dbg !16863
  %add78 = add i64 %49, 999, !dbg !16863
  %div79 = udiv i64 %add78, 2000, !dbg !16863
  call void @__udelay(i64 %div79) #9, !dbg !16863
  br label %if.end80

if.end80:                                         ; preds = %if.else76, %if.end75
  %50 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16865
  %call = call i32 @ni_stc_readw(%struct.comedi_device* %50, i32 7) #9, !dbg !16867
  %conv81 = zext i32 %call to i64, !dbg !16867
  %and82 = and i64 %conv81, 16, !dbg !16868
  %tobool83 = icmp ne i64 %and82, 0, !dbg !16868
  br i1 %tobool83, label %if.then84, label %if.end89, !dbg !16869

if.then84:                                        ; preds = %if.end80
  %51 = load i8, i8* %mask, align 1, !dbg !16870
  %conv85 = zext i8 %51 to i32, !dbg !16870
  %52 = load i8, i8* %input, align 1, !dbg !16871
  %conv86 = zext i8 %52 to i32, !dbg !16871
  %or87 = or i32 %conv86, %conv85, !dbg !16871
  %conv88 = trunc i32 %or87 to i8, !dbg !16871
  store i8 %conv88, i8* %input, align 1, !dbg !16871
  br label %if.end89, !dbg !16872

if.end89:                                         ; preds = %if.then84, %if.end80
  br label %for.inc, !dbg !16873

for.inc:                                          ; preds = %if.end89
  %53 = load i8, i8* %mask, align 1, !dbg !16874
  %conv90 = zext i8 %53 to i32, !dbg !16874
  %shr = ashr i32 %conv90, 1, !dbg !16874
  %conv91 = trunc i32 %shr to i8, !dbg !16874
  store i8 %conv91, i8* %mask, align 1, !dbg !16874
  br label %for.cond, !dbg !16875, !llvm.loop !16876

for.end:                                          ; preds = %for.cond
  %54 = load i8*, i8** %data_in.addr, align 8, !dbg !16878
  %tobool92 = icmp ne i8* %54, null, !dbg !16878
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !16880

if.then93:                                        ; preds = %for.end
  %55 = load i8, i8* %input, align 1, !dbg !16881
  %56 = load i8*, i8** %data_in.addr, align 8, !dbg !16882
  store i8 %55, i8* %56, align 1, !dbg !16883
  br label %if.end94, !dbg !16884

if.end94:                                         ; preds = %if.then93, %for.end
  ret i32 0, !dbg !16885
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #8

; Function Attrs: noredzone
declare dso_local void @__bad_udelay() #1

; Function Attrs: noredzone
declare dso_local void @__udelay(i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_set_master_clock(%struct.comedi_device* %dev, i32 %source, i32 %period_ns) #2 !dbg !16886 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %source.addr = alloca i32, align 4
  %period_ns.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !16887, metadata !DIExpression()), !dbg !16888
  store i32 %source, i32* %source.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source.addr, metadata !16889, metadata !DIExpression()), !dbg !16890
  store i32 %period_ns, i32* %period_ns.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %period_ns.addr, metadata !16891, metadata !DIExpression()), !dbg !16892
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !16893, metadata !DIExpression()), !dbg !16894
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16895
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !16896
  %1 = load i8*, i8** %private, align 8, !dbg !16896
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !16895
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !16894
  %3 = load i32, i32* %source.addr, align 4, !dbg !16897
  %cmp = icmp eq i32 %3, 0, !dbg !16899
  br i1 %cmp, label %if.then, label %if.else, !dbg !16900

if.then:                                          ; preds = %entry
  %4 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16901
  %rtsi_trig_direction_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %4, i32 0, i32 29, !dbg !16903
  %5 = load i16, i16* %rtsi_trig_direction_reg, align 4, !dbg !16904
  %conv = zext i16 %5 to i64, !dbg !16904
  %and = and i64 %conv, -3, !dbg !16904
  %conv1 = trunc i64 %and to i16, !dbg !16904
  store i16 %conv1, i16* %rtsi_trig_direction_reg, align 4, !dbg !16904
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16905
  %7 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16906
  %rtsi_trig_direction_reg2 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %7, i32 0, i32 29, !dbg !16907
  %8 = load i16, i16* %rtsi_trig_direction_reg2, align 4, !dbg !16907
  %conv3 = zext i16 %8 to i32, !dbg !16906
  call void @ni_stc_writew(%struct.comedi_device* %6, i32 %conv3, i32 58) #9, !dbg !16908
  %9 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16909
  %clock_ns = getelementptr inbounds %struct.ni_private, %struct.ni_private* %9, i32 0, i32 36, !dbg !16910
  store i32 50, i32* %clock_ns, align 4, !dbg !16911
  %10 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16912
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %10, i32 0, i32 50, !dbg !16914
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !16914
  %bf.clear = and i16 %bf.load, 1, !dbg !16914
  %bf.cast = zext i16 %bf.clear to i32, !dbg !16914
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !16912
  br i1 %tobool, label %if.then4, label %if.end, !dbg !16915

if.then4:                                         ; preds = %if.then
  %11 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16916
  %clock_and_fout2 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %11, i32 0, i32 25, !dbg !16918
  %12 = load i16, i16* %clock_and_fout2, align 4, !dbg !16919
  %conv5 = zext i16 %12 to i64, !dbg !16919
  %and6 = and i64 %conv5, -97, !dbg !16919
  %conv7 = trunc i64 %and6 to i16, !dbg !16919
  store i16 %conv7, i16* %clock_and_fout2, align 4, !dbg !16919
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16920
  %14 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16921
  %clock_and_fout28 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %14, i32 0, i32 25, !dbg !16922
  %15 = load i16, i16* %clock_and_fout28, align 4, !dbg !16922
  %conv9 = zext i16 %15 to i32, !dbg !16921
  call void @ni_writew(%struct.comedi_device* %13, i32 %conv9, i32 452) #9, !dbg !16923
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16924
  call void @ni_writew(%struct.comedi_device* %16, i32 0, i32 454) #9, !dbg !16925
  br label %if.end, !dbg !16926

if.end:                                           ; preds = %if.then4, %if.then
  %17 = load i32, i32* %source.addr, align 4, !dbg !16927
  %18 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16928
  %clock_source = getelementptr inbounds %struct.ni_private, %struct.ni_private* %18, i32 0, i32 37, !dbg !16929
  store i32 %17, i32* %clock_source, align 8, !dbg !16930
  br label %if.end34, !dbg !16931

if.else:                                          ; preds = %entry
  %19 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16932
  %is_m_series10 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %19, i32 0, i32 50, !dbg !16935
  %bf.load11 = load i16, i16* %is_m_series10, align 8, !dbg !16935
  %bf.clear12 = and i16 %bf.load11, 1, !dbg !16935
  %bf.cast13 = zext i16 %bf.clear12 to i32, !dbg !16935
  %tobool14 = icmp ne i32 %bf.cast13, 0, !dbg !16932
  br i1 %tobool14, label %if.then15, label %if.else16, !dbg !16936

if.then15:                                        ; preds = %if.else
  %20 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16937
  %21 = load i32, i32* %source.addr, align 4, !dbg !16939
  %22 = load i32, i32* %period_ns.addr, align 4, !dbg !16940
  %call = call i32 @ni_mseries_set_pll_master_clock(%struct.comedi_device* %20, i32 %21, i32 %22) #9, !dbg !16941
  store i32 %call, i32* %retval, align 4, !dbg !16942
  br label %return, !dbg !16942

if.else16:                                        ; preds = %if.else
  %23 = load i32, i32* %source.addr, align 4, !dbg !16943
  %cmp17 = icmp eq i32 %23, 1, !dbg !16946
  br i1 %cmp17, label %if.then19, label %if.else31, !dbg !16947

if.then19:                                        ; preds = %if.else16
  %24 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16948
  %rtsi_trig_direction_reg20 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %24, i32 0, i32 29, !dbg !16950
  %25 = load i16, i16* %rtsi_trig_direction_reg20, align 4, !dbg !16951
  %conv21 = zext i16 %25 to i64, !dbg !16951
  %or = or i64 %conv21, 2, !dbg !16951
  %conv22 = trunc i64 %or to i16, !dbg !16951
  store i16 %conv22, i16* %rtsi_trig_direction_reg20, align 4, !dbg !16951
  %26 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16952
  %27 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16953
  %rtsi_trig_direction_reg23 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %27, i32 0, i32 29, !dbg !16954
  %28 = load i16, i16* %rtsi_trig_direction_reg23, align 4, !dbg !16954
  %conv24 = zext i16 %28 to i32, !dbg !16953
  call void @ni_stc_writew(%struct.comedi_device* %26, i32 %conv24, i32 58) #9, !dbg !16955
  %29 = load i32, i32* %period_ns.addr, align 4, !dbg !16956
  %cmp25 = icmp eq i32 %29, 0, !dbg !16958
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !16959

if.then27:                                        ; preds = %if.then19
  %30 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16960
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %30, i32 0, i32 4, !dbg !16960
  %31 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !16960
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %31, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.117, i64 0, i64 0)) #11, !dbg !16960
  store i32 -22, i32* %retval, align 4, !dbg !16962
  br label %return, !dbg !16962

if.end28:                                         ; preds = %if.then19
  %32 = load i32, i32* %period_ns.addr, align 4, !dbg !16963
  %33 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16964
  %clock_ns29 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %33, i32 0, i32 36, !dbg !16965
  store i32 %32, i32* %clock_ns29, align 4, !dbg !16966
  %34 = load i32, i32* %source.addr, align 4, !dbg !16967
  %35 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !16968
  %clock_source30 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %35, i32 0, i32 37, !dbg !16969
  store i32 %34, i32* %clock_source30, align 8, !dbg !16970
  br label %if.end32, !dbg !16971

if.else31:                                        ; preds = %if.else16
  store i32 -22, i32* %retval, align 4, !dbg !16972
  br label %return, !dbg !16972

if.end32:                                         ; preds = %if.end28
  br label %if.end33

if.end33:                                         ; preds = %if.end32
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.end
  store i32 3, i32* %retval, align 4, !dbg !16974
  br label %return, !dbg !16974

return:                                           ; preds = %if.end34, %if.else31, %if.then27, %if.then15
  %36 = load i32, i32* %retval, align 4, !dbg !16975
  ret i32 %36, !dbg !16975
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_mseries_set_pll_master_clock(%struct.comedi_device* %dev, i32 %source, i32 %period_ns) #2 !dbg !4410 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %source.addr = alloca i32, align 4
  %period_ns.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  %pll_control_bits = alloca i32, align 4
  %freq_divider = alloca i32, align 4
  %freq_multiplier = alloca i32, align 4
  %rtsi = alloca i32, align 4
  %i = alloca i32, align 4
  %retval1 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !16976, metadata !DIExpression()), !dbg !16977
  store i32 %source, i32* %source.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %source.addr, metadata !16978, metadata !DIExpression()), !dbg !16979
  store i32 %period_ns, i32* %period_ns.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %period_ns.addr, metadata !16980, metadata !DIExpression()), !dbg !16981
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !16982, metadata !DIExpression()), !dbg !16983
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !16984
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !16985
  %1 = load i8*, i8** %private, align 8, !dbg !16985
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !16984
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !16983
  call void @llvm.dbg.declare(metadata i32* %pll_control_bits, metadata !16986, metadata !DIExpression()), !dbg !16987
  call void @llvm.dbg.declare(metadata i32* %freq_divider, metadata !16988, metadata !DIExpression()), !dbg !16989
  call void @llvm.dbg.declare(metadata i32* %freq_multiplier, metadata !16990, metadata !DIExpression()), !dbg !16991
  call void @llvm.dbg.declare(metadata i32* %rtsi, metadata !16992, metadata !DIExpression()), !dbg !16993
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16994, metadata !DIExpression()), !dbg !16995
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !16996, metadata !DIExpression()), !dbg !16997
  %3 = load i32, i32* %source.addr, align 4, !dbg !16998
  %cmp = icmp eq i32 %3, 3, !dbg !17000
  br i1 %cmp, label %if.then, label %if.end, !dbg !17001

if.then:                                          ; preds = %entry
  store i32 100, i32* %period_ns.addr, align 4, !dbg !17002
  br label %if.end, !dbg !17003

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %period_ns.addr, align 4, !dbg !17004
  %cmp2 = icmp ult i32 %4, 50, !dbg !17006
  br i1 %cmp2, label %if.then4, label %lor.lhs.false, !dbg !17007

lor.lhs.false:                                    ; preds = %if.end
  %5 = load i32, i32* %period_ns.addr, align 4, !dbg !17008
  %cmp3 = icmp ugt i32 %5, 1000, !dbg !17009
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !17010

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !17011
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %6, i32 0, i32 4, !dbg !17011
  %7 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !17011
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %7, i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.118, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__func__.ni_mseries_set_pll_master_clock, i64 0, i64 0), i32 50, i32 1000) #11, !dbg !17011
  store i32 -22, i32* %retval, align 4, !dbg !17013
  br label %return, !dbg !17013

if.end5:                                          ; preds = %lor.lhs.false
  %8 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !17014
  %rtsi_trig_direction_reg = getelementptr inbounds %struct.ni_private, %struct.ni_private* %8, i32 0, i32 29, !dbg !17015
  %9 = load i16, i16* %rtsi_trig_direction_reg, align 4, !dbg !17016
  %conv = zext i16 %9 to i64, !dbg !17016
  %and = and i64 %conv, -3, !dbg !17016
  %conv6 = trunc i64 %and to i16, !dbg !17016
  store i16 %conv6, i16* %rtsi_trig_direction_reg, align 4, !dbg !17016
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !17017
  %11 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !17018
  %rtsi_trig_direction_reg7 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %11, i32 0, i32 29, !dbg !17019
  %12 = load i16, i16* %rtsi_trig_direction_reg7, align 4, !dbg !17019
  %conv8 = zext i16 %12 to i32, !dbg !17018
  call void @ni_stc_writew(%struct.comedi_device* %10, i32 %conv8, i32 58) #9, !dbg !17020
  store i32 28672, i32* %pll_control_bits, align 4, !dbg !17021
  %13 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !17022
  %clock_and_fout2 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %13, i32 0, i32 25, !dbg !17023
  %14 = load i16, i16* %clock_and_fout2, align 4, !dbg !17024
  %conv9 = zext i16 %14 to i64, !dbg !17024
  %or = or i64 %conv9, 96, !dbg !17024
  %conv10 = trunc i64 %or to i16, !dbg !17024
  store i16 %conv10, i16* %clock_and_fout2, align 4, !dbg !17024
  %15 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !17025
  %clock_and_fout211 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %15, i32 0, i32 25, !dbg !17026
  %16 = load i16, i16* %clock_and_fout211, align 4, !dbg !17027
  %conv12 = zext i16 %16 to i32, !dbg !17027
  %and13 = and i32 %conv12, -32, !dbg !17027
  %conv14 = trunc i32 %and13 to i16, !dbg !17027
  store i16 %conv14, i16* %clock_and_fout211, align 4, !dbg !17027
  %17 = load i32, i32* %source.addr, align 4, !dbg !17028
  switch i32 %17, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb19
  ], !dbg !17029

sw.bb:                                            ; preds = %if.end5
  %18 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !17030
  %clock_and_fout215 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %18, i32 0, i32 25, !dbg !17032
  %19 = load i16, i16* %clock_and_fout215, align 4, !dbg !17033
  %conv16 = zext i16 %19 to i32, !dbg !17033
  %or17 = or i32 %conv16, 20, !dbg !17033
  %conv18 = trunc i32 %or17 to i16, !dbg !17033
  store i16 %conv18, i16* %clock_and_fout215, align 4, !dbg !17033
  br label %sw.epilog, !dbg !17034

sw.bb19:                                          ; preds = %if.end5
  %20 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !17035
  %clock_and_fout220 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %20, i32 0, i32 25, !dbg !17036
  %21 = load i16, i16* %clock_and_fout220, align 4, !dbg !17037
  %conv21 = zext i16 %21 to i32, !dbg !17037
  %or22 = or i32 %conv21, 29, !dbg !17037
  %conv23 = trunc i32 %or22 to i16, !dbg !17037
  store i16 %conv23, i16* %clock_and_fout220, align 4, !dbg !17037
  br label %sw.epilog, !dbg !17038

sw.default:                                       ; preds = %if.end5
  store i32 0, i32* %rtsi, align 4, !dbg !17039
  br label %for.cond, !dbg !17041

for.cond:                                         ; preds = %for.inc, %sw.default
  %22 = load i32, i32* %rtsi, align 4, !dbg !17042
  %cmp24 = icmp ule i32 %22, 7, !dbg !17044
  br i1 %cmp24, label %for.body, label %for.end, !dbg !17045

for.body:                                         ; preds = %for.cond
  %23 = load i32, i32* %source.addr, align 4, !dbg !17046
  %24 = load i32, i32* %rtsi, align 4, !dbg !17049
  %add = add i32 4, %24, !dbg !17049
  %cmp26 = icmp eq i32 %23, %add, !dbg !17050
  br i1 %cmp26, label %if.then28, label %if.end37, !dbg !17051

if.then28:                                        ; preds = %for.body
  %25 = load i32, i32* %rtsi, align 4, !dbg !17052
  %cmp29 = icmp eq i32 %25, 7, !dbg !17052
  br i1 %cmp29, label %cond.true, label %cond.false, !dbg !17052

cond.true:                                        ; preds = %if.then28
  br label %cond.end, !dbg !17052

cond.false:                                       ; preds = %if.then28
  %26 = load i32, i32* %rtsi, align 4, !dbg !17052
  %add31 = add i32 11, %26, !dbg !17052
  %and32 = and i32 %add31, 31, !dbg !17052
  %shl = shl i32 %and32, 0, !dbg !17052
  br label %cond.end, !dbg !17052

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 27, %cond.true ], [ %shl, %cond.false ], !dbg !17052
  %27 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !17054
  %clock_and_fout233 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %27, i32 0, i32 25, !dbg !17055
  %28 = load i16, i16* %clock_and_fout233, align 4, !dbg !17056
  %conv34 = zext i16 %28 to i32, !dbg !17056
  %or35 = or i32 %conv34, %cond, !dbg !17056
  %conv36 = trunc i32 %or35 to i16, !dbg !17056
  store i16 %conv36, i16* %clock_and_fout233, align 4, !dbg !17056
  br label %for.end, !dbg !17057

if.end37:                                         ; preds = %for.body
  br label %for.inc, !dbg !17058

for.inc:                                          ; preds = %if.end37
  %29 = load i32, i32* %rtsi, align 4, !dbg !17059
  %inc = add i32 %29, 1, !dbg !17059
  store i32 %inc, i32* %rtsi, align 4, !dbg !17059
  br label %for.cond, !dbg !17060, !llvm.loop !17061

for.end:                                          ; preds = %cond.end, %for.cond
  %30 = load i32, i32* %rtsi, align 4, !dbg !17063
  %cmp38 = icmp ugt i32 %30, 7, !dbg !17065
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !17066

if.then40:                                        ; preds = %for.end
  store i32 -22, i32* %retval, align 4, !dbg !17067
  br label %return, !dbg !17067

if.end41:                                         ; preds = %for.end
  br label %sw.epilog, !dbg !17068

sw.epilog:                                        ; preds = %if.end41, %sw.bb19, %sw.bb
  %31 = load i32, i32* %period_ns.addr, align 4, !dbg !17069
  %32 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !17070
  %clock_ns = getelementptr inbounds %struct.ni_private, %struct.ni_private* %32, i32 0, i32 36, !dbg !17071
  %call = call i32 @ni_mseries_get_pll_parameters(i32 %31, i32* %freq_divider, i32* %freq_multiplier, i32* %clock_ns) #9, !dbg !17072
  store i32 %call, i32* %retval1, align 4, !dbg !17073
  %33 = load i32, i32* %retval1, align 4, !dbg !17074
  %cmp42 = icmp slt i32 %33, 0, !dbg !17076
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !17077

if.then44:                                        ; preds = %sw.epilog
  %34 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !17078
  %class_dev45 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %34, i32 0, i32 4, !dbg !17078
  %35 = load %struct.device*, %struct.device** %class_dev45, align 8, !dbg !17078
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %35, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.119, i64 0, i64 0)) #11, !dbg !17078
  %36 = load i32, i32* %retval1, align 4, !dbg !17080
  store i32 %36, i32* %retval, align 4, !dbg !17081
  br label %return, !dbg !17081

if.end46:                                         ; preds = %sw.epilog
  %37 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !17082
  %38 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !17083
  %clock_and_fout247 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %38, i32 0, i32 25, !dbg !17084
  %39 = load i16, i16* %clock_and_fout247, align 4, !dbg !17084
  %conv48 = zext i16 %39 to i32, !dbg !17083
  call void @ni_writew(%struct.comedi_device* %37, i32 %conv48, i32 452) #9, !dbg !17085
  %40 = load i32, i32* %freq_divider, align 4, !dbg !17086
  %and49 = and i32 %40, 15, !dbg !17086
  %shl50 = shl i32 %and49, 8, !dbg !17086
  %41 = load i32, i32* %freq_multiplier, align 4, !dbg !17087
  %and51 = and i32 %41, 255, !dbg !17087
  %shl52 = shl i32 %and51, 0, !dbg !17087
  %or53 = or i32 %shl50, %shl52, !dbg !17088
  %42 = load i32, i32* %pll_control_bits, align 4, !dbg !17089
  %or54 = or i32 %42, %or53, !dbg !17089
  store i32 %or54, i32* %pll_control_bits, align 4, !dbg !17089
  %43 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !17090
  %44 = load i32, i32* %pll_control_bits, align 4, !dbg !17091
  call void @ni_writew(%struct.comedi_device* %43, i32 %44, i32 454) #9, !dbg !17092
  %45 = load i32, i32* %source.addr, align 4, !dbg !17093
  %46 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !17094
  %clock_source = getelementptr inbounds %struct.ni_private, %struct.ni_private* %46, i32 0, i32 37, !dbg !17095
  store i32 %45, i32* %clock_source, align 8, !dbg !17096
  store i32 0, i32* %i, align 4, !dbg !17097
  br label %for.cond55, !dbg !17099

for.cond55:                                       ; preds = %for.inc64, %if.end46
  %47 = load i32, i32* %i, align 4, !dbg !17100
  %cmp56 = icmp ult i32 %47, 1000, !dbg !17102
  br i1 %cmp56, label %for.body58, label %for.end66, !dbg !17103

for.body58:                                       ; preds = %for.cond55
  %48 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !17104
  %call59 = call i32 @ni_readw(%struct.comedi_device* %48, i32 456) #9, !dbg !17107
  %conv60 = zext i32 %call59 to i64, !dbg !17107
  %and61 = and i64 %conv60, 1, !dbg !17108
  %tobool = icmp ne i64 %and61, 0, !dbg !17108
  br i1 %tobool, label %if.then62, label %if.end63, !dbg !17109

if.then62:                                        ; preds = %for.body58
  br label %for.end66, !dbg !17110

if.end63:                                         ; preds = %for.body58
  call void @__const_udelay(i64 4295) #9, !dbg !17111
  br label %for.inc64, !dbg !17116

for.inc64:                                        ; preds = %if.end63
  %49 = load i32, i32* %i, align 4, !dbg !17117
  %inc65 = add i32 %49, 1, !dbg !17117
  store i32 %inc65, i32* %i, align 4, !dbg !17117
  br label %for.cond55, !dbg !17118, !llvm.loop !17119

for.end66:                                        ; preds = %if.then62, %for.cond55
  %50 = load i32, i32* %i, align 4, !dbg !17121
  %cmp67 = icmp eq i32 %50, 1000, !dbg !17123
  br i1 %cmp67, label %if.then69, label %if.end71, !dbg !17124

if.then69:                                        ; preds = %for.end66
  %51 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !17125
  %class_dev70 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %51, i32 0, i32 4, !dbg !17125
  %52 = load %struct.device*, %struct.device** %class_dev70, align 8, !dbg !17125
  %53 = load i32, i32* %source.addr, align 4, !dbg !17125
  %54 = load i32, i32* %period_ns.addr, align 4, !dbg !17125
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %52, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.120, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__func__.ni_mseries_set_pll_master_clock, i64 0, i64 0), i32 %53, i32 %54) #11, !dbg !17125
  store i32 -110, i32* %retval, align 4, !dbg !17127
  br label %return, !dbg !17127

if.end71:                                         ; preds = %for.end66
  store i32 3, i32* %retval, align 4, !dbg !17128
  br label %return, !dbg !17128

return:                                           ; preds = %if.end71, %if.then69, %if.then44, %if.then40, %if.then4
  %55 = load i32, i32* %retval, align 4, !dbg !17129
  ret i32 %55, !dbg !17129
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_mseries_get_pll_parameters(i32 %reference_period_ns, i32* %freq_divider, i32* %freq_multiplier, i32* %actual_period_ns) #2 !dbg !4419 {
entry:
  %retval = alloca i32, align 4
  %reference_period_ns.addr = alloca i32, align 4
  %freq_divider.addr = alloca i32*, align 8
  %freq_multiplier.addr = alloca i32*, align 8
  %actual_period_ns.addr = alloca i32*, align 8
  %div = alloca i32, align 4
  %best_div = alloca i32, align 4
  %mult = alloca i32, align 4
  %best_mult = alloca i32, align 4
  %reference_picosec = alloca i32, align 4
  %best_period_picosec = alloca i32, align 4
  %new_period_ps = alloca i32, align 4
  %__x = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__x8 = alloca i32, align 4
  %tmp10 = alloca i32, align 4
  %__x24 = alloca i32, align 4
  %__d = alloca i32, align 4
  %tmp26 = alloca i32, align 4
  store i32 %reference_period_ns, i32* %reference_period_ns.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reference_period_ns.addr, metadata !17130, metadata !DIExpression()), !dbg !17131
  store i32* %freq_divider, i32** %freq_divider.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %freq_divider.addr, metadata !17132, metadata !DIExpression()), !dbg !17133
  store i32* %freq_multiplier, i32** %freq_multiplier.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %freq_multiplier.addr, metadata !17134, metadata !DIExpression()), !dbg !17135
  store i32* %actual_period_ns, i32** %actual_period_ns.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %actual_period_ns.addr, metadata !17136, metadata !DIExpression()), !dbg !17137
  call void @llvm.dbg.declare(metadata i32* %div, metadata !17138, metadata !DIExpression()), !dbg !17139
  call void @llvm.dbg.declare(metadata i32* %best_div, metadata !17140, metadata !DIExpression()), !dbg !17141
  store i32 1, i32* %best_div, align 4, !dbg !17141
  call void @llvm.dbg.declare(metadata i32* %mult, metadata !17142, metadata !DIExpression()), !dbg !17143
  call void @llvm.dbg.declare(metadata i32* %best_mult, metadata !17144, metadata !DIExpression()), !dbg !17145
  store i32 1, i32* %best_mult, align 4, !dbg !17145
  call void @llvm.dbg.declare(metadata i32* %reference_picosec, metadata !17146, metadata !DIExpression()), !dbg !17147
  %0 = load i32, i32* %reference_period_ns.addr, align 4, !dbg !17148
  %mul = mul i32 %0, 1000, !dbg !17149
  store i32 %mul, i32* %reference_picosec, align 4, !dbg !17147
  call void @llvm.dbg.declare(metadata i32* %best_period_picosec, metadata !17150, metadata !DIExpression()), !dbg !17151
  store i32 0, i32* %best_period_picosec, align 4, !dbg !17151
  store i32 1, i32* %div, align 4, !dbg !17152
  br label %for.cond, !dbg !17154

for.cond:                                         ; preds = %for.inc18, %entry
  %1 = load i32, i32* %div, align 4, !dbg !17155
  %cmp = icmp ule i32 %1, 16, !dbg !17157
  br i1 %cmp, label %for.body, label %for.end20, !dbg !17158

for.body:                                         ; preds = %for.cond
  store i32 1, i32* %mult, align 4, !dbg !17159
  br label %for.cond1, !dbg !17162

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %mult, align 4, !dbg !17163
  %cmp2 = icmp ule i32 %2, 256, !dbg !17165
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !17166

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.declare(metadata i32* %new_period_ps, metadata !17167, metadata !DIExpression()), !dbg !17169
  %3 = load i32, i32* %reference_picosec, align 4, !dbg !17170
  %4 = load i32, i32* %div, align 4, !dbg !17171
  %mul4 = mul i32 %3, %4, !dbg !17172
  %5 = load i32, i32* %mult, align 4, !dbg !17173
  %div5 = udiv i32 %mul4, %5, !dbg !17174
  store i32 %div5, i32* %new_period_ps, align 4, !dbg !17169
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !17175, metadata !DIExpression()), !dbg !17178
  %6 = load i32, i32* %new_period_ps, align 4, !dbg !17178
  %sub = sub i32 %6, 12500, !dbg !17178
  store i32 %sub, i32* %__x, align 4, !dbg !17178
  %7 = load i32, i32* %__x, align 4, !dbg !17178
  %cmp6 = icmp slt i32 %7, 0, !dbg !17178
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !17178

cond.true:                                        ; preds = %for.body3
  %8 = load i32, i32* %__x, align 4, !dbg !17178
  %sub7 = sub i32 0, %8, !dbg !17178
  br label %cond.end, !dbg !17178

cond.false:                                       ; preds = %for.body3
  %9 = load i32, i32* %__x, align 4, !dbg !17178
  br label %cond.end, !dbg !17178

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub7, %cond.true ], [ %9, %cond.false ], !dbg !17178
  store i32 %cond, i32* %tmp, align 4, !dbg !17178
  %10 = load i32, i32* %tmp, align 4, !dbg !17178
  call void @llvm.dbg.declare(metadata i32* %__x8, metadata !17179, metadata !DIExpression()), !dbg !17181
  %11 = load i32, i32* %best_period_picosec, align 4, !dbg !17181
  %sub9 = sub i32 %11, 12500, !dbg !17181
  store i32 %sub9, i32* %__x8, align 4, !dbg !17181
  %12 = load i32, i32* %__x8, align 4, !dbg !17181
  %cmp11 = icmp slt i32 %12, 0, !dbg !17181
  br i1 %cmp11, label %cond.true12, label %cond.false14, !dbg !17181

cond.true12:                                      ; preds = %cond.end
  %13 = load i32, i32* %__x8, align 4, !dbg !17181
  %sub13 = sub i32 0, %13, !dbg !17181
  br label %cond.end15, !dbg !17181

cond.false14:                                     ; preds = %cond.end
  %14 = load i32, i32* %__x8, align 4, !dbg !17181
  br label %cond.end15, !dbg !17181

cond.end15:                                       ; preds = %cond.false14, %cond.true12
  %cond16 = phi i32 [ %sub13, %cond.true12 ], [ %14, %cond.false14 ], !dbg !17181
  store i32 %cond16, i32* %tmp10, align 4, !dbg !17181
  %15 = load i32, i32* %tmp10, align 4, !dbg !17181
  %cmp17 = icmp slt i32 %10, %15, !dbg !17182
  br i1 %cmp17, label %if.then, label %if.end, !dbg !17183

if.then:                                          ; preds = %cond.end15
  %16 = load i32, i32* %new_period_ps, align 4, !dbg !17184
  store i32 %16, i32* %best_period_picosec, align 4, !dbg !17186
  %17 = load i32, i32* %div, align 4, !dbg !17187
  store i32 %17, i32* %best_div, align 4, !dbg !17188
  %18 = load i32, i32* %mult, align 4, !dbg !17189
  store i32 %18, i32* %best_mult, align 4, !dbg !17190
  br label %if.end, !dbg !17191

if.end:                                           ; preds = %if.then, %cond.end15
  br label %for.inc, !dbg !17192

for.inc:                                          ; preds = %if.end
  %19 = load i32, i32* %mult, align 4, !dbg !17193
  %inc = add i32 %19, 1, !dbg !17193
  store i32 %inc, i32* %mult, align 4, !dbg !17193
  br label %for.cond1, !dbg !17194, !llvm.loop !17195

for.end:                                          ; preds = %for.cond1
  br label %for.inc18, !dbg !17197

for.inc18:                                        ; preds = %for.end
  %20 = load i32, i32* %div, align 4, !dbg !17198
  %inc19 = add i32 %20, 1, !dbg !17198
  store i32 %inc19, i32* %div, align 4, !dbg !17198
  br label %for.cond, !dbg !17199, !llvm.loop !17200

for.end20:                                        ; preds = %for.cond
  %21 = load i32, i32* %best_period_picosec, align 4, !dbg !17202
  %cmp21 = icmp eq i32 %21, 0, !dbg !17204
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !17205

if.then22:                                        ; preds = %for.end20
  store i32 -5, i32* %retval, align 4, !dbg !17206
  br label %return, !dbg !17206

if.end23:                                         ; preds = %for.end20
  %22 = load i32, i32* %best_div, align 4, !dbg !17207
  %23 = load i32*, i32** %freq_divider.addr, align 8, !dbg !17208
  store i32 %22, i32* %23, align 4, !dbg !17209
  %24 = load i32, i32* %best_mult, align 4, !dbg !17210
  %25 = load i32*, i32** %freq_multiplier.addr, align 8, !dbg !17211
  store i32 %24, i32* %25, align 4, !dbg !17212
  call void @llvm.dbg.declare(metadata i32* %__x24, metadata !17213, metadata !DIExpression()), !dbg !17215
  %26 = load i32, i32* %best_period_picosec, align 4, !dbg !17215
  %mul25 = mul i32 %26, 4, !dbg !17215
  store i32 %mul25, i32* %__x24, align 4, !dbg !17215
  call void @llvm.dbg.declare(metadata i32* %__d, metadata !17216, metadata !DIExpression()), !dbg !17215
  store i32 1000, i32* %__d, align 4, !dbg !17215
  %27 = load i32, i32* %__x24, align 4, !dbg !17215
  %add = add i32 %27, 500, !dbg !17215
  %div27 = udiv i32 %add, 1000, !dbg !17215
  store i32 %div27, i32* %tmp26, align 4, !dbg !17215
  %28 = load i32, i32* %tmp26, align 4, !dbg !17215
  %29 = load i32*, i32** %actual_period_ns.addr, align 8, !dbg !17217
  store i32 %28, i32* %29, align 4, !dbg !17218
  store i32 0, i32* %retval, align 4, !dbg !17219
  br label %return, !dbg !17219

return:                                           ; preds = %if.end23, %if.then22
  %30 = load i32, i32* %retval, align 4, !dbg !17220
  ret i32 %30, !dbg !17220
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_gpct_to_stc_register(%struct.comedi_device* %dev, i32 %reg) #2 !dbg !17221 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %reg.addr = alloca i32, align 4
  %regmap = alloca %struct.mio_regmap*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !17224, metadata !DIExpression()), !dbg !17225
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !17226, metadata !DIExpression()), !dbg !17227
  call void @llvm.dbg.declare(metadata %struct.mio_regmap** %regmap, metadata !17228, metadata !DIExpression()), !dbg !17229
  %0 = load i32, i32* %reg.addr, align 4, !dbg !17230
  %conv = zext i32 %0 to i64, !dbg !17230
  %cmp = icmp ult i64 %conv, 68, !dbg !17232
  br i1 %cmp, label %if.then, label %if.else, !dbg !17233

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %reg.addr, align 4, !dbg !17234
  %idxprom = zext i32 %1 to i64, !dbg !17236
  %arrayidx = getelementptr [68 x %struct.mio_regmap], [68 x %struct.mio_regmap]* @ni_gpct_to_stc_regmap, i64 0, i64 %idxprom, !dbg !17236
  store %struct.mio_regmap* %arrayidx, %struct.mio_regmap** %regmap, align 8, !dbg !17237
  br label %if.end, !dbg !17238

if.else:                                          ; preds = %entry
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !17239
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %2, i32 0, i32 4, !dbg !17239
  %3 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !17239
  %4 = load i32, i32* %reg.addr, align 4, !dbg !17239
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.ni_gpct_to_stc_register, i64 0, i64 0), i32 %4) #11, !dbg !17239
  store i32 0, i32* %retval, align 4, !dbg !17241
  br label %return, !dbg !17241

if.end:                                           ; preds = %if.then
  %5 = load %struct.mio_regmap*, %struct.mio_regmap** %regmap, align 8, !dbg !17242
  %mio_reg = getelementptr inbounds %struct.mio_regmap, %struct.mio_regmap* %5, i32 0, i32 0, !dbg !17243
  %6 = load i32, i32* %mio_reg, align 4, !dbg !17243
  store i32 %6, i32* %retval, align 4, !dbg !17244
  br label %return, !dbg !17244

return:                                           ; preds = %if.end, %if.else
  %7 = load i32, i32* %retval, align 4, !dbg !17245
  ret i32 %7, !dbg !17245
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_stc_readl(%struct.comedi_device* %dev, i32 %reg) #2 !dbg !17246 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %reg.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  %val = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !17247, metadata !DIExpression()), !dbg !17248
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !17249, metadata !DIExpression()), !dbg !17250
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !17251, metadata !DIExpression()), !dbg !17252
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !17253
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !17254
  %1 = load i8*, i8** %private, align 8, !dbg !17254
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !17253
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !17252
  call void @llvm.dbg.declare(metadata i32* %val, metadata !17255, metadata !DIExpression()), !dbg !17256
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !17257
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 50, !dbg !17259
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !17259
  %bf.clear = and i16 %bf.load, 1, !dbg !17259
  %bf.cast = zext i16 %bf.clear to i32, !dbg !17259
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !17257
  br i1 %tobool, label %if.then, label %if.else, !dbg !17260

if.then:                                          ; preds = %entry
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !17261
  %5 = load i32, i32* %reg.addr, align 4, !dbg !17263
  %call = call i32 @m_series_stc_read(%struct.comedi_device* %4, i32 %5) #9, !dbg !17264
  store i32 %call, i32* %val, align 4, !dbg !17265
  br label %if.end, !dbg !17266

if.else:                                          ; preds = %entry
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !17267
  %7 = load i32, i32* %reg.addr, align 4, !dbg !17269
  %call1 = call i32 @ni_stc_readw(%struct.comedi_device* %6, i32 %7) #9, !dbg !17270
  %shl = shl i32 %call1, 16, !dbg !17271
  store i32 %shl, i32* %val, align 4, !dbg !17272
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !17273
  %9 = load i32, i32* %reg.addr, align 4, !dbg !17274
  %add = add i32 %9, 1, !dbg !17275
  %call2 = call i32 @ni_stc_readw(%struct.comedi_device* %8, i32 %add) #9, !dbg !17276
  %10 = load i32, i32* %val, align 4, !dbg !17277
  %or = or i32 %10, %call2, !dbg !17277
  store i32 %or, i32* %val, align 4, !dbg !17277
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load i32, i32* %val, align 4, !dbg !17278
  ret i32 %11, !dbg !17279
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_request_gpct_mite_channel(%struct.comedi_device* %dev, i32 %gpct_index, i32 %direction) #2 !dbg !17280 {
entry:
  %lock.addr.i45 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i45, metadata !5432, metadata !DIExpression()), !dbg !17283
  %flags.addr.i46 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i46, metadata !5440, metadata !DIExpression()), !dbg !17287
  %tmp.i47 = alloca i32, align 4
  %tmp8.i48 = alloca i32, align 4
  %lock.addr.i43 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i43, metadata !5432, metadata !DIExpression()), !dbg !17288
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5440, metadata !DIExpression()), !dbg !17290
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5232, metadata !DIExpression()), !dbg !17291
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %gpct_index.addr = alloca i32, align 4
  %direction.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  %counter = alloca %struct.ni_gpct*, align 8
  %mite_chan = alloca %struct.mite_channel*, align 8
  %flags = alloca i64, align 8
  %bits = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !17298, metadata !DIExpression()), !dbg !17299
  store i32 %gpct_index, i32* %gpct_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gpct_index.addr, metadata !17300, metadata !DIExpression()), !dbg !17301
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !17302, metadata !DIExpression()), !dbg !17303
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !17304, metadata !DIExpression()), !dbg !17305
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !17306
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !17307
  %1 = load i8*, i8** %private, align 8, !dbg !17307
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !17306
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !17305
  call void @llvm.dbg.declare(metadata %struct.ni_gpct** %counter, metadata !17308, metadata !DIExpression()), !dbg !17309
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !17310
  %counter_dev = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 19, !dbg !17311
  %4 = load %struct.ni_gpct_device*, %struct.ni_gpct_device** %counter_dev, align 8, !dbg !17311
  %counters = getelementptr inbounds %struct.ni_gpct_device, %struct.ni_gpct_device* %4, i32 0, i32 4, !dbg !17312
  %5 = load %struct.ni_gpct*, %struct.ni_gpct** %counters, align 8, !dbg !17312
  %6 = load i32, i32* %gpct_index.addr, align 4, !dbg !17313
  %idxprom = zext i32 %6 to i64, !dbg !17310
  %arrayidx = getelementptr %struct.ni_gpct, %struct.ni_gpct* %5, i64 %idxprom, !dbg !17310
  store %struct.ni_gpct* %arrayidx, %struct.ni_gpct** %counter, align 8, !dbg !17309
  call void @llvm.dbg.declare(metadata %struct.mite_channel** %mite_chan, metadata !17314, metadata !DIExpression()), !dbg !17315
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !17316, metadata !DIExpression()), !dbg !17317
  call void @llvm.dbg.declare(metadata i32* %bits, metadata !17318, metadata !DIExpression()), !dbg !17319
  br label %do.body, !dbg !17320

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !17321

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !17322, metadata !DIExpression()), !dbg !17324
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !17325, metadata !DIExpression()), !dbg !17324
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !17324
  %conv = zext i1 %cmp to i32, !dbg !17324
  store i32 1, i32* %tmp, align 4, !dbg !17324
  %7 = load i32, i32* %tmp, align 4, !dbg !17324
  br label %do.body2, !dbg !17326

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !17327

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !17328

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !17330, metadata !DIExpression()), !dbg !17333
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !17334, metadata !DIExpression()), !dbg !17333
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !17333
  %conv8 = zext i1 %cmp7 to i32, !dbg !17333
  store i32 1, i32* %tmp9, align 4, !dbg !17333
  %8 = load i32, i32* %tmp9, align 4, !dbg !17333
  %call = call i64 @arch_local_irq_save() #9, !dbg !17335
  store i64 %call, i64* %flags, align 8, !dbg !17335
  br label %do.end, !dbg !17335

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !17328

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !17327

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !17336, !srcloc !17337
  br label %do.body12, !dbg !17336

do.body12:                                        ; preds = %do.body11
  %9 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !17338
  %mite_channel_lock = getelementptr inbounds %struct.ni_private, %struct.ni_private* %9, i32 0, i32 7, !dbg !17338
  store %struct.spinlock* %mite_channel_lock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17339
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !17340
  %rlock.i = bitcast %union.anon.3* %11 to %struct.raw_spinlock*, !dbg !17340
  br label %do.end14, !dbg !17338

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !17336

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !17327

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !17326

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !17321

do.end18:                                         ; preds = %do.end17
  %12 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !17341
  %mite = getelementptr inbounds %struct.ni_private, %struct.ni_private* %12, i32 0, i32 42, !dbg !17342
  %13 = load %struct.mite*, %struct.mite** %mite, align 8, !dbg !17342
  %14 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !17343
  %gpct_mite_ring = getelementptr inbounds %struct.ni_private, %struct.ni_private* %14, i32 0, i32 49, !dbg !17344
  %15 = load i32, i32* %gpct_index.addr, align 4, !dbg !17345
  %idxprom19 = zext i32 %15 to i64, !dbg !17343
  %arrayidx20 = getelementptr [2 x %struct.mite_ring*], [2 x %struct.mite_ring*]* %gpct_mite_ring, i64 0, i64 %idxprom19, !dbg !17343
  %16 = load %struct.mite_ring*, %struct.mite_ring** %arrayidx20, align 8, !dbg !17343
  %call21 = call %struct.mite_channel* @mite_request_channel(%struct.mite* %13, %struct.mite_ring* %16) #9, !dbg !17346
  store %struct.mite_channel* %call21, %struct.mite_channel** %mite_chan, align 8, !dbg !17347
  %17 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !17348
  %tobool = icmp ne %struct.mite_channel* %17, null, !dbg !17348
  br i1 %tobool, label %if.end, label %if.then, !dbg !17349

if.then:                                          ; preds = %do.end18
  %18 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !17350
  %mite_channel_lock22 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %18, i32 0, i32 7, !dbg !17351
  %19 = load i64, i64* %flags, align 8, !dbg !17352
  store %struct.spinlock* %mite_channel_lock22, %struct.spinlock** %lock.addr.i45, align 8
  store i64 %19, i64* %flags.addr.i46, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !17353
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !17353
  store i32 1, i32* %tmp.i47, align 4, !dbg !17353
  %20 = load i32, i32* %tmp.i47, align 4, !dbg !17353
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !17354
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !17354
  store i32 1, i32* %tmp8.i48, align 4, !dbg !17354
  %21 = load i32, i32* %tmp8.i48, align 4, !dbg !17354
  %22 = load i64, i64* %flags.addr.i46, align 8, !dbg !17355
  call void @arch_local_irq_restore(i64 %22) #10, !dbg !17355
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !17356, !srcloc !5582
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i45, align 8, !dbg !17357
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !17357
  %rlock.i49 = bitcast %union.anon.3* %24 to %struct.raw_spinlock*, !dbg !17357
  %25 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !17358
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %25, i32 0, i32 4, !dbg !17358
  %26 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !17358
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %26, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.123, i64 0, i64 0)) #11, !dbg !17358
  store i32 -16, i32* %retval, align 4, !dbg !17359
  br label %return, !dbg !17359

if.end:                                           ; preds = %do.end18
  %27 = load i32, i32* %direction.addr, align 4, !dbg !17360
  %28 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !17361
  %dir = getelementptr inbounds %struct.mite_channel, %struct.mite_channel* %28, i32 0, i32 2, !dbg !17362
  store i32 %27, i32* %dir, align 4, !dbg !17363
  %29 = load %struct.ni_gpct*, %struct.ni_gpct** %counter, align 8, !dbg !17364
  %30 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !17365
  call void @ni_tio_set_mite_channel(%struct.ni_gpct* %29, %struct.mite_channel* %30) #9, !dbg !17366
  %31 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !17367
  %channel = getelementptr inbounds %struct.mite_channel, %struct.mite_channel* %31, i32 0, i32 1, !dbg !17367
  %32 = load i32, i32* %channel, align 8, !dbg !17367
  %cmp23 = icmp ult i32 %32, 4, !dbg !17367
  br i1 %cmp23, label %cond.true, label %cond.false, !dbg !17367

cond.true:                                        ; preds = %if.end
  %33 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !17367
  %channel25 = getelementptr inbounds %struct.mite_channel, %struct.mite_channel* %33, i32 0, i32 1, !dbg !17367
  %34 = load i32, i32* %channel25, align 8, !dbg !17367
  %sh_prom = zext i32 %34 to i64, !dbg !17367
  %shl = shl i64 1, %sh_prom, !dbg !17367
  br label %cond.end36, !dbg !17367

cond.false:                                       ; preds = %if.end
  %35 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !17367
  %channel26 = getelementptr inbounds %struct.mite_channel, %struct.mite_channel* %35, i32 0, i32 1, !dbg !17367
  %36 = load i32, i32* %channel26, align 8, !dbg !17367
  %cmp27 = icmp eq i32 %36, 4, !dbg !17367
  br i1 %cmp27, label %cond.true29, label %cond.false30, !dbg !17367

cond.true29:                                      ; preds = %cond.false
  br label %cond.end, !dbg !17367

cond.false30:                                     ; preds = %cond.false
  %37 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !17367
  %channel31 = getelementptr inbounds %struct.mite_channel, %struct.mite_channel* %37, i32 0, i32 1, !dbg !17367
  %38 = load i32, i32* %channel31, align 8, !dbg !17367
  %cmp32 = icmp eq i32 %38, 5, !dbg !17367
  %39 = zext i1 %cmp32 to i64, !dbg !17367
  %cond = select i1 %cmp32, i32 5, i32 0, !dbg !17367
  br label %cond.end, !dbg !17367

cond.end:                                         ; preds = %cond.false30, %cond.true29
  %cond34 = phi i32 [ 3, %cond.true29 ], [ %cond, %cond.false30 ], !dbg !17367
  %conv35 = sext i32 %cond34 to i64, !dbg !17367
  br label %cond.end36, !dbg !17367

cond.end36:                                       ; preds = %cond.end, %cond.true
  %cond37 = phi i64 [ %shl, %cond.true ], [ %conv35, %cond.end ], !dbg !17367
  %conv38 = trunc i64 %cond37 to i32, !dbg !17367
  store i32 %conv38, i32* %bits, align 4, !dbg !17368
  %40 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !17369
  %41 = load i32, i32* %gpct_index.addr, align 4, !dbg !17370
  %mul = mul i32 %41, 4, !dbg !17370
  %shl39 = shl i32 15, %mul, !dbg !17370
  %42 = load i32, i32* %bits, align 4, !dbg !17371
  %and = and i32 %42, 15, !dbg !17371
  %43 = load i32, i32* %gpct_index.addr, align 4, !dbg !17371
  %mul40 = mul i32 %43, 4, !dbg !17371
  %shl41 = shl i32 %and, %mul40, !dbg !17371
  call void @ni_set_bitfield(%struct.comedi_device* %40, i32 11, i32 %shl39, i32 %shl41) #9, !dbg !17372
  %44 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !17373
  %mite_channel_lock42 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %44, i32 0, i32 7, !dbg !17374
  %45 = load i64, i64* %flags, align 8, !dbg !17375
  store %struct.spinlock* %mite_channel_lock42, %struct.spinlock** %lock.addr.i43, align 8
  store i64 %45, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !17376
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !17376
  store i32 1, i32* %tmp.i, align 4, !dbg !17376
  %46 = load i32, i32* %tmp.i, align 4, !dbg !17376
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !17377
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !17377
  store i32 1, i32* %tmp8.i, align 4, !dbg !17377
  %47 = load i32, i32* %tmp8.i, align 4, !dbg !17377
  %48 = load i64, i64* %flags.addr.i, align 8, !dbg !17378
  call void @arch_local_irq_restore(i64 %48) #10, !dbg !17378
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !17379, !srcloc !5582
  %49 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i43, align 8, !dbg !17380
  %50 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %49, i32 0, i32 0, !dbg !17380
  %rlock.i44 = bitcast %union.anon.3* %50 to %struct.raw_spinlock*, !dbg !17380
  store i32 0, i32* %retval, align 4, !dbg !17381
  br label %return, !dbg !17381

return:                                           ; preds = %cond.end36, %if.then
  %51 = load i32, i32* %retval, align 4, !dbg !17382
  ret i32 %51, !dbg !17382
}

; Function Attrs: noredzone
declare dso_local void @ni_tio_acknowledge(%struct.ni_gpct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_e_series_enable_second_irq(%struct.comedi_device* %dev, i32 %gpct_index, i16 signext %enable) #2 !dbg !17383 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %gpct_index.addr = alloca i32, align 4
  %enable.addr = alloca i16, align 2
  %devpriv = alloca %struct.ni_private*, align 8
  %val = alloca i32, align 4
  %reg = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !17386, metadata !DIExpression()), !dbg !17387
  store i32 %gpct_index, i32* %gpct_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gpct_index.addr, metadata !17388, metadata !DIExpression()), !dbg !17389
  store i16 %enable, i16* %enable.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %enable.addr, metadata !17390, metadata !DIExpression()), !dbg !17391
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !17392, metadata !DIExpression()), !dbg !17393
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !17394
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !17395
  %1 = load i8*, i8** %private, align 8, !dbg !17395
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !17394
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !17393
  call void @llvm.dbg.declare(metadata i32* %val, metadata !17396, metadata !DIExpression()), !dbg !17397
  store i32 0, i32* %val, align 4, !dbg !17397
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !17398, metadata !DIExpression()), !dbg !17399
  %3 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !17400
  %is_m_series = getelementptr inbounds %struct.ni_private, %struct.ni_private* %3, i32 0, i32 50, !dbg !17402
  %bf.load = load i16, i16* %is_m_series, align 8, !dbg !17402
  %bf.clear = and i16 %bf.load, 1, !dbg !17402
  %bf.cast = zext i16 %bf.clear to i32, !dbg !17402
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !17400
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !17403

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, i32* %gpct_index.addr, align 4, !dbg !17404
  %cmp = icmp ugt i32 %4, 1, !dbg !17405
  br i1 %cmp, label %if.then, label %if.end, !dbg !17406

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !17407

if.end:                                           ; preds = %lor.lhs.false
  %5 = load i32, i32* %gpct_index.addr, align 4, !dbg !17408
  %cmp1 = icmp eq i32 %5, 0, !dbg !17410
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !17411

if.then2:                                         ; preds = %if.end
  store i32 74, i32* %reg, align 4, !dbg !17412
  %6 = load i16, i16* %enable.addr, align 2, !dbg !17414
  %tobool3 = icmp ne i16 %6, 0, !dbg !17414
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !17416

if.then4:                                         ; preds = %if.then2
  store i32 256, i32* %val, align 4, !dbg !17417
  br label %if.end5, !dbg !17418

if.end5:                                          ; preds = %if.then4, %if.then2
  br label %if.end9, !dbg !17419

if.else:                                          ; preds = %if.end
  store i32 76, i32* %reg, align 4, !dbg !17420
  %7 = load i16, i16* %enable.addr, align 2, !dbg !17422
  %tobool6 = icmp ne i16 %7, 0, !dbg !17422
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !17424

if.then7:                                         ; preds = %if.else
  store i32 1024, i32* %val, align 4, !dbg !17425
  br label %if.end8, !dbg !17426

if.end8:                                          ; preds = %if.then7, %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.end5
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !17427
  %9 = load i32, i32* %val, align 4, !dbg !17428
  %10 = load i32, i32* %reg, align 4, !dbg !17429
  call void @ni_stc_writew(%struct.comedi_device* %8, i32 %9, i32 %10) #9, !dbg !17430
  br label %return, !dbg !17431

return:                                           ; preds = %if.end9, %if.then
  ret void, !dbg !17431
}

; Function Attrs: noredzone
declare dso_local i32 @ni_tio_cmd(%struct.comedi_device*, %struct.comedi_subdevice*) #1

; Function Attrs: noredzone
declare dso_local void @ni_tio_set_mite_channel(%struct.ni_gpct*, %struct.mite_channel*) #1

; Function Attrs: noredzone
declare dso_local i32 @ni_tio_cancel(%struct.ni_gpct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ni_release_gpct_mite_channel(%struct.comedi_device* %dev, i32 %gpct_index) #2 !dbg !17432 {
entry:
  %lock.addr.i30 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i30, metadata !5432, metadata !DIExpression()), !dbg !17435
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5440, metadata !DIExpression()), !dbg !17437
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5232, metadata !DIExpression()), !dbg !17438
  %dev.addr = alloca %struct.comedi_device*, align 8
  %gpct_index.addr = alloca i32, align 4
  %devpriv = alloca %struct.ni_private*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %mite_chan19 = alloca %struct.mite_channel*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !17445, metadata !DIExpression()), !dbg !17446
  store i32 %gpct_index, i32* %gpct_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gpct_index.addr, metadata !17447, metadata !DIExpression()), !dbg !17448
  call void @llvm.dbg.declare(metadata %struct.ni_private** %devpriv, metadata !17449, metadata !DIExpression()), !dbg !17450
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !17451
  %private = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 3, !dbg !17452
  %1 = load i8*, i8** %private, align 8, !dbg !17452
  %2 = bitcast i8* %1 to %struct.ni_private*, !dbg !17451
  store %struct.ni_private* %2, %struct.ni_private** %devpriv, align 8, !dbg !17450
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !17453, metadata !DIExpression()), !dbg !17454
  br label %do.body, !dbg !17455

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !17456

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !17457, metadata !DIExpression()), !dbg !17459
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !17460, metadata !DIExpression()), !dbg !17459
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !17459
  %conv = zext i1 %cmp to i32, !dbg !17459
  store i32 1, i32* %tmp, align 4, !dbg !17459
  %3 = load i32, i32* %tmp, align 4, !dbg !17459
  br label %do.body2, !dbg !17461

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !17462

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !17463

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !17465, metadata !DIExpression()), !dbg !17468
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !17469, metadata !DIExpression()), !dbg !17468
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !17468
  %conv8 = zext i1 %cmp7 to i32, !dbg !17468
  store i32 1, i32* %tmp9, align 4, !dbg !17468
  %4 = load i32, i32* %tmp9, align 4, !dbg !17468
  %call = call i64 @arch_local_irq_save() #9, !dbg !17470
  store i64 %call, i64* %flags, align 8, !dbg !17470
  br label %do.end, !dbg !17470

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !17463

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !17462

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !17471, !srcloc !17472
  br label %do.body12, !dbg !17471

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !17473
  %mite_channel_lock = getelementptr inbounds %struct.ni_private, %struct.ni_private* %5, i32 0, i32 7, !dbg !17473
  store %struct.spinlock* %mite_channel_lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17474
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !17475
  %rlock.i = bitcast %union.anon.3* %7 to %struct.raw_spinlock*, !dbg !17475
  br label %do.end14, !dbg !17473

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !17471

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !17462

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !17461

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !17456

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !17476
  %counter_dev = getelementptr inbounds %struct.ni_private, %struct.ni_private* %8, i32 0, i32 19, !dbg !17478
  %9 = load %struct.ni_gpct_device*, %struct.ni_gpct_device** %counter_dev, align 8, !dbg !17478
  %counters = getelementptr inbounds %struct.ni_gpct_device, %struct.ni_gpct_device* %9, i32 0, i32 4, !dbg !17479
  %10 = load %struct.ni_gpct*, %struct.ni_gpct** %counters, align 8, !dbg !17479
  %11 = load i32, i32* %gpct_index.addr, align 4, !dbg !17480
  %idxprom = zext i32 %11 to i64, !dbg !17476
  %arrayidx = getelementptr %struct.ni_gpct, %struct.ni_gpct* %10, i64 %idxprom, !dbg !17476
  %mite_chan = getelementptr inbounds %struct.ni_gpct, %struct.ni_gpct* %arrayidx, i32 0, i32 4, !dbg !17481
  %12 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan, align 8, !dbg !17481
  %tobool = icmp ne %struct.mite_channel* %12, null, !dbg !17476
  br i1 %tobool, label %if.then, label %if.end, !dbg !17482

if.then:                                          ; preds = %do.end18
  call void @llvm.dbg.declare(metadata %struct.mite_channel** %mite_chan19, metadata !17483, metadata !DIExpression()), !dbg !17485
  %13 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !17486
  %counter_dev20 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %13, i32 0, i32 19, !dbg !17487
  %14 = load %struct.ni_gpct_device*, %struct.ni_gpct_device** %counter_dev20, align 8, !dbg !17487
  %counters21 = getelementptr inbounds %struct.ni_gpct_device, %struct.ni_gpct_device* %14, i32 0, i32 4, !dbg !17488
  %15 = load %struct.ni_gpct*, %struct.ni_gpct** %counters21, align 8, !dbg !17488
  %16 = load i32, i32* %gpct_index.addr, align 4, !dbg !17489
  %idxprom22 = zext i32 %16 to i64, !dbg !17486
  %arrayidx23 = getelementptr %struct.ni_gpct, %struct.ni_gpct* %15, i64 %idxprom22, !dbg !17486
  %mite_chan24 = getelementptr inbounds %struct.ni_gpct, %struct.ni_gpct* %arrayidx23, i32 0, i32 4, !dbg !17490
  %17 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan24, align 8, !dbg !17490
  store %struct.mite_channel* %17, %struct.mite_channel** %mite_chan19, align 8, !dbg !17485
  %18 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !17491
  %19 = load i32, i32* %gpct_index.addr, align 4, !dbg !17492
  %mul = mul i32 %19, 4, !dbg !17492
  %shl = shl i32 15, %mul, !dbg !17492
  call void @ni_set_bitfield(%struct.comedi_device* %18, i32 11, i32 %shl, i32 0) #9, !dbg !17493
  %20 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !17494
  %counter_dev25 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %20, i32 0, i32 19, !dbg !17495
  %21 = load %struct.ni_gpct_device*, %struct.ni_gpct_device** %counter_dev25, align 8, !dbg !17495
  %counters26 = getelementptr inbounds %struct.ni_gpct_device, %struct.ni_gpct_device* %21, i32 0, i32 4, !dbg !17496
  %22 = load %struct.ni_gpct*, %struct.ni_gpct** %counters26, align 8, !dbg !17496
  %23 = load i32, i32* %gpct_index.addr, align 4, !dbg !17497
  %idxprom27 = zext i32 %23 to i64, !dbg !17494
  %arrayidx28 = getelementptr %struct.ni_gpct, %struct.ni_gpct* %22, i64 %idxprom27, !dbg !17494
  call void @ni_tio_set_mite_channel(%struct.ni_gpct* %arrayidx28, %struct.mite_channel* null) #9, !dbg !17498
  %24 = load %struct.mite_channel*, %struct.mite_channel** %mite_chan19, align 8, !dbg !17499
  call void @mite_release_channel(%struct.mite_channel* %24) #9, !dbg !17500
  br label %if.end, !dbg !17501

if.end:                                           ; preds = %if.then, %do.end18
  %25 = load %struct.ni_private*, %struct.ni_private** %devpriv, align 8, !dbg !17502
  %mite_channel_lock29 = getelementptr inbounds %struct.ni_private, %struct.ni_private* %25, i32 0, i32 7, !dbg !17503
  %26 = load i64, i64* %flags, align 8, !dbg !17504
  store %struct.spinlock* %mite_channel_lock29, %struct.spinlock** %lock.addr.i30, align 8
  store i64 %26, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !519, metadata !5567, metadata !DIExpression()) #7, !dbg !17505
  call void @llvm.dbg.declare(metadata !519, metadata !5571, metadata !DIExpression()) #7, !dbg !17505
  store i32 1, i32* %tmp.i, align 4, !dbg !17505
  %27 = load i32, i32* %tmp.i, align 4, !dbg !17505
  call void @llvm.dbg.declare(metadata !519, metadata !5572, metadata !DIExpression()) #7, !dbg !17506
  call void @llvm.dbg.declare(metadata !519, metadata !5578, metadata !DIExpression()) #7, !dbg !17506
  store i32 1, i32* %tmp8.i, align 4, !dbg !17506
  %28 = load i32, i32* %tmp8.i, align 4, !dbg !17506
  %29 = load i64, i64* %flags.addr.i, align 8, !dbg !17507
  call void @arch_local_irq_restore(i64 %29) #10, !dbg !17507
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !17508, !srcloc !5582
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i30, align 8, !dbg !17509
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !17509
  %rlock.i31 = bitcast %union.anon.3* %31 to %struct.raw_spinlock*, !dbg !17509
  ret void, !dbg !17510
}

; Function Attrs: noredzone
declare dso_local i32 @mite_buf_change(%struct.mite_ring*, %struct.comedi_subdevice*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ni_pcimio_pci_probe(%struct.pci_dev* %dev, %struct.pci_device_id* %id) #2 !dbg !17511 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %id.addr = alloca %struct.pci_device_id*, align 8
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !17512, metadata !DIExpression()), !dbg !17513
  store %struct.pci_device_id* %id, %struct.pci_device_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_device_id** %id.addr, metadata !17514, metadata !DIExpression()), !dbg !17515
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !17516
  %1 = load %struct.pci_device_id*, %struct.pci_device_id** %id.addr, align 8, !dbg !17517
  %driver_data = getelementptr inbounds %struct.pci_device_id, %struct.pci_device_id* %1, i32 0, i32 6, !dbg !17518
  %2 = load i64, i64* %driver_data, align 8, !dbg !17518
  %call = call i32 @comedi_pci_auto_config(%struct.pci_dev* %0, %struct.comedi_driver* @ni_pcimio_driver, i64 %2) #9, !dbg !17519
  ret i32 %call, !dbg !17520
}

; Function Attrs: noredzone
declare dso_local void @comedi_pci_auto_unconfig(%struct.pci_dev*) #1

; Function Attrs: noredzone
declare dso_local i32 @comedi_pci_auto_config(%struct.pci_dev*, %struct.comedi_driver*, i64) #1

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone willreturn }
attributes #9 = { noredzone }
attributes #10 = { noredzone nounwind }
attributes #11 = { cold noredzone }
attributes #12 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4715}
!llvm.module.flags = !{!4716, !4717, !4718, !4719}
!llvm.ident = !{!4720}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_ni_pcimio_driver_init235", scope: !2, file: !3, line: 1473, type: !463, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !428, globals: !3312, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/staging/comedi/drivers/ni_pcimio.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !72, !79, !87, !93, !100, !174, !179, !190, !195, !208, !226, !232, !243, !249, !265, !270, !282, !340, !366, !407, !413, !420, !424}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !94, line: 5, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98, !99}
!96 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!100 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ni_gpct_register", file: !101, line: 13, baseType: !7, size: 32, elements: !102)
!101 = !DIFile(filename: "drivers/staging/comedi/drivers/ni_tio.h", directory: "/home/lizy2001/genbc/linux")
!102 = !{!103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173}
!103 = !DIEnumerator(name: "NITIO_G0_AUTO_INC", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "NITIO_G1_AUTO_INC", value: 1, isUnsigned: true)
!105 = !DIEnumerator(name: "NITIO_G2_AUTO_INC", value: 2, isUnsigned: true)
!106 = !DIEnumerator(name: "NITIO_G3_AUTO_INC", value: 3, isUnsigned: true)
!107 = !DIEnumerator(name: "NITIO_G0_CMD", value: 4, isUnsigned: true)
!108 = !DIEnumerator(name: "NITIO_G1_CMD", value: 5, isUnsigned: true)
!109 = !DIEnumerator(name: "NITIO_G2_CMD", value: 6, isUnsigned: true)
!110 = !DIEnumerator(name: "NITIO_G3_CMD", value: 7, isUnsigned: true)
!111 = !DIEnumerator(name: "NITIO_G0_HW_SAVE", value: 8, isUnsigned: true)
!112 = !DIEnumerator(name: "NITIO_G1_HW_SAVE", value: 9, isUnsigned: true)
!113 = !DIEnumerator(name: "NITIO_G2_HW_SAVE", value: 10, isUnsigned: true)
!114 = !DIEnumerator(name: "NITIO_G3_HW_SAVE", value: 11, isUnsigned: true)
!115 = !DIEnumerator(name: "NITIO_G0_SW_SAVE", value: 12, isUnsigned: true)
!116 = !DIEnumerator(name: "NITIO_G1_SW_SAVE", value: 13, isUnsigned: true)
!117 = !DIEnumerator(name: "NITIO_G2_SW_SAVE", value: 14, isUnsigned: true)
!118 = !DIEnumerator(name: "NITIO_G3_SW_SAVE", value: 15, isUnsigned: true)
!119 = !DIEnumerator(name: "NITIO_G0_MODE", value: 16, isUnsigned: true)
!120 = !DIEnumerator(name: "NITIO_G1_MODE", value: 17, isUnsigned: true)
!121 = !DIEnumerator(name: "NITIO_G2_MODE", value: 18, isUnsigned: true)
!122 = !DIEnumerator(name: "NITIO_G3_MODE", value: 19, isUnsigned: true)
!123 = !DIEnumerator(name: "NITIO_G0_LOADA", value: 20, isUnsigned: true)
!124 = !DIEnumerator(name: "NITIO_G1_LOADA", value: 21, isUnsigned: true)
!125 = !DIEnumerator(name: "NITIO_G2_LOADA", value: 22, isUnsigned: true)
!126 = !DIEnumerator(name: "NITIO_G3_LOADA", value: 23, isUnsigned: true)
!127 = !DIEnumerator(name: "NITIO_G0_LOADB", value: 24, isUnsigned: true)
!128 = !DIEnumerator(name: "NITIO_G1_LOADB", value: 25, isUnsigned: true)
!129 = !DIEnumerator(name: "NITIO_G2_LOADB", value: 26, isUnsigned: true)
!130 = !DIEnumerator(name: "NITIO_G3_LOADB", value: 27, isUnsigned: true)
!131 = !DIEnumerator(name: "NITIO_G0_INPUT_SEL", value: 28, isUnsigned: true)
!132 = !DIEnumerator(name: "NITIO_G1_INPUT_SEL", value: 29, isUnsigned: true)
!133 = !DIEnumerator(name: "NITIO_G2_INPUT_SEL", value: 30, isUnsigned: true)
!134 = !DIEnumerator(name: "NITIO_G3_INPUT_SEL", value: 31, isUnsigned: true)
!135 = !DIEnumerator(name: "NITIO_G0_CNT_MODE", value: 32, isUnsigned: true)
!136 = !DIEnumerator(name: "NITIO_G1_CNT_MODE", value: 33, isUnsigned: true)
!137 = !DIEnumerator(name: "NITIO_G2_CNT_MODE", value: 34, isUnsigned: true)
!138 = !DIEnumerator(name: "NITIO_G3_CNT_MODE", value: 35, isUnsigned: true)
!139 = !DIEnumerator(name: "NITIO_G0_GATE2", value: 36, isUnsigned: true)
!140 = !DIEnumerator(name: "NITIO_G1_GATE2", value: 37, isUnsigned: true)
!141 = !DIEnumerator(name: "NITIO_G2_GATE2", value: 38, isUnsigned: true)
!142 = !DIEnumerator(name: "NITIO_G3_GATE2", value: 39, isUnsigned: true)
!143 = !DIEnumerator(name: "NITIO_G01_STATUS", value: 40, isUnsigned: true)
!144 = !DIEnumerator(name: "NITIO_G23_STATUS", value: 41, isUnsigned: true)
!145 = !DIEnumerator(name: "NITIO_G01_RESET", value: 42, isUnsigned: true)
!146 = !DIEnumerator(name: "NITIO_G23_RESET", value: 43, isUnsigned: true)
!147 = !DIEnumerator(name: "NITIO_G01_STATUS1", value: 44, isUnsigned: true)
!148 = !DIEnumerator(name: "NITIO_G23_STATUS1", value: 45, isUnsigned: true)
!149 = !DIEnumerator(name: "NITIO_G01_STATUS2", value: 46, isUnsigned: true)
!150 = !DIEnumerator(name: "NITIO_G23_STATUS2", value: 47, isUnsigned: true)
!151 = !DIEnumerator(name: "NITIO_G0_DMA_CFG", value: 48, isUnsigned: true)
!152 = !DIEnumerator(name: "NITIO_G1_DMA_CFG", value: 49, isUnsigned: true)
!153 = !DIEnumerator(name: "NITIO_G2_DMA_CFG", value: 50, isUnsigned: true)
!154 = !DIEnumerator(name: "NITIO_G3_DMA_CFG", value: 51, isUnsigned: true)
!155 = !DIEnumerator(name: "NITIO_G0_DMA_STATUS", value: 52, isUnsigned: true)
!156 = !DIEnumerator(name: "NITIO_G1_DMA_STATUS", value: 53, isUnsigned: true)
!157 = !DIEnumerator(name: "NITIO_G2_DMA_STATUS", value: 54, isUnsigned: true)
!158 = !DIEnumerator(name: "NITIO_G3_DMA_STATUS", value: 55, isUnsigned: true)
!159 = !DIEnumerator(name: "NITIO_G0_ABZ", value: 56, isUnsigned: true)
!160 = !DIEnumerator(name: "NITIO_G1_ABZ", value: 57, isUnsigned: true)
!161 = !DIEnumerator(name: "NITIO_G0_INT_ACK", value: 58, isUnsigned: true)
!162 = !DIEnumerator(name: "NITIO_G1_INT_ACK", value: 59, isUnsigned: true)
!163 = !DIEnumerator(name: "NITIO_G2_INT_ACK", value: 60, isUnsigned: true)
!164 = !DIEnumerator(name: "NITIO_G3_INT_ACK", value: 61, isUnsigned: true)
!165 = !DIEnumerator(name: "NITIO_G0_STATUS", value: 62, isUnsigned: true)
!166 = !DIEnumerator(name: "NITIO_G1_STATUS", value: 63, isUnsigned: true)
!167 = !DIEnumerator(name: "NITIO_G2_STATUS", value: 64, isUnsigned: true)
!168 = !DIEnumerator(name: "NITIO_G3_STATUS", value: 65, isUnsigned: true)
!169 = !DIEnumerator(name: "NITIO_G0_INT_ENA", value: 66, isUnsigned: true)
!170 = !DIEnumerator(name: "NITIO_G1_INT_ENA", value: 67, isUnsigned: true)
!171 = !DIEnumerator(name: "NITIO_G2_INT_ENA", value: 68, isUnsigned: true)
!172 = !DIEnumerator(name: "NITIO_G3_INT_ENA", value: 69, isUnsigned: true)
!173 = !DIEnumerator(name: "NITIO_NUM_REGS", value: 70, isUnsigned: true)
!174 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ni_gpct_variant", file: !101, line: 87, baseType: !7, size: 32, elements: !175)
!175 = !{!176, !177, !178}
!176 = !DIEnumerator(name: "ni_gpct_variant_e_series", value: 0, isUnsigned: true)
!177 = !DIEnumerator(name: "ni_gpct_variant_m_series", value: 1, isUnsigned: true)
!178 = !DIEnumerator(name: "ni_gpct_variant_660x", value: 2, isUnsigned: true)
!179 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "caldac_enum", file: !180, line: 917, baseType: !7, size: 32, elements: !181)
!180 = !DIFile(filename: "drivers/staging/comedi/drivers/ni_stc.h", directory: "/home/lizy2001/genbc/linux")
!181 = !{!182, !183, !184, !185, !186, !187, !188, !189}
!182 = !DIEnumerator(name: "caldac_none", value: 0, isUnsigned: true)
!183 = !DIEnumerator(name: "mb88341", value: 1, isUnsigned: true)
!184 = !DIEnumerator(name: "dac8800", value: 2, isUnsigned: true)
!185 = !DIEnumerator(name: "dac8043", value: 3, isUnsigned: true)
!186 = !DIEnumerator(name: "ad8522", value: 4, isUnsigned: true)
!187 = !DIEnumerator(name: "ad8804", value: 5, isUnsigned: true)
!188 = !DIEnumerator(name: "ad8842", value: 6, isUnsigned: true)
!189 = !DIEnumerator(name: "ad8804_debug", value: 7, isUnsigned: true)
!190 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !191, line: 10, baseType: !7, size: 32, elements: !192)
!191 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!192 = !{!193, !194}
!193 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!194 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!195 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ni_reg_type", file: !180, line: 928, baseType: !7, size: 32, elements: !196)
!196 = !{!197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207}
!197 = !DIEnumerator(name: "ni_reg_normal", value: 0, isUnsigned: true)
!198 = !DIEnumerator(name: "ni_reg_611x", value: 1, isUnsigned: true)
!199 = !DIEnumerator(name: "ni_reg_6711", value: 2, isUnsigned: true)
!200 = !DIEnumerator(name: "ni_reg_6713", value: 4, isUnsigned: true)
!201 = !DIEnumerator(name: "ni_reg_67xx_mask", value: 6, isUnsigned: true)
!202 = !DIEnumerator(name: "ni_reg_6xxx_mask", value: 7, isUnsigned: true)
!203 = !DIEnumerator(name: "ni_reg_622x", value: 8, isUnsigned: true)
!204 = !DIEnumerator(name: "ni_reg_625x", value: 16, isUnsigned: true)
!205 = !DIEnumerator(name: "ni_reg_628x", value: 24, isUnsigned: true)
!206 = !DIEnumerator(name: "ni_reg_m_series_mask", value: 24, isUnsigned: true)
!207 = !DIEnumerator(name: "ni_reg_6143", value: 32, isUnsigned: true)
!208 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ni_common_subdevices", file: !209, line: 190, baseType: !7, size: 32, elements: !210)
!209 = !DIFile(filename: "drivers/staging/comedi/drivers/ni_mio_common.c", directory: "/home/lizy2001/genbc/linux")
!210 = !{!211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225}
!211 = !DIEnumerator(name: "NI_AI_SUBDEV", value: 0, isUnsigned: true)
!212 = !DIEnumerator(name: "NI_AO_SUBDEV", value: 1, isUnsigned: true)
!213 = !DIEnumerator(name: "NI_DIO_SUBDEV", value: 2, isUnsigned: true)
!214 = !DIEnumerator(name: "NI_8255_DIO_SUBDEV", value: 3, isUnsigned: true)
!215 = !DIEnumerator(name: "NI_UNUSED_SUBDEV", value: 4, isUnsigned: true)
!216 = !DIEnumerator(name: "NI_CALIBRATION_SUBDEV", value: 5, isUnsigned: true)
!217 = !DIEnumerator(name: "NI_EEPROM_SUBDEV", value: 6, isUnsigned: true)
!218 = !DIEnumerator(name: "NI_PFI_DIO_SUBDEV", value: 7, isUnsigned: true)
!219 = !DIEnumerator(name: "NI_CS5529_CALIBRATION_SUBDEV", value: 8, isUnsigned: true)
!220 = !DIEnumerator(name: "NI_SERIAL_SUBDEV", value: 9, isUnsigned: true)
!221 = !DIEnumerator(name: "NI_RTSI_SUBDEV", value: 10, isUnsigned: true)
!222 = !DIEnumerator(name: "NI_GPCT0_SUBDEV", value: 11, isUnsigned: true)
!223 = !DIEnumerator(name: "NI_GPCT1_SUBDEV", value: 12, isUnsigned: true)
!224 = !DIEnumerator(name: "NI_FREQ_OUT_SUBDEV", value: 13, isUnsigned: true)
!225 = !DIEnumerator(name: "NI_NUM_SUBDEVICES", value: 14, isUnsigned: true)
!226 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !227, line: 11, baseType: !7, size: 32, elements: !228)
!227 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!228 = !{!229, !230, !231}
!229 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!230 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!231 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!232 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "comedi_cb", file: !233, line: 383, baseType: !7, size: 32, elements: !234)
!233 = !DIFile(filename: "drivers/staging/comedi/drivers/../comedidev.h", directory: "/home/lizy2001/genbc/linux")
!234 = !{!235, !236, !237, !238, !239, !240, !241, !242}
!235 = !DIEnumerator(name: "COMEDI_CB_EOS", value: 1, isUnsigned: true)
!236 = !DIEnumerator(name: "COMEDI_CB_EOA", value: 2, isUnsigned: true)
!237 = !DIEnumerator(name: "COMEDI_CB_BLOCK", value: 4, isUnsigned: true)
!238 = !DIEnumerator(name: "COMEDI_CB_EOBUF", value: 8, isUnsigned: true)
!239 = !DIEnumerator(name: "COMEDI_CB_ERROR", value: 16, isUnsigned: true)
!240 = !DIEnumerator(name: "COMEDI_CB_OVERFLOW", value: 32, isUnsigned: true)
!241 = !DIEnumerator(name: "COMEDI_CB_ERROR_MASK", value: 48, isUnsigned: true)
!242 = !DIEnumerator(name: "COMEDI_CB_CANCEL_MASK", value: 50, isUnsigned: true)
!243 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "aimodes", file: !209, line: 183, baseType: !7, size: 32, elements: !244)
!244 = !{!245, !246, !247, !248}
!245 = !DIEnumerator(name: "AIMODE_NONE", value: 0, isUnsigned: true)
!246 = !DIEnumerator(name: "AIMODE_HALF_FULL", value: 1, isUnsigned: true)
!247 = !DIEnumerator(name: "AIMODE_SCAN", value: 2, isUnsigned: true)
!248 = !DIEnumerator(name: "AIMODE_SAMPLE", value: 3, isUnsigned: true)
!249 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "comedi_subdevice_type", file: !250, line: 221, baseType: !7, size: 32, elements: !251)
!250 = !DIFile(filename: "drivers/staging/comedi/drivers/../comedi.h", directory: "/home/lizy2001/genbc/linux")
!251 = !{!252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264}
!252 = !DIEnumerator(name: "COMEDI_SUBD_UNUSED", value: 0, isUnsigned: true)
!253 = !DIEnumerator(name: "COMEDI_SUBD_AI", value: 1, isUnsigned: true)
!254 = !DIEnumerator(name: "COMEDI_SUBD_AO", value: 2, isUnsigned: true)
!255 = !DIEnumerator(name: "COMEDI_SUBD_DI", value: 3, isUnsigned: true)
!256 = !DIEnumerator(name: "COMEDI_SUBD_DO", value: 4, isUnsigned: true)
!257 = !DIEnumerator(name: "COMEDI_SUBD_DIO", value: 5, isUnsigned: true)
!258 = !DIEnumerator(name: "COMEDI_SUBD_COUNTER", value: 6, isUnsigned: true)
!259 = !DIEnumerator(name: "COMEDI_SUBD_TIMER", value: 7, isUnsigned: true)
!260 = !DIEnumerator(name: "COMEDI_SUBD_MEMORY", value: 8, isUnsigned: true)
!261 = !DIEnumerator(name: "COMEDI_SUBD_CALIB", value: 9, isUnsigned: true)
!262 = !DIEnumerator(name: "COMEDI_SUBD_PROC", value: 10, isUnsigned: true)
!263 = !DIEnumerator(name: "COMEDI_SUBD_SERIAL", value: 11, isUnsigned: true)
!264 = !DIEnumerator(name: "COMEDI_SUBD_PWM", value: 12, isUnsigned: true)
!265 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "comedi_io_direction", file: !250, line: 249, baseType: !7, size: 32, elements: !266)
!266 = !{!267, !268, !269}
!267 = !DIEnumerator(name: "COMEDI_INPUT", value: 0, isUnsigned: true)
!268 = !DIEnumerator(name: "COMEDI_OUTPUT", value: 1, isUnsigned: true)
!269 = !DIEnumerator(name: "COMEDI_OPENDRAIN", value: 2, isUnsigned: true)
!270 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ni_rtsi_routing", file: !250, line: 1330, baseType: !7, size: 32, elements: !271)
!271 = !{!272, !273, !274, !275, !276, !277, !278, !279, !280, !281}
!272 = !DIEnumerator(name: "NI_RTSI_OUTPUT_ADR_START1", value: 0, isUnsigned: true)
!273 = !DIEnumerator(name: "NI_RTSI_OUTPUT_ADR_START2", value: 1, isUnsigned: true)
!274 = !DIEnumerator(name: "NI_RTSI_OUTPUT_SCLKG", value: 2, isUnsigned: true)
!275 = !DIEnumerator(name: "NI_RTSI_OUTPUT_DACUPDN", value: 3, isUnsigned: true)
!276 = !DIEnumerator(name: "NI_RTSI_OUTPUT_DA_START1", value: 4, isUnsigned: true)
!277 = !DIEnumerator(name: "NI_RTSI_OUTPUT_G_SRC0", value: 5, isUnsigned: true)
!278 = !DIEnumerator(name: "NI_RTSI_OUTPUT_G_GATE0", value: 6, isUnsigned: true)
!279 = !DIEnumerator(name: "NI_RTSI_OUTPUT_RGOUT0", value: 7, isUnsigned: true)
!280 = !DIEnumerator(name: "NI_RTSI_OUTPUT_RTSI_BRD_0", value: 8, isUnsigned: true)
!281 = !DIEnumerator(name: "NI_RTSI_OUTPUT_RTSI_OSC", value: 12, isUnsigned: true)
!282 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ni_common_signal_names", file: !250, line: 1041, baseType: !7, size: 32, elements: !283)
!283 = !{!284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339}
!284 = !DIEnumerator(name: "PXI_Star", value: 32924, isUnsigned: true)
!285 = !DIEnumerator(name: "PXI_Clk10", value: 32925, isUnsigned: true)
!286 = !DIEnumerator(name: "PXIe_Clk100", value: 32926, isUnsigned: true)
!287 = !DIEnumerator(name: "NI_AI_SampleClock", value: 32927, isUnsigned: true)
!288 = !DIEnumerator(name: "NI_AI_SampleClockTimebase", value: 32928, isUnsigned: true)
!289 = !DIEnumerator(name: "NI_AI_StartTrigger", value: 32929, isUnsigned: true)
!290 = !DIEnumerator(name: "NI_AI_ReferenceTrigger", value: 32930, isUnsigned: true)
!291 = !DIEnumerator(name: "NI_AI_ConvertClock", value: 32931, isUnsigned: true)
!292 = !DIEnumerator(name: "NI_AI_ConvertClockTimebase", value: 32932, isUnsigned: true)
!293 = !DIEnumerator(name: "NI_AI_PauseTrigger", value: 32933, isUnsigned: true)
!294 = !DIEnumerator(name: "NI_AI_HoldCompleteEvent", value: 32934, isUnsigned: true)
!295 = !DIEnumerator(name: "NI_AI_HoldComplete", value: 32935, isUnsigned: true)
!296 = !DIEnumerator(name: "NI_AI_ExternalMUXClock", value: 32936, isUnsigned: true)
!297 = !DIEnumerator(name: "NI_AI_STOP", value: 32937, isUnsigned: true)
!298 = !DIEnumerator(name: "NI_AO_SampleClock", value: 32938, isUnsigned: true)
!299 = !DIEnumerator(name: "NI_AO_SampleClockTimebase", value: 32939, isUnsigned: true)
!300 = !DIEnumerator(name: "NI_AO_StartTrigger", value: 32940, isUnsigned: true)
!301 = !DIEnumerator(name: "NI_AO_PauseTrigger", value: 32941, isUnsigned: true)
!302 = !DIEnumerator(name: "NI_DI_SampleClock", value: 32942, isUnsigned: true)
!303 = !DIEnumerator(name: "NI_DI_SampleClockTimebase", value: 32943, isUnsigned: true)
!304 = !DIEnumerator(name: "NI_DI_StartTrigger", value: 32944, isUnsigned: true)
!305 = !DIEnumerator(name: "NI_DI_ReferenceTrigger", value: 32945, isUnsigned: true)
!306 = !DIEnumerator(name: "NI_DI_PauseTrigger", value: 32946, isUnsigned: true)
!307 = !DIEnumerator(name: "NI_DI_InputBufferFull", value: 32947, isUnsigned: true)
!308 = !DIEnumerator(name: "NI_DI_ReadyForStartEvent", value: 32948, isUnsigned: true)
!309 = !DIEnumerator(name: "NI_DI_ReadyForTransferEventBurst", value: 32949, isUnsigned: true)
!310 = !DIEnumerator(name: "NI_DI_ReadyForTransferEventPipelined", value: 32950, isUnsigned: true)
!311 = !DIEnumerator(name: "NI_DO_SampleClock", value: 32951, isUnsigned: true)
!312 = !DIEnumerator(name: "NI_DO_SampleClockTimebase", value: 32952, isUnsigned: true)
!313 = !DIEnumerator(name: "NI_DO_StartTrigger", value: 32953, isUnsigned: true)
!314 = !DIEnumerator(name: "NI_DO_PauseTrigger", value: 32954, isUnsigned: true)
!315 = !DIEnumerator(name: "NI_DO_OutputBufferFull", value: 32955, isUnsigned: true)
!316 = !DIEnumerator(name: "NI_DO_DataActiveEvent", value: 32956, isUnsigned: true)
!317 = !DIEnumerator(name: "NI_DO_ReadyForStartEvent", value: 32957, isUnsigned: true)
!318 = !DIEnumerator(name: "NI_DO_ReadyForTransferEvent", value: 32958, isUnsigned: true)
!319 = !DIEnumerator(name: "NI_MasterTimebase", value: 32959, isUnsigned: true)
!320 = !DIEnumerator(name: "NI_20MHzTimebase", value: 32960, isUnsigned: true)
!321 = !DIEnumerator(name: "NI_80MHzTimebase", value: 32961, isUnsigned: true)
!322 = !DIEnumerator(name: "NI_100MHzTimebase", value: 32962, isUnsigned: true)
!323 = !DIEnumerator(name: "NI_200MHzTimebase", value: 32963, isUnsigned: true)
!324 = !DIEnumerator(name: "NI_100kHzTimebase", value: 32964, isUnsigned: true)
!325 = !DIEnumerator(name: "NI_10MHzRefClock", value: 32965, isUnsigned: true)
!326 = !DIEnumerator(name: "NI_FrequencyOutput", value: 32966, isUnsigned: true)
!327 = !DIEnumerator(name: "NI_ChangeDetectionEvent", value: 32967, isUnsigned: true)
!328 = !DIEnumerator(name: "NI_AnalogComparisonEvent", value: 32968, isUnsigned: true)
!329 = !DIEnumerator(name: "NI_WatchdogExpiredEvent", value: 32969, isUnsigned: true)
!330 = !DIEnumerator(name: "NI_WatchdogExpirationTrigger", value: 32970, isUnsigned: true)
!331 = !DIEnumerator(name: "NI_SCXI_Trig1", value: 32971, isUnsigned: true)
!332 = !DIEnumerator(name: "NI_LogicLow", value: 32972, isUnsigned: true)
!333 = !DIEnumerator(name: "NI_LogicHigh", value: 32973, isUnsigned: true)
!334 = !DIEnumerator(name: "NI_ExternalStrobe", value: 32974, isUnsigned: true)
!335 = !DIEnumerator(name: "NI_PFI_DO", value: 32975, isUnsigned: true)
!336 = !DIEnumerator(name: "NI_CaseGround", value: 32976, isUnsigned: true)
!337 = !DIEnumerator(name: "NI_RGOUT0", value: 32977, isUnsigned: true)
!338 = !DIEnumerator(name: "_NI_NAMES_MAX_PLUS_1", value: 32978, isUnsigned: true)
!339 = !DIEnumerator(name: "NI_NUM_NAMES", value: 210, isUnsigned: true)
!340 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ni_pfi_routing", file: !250, line: 1353, baseType: !7, size: 32, elements: !341)
!341 = !{!342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365}
!342 = !DIEnumerator(name: "NI_PFI_OUTPUT_PFI_DEFAULT", value: 0, isUnsigned: true)
!343 = !DIEnumerator(name: "NI_PFI_OUTPUT_AI_START1", value: 1, isUnsigned: true)
!344 = !DIEnumerator(name: "NI_PFI_OUTPUT_AI_START2", value: 2, isUnsigned: true)
!345 = !DIEnumerator(name: "NI_PFI_OUTPUT_AI_CONVERT", value: 3, isUnsigned: true)
!346 = !DIEnumerator(name: "NI_PFI_OUTPUT_G_SRC1", value: 4, isUnsigned: true)
!347 = !DIEnumerator(name: "NI_PFI_OUTPUT_G_GATE1", value: 5, isUnsigned: true)
!348 = !DIEnumerator(name: "NI_PFI_OUTPUT_AO_UPDATE_N", value: 6, isUnsigned: true)
!349 = !DIEnumerator(name: "NI_PFI_OUTPUT_AO_START1", value: 7, isUnsigned: true)
!350 = !DIEnumerator(name: "NI_PFI_OUTPUT_AI_START_PULSE", value: 8, isUnsigned: true)
!351 = !DIEnumerator(name: "NI_PFI_OUTPUT_G_SRC0", value: 9, isUnsigned: true)
!352 = !DIEnumerator(name: "NI_PFI_OUTPUT_G_GATE0", value: 10, isUnsigned: true)
!353 = !DIEnumerator(name: "NI_PFI_OUTPUT_EXT_STROBE", value: 11, isUnsigned: true)
!354 = !DIEnumerator(name: "NI_PFI_OUTPUT_AI_EXT_MUX_CLK", value: 12, isUnsigned: true)
!355 = !DIEnumerator(name: "NI_PFI_OUTPUT_GOUT0", value: 13, isUnsigned: true)
!356 = !DIEnumerator(name: "NI_PFI_OUTPUT_GOUT1", value: 14, isUnsigned: true)
!357 = !DIEnumerator(name: "NI_PFI_OUTPUT_FREQ_OUT", value: 15, isUnsigned: true)
!358 = !DIEnumerator(name: "NI_PFI_OUTPUT_PFI_DO", value: 16, isUnsigned: true)
!359 = !DIEnumerator(name: "NI_PFI_OUTPUT_I_ATRIG", value: 17, isUnsigned: true)
!360 = !DIEnumerator(name: "NI_PFI_OUTPUT_RTSI0", value: 18, isUnsigned: true)
!361 = !DIEnumerator(name: "NI_PFI_OUTPUT_PXI_STAR_TRIGGER_IN", value: 26, isUnsigned: true)
!362 = !DIEnumerator(name: "NI_PFI_OUTPUT_SCXI_TRIG1", value: 27, isUnsigned: true)
!363 = !DIEnumerator(name: "NI_PFI_OUTPUT_DIO_CHANGE_DETECT_RTSI", value: 28, isUnsigned: true)
!364 = !DIEnumerator(name: "NI_PFI_OUTPUT_CDI_SAMPLE", value: 29, isUnsigned: true)
!365 = !DIEnumerator(name: "NI_PFI_OUTPUT_CDO_UPDATE", value: 30, isUnsigned: true)
!366 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "configuration_ids", file: !250, line: 308, baseType: !7, size: 32, elements: !367)
!367 = !{!368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406}
!368 = !DIEnumerator(name: "INSN_CONFIG_DIO_INPUT", value: 0, isUnsigned: true)
!369 = !DIEnumerator(name: "INSN_CONFIG_DIO_OUTPUT", value: 1, isUnsigned: true)
!370 = !DIEnumerator(name: "INSN_CONFIG_DIO_OPENDRAIN", value: 2, isUnsigned: true)
!371 = !DIEnumerator(name: "INSN_CONFIG_ANALOG_TRIG", value: 16, isUnsigned: true)
!372 = !DIEnumerator(name: "INSN_CONFIG_ALT_SOURCE", value: 20, isUnsigned: true)
!373 = !DIEnumerator(name: "INSN_CONFIG_DIGITAL_TRIG", value: 21, isUnsigned: true)
!374 = !DIEnumerator(name: "INSN_CONFIG_BLOCK_SIZE", value: 22, isUnsigned: true)
!375 = !DIEnumerator(name: "INSN_CONFIG_TIMER_1", value: 23, isUnsigned: true)
!376 = !DIEnumerator(name: "INSN_CONFIG_FILTER", value: 24, isUnsigned: true)
!377 = !DIEnumerator(name: "INSN_CONFIG_CHANGE_NOTIFY", value: 25, isUnsigned: true)
!378 = !DIEnumerator(name: "INSN_CONFIG_SERIAL_CLOCK", value: 26, isUnsigned: true)
!379 = !DIEnumerator(name: "INSN_CONFIG_BIDIRECTIONAL_DATA", value: 27, isUnsigned: true)
!380 = !DIEnumerator(name: "INSN_CONFIG_DIO_QUERY", value: 28, isUnsigned: true)
!381 = !DIEnumerator(name: "INSN_CONFIG_PWM_OUTPUT", value: 29, isUnsigned: true)
!382 = !DIEnumerator(name: "INSN_CONFIG_GET_PWM_OUTPUT", value: 30, isUnsigned: true)
!383 = !DIEnumerator(name: "INSN_CONFIG_ARM", value: 31, isUnsigned: true)
!384 = !DIEnumerator(name: "INSN_CONFIG_DISARM", value: 32, isUnsigned: true)
!385 = !DIEnumerator(name: "INSN_CONFIG_GET_COUNTER_STATUS", value: 33, isUnsigned: true)
!386 = !DIEnumerator(name: "INSN_CONFIG_RESET", value: 34, isUnsigned: true)
!387 = !DIEnumerator(name: "INSN_CONFIG_GPCT_SINGLE_PULSE_GENERATOR", value: 1001, isUnsigned: true)
!388 = !DIEnumerator(name: "INSN_CONFIG_GPCT_PULSE_TRAIN_GENERATOR", value: 1002, isUnsigned: true)
!389 = !DIEnumerator(name: "INSN_CONFIG_GPCT_QUADRATURE_ENCODER", value: 1003, isUnsigned: true)
!390 = !DIEnumerator(name: "INSN_CONFIG_SET_GATE_SRC", value: 2001, isUnsigned: true)
!391 = !DIEnumerator(name: "INSN_CONFIG_GET_GATE_SRC", value: 2002, isUnsigned: true)
!392 = !DIEnumerator(name: "INSN_CONFIG_SET_CLOCK_SRC", value: 2003, isUnsigned: true)
!393 = !DIEnumerator(name: "INSN_CONFIG_GET_CLOCK_SRC", value: 2004, isUnsigned: true)
!394 = !DIEnumerator(name: "INSN_CONFIG_SET_OTHER_SRC", value: 2005, isUnsigned: true)
!395 = !DIEnumerator(name: "INSN_CONFIG_GET_HARDWARE_BUFFER_SIZE", value: 2006, isUnsigned: true)
!396 = !DIEnumerator(name: "INSN_CONFIG_SET_COUNTER_MODE", value: 4097, isUnsigned: true)
!397 = !DIEnumerator(name: "INSN_CONFIG_8254_SET_MODE", value: 4097, isUnsigned: true)
!398 = !DIEnumerator(name: "INSN_CONFIG_8254_READ_STATUS", value: 4098, isUnsigned: true)
!399 = !DIEnumerator(name: "INSN_CONFIG_SET_ROUTING", value: 4099, isUnsigned: true)
!400 = !DIEnumerator(name: "INSN_CONFIG_GET_ROUTING", value: 4109, isUnsigned: true)
!401 = !DIEnumerator(name: "INSN_CONFIG_PWM_SET_PERIOD", value: 5000, isUnsigned: true)
!402 = !DIEnumerator(name: "INSN_CONFIG_PWM_GET_PERIOD", value: 5001, isUnsigned: true)
!403 = !DIEnumerator(name: "INSN_CONFIG_GET_PWM_STATUS", value: 5002, isUnsigned: true)
!404 = !DIEnumerator(name: "INSN_CONFIG_PWM_SET_H_BRIDGE", value: 5003, isUnsigned: true)
!405 = !DIEnumerator(name: "INSN_CONFIG_PWM_GET_H_BRIDGE", value: 5004, isUnsigned: true)
!406 = !DIEnumerator(name: "INSN_CONFIG_GET_CMD_TIMING_CONSTRAINTS", value: 5005, isUnsigned: true)
!407 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ni_pfi_filter_select", file: !250, line: 1303, baseType: !7, size: 32, elements: !408)
!408 = !{!409, !410, !411, !412}
!409 = !DIEnumerator(name: "NI_PFI_FILTER_OFF", value: 0, isUnsigned: true)
!410 = !DIEnumerator(name: "NI_PFI_FILTER_125ns", value: 1, isUnsigned: true)
!411 = !DIEnumerator(name: "NI_PFI_FILTER_6425ns", value: 2, isUnsigned: true)
!412 = !DIEnumerator(name: "NI_PFI_FILTER_2550us", value: 3, isUnsigned: true)
!413 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ni_mio_clock_source", file: !250, line: 1311, baseType: !7, size: 32, elements: !414)
!414 = !{!415, !416, !417, !418, !419}
!415 = !DIEnumerator(name: "NI_MIO_INTERNAL_CLOCK", value: 0, isUnsigned: true)
!416 = !DIEnumerator(name: "NI_MIO_RTSI_CLOCK", value: 1, isUnsigned: true)
!417 = !DIEnumerator(name: "NI_MIO_PLL_PXI_STAR_TRIGGER_CLOCK", value: 2, isUnsigned: true)
!418 = !DIEnumerator(name: "NI_MIO_PLL_PXI10_CLOCK", value: 3, isUnsigned: true)
!419 = !DIEnumerator(name: "NI_MIO_PLL_RTSI0_CLOCK", value: 4, isUnsigned: true)
!420 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timebase_nanoseconds", file: !209, line: 210, baseType: !7, size: 32, elements: !421)
!421 = !{!422, !423}
!422 = !DIEnumerator(name: "TIMEBASE_1_NS", value: 50, isUnsigned: true)
!423 = !DIEnumerator(name: "TIMEBASE_2_NS", value: 10000, isUnsigned: true)
!424 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ni_freq_out_clock_source_bits", file: !250, line: 1436, baseType: !7, size: 32, elements: !425)
!425 = !{!426, !427}
!426 = !DIEnumerator(name: "NI_FREQ_OUT_TIMEBASE_1_DIV_2_CLOCK_SRC", value: 0, isUnsigned: true)
!427 = !DIEnumerator(name: "NI_FREQ_OUT_TIMEBASE_2_CLOCK_SRC", value: 1, isUnsigned: true)
!428 = !{!429, !430, !432, !435, !436, !439, !441, !443, !444, !445, !448, !463, !449}
!429 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!433 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !434)
!434 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!435 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !438)
!438 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!439 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !440, line: 27, baseType: !7)
!440 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!441 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !442, line: 31, baseType: !439)
!442 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !440, line: 24, baseType: !438)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !442, line: 29, baseType: !443)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !447)
!447 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !451, line: 640, size: 48640, elements: !452)
!451 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!452 = !{!453, !461, !462, !464, !475, !476, !477, !478, !479, !480, !481, !482, !486, !520, !531, !640, !641, !642, !653, !654, !656, !657, !2615, !2616, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2693, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2708, !2709, !2710, !2712, !2713, !2714, !2715, !2716, !2717, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2741, !2746, !2747, !2748, !2749, !2750, !2752, !2755, !2758, !2761, !2764, !2768, !2869, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2917, !2918, !2919, !2920, !2921, !2926, !2927, !2928, !2931, !2932, !2935, !2938, !2941, !2942, !2974, !2977, !2978, !3057, !3058, !3061, !3062, !3065, !3066, !3067, !3071, !3072, !3073, !3086, !3087, !3088, !3098, !3103, !3104, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !450, file: !451, line: 646, baseType: !454, size: 128)
!454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !455, line: 56, size: 128, elements: !456)
!455 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!456 = !{!457, !458}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !454, file: !455, line: 57, baseType: !435, size: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !454, file: !455, line: 58, baseType: !459, size: 32, offset: 64)
!459 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !460, line: 21, baseType: !439)
!460 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!461 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !450, file: !451, line: 649, baseType: !446, size: 64, offset: 128)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !450, file: !451, line: 657, baseType: !463, size: 64, offset: 192)
!463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !450, file: !451, line: 658, baseType: !465, size: 32, offset: 256)
!465 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !466, line: 113, baseType: !467)
!466 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !466, line: 111, size: 32, elements: !468)
!468 = !{!469}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !467, file: !466, line: 112, baseType: !470, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !471, line: 168, baseType: !472)
!471 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!472 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !471, line: 166, size: 32, elements: !473)
!473 = !{!474}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !472, file: !471, line: 167, baseType: !429, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !450, file: !451, line: 660, baseType: !7, size: 32, offset: 288)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !450, file: !451, line: 661, baseType: !7, size: 32, offset: 320)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !450, file: !451, line: 684, baseType: !429, size: 32, offset: 352)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !450, file: !451, line: 686, baseType: !429, size: 32, offset: 384)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !450, file: !451, line: 687, baseType: !429, size: 32, offset: 416)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !450, file: !451, line: 688, baseType: !429, size: 32, offset: 448)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !450, file: !451, line: 689, baseType: !7, size: 32, offset: 480)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !450, file: !451, line: 691, baseType: !483, size: 64, offset: 512)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !485)
!485 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !451, line: 691, flags: DIFlagFwdDecl)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !450, file: !451, line: 692, baseType: !487, size: 832, offset: 576)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !451, line: 451, size: 832, elements: !488)
!488 = !{!489, !494, !502, !508, !509, !513, !514, !515, !516, !517}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !487, file: !451, line: 453, baseType: !490, size: 128)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !451, line: 325, size: 128, elements: !491)
!491 = !{!492, !493}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !490, file: !451, line: 326, baseType: !435, size: 64)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !490, file: !451, line: 327, baseType: !459, size: 32, offset: 64)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !487, file: !451, line: 454, baseType: !495, size: 192, align: 64, offset: 128)
!495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !496, line: 24, size: 192, align: 64, elements: !497)
!496 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!497 = !{!498, !499, !501}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !495, file: !496, line: 25, baseType: !435, size: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !495, file: !496, line: 26, baseType: !500, size: 64, offset: 64)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !495, file: !496, line: 27, baseType: !500, size: 64, offset: 128)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !487, file: !451, line: 455, baseType: !503, size: 128, offset: 320)
!503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !471, line: 178, size: 128, elements: !504)
!504 = !{!505, !507}
!505 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !503, file: !471, line: 179, baseType: !506, size: 64)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !503, file: !471, line: 179, baseType: !506, size: 64, offset: 64)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !487, file: !451, line: 456, baseType: !7, size: 32, offset: 448)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !487, file: !451, line: 458, baseType: !510, size: 64, offset: 512)
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !460, line: 23, baseType: !511)
!511 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !440, line: 31, baseType: !512)
!512 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !487, file: !451, line: 459, baseType: !510, size: 64, offset: 576)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !487, file: !451, line: 460, baseType: !510, size: 64, offset: 640)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !487, file: !451, line: 461, baseType: !510, size: 64, offset: 704)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !487, file: !451, line: 463, baseType: !510, size: 64, offset: 768)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !487, file: !451, line: 465, baseType: !518, offset: 832)
!518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !451, line: 415, elements: !519)
!519 = !{}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !450, file: !451, line: 693, baseType: !521, size: 384, offset: 1408)
!521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !451, line: 489, size: 384, elements: !522)
!522 = !{!523, !524, !525, !526, !527, !528, !529}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !521, file: !451, line: 490, baseType: !503, size: 128)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !521, file: !451, line: 491, baseType: !435, size: 64, offset: 128)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !521, file: !451, line: 492, baseType: !435, size: 64, offset: 192)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !521, file: !451, line: 493, baseType: !7, size: 32, offset: 256)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !521, file: !451, line: 494, baseType: !438, size: 16, offset: 288)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !521, file: !451, line: 495, baseType: !438, size: 16, offset: 304)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !521, file: !451, line: 497, baseType: !530, size: 64, offset: 320)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !450, file: !451, line: 697, baseType: !532, size: 1792, offset: 1792)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !451, line: 507, size: 1792, elements: !533)
!533 = !{!534, !535, !536, !537, !538, !539, !540, !544, !545, !546, !547, !548, !549, !550, !637, !638}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !532, file: !451, line: 508, baseType: !495, size: 192, align: 64)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !532, file: !451, line: 515, baseType: !510, size: 64, offset: 192)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !532, file: !451, line: 516, baseType: !510, size: 64, offset: 256)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !532, file: !451, line: 517, baseType: !510, size: 64, offset: 320)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !532, file: !451, line: 518, baseType: !510, size: 64, offset: 384)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !532, file: !451, line: 519, baseType: !510, size: 64, offset: 448)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !532, file: !451, line: 526, baseType: !541, size: 64, offset: 512)
!541 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !460, line: 22, baseType: !542)
!542 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !440, line: 30, baseType: !543)
!543 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !532, file: !451, line: 527, baseType: !510, size: 64, offset: 576)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !532, file: !451, line: 528, baseType: !7, size: 32, offset: 640)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !532, file: !451, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !532, file: !451, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !532, file: !451, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !532, file: !451, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !532, file: !451, line: 563, baseType: !551, size: 512, offset: 704)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !552)
!552 = !{!553, !561, !562, !567, !631, !634, !635, !636}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !551, file: !20, line: 119, baseType: !554, size: 256)
!554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !555, line: 9, size: 256, elements: !556)
!555 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!556 = !{!557, !558}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !554, file: !555, line: 10, baseType: !495, size: 192, align: 64)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !554, file: !555, line: 11, baseType: !559, size: 64, offset: 192)
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !560, line: 29, baseType: !541)
!560 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!561 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !551, file: !20, line: 120, baseType: !559, size: 64, offset: 256)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !551, file: !20, line: 121, baseType: !563, size: 64, offset: 320)
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64)
!564 = !DISubroutineType(types: !565)
!565 = !{!19, !566}
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 64)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !551, file: !20, line: 122, baseType: !568, size: 64, offset: 384)
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 64)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !570)
!570 = !{!571, !599, !600, !604, !614, !615, !626, !630}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !569, file: !20, line: 160, baseType: !572, size: 64)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !574)
!574 = !{!575, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !573, file: !20, line: 215, baseType: !576)
!576 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !577, line: 29, baseType: !578)
!577 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !577, line: 20, elements: !579)
!579 = !{!580}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !578, file: !577, line: 21, baseType: !581)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !582, line: 25, baseType: !583)
!582 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !582, line: 25, elements: !519)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !573, file: !20, line: 216, baseType: !7, size: 32)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !573, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !573, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !573, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !573, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !573, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !573, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !573, file: !20, line: 233, baseType: !559, size: 64, offset: 128)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !573, file: !20, line: 234, baseType: !566, size: 64, offset: 192)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !573, file: !20, line: 235, baseType: !559, size: 64, offset: 256)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !573, file: !20, line: 236, baseType: !566, size: 64, offset: 320)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !573, file: !20, line: 237, baseType: !596, size: 4096, offset: 512)
!596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 4096, elements: !597)
!597 = !{!598}
!598 = !DISubrange(count: 8)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !569, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !569, file: !20, line: 162, baseType: !601, size: 32, offset: 96)
!601 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !471, line: 27, baseType: !602)
!602 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !603, line: 96, baseType: !429)
!603 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!604 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !569, file: !20, line: 163, baseType: !605, size: 32, offset: 128)
!605 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !606, line: 276, baseType: !607)
!606 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !606, line: 276, size: 32, elements: !608)
!608 = !{!609}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !607, file: !606, line: 276, baseType: !610, size: 32)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !606, line: 70, baseType: !611)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !606, line: 65, size: 32, elements: !612)
!612 = !{!613}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !611, file: !606, line: 66, baseType: !7, size: 32)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !569, file: !20, line: 164, baseType: !566, size: 64, offset: 192)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !569, file: !20, line: 165, baseType: !616, size: 128, offset: 256)
!616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !555, line: 14, size: 128, elements: !617)
!617 = !{!618}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !616, file: !555, line: 15, baseType: !619, size: 128)
!619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !496, line: 125, size: 128, elements: !620)
!620 = !{!621, !625}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !619, file: !496, line: 126, baseType: !622, size: 64)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !496, line: 31, size: 64, elements: !623)
!623 = !{!624}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !622, file: !496, line: 32, baseType: !500, size: 64)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !619, file: !496, line: 127, baseType: !500, size: 64, offset: 64)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !569, file: !20, line: 166, baseType: !627, size: 64, offset: 384)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64)
!628 = !DISubroutineType(types: !629)
!629 = !{!559}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !569, file: !20, line: 167, baseType: !559, size: 64, offset: 448)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !551, file: !20, line: 123, baseType: !632, size: 8, offset: 448)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !460, line: 17, baseType: !633)
!633 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !440, line: 21, baseType: !434)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !551, file: !20, line: 124, baseType: !632, size: 8, offset: 456)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !551, file: !20, line: 125, baseType: !632, size: 8, offset: 464)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !551, file: !20, line: 126, baseType: !632, size: 8, offset: 472)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !532, file: !451, line: 572, baseType: !551, size: 512, offset: 1216)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !532, file: !451, line: 580, baseType: !639, size: 64, offset: 1728)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !450, file: !451, line: 721, baseType: !7, size: 32, offset: 3584)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !450, file: !451, line: 722, baseType: !429, size: 32, offset: 3616)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !450, file: !451, line: 723, baseType: !643, size: 64, offset: 3648)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !645)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !646, line: 17, baseType: !647)
!646 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !646, line: 17, size: 64, elements: !648)
!648 = !{!649}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !647, file: !646, line: 17, baseType: !650, size: 64)
!650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !435, size: 64, elements: !651)
!651 = !{!652}
!652 = !DISubrange(count: 1)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !450, file: !451, line: 724, baseType: !645, size: 64, offset: 3712)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !450, file: !451, line: 749, baseType: !655, offset: 3776)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !451, line: 290, elements: !519)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !450, file: !451, line: 751, baseType: !503, size: 128, offset: 3776)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !450, file: !451, line: 757, baseType: !658, size: 64, offset: 3904)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !660, line: 388, size: 7296, elements: !661)
!660 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!661 = !{!662, !2611}
!662 = !DIDerivedType(tag: DW_TAG_member, scope: !659, file: !660, line: 389, baseType: !663, size: 7296)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !659, file: !660, line: 389, size: 7296, elements: !664)
!664 = !{!665, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2534, !2540, !2543, !2582, !2583, !2595, !2596, !2599, !2600, !2601, !2604, !2605, !2606, !2609, !2610}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !663, file: !660, line: 390, baseType: !666, size: 64)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !660, line: 305, size: 1472, elements: !668)
!668 = !{!669, !670, !671, !672, !673, !674, !675, !676, !684, !685, !690, !691, !694, !2480, !2481, !2482, !2483, !2484}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !667, file: !660, line: 308, baseType: !435, size: 64)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !667, file: !660, line: 309, baseType: !435, size: 64, offset: 64)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !667, file: !660, line: 313, baseType: !666, size: 64, offset: 128)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !667, file: !660, line: 313, baseType: !666, size: 64, offset: 192)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !667, file: !660, line: 315, baseType: !495, size: 192, align: 64, offset: 256)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !667, file: !660, line: 323, baseType: !435, size: 64, offset: 448)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !667, file: !660, line: 327, baseType: !658, size: 64, offset: 512)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !667, file: !660, line: 333, baseType: !677, size: 64, offset: 576)
!677 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !678, line: 284, baseType: !679)
!678 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !678, line: 284, size: 64, elements: !680)
!680 = !{!681}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !679, file: !678, line: 284, baseType: !682, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !683, line: 19, baseType: !435)
!683 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!684 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !667, file: !660, line: 334, baseType: !435, size: 64, offset: 640)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !667, file: !660, line: 343, baseType: !686, size: 256, offset: 704)
!686 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !667, file: !660, line: 340, size: 256, elements: !687)
!687 = !{!688, !689}
!688 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !686, file: !660, line: 341, baseType: !495, size: 192, align: 64)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !686, file: !660, line: 342, baseType: !435, size: 64, offset: 192)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !667, file: !660, line: 351, baseType: !503, size: 128, offset: 960)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !667, file: !660, line: 353, baseType: !692, size: 64, offset: 1088)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !660, line: 353, flags: DIFlagFwdDecl)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !667, file: !660, line: 356, baseType: !695, size: 64, offset: 1152)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !697)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !698)
!698 = !{!699, !703, !704, !708, !712, !2454, !2458, !2462, !2466, !2467, !2468, !2472, !2476}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !697, file: !14, line: 558, baseType: !700, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DISubroutineType(types: !702)
!702 = !{null, !666}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !697, file: !14, line: 559, baseType: !700, size: 64, offset: 64)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !697, file: !14, line: 560, baseType: !705, size: 64, offset: 128)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!706 = !DISubroutineType(types: !707)
!707 = !{!429, !666, !435}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !697, file: !14, line: 561, baseType: !709, size: 64, offset: 192)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!710 = !DISubroutineType(types: !711)
!711 = !{!429, !666}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !697, file: !14, line: 562, baseType: !713, size: 64, offset: 256)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = !DISubroutineType(types: !715)
!715 = !{!716, !717}
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !660, line: 682, baseType: !7)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !719)
!719 = !{!720, !721, !722, !724, !725, !726, !733, !740, !746, !2448, !2449, !2451, !2453}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !718, file: !14, line: 509, baseType: !666, size: 64)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !718, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !718, file: !14, line: 511, baseType: !723, size: 32, offset: 96)
!723 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !471, line: 148, baseType: !7)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !718, file: !14, line: 512, baseType: !435, size: 64, offset: 128)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !718, file: !14, line: 513, baseType: !435, size: 64, offset: 192)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !718, file: !14, line: 514, baseType: !727, size: 64, offset: 256)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !678, line: 385, baseType: !729)
!729 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !678, line: 385, size: 64, elements: !730)
!730 = !{!731}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !729, file: !678, line: 385, baseType: !732, size: 64)
!732 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !683, line: 15, baseType: !435)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !718, file: !14, line: 516, baseType: !734, size: 64, offset: 320)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !678, line: 359, baseType: !736)
!736 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !678, line: 359, size: 64, elements: !737)
!737 = !{!738}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !736, file: !678, line: 359, baseType: !739, size: 64)
!739 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !683, line: 16, baseType: !435)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !718, file: !14, line: 519, baseType: !741, size: 64, offset: 384)
!741 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !683, line: 21, baseType: !742)
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !683, line: 21, size: 64, elements: !743)
!743 = !{!744}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !742, file: !683, line: 21, baseType: !745, size: 64)
!745 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !683, line: 14, baseType: !435)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !718, file: !14, line: 521, baseType: !747, size: 64, offset: 448)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !660, line: 68, size: 512, align: 128, elements: !749)
!749 = !{!750, !751, !2440, !2447}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !748, file: !660, line: 69, baseType: !435, size: 64)
!751 = !DIDerivedType(tag: DW_TAG_member, scope: !748, file: !660, line: 77, baseType: !752, size: 320, offset: 64)
!752 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !748, file: !660, line: 77, size: 320, elements: !753)
!753 = !{!754, !2301, !2306, !2334, !2342, !2348, !2361, !2439}
!754 = !DIDerivedType(tag: DW_TAG_member, scope: !752, file: !660, line: 78, baseType: !755, size: 320)
!755 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !752, file: !660, line: 78, size: 320, elements: !756)
!756 = !{!757, !758, !2299, !2300}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !755, file: !660, line: 84, baseType: !503, size: 128)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !755, file: !660, line: 86, baseType: !759, size: 64, offset: 128)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !761)
!761 = !{!762, !2186, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2294, !2295, !2296, !2297, !2298}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !760, file: !44, line: 452, baseType: !763, size: 64)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !765)
!765 = !{!766, !768, !769, !777, !784, !785, !2118, !2119, !2120, !2121, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2162, !2170, !2171, !2172, !2182, !2183, !2184, !2185}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !764, file: !44, line: 611, baseType: !767, size: 16)
!767 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !471, line: 19, baseType: !438)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !764, file: !44, line: 612, baseType: !438, size: 16, offset: 16)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !764, file: !44, line: 613, baseType: !770, size: 32, offset: 32)
!770 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !771, line: 23, baseType: !772)
!771 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!772 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !771, line: 21, size: 32, elements: !773)
!773 = !{!774}
!774 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !772, file: !771, line: 22, baseType: !775, size: 32)
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !471, line: 32, baseType: !776)
!776 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !603, line: 49, baseType: !7)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !764, file: !44, line: 614, baseType: !778, size: 32, offset: 64)
!778 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !771, line: 28, baseType: !779)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !771, line: 26, size: 32, elements: !780)
!780 = !{!781}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !779, file: !771, line: 27, baseType: !782, size: 32)
!782 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !471, line: 33, baseType: !783)
!783 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !603, line: 50, baseType: !7)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !764, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !764, file: !44, line: 622, baseType: !786, size: 64, offset: 128)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !788)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !789)
!789 = !{!790, !1478, !1491, !1495, !1501, !1505, !1509, !1513, !1517, !1521, !1525, !1526, !1530, !1534, !2068, !2094, !2098, !2104, !2109, !2113, !2114}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !788, file: !44, line: 1865, baseType: !791, size: 64)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!792 = !DISubroutineType(types: !793)
!793 = !{!794, !763, !794, !7}
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !796, line: 89, size: 1536, elements: !797)
!796 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!797 = !{!798, !799, !804, !812, !813, !828, !829, !833, !852, !926, !1462, !1463, !1464, !1470, !1471, !1472}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !795, file: !796, line: 91, baseType: !7, size: 32)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !795, file: !796, line: 92, baseType: !800, size: 32, offset: 32)
!800 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !606, line: 277, baseType: !801)
!801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !606, line: 277, size: 32, elements: !802)
!802 = !{!803}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !801, file: !606, line: 277, baseType: !610, size: 32)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !795, file: !796, line: 93, baseType: !805, size: 128, offset: 64)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !806, line: 38, size: 128, elements: !807)
!806 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!807 = !{!808, !810}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !805, file: !806, line: 39, baseType: !809, size: 64)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !805, file: !806, line: 39, baseType: !811, size: 64, offset: 64)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !795, file: !796, line: 94, baseType: !794, size: 64, offset: 192)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !795, file: !796, line: 95, baseType: !814, size: 128, offset: 256)
!814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !796, line: 47, size: 128, elements: !815)
!815 = !{!816, !825}
!816 = !DIDerivedType(tag: DW_TAG_member, scope: !814, file: !796, line: 48, baseType: !817, size: 64)
!817 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !814, file: !796, line: 48, size: 64, elements: !818)
!818 = !{!819, !824}
!819 = !DIDerivedType(tag: DW_TAG_member, scope: !817, file: !796, line: 49, baseType: !820, size: 64)
!820 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !817, file: !796, line: 49, size: 64, elements: !821)
!821 = !{!822, !823}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !820, file: !796, line: 50, baseType: !459, size: 32)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !820, file: !796, line: 50, baseType: !459, size: 32, offset: 32)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !817, file: !796, line: 52, baseType: !510, size: 64)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !814, file: !796, line: 54, baseType: !826, size: 64, offset: 64)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !434)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !795, file: !796, line: 96, baseType: !763, size: 64, offset: 384)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !795, file: !796, line: 98, baseType: !830, size: 256, offset: 448)
!830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !434, size: 256, elements: !831)
!831 = !{!832}
!832 = !DISubrange(count: 32)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !795, file: !796, line: 101, baseType: !834, size: 32, offset: 704)
!834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !835, line: 25, size: 32, elements: !836)
!835 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!836 = !{!837}
!837 = !DIDerivedType(tag: DW_TAG_member, scope: !834, file: !835, line: 26, baseType: !838, size: 32)
!838 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !834, file: !835, line: 26, size: 32, elements: !839)
!839 = !{!840}
!840 = !DIDerivedType(tag: DW_TAG_member, scope: !838, file: !835, line: 30, baseType: !841, size: 32)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !838, file: !835, line: 30, size: 32, elements: !842)
!842 = !{!843, !851}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !841, file: !835, line: 31, baseType: !844)
!844 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !577, line: 83, baseType: !845)
!845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !577, line: 71, elements: !846)
!846 = !{!847}
!847 = !DIDerivedType(tag: DW_TAG_member, scope: !845, file: !577, line: 72, baseType: !848)
!848 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !845, file: !577, line: 72, elements: !849)
!849 = !{!850}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !848, file: !577, line: 73, baseType: !578)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !841, file: !835, line: 32, baseType: !429, size: 32)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !795, file: !796, line: 102, baseType: !853, size: 64, offset: 768)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !855)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !796, line: 135, size: 1024, align: 512, elements: !856)
!856 = !{!857, !861, !862, !869, !878, !882, !886, !890, !891, !895, !900, !912, !920}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !855, file: !796, line: 136, baseType: !858, size: 64)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = !DISubroutineType(types: !860)
!860 = !{!429, !794, !7}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !855, file: !796, line: 137, baseType: !858, size: 64, offset: 64)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !855, file: !796, line: 138, baseType: !863, size: 64, offset: 128)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = !DISubroutineType(types: !865)
!865 = !{!429, !866, !868}
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !795)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !855, file: !796, line: 139, baseType: !870, size: 64, offset: 192)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!871 = !DISubroutineType(types: !872)
!872 = !{!429, !866, !7, !873, !876}
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !875)
!875 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !814)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !855, file: !796, line: 141, baseType: !879, size: 64, offset: 256)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DISubroutineType(types: !881)
!881 = !{!429, !866}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !855, file: !796, line: 142, baseType: !883, size: 64, offset: 320)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!884 = !DISubroutineType(types: !885)
!885 = !{!429, !794}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !855, file: !796, line: 143, baseType: !887, size: 64, offset: 384)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = !DISubroutineType(types: !889)
!889 = !{null, !794}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !855, file: !796, line: 144, baseType: !887, size: 64, offset: 448)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !855, file: !796, line: 145, baseType: !892, size: 64, offset: 512)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DISubroutineType(types: !894)
!894 = !{null, !794, !763}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !855, file: !796, line: 146, baseType: !896, size: 64, offset: 576)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = !DISubroutineType(types: !898)
!898 = !{!899, !794, !899, !429}
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !855, file: !796, line: 147, baseType: !901, size: 64, offset: 640)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = !DISubroutineType(types: !903)
!903 = !{!904, !906}
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !796, line: 18, flags: DIFlagFwdDecl)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !908, line: 8, size: 128, elements: !909)
!908 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!909 = !{!910, !911}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !907, file: !908, line: 9, baseType: !904, size: 64)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !907, file: !908, line: 10, baseType: !794, size: 64, offset: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !855, file: !796, line: 148, baseType: !913, size: 64, offset: 704)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = !DISubroutineType(types: !915)
!915 = !{!429, !916, !918}
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !907)
!918 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !471, line: 30, baseType: !919)
!919 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !855, file: !796, line: 149, baseType: !921, size: 64, offset: 768)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = !DISubroutineType(types: !923)
!923 = !{!794, !794, !924}
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !764)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !795, file: !796, line: 103, baseType: !927, size: 64, offset: 832)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !929)
!929 = !{!930, !931, !934, !935, !936, !939, !991, !1073, !1169, !1252, !1256, !1257, !1258, !1259, !1260, !1268, !1269, !1270, !1275, !1279, !1280, !1283, !1286, !1289, !1290, !1291, !1332, !1373, !1374, !1375, !1376, !1377, !1378, !1381, !1383, !1392, !1393, !1395, !1396, !1397, !1398, !1399, !1414, !1415, !1416, !1417, !1420, !1424, !1425, !1428, !1443, !1444, !1445, !1456, !1457, !1458, !1459, !1460, !1461}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !928, file: !44, line: 1417, baseType: !503, size: 128)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !928, file: !44, line: 1418, baseType: !932, size: 32, offset: 128)
!932 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !471, line: 16, baseType: !933)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !471, line: 13, baseType: !459)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !928, file: !44, line: 1419, baseType: !434, size: 8, offset: 160)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !928, file: !44, line: 1420, baseType: !435, size: 64, offset: 192)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !928, file: !44, line: 1421, baseType: !937, size: 64, offset: 256)
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !471, line: 46, baseType: !938)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !603, line: 88, baseType: !543)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !928, file: !44, line: 1422, baseType: !940, size: 64, offset: 320)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !942)
!942 = !{!943, !944, !945, !952, !956, !960, !964, !968, !969, !979, !982, !983, !984, !988, !989, !990}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !941, file: !44, line: 2229, baseType: !873, size: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !941, file: !44, line: 2230, baseType: !429, size: 32, offset: 64)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !941, file: !44, line: 2238, baseType: !946, size: 64, offset: 128)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DISubroutineType(types: !948)
!948 = !{!429, !949}
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !951, line: 28, flags: DIFlagFwdDecl)
!951 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!952 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !941, file: !44, line: 2239, baseType: !953, size: 64, offset: 192)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !955)
!955 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !941, file: !44, line: 2240, baseType: !957, size: 64, offset: 256)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!958 = !DISubroutineType(types: !959)
!959 = !{!794, !940, !429, !873, !463}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !941, file: !44, line: 2242, baseType: !961, size: 64, offset: 320)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = !DISubroutineType(types: !963)
!963 = !{null, !927}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !941, file: !44, line: 2243, baseType: !965, size: 64, offset: 384)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !967, line: 76, flags: DIFlagFwdDecl)
!967 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!968 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !941, file: !44, line: 2244, baseType: !940, size: 64, offset: 448)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !941, file: !44, line: 2245, baseType: !970, size: 64, offset: 512)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !471, line: 182, size: 64, elements: !971)
!971 = !{!972}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !970, file: !471, line: 183, baseType: !973, size: 64)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !471, line: 186, size: 128, elements: !975)
!975 = !{!976, !977}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !974, file: !471, line: 187, baseType: !973, size: 64)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !974, file: !471, line: 187, baseType: !978, size: 64, offset: 64)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !941, file: !44, line: 2247, baseType: !980, offset: 576)
!980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !981, line: 187, elements: !519)
!981 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!982 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !941, file: !44, line: 2248, baseType: !980, offset: 576)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !941, file: !44, line: 2249, baseType: !980, offset: 576)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !941, file: !44, line: 2250, baseType: !985, offset: 576)
!985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !980, elements: !986)
!986 = !{!987}
!987 = !DISubrange(count: 3)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !941, file: !44, line: 2252, baseType: !980, offset: 576)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !941, file: !44, line: 2253, baseType: !980, offset: 576)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !941, file: !44, line: 2254, baseType: !980, offset: 576)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !928, file: !44, line: 1423, baseType: !992, size: 64, offset: 384)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !994)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !995)
!995 = !{!996, !1000, !1004, !1005, !1009, !1015, !1019, !1020, !1021, !1025, !1029, !1030, !1031, !1032, !1038, !1043, !1044, !1050, !1051, !1052, !1053, !1057, !1072}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !994, file: !44, line: 1936, baseType: !997, size: 64)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!998 = !DISubroutineType(types: !999)
!999 = !{!763, !927}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !994, file: !44, line: 1937, baseType: !1001, size: 64, offset: 64)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{null, !763}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !994, file: !44, line: 1938, baseType: !1001, size: 64, offset: 128)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !994, file: !44, line: 1940, baseType: !1006, size: 64, offset: 192)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{null, !763, !429}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !994, file: !44, line: 1941, baseType: !1010, size: 64, offset: 256)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!429, !763, !1013}
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !994, file: !44, line: 1942, baseType: !1016, size: 64, offset: 320)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!429, !763}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !994, file: !44, line: 1943, baseType: !1001, size: 64, offset: 384)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !994, file: !44, line: 1944, baseType: !961, size: 64, offset: 448)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !994, file: !44, line: 1945, baseType: !1022, size: 64, offset: 512)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = !DISubroutineType(types: !1024)
!1024 = !{!429, !927, !429}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !994, file: !44, line: 1946, baseType: !1026, size: 64, offset: 576)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!429, !927}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !994, file: !44, line: 1947, baseType: !1026, size: 64, offset: 640)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !994, file: !44, line: 1948, baseType: !1026, size: 64, offset: 704)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !994, file: !44, line: 1949, baseType: !1026, size: 64, offset: 768)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !994, file: !44, line: 1950, baseType: !1033, size: 64, offset: 832)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64)
!1034 = !DISubroutineType(types: !1035)
!1035 = !{!429, !794, !1036}
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !994, file: !44, line: 1951, baseType: !1039, size: 64, offset: 896)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1040 = !DISubroutineType(types: !1041)
!1041 = !{!429, !927, !1042, !899}
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !994, file: !44, line: 1952, baseType: !961, size: 64, offset: 960)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !994, file: !44, line: 1954, baseType: !1045, size: 64, offset: 1024)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!429, !1048, !794}
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !678, line: 539, flags: DIFlagFwdDecl)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !994, file: !44, line: 1955, baseType: !1045, size: 64, offset: 1088)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !994, file: !44, line: 1956, baseType: !1045, size: 64, offset: 1152)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !994, file: !44, line: 1957, baseType: !1045, size: 64, offset: 1216)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !994, file: !44, line: 1963, baseType: !1054, size: 64, offset: 1280)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!429, !927, !747, !723}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !994, file: !44, line: 1964, baseType: !1058, size: 64, offset: 1344)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!447, !927, !1061}
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !1063, line: 12, size: 256, elements: !1064)
!1063 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!1064 = !{!1065, !1066, !1067, !1068, !1069}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1062, file: !1063, line: 13, baseType: !723, size: 32)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !1062, file: !1063, line: 16, baseType: !429, size: 32, offset: 32)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !1062, file: !1063, line: 23, baseType: !435, size: 64, offset: 64)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !1062, file: !1063, line: 30, baseType: !435, size: 64, offset: 128)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !1062, file: !1063, line: 33, baseType: !1070, size: 64, offset: 192)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64)
!1071 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !660, line: 27, flags: DIFlagFwdDecl)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !994, file: !44, line: 1966, baseType: !1058, size: 64, offset: 1408)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !928, file: !44, line: 1424, baseType: !1074, size: 64, offset: 448)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1076)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !1077)
!1077 = !{!1078, !1138, !1142, !1146, !1147, !1148, !1149, !1150, !1155, !1160, !1164}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !1076, file: !38, line: 323, baseType: !1079, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{!429, !1082}
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !1084)
!1084 = !{!1085, !1086, !1087, !1088, !1089, !1102, !1103, !1104, !1105, !1121, !1122, !1123}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !1083, file: !38, line: 295, baseType: !974, size: 128)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !1083, file: !38, line: 296, baseType: !503, size: 128, offset: 128)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !1083, file: !38, line: 297, baseType: !503, size: 128, offset: 256)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !1083, file: !38, line: 298, baseType: !503, size: 128, offset: 384)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !1083, file: !38, line: 299, baseType: !1090, size: 192, offset: 512)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1091, line: 53, size: 192, elements: !1092)
!1091 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1092 = !{!1093, !1100, !1101}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1090, file: !1091, line: 54, baseType: !1094, size: 64)
!1094 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !1095, line: 13, baseType: !1096)
!1095 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !471, line: 175, baseType: !1097)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !471, line: 173, size: 64, elements: !1098)
!1098 = !{!1099}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !1097, file: !471, line: 174, baseType: !541, size: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1090, file: !1091, line: 55, baseType: !844, offset: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1090, file: !1091, line: 59, baseType: !503, size: 128, offset: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !1083, file: !38, line: 300, baseType: !844, offset: 704)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !1083, file: !38, line: 301, baseType: !470, size: 32, offset: 704)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !1083, file: !38, line: 302, baseType: !927, size: 64, offset: 768)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !1083, file: !38, line: 303, baseType: !1106, size: 64, offset: 832)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !1107)
!1107 = !{!1108, !1120}
!1108 = !DIDerivedType(tag: DW_TAG_member, scope: !1106, file: !38, line: 69, baseType: !1109, size: 32)
!1109 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1106, file: !38, line: 69, size: 32, elements: !1110)
!1110 = !{!1111, !1112, !1113}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1109, file: !38, line: 70, baseType: !770, size: 32)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1109, file: !38, line: 71, baseType: !778, size: 32)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !1109, file: !38, line: 72, baseType: !1114, size: 32)
!1114 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !1115, line: 24, baseType: !1116)
!1115 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1115, line: 22, size: 32, elements: !1117)
!1117 = !{!1118}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1116, file: !1115, line: 23, baseType: !1119, size: 32)
!1119 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !1115, line: 20, baseType: !776)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1106, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !1083, file: !38, line: 304, baseType: !937, size: 64, offset: 896)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !1083, file: !38, line: 305, baseType: !435, size: 64, offset: 960)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !1083, file: !38, line: 306, baseType: !1124, size: 576, offset: 1024)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !1125)
!1125 = !{!1126, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1137}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !1124, file: !38, line: 206, baseType: !1127, size: 64)
!1127 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !543)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !1124, file: !38, line: 207, baseType: !1127, size: 64, offset: 64)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !1124, file: !38, line: 208, baseType: !1127, size: 64, offset: 128)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !1124, file: !38, line: 209, baseType: !1127, size: 64, offset: 192)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !1124, file: !38, line: 210, baseType: !1127, size: 64, offset: 256)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !1124, file: !38, line: 211, baseType: !1127, size: 64, offset: 320)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !1124, file: !38, line: 212, baseType: !1127, size: 64, offset: 384)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !1124, file: !38, line: 213, baseType: !1135, size: 64, offset: 448)
!1135 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1136, line: 8, baseType: !542)
!1136 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !1124, file: !38, line: 214, baseType: !1135, size: 64, offset: 512)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !1076, file: !38, line: 324, baseType: !1139, size: 64, offset: 64)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64)
!1140 = !DISubroutineType(types: !1141)
!1141 = !{!1082, !927, !429}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !1076, file: !38, line: 325, baseType: !1143, size: 64, offset: 128)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64)
!1144 = !DISubroutineType(types: !1145)
!1145 = !{null, !1082}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !1076, file: !38, line: 326, baseType: !1079, size: 64, offset: 192)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !1076, file: !38, line: 327, baseType: !1079, size: 64, offset: 256)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !1076, file: !38, line: 328, baseType: !1079, size: 64, offset: 320)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !1076, file: !38, line: 329, baseType: !1022, size: 64, offset: 384)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !1076, file: !38, line: 332, baseType: !1151, size: 64, offset: 448)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64)
!1152 = !DISubroutineType(types: !1153)
!1153 = !{!1154, !763}
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !1076, file: !38, line: 333, baseType: !1156, size: 64, offset: 512)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = !DISubroutineType(types: !1158)
!1158 = !{!429, !763, !1159}
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !1076, file: !38, line: 335, baseType: !1161, size: 64, offset: 576)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{!429, !763, !1154}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !1076, file: !38, line: 337, baseType: !1165, size: 64, offset: 640)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!1166 = !DISubroutineType(types: !1167)
!1167 = !{!429, !927, !1168}
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !928, file: !44, line: 1425, baseType: !1170, size: 64, offset: 512)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1172)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !1173)
!1173 = !{!1174, !1178, !1179, !1183, !1184, !1185, !1200, !1223, !1227, !1228, !1251}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !1172, file: !38, line: 429, baseType: !1175, size: 64)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1176 = !DISubroutineType(types: !1177)
!1177 = !{!429, !927, !429, !429, !916}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !1172, file: !38, line: 430, baseType: !1022, size: 64, offset: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !1172, file: !38, line: 431, baseType: !1180, size: 64, offset: 128)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{!429, !927, !7}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !1172, file: !38, line: 432, baseType: !1180, size: 64, offset: 192)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !1172, file: !38, line: 433, baseType: !1022, size: 64, offset: 256)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !1172, file: !38, line: 434, baseType: !1186, size: 64, offset: 320)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64)
!1187 = !DISubroutineType(types: !1188)
!1188 = !{!429, !927, !429, !1189}
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !1191)
!1191 = !{!1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !1190, file: !38, line: 416, baseType: !429, size: 32)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1190, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !1190, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !1190, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !1190, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !1190, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !1190, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !1190, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !1172, file: !38, line: 435, baseType: !1201, size: 64, offset: 384)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 64)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!429, !927, !1106, !1204}
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !1206)
!1206 = !{!1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !1205, file: !38, line: 344, baseType: !429, size: 32)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !1205, file: !38, line: 345, baseType: !510, size: 64, offset: 64)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !1205, file: !38, line: 346, baseType: !510, size: 64, offset: 128)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !1205, file: !38, line: 347, baseType: !510, size: 64, offset: 192)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !1205, file: !38, line: 348, baseType: !510, size: 64, offset: 256)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !1205, file: !38, line: 349, baseType: !510, size: 64, offset: 320)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !1205, file: !38, line: 350, baseType: !510, size: 64, offset: 384)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !1205, file: !38, line: 351, baseType: !541, size: 64, offset: 448)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !1205, file: !38, line: 353, baseType: !541, size: 64, offset: 512)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !1205, file: !38, line: 354, baseType: !429, size: 32, offset: 576)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !1205, file: !38, line: 355, baseType: !429, size: 32, offset: 608)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !1205, file: !38, line: 356, baseType: !510, size: 64, offset: 640)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !1205, file: !38, line: 357, baseType: !510, size: 64, offset: 704)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !1205, file: !38, line: 358, baseType: !510, size: 64, offset: 768)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !1205, file: !38, line: 359, baseType: !541, size: 64, offset: 832)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !1205, file: !38, line: 360, baseType: !429, size: 32, offset: 896)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !1172, file: !38, line: 436, baseType: !1224, size: 64, offset: 448)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 64)
!1225 = !DISubroutineType(types: !1226)
!1226 = !{!429, !927, !1168, !1204}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !1172, file: !38, line: 438, baseType: !1201, size: 64, offset: 512)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !1172, file: !38, line: 439, baseType: !1229, size: 64, offset: 576)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64)
!1230 = !DISubroutineType(types: !1231)
!1231 = !{!429, !927, !1232}
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !1234)
!1234 = !{!1235, !1236}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !1233, file: !38, line: 410, baseType: !7, size: 32)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !1233, file: !38, line: 411, baseType: !1237, size: 1344, offset: 64)
!1237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1238, size: 1344, elements: !986)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !1239)
!1239 = !{!1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1250}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1238, file: !38, line: 396, baseType: !7, size: 32)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !1238, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !1238, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !1238, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !1238, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !1238, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !1238, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1238, file: !38, line: 404, baseType: !512, size: 64, offset: 256)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1238, file: !38, line: 405, baseType: !1249, size: 64, offset: 320)
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !471, line: 126, baseType: !510)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !1238, file: !38, line: 406, baseType: !1249, size: 64, offset: 384)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !1172, file: !38, line: 440, baseType: !1180, size: 64, offset: 640)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !928, file: !44, line: 1426, baseType: !1253, size: 64, offset: 576)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!1254 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1255)
!1255 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !928, file: !44, line: 1427, baseType: !435, size: 64, offset: 640)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !928, file: !44, line: 1428, baseType: !435, size: 64, offset: 704)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !928, file: !44, line: 1429, baseType: !435, size: 64, offset: 768)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !928, file: !44, line: 1430, baseType: !794, size: 64, offset: 832)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !928, file: !44, line: 1431, baseType: !1261, size: 256, offset: 896)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1262, line: 35, size: 256, elements: !1263)
!1262 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1263 = !{!1264, !1265, !1266, !1267}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1261, file: !1262, line: 36, baseType: !1094, size: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1261, file: !1262, line: 42, baseType: !1094, size: 64, offset: 64)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1261, file: !1262, line: 46, baseType: !576, offset: 128)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1261, file: !1262, line: 47, baseType: !503, size: 128, offset: 128)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !928, file: !44, line: 1432, baseType: !429, size: 32, offset: 1152)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !928, file: !44, line: 1433, baseType: !470, size: 32, offset: 1184)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !928, file: !44, line: 1437, baseType: !1271, size: 64, offset: 1216)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 64)
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1274)
!1274 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !928, file: !44, line: 1449, baseType: !1276, size: 64, offset: 1280)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !806, line: 34, size: 64, elements: !1277)
!1277 = !{!1278}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1276, file: !806, line: 35, baseType: !809, size: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !928, file: !44, line: 1450, baseType: !503, size: 128, offset: 1344)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !928, file: !44, line: 1451, baseType: !1281, size: 64, offset: 1472)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1282 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !928, file: !44, line: 1452, baseType: !1284, size: 64, offset: 1536)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!1285 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !451, line: 40, flags: DIFlagFwdDecl)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !928, file: !44, line: 1453, baseType: !1287, size: 64, offset: 1600)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64)
!1288 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !928, file: !44, line: 1454, baseType: !974, size: 128, offset: 1664)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !928, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !928, file: !44, line: 1456, baseType: !1292, size: 2432, offset: 1856)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !1293)
!1293 = !{!1294, !1295, !1296, !1298, !1330}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1292, file: !38, line: 519, baseType: !7, size: 32)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !1292, file: !38, line: 520, baseType: !1261, size: 256, offset: 64)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1292, file: !38, line: 521, baseType: !1297, size: 192, offset: 320)
!1297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !763, size: 192, elements: !986)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1292, file: !38, line: 522, baseType: !1299, size: 1728, offset: 512)
!1299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1300, size: 1728, elements: !986)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !1301)
!1301 = !{!1302, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !1300, file: !38, line: 223, baseType: !1303, size: 64)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !1305)
!1305 = !{!1306, !1307, !1320, !1321}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !1304, file: !38, line: 444, baseType: !429, size: 32)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !1304, file: !38, line: 445, baseType: !1308, size: 64, offset: 64)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!1309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1310)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !1311)
!1311 = !{!1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !1310, file: !38, line: 311, baseType: !1022, size: 64)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !1310, file: !38, line: 312, baseType: !1022, size: 64, offset: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !1310, file: !38, line: 313, baseType: !1022, size: 64, offset: 128)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !1310, file: !38, line: 314, baseType: !1022, size: 64, offset: 192)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !1310, file: !38, line: 315, baseType: !1079, size: 64, offset: 256)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !1310, file: !38, line: 316, baseType: !1079, size: 64, offset: 320)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !1310, file: !38, line: 317, baseType: !1079, size: 64, offset: 384)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !1310, file: !38, line: 318, baseType: !1165, size: 64, offset: 448)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !1304, file: !38, line: 446, baseType: !965, size: 64, offset: 128)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !1304, file: !38, line: 447, baseType: !1303, size: 64, offset: 192)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !1300, file: !38, line: 224, baseType: !429, size: 32, offset: 64)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !1300, file: !38, line: 226, baseType: !503, size: 128, offset: 128)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !1300, file: !38, line: 227, baseType: !435, size: 64, offset: 256)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !1300, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !1300, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !1300, file: !38, line: 230, baseType: !1127, size: 64, offset: 384)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !1300, file: !38, line: 231, baseType: !1127, size: 64, offset: 448)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !1300, file: !38, line: 232, baseType: !463, size: 64, offset: 512)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1292, file: !38, line: 523, baseType: !1331, size: 192, offset: 2240)
!1331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1308, size: 192, elements: !986)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !928, file: !44, line: 1458, baseType: !1333, size: 2112, offset: 4288)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !1334)
!1334 = !{!1335, !1336, !1343}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1333, file: !44, line: 1411, baseType: !429, size: 32)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !1333, file: !44, line: 1412, baseType: !1337, size: 128, offset: 64)
!1337 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1338, line: 40, baseType: !1339)
!1338 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1338, line: 36, size: 128, elements: !1340)
!1340 = !{!1341, !1342}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1339, file: !1338, line: 37, baseType: !844)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1339, file: !1338, line: 38, baseType: !503, size: 128)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !1333, file: !44, line: 1413, baseType: !1344, size: 1920, offset: 192)
!1344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1345, size: 1920, elements: !986)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !1346, line: 12, size: 640, elements: !1347)
!1346 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1347 = !{!1348, !1364, !1366, !1371, !1372}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !1345, file: !1346, line: 13, baseType: !1349, size: 320)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !1350, line: 17, size: 320, elements: !1351)
!1350 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!1351 = !{!1352, !1353, !1354, !1355}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !1349, file: !1350, line: 18, baseType: !429, size: 32)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !1349, file: !1350, line: 19, baseType: !429, size: 32, offset: 32)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !1349, file: !1350, line: 20, baseType: !1337, size: 128, offset: 64)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !1349, file: !1350, line: 22, baseType: !1356, size: 128, align: 64, offset: 192)
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !471, line: 216, size: 128, align: 64, elements: !1357)
!1357 = !{!1358, !1360}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1356, file: !471, line: 217, baseType: !1359, size: 64)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1356, file: !471, line: 218, baseType: !1361, size: 64, offset: 64)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!1362 = !DISubroutineType(types: !1363)
!1363 = !{null, !1359}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !1345, file: !1346, line: 14, baseType: !1365, size: 64, offset: 320)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !1345, file: !1346, line: 15, baseType: !1367, size: 64, offset: 384)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !1368, line: 16, size: 64, elements: !1369)
!1368 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!1369 = !{!1370}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1367, file: !1368, line: 17, baseType: !449, size: 64)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !1345, file: !1346, line: 16, baseType: !1337, size: 128, offset: 448)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1345, file: !1346, line: 17, baseType: !470, size: 32, offset: 576)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !928, file: !44, line: 1465, baseType: !463, size: 64, offset: 6400)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !928, file: !44, line: 1468, baseType: !459, size: 32, offset: 6464)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !928, file: !44, line: 1470, baseType: !1135, size: 64, offset: 6528)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !928, file: !44, line: 1471, baseType: !1135, size: 64, offset: 6592)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !928, file: !44, line: 1473, baseType: !439, size: 32, offset: 6656)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !928, file: !44, line: 1474, baseType: !1379, size: 64, offset: 6720)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 64)
!1380 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !928, file: !44, line: 1477, baseType: !1382, size: 256, offset: 6784)
!1382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !875, size: 256, elements: !831)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !928, file: !44, line: 1478, baseType: !1384, size: 128, offset: 7040)
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !1385, line: 18, baseType: !1386)
!1385 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1385, line: 16, size: 128, elements: !1387)
!1387 = !{!1388}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1386, file: !1385, line: 17, baseType: !1389, size: 128)
!1389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !633, size: 128, elements: !1390)
!1390 = !{!1391}
!1391 = !DISubrange(count: 16)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !928, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !928, file: !44, line: 1481, baseType: !1394, size: 32, offset: 7200)
!1394 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !471, line: 150, baseType: !7)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !928, file: !44, line: 1487, baseType: !1090, size: 192, offset: 7232)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !928, file: !44, line: 1493, baseType: !873, size: 64, offset: 7424)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !928, file: !44, line: 1495, baseType: !853, size: 64, offset: 7488)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !928, file: !44, line: 1500, baseType: !429, size: 32, offset: 7552)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !928, file: !44, line: 1502, baseType: !1400, size: 448, offset: 7616)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !1063, line: 60, size: 448, elements: !1401)
!1401 = !{!1402, !1407, !1408, !1409, !1410, !1411, !1412}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !1400, file: !1063, line: 61, baseType: !1403, size: 64)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DISubroutineType(types: !1405)
!1405 = !{!435, !1406, !1061}
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !1400, file: !1063, line: 63, baseType: !1403, size: 64, offset: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !1400, file: !1063, line: 66, baseType: !447, size: 64, offset: 128)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !1400, file: !1063, line: 67, baseType: !429, size: 32, offset: 192)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1400, file: !1063, line: 68, baseType: !7, size: 32, offset: 224)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1400, file: !1063, line: 71, baseType: !503, size: 128, offset: 256)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !1400, file: !1063, line: 77, baseType: !1413, size: 64, offset: 384)
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !928, file: !44, line: 1505, baseType: !1094, size: 64, offset: 8064)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !928, file: !44, line: 1508, baseType: !1094, size: 64, offset: 8128)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !928, file: !44, line: 1511, baseType: !429, size: 32, offset: 8192)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !928, file: !44, line: 1514, baseType: !1418, size: 32, offset: 8224)
!1418 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1419, line: 8, baseType: !459)
!1419 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !928, file: !44, line: 1517, baseType: !1421, size: 64, offset: 8256)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 64)
!1422 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1423, line: 18, flags: DIFlagFwdDecl)
!1423 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !928, file: !44, line: 1518, baseType: !970, size: 64, offset: 8320)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !928, file: !44, line: 1525, baseType: !1426, size: 64, offset: 8384)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 64)
!1427 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !771, line: 18, flags: DIFlagFwdDecl)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !928, file: !44, line: 1532, baseType: !1429, size: 64, offset: 8448)
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !1430, line: 52, size: 64, elements: !1431)
!1430 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!1431 = !{!1432}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1429, file: !1430, line: 53, baseType: !1433, size: 64)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 64)
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !1430, line: 40, size: 256, elements: !1435)
!1435 = !{!1436, !1437, !1442}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1434, file: !1430, line: 42, baseType: !844)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1434, file: !1430, line: 44, baseType: !1438, size: 192)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !1430, line: 28, size: 192, elements: !1439)
!1439 = !{!1440, !1441}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1438, file: !1430, line: 29, baseType: !503, size: 128)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !1438, file: !1430, line: 31, baseType: !447, size: 64, offset: 128)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !1434, file: !1430, line: 49, baseType: !447, size: 64, offset: 192)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !928, file: !44, line: 1533, baseType: !1429, size: 64, offset: 8512)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !928, file: !44, line: 1534, baseType: !1356, size: 128, align: 64, offset: 8576)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !928, file: !44, line: 1535, baseType: !1446, size: 256, offset: 8704)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1423, line: 102, size: 256, elements: !1447)
!1447 = !{!1448, !1449, !1450}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1446, file: !1423, line: 103, baseType: !1094, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1446, file: !1423, line: 104, baseType: !503, size: 128, offset: 64)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1446, file: !1423, line: 105, baseType: !1451, size: 64, offset: 192)
!1451 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1423, line: 21, baseType: !1452)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64)
!1453 = !DISubroutineType(types: !1454)
!1454 = !{null, !1455}
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !928, file: !44, line: 1537, baseType: !1090, size: 192, offset: 8960)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !928, file: !44, line: 1542, baseType: !429, size: 32, offset: 9152)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !928, file: !44, line: 1545, baseType: !844, offset: 9184)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !928, file: !44, line: 1546, baseType: !503, size: 128, offset: 9216)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !928, file: !44, line: 1548, baseType: !844, offset: 9344)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !928, file: !44, line: 1549, baseType: !503, size: 128, offset: 9344)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !795, file: !796, line: 104, baseType: !435, size: 64, offset: 896)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !795, file: !796, line: 105, baseType: !463, size: 64, offset: 960)
!1464 = !DIDerivedType(tag: DW_TAG_member, scope: !795, file: !796, line: 107, baseType: !1465, size: 128, offset: 1024)
!1465 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !795, file: !796, line: 107, size: 128, elements: !1466)
!1466 = !{!1467, !1468}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !1465, file: !796, line: 108, baseType: !503, size: 128)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !1465, file: !796, line: 109, baseType: !1469, size: 64)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !795, file: !796, line: 111, baseType: !503, size: 128, offset: 1152)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !795, file: !796, line: 112, baseType: !503, size: 128, offset: 1280)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !795, file: !796, line: 120, baseType: !1473, size: 128, offset: 1408)
!1473 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !795, file: !796, line: 116, size: 128, elements: !1474)
!1474 = !{!1475, !1476, !1477}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !1473, file: !796, line: 117, baseType: !974, size: 128)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !1473, file: !796, line: 118, baseType: !805, size: 128)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !1473, file: !796, line: 119, baseType: !1356, size: 128, align: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !788, file: !44, line: 1866, baseType: !1479, size: 64, offset: 64)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64)
!1480 = !DISubroutineType(types: !1481)
!1481 = !{!873, !794, !763, !1482}
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1484, line: 10, size: 128, elements: !1485)
!1484 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1485 = !{!1486, !1490}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1483, file: !1484, line: 11, baseType: !1487, size: 64)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64)
!1488 = !DISubroutineType(types: !1489)
!1489 = !{null, !463}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1483, file: !1484, line: 12, baseType: !463, size: 64, offset: 64)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !788, file: !44, line: 1867, baseType: !1492, size: 64, offset: 128)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!1493 = !DISubroutineType(types: !1494)
!1494 = !{!429, !763, !429}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !788, file: !44, line: 1868, baseType: !1496, size: 64, offset: 192)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64)
!1497 = !DISubroutineType(types: !1498)
!1498 = !{!1499, !763, !429}
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 64)
!1500 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !788, file: !44, line: 1870, baseType: !1502, size: 64, offset: 256)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 64)
!1503 = !DISubroutineType(types: !1504)
!1504 = !{!429, !794, !899, !429}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !788, file: !44, line: 1872, baseType: !1506, size: 64, offset: 320)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 64)
!1507 = !DISubroutineType(types: !1508)
!1508 = !{!429, !763, !794, !767, !918}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !788, file: !44, line: 1873, baseType: !1510, size: 64, offset: 384)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64)
!1511 = !DISubroutineType(types: !1512)
!1512 = !{!429, !794, !763, !794}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !788, file: !44, line: 1874, baseType: !1514, size: 64, offset: 448)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{!429, !763, !794}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !788, file: !44, line: 1875, baseType: !1518, size: 64, offset: 512)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!429, !763, !794, !873}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !788, file: !44, line: 1876, baseType: !1522, size: 64, offset: 576)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!1523 = !DISubroutineType(types: !1524)
!1524 = !{!429, !763, !794, !767}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !788, file: !44, line: 1877, baseType: !1514, size: 64, offset: 640)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !788, file: !44, line: 1878, baseType: !1527, size: 64, offset: 704)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{!429, !763, !794, !767, !932}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !788, file: !44, line: 1879, baseType: !1531, size: 64, offset: 768)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64)
!1532 = !DISubroutineType(types: !1533)
!1533 = !{!429, !763, !794, !763, !794, !7}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !788, file: !44, line: 1881, baseType: !1535, size: 64, offset: 832)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 64)
!1536 = !DISubroutineType(types: !1537)
!1537 = !{!429, !794, !1538}
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !1540)
!1540 = !{!1541, !1542, !1543, !1544, !1545, !1546, !1551, !1552, !1553}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1539, file: !44, line: 220, baseType: !7, size: 32)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1539, file: !44, line: 221, baseType: !767, size: 16, offset: 32)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1539, file: !44, line: 222, baseType: !770, size: 32, offset: 64)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1539, file: !44, line: 223, baseType: !778, size: 32, offset: 96)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1539, file: !44, line: 224, baseType: !937, size: 64, offset: 128)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1539, file: !44, line: 225, baseType: !1547, size: 128, offset: 192)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1136, line: 13, size: 128, elements: !1548)
!1548 = !{!1549, !1550}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1547, file: !1136, line: 14, baseType: !1135, size: 64)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1547, file: !1136, line: 15, baseType: !447, size: 64, offset: 64)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1539, file: !44, line: 226, baseType: !1547, size: 128, offset: 320)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1539, file: !44, line: 227, baseType: !1547, size: 128, offset: 448)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1539, file: !44, line: 234, baseType: !1554, size: 64, offset: 576)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !1556)
!1556 = !{!1557, !1567, !1568, !1569, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1866, !2052, !2061, !2062, !2063, !2064, !2065, !2066, !2067}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1555, file: !44, line: 920, baseType: !1558, size: 128)
!1558 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1555, file: !44, line: 917, size: 128, elements: !1559)
!1559 = !{!1560, !1566}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1558, file: !44, line: 918, baseType: !1561, size: 64)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1562, line: 58, size: 64, elements: !1563)
!1562 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1563 = !{!1564}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1561, file: !1562, line: 59, baseType: !1565, size: 64)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1558, file: !44, line: 919, baseType: !1356, size: 128, align: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1555, file: !44, line: 921, baseType: !907, size: 128, offset: 128)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1555, file: !44, line: 922, baseType: !763, size: 64, offset: 256)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1555, file: !44, line: 923, baseType: !1570, size: 64, offset: 320)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 64)
!1571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1572)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !1573)
!1573 = !{!1574, !1575, !1579, !1590, !1594, !1621, !1622, !1626, !1639, !1640, !1647, !1651, !1652, !1656, !1657, !1661, !1666, !1667, !1671, !1675, !1784, !1788, !1792, !1796, !1797, !1803, !1807, !1812, !1816, !1820, !1824, !1828}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1572, file: !44, line: 1823, baseType: !965, size: 64)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !1572, file: !44, line: 1824, baseType: !1576, size: 64, offset: 64)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64)
!1577 = !DISubroutineType(types: !1578)
!1578 = !{!937, !1554, !937, !429}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1572, file: !44, line: 1825, baseType: !1580, size: 64, offset: 128)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64)
!1581 = !DISubroutineType(types: !1582)
!1582 = !{!1583, !1554, !899, !1586, !1589}
!1583 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !471, line: 60, baseType: !1584)
!1584 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !603, line: 73, baseType: !1585)
!1585 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !603, line: 15, baseType: !447)
!1586 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !471, line: 55, baseType: !1587)
!1587 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !603, line: 72, baseType: !1588)
!1588 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !603, line: 16, baseType: !435)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1572, file: !44, line: 1826, baseType: !1591, size: 64, offset: 192)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 64)
!1592 = !DISubroutineType(types: !1593)
!1593 = !{!1583, !1554, !873, !1586, !1589}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !1572, file: !44, line: 1827, baseType: !1595, size: 64, offset: 256)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 64)
!1596 = !DISubroutineType(types: !1597)
!1597 = !{!1583, !1598, !1619}
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64)
!1599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !1600)
!1600 = !{!1601, !1602, !1603, !1607, !1608, !1609, !1611, !1612}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1599, file: !44, line: 321, baseType: !1554, size: 64)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1599, file: !44, line: 326, baseType: !937, size: 64, offset: 64)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1599, file: !44, line: 327, baseType: !1604, size: 64, offset: 128)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64)
!1605 = !DISubroutineType(types: !1606)
!1606 = !{null, !1598, !447, !447}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1599, file: !44, line: 328, baseType: !463, size: 64, offset: 192)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1599, file: !44, line: 329, baseType: !429, size: 32, offset: 256)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1599, file: !44, line: 330, baseType: !1610, size: 16, offset: 288)
!1610 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !460, line: 19, baseType: !443)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1599, file: !44, line: 331, baseType: !1610, size: 16, offset: 304)
!1612 = !DIDerivedType(tag: DW_TAG_member, scope: !1599, file: !44, line: 332, baseType: !1613, size: 64, offset: 320)
!1613 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1599, file: !44, line: 332, size: 64, elements: !1614)
!1614 = !{!1615, !1616}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1613, file: !44, line: 333, baseType: !7, size: 32)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1613, file: !44, line: 334, baseType: !1617, size: 64)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 64)
!1618 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !44, line: 64, flags: DIFlagFwdDecl)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !1572, file: !44, line: 1828, baseType: !1595, size: 64, offset: 320)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !1572, file: !44, line: 1829, baseType: !1623, size: 64, offset: 384)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!1624 = !DISubroutineType(types: !1625)
!1625 = !{!429, !1598, !918}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !1572, file: !44, line: 1830, baseType: !1627, size: 64, offset: 448)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64)
!1628 = !DISubroutineType(types: !1629)
!1629 = !{!429, !1554, !1630}
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !1632)
!1632 = !{!1633, !1638}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !1631, file: !44, line: 1777, baseType: !1634, size: 64)
!1634 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !1635)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DISubroutineType(types: !1637)
!1637 = !{!429, !1630, !873, !429, !937, !510, !7}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1631, file: !44, line: 1778, baseType: !937, size: 64, offset: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !1572, file: !44, line: 1831, baseType: !1627, size: 64, offset: 512)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1572, file: !44, line: 1832, baseType: !1641, size: 64, offset: 576)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 64)
!1642 = !DISubroutineType(types: !1643)
!1643 = !{!1644, !1554, !1645}
!1644 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !442, line: 52, baseType: !7)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 64)
!1646 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !951, line: 27, flags: DIFlagFwdDecl)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !1572, file: !44, line: 1833, baseType: !1648, size: 64, offset: 640)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64)
!1649 = !DISubroutineType(types: !1650)
!1650 = !{!447, !1554, !7, !435}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !1572, file: !44, line: 1834, baseType: !1648, size: 64, offset: 704)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1572, file: !44, line: 1835, baseType: !1653, size: 64, offset: 768)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64)
!1654 = !DISubroutineType(types: !1655)
!1655 = !{!429, !1554, !666}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !1572, file: !44, line: 1836, baseType: !435, size: 64, offset: 832)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1572, file: !44, line: 1837, baseType: !1658, size: 64, offset: 896)
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1659, size: 64)
!1659 = !DISubroutineType(types: !1660)
!1660 = !{!429, !763, !1554}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1572, file: !44, line: 1838, baseType: !1662, size: 64, offset: 960)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = !DISubroutineType(types: !1664)
!1664 = !{!429, !1554, !1665}
!1665 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !463)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1572, file: !44, line: 1839, baseType: !1658, size: 64, offset: 1024)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !1572, file: !44, line: 1840, baseType: !1668, size: 64, offset: 1088)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 64)
!1669 = !DISubroutineType(types: !1670)
!1670 = !{!429, !1554, !937, !937, !429}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !1572, file: !44, line: 1841, baseType: !1672, size: 64, offset: 1152)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64)
!1673 = !DISubroutineType(types: !1674)
!1674 = !{!429, !429, !1554, !429}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1572, file: !44, line: 1842, baseType: !1676, size: 64, offset: 1216)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 64)
!1677 = !DISubroutineType(types: !1678)
!1678 = !{!429, !1554, !429, !1679}
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 64)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !1681)
!1681 = !{!1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1713, !1714, !1715, !1728, !1760}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !1680, file: !44, line: 1063, baseType: !1679, size: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !1680, file: !44, line: 1064, baseType: !503, size: 128, offset: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !1680, file: !44, line: 1065, baseType: !974, size: 128, offset: 192)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !1680, file: !44, line: 1066, baseType: !503, size: 128, offset: 320)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !1680, file: !44, line: 1069, baseType: !503, size: 128, offset: 448)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !1680, file: !44, line: 1072, baseType: !1665, size: 64, offset: 576)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !1680, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !1680, file: !44, line: 1074, baseType: !434, size: 8, offset: 672)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !1680, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !1680, file: !44, line: 1076, baseType: !429, size: 32, offset: 736)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !1680, file: !44, line: 1077, baseType: !1337, size: 128, offset: 768)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !1680, file: !44, line: 1078, baseType: !1554, size: 64, offset: 896)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !1680, file: !44, line: 1079, baseType: !937, size: 64, offset: 960)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !1680, file: !44, line: 1080, baseType: !937, size: 64, offset: 1024)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !1680, file: !44, line: 1082, baseType: !1697, size: 64, offset: 1088)
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 64)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !1699)
!1699 = !{!1700, !1708, !1709, !1710, !1711, !1712}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1698, file: !44, line: 1315, baseType: !1701)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1702, line: 20, baseType: !1703)
!1702 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1702, line: 11, elements: !1704)
!1704 = !{!1705}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1703, file: !1702, line: 12, baseType: !1706)
!1706 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !582, line: 33, baseType: !1707)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !582, line: 31, elements: !519)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1698, file: !44, line: 1316, baseType: !429, size: 32)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1698, file: !44, line: 1317, baseType: !429, size: 32, offset: 32)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1698, file: !44, line: 1318, baseType: !1697, size: 64, offset: 64)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1698, file: !44, line: 1319, baseType: !1554, size: 64, offset: 128)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1698, file: !44, line: 1320, baseType: !1356, size: 128, align: 64, offset: 192)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !1680, file: !44, line: 1084, baseType: !435, size: 64, offset: 1152)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !1680, file: !44, line: 1085, baseType: !435, size: 64, offset: 1216)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !1680, file: !44, line: 1087, baseType: !1716, size: 64, offset: 1280)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1718)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !1719)
!1719 = !{!1720, !1724}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !1718, file: !44, line: 1012, baseType: !1721, size: 64)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64)
!1722 = !DISubroutineType(types: !1723)
!1723 = !{null, !1679, !1679}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !1718, file: !44, line: 1013, baseType: !1725, size: 64, offset: 64)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!1726 = !DISubroutineType(types: !1727)
!1727 = !{null, !1679}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !1680, file: !44, line: 1088, baseType: !1729, size: 64, offset: 1344)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 64)
!1730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1731)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !1732)
!1732 = !{!1733, !1737, !1741, !1742, !1746, !1750, !1754, !1759}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !1731, file: !44, line: 1017, baseType: !1734, size: 64)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64)
!1735 = !DISubroutineType(types: !1736)
!1736 = !{!1665, !1665}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !1731, file: !44, line: 1018, baseType: !1738, size: 64, offset: 64)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 64)
!1739 = !DISubroutineType(types: !1740)
!1740 = !{null, !1665}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !1731, file: !44, line: 1019, baseType: !1725, size: 64, offset: 128)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !1731, file: !44, line: 1020, baseType: !1743, size: 64, offset: 192)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64)
!1744 = !DISubroutineType(types: !1745)
!1745 = !{!429, !1679, !429}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !1731, file: !44, line: 1021, baseType: !1747, size: 64, offset: 256)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 64)
!1748 = !DISubroutineType(types: !1749)
!1749 = !{!918, !1679}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !1731, file: !44, line: 1022, baseType: !1751, size: 64, offset: 320)
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64)
!1752 = !DISubroutineType(types: !1753)
!1753 = !{!429, !1679, !429, !506}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !1731, file: !44, line: 1023, baseType: !1755, size: 64, offset: 384)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 64)
!1756 = !DISubroutineType(types: !1757)
!1757 = !{null, !1679, !1758}
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !1731, file: !44, line: 1024, baseType: !1747, size: 64, offset: 448)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !1680, file: !44, line: 1097, baseType: !1761, size: 256, offset: 1408)
!1761 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1680, file: !44, line: 1089, size: 256, elements: !1762)
!1762 = !{!1763, !1772, !1778}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !1761, file: !44, line: 1090, baseType: !1764, size: 256)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !1765, line: 10, size: 256, elements: !1766)
!1765 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1766 = !{!1767, !1768, !1771}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1764, file: !1765, line: 11, baseType: !459, size: 32)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1764, file: !1765, line: 12, baseType: !1769, size: 64, offset: 64)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 64)
!1770 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !1765, line: 5, flags: DIFlagFwdDecl)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1764, file: !1765, line: 13, baseType: !503, size: 128, offset: 128)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !1761, file: !44, line: 1091, baseType: !1773, size: 64)
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !1765, line: 17, size: 64, elements: !1774)
!1774 = !{!1775}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1773, file: !1765, line: 18, baseType: !1776, size: 64)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64)
!1777 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !1765, line: 16, flags: DIFlagFwdDecl)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !1761, file: !44, line: 1096, baseType: !1779, size: 192)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1761, file: !44, line: 1092, size: 192, elements: !1780)
!1780 = !{!1781, !1782, !1783}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1779, file: !44, line: 1093, baseType: !503, size: 128)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1779, file: !44, line: 1094, baseType: !429, size: 32, offset: 128)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !1779, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !1572, file: !44, line: 1843, baseType: !1785, size: 64, offset: 1280)
!1785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1786, size: 64)
!1786 = !DISubroutineType(types: !1787)
!1787 = !{!1583, !1554, !747, !429, !1586, !1589, !429}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1572, file: !44, line: 1844, baseType: !1789, size: 64, offset: 1344)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 64)
!1790 = !DISubroutineType(types: !1791)
!1791 = !{!435, !1554, !435, !435, !435, !435}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !1572, file: !44, line: 1845, baseType: !1793, size: 64, offset: 1408)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 64)
!1794 = !DISubroutineType(types: !1795)
!1795 = !{!429, !429}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !1572, file: !44, line: 1846, baseType: !1676, size: 64, offset: 1472)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !1572, file: !44, line: 1847, baseType: !1798, size: 64, offset: 1536)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{!1583, !1801, !1554, !1589, !1586, !7}
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64)
!1802 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !451, line: 53, flags: DIFlagFwdDecl)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !1572, file: !44, line: 1848, baseType: !1804, size: 64, offset: 1600)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64)
!1805 = !DISubroutineType(types: !1806)
!1806 = !{!1583, !1554, !1589, !1801, !1586, !7}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !1572, file: !44, line: 1849, baseType: !1808, size: 64, offset: 1664)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64)
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!429, !1554, !447, !1811, !1758}
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !1572, file: !44, line: 1850, baseType: !1813, size: 64, offset: 1728)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1814 = !DISubroutineType(types: !1815)
!1815 = !{!447, !1554, !429, !937, !937}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !1572, file: !44, line: 1852, baseType: !1817, size: 64, offset: 1792)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 64)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{null, !1048, !1554}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !1572, file: !44, line: 1856, baseType: !1821, size: 64, offset: 1856)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 64)
!1822 = !DISubroutineType(types: !1823)
!1823 = !{!1583, !1554, !937, !1554, !937, !1586, !7}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !1572, file: !44, line: 1858, baseType: !1825, size: 64, offset: 1920)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1826 = !DISubroutineType(types: !1827)
!1827 = !{!937, !1554, !937, !1554, !937, !937, !7}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !1572, file: !44, line: 1861, baseType: !1668, size: 64, offset: 1984)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1555, file: !44, line: 929, baseType: !844, offset: 384)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1555, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1555, file: !44, line: 931, baseType: !1094, size: 64, offset: 448)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1555, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1555, file: !44, line: 933, baseType: !1394, size: 32, offset: 544)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1555, file: !44, line: 934, baseType: !1090, size: 192, offset: 576)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1555, file: !44, line: 935, baseType: !937, size: 64, offset: 768)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1555, file: !44, line: 936, baseType: !1837, size: 192, offset: 832)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !1838)
!1838 = !{!1839, !1840, !1862, !1863, !1864, !1865}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1837, file: !44, line: 886, baseType: !1701)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1837, file: !44, line: 887, baseType: !1841, size: 64)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 64)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1843)
!1843 = !{!1844, !1845, !1846, !1847, !1851, !1852, !1853, !1854}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1842, file: !53, line: 61, baseType: !465, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1842, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1842, file: !53, line: 63, baseType: !844, offset: 64)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1842, file: !53, line: 65, baseType: !1848, size: 256, offset: 64)
!1848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !970, size: 256, elements: !1849)
!1849 = !{!1850}
!1850 = !DISubrange(count: 4)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1842, file: !53, line: 66, baseType: !970, size: 64, offset: 320)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1842, file: !53, line: 68, baseType: !1337, size: 128, offset: 384)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1842, file: !53, line: 69, baseType: !1356, size: 128, align: 64, offset: 512)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1842, file: !53, line: 70, baseType: !1855, size: 128, offset: 640)
!1855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1856, size: 128, elements: !651)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1857)
!1857 = !{!1858, !1859}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1856, file: !53, line: 55, baseType: !429, size: 32)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1856, file: !53, line: 56, baseType: !1860, size: 64, offset: 64)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64)
!1861 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !53, line: 56, flags: DIFlagFwdDecl)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !1837, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1837, file: !44, line: 889, baseType: !770, size: 32, offset: 96)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1837, file: !44, line: 889, baseType: !770, size: 32, offset: 128)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !1837, file: !44, line: 890, baseType: !429, size: 32, offset: 160)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1555, file: !44, line: 937, baseType: !1867, size: 64, offset: 1024)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1869)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1870, line: 111, size: 1280, elements: !1871)
!1870 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1871 = !{!1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1891, !1892, !1893, !1894, !1895, !1896, !2007, !2008, !2009, !2010, !2036, !2037, !2047}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1869, file: !1870, line: 112, baseType: !470, size: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1869, file: !1870, line: 120, baseType: !770, size: 32, offset: 32)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1869, file: !1870, line: 121, baseType: !778, size: 32, offset: 64)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1869, file: !1870, line: 122, baseType: !770, size: 32, offset: 96)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1869, file: !1870, line: 123, baseType: !778, size: 32, offset: 128)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1869, file: !1870, line: 124, baseType: !770, size: 32, offset: 160)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1869, file: !1870, line: 125, baseType: !778, size: 32, offset: 192)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1869, file: !1870, line: 126, baseType: !770, size: 32, offset: 224)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1869, file: !1870, line: 127, baseType: !778, size: 32, offset: 256)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1869, file: !1870, line: 128, baseType: !7, size: 32, offset: 288)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1869, file: !1870, line: 129, baseType: !1883, size: 64, offset: 320)
!1883 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1884, line: 26, baseType: !1885)
!1884 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1884, line: 24, size: 64, elements: !1886)
!1886 = !{!1887}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1885, file: !1884, line: 25, baseType: !1888, size: 64)
!1888 = !DICompositeType(tag: DW_TAG_array_type, baseType: !439, size: 64, elements: !1889)
!1889 = !{!1890}
!1890 = !DISubrange(count: 2)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1869, file: !1870, line: 130, baseType: !1883, size: 64, offset: 384)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1869, file: !1870, line: 131, baseType: !1883, size: 64, offset: 448)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1869, file: !1870, line: 132, baseType: !1883, size: 64, offset: 512)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1869, file: !1870, line: 133, baseType: !1883, size: 64, offset: 576)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1869, file: !1870, line: 135, baseType: !434, size: 8, offset: 640)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1869, file: !1870, line: 137, baseType: !1897, size: 64, offset: 704)
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1898, size: 64)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1899, line: 189, size: 1664, elements: !1900)
!1899 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1900 = !{!1901, !1902, !1907, !1912, !1913, !1916, !1917, !1922, !1923, !1924, !1925, !1928, !1929, !1930, !1932, !1933, !1971, !1992}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1898, file: !1899, line: 190, baseType: !465, size: 32)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1898, file: !1899, line: 191, baseType: !1903, size: 32, offset: 32)
!1903 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1899, line: 28, baseType: !1904)
!1904 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !471, line: 98, baseType: !1905)
!1905 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !460, line: 20, baseType: !1906)
!1906 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !440, line: 26, baseType: !429)
!1907 = !DIDerivedType(tag: DW_TAG_member, scope: !1898, file: !1899, line: 192, baseType: !1908, size: 192, offset: 64)
!1908 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1898, file: !1899, line: 192, size: 192, elements: !1909)
!1909 = !{!1910, !1911}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1908, file: !1899, line: 193, baseType: !503, size: 128)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1908, file: !1899, line: 194, baseType: !495, size: 192, align: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1898, file: !1899, line: 199, baseType: !1261, size: 256, offset: 256)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1898, file: !1899, line: 200, baseType: !1914, size: 64, offset: 512)
!1914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 64)
!1915 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1899, line: 200, flags: DIFlagFwdDecl)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1898, file: !1899, line: 201, baseType: !463, size: 64, offset: 576)
!1917 = !DIDerivedType(tag: DW_TAG_member, scope: !1898, file: !1899, line: 202, baseType: !1918, size: 64, offset: 640)
!1918 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1898, file: !1899, line: 202, size: 64, elements: !1919)
!1919 = !{!1920, !1921}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1918, file: !1899, line: 203, baseType: !1135, size: 64)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1918, file: !1899, line: 204, baseType: !1135, size: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1898, file: !1899, line: 206, baseType: !1135, size: 64, offset: 704)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1898, file: !1899, line: 207, baseType: !770, size: 32, offset: 768)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1898, file: !1899, line: 208, baseType: !778, size: 32, offset: 800)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1898, file: !1899, line: 209, baseType: !1926, size: 32, offset: 832)
!1926 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1899, line: 31, baseType: !1927)
!1927 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !471, line: 104, baseType: !459)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1898, file: !1899, line: 210, baseType: !438, size: 16, offset: 864)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1898, file: !1899, line: 211, baseType: !438, size: 16, offset: 880)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1898, file: !1899, line: 215, baseType: !1931, size: 16, offset: 896)
!1931 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1898, file: !1899, line: 222, baseType: !435, size: 64, offset: 960)
!1933 = !DIDerivedType(tag: DW_TAG_member, scope: !1898, file: !1899, line: 239, baseType: !1934, size: 320, offset: 1024)
!1934 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1898, file: !1899, line: 239, size: 320, elements: !1935)
!1935 = !{!1936, !1963}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1934, file: !1899, line: 240, baseType: !1937, size: 320)
!1937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1899, line: 108, size: 320, elements: !1938)
!1938 = !{!1939, !1940, !1952, !1955, !1962}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1937, file: !1899, line: 110, baseType: !435, size: 64)
!1940 = !DIDerivedType(tag: DW_TAG_member, scope: !1937, file: !1899, line: 111, baseType: !1941, size: 64, offset: 64)
!1941 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1937, file: !1899, line: 111, size: 64, elements: !1942)
!1942 = !{!1943, !1951}
!1943 = !DIDerivedType(tag: DW_TAG_member, scope: !1941, file: !1899, line: 112, baseType: !1944, size: 64)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1941, file: !1899, line: 112, size: 64, elements: !1945)
!1945 = !{!1946, !1947}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1944, file: !1899, line: 114, baseType: !1610, size: 16)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1944, file: !1899, line: 115, baseType: !1948, size: 48, offset: 16)
!1948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !875, size: 48, elements: !1949)
!1949 = !{!1950}
!1950 = !DISubrange(count: 6)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1941, file: !1899, line: 121, baseType: !435, size: 64)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1937, file: !1899, line: 123, baseType: !1953, size: 64, offset: 128)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1899, line: 96, flags: DIFlagFwdDecl)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1937, file: !1899, line: 124, baseType: !1956, size: 64, offset: 192)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 64)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1899, line: 102, size: 192, elements: !1958)
!1958 = !{!1959, !1960, !1961}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1957, file: !1899, line: 103, baseType: !1356, size: 128, align: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1957, file: !1899, line: 104, baseType: !465, size: 32, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1957, file: !1899, line: 105, baseType: !918, size: 8, offset: 160)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1937, file: !1899, line: 125, baseType: !873, size: 64, offset: 256)
!1963 = !DIDerivedType(tag: DW_TAG_member, scope: !1934, file: !1899, line: 241, baseType: !1964, size: 320)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1934, file: !1899, line: 241, size: 320, elements: !1965)
!1965 = !{!1966, !1967, !1968, !1969, !1970}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1964, file: !1899, line: 242, baseType: !435, size: 64)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1964, file: !1899, line: 243, baseType: !435, size: 64, offset: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1964, file: !1899, line: 244, baseType: !1953, size: 64, offset: 128)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1964, file: !1899, line: 245, baseType: !1956, size: 64, offset: 192)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1964, file: !1899, line: 246, baseType: !899, size: 64, offset: 256)
!1971 = !DIDerivedType(tag: DW_TAG_member, scope: !1898, file: !1899, line: 254, baseType: !1972, size: 256, offset: 1344)
!1972 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1898, file: !1899, line: 254, size: 256, elements: !1973)
!1973 = !{!1974, !1980}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1972, file: !1899, line: 255, baseType: !1975, size: 256)
!1975 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1899, line: 128, size: 256, elements: !1976)
!1976 = !{!1977, !1978}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1975, file: !1899, line: 129, baseType: !463, size: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1975, file: !1899, line: 130, baseType: !1979, size: 256)
!1979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 256, elements: !1849)
!1980 = !DIDerivedType(tag: DW_TAG_member, scope: !1972, file: !1899, line: 256, baseType: !1981, size: 256)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1972, file: !1899, line: 256, size: 256, elements: !1982)
!1982 = !{!1983, !1984}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1981, file: !1899, line: 258, baseType: !503, size: 128)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1981, file: !1899, line: 259, baseType: !1985, size: 128, offset: 128)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1986, line: 22, size: 128, elements: !1987)
!1986 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1987 = !{!1988, !1991}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1985, file: !1986, line: 23, baseType: !1989, size: 64)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 64)
!1990 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1986, line: 23, flags: DIFlagFwdDecl)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1985, file: !1986, line: 24, baseType: !435, size: 64, offset: 64)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1898, file: !1899, line: 274, baseType: !1993, size: 64, offset: 1600)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 64)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1899, line: 170, size: 192, elements: !1995)
!1995 = !{!1996, !2005, !2006}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1994, file: !1899, line: 171, baseType: !1997, size: 64)
!1997 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1899, line: 165, baseType: !1998)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = !DISubroutineType(types: !2000)
!2000 = !{!429, !1897, !2001, !2003, !1897}
!2001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 64)
!2002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1954)
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 64)
!2004 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1975)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1994, file: !1899, line: 172, baseType: !1897, size: 64, offset: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1994, file: !1899, line: 173, baseType: !1953, size: 64, offset: 128)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1869, file: !1870, line: 138, baseType: !1897, size: 64, offset: 768)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1869, file: !1870, line: 139, baseType: !1897, size: 64, offset: 832)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1869, file: !1870, line: 140, baseType: !1897, size: 64, offset: 896)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1869, file: !1870, line: 145, baseType: !2011, size: 64, offset: 960)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 64)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !2013, line: 13, size: 896, elements: !2014)
!2013 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!2014 = !{!2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2012, file: !2013, line: 14, baseType: !465, size: 32)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !2012, file: !2013, line: 15, baseType: !470, size: 32, offset: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !2012, file: !2013, line: 16, baseType: !470, size: 32, offset: 64)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !2012, file: !2013, line: 21, baseType: !1094, size: 64, offset: 128)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !2012, file: !2013, line: 27, baseType: !435, size: 64, offset: 192)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !2012, file: !2013, line: 28, baseType: !435, size: 64, offset: 256)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !2012, file: !2013, line: 29, baseType: !1094, size: 64, offset: 320)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !2012, file: !2013, line: 32, baseType: !974, size: 128, offset: 384)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2012, file: !2013, line: 33, baseType: !770, size: 32, offset: 512)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2012, file: !2013, line: 37, baseType: !1094, size: 64, offset: 576)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !2012, file: !2013, line: 44, baseType: !2026, size: 256, offset: 640)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !2027, line: 15, size: 256, elements: !2028)
!2027 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!2028 = !{!2029, !2030, !2031, !2032, !2033, !2034, !2035}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2026, file: !2027, line: 16, baseType: !576)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2026, file: !2027, line: 18, baseType: !429, size: 32)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !2026, file: !2027, line: 19, baseType: !429, size: 32, offset: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !2026, file: !2027, line: 20, baseType: !429, size: 32, offset: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !2026, file: !2027, line: 21, baseType: !429, size: 32, offset: 96)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2026, file: !2027, line: 22, baseType: !435, size: 64, offset: 128)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2026, file: !2027, line: 23, baseType: !435, size: 64, offset: 192)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1869, file: !1870, line: 146, baseType: !1426, size: 64, offset: 1024)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1869, file: !1870, line: 147, baseType: !2038, size: 64, offset: 1088)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1870, line: 25, size: 64, elements: !2040)
!2040 = !{!2041, !2042, !2043}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2039, file: !1870, line: 26, baseType: !470, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2039, file: !1870, line: 27, baseType: !429, size: 32, offset: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2039, file: !1870, line: 28, baseType: !2044, offset: 64)
!2044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !778, elements: !2045)
!2045 = !{!2046}
!2046 = !DISubrange(count: 0)
!2047 = !DIDerivedType(tag: DW_TAG_member, scope: !1869, file: !1870, line: 149, baseType: !2048, size: 128, offset: 1152)
!2048 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1869, file: !1870, line: 149, size: 128, elements: !2049)
!2049 = !{!2050, !2051}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2048, file: !1870, line: 150, baseType: !429, size: 32)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2048, file: !1870, line: 151, baseType: !1356, size: 128, align: 64)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1555, file: !44, line: 938, baseType: !2053, size: 256, offset: 1088)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !2054)
!2054 = !{!2055, !2056, !2057, !2058, !2059, !2060}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2053, file: !44, line: 897, baseType: !435, size: 64)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2053, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !2053, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !2053, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !2053, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !2053, file: !44, line: 904, baseType: !937, size: 64, offset: 192)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1555, file: !44, line: 940, baseType: !510, size: 64, offset: 1344)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1555, file: !44, line: 945, baseType: !463, size: 64, offset: 1408)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1555, file: !44, line: 949, baseType: !503, size: 128, offset: 1472)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1555, file: !44, line: 950, baseType: !503, size: 128, offset: 1600)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1555, file: !44, line: 952, baseType: !759, size: 64, offset: 1728)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1555, file: !44, line: 953, baseType: !1418, size: 32, offset: 1792)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1555, file: !44, line: 954, baseType: !1418, size: 32, offset: 1824)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !788, file: !44, line: 1882, baseType: !2069, size: 64, offset: 896)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 64)
!2070 = !DISubroutineType(types: !2071)
!2071 = !{!429, !916, !2072, !459, !7}
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 64)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !2074, line: 22, size: 1152, elements: !2075)
!2074 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!2075 = !{!2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !2073, file: !2074, line: 23, baseType: !459, size: 32)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2073, file: !2074, line: 24, baseType: !767, size: 16, offset: 32)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !2073, file: !2074, line: 25, baseType: !7, size: 32, offset: 64)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !2073, file: !2074, line: 26, baseType: !1927, size: 32, offset: 96)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !2073, file: !2074, line: 27, baseType: !510, size: 64, offset: 128)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !2073, file: !2074, line: 28, baseType: !510, size: 64, offset: 192)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2073, file: !2074, line: 37, baseType: !510, size: 64, offset: 256)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2073, file: !2074, line: 38, baseType: !932, size: 32, offset: 320)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !2073, file: !2074, line: 39, baseType: !932, size: 32, offset: 352)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2073, file: !2074, line: 40, baseType: !770, size: 32, offset: 384)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2073, file: !2074, line: 41, baseType: !778, size: 32, offset: 416)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2073, file: !2074, line: 42, baseType: !937, size: 64, offset: 448)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !2073, file: !2074, line: 43, baseType: !1547, size: 128, offset: 512)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !2073, file: !2074, line: 44, baseType: !1547, size: 128, offset: 640)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !2073, file: !2074, line: 45, baseType: !1547, size: 128, offset: 768)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !2073, file: !2074, line: 46, baseType: !1547, size: 128, offset: 896)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2073, file: !2074, line: 47, baseType: !510, size: 64, offset: 1024)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !2073, file: !2074, line: 48, baseType: !510, size: 64, offset: 1088)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !788, file: !44, line: 1883, baseType: !2095, size: 64, offset: 960)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 64)
!2096 = !DISubroutineType(types: !2097)
!2097 = !{!1583, !794, !899, !1586}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !788, file: !44, line: 1884, baseType: !2099, size: 64, offset: 1024)
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 64)
!2100 = !DISubroutineType(types: !2101)
!2101 = !{!429, !763, !2102, !510, !510}
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!2103 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !788, file: !44, line: 1886, baseType: !2105, size: 64, offset: 1088)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64)
!2106 = !DISubroutineType(types: !2107)
!2107 = !{!429, !763, !2108, !429}
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !788, file: !44, line: 1887, baseType: !2110, size: 64, offset: 1152)
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 64)
!2111 = !DISubroutineType(types: !2112)
!2112 = !{!429, !763, !794, !1554, !7, !767}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !788, file: !44, line: 1890, baseType: !1522, size: 64, offset: 1216)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !788, file: !44, line: 1891, baseType: !2115, size: 64, offset: 1280)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 64)
!2116 = !DISubroutineType(types: !2117)
!2117 = !{!429, !763, !1499, !429}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !764, file: !44, line: 623, baseType: !927, size: 64, offset: 192)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !764, file: !44, line: 624, baseType: !759, size: 64, offset: 256)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !764, file: !44, line: 631, baseType: !435, size: 64, offset: 320)
!2121 = !DIDerivedType(tag: DW_TAG_member, scope: !764, file: !44, line: 639, baseType: !2122, size: 32, offset: 384)
!2122 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !764, file: !44, line: 639, size: 32, elements: !2123)
!2123 = !{!2124, !2126}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2122, file: !44, line: 640, baseType: !2125, size: 32)
!2125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2122, file: !44, line: 641, baseType: !7, size: 32)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !764, file: !44, line: 643, baseType: !932, size: 32, offset: 416)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !764, file: !44, line: 644, baseType: !937, size: 64, offset: 448)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !764, file: !44, line: 645, baseType: !1547, size: 128, offset: 512)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !764, file: !44, line: 646, baseType: !1547, size: 128, offset: 640)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !764, file: !44, line: 647, baseType: !1547, size: 128, offset: 768)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !764, file: !44, line: 648, baseType: !844, offset: 896)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !764, file: !44, line: 649, baseType: !438, size: 16, offset: 896)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !764, file: !44, line: 650, baseType: !632, size: 8, offset: 912)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !764, file: !44, line: 651, baseType: !632, size: 8, offset: 920)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !764, file: !44, line: 652, baseType: !1249, size: 64, offset: 960)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !764, file: !44, line: 659, baseType: !435, size: 64, offset: 1024)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !764, file: !44, line: 660, baseType: !1261, size: 256, offset: 1088)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !764, file: !44, line: 662, baseType: !435, size: 64, offset: 1344)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !764, file: !44, line: 663, baseType: !435, size: 64, offset: 1408)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !764, file: !44, line: 665, baseType: !974, size: 128, offset: 1472)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !764, file: !44, line: 666, baseType: !503, size: 128, offset: 1600)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !764, file: !44, line: 675, baseType: !503, size: 128, offset: 1728)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !764, file: !44, line: 676, baseType: !503, size: 128, offset: 1856)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !764, file: !44, line: 677, baseType: !503, size: 128, offset: 1984)
!2146 = !DIDerivedType(tag: DW_TAG_member, scope: !764, file: !44, line: 678, baseType: !2147, size: 128, offset: 2112)
!2147 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !764, file: !44, line: 678, size: 128, elements: !2148)
!2148 = !{!2149, !2150}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2147, file: !44, line: 679, baseType: !970, size: 64)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2147, file: !44, line: 680, baseType: !1356, size: 128, align: 64)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !764, file: !44, line: 682, baseType: !1096, size: 64, offset: 2240)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !764, file: !44, line: 683, baseType: !1096, size: 64, offset: 2304)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !764, file: !44, line: 684, baseType: !470, size: 32, offset: 2368)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !764, file: !44, line: 685, baseType: !470, size: 32, offset: 2400)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !764, file: !44, line: 686, baseType: !470, size: 32, offset: 2432)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !764, file: !44, line: 688, baseType: !470, size: 32, offset: 2464)
!2157 = !DIDerivedType(tag: DW_TAG_member, scope: !764, file: !44, line: 690, baseType: !2158, size: 64, offset: 2496)
!2158 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !764, file: !44, line: 690, size: 64, elements: !2159)
!2159 = !{!2160, !2161}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2158, file: !44, line: 691, baseType: !1570, size: 64)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2158, file: !44, line: 692, baseType: !1001, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !764, file: !44, line: 694, baseType: !2163, size: 64, offset: 2560)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !2165)
!2165 = !{!2166, !2167, !2168, !2169}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !2164, file: !44, line: 1101, baseType: !844)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !2164, file: !44, line: 1102, baseType: !503, size: 128)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !2164, file: !44, line: 1103, baseType: !503, size: 128, offset: 128)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !2164, file: !44, line: 1104, baseType: !503, size: 128, offset: 256)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !764, file: !44, line: 695, baseType: !760, size: 1216, align: 64, offset: 2624)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !764, file: !44, line: 696, baseType: !503, size: 128, offset: 3840)
!2172 = !DIDerivedType(tag: DW_TAG_member, scope: !764, file: !44, line: 697, baseType: !2173, size: 64, offset: 3968)
!2173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !764, file: !44, line: 697, size: 64, elements: !2174)
!2174 = !{!2175, !2176, !2177, !2180, !2181}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !2173, file: !44, line: 698, baseType: !1801, size: 64)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !2173, file: !44, line: 699, baseType: !1281, size: 64)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !2173, file: !44, line: 700, baseType: !2178, size: 64)
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 64)
!2179 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !44, line: 700, flags: DIFlagFwdDecl)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !2173, file: !44, line: 701, baseType: !899, size: 64)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !2173, file: !44, line: 702, baseType: !7, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !764, file: !44, line: 705, baseType: !439, size: 32, offset: 4032)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !764, file: !44, line: 708, baseType: !439, size: 32, offset: 4064)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !764, file: !44, line: 709, baseType: !1379, size: 64, offset: 4096)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !764, file: !44, line: 720, baseType: !463, size: 64, offset: 4160)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !760, file: !44, line: 453, baseType: !2187, size: 128, offset: 64)
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !2188, line: 292, size: 128, elements: !2189)
!2188 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!2189 = !{!2190, !2191, !2192}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !2187, file: !2188, line: 293, baseType: !844)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !2187, file: !2188, line: 295, baseType: !723, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !2187, file: !2188, line: 296, baseType: !463, size: 64, offset: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !760, file: !44, line: 454, baseType: !723, size: 32, offset: 192)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !760, file: !44, line: 455, baseType: !470, size: 32, offset: 224)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !760, file: !44, line: 460, baseType: !619, size: 128, offset: 256)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !760, file: !44, line: 461, baseType: !1261, size: 256, offset: 384)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !760, file: !44, line: 462, baseType: !435, size: 64, offset: 640)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !760, file: !44, line: 463, baseType: !435, size: 64, offset: 704)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !760, file: !44, line: 464, baseType: !435, size: 64, offset: 768)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !760, file: !44, line: 465, baseType: !2201, size: 64, offset: 832)
!2201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2202, size: 64)
!2202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2203)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !2204)
!2204 = !{!2205, !2209, !2213, !2217, !2221, !2225, !2231, !2236, !2240, !2245, !2249, !2253, !2257, !2258, !2262, !2268, !2269, !2270, !2274, !2279, !2283, !2290}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !2203, file: !44, line: 368, baseType: !2206, size: 64)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{!429, !747, !1013}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !2203, file: !44, line: 369, baseType: !2210, size: 64, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 64)
!2211 = !DISubroutineType(types: !2212)
!2212 = !{!429, !1554, !747}
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !2203, file: !44, line: 372, baseType: !2214, size: 64, offset: 128)
!2214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2215, size: 64)
!2215 = !DISubroutineType(types: !2216)
!2216 = !{!429, !759, !1013}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !2203, file: !44, line: 375, baseType: !2218, size: 64, offset: 192)
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64)
!2219 = !DISubroutineType(types: !2220)
!2220 = !{!429, !747}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !2203, file: !44, line: 381, baseType: !2222, size: 64, offset: 256)
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 64)
!2223 = !DISubroutineType(types: !2224)
!2224 = !{!429, !1554, !759, !506, !7}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !2203, file: !44, line: 383, baseType: !2226, size: 64, offset: 320)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64)
!2227 = !DISubroutineType(types: !2228)
!2228 = !{null, !2229}
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 64)
!2230 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !2203, file: !44, line: 385, baseType: !2232, size: 64, offset: 384)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 64)
!2233 = !DISubroutineType(types: !2234)
!2234 = !{!429, !1554, !759, !937, !7, !7, !2235, !1758}
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !2203, file: !44, line: 388, baseType: !2237, size: 64, offset: 448)
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 64)
!2238 = !DISubroutineType(types: !2239)
!2239 = !{!429, !1554, !759, !937, !7, !7, !747, !463}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !2203, file: !44, line: 393, baseType: !2241, size: 64, offset: 512)
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 64)
!2242 = !DISubroutineType(types: !2243)
!2243 = !{!2244, !759, !2244}
!2244 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !471, line: 125, baseType: !510)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !2203, file: !44, line: 394, baseType: !2246, size: 64, offset: 576)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 64)
!2247 = !DISubroutineType(types: !2248)
!2248 = !{null, !747, !7, !7}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !2203, file: !44, line: 395, baseType: !2250, size: 64, offset: 640)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 64)
!2251 = !DISubroutineType(types: !2252)
!2252 = !{!429, !747, !723}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !2203, file: !44, line: 396, baseType: !2254, size: 64, offset: 704)
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 64)
!2255 = !DISubroutineType(types: !2256)
!2256 = !{null, !747}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !2203, file: !44, line: 397, baseType: !1595, size: 64, offset: 768)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !2203, file: !44, line: 402, baseType: !2259, size: 64, offset: 832)
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 64)
!2260 = !DISubroutineType(types: !2261)
!2261 = !{!429, !759, !747, !747, !5}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !2203, file: !44, line: 404, baseType: !2263, size: 64, offset: 896)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 64)
!2264 = !DISubroutineType(types: !2265)
!2265 = !{!918, !747, !2266}
!2266 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !2267, line: 305, baseType: !7)
!2267 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !2203, file: !44, line: 405, baseType: !2254, size: 64, offset: 960)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !2203, file: !44, line: 406, baseType: !2218, size: 64, offset: 1024)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !2203, file: !44, line: 407, baseType: !2271, size: 64, offset: 1088)
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 64)
!2272 = !DISubroutineType(types: !2273)
!2273 = !{!429, !747, !435, !435}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !2203, file: !44, line: 409, baseType: !2275, size: 64, offset: 1152)
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 64)
!2276 = !DISubroutineType(types: !2277)
!2277 = !{null, !747, !2278, !2278}
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !2203, file: !44, line: 410, baseType: !2280, size: 64, offset: 1216)
!2280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2281, size: 64)
!2281 = !DISubroutineType(types: !2282)
!2282 = !{!429, !759, !747}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !2203, file: !44, line: 413, baseType: !2284, size: 64, offset: 1280)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 64)
!2285 = !DISubroutineType(types: !2286)
!2286 = !{!429, !2287, !1554, !2289}
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 64)
!2288 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!2289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 64)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !2203, file: !44, line: 415, baseType: !2291, size: 64, offset: 1344)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 64)
!2292 = !DISubroutineType(types: !2293)
!2293 = !{null, !1554}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !760, file: !44, line: 466, baseType: !435, size: 64, offset: 896)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !760, file: !44, line: 467, baseType: !1418, size: 32, offset: 960)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !760, file: !44, line: 468, baseType: !844, offset: 992)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !760, file: !44, line: 469, baseType: !503, size: 128, offset: 1024)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !760, file: !44, line: 470, baseType: !463, size: 64, offset: 1152)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !755, file: !660, line: 87, baseType: !435, size: 64, offset: 192)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !755, file: !660, line: 94, baseType: !435, size: 64, offset: 256)
!2301 = !DIDerivedType(tag: DW_TAG_member, scope: !752, file: !660, line: 96, baseType: !2302, size: 64)
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !752, file: !660, line: 96, size: 64, elements: !2303)
!2303 = !{!2304}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !2302, file: !660, line: 101, baseType: !2305, size: 64)
!2305 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !471, line: 143, baseType: !510)
!2306 = !DIDerivedType(tag: DW_TAG_member, scope: !752, file: !660, line: 103, baseType: !2307, size: 320)
!2307 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !752, file: !660, line: 103, size: 320, elements: !2308)
!2308 = !{!2309, !2319, !2322, !2323}
!2309 = !DIDerivedType(tag: DW_TAG_member, scope: !2307, file: !660, line: 104, baseType: !2310, size: 128)
!2310 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2307, file: !660, line: 104, size: 128, elements: !2311)
!2311 = !{!2312, !2313}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !2310, file: !660, line: 105, baseType: !503, size: 128)
!2313 = !DIDerivedType(tag: DW_TAG_member, scope: !2310, file: !660, line: 106, baseType: !2314, size: 128)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2310, file: !660, line: 106, size: 128, elements: !2315)
!2315 = !{!2316, !2317, !2318}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2314, file: !660, line: 107, baseType: !747, size: 64)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2314, file: !660, line: 109, baseType: !429, size: 32, offset: 64)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !2314, file: !660, line: 110, baseType: !429, size: 32, offset: 96)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !2307, file: !660, line: 117, baseType: !2320, size: 64, offset: 128)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 64)
!2321 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !660, line: 117, flags: DIFlagFwdDecl)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !2307, file: !660, line: 119, baseType: !463, size: 64, offset: 192)
!2323 = !DIDerivedType(tag: DW_TAG_member, scope: !2307, file: !660, line: 120, baseType: !2324, size: 64, offset: 256)
!2324 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2307, file: !660, line: 120, size: 64, elements: !2325)
!2325 = !{!2326, !2327, !2328}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !2324, file: !660, line: 121, baseType: !463, size: 64)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !2324, file: !660, line: 122, baseType: !435, size: 64)
!2328 = !DIDerivedType(tag: DW_TAG_member, scope: !2324, file: !660, line: 123, baseType: !2329, size: 32)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2324, file: !660, line: 123, size: 32, elements: !2330)
!2330 = !{!2331, !2332, !2333}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !2329, file: !660, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2329, file: !660, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2329, file: !660, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2334 = !DIDerivedType(tag: DW_TAG_member, scope: !752, file: !660, line: 130, baseType: !2335, size: 192)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !752, file: !660, line: 130, size: 192, elements: !2336)
!2336 = !{!2337, !2338, !2339, !2340, !2341}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !2335, file: !660, line: 131, baseType: !435, size: 64)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !2335, file: !660, line: 134, baseType: !434, size: 8, offset: 64)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !2335, file: !660, line: 135, baseType: !434, size: 8, offset: 72)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !2335, file: !660, line: 136, baseType: !470, size: 32, offset: 96)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !2335, file: !660, line: 137, baseType: !7, size: 32, offset: 128)
!2342 = !DIDerivedType(tag: DW_TAG_member, scope: !752, file: !660, line: 139, baseType: !2343, size: 256)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !752, file: !660, line: 139, size: 256, elements: !2344)
!2344 = !{!2345, !2346, !2347}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !2343, file: !660, line: 140, baseType: !435, size: 64)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !2343, file: !660, line: 141, baseType: !470, size: 32, offset: 64)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !2343, file: !660, line: 143, baseType: !503, size: 128, offset: 128)
!2348 = !DIDerivedType(tag: DW_TAG_member, scope: !752, file: !660, line: 145, baseType: !2349, size: 256)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !752, file: !660, line: 145, size: 256, elements: !2350)
!2350 = !{!2351, !2352, !2354, !2355, !2360}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !2349, file: !660, line: 146, baseType: !435, size: 64)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !2349, file: !660, line: 147, baseType: !2353, size: 64, offset: 64)
!2353 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !678, line: 509, baseType: !747)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !2349, file: !660, line: 148, baseType: !435, size: 64, offset: 128)
!2355 = !DIDerivedType(tag: DW_TAG_member, scope: !2349, file: !660, line: 149, baseType: !2356, size: 64, offset: 192)
!2356 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2349, file: !660, line: 149, size: 64, elements: !2357)
!2357 = !{!2358, !2359}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !2356, file: !660, line: 150, baseType: !658, size: 64)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !2356, file: !660, line: 151, baseType: !470, size: 32)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2349, file: !660, line: 156, baseType: !844, offset: 256)
!2361 = !DIDerivedType(tag: DW_TAG_member, scope: !752, file: !660, line: 159, baseType: !2362, size: 128)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !752, file: !660, line: 159, size: 128, elements: !2363)
!2363 = !{!2364, !2438}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2362, file: !660, line: 161, baseType: !2365, size: 64)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !2367)
!2367 = !{!2368, !2378, !2399, !2400, !2411, !2412, !2413, !2425, !2426, !2427}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2366, file: !31, line: 111, baseType: !2369, size: 384)
!2369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !2370)
!2370 = !{!2371, !2373, !2374, !2375, !2376, !2377}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2369, file: !31, line: 20, baseType: !2372, size: 64)
!2372 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !435)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2369, file: !31, line: 21, baseType: !2372, size: 64, offset: 64)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2369, file: !31, line: 22, baseType: !2372, size: 64, offset: 128)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2369, file: !31, line: 23, baseType: !435, size: 64, offset: 192)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2369, file: !31, line: 24, baseType: !435, size: 64, offset: 256)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2369, file: !31, line: 25, baseType: !435, size: 64, offset: 320)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2366, file: !31, line: 112, baseType: !2379, size: 64, offset: 384)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 64)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2381, line: 105, size: 128, elements: !2382)
!2381 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2382 = !{!2383, !2384}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2380, file: !2381, line: 110, baseType: !435, size: 64)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2380, file: !2381, line: 118, baseType: !2385, size: 64, offset: 64)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 64)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2381, line: 95, size: 448, elements: !2387)
!2387 = !{!2388, !2389, !2394, !2395, !2396, !2397, !2398}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2386, file: !2381, line: 96, baseType: !1094, size: 64)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2386, file: !2381, line: 97, baseType: !2390, size: 64, offset: 64)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 64)
!2391 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2381, line: 60, baseType: !2392)
!2392 = !DISubroutineType(types: !2393)
!2393 = !{null, !2379}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2386, file: !2381, line: 98, baseType: !2390, size: 64, offset: 128)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2386, file: !2381, line: 99, baseType: !918, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2386, file: !2381, line: 100, baseType: !918, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2386, file: !2381, line: 101, baseType: !1356, size: 128, align: 64, offset: 256)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2386, file: !2381, line: 102, baseType: !2379, size: 64, offset: 384)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2366, file: !31, line: 113, baseType: !2380, size: 128, offset: 448)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2366, file: !31, line: 114, baseType: !2401, size: 192, offset: 576)
!2401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2402, line: 26, size: 192, elements: !2403)
!2402 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2403 = !{!2404, !2405}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2401, file: !2402, line: 27, baseType: !7, size: 32)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2401, file: !2402, line: 28, baseType: !2406, size: 128, offset: 64)
!2406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2407, line: 43, size: 128, elements: !2408)
!2407 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2408 = !{!2409, !2410}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2406, file: !2407, line: 44, baseType: !576)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2406, file: !2407, line: 45, baseType: !503, size: 128)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2366, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2366, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2366, file: !31, line: 117, baseType: !2414, size: 64, offset: 832)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 64)
!2415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2416)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !2417)
!2417 = !{!2418, !2419, !2423, !2424}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2416, file: !31, line: 73, baseType: !2254, size: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2416, file: !31, line: 78, baseType: !2420, size: 64, offset: 64)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 64)
!2421 = !DISubroutineType(types: !2422)
!2422 = !{null, !2365}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2416, file: !31, line: 83, baseType: !2420, size: 64, offset: 128)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2416, file: !31, line: 89, baseType: !713, size: 64, offset: 192)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2366, file: !31, line: 118, baseType: !463, size: 64, offset: 896)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2366, file: !31, line: 119, baseType: !429, size: 32, offset: 960)
!2427 = !DIDerivedType(tag: DW_TAG_member, scope: !2366, file: !31, line: 120, baseType: !2428, size: 128, offset: 1024)
!2428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2366, file: !31, line: 120, size: 128, elements: !2429)
!2429 = !{!2430, !2436}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2428, file: !31, line: 121, baseType: !2431, size: 128)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2432, line: 6, size: 128, elements: !2433)
!2432 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2433 = !{!2434, !2435}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2431, file: !2432, line: 7, baseType: !510, size: 64)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2431, file: !2432, line: 8, baseType: !510, size: 64, offset: 64)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2428, file: !31, line: 122, baseType: !2437)
!2437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2431, elements: !2045)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2362, file: !660, line: 162, baseType: !463, size: 64, offset: 64)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !752, file: !660, line: 176, baseType: !1356, size: 128, align: 64)
!2440 = !DIDerivedType(tag: DW_TAG_member, scope: !748, file: !660, line: 179, baseType: !2441, size: 32, offset: 384)
!2441 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !748, file: !660, line: 179, size: 32, elements: !2442)
!2442 = !{!2443, !2444, !2445, !2446}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2441, file: !660, line: 184, baseType: !470, size: 32)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2441, file: !660, line: 192, baseType: !7, size: 32)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2441, file: !660, line: 194, baseType: !7, size: 32)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2441, file: !660, line: 195, baseType: !429, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !748, file: !660, line: 199, baseType: !470, size: 32, offset: 416)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !718, file: !14, line: 522, baseType: !747, size: 64, offset: 512)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !718, file: !14, line: 528, baseType: !2450, size: 64, offset: 576)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !718, file: !14, line: 532, baseType: !2452, size: 64, offset: 640)
!2452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !718, file: !14, line: 536, baseType: !2353, size: 64, offset: 704)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !697, file: !14, line: 563, baseType: !2455, size: 64, offset: 320)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 64)
!2456 = !DISubroutineType(types: !2457)
!2457 = !{!716, !717, !13}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !697, file: !14, line: 565, baseType: !2459, size: 64, offset: 384)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 64)
!2460 = !DISubroutineType(types: !2461)
!2461 = !{null, !717, !435, !435}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !697, file: !14, line: 567, baseType: !2463, size: 64, offset: 448)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 64)
!2464 = !DISubroutineType(types: !2465)
!2465 = !{!435, !666}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !697, file: !14, line: 571, baseType: !713, size: 64, offset: 512)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !697, file: !14, line: 574, baseType: !713, size: 64, offset: 576)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !697, file: !14, line: 579, baseType: !2469, size: 64, offset: 640)
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 64)
!2470 = !DISubroutineType(types: !2471)
!2471 = !{!429, !666, !435, !463, !429, !429}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !697, file: !14, line: 585, baseType: !2473, size: 64, offset: 704)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 64)
!2474 = !DISubroutineType(types: !2475)
!2475 = !{!873, !666}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !697, file: !14, line: 615, baseType: !2477, size: 64, offset: 768)
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 64)
!2478 = !DISubroutineType(types: !2479)
!2479 = !{!747, !666, !435}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !667, file: !660, line: 359, baseType: !435, size: 64, offset: 1216)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !667, file: !660, line: 361, baseType: !1554, size: 64, offset: 1280)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !667, file: !660, line: 362, baseType: !463, size: 64, offset: 1344)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !667, file: !660, line: 365, baseType: !1094, size: 64, offset: 1408)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !667, file: !660, line: 373, baseType: !2485, offset: 1472)
!2485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !660, line: 296, elements: !519)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !663, file: !660, line: 391, baseType: !622, size: 64, offset: 64)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !663, file: !660, line: 392, baseType: !510, size: 64, offset: 128)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !663, file: !660, line: 394, baseType: !1789, size: 64, offset: 192)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !663, file: !660, line: 398, baseType: !435, size: 64, offset: 256)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !663, file: !660, line: 399, baseType: !435, size: 64, offset: 320)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !663, file: !660, line: 405, baseType: !435, size: 64, offset: 384)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !663, file: !660, line: 406, baseType: !435, size: 64, offset: 448)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !663, file: !660, line: 407, baseType: !2494, size: 64, offset: 512)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 64)
!2495 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !678, line: 286, baseType: !2496)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !678, line: 286, size: 64, elements: !2497)
!2497 = !{!2498}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2496, file: !678, line: 286, baseType: !2499, size: 64)
!2499 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !683, line: 18, baseType: !435)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !663, file: !660, line: 416, baseType: !470, size: 32, offset: 576)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !663, file: !660, line: 428, baseType: !470, size: 32, offset: 608)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !663, file: !660, line: 437, baseType: !470, size: 32, offset: 640)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !663, file: !660, line: 447, baseType: !470, size: 32, offset: 672)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !663, file: !660, line: 450, baseType: !1094, size: 64, offset: 704)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !663, file: !660, line: 452, baseType: !429, size: 32, offset: 768)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !663, file: !660, line: 454, baseType: !844, offset: 800)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !663, file: !660, line: 457, baseType: !1261, size: 256, offset: 832)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !663, file: !660, line: 459, baseType: !503, size: 128, offset: 1088)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !663, file: !660, line: 466, baseType: !435, size: 64, offset: 1216)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !663, file: !660, line: 467, baseType: !435, size: 64, offset: 1280)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !663, file: !660, line: 469, baseType: !435, size: 64, offset: 1344)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !663, file: !660, line: 470, baseType: !435, size: 64, offset: 1408)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !663, file: !660, line: 471, baseType: !1096, size: 64, offset: 1472)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !663, file: !660, line: 472, baseType: !435, size: 64, offset: 1536)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !663, file: !660, line: 473, baseType: !435, size: 64, offset: 1600)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !663, file: !660, line: 474, baseType: !435, size: 64, offset: 1664)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !663, file: !660, line: 475, baseType: !435, size: 64, offset: 1728)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !663, file: !660, line: 477, baseType: !844, offset: 1792)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !663, file: !660, line: 478, baseType: !435, size: 64, offset: 1792)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !663, file: !660, line: 478, baseType: !435, size: 64, offset: 1856)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !663, file: !660, line: 478, baseType: !435, size: 64, offset: 1920)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !663, file: !660, line: 478, baseType: !435, size: 64, offset: 1984)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !663, file: !660, line: 479, baseType: !435, size: 64, offset: 2048)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !663, file: !660, line: 479, baseType: !435, size: 64, offset: 2112)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !663, file: !660, line: 479, baseType: !435, size: 64, offset: 2176)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !663, file: !660, line: 480, baseType: !435, size: 64, offset: 2240)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !663, file: !660, line: 480, baseType: !435, size: 64, offset: 2304)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !663, file: !660, line: 480, baseType: !435, size: 64, offset: 2368)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !663, file: !660, line: 480, baseType: !435, size: 64, offset: 2432)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !663, file: !660, line: 482, baseType: !2531, size: 2816, offset: 2496)
!2531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !435, size: 2816, elements: !2532)
!2532 = !{!2533}
!2533 = !DISubrange(count: 44)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !663, file: !660, line: 488, baseType: !2535, size: 256, offset: 5312)
!2535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2536, line: 60, size: 256, elements: !2537)
!2536 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2537 = !{!2538}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2535, file: !2536, line: 61, baseType: !2539, size: 256)
!2539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1094, size: 256, elements: !1849)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !663, file: !660, line: 490, baseType: !2541, size: 64, offset: 5568)
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2542, size: 64)
!2542 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !660, line: 490, flags: DIFlagFwdDecl)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !663, file: !660, line: 493, baseType: !2544, size: 896, offset: 5632)
!2544 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2545, line: 53, baseType: !2546)
!2545 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2546 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2545, line: 13, size: 896, elements: !2547)
!2547 = !{!2548, !2549, !2550, !2551, !2554, !2555, !2556, !2557, !2577, !2578, !2579}
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2546, file: !2545, line: 18, baseType: !510, size: 64)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2546, file: !2545, line: 28, baseType: !1096, size: 64, offset: 64)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2546, file: !2545, line: 31, baseType: !1261, size: 256, offset: 128)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2546, file: !2545, line: 32, baseType: !2552, size: 64, offset: 384)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 64)
!2553 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2545, line: 32, flags: DIFlagFwdDecl)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2546, file: !2545, line: 37, baseType: !438, size: 16, offset: 448)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2546, file: !2545, line: 40, baseType: !1090, size: 192, offset: 512)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2546, file: !2545, line: 41, baseType: !463, size: 64, offset: 704)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2546, file: !2545, line: 42, baseType: !2558, size: 64, offset: 768)
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 64)
!2559 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2560)
!2560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2561, line: 13, size: 896, elements: !2562)
!2561 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2562 = !{!2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2560, file: !2561, line: 14, baseType: !463, size: 64)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2560, file: !2561, line: 15, baseType: !435, size: 64, offset: 64)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2560, file: !2561, line: 17, baseType: !435, size: 64, offset: 128)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2560, file: !2561, line: 17, baseType: !435, size: 64, offset: 192)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2560, file: !2561, line: 19, baseType: !447, size: 64, offset: 256)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2560, file: !2561, line: 21, baseType: !447, size: 64, offset: 320)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2560, file: !2561, line: 22, baseType: !447, size: 64, offset: 384)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2560, file: !2561, line: 23, baseType: !447, size: 64, offset: 448)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2560, file: !2561, line: 24, baseType: !447, size: 64, offset: 512)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2560, file: !2561, line: 25, baseType: !447, size: 64, offset: 576)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2560, file: !2561, line: 26, baseType: !447, size: 64, offset: 640)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2560, file: !2561, line: 27, baseType: !447, size: 64, offset: 704)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2560, file: !2561, line: 28, baseType: !447, size: 64, offset: 768)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2560, file: !2561, line: 29, baseType: !447, size: 64, offset: 832)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2546, file: !2545, line: 44, baseType: !470, size: 32, offset: 832)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2546, file: !2545, line: 50, baseType: !1610, size: 16, offset: 864)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2546, file: !2545, line: 51, baseType: !2580, size: 16, offset: 880)
!2580 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !460, line: 18, baseType: !2581)
!2581 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !440, line: 23, baseType: !1931)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !663, file: !660, line: 495, baseType: !435, size: 64, offset: 6528)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !663, file: !660, line: 497, baseType: !2584, size: 64, offset: 6592)
!2584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2585, size: 64)
!2585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !660, line: 381, size: 384, elements: !2586)
!2586 = !{!2587, !2588, !2594}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2585, file: !660, line: 382, baseType: !470, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2585, file: !660, line: 383, baseType: !2589, size: 128, offset: 64)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !660, line: 376, size: 128, elements: !2590)
!2590 = !{!2591, !2592}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2589, file: !660, line: 377, baseType: !449, size: 64)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2589, file: !660, line: 378, baseType: !2593, size: 64, offset: 64)
!2593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 64)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2585, file: !660, line: 384, baseType: !2401, size: 192, offset: 192)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !663, file: !660, line: 500, baseType: !844, offset: 6656)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !663, file: !660, line: 501, baseType: !2597, size: 64, offset: 6656)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 64)
!2598 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !660, line: 387, flags: DIFlagFwdDecl)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !663, file: !660, line: 516, baseType: !1426, size: 64, offset: 6720)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !663, file: !660, line: 519, baseType: !1554, size: 64, offset: 6784)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !663, file: !660, line: 521, baseType: !2602, size: 64, offset: 6848)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 64)
!2603 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !660, line: 521, flags: DIFlagFwdDecl)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !663, file: !660, line: 545, baseType: !470, size: 32, offset: 6912)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !663, file: !660, line: 548, baseType: !918, size: 8, offset: 6944)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !663, file: !660, line: 550, baseType: !2607, offset: 6952)
!2607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2608, line: 142, elements: !519)
!2608 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !663, file: !660, line: 554, baseType: !1446, size: 256, offset: 6976)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !663, file: !660, line: 557, baseType: !459, size: 32, offset: 7232)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !659, file: !660, line: 565, baseType: !2612, offset: 7296)
!2612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !435, elements: !2613)
!2613 = !{!2614}
!2614 = !DISubrange(count: -1)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !450, file: !451, line: 758, baseType: !658, size: 64, offset: 3968)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !450, file: !451, line: 761, baseType: !2617, size: 320, offset: 4032)
!2617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2536, line: 34, size: 320, elements: !2618)
!2618 = !{!2619, !2620}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2617, file: !2536, line: 35, baseType: !510, size: 64)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2617, file: !2536, line: 36, baseType: !2621, size: 256, offset: 64)
!2621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !666, size: 256, elements: !1849)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !450, file: !451, line: 766, baseType: !429, size: 32, offset: 4352)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !450, file: !451, line: 767, baseType: !429, size: 32, offset: 4384)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !450, file: !451, line: 768, baseType: !429, size: 32, offset: 4416)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !450, file: !451, line: 770, baseType: !429, size: 32, offset: 4448)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !450, file: !451, line: 772, baseType: !435, size: 64, offset: 4480)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !450, file: !451, line: 775, baseType: !7, size: 32, offset: 4544)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !450, file: !451, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !450, file: !451, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !450, file: !451, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !450, file: !451, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !450, file: !451, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !450, file: !451, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !450, file: !451, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !450, file: !451, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !450, file: !451, line: 831, baseType: !435, size: 64, offset: 4672)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !450, file: !451, line: 833, baseType: !2638, size: 384, offset: 4736)
!2638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !2639)
!2639 = !{!2640, !2645}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2638, file: !25, line: 26, baseType: !2641, size: 64)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2642, size: 64)
!2642 = !DISubroutineType(types: !2643)
!2643 = !{!447, !2644}
!2644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2638, size: 64)
!2645 = !DIDerivedType(tag: DW_TAG_member, scope: !2638, file: !25, line: 27, baseType: !2646, size: 320, offset: 64)
!2646 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2638, file: !25, line: 27, size: 320, elements: !2647)
!2647 = !{!2648, !2658, !2683}
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2646, file: !25, line: 36, baseType: !2649, size: 320)
!2649 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2646, file: !25, line: 29, size: 320, elements: !2650)
!2650 = !{!2651, !2653, !2654, !2655, !2656, !2657}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2649, file: !25, line: 30, baseType: !2652, size: 64)
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2649, file: !25, line: 31, baseType: !459, size: 32, offset: 64)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2649, file: !25, line: 32, baseType: !459, size: 32, offset: 96)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2649, file: !25, line: 33, baseType: !459, size: 32, offset: 128)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2649, file: !25, line: 34, baseType: !510, size: 64, offset: 192)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2649, file: !25, line: 35, baseType: !2652, size: 64, offset: 256)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2646, file: !25, line: 46, baseType: !2659, size: 192)
!2659 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2646, file: !25, line: 38, size: 192, elements: !2660)
!2660 = !{!2661, !2662, !2663, !2682}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2659, file: !25, line: 39, baseType: !601, size: 32)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2659, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!2663 = !DIDerivedType(tag: DW_TAG_member, scope: !2659, file: !25, line: 41, baseType: !2664, size: 64, offset: 64)
!2664 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2659, file: !25, line: 41, size: 64, elements: !2665)
!2665 = !{!2666, !2674}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2664, file: !25, line: 42, baseType: !2667, size: 64)
!2667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2668, size: 64)
!2668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2669, line: 7, size: 128, elements: !2670)
!2669 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2670 = !{!2671, !2673}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2668, file: !2669, line: 8, baseType: !2672, size: 64)
!2672 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !603, line: 93, baseType: !543)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2668, file: !2669, line: 9, baseType: !543, size: 64, offset: 64)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2664, file: !25, line: 43, baseType: !2675, size: 64)
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 64)
!2676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2677, line: 7, size: 64, elements: !2678)
!2677 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2678 = !{!2679, !2681}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2676, file: !2677, line: 8, baseType: !2680, size: 32)
!2680 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2677, line: 5, baseType: !1905)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2676, file: !2677, line: 9, baseType: !1905, size: 32, offset: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2659, file: !25, line: 45, baseType: !510, size: 64, offset: 128)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2646, file: !25, line: 54, baseType: !2684, size: 256)
!2684 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2646, file: !25, line: 48, size: 256, elements: !2685)
!2685 = !{!2686, !2689, !2690, !2691, !2692}
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2684, file: !25, line: 49, baseType: !2687, size: 64)
!2687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2688, size: 64)
!2688 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2684, file: !25, line: 50, baseType: !429, size: 32, offset: 64)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2684, file: !25, line: 51, baseType: !429, size: 32, offset: 96)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2684, file: !25, line: 52, baseType: !435, size: 64, offset: 128)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2684, file: !25, line: 53, baseType: !435, size: 64, offset: 192)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !450, file: !451, line: 835, baseType: !2694, size: 32, offset: 5120)
!2694 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !471, line: 22, baseType: !2695)
!2695 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !603, line: 28, baseType: !429)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !450, file: !451, line: 836, baseType: !2694, size: 32, offset: 5152)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !450, file: !451, line: 840, baseType: !435, size: 64, offset: 5184)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !450, file: !451, line: 849, baseType: !449, size: 64, offset: 5248)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !450, file: !451, line: 852, baseType: !449, size: 64, offset: 5312)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !450, file: !451, line: 857, baseType: !503, size: 128, offset: 5376)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !450, file: !451, line: 858, baseType: !503, size: 128, offset: 5504)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !450, file: !451, line: 859, baseType: !449, size: 64, offset: 5632)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !450, file: !451, line: 867, baseType: !503, size: 128, offset: 5696)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !450, file: !451, line: 868, baseType: !503, size: 128, offset: 5824)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !450, file: !451, line: 871, baseType: !1841, size: 64, offset: 5952)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !450, file: !451, line: 872, baseType: !2707, size: 512, offset: 6016)
!2707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !974, size: 512, elements: !1849)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !450, file: !451, line: 873, baseType: !503, size: 128, offset: 6528)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !450, file: !451, line: 874, baseType: !503, size: 128, offset: 6656)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !450, file: !451, line: 876, baseType: !2711, size: 64, offset: 6784)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 64)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !450, file: !451, line: 879, baseType: !1042, size: 64, offset: 6848)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !450, file: !451, line: 882, baseType: !1042, size: 64, offset: 6912)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !450, file: !451, line: 884, baseType: !510, size: 64, offset: 6976)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !450, file: !451, line: 885, baseType: !510, size: 64, offset: 7040)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !450, file: !451, line: 890, baseType: !510, size: 64, offset: 7104)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !450, file: !451, line: 891, baseType: !2718, size: 128, offset: 7168)
!2718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !451, line: 242, size: 128, elements: !2719)
!2719 = !{!2720, !2721, !2722}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2718, file: !451, line: 244, baseType: !510, size: 64)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2718, file: !451, line: 245, baseType: !510, size: 64, offset: 64)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2718, file: !451, line: 246, baseType: !576, offset: 128)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !450, file: !451, line: 900, baseType: !435, size: 64, offset: 7296)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !450, file: !451, line: 901, baseType: !435, size: 64, offset: 7360)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !450, file: !451, line: 904, baseType: !510, size: 64, offset: 7424)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !450, file: !451, line: 907, baseType: !510, size: 64, offset: 7488)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !450, file: !451, line: 910, baseType: !435, size: 64, offset: 7552)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !450, file: !451, line: 911, baseType: !435, size: 64, offset: 7616)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !450, file: !451, line: 914, baseType: !2730, size: 640, offset: 7680)
!2730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2731, line: 123, size: 640, elements: !2732)
!2731 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2732 = !{!2733, !2739, !2740}
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2730, file: !2731, line: 124, baseType: !2734, size: 576)
!2734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2735, size: 576, elements: !986)
!2735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2731, line: 108, size: 192, elements: !2736)
!2736 = !{!2737, !2738}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2735, file: !2731, line: 109, baseType: !510, size: 64)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2735, file: !2731, line: 110, baseType: !616, size: 128, offset: 64)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2730, file: !2731, line: 125, baseType: !7, size: 32, offset: 576)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2730, file: !2731, line: 126, baseType: !7, size: 32, offset: 608)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !450, file: !451, line: 917, baseType: !2742, size: 192, offset: 8320)
!2742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2731, line: 134, size: 192, elements: !2743)
!2743 = !{!2744, !2745}
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2742, file: !2731, line: 135, baseType: !1356, size: 128, align: 64)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2742, file: !2731, line: 136, baseType: !7, size: 32, offset: 128)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !450, file: !451, line: 923, baseType: !1867, size: 64, offset: 8512)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !450, file: !451, line: 926, baseType: !1867, size: 64, offset: 8576)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !450, file: !451, line: 929, baseType: !1867, size: 64, offset: 8640)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !450, file: !451, line: 933, baseType: !1897, size: 64, offset: 8704)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !450, file: !451, line: 943, baseType: !2751, size: 128, offset: 8768)
!2751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !875, size: 128, elements: !1390)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !450, file: !451, line: 945, baseType: !2753, size: 64, offset: 8896)
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2754, size: 64)
!2754 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !451, line: 49, flags: DIFlagFwdDecl)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !450, file: !451, line: 956, baseType: !2756, size: 64, offset: 8960)
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2757, size: 64)
!2757 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !451, line: 45, flags: DIFlagFwdDecl)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !450, file: !451, line: 959, baseType: !2759, size: 64, offset: 9024)
!2759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2760, size: 64)
!2760 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !451, line: 959, flags: DIFlagFwdDecl)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !450, file: !451, line: 962, baseType: !2762, size: 64, offset: 9088)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 64)
!2763 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !451, line: 66, flags: DIFlagFwdDecl)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !450, file: !451, line: 966, baseType: !2765, size: 64, offset: 9152)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 64)
!2766 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2767, line: 35, flags: DIFlagFwdDecl)
!2767 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !450, file: !451, line: 969, baseType: !2769, size: 64, offset: 9216)
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2770, size: 64)
!2770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !2771, line: 82, size: 7296, elements: !2772)
!2771 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!2772 = !{!2773, !2774, !2775, !2776, !2777, !2778, !2779, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2808, !2817, !2818, !2820, !2821, !2822, !2825, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2855, !2856, !2863, !2864, !2865, !2866, !2867, !2868}
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !2770, file: !2771, line: 83, baseType: !465, size: 32)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2770, file: !2771, line: 84, baseType: !470, size: 32, offset: 32)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2770, file: !2771, line: 85, baseType: !429, size: 32, offset: 64)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !2770, file: !2771, line: 86, baseType: !503, size: 128, offset: 128)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !2770, file: !2771, line: 88, baseType: !1337, size: 128, offset: 256)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !2770, file: !2771, line: 91, baseType: !449, size: 64, offset: 384)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !2770, file: !2771, line: 94, baseType: !2780, size: 192, offset: 448)
!2780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !2781, line: 30, size: 192, elements: !2782)
!2781 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!2782 = !{!2783, !2784}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2780, file: !2781, line: 31, baseType: !503, size: 128)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2780, file: !2781, line: 32, baseType: !2785, size: 64, offset: 128)
!2785 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !2786, line: 25, baseType: !2787)
!2786 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!2787 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2786, line: 23, size: 64, elements: !2788)
!2788 = !{!2789}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2787, file: !2786, line: 24, baseType: !650, size: 64)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !2770, file: !2771, line: 97, baseType: !970, size: 64, offset: 640)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !2770, file: !2771, line: 100, baseType: !429, size: 32, offset: 704)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !2770, file: !2771, line: 106, baseType: !429, size: 32, offset: 736)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !2770, file: !2771, line: 107, baseType: !449, size: 64, offset: 768)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !2770, file: !2771, line: 110, baseType: !429, size: 32, offset: 832)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2770, file: !2771, line: 111, baseType: !7, size: 32, offset: 864)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !2770, file: !2771, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !2770, file: !2771, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !2770, file: !2771, line: 128, baseType: !429, size: 32, offset: 928)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !2770, file: !2771, line: 129, baseType: !503, size: 128, offset: 960)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !2770, file: !2771, line: 132, baseType: !551, size: 512, offset: 1088)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !2770, file: !2771, line: 133, baseType: !559, size: 64, offset: 1600)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !2770, file: !2771, line: 140, baseType: !2803, size: 256, offset: 1664)
!2803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2804, size: 256, elements: !1889)
!2804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !2771, line: 38, size: 128, elements: !2805)
!2805 = !{!2806, !2807}
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2804, file: !2771, line: 39, baseType: !510, size: 64)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2804, file: !2771, line: 40, baseType: !510, size: 64, offset: 64)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !2770, file: !2771, line: 146, baseType: !2809, size: 192, offset: 1920)
!2809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !2771, line: 66, size: 192, elements: !2810)
!2810 = !{!2811}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !2809, file: !2771, line: 67, baseType: !2812, size: 192)
!2812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !2771, line: 47, size: 192, elements: !2813)
!2813 = !{!2814, !2815, !2816}
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2812, file: !2771, line: 48, baseType: !1096, size: 64)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2812, file: !2771, line: 49, baseType: !1096, size: 64, offset: 64)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2812, file: !2771, line: 50, baseType: !1096, size: 64, offset: 128)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2770, file: !2771, line: 150, baseType: !2730, size: 640, offset: 2112)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !2770, file: !2771, line: 153, baseType: !2819, size: 256, offset: 2752)
!2819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1841, size: 256, elements: !1849)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !2770, file: !2771, line: 159, baseType: !1841, size: 64, offset: 3008)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !2770, file: !2771, line: 162, baseType: !429, size: 32, offset: 3072)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2770, file: !2771, line: 164, baseType: !2823, size: 64, offset: 3136)
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2824, size: 64)
!2824 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !2771, line: 164, flags: DIFlagFwdDecl)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !2770, file: !2771, line: 175, baseType: !2826, size: 32, offset: 3200)
!2826 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !606, line: 805, baseType: !2827)
!2827 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !606, line: 798, size: 32, elements: !2828)
!2828 = !{!2829, !2830}
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2827, file: !606, line: 803, baseType: !800, size: 32)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2827, file: !606, line: 804, baseType: !844, offset: 32)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2770, file: !2771, line: 176, baseType: !510, size: 64, offset: 3264)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2770, file: !2771, line: 176, baseType: !510, size: 64, offset: 3328)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !2770, file: !2771, line: 176, baseType: !510, size: 64, offset: 3392)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !2770, file: !2771, line: 176, baseType: !510, size: 64, offset: 3456)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2770, file: !2771, line: 177, baseType: !510, size: 64, offset: 3520)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !2770, file: !2771, line: 178, baseType: !510, size: 64, offset: 3584)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2770, file: !2771, line: 179, baseType: !2718, size: 128, offset: 3648)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2770, file: !2771, line: 180, baseType: !435, size: 64, offset: 3776)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2770, file: !2771, line: 180, baseType: !435, size: 64, offset: 3840)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !2770, file: !2771, line: 180, baseType: !435, size: 64, offset: 3904)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !2770, file: !2771, line: 180, baseType: !435, size: 64, offset: 3968)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2770, file: !2771, line: 181, baseType: !435, size: 64, offset: 4032)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2770, file: !2771, line: 181, baseType: !435, size: 64, offset: 4096)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !2770, file: !2771, line: 181, baseType: !435, size: 64, offset: 4160)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !2770, file: !2771, line: 181, baseType: !435, size: 64, offset: 4224)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !2770, file: !2771, line: 182, baseType: !435, size: 64, offset: 4288)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !2770, file: !2771, line: 182, baseType: !435, size: 64, offset: 4352)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !2770, file: !2771, line: 182, baseType: !435, size: 64, offset: 4416)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !2770, file: !2771, line: 182, baseType: !435, size: 64, offset: 4480)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !2770, file: !2771, line: 183, baseType: !435, size: 64, offset: 4544)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !2770, file: !2771, line: 183, baseType: !435, size: 64, offset: 4608)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2770, file: !2771, line: 184, baseType: !2853, offset: 4672)
!2853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2854, line: 12, elements: !519)
!2854 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !2770, file: !2771, line: 192, baseType: !512, size: 64, offset: 4672)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !2770, file: !2771, line: 203, baseType: !2857, size: 2048, offset: 4736)
!2857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2858, size: 2048, elements: !1390)
!2858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2859, line: 43, size: 128, elements: !2860)
!2859 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2860 = !{!2861, !2862}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2858, file: !2859, line: 44, baseType: !1588, size: 64)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2858, file: !2859, line: 45, baseType: !1588, size: 64, offset: 64)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !2770, file: !2771, line: 220, baseType: !918, size: 8, offset: 6784)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !2770, file: !2771, line: 221, baseType: !1931, size: 16, offset: 6800)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !2770, file: !2771, line: 222, baseType: !1931, size: 16, offset: 6816)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !2770, file: !2771, line: 224, baseType: !658, size: 64, offset: 6848)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !2770, file: !2771, line: 227, baseType: !1090, size: 192, offset: 6912)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !2770, file: !2771, line: 233, baseType: !1090, size: 192, offset: 7104)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !450, file: !451, line: 970, baseType: !2870, size: 64, offset: 9280)
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2871, size: 64)
!2871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !2771, line: 20, size: 16576, elements: !2872)
!2872 = !{!2873, !2874, !2875, !2876}
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2871, file: !2771, line: 21, baseType: !844)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2871, file: !2771, line: 22, baseType: !465, size: 32)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2871, file: !2771, line: 23, baseType: !1337, size: 128, offset: 64)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2871, file: !2771, line: 24, baseType: !2877, size: 16384, offset: 192)
!2877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2878, size: 16384, elements: !2898)
!2878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !2781, line: 49, size: 256, elements: !2879)
!2879 = !{!2880}
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2878, file: !2781, line: 50, baseType: !2881, size: 256)
!2881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !2781, line: 35, size: 256, elements: !2882)
!2882 = !{!2883, !2890, !2891, !2897}
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2881, file: !2781, line: 37, baseType: !2884, size: 64)
!2884 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2885, line: 19, baseType: !2886)
!2885 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2887, size: 64)
!2887 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2885, line: 18, baseType: !2888)
!2888 = !DISubroutineType(types: !2889)
!2889 = !{null, !429}
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2881, file: !2781, line: 38, baseType: !435, size: 64, offset: 64)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2881, file: !2781, line: 44, baseType: !2892, size: 64, offset: 128)
!2892 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2885, line: 22, baseType: !2893)
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 64)
!2894 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2885, line: 21, baseType: !2895)
!2895 = !DISubroutineType(types: !2896)
!2896 = !{null}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2881, file: !2781, line: 46, baseType: !2785, size: 64, offset: 192)
!2898 = !{!2899}
!2899 = !DISubrange(count: 64)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !450, file: !451, line: 971, baseType: !2785, size: 64, offset: 9344)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !450, file: !451, line: 972, baseType: !2785, size: 64, offset: 9408)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !450, file: !451, line: 974, baseType: !2785, size: 64, offset: 9472)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !450, file: !451, line: 975, baseType: !2780, size: 192, offset: 9536)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !450, file: !451, line: 976, baseType: !435, size: 64, offset: 9728)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !450, file: !451, line: 977, baseType: !1586, size: 64, offset: 9792)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !450, file: !451, line: 978, baseType: !7, size: 32, offset: 9856)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !450, file: !451, line: 980, baseType: !1359, size: 64, offset: 9920)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !450, file: !451, line: 989, baseType: !2909, size: 128, offset: 9984)
!2909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2910, line: 35, size: 128, elements: !2911)
!2910 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2911 = !{!2912, !2913, !2914}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2909, file: !2910, line: 36, baseType: !429, size: 32)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2909, file: !2910, line: 37, baseType: !470, size: 32, offset: 32)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2909, file: !2910, line: 38, baseType: !2915, size: 64, offset: 64)
!2915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2916, size: 64)
!2916 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2910, line: 23, flags: DIFlagFwdDecl)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !450, file: !451, line: 992, baseType: !510, size: 64, offset: 10112)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !450, file: !451, line: 993, baseType: !510, size: 64, offset: 10176)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !450, file: !451, line: 996, baseType: !844, offset: 10240)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !450, file: !451, line: 999, baseType: !576, offset: 10240)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !450, file: !451, line: 1001, baseType: !2922, size: 64, offset: 10240)
!2922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !451, line: 636, size: 64, elements: !2923)
!2923 = !{!2924}
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2922, file: !451, line: 637, baseType: !2925, size: 64)
!2925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2922, size: 64)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !450, file: !451, line: 1005, baseType: !619, size: 128, offset: 10304)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !450, file: !451, line: 1007, baseType: !449, size: 64, offset: 10432)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !450, file: !451, line: 1009, baseType: !2929, size: 64, offset: 10496)
!2929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2930, size: 64)
!2930 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !451, line: 1009, flags: DIFlagFwdDecl)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !450, file: !451, line: 1043, baseType: !463, size: 64, offset: 10560)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !450, file: !451, line: 1046, baseType: !2933, size: 64, offset: 10624)
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 64)
!2934 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !451, line: 41, flags: DIFlagFwdDecl)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !450, file: !451, line: 1050, baseType: !2936, size: 64, offset: 10688)
!2936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2937, size: 64)
!2937 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !451, line: 42, flags: DIFlagFwdDecl)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !450, file: !451, line: 1054, baseType: !2939, size: 64, offset: 10752)
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 64)
!2940 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !451, line: 55, flags: DIFlagFwdDecl)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !450, file: !451, line: 1056, baseType: !1284, size: 64, offset: 10816)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !450, file: !451, line: 1058, baseType: !2943, size: 64, offset: 10880)
!2943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2944, size: 64)
!2944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2945, line: 99, size: 704, elements: !2946)
!2945 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2946 = !{!2947, !2948, !2949, !2950, !2951, !2952, !2953, !2972, !2973}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2944, file: !2945, line: 100, baseType: !1094, size: 64)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2944, file: !2945, line: 101, baseType: !470, size: 32, offset: 64)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2944, file: !2945, line: 102, baseType: !470, size: 32, offset: 96)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2944, file: !2945, line: 105, baseType: !844, offset: 128)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2944, file: !2945, line: 107, baseType: !438, size: 16, offset: 128)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2944, file: !2945, line: 109, baseType: !2187, size: 128, offset: 192)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2944, file: !2945, line: 110, baseType: !2954, size: 64, offset: 320)
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 64)
!2955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2945, line: 73, size: 448, elements: !2956)
!2956 = !{!2957, !2960, !2961, !2966, !2971}
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2955, file: !2945, line: 74, baseType: !2958, size: 64)
!2958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2959, size: 64)
!2959 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2945, line: 74, flags: DIFlagFwdDecl)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2955, file: !2945, line: 75, baseType: !2943, size: 64, offset: 64)
!2961 = !DIDerivedType(tag: DW_TAG_member, scope: !2955, file: !2945, line: 83, baseType: !2962, size: 128, offset: 128)
!2962 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2955, file: !2945, line: 83, size: 128, elements: !2963)
!2963 = !{!2964, !2965}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2962, file: !2945, line: 84, baseType: !503, size: 128)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2962, file: !2945, line: 85, baseType: !2320, size: 64)
!2966 = !DIDerivedType(tag: DW_TAG_member, scope: !2955, file: !2945, line: 87, baseType: !2967, size: 128, offset: 256)
!2967 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2955, file: !2945, line: 87, size: 128, elements: !2968)
!2968 = !{!2969, !2970}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2967, file: !2945, line: 88, baseType: !974, size: 128)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2967, file: !2945, line: 89, baseType: !1356, size: 128, align: 64)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2955, file: !2945, line: 92, baseType: !7, size: 32, offset: 384)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2944, file: !2945, line: 111, baseType: !970, size: 64, offset: 384)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2944, file: !2945, line: 113, baseType: !1446, size: 256, offset: 448)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !450, file: !451, line: 1061, baseType: !2975, size: 64, offset: 10944)
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 64)
!2976 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !451, line: 43, flags: DIFlagFwdDecl)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !450, file: !451, line: 1064, baseType: !435, size: 64, offset: 11008)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !450, file: !451, line: 1065, baseType: !2979, size: 64, offset: 11072)
!2979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2980, size: 64)
!2980 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !2781, line: 14, baseType: !2981)
!2981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !2781, line: 12, size: 384, elements: !2982)
!2982 = !{!2983}
!2983 = !DIDerivedType(tag: DW_TAG_member, scope: !2981, file: !2781, line: 13, baseType: !2984, size: 384)
!2984 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2981, file: !2781, line: 13, size: 384, elements: !2985)
!2985 = !{!2986, !2987, !2988, !2989}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2984, file: !2781, line: 13, baseType: !429, size: 32)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2984, file: !2781, line: 13, baseType: !429, size: 32, offset: 32)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2984, file: !2781, line: 13, baseType: !429, size: 32, offset: 64)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2984, file: !2781, line: 13, baseType: !2990, size: 256, offset: 128)
!2990 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2991, line: 32, size: 256, elements: !2992)
!2991 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2992 = !{!2993, !2998, !3011, !3017, !3026, !3046, !3051}
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2990, file: !2991, line: 37, baseType: !2994, size: 64)
!2994 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2990, file: !2991, line: 34, size: 64, elements: !2995)
!2995 = !{!2996, !2997}
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2994, file: !2991, line: 35, baseType: !2695, size: 32)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2994, file: !2991, line: 36, baseType: !776, size: 32, offset: 32)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2990, file: !2991, line: 45, baseType: !2999, size: 192)
!2999 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2990, file: !2991, line: 40, size: 192, elements: !3000)
!3000 = !{!3001, !3003, !3004, !3010}
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2999, file: !2991, line: 41, baseType: !3002, size: 32)
!3002 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !603, line: 95, baseType: !429)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2999, file: !2991, line: 42, baseType: !429, size: 32, offset: 32)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2999, file: !2991, line: 43, baseType: !3005, size: 64, offset: 64)
!3005 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2991, line: 11, baseType: !3006)
!3006 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2991, line: 8, size: 64, elements: !3007)
!3007 = !{!3008, !3009}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3006, file: !2991, line: 9, baseType: !429, size: 32)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3006, file: !2991, line: 10, baseType: !463, size: 64)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2999, file: !2991, line: 44, baseType: !429, size: 32, offset: 128)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2990, file: !2991, line: 52, baseType: !3012, size: 128)
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2990, file: !2991, line: 48, size: 128, elements: !3013)
!3013 = !{!3014, !3015, !3016}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3012, file: !2991, line: 49, baseType: !2695, size: 32)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3012, file: !2991, line: 50, baseType: !776, size: 32, offset: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3012, file: !2991, line: 51, baseType: !3005, size: 64, offset: 64)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2990, file: !2991, line: 61, baseType: !3018, size: 256)
!3018 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2990, file: !2991, line: 55, size: 256, elements: !3019)
!3019 = !{!3020, !3021, !3022, !3023, !3025}
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3018, file: !2991, line: 56, baseType: !2695, size: 32)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3018, file: !2991, line: 57, baseType: !776, size: 32, offset: 32)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3018, file: !2991, line: 58, baseType: !429, size: 32, offset: 64)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3018, file: !2991, line: 59, baseType: !3024, size: 64, offset: 128)
!3024 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !603, line: 94, baseType: !1585)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3018, file: !2991, line: 60, baseType: !3024, size: 64, offset: 192)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2990, file: !2991, line: 95, baseType: !3027, size: 256)
!3027 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2990, file: !2991, line: 64, size: 256, elements: !3028)
!3028 = !{!3029, !3030}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3027, file: !2991, line: 65, baseType: !463, size: 64)
!3030 = !DIDerivedType(tag: DW_TAG_member, scope: !3027, file: !2991, line: 77, baseType: !3031, size: 192, offset: 64)
!3031 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3027, file: !2991, line: 77, size: 192, elements: !3032)
!3032 = !{!3033, !3034, !3041}
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3031, file: !2991, line: 82, baseType: !1931, size: 16)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3031, file: !2991, line: 88, baseType: !3035, size: 192)
!3035 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3031, file: !2991, line: 84, size: 192, elements: !3036)
!3036 = !{!3037, !3039, !3040}
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3035, file: !2991, line: 85, baseType: !3038, size: 64)
!3038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !875, size: 64, elements: !597)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3035, file: !2991, line: 86, baseType: !463, size: 64, offset: 64)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3035, file: !2991, line: 87, baseType: !463, size: 64, offset: 128)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3031, file: !2991, line: 93, baseType: !3042, size: 96)
!3042 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3031, file: !2991, line: 90, size: 96, elements: !3043)
!3043 = !{!3044, !3045}
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3042, file: !2991, line: 91, baseType: !3038, size: 64)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3042, file: !2991, line: 92, baseType: !439, size: 32, offset: 64)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2990, file: !2991, line: 101, baseType: !3047, size: 128)
!3047 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2990, file: !2991, line: 98, size: 128, elements: !3048)
!3048 = !{!3049, !3050}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3047, file: !2991, line: 99, baseType: !447, size: 64)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3047, file: !2991, line: 100, baseType: !429, size: 32, offset: 64)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2990, file: !2991, line: 108, baseType: !3052, size: 128)
!3052 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2990, file: !2991, line: 104, size: 128, elements: !3053)
!3053 = !{!3054, !3055, !3056}
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3052, file: !2991, line: 105, baseType: !463, size: 64)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3052, file: !2991, line: 106, baseType: !429, size: 32, offset: 64)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3052, file: !2991, line: 107, baseType: !7, size: 32, offset: 96)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !450, file: !451, line: 1067, baseType: !2853, offset: 11136)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !450, file: !451, line: 1099, baseType: !3059, size: 64, offset: 11136)
!3059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3060, size: 64)
!3060 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !451, line: 56, flags: DIFlagFwdDecl)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !450, file: !451, line: 1103, baseType: !503, size: 128, offset: 11200)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !450, file: !451, line: 1104, baseType: !3063, size: 64, offset: 11328)
!3063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 64)
!3064 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !451, line: 46, flags: DIFlagFwdDecl)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !450, file: !451, line: 1105, baseType: !1090, size: 192, offset: 11392)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !450, file: !451, line: 1106, baseType: !7, size: 32, offset: 11584)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !450, file: !451, line: 1109, baseType: !3068, size: 128, offset: 11648)
!3068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3069, size: 128, elements: !1889)
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 64)
!3070 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !451, line: 51, flags: DIFlagFwdDecl)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !450, file: !451, line: 1110, baseType: !1090, size: 192, offset: 11776)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !450, file: !451, line: 1111, baseType: !503, size: 128, offset: 11968)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !450, file: !451, line: 1173, baseType: !3074, size: 64, offset: 12096)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3076, line: 62, size: 256, align: 256, elements: !3077)
!3076 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3077 = !{!3078, !3079, !3080, !3085}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3075, file: !3076, line: 75, baseType: !439, size: 32)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3075, file: !3076, line: 90, baseType: !439, size: 32, offset: 32)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3075, file: !3076, line: 124, baseType: !3081, size: 64, offset: 64)
!3081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3075, file: !3076, line: 109, size: 64, elements: !3082)
!3082 = !{!3083, !3084}
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3081, file: !3076, line: 110, baseType: !511, size: 64)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3081, file: !3076, line: 112, baseType: !511, size: 64)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3075, file: !3076, line: 144, baseType: !439, size: 32, offset: 128)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !450, file: !451, line: 1174, baseType: !459, size: 32, offset: 12160)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !450, file: !451, line: 1179, baseType: !435, size: 64, offset: 12224)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !450, file: !451, line: 1182, baseType: !3089, size: 128, offset: 12288)
!3089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2536, line: 76, size: 128, elements: !3090)
!3090 = !{!3091, !3096, !3097}
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3089, file: !2536, line: 85, baseType: !3092, size: 64)
!3092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !3093, line: 7, size: 64, elements: !3094)
!3093 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!3094 = !{!3095}
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3092, file: !3093, line: 12, baseType: !647, size: 64)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !3089, file: !2536, line: 88, baseType: !918, size: 8, offset: 64)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !3089, file: !2536, line: 95, baseType: !918, size: 8, offset: 72)
!3098 = !DIDerivedType(tag: DW_TAG_member, scope: !450, file: !451, line: 1184, baseType: !3099, size: 128, offset: 12416)
!3099 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !450, file: !451, line: 1184, size: 128, elements: !3100)
!3100 = !{!3101, !3102}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !3099, file: !451, line: 1185, baseType: !465, size: 32)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3099, file: !451, line: 1186, baseType: !1356, size: 128, align: 64)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !450, file: !451, line: 1190, baseType: !1801, size: 64, offset: 12544)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !450, file: !451, line: 1192, baseType: !3105, size: 128, offset: 12608)
!3105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2536, line: 64, size: 128, elements: !3106)
!3106 = !{!3107, !3108, !3109}
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !3105, file: !2536, line: 65, baseType: !747, size: 64)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3105, file: !2536, line: 67, baseType: !439, size: 32, offset: 64)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3105, file: !2536, line: 68, baseType: !439, size: 32, offset: 96)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !450, file: !451, line: 1206, baseType: !429, size: 32, offset: 12736)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !450, file: !451, line: 1207, baseType: !429, size: 32, offset: 12768)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !450, file: !451, line: 1209, baseType: !435, size: 64, offset: 12800)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !450, file: !451, line: 1219, baseType: !510, size: 64, offset: 12864)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !450, file: !451, line: 1220, baseType: !510, size: 64, offset: 12928)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !450, file: !451, line: 1317, baseType: !429, size: 32, offset: 12992)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !450, file: !451, line: 1319, baseType: !449, size: 64, offset: 13056)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !450, file: !451, line: 1322, baseType: !3118, size: 64, offset: 13120)
!3118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3119, size: 64)
!3119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !3120, line: 56, size: 512, elements: !3121)
!3120 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!3121 = !{!3122, !3123, !3124, !3125, !3126, !3127, !3128, !3130}
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3119, file: !3120, line: 57, baseType: !3118, size: 64)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3119, file: !3120, line: 58, baseType: !463, size: 64, offset: 64)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3119, file: !3120, line: 59, baseType: !435, size: 64, offset: 128)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3119, file: !3120, line: 60, baseType: !435, size: 64, offset: 192)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3119, file: !3120, line: 61, baseType: !2235, size: 64, offset: 256)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !3119, file: !3120, line: 62, baseType: !7, size: 32, offset: 320)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !3119, file: !3120, line: 63, baseType: !3129, size: 64, offset: 384)
!3129 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !471, line: 153, baseType: !510)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !3119, file: !3120, line: 64, baseType: !3131, size: 64, offset: 448)
!3131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3132, size: 64)
!3132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !450, file: !451, line: 1326, baseType: !465, size: 32, offset: 13184)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !450, file: !451, line: 1342, baseType: !463, size: 64, offset: 13248)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !450, file: !451, line: 1343, baseType: !511, size: 64, offset: 13312)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !450, file: !451, line: 1344, baseType: !510, size: 64, offset: 13376)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !450, file: !451, line: 1345, baseType: !511, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !450, file: !451, line: 1346, baseType: !511, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !450, file: !451, line: 1347, baseType: !511, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !450, file: !451, line: 1348, baseType: !1356, size: 128, align: 64, offset: 13504)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !450, file: !451, line: 1358, baseType: !3142, size: 34816, offset: 13824)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !3143, line: 485, size: 34816, elements: !3144)
!3143 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!3144 = !{!3145, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3174, !3175, !3176, !3177, !3178, !3179, !3182, !3183, !3184}
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !3142, file: !3143, line: 487, baseType: !3146, size: 192)
!3146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3147, size: 192, elements: !986)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !3148, line: 16, size: 64, elements: !3149)
!3148 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!3149 = !{!3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !3147, file: !3148, line: 17, baseType: !1610, size: 16)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !3147, file: !3148, line: 18, baseType: !1610, size: 16, offset: 16)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !3147, file: !3148, line: 19, baseType: !1610, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3147, file: !3148, line: 19, baseType: !1610, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !3147, file: !3148, line: 19, baseType: !1610, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !3147, file: !3148, line: 19, baseType: !1610, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3147, file: !3148, line: 19, baseType: !1610, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !3147, file: !3148, line: 20, baseType: !1610, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !3147, file: !3148, line: 20, baseType: !1610, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !3147, file: !3148, line: 20, baseType: !1610, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3147, file: !3148, line: 20, baseType: !1610, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3147, file: !3148, line: 20, baseType: !1610, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !3147, file: !3148, line: 20, baseType: !1610, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3142, file: !3143, line: 491, baseType: !435, size: 64, offset: 192)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !3142, file: !3143, line: 495, baseType: !438, size: 16, offset: 256)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !3142, file: !3143, line: 496, baseType: !438, size: 16, offset: 272)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !3142, file: !3143, line: 497, baseType: !438, size: 16, offset: 288)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !3142, file: !3143, line: 498, baseType: !438, size: 16, offset: 304)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !3142, file: !3143, line: 502, baseType: !435, size: 64, offset: 320)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3142, file: !3143, line: 503, baseType: !435, size: 64, offset: 384)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !3142, file: !3143, line: 514, baseType: !3171, size: 256, offset: 448)
!3171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3172, size: 256, elements: !1849)
!3172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3173, size: 64)
!3173 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !3143, line: 483, flags: DIFlagFwdDecl)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !3142, file: !3143, line: 516, baseType: !435, size: 64, offset: 704)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !3142, file: !3143, line: 518, baseType: !435, size: 64, offset: 768)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !3142, file: !3143, line: 520, baseType: !435, size: 64, offset: 832)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !3142, file: !3143, line: 521, baseType: !435, size: 64, offset: 896)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !3142, file: !3143, line: 522, baseType: !435, size: 64, offset: 960)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !3142, file: !3143, line: 528, baseType: !3180, size: 64, offset: 1024)
!3180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3181, size: 64)
!3181 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !3143, line: 10, flags: DIFlagFwdDecl)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !3142, file: !3143, line: 535, baseType: !435, size: 64, offset: 1088)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !3142, file: !3143, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !3142, file: !3143, line: 540, baseType: !3185, size: 33280, offset: 1536)
!3185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !3186, line: 317, size: 33280, elements: !3187)
!3186 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!3187 = !{!3188, !3189, !3190}
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !3185, file: !3186, line: 330, baseType: !7, size: 32)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !3185, file: !3186, line: 337, baseType: !435, size: 64, offset: 64)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3185, file: !3186, line: 348, baseType: !3191, size: 32768, offset: 512)
!3191 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !3186, line: 304, size: 32768, elements: !3192)
!3192 = !{!3193, !3208, !3245, !3295, !3308}
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !3191, file: !3186, line: 305, baseType: !3194, size: 896)
!3194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !3186, line: 12, size: 896, elements: !3195)
!3195 = !{!3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3207}
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3194, file: !3186, line: 13, baseType: !459, size: 32)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3194, file: !3186, line: 14, baseType: !459, size: 32, offset: 32)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3194, file: !3186, line: 15, baseType: !459, size: 32, offset: 64)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3194, file: !3186, line: 16, baseType: !459, size: 32, offset: 96)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3194, file: !3186, line: 17, baseType: !459, size: 32, offset: 128)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3194, file: !3186, line: 18, baseType: !459, size: 32, offset: 160)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3194, file: !3186, line: 19, baseType: !459, size: 32, offset: 192)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3194, file: !3186, line: 22, baseType: !3204, size: 640, offset: 224)
!3204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !459, size: 640, elements: !3205)
!3205 = !{!3206}
!3206 = !DISubrange(count: 20)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3194, file: !3186, line: 25, baseType: !459, size: 32, offset: 864)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !3191, file: !3186, line: 306, baseType: !3209, size: 4096, align: 128)
!3209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !3186, line: 34, size: 4096, align: 128, elements: !3210)
!3210 = !{!3211, !3212, !3213, !3214, !3215, !3230, !3231, !3232, !3234, !3236, !3240}
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3209, file: !3186, line: 35, baseType: !1610, size: 16)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3209, file: !3186, line: 36, baseType: !1610, size: 16, offset: 16)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3209, file: !3186, line: 37, baseType: !1610, size: 16, offset: 32)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !3209, file: !3186, line: 38, baseType: !1610, size: 16, offset: 48)
!3215 = !DIDerivedType(tag: DW_TAG_member, scope: !3209, file: !3186, line: 39, baseType: !3216, size: 128, offset: 64)
!3216 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3209, file: !3186, line: 39, size: 128, elements: !3217)
!3217 = !{!3218, !3223}
!3218 = !DIDerivedType(tag: DW_TAG_member, scope: !3216, file: !3186, line: 40, baseType: !3219, size: 128)
!3219 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3216, file: !3186, line: 40, size: 128, elements: !3220)
!3220 = !{!3221, !3222}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !3219, file: !3186, line: 41, baseType: !510, size: 64)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !3219, file: !3186, line: 42, baseType: !510, size: 64, offset: 64)
!3223 = !DIDerivedType(tag: DW_TAG_member, scope: !3216, file: !3186, line: 44, baseType: !3224, size: 128)
!3224 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3216, file: !3186, line: 44, size: 128, elements: !3225)
!3225 = !{!3226, !3227, !3228, !3229}
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3224, file: !3186, line: 45, baseType: !459, size: 32)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3224, file: !3186, line: 46, baseType: !459, size: 32, offset: 32)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3224, file: !3186, line: 47, baseType: !459, size: 32, offset: 64)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3224, file: !3186, line: 48, baseType: !459, size: 32, offset: 96)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !3209, file: !3186, line: 51, baseType: !459, size: 32, offset: 192)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !3209, file: !3186, line: 52, baseType: !459, size: 32, offset: 224)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3209, file: !3186, line: 55, baseType: !3233, size: 1024, offset: 256)
!3233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !459, size: 1024, elements: !831)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !3209, file: !3186, line: 58, baseType: !3235, size: 2048, offset: 1280)
!3235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !459, size: 2048, elements: !2898)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3209, file: !3186, line: 60, baseType: !3237, size: 384, offset: 3328)
!3237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !459, size: 384, elements: !3238)
!3238 = !{!3239}
!3239 = !DISubrange(count: 12)
!3240 = !DIDerivedType(tag: DW_TAG_member, scope: !3209, file: !3186, line: 62, baseType: !3241, size: 384, offset: 3712)
!3241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3209, file: !3186, line: 62, size: 384, elements: !3242)
!3242 = !{!3243, !3244}
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !3241, file: !3186, line: 63, baseType: !3237, size: 384)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !3241, file: !3186, line: 64, baseType: !3237, size: 384)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !3191, file: !3186, line: 307, baseType: !3246, size: 1088)
!3246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !3186, line: 79, size: 1088, elements: !3247)
!3247 = !{!3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3294}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3246, file: !3186, line: 80, baseType: !459, size: 32)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3246, file: !3186, line: 81, baseType: !459, size: 32, offset: 32)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3246, file: !3186, line: 82, baseType: !459, size: 32, offset: 64)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3246, file: !3186, line: 83, baseType: !459, size: 32, offset: 96)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3246, file: !3186, line: 84, baseType: !459, size: 32, offset: 128)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3246, file: !3186, line: 85, baseType: !459, size: 32, offset: 160)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3246, file: !3186, line: 86, baseType: !459, size: 32, offset: 192)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3246, file: !3186, line: 88, baseType: !3204, size: 640, offset: 224)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !3246, file: !3186, line: 89, baseType: !632, size: 8, offset: 864)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !3246, file: !3186, line: 90, baseType: !632, size: 8, offset: 872)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !3246, file: !3186, line: 91, baseType: !632, size: 8, offset: 880)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !3246, file: !3186, line: 92, baseType: !632, size: 8, offset: 888)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !3246, file: !3186, line: 93, baseType: !632, size: 8, offset: 896)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !3246, file: !3186, line: 94, baseType: !632, size: 8, offset: 904)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3246, file: !3186, line: 95, baseType: !3263, size: 64, offset: 960)
!3263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3264, size: 64)
!3264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !3265, line: 11, size: 128, elements: !3266)
!3265 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!3266 = !{!3267, !3268}
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !3264, file: !3265, line: 12, baseType: !447, size: 64)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !3264, file: !3265, line: 13, baseType: !3269, size: 64, offset: 64)
!3269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 64)
!3270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !3271, line: 56, size: 1344, elements: !3272)
!3271 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!3272 = !{!3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3270, file: !3271, line: 61, baseType: !435, size: 64)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3270, file: !3271, line: 62, baseType: !435, size: 64, offset: 64)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !3270, file: !3271, line: 63, baseType: !435, size: 64, offset: 128)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3270, file: !3271, line: 64, baseType: !435, size: 64, offset: 192)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !3270, file: !3271, line: 65, baseType: !435, size: 64, offset: 256)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !3270, file: !3271, line: 66, baseType: !435, size: 64, offset: 320)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !3270, file: !3271, line: 68, baseType: !435, size: 64, offset: 384)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !3270, file: !3271, line: 69, baseType: !435, size: 64, offset: 448)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !3270, file: !3271, line: 70, baseType: !435, size: 64, offset: 512)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !3270, file: !3271, line: 71, baseType: !435, size: 64, offset: 576)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !3270, file: !3271, line: 72, baseType: !435, size: 64, offset: 640)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !3270, file: !3271, line: 73, baseType: !435, size: 64, offset: 704)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !3270, file: !3271, line: 74, baseType: !435, size: 64, offset: 768)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !3270, file: !3271, line: 75, baseType: !435, size: 64, offset: 832)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !3270, file: !3271, line: 76, baseType: !435, size: 64, offset: 896)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !3270, file: !3271, line: 81, baseType: !435, size: 64, offset: 960)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3270, file: !3271, line: 83, baseType: !435, size: 64, offset: 1024)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !3270, file: !3271, line: 84, baseType: !435, size: 64, offset: 1088)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3270, file: !3271, line: 85, baseType: !435, size: 64, offset: 1152)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3270, file: !3271, line: 86, baseType: !435, size: 64, offset: 1216)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !3270, file: !3271, line: 87, baseType: !435, size: 64, offset: 1280)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !3246, file: !3186, line: 96, baseType: !459, size: 32, offset: 1024)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !3191, file: !3186, line: 308, baseType: !3296, size: 4608, align: 512)
!3296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !3186, line: 289, size: 4608, align: 512, elements: !3297)
!3297 = !{!3298, !3299, !3306}
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !3296, file: !3186, line: 290, baseType: !3209, size: 4096, align: 128)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3296, file: !3186, line: 291, baseType: !3300, size: 512, offset: 4096)
!3300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !3186, line: 268, size: 512, elements: !3301)
!3301 = !{!3302, !3303, !3304}
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !3300, file: !3186, line: 269, baseType: !510, size: 64)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !3300, file: !3186, line: 270, baseType: !510, size: 64, offset: 64)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !3300, file: !3186, line: 271, baseType: !3305, size: 384, offset: 128)
!3305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !510, size: 384, elements: !1949)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !3296, file: !3186, line: 292, baseType: !3307, offset: 4608)
!3307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !632, elements: !2045)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !3191, file: !3186, line: 309, baseType: !3309, size: 32768)
!3309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !632, size: 32768, elements: !3310)
!3310 = !{!3311}
!3311 = !DISubrange(count: 4096)
!3312 = !{!0, !3313, !3318, !3323, !3328, !3333, !3338, !4292, !4321, !4323, !4325, !4327, !4331, !4333, !4343, !4348, !4351, !4356, !4359, !4362, !4364, !4366, !4368, !4370, !4372, !4374, !4376, !4378, !4383, !4386, !4389, !4392, !4403, !4408, !4413, !4415, !4417, !4422, !4424, !4429, !4710}
!3313 = !DIGlobalVariableExpression(var: !3314, expr: !DIExpression())
!3314 = distinct !DIGlobalVariable(name: "__exitcall_ni_pcimio_driver_exit", scope: !2, file: !3, line: 1473, type: !3315, isLocal: true, isDefinition: true)
!3315 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !3316, line: 117, baseType: !3317)
!3316 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!3317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2895, size: 64)
!3318 = !DIGlobalVariableExpression(var: !3319, expr: !DIExpression())
!3319 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author236", scope: !2, file: !3, line: 1475, type: !3320, isLocal: true, isDefinition: true, align: 8)
!3320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !874, size: 376, elements: !3321)
!3321 = !{!3322}
!3322 = !DISubrange(count: 47)
!3323 = !DIGlobalVariableExpression(var: !3324, expr: !DIExpression())
!3324 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description237", scope: !2, file: !3, line: 1476, type: !3325, isLocal: true, isDefinition: true, align: 8)
!3325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !874, size: 368, elements: !3326)
!3326 = !{!3327}
!3327 = !DISubrange(count: 46)
!3328 = !DIGlobalVariableExpression(var: !3329, expr: !DIExpression())
!3329 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file238", scope: !2, file: !3, line: 1477, type: !3330, isLocal: true, isDefinition: true, align: 8)
!3330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !874, size: 448, elements: !3331)
!3331 = !{!3332}
!3332 = !DISubrange(count: 56)
!3333 = !DIGlobalVariableExpression(var: !3334, expr: !DIExpression())
!3334 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license239", scope: !2, file: !3, line: 1477, type: !3335, isLocal: true, isDefinition: true, align: 8)
!3335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !874, size: 176, elements: !3336)
!3336 = !{!3337}
!3337 = !DISubrange(count: 22)
!3338 = !DIGlobalVariableExpression(var: !3339, expr: !DIExpression())
!3339 = distinct !DIGlobalVariable(name: "ni_pcimio_driver", scope: !2, file: !3, line: 1384, type: !3340, isLocal: true, isDefinition: true)
!3340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_driver", file: !233, line: 437, size: 576, elements: !3341)
!3341 = !{!3342, !3344, !3345, !3346, !4282, !4283, !4287, !4288, !4291}
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3340, file: !233, line: 439, baseType: !3343, size: 64)
!3343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3340, size: 64)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "driver_name", scope: !3340, file: !233, line: 441, baseType: !873, size: 64, offset: 64)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !3340, file: !233, line: 442, baseType: !965, size: 64, offset: 128)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !3340, file: !233, line: 443, baseType: !3347, size: 64, offset: 192)
!3347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3348, size: 64)
!3348 = !DISubroutineType(types: !3349)
!3349 = !{!429, !3350, !4275}
!3350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3351, size: 64)
!3351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_device", file: !233, line: 541, size: 1920, elements: !3352)
!3352 = !{!3353, !3354, !3355, !3358, !3359, !4106, !4107, !4108, !4109, !4110, !4111, !4112, !4113, !4114, !4115, !4116, !4117, !4118, !4252, !4253, !4254, !4255, !4256, !4257, !4258, !4259, !4263, !4267, !4271}
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "use_count", scope: !3351, file: !233, line: 542, baseType: !429, size: 32)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3351, file: !233, line: 543, baseType: !3343, size: 64, offset: 64)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "pacer", scope: !3351, file: !233, line: 544, baseType: !3356, size: 64, offset: 128)
!3356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3357, size: 64)
!3357 = !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_8254", file: !233, line: 544, flags: DIFlagFwdDecl)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3351, file: !233, line: 545, baseType: !463, size: 64, offset: 192)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !3351, file: !233, line: 547, baseType: !3360, size: 64, offset: 256)
!3360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3361, size: 64)
!3361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !3362)
!3362 = !{!3363, !3660, !3661, !3664, !3665, !3716, !3807, !3808, !3809, !3810, !3811, !3820, !3925, !3938, !3941, !3942, !3946, !3948, !3949, !3950, !3954, !3960, !3961, !3964, !3968, !4058, !4059, !4060, !4061, !4062, !4094, !4095, !4096, !4099, !4102, !4103, !4104, !4105}
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3361, file: !73, line: 462, baseType: !3364, size: 512)
!3364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !3365, line: 64, size: 512, elements: !3366)
!3365 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!3366 = !{!3367, !3368, !3369, !3371, !3411, !3511, !3650, !3655, !3656, !3657, !3658, !3659}
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3364, file: !3365, line: 65, baseType: !873, size: 64)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3364, file: !3365, line: 66, baseType: !503, size: 128, offset: 64)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3364, file: !3365, line: 67, baseType: !3370, size: 64, offset: 192)
!3370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3364, size: 64)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !3364, file: !3365, line: 68, baseType: !3372, size: 64, offset: 256)
!3372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3373, size: 64)
!3373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !3365, line: 192, size: 704, elements: !3374)
!3374 = !{!3375, !3376, !3377, !3378}
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3373, file: !3365, line: 193, baseType: !503, size: 128)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !3373, file: !3365, line: 194, baseType: !844, offset: 128)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3373, file: !3365, line: 195, baseType: !3364, size: 512, offset: 128)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !3373, file: !3365, line: 196, baseType: !3379, size: 64, offset: 640)
!3379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3380, size: 64)
!3380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3381)
!3381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !3365, line: 156, size: 192, elements: !3382)
!3382 = !{!3383, !3388, !3393}
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3381, file: !3365, line: 157, baseType: !3384, size: 64)
!3384 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3385)
!3385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3386, size: 64)
!3386 = !DISubroutineType(types: !3387)
!3387 = !{!429, !3372, !3370}
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3381, file: !3365, line: 158, baseType: !3389, size: 64, offset: 64)
!3389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3390)
!3390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3391, size: 64)
!3391 = !DISubroutineType(types: !3392)
!3392 = !{!873, !3372, !3370}
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3381, file: !3365, line: 159, baseType: !3394, size: 64, offset: 128)
!3394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3395)
!3395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3396, size: 64)
!3396 = !DISubroutineType(types: !3397)
!3397 = !{!429, !3372, !3370, !3398}
!3398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3399, size: 64)
!3399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !3365, line: 148, size: 20736, elements: !3400)
!3400 = !{!3401, !3403, !3405, !3406, !3410}
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !3399, file: !3365, line: 149, baseType: !3402, size: 192)
!3402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 192, elements: !986)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !3399, file: !3365, line: 150, baseType: !3404, size: 4096, offset: 192)
!3404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 4096, elements: !2898)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !3399, file: !3365, line: 151, baseType: !429, size: 32, offset: 4288)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3399, file: !3365, line: 152, baseType: !3407, size: 16384, offset: 4320)
!3407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !875, size: 16384, elements: !3408)
!3408 = !{!3409}
!3409 = !DISubrange(count: 2048)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !3399, file: !3365, line: 153, baseType: !429, size: 32, offset: 20704)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !3364, file: !3365, line: 69, baseType: !3412, size: 64, offset: 320)
!3412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3413, size: 64)
!3413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !3365, line: 138, size: 448, elements: !3414)
!3414 = !{!3415, !3419, !3438, !3440, !3473, !3501, !3505}
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3413, file: !3365, line: 139, baseType: !3416, size: 64)
!3416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3417, size: 64)
!3417 = !DISubroutineType(types: !3418)
!3418 = !{null, !3370}
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !3413, file: !3365, line: 140, baseType: !3420, size: 64, offset: 64)
!3420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3421, size: 64)
!3421 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3422)
!3422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !3423, line: 230, size: 128, elements: !3424)
!3423 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!3424 = !{!3425, !3434}
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3422, file: !3423, line: 231, baseType: !3426, size: 64)
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 64)
!3427 = !DISubroutineType(types: !3428)
!3428 = !{!1583, !3370, !3429, !899}
!3429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3430, size: 64)
!3430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !3423, line: 30, size: 128, elements: !3431)
!3431 = !{!3432, !3433}
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3430, file: !3423, line: 31, baseType: !873, size: 64)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3430, file: !3423, line: 32, baseType: !767, size: 16, offset: 64)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3422, file: !3423, line: 232, baseType: !3435, size: 64, offset: 64)
!3435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3436, size: 64)
!3436 = !DISubroutineType(types: !3437)
!3437 = !{!1583, !3370, !3429, !873, !1586}
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !3413, file: !3365, line: 141, baseType: !3439, size: 64, offset: 128)
!3439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3429, size: 64)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !3413, file: !3365, line: 142, baseType: !3441, size: 64, offset: 192)
!3441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3442, size: 64)
!3442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3443, size: 64)
!3443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3444)
!3444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !3423, line: 84, size: 320, elements: !3445)
!3445 = !{!3446, !3447, !3451, !3470, !3471}
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3444, file: !3423, line: 85, baseType: !873, size: 64)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !3444, file: !3423, line: 86, baseType: !3448, size: 64, offset: 64)
!3448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3449, size: 64)
!3449 = !DISubroutineType(types: !3450)
!3450 = !{!767, !3370, !3429, !429}
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !3444, file: !3423, line: 88, baseType: !3452, size: 64, offset: 128)
!3452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3453, size: 64)
!3453 = !DISubroutineType(types: !3454)
!3454 = !{!767, !3370, !3455, !429}
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3456, size: 64)
!3456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !3423, line: 168, size: 448, elements: !3457)
!3457 = !{!3458, !3459, !3460, !3461, !3465, !3466}
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3456, file: !3423, line: 169, baseType: !3430, size: 128)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3456, file: !3423, line: 170, baseType: !1586, size: 64, offset: 128)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3456, file: !3423, line: 171, baseType: !463, size: 64, offset: 192)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3456, file: !3423, line: 172, baseType: !3462, size: 64, offset: 256)
!3462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3463, size: 64)
!3463 = !DISubroutineType(types: !3464)
!3464 = !{!1583, !1554, !3370, !3455, !899, !937, !1586}
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3456, file: !3423, line: 174, baseType: !3462, size: 64, offset: 320)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3456, file: !3423, line: 176, baseType: !3467, size: 64, offset: 384)
!3467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3468, size: 64)
!3468 = !DISubroutineType(types: !3469)
!3469 = !{!429, !1554, !3370, !3455, !666}
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !3444, file: !3423, line: 90, baseType: !3439, size: 64, offset: 192)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !3444, file: !3423, line: 91, baseType: !3472, size: 64, offset: 256)
!3472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3455, size: 64)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !3413, file: !3365, line: 143, baseType: !3474, size: 64, offset: 256)
!3474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3475, size: 64)
!3475 = !DISubroutineType(types: !3476)
!3476 = !{!3477, !3370}
!3477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3478, size: 64)
!3478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3479)
!3479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3480)
!3480 = !{!3481, !3482, !3486, !3490, !3496, !3500}
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3479, file: !61, line: 40, baseType: !60, size: 32)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3479, file: !61, line: 41, baseType: !3483, size: 64, offset: 64)
!3483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3484, size: 64)
!3484 = !DISubroutineType(types: !3485)
!3485 = !{!918}
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3479, file: !61, line: 42, baseType: !3487, size: 64, offset: 128)
!3487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3488, size: 64)
!3488 = !DISubroutineType(types: !3489)
!3489 = !{!463}
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3479, file: !61, line: 43, baseType: !3491, size: 64, offset: 192)
!3491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3492, size: 64)
!3492 = !DISubroutineType(types: !3493)
!3493 = !{!3131, !3494}
!3494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3495, size: 64)
!3495 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3479, file: !61, line: 44, baseType: !3497, size: 64, offset: 256)
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3498, size: 64)
!3498 = !DISubroutineType(types: !3499)
!3499 = !{!3131}
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3479, file: !61, line: 45, baseType: !1487, size: 64, offset: 320)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3413, file: !3365, line: 144, baseType: !3502, size: 64, offset: 320)
!3502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3503, size: 64)
!3503 = !DISubroutineType(types: !3504)
!3504 = !{!3131, !3370}
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3413, file: !3365, line: 145, baseType: !3506, size: 64, offset: 384)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3507 = !DISubroutineType(types: !3508)
!3508 = !{null, !3370, !3509, !3510}
!3509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!3510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !3364, file: !3365, line: 70, baseType: !3512, size: 64, offset: 384)
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3513, size: 64)
!3513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !951, line: 123, size: 1024, elements: !3514)
!3514 = !{!3515, !3516, !3517, !3518, !3519, !3520, !3521, !3522, !3643, !3644, !3645, !3646, !3647}
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3513, file: !951, line: 124, baseType: !470, size: 32)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3513, file: !951, line: 125, baseType: !470, size: 32, offset: 32)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3513, file: !951, line: 135, baseType: !3512, size: 64, offset: 64)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3513, file: !951, line: 136, baseType: !873, size: 64, offset: 128)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3513, file: !951, line: 138, baseType: !495, size: 192, align: 64, offset: 192)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3513, file: !951, line: 140, baseType: !3131, size: 64, offset: 384)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3513, file: !951, line: 141, baseType: !7, size: 32, offset: 448)
!3522 = !DIDerivedType(tag: DW_TAG_member, scope: !3513, file: !951, line: 142, baseType: !3523, size: 256, offset: 512)
!3523 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3513, file: !951, line: 142, size: 256, elements: !3524)
!3524 = !{!3525, !3571, !3575}
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3523, file: !951, line: 143, baseType: !3526, size: 192)
!3526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !951, line: 91, size: 192, elements: !3527)
!3527 = !{!3528, !3529, !3530}
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3526, file: !951, line: 92, baseType: !435, size: 64)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3526, file: !951, line: 94, baseType: !622, size: 64, offset: 64)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3526, file: !951, line: 100, baseType: !3531, size: 64, offset: 128)
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3532, size: 64)
!3532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !951, line: 180, size: 704, elements: !3533)
!3533 = !{!3534, !3535, !3536, !3543, !3544, !3545, !3569, !3570}
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3532, file: !951, line: 182, baseType: !3512, size: 64)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3532, file: !951, line: 183, baseType: !7, size: 32, offset: 64)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3532, file: !951, line: 186, baseType: !3537, size: 192, offset: 128)
!3537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3538, line: 19, size: 192, elements: !3539)
!3538 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3539 = !{!3540, !3541, !3542}
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3537, file: !3538, line: 20, baseType: !2187, size: 128)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3537, file: !3538, line: 21, baseType: !7, size: 32, offset: 128)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3537, file: !3538, line: 22, baseType: !7, size: 32, offset: 160)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3532, file: !951, line: 187, baseType: !459, size: 32, offset: 320)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3532, file: !951, line: 188, baseType: !459, size: 32, offset: 352)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3532, file: !951, line: 189, baseType: !3546, size: 64, offset: 384)
!3546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3547, size: 64)
!3547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !951, line: 168, size: 320, elements: !3548)
!3548 = !{!3549, !3553, !3557, !3561, !3565}
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3547, file: !951, line: 169, baseType: !3550, size: 64)
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 64)
!3551 = !DISubroutineType(types: !3552)
!3552 = !{!429, !1048, !3531}
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3547, file: !951, line: 171, baseType: !3554, size: 64, offset: 64)
!3554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3555, size: 64)
!3555 = !DISubroutineType(types: !3556)
!3556 = !{!429, !3512, !873, !767}
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3547, file: !951, line: 173, baseType: !3558, size: 64, offset: 128)
!3558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3559, size: 64)
!3559 = !DISubroutineType(types: !3560)
!3560 = !{!429, !3512}
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3547, file: !951, line: 174, baseType: !3562, size: 64, offset: 192)
!3562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3563, size: 64)
!3563 = !DISubroutineType(types: !3564)
!3564 = !{!429, !3512, !3512, !873}
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3547, file: !951, line: 176, baseType: !3566, size: 64, offset: 256)
!3566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3567, size: 64)
!3567 = !DISubroutineType(types: !3568)
!3568 = !{!429, !1048, !3512, !3531}
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3532, file: !951, line: 192, baseType: !503, size: 128, offset: 448)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3532, file: !951, line: 194, baseType: !1337, size: 128, offset: 576)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3523, file: !951, line: 144, baseType: !3572, size: 64)
!3572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !951, line: 103, size: 64, elements: !3573)
!3573 = !{!3574}
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3572, file: !951, line: 104, baseType: !3512, size: 64)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3523, file: !951, line: 145, baseType: !3576, size: 256)
!3576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !951, line: 107, size: 256, elements: !3577)
!3577 = !{!3578, !3638, !3641, !3642}
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3576, file: !951, line: 108, baseType: !3579, size: 64)
!3579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3580, size: 64)
!3580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3581)
!3581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !951, line: 217, size: 768, elements: !3582)
!3582 = !{!3583, !3603, !3607, !3611, !3615, !3619, !3623, !3627, !3628, !3629, !3630, !3634}
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3581, file: !951, line: 222, baseType: !3584, size: 64)
!3584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3585, size: 64)
!3585 = !DISubroutineType(types: !3586)
!3586 = !{!429, !3587}
!3587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3588, size: 64)
!3588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !951, line: 197, size: 1088, elements: !3589)
!3589 = !{!3590, !3591, !3592, !3593, !3594, !3595, !3596, !3597, !3598, !3599, !3600, !3601, !3602}
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3588, file: !951, line: 199, baseType: !3512, size: 64)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3588, file: !951, line: 200, baseType: !1554, size: 64, offset: 64)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3588, file: !951, line: 201, baseType: !1048, size: 64, offset: 128)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3588, file: !951, line: 202, baseType: !463, size: 64, offset: 192)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3588, file: !951, line: 205, baseType: !1090, size: 192, offset: 256)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3588, file: !951, line: 206, baseType: !1090, size: 192, offset: 448)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3588, file: !951, line: 207, baseType: !429, size: 32, offset: 640)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3588, file: !951, line: 208, baseType: !503, size: 128, offset: 704)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3588, file: !951, line: 209, baseType: !899, size: 64, offset: 832)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3588, file: !951, line: 211, baseType: !1586, size: 64, offset: 896)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3588, file: !951, line: 212, baseType: !918, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3588, file: !951, line: 213, baseType: !918, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3588, file: !951, line: 214, baseType: !695, size: 64, offset: 1024)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3581, file: !951, line: 223, baseType: !3604, size: 64, offset: 64)
!3604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3605, size: 64)
!3605 = !DISubroutineType(types: !3606)
!3606 = !{null, !3587}
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3581, file: !951, line: 236, baseType: !3608, size: 64, offset: 128)
!3608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3609, size: 64)
!3609 = !DISubroutineType(types: !3610)
!3610 = !{!429, !1048, !463}
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3581, file: !951, line: 238, baseType: !3612, size: 64, offset: 192)
!3612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3613, size: 64)
!3613 = !DISubroutineType(types: !3614)
!3614 = !{!463, !1048, !1589}
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3581, file: !951, line: 239, baseType: !3616, size: 64, offset: 256)
!3616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3617, size: 64)
!3617 = !DISubroutineType(types: !3618)
!3618 = !{!463, !1048, !463, !1589}
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3581, file: !951, line: 240, baseType: !3620, size: 64, offset: 320)
!3620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3621, size: 64)
!3621 = !DISubroutineType(types: !3622)
!3622 = !{null, !1048, !463}
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3581, file: !951, line: 242, baseType: !3624, size: 64, offset: 384)
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 64)
!3625 = !DISubroutineType(types: !3626)
!3626 = !{!1583, !3587, !899, !1586, !937}
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3581, file: !951, line: 252, baseType: !1586, size: 64, offset: 448)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3581, file: !951, line: 259, baseType: !918, size: 8, offset: 512)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3581, file: !951, line: 260, baseType: !3624, size: 64, offset: 576)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3581, file: !951, line: 263, baseType: !3631, size: 64, offset: 640)
!3631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3632, size: 64)
!3632 = !DISubroutineType(types: !3633)
!3633 = !{!1644, !3587, !1645}
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3581, file: !951, line: 266, baseType: !3635, size: 64, offset: 704)
!3635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3636, size: 64)
!3636 = !DISubroutineType(types: !3637)
!3637 = !{!429, !3587, !666}
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3576, file: !951, line: 109, baseType: !3639, size: 64, offset: 64)
!3639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3640, size: 64)
!3640 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !951, line: 31, flags: DIFlagFwdDecl)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3576, file: !951, line: 110, baseType: !937, size: 64, offset: 128)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3576, file: !951, line: 111, baseType: !3512, size: 64, offset: 192)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3513, file: !951, line: 148, baseType: !463, size: 64, offset: 768)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3513, file: !951, line: 154, baseType: !510, size: 64, offset: 832)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3513, file: !951, line: 156, baseType: !438, size: 16, offset: 896)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3513, file: !951, line: 157, baseType: !767, size: 16, offset: 912)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3513, file: !951, line: 158, baseType: !3648, size: 64, offset: 960)
!3648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3649, size: 64)
!3649 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !951, line: 32, flags: DIFlagFwdDecl)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3364, file: !3365, line: 71, baseType: !3651, size: 32, offset: 448)
!3651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3652, line: 19, size: 32, elements: !3653)
!3652 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3653 = !{!3654}
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3651, file: !3652, line: 20, baseType: !465, size: 32)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !3364, file: !3365, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !3364, file: !3365, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !3364, file: !3365, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !3364, file: !3365, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !3364, file: !3365, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3361, file: !73, line: 463, baseType: !3360, size: 64, offset: 512)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3361, file: !73, line: 465, baseType: !3662, size: 64, offset: 576)
!3662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3663, size: 64)
!3663 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !3361, file: !73, line: 467, baseType: !873, size: 64, offset: 640)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3361, file: !73, line: 468, baseType: !3666, size: 64, offset: 704)
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 64)
!3667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3668)
!3668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3669)
!3669 = !{!3670, !3671, !3672, !3676, !3681, !3685}
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3668, file: !73, line: 88, baseType: !873, size: 64)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3668, file: !73, line: 89, baseType: !3441, size: 64, offset: 64)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3668, file: !73, line: 90, baseType: !3673, size: 64, offset: 128)
!3673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3674, size: 64)
!3674 = !DISubroutineType(types: !3675)
!3675 = !{!429, !3360, !3398}
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3668, file: !73, line: 91, baseType: !3677, size: 64, offset: 192)
!3677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3678, size: 64)
!3678 = !DISubroutineType(types: !3679)
!3679 = !{!899, !3360, !3680, !3509, !3510}
!3680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3668, file: !73, line: 93, baseType: !3682, size: 64, offset: 256)
!3682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3683, size: 64)
!3683 = !DISubroutineType(types: !3684)
!3684 = !{null, !3360}
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3668, file: !73, line: 95, baseType: !3686, size: 64, offset: 320)
!3686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3687, size: 64)
!3687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3688)
!3688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3689)
!3689 = !{!3690, !3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715}
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3688, file: !80, line: 279, baseType: !3691, size: 64)
!3691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3692, size: 64)
!3692 = !DISubroutineType(types: !3693)
!3693 = !{!429, !3360}
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3688, file: !80, line: 280, baseType: !3682, size: 64, offset: 64)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3688, file: !80, line: 281, baseType: !3691, size: 64, offset: 128)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3688, file: !80, line: 282, baseType: !3691, size: 64, offset: 192)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3688, file: !80, line: 283, baseType: !3691, size: 64, offset: 256)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3688, file: !80, line: 284, baseType: !3691, size: 64, offset: 320)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3688, file: !80, line: 285, baseType: !3691, size: 64, offset: 384)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3688, file: !80, line: 286, baseType: !3691, size: 64, offset: 448)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3688, file: !80, line: 287, baseType: !3691, size: 64, offset: 512)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3688, file: !80, line: 288, baseType: !3691, size: 64, offset: 576)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3688, file: !80, line: 289, baseType: !3691, size: 64, offset: 640)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3688, file: !80, line: 290, baseType: !3691, size: 64, offset: 704)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3688, file: !80, line: 291, baseType: !3691, size: 64, offset: 768)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3688, file: !80, line: 292, baseType: !3691, size: 64, offset: 832)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3688, file: !80, line: 293, baseType: !3691, size: 64, offset: 896)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3688, file: !80, line: 294, baseType: !3691, size: 64, offset: 960)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3688, file: !80, line: 295, baseType: !3691, size: 64, offset: 1024)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3688, file: !80, line: 296, baseType: !3691, size: 64, offset: 1088)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3688, file: !80, line: 297, baseType: !3691, size: 64, offset: 1152)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3688, file: !80, line: 298, baseType: !3691, size: 64, offset: 1216)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3688, file: !80, line: 299, baseType: !3691, size: 64, offset: 1280)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3688, file: !80, line: 300, baseType: !3691, size: 64, offset: 1344)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3688, file: !80, line: 301, baseType: !3691, size: 64, offset: 1408)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3361, file: !73, line: 470, baseType: !3717, size: 64, offset: 768)
!3717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3718, size: 64)
!3718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3719, line: 82, size: 1408, elements: !3720)
!3719 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3720 = !{!3721, !3722, !3723, !3724, !3725, !3726, !3727, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3797, !3798, !3802, !3805, !3806}
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3718, file: !3719, line: 83, baseType: !873, size: 64)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3718, file: !3719, line: 84, baseType: !873, size: 64, offset: 64)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3718, file: !3719, line: 85, baseType: !3360, size: 64, offset: 128)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3718, file: !3719, line: 86, baseType: !3441, size: 64, offset: 192)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3718, file: !3719, line: 87, baseType: !3441, size: 64, offset: 256)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3718, file: !3719, line: 88, baseType: !3441, size: 64, offset: 320)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3718, file: !3719, line: 90, baseType: !3728, size: 64, offset: 384)
!3728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3729, size: 64)
!3729 = !DISubroutineType(types: !3730)
!3730 = !{!429, !3360, !3731}
!3731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3732, size: 64)
!3732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !3733)
!3733 = !{!3734, !3735, !3736, !3737, !3738, !3739, !3740, !3753, !3766, !3767, !3768, !3769, !3770, !3778, !3779, !3780, !3781, !3782, !3783}
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3732, file: !67, line: 96, baseType: !873, size: 64)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3732, file: !67, line: 97, baseType: !3717, size: 64, offset: 64)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3732, file: !67, line: 99, baseType: !965, size: 64, offset: 128)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3732, file: !67, line: 100, baseType: !873, size: 64, offset: 192)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3732, file: !67, line: 102, baseType: !918, size: 8, offset: 256)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3732, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3732, file: !67, line: 105, baseType: !3741, size: 64, offset: 320)
!3741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3742, size: 64)
!3742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3743)
!3743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3744, line: 262, size: 1600, elements: !3745)
!3744 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3745 = !{!3746, !3747, !3748, !3752}
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3743, file: !3744, line: 263, baseType: !1382, size: 256)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3743, file: !3744, line: 264, baseType: !1382, size: 256, offset: 256)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3743, file: !3744, line: 265, baseType: !3749, size: 1024, offset: 512)
!3749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !875, size: 1024, elements: !3750)
!3750 = !{!3751}
!3751 = !DISubrange(count: 128)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3743, file: !3744, line: 266, baseType: !3131, size: 64, offset: 1536)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3732, file: !67, line: 106, baseType: !3754, size: 64, offset: 384)
!3754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3755, size: 64)
!3755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3756)
!3756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3744, line: 210, size: 256, elements: !3757)
!3757 = !{!3758, !3762, !3764, !3765}
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3756, file: !3744, line: 211, baseType: !3759, size: 72)
!3759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !633, size: 72, elements: !3760)
!3760 = !{!3761}
!3761 = !DISubrange(count: 9)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3756, file: !3744, line: 212, baseType: !3763, size: 64, offset: 128)
!3763 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3744, line: 14, baseType: !435)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3756, file: !3744, line: 213, baseType: !439, size: 32, offset: 192)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3756, file: !3744, line: 214, baseType: !439, size: 32, offset: 224)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3732, file: !67, line: 108, baseType: !3691, size: 64, offset: 448)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3732, file: !67, line: 109, baseType: !3682, size: 64, offset: 512)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3732, file: !67, line: 110, baseType: !3691, size: 64, offset: 576)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3732, file: !67, line: 111, baseType: !3682, size: 64, offset: 640)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3732, file: !67, line: 112, baseType: !3771, size: 64, offset: 704)
!3771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3772, size: 64)
!3772 = !DISubroutineType(types: !3773)
!3773 = !{!429, !3360, !3774}
!3774 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3775)
!3775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3776)
!3776 = !{!3777}
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3775, file: !80, line: 51, baseType: !429, size: 32)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3732, file: !67, line: 113, baseType: !3691, size: 64, offset: 768)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3732, file: !67, line: 114, baseType: !3441, size: 64, offset: 832)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3732, file: !67, line: 115, baseType: !3441, size: 64, offset: 896)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3732, file: !67, line: 117, baseType: !3686, size: 64, offset: 960)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3732, file: !67, line: 118, baseType: !3682, size: 64, offset: 1024)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3732, file: !67, line: 120, baseType: !3784, size: 64, offset: 1088)
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 64)
!3785 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3718, file: !3719, line: 91, baseType: !3673, size: 64, offset: 448)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3718, file: !3719, line: 92, baseType: !3691, size: 64, offset: 512)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3718, file: !3719, line: 93, baseType: !3682, size: 64, offset: 576)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3718, file: !3719, line: 94, baseType: !3691, size: 64, offset: 640)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3718, file: !3719, line: 95, baseType: !3682, size: 64, offset: 704)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3718, file: !3719, line: 97, baseType: !3691, size: 64, offset: 768)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3718, file: !3719, line: 98, baseType: !3691, size: 64, offset: 832)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3718, file: !3719, line: 100, baseType: !3771, size: 64, offset: 896)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3718, file: !3719, line: 101, baseType: !3691, size: 64, offset: 960)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3718, file: !3719, line: 103, baseType: !3691, size: 64, offset: 1024)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3718, file: !3719, line: 105, baseType: !3691, size: 64, offset: 1088)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3718, file: !3719, line: 107, baseType: !3686, size: 64, offset: 1152)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3718, file: !3719, line: 109, baseType: !3799, size: 64, offset: 1216)
!3799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3800, size: 64)
!3800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3801)
!3801 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3719, line: 109, flags: DIFlagFwdDecl)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3718, file: !3719, line: 111, baseType: !3803, size: 64, offset: 1280)
!3803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3804, size: 64)
!3804 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3719, line: 111, flags: DIFlagFwdDecl)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3718, file: !3719, line: 112, baseType: !980, offset: 1344)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3718, file: !3719, line: 114, baseType: !918, size: 8, offset: 1344)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3361, file: !73, line: 471, baseType: !3731, size: 64, offset: 832)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !3361, file: !73, line: 473, baseType: !463, size: 64, offset: 896)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3361, file: !73, line: 475, baseType: !463, size: 64, offset: 960)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3361, file: !73, line: 480, baseType: !1090, size: 192, offset: 1024)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3361, file: !73, line: 484, baseType: !3812, size: 576, offset: 1216)
!3812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3813)
!3813 = !{!3814, !3815, !3816, !3817, !3818, !3819}
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3812, file: !73, line: 362, baseType: !503, size: 128)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3812, file: !73, line: 363, baseType: !503, size: 128, offset: 128)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3812, file: !73, line: 364, baseType: !503, size: 128, offset: 256)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3812, file: !73, line: 365, baseType: !503, size: 128, offset: 384)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3812, file: !73, line: 366, baseType: !918, size: 8, offset: 512)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3812, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !3361, file: !73, line: 485, baseType: !3821, size: 2304, offset: 1792)
!3821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !3822)
!3822 = !{!3823, !3824, !3825, !3826, !3827, !3828, !3829, !3830, !3831, !3832, !3833, !3834, !3835, !3836, !3837, !3838, !3876, !3877, !3878, !3879, !3880, !3881, !3882, !3883, !3884, !3885, !3886, !3887, !3888, !3889, !3890, !3891, !3892, !3893, !3894, !3895, !3896, !3897, !3898, !3899, !3900, !3901, !3902, !3903, !3904, !3905, !3906, !3907, !3908, !3918, !3922}
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3821, file: !80, line: 566, baseType: !3774, size: 32)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3821, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3821, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3821, file: !80, line: 569, baseType: !918, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3821, file: !80, line: 570, baseType: !918, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3821, file: !80, line: 571, baseType: !918, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3821, file: !80, line: 572, baseType: !918, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3821, file: !80, line: 573, baseType: !918, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3821, file: !80, line: 574, baseType: !918, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3821, file: !80, line: 575, baseType: !918, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3821, file: !80, line: 576, baseType: !918, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3821, file: !80, line: 577, baseType: !459, size: 32, offset: 64)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3821, file: !80, line: 578, baseType: !844, offset: 96)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3821, file: !80, line: 580, baseType: !503, size: 128, offset: 128)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3821, file: !80, line: 581, baseType: !2401, size: 192, offset: 256)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3821, file: !80, line: 582, baseType: !3839, size: 64, offset: 448)
!3839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3840, size: 64)
!3840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3841, line: 43, size: 1472, elements: !3842)
!3841 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3842 = !{!3843, !3844, !3845, !3846, !3847, !3850, !3862, !3863, !3864, !3865, !3866, !3867, !3868, !3869, !3870, !3871, !3872, !3873, !3874, !3875}
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3840, file: !3841, line: 44, baseType: !873, size: 64)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3840, file: !3841, line: 45, baseType: !429, size: 32, offset: 64)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3840, file: !3841, line: 46, baseType: !503, size: 128, offset: 128)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3840, file: !3841, line: 47, baseType: !844, offset: 256)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3840, file: !3841, line: 48, baseType: !3848, size: 64, offset: 256)
!3848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3849, size: 64)
!3849 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3840, file: !3841, line: 49, baseType: !3851, size: 320, offset: 320)
!3851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3852, line: 11, size: 320, elements: !3853)
!3852 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3853 = !{!3854, !3855, !3856, !3861}
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3851, file: !3852, line: 16, baseType: !974, size: 128)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3851, file: !3852, line: 17, baseType: !435, size: 64, offset: 128)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3851, file: !3852, line: 18, baseType: !3857, size: 64, offset: 192)
!3857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3858, size: 64)
!3858 = !DISubroutineType(types: !3859)
!3859 = !{null, !3860}
!3860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3851, size: 64)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3851, file: !3852, line: 19, baseType: !459, size: 32, offset: 256)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3840, file: !3841, line: 50, baseType: !435, size: 64, offset: 640)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3840, file: !3841, line: 51, baseType: !559, size: 64, offset: 704)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3840, file: !3841, line: 52, baseType: !559, size: 64, offset: 768)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3840, file: !3841, line: 53, baseType: !559, size: 64, offset: 832)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3840, file: !3841, line: 54, baseType: !559, size: 64, offset: 896)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3840, file: !3841, line: 55, baseType: !559, size: 64, offset: 960)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3840, file: !3841, line: 56, baseType: !435, size: 64, offset: 1024)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3840, file: !3841, line: 57, baseType: !435, size: 64, offset: 1088)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3840, file: !3841, line: 58, baseType: !435, size: 64, offset: 1152)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3840, file: !3841, line: 59, baseType: !435, size: 64, offset: 1216)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3840, file: !3841, line: 60, baseType: !435, size: 64, offset: 1280)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3840, file: !3841, line: 61, baseType: !3360, size: 64, offset: 1344)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3840, file: !3841, line: 62, baseType: !918, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3840, file: !3841, line: 63, baseType: !918, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3821, file: !80, line: 583, baseType: !918, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3821, file: !80, line: 584, baseType: !918, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3821, file: !80, line: 585, baseType: !918, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3821, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3821, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3821, file: !80, line: 592, baseType: !551, size: 512, offset: 576)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3821, file: !80, line: 593, baseType: !510, size: 64, offset: 1088)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3821, file: !80, line: 594, baseType: !1446, size: 256, offset: 1152)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3821, file: !80, line: 595, baseType: !1337, size: 128, offset: 1408)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3821, file: !80, line: 596, baseType: !3848, size: 64, offset: 1536)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3821, file: !80, line: 597, baseType: !470, size: 32, offset: 1600)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3821, file: !80, line: 598, baseType: !470, size: 32, offset: 1632)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3821, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3821, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3821, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3821, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3821, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3821, file: !80, line: 604, baseType: !918, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3821, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3821, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3821, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3821, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3821, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3821, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3821, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3821, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3821, file: !80, line: 613, baseType: !429, size: 32, offset: 1792)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3821, file: !80, line: 614, baseType: !429, size: 32, offset: 1824)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3821, file: !80, line: 615, baseType: !510, size: 64, offset: 1856)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3821, file: !80, line: 616, baseType: !510, size: 64, offset: 1920)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3821, file: !80, line: 617, baseType: !510, size: 64, offset: 1984)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3821, file: !80, line: 618, baseType: !510, size: 64, offset: 2048)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3821, file: !80, line: 620, baseType: !3909, size: 64, offset: 2112)
!3909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3910, size: 64)
!3910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !3911)
!3911 = !{!3912, !3913, !3914, !3915}
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3910, file: !80, line: 537, baseType: !844)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3910, file: !80, line: 538, baseType: !7, size: 32)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3910, file: !80, line: 540, baseType: !503, size: 128, offset: 64)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3910, file: !80, line: 543, baseType: !3916, size: 64, offset: 192)
!3916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3917, size: 64)
!3917 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !80, line: 534, flags: DIFlagFwdDecl)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3821, file: !80, line: 621, baseType: !3919, size: 64, offset: 2176)
!3919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3920, size: 64)
!3920 = !DISubroutineType(types: !3921)
!3921 = !{null, !3360, !1905}
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3821, file: !80, line: 622, baseType: !3923, size: 64, offset: 2240)
!3923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3924, size: 64)
!3924 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !3361, file: !73, line: 486, baseType: !3926, size: 64, offset: 4096)
!3926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3927, size: 64)
!3927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !3928)
!3928 = !{!3929, !3930, !3931, !3935, !3936, !3937}
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3927, file: !80, line: 643, baseType: !3688, size: 1472)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3927, file: !80, line: 644, baseType: !3691, size: 64, offset: 1472)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3927, file: !80, line: 645, baseType: !3932, size: 64, offset: 1536)
!3932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3933, size: 64)
!3933 = !DISubroutineType(types: !3934)
!3934 = !{null, !3360, !918}
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3927, file: !80, line: 646, baseType: !3691, size: 64, offset: 1600)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3927, file: !80, line: 647, baseType: !3682, size: 64, offset: 1664)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3927, file: !80, line: 648, baseType: !3682, size: 64, offset: 1728)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !3361, file: !73, line: 493, baseType: !3939, size: 64, offset: 4160)
!3939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3940, size: 64)
!3940 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !73, line: 493, flags: DIFlagFwdDecl)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !3361, file: !73, line: 499, baseType: !503, size: 128, offset: 4224)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !3361, file: !73, line: 502, baseType: !3943, size: 64, offset: 4352)
!3943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3944, size: 64)
!3944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3945)
!3945 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !73, line: 502, flags: DIFlagFwdDecl)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !3361, file: !73, line: 504, baseType: !3947, size: 64, offset: 4416)
!3947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 64)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !3361, file: !73, line: 505, baseType: !510, size: 64, offset: 4480)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !3361, file: !73, line: 510, baseType: !510, size: 64, offset: 4544)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !3361, file: !73, line: 511, baseType: !3951, size: 64, offset: 4608)
!3951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3952, size: 64)
!3952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3953)
!3953 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !3361, file: !73, line: 513, baseType: !3955, size: 64, offset: 4672)
!3955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3956, size: 64)
!3956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !3957)
!3957 = !{!3958, !3959}
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3956, file: !73, line: 293, baseType: !7, size: 32)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3956, file: !73, line: 294, baseType: !435, size: 64, offset: 64)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !3361, file: !73, line: 515, baseType: !503, size: 128, offset: 4736)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !3361, file: !73, line: 526, baseType: !3962, offset: 4864)
!3962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3963, line: 5, elements: !519)
!3963 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !3361, file: !73, line: 528, baseType: !3965, size: 64, offset: 4864)
!3965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3966, size: 64)
!3966 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3967, line: 14, flags: DIFlagFwdDecl)
!3967 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3361, file: !73, line: 529, baseType: !3969, size: 64, offset: 4928)
!3969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3970, size: 64)
!3970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3971, line: 17, size: 192, elements: !3972)
!3971 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3972 = !{!3973, !3974, !4057}
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3970, file: !3971, line: 18, baseType: !3969, size: 64)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3970, file: !3971, line: 19, baseType: !3975, size: 64, offset: 64)
!3975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3976, size: 64)
!3976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3977)
!3977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3971, line: 110, size: 1152, elements: !3978)
!3978 = !{!3979, !3983, !3987, !3993, !3999, !4003, !4007, !4012, !4016, !4017, !4021, !4025, !4029, !4040, !4041, !4042, !4043, !4053}
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3977, file: !3971, line: 111, baseType: !3980, size: 64)
!3980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3981, size: 64)
!3981 = !DISubroutineType(types: !3982)
!3982 = !{!3969, !3969}
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3977, file: !3971, line: 112, baseType: !3984, size: 64, offset: 64)
!3984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3985, size: 64)
!3985 = !DISubroutineType(types: !3986)
!3986 = !{null, !3969}
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3977, file: !3971, line: 113, baseType: !3988, size: 64, offset: 128)
!3988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3989, size: 64)
!3989 = !DISubroutineType(types: !3990)
!3990 = !{!918, !3991}
!3991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3992, size: 64)
!3992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3970)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3977, file: !3971, line: 114, baseType: !3994, size: 64, offset: 192)
!3994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3995, size: 64)
!3995 = !DISubroutineType(types: !3996)
!3996 = !{!3131, !3991, !3997}
!3997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3998, size: 64)
!3998 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3361)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3977, file: !3971, line: 116, baseType: !4000, size: 64, offset: 256)
!4000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4001, size: 64)
!4001 = !DISubroutineType(types: !4002)
!4002 = !{!918, !3991, !873}
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3977, file: !3971, line: 118, baseType: !4004, size: 64, offset: 320)
!4004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4005, size: 64)
!4005 = !DISubroutineType(types: !4006)
!4006 = !{!429, !3991, !873, !7, !463, !1586}
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3977, file: !3971, line: 123, baseType: !4008, size: 64, offset: 384)
!4008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4009, size: 64)
!4009 = !DISubroutineType(types: !4010)
!4010 = !{!429, !3991, !873, !4011, !1586}
!4011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3977, file: !3971, line: 126, baseType: !4013, size: 64, offset: 448)
!4013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4014, size: 64)
!4014 = !DISubroutineType(types: !4015)
!4015 = !{!873, !3991}
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3977, file: !3971, line: 127, baseType: !4013, size: 64, offset: 512)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3977, file: !3971, line: 128, baseType: !4018, size: 64, offset: 576)
!4018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4019, size: 64)
!4019 = !DISubroutineType(types: !4020)
!4020 = !{!3969, !3991}
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3977, file: !3971, line: 130, baseType: !4022, size: 64, offset: 640)
!4022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4023, size: 64)
!4023 = !DISubroutineType(types: !4024)
!4024 = !{!3969, !3991, !3969}
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3977, file: !3971, line: 133, baseType: !4026, size: 64, offset: 704)
!4026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4027, size: 64)
!4027 = !DISubroutineType(types: !4028)
!4028 = !{!3969, !3991, !873}
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3977, file: !3971, line: 135, baseType: !4030, size: 64, offset: 768)
!4030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4031, size: 64)
!4031 = !DISubroutineType(types: !4032)
!4032 = !{!429, !3991, !873, !873, !7, !7, !4033}
!4033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4034, size: 64)
!4034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3971, line: 43, size: 640, elements: !4035)
!4035 = !{!4036, !4037, !4038}
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4034, file: !3971, line: 44, baseType: !3969, size: 64)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4034, file: !3971, line: 45, baseType: !7, size: 32, offset: 64)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4034, file: !3971, line: 46, baseType: !4039, size: 512, offset: 128)
!4039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !510, size: 512, elements: !597)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3977, file: !3971, line: 140, baseType: !4022, size: 64, offset: 832)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3977, file: !3971, line: 143, baseType: !4018, size: 64, offset: 896)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3977, file: !3971, line: 145, baseType: !3980, size: 64, offset: 960)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3977, file: !3971, line: 146, baseType: !4044, size: 64, offset: 1024)
!4044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4045, size: 64)
!4045 = !DISubroutineType(types: !4046)
!4046 = !{!429, !3991, !4047}
!4047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4048, size: 64)
!4048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3971, line: 29, size: 128, elements: !4049)
!4049 = !{!4050, !4051, !4052}
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4048, file: !3971, line: 30, baseType: !7, size: 32)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4048, file: !3971, line: 31, baseType: !7, size: 32, offset: 32)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4048, file: !3971, line: 32, baseType: !3991, size: 64, offset: 64)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3977, file: !3971, line: 148, baseType: !4054, size: 64, offset: 1088)
!4054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4055, size: 64)
!4055 = !DISubroutineType(types: !4056)
!4056 = !{!429, !3991, !3360}
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3970, file: !3971, line: 20, baseType: !3360, size: 64, offset: 128)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !3361, file: !73, line: 534, baseType: !932, size: 32, offset: 4992)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3361, file: !73, line: 535, baseType: !459, size: 32, offset: 5024)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !3361, file: !73, line: 537, baseType: !844, offset: 5056)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !3361, file: !73, line: 538, baseType: !503, size: 128, offset: 5056)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3361, file: !73, line: 540, baseType: !4063, size: 64, offset: 5184)
!4063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4064, size: 64)
!4064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4065, line: 54, size: 960, elements: !4066)
!4065 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4066 = !{!4067, !4068, !4069, !4070, !4071, !4072, !4073, !4077, !4081, !4082, !4083, !4084, !4088, !4092, !4093}
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4064, file: !4065, line: 55, baseType: !873, size: 64)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4064, file: !4065, line: 56, baseType: !965, size: 64, offset: 64)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4064, file: !4065, line: 58, baseType: !3441, size: 64, offset: 128)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4064, file: !4065, line: 59, baseType: !3441, size: 64, offset: 192)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4064, file: !4065, line: 60, baseType: !3370, size: 64, offset: 256)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4064, file: !4065, line: 62, baseType: !3673, size: 64, offset: 320)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4064, file: !4065, line: 63, baseType: !4074, size: 64, offset: 384)
!4074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4075, size: 64)
!4075 = !DISubroutineType(types: !4076)
!4076 = !{!899, !3360, !3680}
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4064, file: !4065, line: 65, baseType: !4078, size: 64, offset: 448)
!4078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4079, size: 64)
!4079 = !DISubroutineType(types: !4080)
!4080 = !{null, !4063}
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4064, file: !4065, line: 66, baseType: !3682, size: 64, offset: 512)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4064, file: !4065, line: 68, baseType: !3691, size: 64, offset: 576)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4064, file: !4065, line: 70, baseType: !3477, size: 64, offset: 640)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4064, file: !4065, line: 71, baseType: !4085, size: 64, offset: 704)
!4085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4086, size: 64)
!4086 = !DISubroutineType(types: !4087)
!4087 = !{!3131, !3360}
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4064, file: !4065, line: 73, baseType: !4089, size: 64, offset: 768)
!4089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4090, size: 64)
!4090 = !DISubroutineType(types: !4091)
!4091 = !{null, !3360, !3509, !3510}
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4064, file: !4065, line: 75, baseType: !3686, size: 64, offset: 832)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4064, file: !4065, line: 77, baseType: !3803, size: 64, offset: 896)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3361, file: !73, line: 541, baseType: !3441, size: 64, offset: 5248)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3361, file: !73, line: 543, baseType: !3682, size: 64, offset: 5312)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !3361, file: !73, line: 544, baseType: !4097, size: 64, offset: 5376)
!4097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4098, size: 64)
!4098 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !3361, file: !73, line: 545, baseType: !4100, size: 64, offset: 5440)
!4100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4101, size: 64)
!4101 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !3361, file: !73, line: 547, baseType: !918, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3361, file: !73, line: 548, baseType: !918, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !3361, file: !73, line: 549, baseType: !918, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !3361, file: !73, line: 550, baseType: !918, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3351, file: !233, line: 548, baseType: !429, size: 32, offset: 320)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "detach_count", scope: !3351, file: !233, line: 549, baseType: !7, size: 32, offset: 352)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "hw_dev", scope: !3351, file: !233, line: 550, baseType: !3360, size: 64, offset: 384)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "board_name", scope: !3351, file: !233, line: 552, baseType: !873, size: 64, offset: 448)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "board_ptr", scope: !3351, file: !233, line: 553, baseType: !3131, size: 64, offset: 512)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "attached", scope: !3351, file: !233, line: 554, baseType: !7, size: 1, offset: 576, flags: DIFlagBitField, extraData: i64 576)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "ioenabled", scope: !3351, file: !233, line: 555, baseType: !7, size: 1, offset: 577, flags: DIFlagBitField, extraData: i64 576)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "spinlock", scope: !3351, file: !233, line: 556, baseType: !844, offset: 584)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3351, file: !233, line: 557, baseType: !1090, size: 192, offset: 640)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "attach_lock", scope: !3351, file: !233, line: 558, baseType: !1261, size: 256, offset: 832)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3351, file: !233, line: 559, baseType: !3651, size: 32, offset: 1088)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "n_subdevices", scope: !3351, file: !233, line: 561, baseType: !429, size: 32, offset: 1120)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "subdevices", scope: !3351, file: !233, line: 562, baseType: !4119, size: 64, offset: 1152)
!4119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4120, size: 64)
!4120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_subdevice", file: !233, line: 153, size: 1792, elements: !4121)
!4121 = !{!4122, !4123, !4124, !4125, !4126, !4127, !4128, !4129, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4197, !4210, !4213, !4214, !4228, !4229, !4230, !4231, !4235, !4240, !4241, !4242, !4243, !4247, !4248, !4249, !4250, !4251}
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4120, file: !233, line: 154, baseType: !3350, size: 64)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4120, file: !233, line: 155, baseType: !429, size: 32, offset: 64)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4120, file: !233, line: 156, baseType: !429, size: 32, offset: 96)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "n_chan", scope: !4120, file: !233, line: 157, baseType: !429, size: 32, offset: 128)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "subdev_flags", scope: !4120, file: !233, line: 158, baseType: !429, size: 32, offset: 160)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "len_chanlist", scope: !4120, file: !233, line: 159, baseType: !429, size: 32, offset: 192)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !4120, file: !233, line: 161, baseType: !463, size: 64, offset: 256)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "async", scope: !4120, file: !233, line: 163, baseType: !4130, size: 64, offset: 320)
!4130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4131, size: 64)
!4131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_async", file: !233, line: 347, size: 1536, elements: !4132)
!4132 = !{!4133, !4134, !4135, !4149, !4150, !4151, !4152, !4153, !4154, !4155, !4156, !4157, !4158, !4159, !4160, !4161, !4162, !4163, !4183, !4184, !4185}
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !4131, file: !233, line: 348, baseType: !463, size: 64)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_bufsz", scope: !4131, file: !233, line: 349, baseType: !7, size: 32, offset: 64)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "buf_map", scope: !4131, file: !233, line: 350, baseType: !4136, size: 64, offset: 128)
!4136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4137, size: 64)
!4137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_buf_map", file: !233, line: 249, size: 256, elements: !4138)
!4138 = !{!4139, !4140, !4146, !4147, !4148}
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "dma_hw_dev", scope: !4137, file: !233, line: 250, baseType: !3360, size: 64)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "page_list", scope: !4137, file: !233, line: 251, baseType: !4141, size: 64, offset: 64)
!4141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4142, size: 64)
!4142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_buf_page", file: !233, line: 220, size: 128, elements: !4143)
!4143 = !{!4144, !4145}
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "virt_addr", scope: !4142, file: !233, line: 221, baseType: !463, size: 64)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !4142, file: !233, line: 222, baseType: !2305, size: 64, offset: 64)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !4137, file: !233, line: 252, baseType: !7, size: 32, offset: 128)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "dma_dir", scope: !4137, file: !233, line: 253, baseType: !93, size: 32, offset: 160)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4137, file: !233, line: 254, baseType: !3651, size: 32, offset: 192)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "max_bufsize", scope: !4131, file: !233, line: 351, baseType: !7, size: 32, offset: 192)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "buf_write_count", scope: !4131, file: !233, line: 352, baseType: !7, size: 32, offset: 224)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "buf_write_alloc_count", scope: !4131, file: !233, line: 353, baseType: !7, size: 32, offset: 256)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "buf_read_count", scope: !4131, file: !233, line: 354, baseType: !7, size: 32, offset: 288)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "buf_read_alloc_count", scope: !4131, file: !233, line: 355, baseType: !7, size: 32, offset: 320)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "buf_write_ptr", scope: !4131, file: !233, line: 356, baseType: !7, size: 32, offset: 352)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "buf_read_ptr", scope: !4131, file: !233, line: 357, baseType: !7, size: 32, offset: 384)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "cur_chan", scope: !4131, file: !233, line: 358, baseType: !7, size: 32, offset: 416)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "scans_done", scope: !4131, file: !233, line: 359, baseType: !7, size: 32, offset: 448)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "scan_progress", scope: !4131, file: !233, line: 360, baseType: !7, size: 32, offset: 480)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "munge_chan", scope: !4131, file: !233, line: 361, baseType: !7, size: 32, offset: 512)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "munge_count", scope: !4131, file: !233, line: 362, baseType: !7, size: 32, offset: 544)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "munge_ptr", scope: !4131, file: !233, line: 363, baseType: !7, size: 32, offset: 576)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !4131, file: !233, line: 364, baseType: !7, size: 32, offset: 608)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4131, file: !233, line: 365, baseType: !4164, size: 640, offset: 640)
!4164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_cmd", file: !250, line: 589, size: 640, elements: !4165)
!4165 = !{!4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4176, !4177, !4178, !4179, !4180, !4182}
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "subdev", scope: !4164, file: !250, line: 590, baseType: !7, size: 32)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4164, file: !250, line: 591, baseType: !7, size: 32, offset: 32)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "start_src", scope: !4164, file: !250, line: 593, baseType: !7, size: 32, offset: 64)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "start_arg", scope: !4164, file: !250, line: 594, baseType: !7, size: 32, offset: 96)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "scan_begin_src", scope: !4164, file: !250, line: 596, baseType: !7, size: 32, offset: 128)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "scan_begin_arg", scope: !4164, file: !250, line: 597, baseType: !7, size: 32, offset: 160)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "convert_src", scope: !4164, file: !250, line: 599, baseType: !7, size: 32, offset: 192)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "convert_arg", scope: !4164, file: !250, line: 600, baseType: !7, size: 32, offset: 224)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "scan_end_src", scope: !4164, file: !250, line: 602, baseType: !7, size: 32, offset: 256)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "scan_end_arg", scope: !4164, file: !250, line: 603, baseType: !7, size: 32, offset: 288)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "stop_src", scope: !4164, file: !250, line: 605, baseType: !7, size: 32, offset: 320)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "stop_arg", scope: !4164, file: !250, line: 606, baseType: !7, size: 32, offset: 352)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "chanlist", scope: !4164, file: !250, line: 608, baseType: !1365, size: 64, offset: 384)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "chanlist_len", scope: !4164, file: !250, line: 609, baseType: !7, size: 32, offset: 448)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4164, file: !250, line: 611, baseType: !4181, size: 64, offset: 512)
!4181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !4164, file: !250, line: 612, baseType: !7, size: 32, offset: 576)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "wait_head", scope: !4131, file: !233, line: 366, baseType: !1337, size: 128, offset: 1280)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "cb_mask", scope: !4131, file: !233, line: 367, baseType: !7, size: 32, offset: 1408)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "inttrig", scope: !4131, file: !233, line: 368, baseType: !4186, size: 64, offset: 1472)
!4186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4187, size: 64)
!4187 = !DISubroutineType(types: !4188)
!4188 = !{!429, !3350, !4119, !7}
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4120, file: !233, line: 165, baseType: !463, size: 64, offset: 384)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !4120, file: !233, line: 166, baseType: !463, size: 64, offset: 448)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "runflags", scope: !4120, file: !233, line: 167, baseType: !7, size: 32, offset: 512)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock", scope: !4120, file: !233, line: 168, baseType: !844, offset: 544)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "io_bits", scope: !4120, file: !233, line: 170, baseType: !7, size: 32, offset: 544)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "maxdata", scope: !4120, file: !233, line: 172, baseType: !7, size: 32, offset: 576)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "maxdata_list", scope: !4120, file: !233, line: 173, baseType: !4196, size: 64, offset: 640)
!4196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "range_table", scope: !4120, file: !233, line: 175, baseType: !4198, size: 64, offset: 704)
!4198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4199, size: 64)
!4199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4200)
!4200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_lrange", file: !233, line: 635, size: 32, elements: !4201)
!4201 = !{!4202, !4203}
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4200, file: !233, line: 636, baseType: !429, size: 32)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !4200, file: !233, line: 637, baseType: !4204, offset: 32)
!4204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4205, elements: !2613)
!4205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_krange", file: !250, line: 685, size: 96, elements: !4206)
!4206 = !{!4207, !4208, !4209}
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !4205, file: !250, line: 686, baseType: !429, size: 32)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4205, file: !250, line: 687, baseType: !429, size: 32, offset: 32)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4205, file: !250, line: 688, baseType: !7, size: 32, offset: 64)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "range_table_list", scope: !4120, file: !233, line: 176, baseType: !4211, size: 64, offset: 768)
!4211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4212, size: 64)
!4212 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4198)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "chanlist", scope: !4120, file: !233, line: 178, baseType: !1365, size: 64, offset: 832)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "insn_read", scope: !4120, file: !233, line: 180, baseType: !4215, size: 64, offset: 896)
!4215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4216, size: 64)
!4216 = !DISubroutineType(types: !4217)
!4217 = !{!429, !3350, !4119, !4218, !1365}
!4218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4219, size: 64)
!4219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_insn", file: !250, line: 491, size: 320, elements: !4220)
!4220 = !{!4221, !4222, !4223, !4224, !4225, !4226}
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !4219, file: !250, line: 492, baseType: !7, size: 32)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !4219, file: !250, line: 493, baseType: !7, size: 32, offset: 32)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4219, file: !250, line: 494, baseType: !1365, size: 64, offset: 64)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "subdev", scope: !4219, file: !250, line: 495, baseType: !7, size: 32, offset: 128)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "chanspec", scope: !4219, file: !250, line: 496, baseType: !7, size: 32, offset: 160)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !4219, file: !250, line: 497, baseType: !4227, size: 96, offset: 192)
!4227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 96, elements: !986)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "insn_write", scope: !4120, file: !233, line: 182, baseType: !4215, size: 64, offset: 960)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "insn_bits", scope: !4120, file: !233, line: 184, baseType: !4215, size: 64, offset: 1024)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "insn_config", scope: !4120, file: !233, line: 186, baseType: !4215, size: 64, offset: 1088)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "do_cmd", scope: !4120, file: !233, line: 191, baseType: !4232, size: 64, offset: 1152)
!4232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4233, size: 64)
!4233 = !DISubroutineType(types: !4234)
!4234 = !{!429, !3350, !4119}
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "do_cmdtest", scope: !4120, file: !233, line: 192, baseType: !4236, size: 64, offset: 1216)
!4236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4237, size: 64)
!4237 = !DISubroutineType(types: !4238)
!4238 = !{!429, !3350, !4119, !4239}
!4239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4164, size: 64)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4120, file: !233, line: 195, baseType: !4232, size: 64, offset: 1280)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !4120, file: !233, line: 196, baseType: !4232, size: 64, offset: 1344)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "buf_change", scope: !4120, file: !233, line: 199, baseType: !4232, size: 64, offset: 1408)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "munge", scope: !4120, file: !233, line: 202, baseType: !4244, size: 64, offset: 1472)
!4244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4245, size: 64)
!4245 = !DISubroutineType(types: !4246)
!4246 = !{null, !3350, !4119, !463, !7, !7}
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "async_dma_dir", scope: !4120, file: !233, line: 205, baseType: !93, size: 32, offset: 1536)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4120, file: !233, line: 207, baseType: !7, size: 32, offset: 1568)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !4120, file: !233, line: 209, baseType: !3360, size: 64, offset: 1600)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !4120, file: !233, line: 210, baseType: !429, size: 32, offset: 1664)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "readback", scope: !4120, file: !233, line: 212, baseType: !1365, size: 64, offset: 1728)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "mmio", scope: !3351, file: !233, line: 565, baseType: !463, size: 64, offset: 1216)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "iobase", scope: !3351, file: !233, line: 566, baseType: !435, size: 64, offset: 1280)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "iolen", scope: !3351, file: !233, line: 567, baseType: !435, size: 64, offset: 1344)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !3351, file: !233, line: 568, baseType: !7, size: 32, offset: 1408)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "read_subdev", scope: !3351, file: !233, line: 570, baseType: !4119, size: 64, offset: 1472)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "write_subdev", scope: !3351, file: !233, line: 571, baseType: !4119, size: 64, offset: 1536)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "async_queue", scope: !3351, file: !233, line: 573, baseType: !1697, size: 64, offset: 1600)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3351, file: !233, line: 575, baseType: !4260, size: 64, offset: 1664)
!4260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4261, size: 64)
!4261 = !DISubroutineType(types: !4262)
!4262 = !{!429, !3350}
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !3351, file: !233, line: 576, baseType: !4264, size: 64, offset: 1728)
!4264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4265, size: 64)
!4265 = !DISubroutineType(types: !4266)
!4266 = !{null, !3350}
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "insn_device_config", scope: !3351, file: !233, line: 577, baseType: !4268, size: 64, offset: 1792)
!4268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4269, size: 64)
!4269 = !DISubroutineType(types: !4270)
!4270 = !{!429, !3350, !4218, !1365}
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "get_valid_routes", scope: !3351, file: !233, line: 579, baseType: !4272, size: 64, offset: 1856)
!4272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4273, size: 64)
!4273 = !DISubroutineType(types: !4274)
!4274 = !{!7, !3350, !7, !1365}
!4275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4276, size: 64)
!4276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_devconfig", file: !250, line: 834, size: 1184, elements: !4277)
!4277 = !{!4278, !4280}
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "board_name", scope: !4276, file: !250, line: 835, baseType: !4279, size: 160)
!4279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !875, size: 160, elements: !3205)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !4276, file: !250, line: 836, baseType: !4281, size: 1024, offset: 160)
!4281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 1024, elements: !831)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3340, file: !233, line: 444, baseType: !4264, size: 64, offset: 256)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "auto_attach", scope: !3340, file: !233, line: 445, baseType: !4284, size: 64, offset: 320)
!4284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4285, size: 64)
!4285 = !DISubroutineType(types: !4286)
!4286 = !{!429, !3350, !435}
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "num_names", scope: !3340, file: !233, line: 446, baseType: !7, size: 32, offset: 384)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "board_name", scope: !3340, file: !233, line: 447, baseType: !4289, size: 64, offset: 448)
!4289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4290, size: 64)
!4290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !873)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3340, file: !233, line: 448, baseType: !429, size: 32, offset: 512)
!4292 = !DIGlobalVariableExpression(var: !4293, expr: !DIExpression())
!4293 = distinct !DIGlobalVariable(name: "ni_boards", scope: !2, file: !3, line: 208, type: !4294, isLocal: true, isDefinition: true)
!4294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4295, size: 54080, elements: !4319)
!4295 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4296)
!4296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ni_board_struct", file: !180, line: 942, size: 832, elements: !4297)
!4297 = !{!4298, !4299, !4300, !4301, !4302, !4303, !4304, !4305, !4306, !4307, !4308, !4309, !4310, !4311, !4312, !4313, !4314, !4315, !4316, !4317}
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4296, file: !180, line: 943, baseType: !873, size: 64)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "alt_route_name", scope: !4296, file: !180, line: 944, baseType: !873, size: 64, offset: 64)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "device_id", scope: !4296, file: !180, line: 945, baseType: !429, size: 32, offset: 128)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "isapnp_id", scope: !4296, file: !180, line: 946, baseType: !429, size: 32, offset: 160)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "n_adchan", scope: !4296, file: !180, line: 948, baseType: !429, size: 32, offset: 192)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "ai_maxdata", scope: !4296, file: !180, line: 949, baseType: !7, size: 32, offset: 224)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "ai_fifo_depth", scope: !4296, file: !180, line: 951, baseType: !429, size: 32, offset: 256)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "alwaysdither", scope: !4296, file: !180, line: 952, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "gainlkup", scope: !4296, file: !180, line: 953, baseType: !429, size: 32, offset: 320)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "ai_speed", scope: !4296, file: !180, line: 954, baseType: !429, size: 32, offset: 352)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "n_aochan", scope: !4296, file: !180, line: 956, baseType: !429, size: 32, offset: 384)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "ao_maxdata", scope: !4296, file: !180, line: 957, baseType: !7, size: 32, offset: 416)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "ao_fifo_depth", scope: !4296, file: !180, line: 958, baseType: !429, size: 32, offset: 448)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "ao_range_table", scope: !4296, file: !180, line: 959, baseType: !4198, size: 64, offset: 512)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "ao_speed", scope: !4296, file: !180, line: 960, baseType: !7, size: 32, offset: 576)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !4296, file: !180, line: 962, baseType: !429, size: 32, offset: 608)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "has_8255", scope: !4296, file: !180, line: 963, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "has_32dio_chan", scope: !4296, file: !180, line: 964, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "dio_speed", scope: !4296, file: !180, line: 965, baseType: !7, size: 32, offset: 672)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "caldac", scope: !4296, file: !180, line: 967, baseType: !4318, size: 96, offset: 704)
!4318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 96, elements: !986)
!4319 = !{!4320}
!4320 = !DISubrange(count: 65)
!4321 = !DIGlobalVariableExpression(var: !4322, expr: !DIExpression())
!4322 = distinct !DIGlobalVariable(name: "range_ni_E_ao_ext", scope: !2, file: !209, line: 163, type: !4199, isLocal: true, isDefinition: true)
!4323 = !DIGlobalVariableExpression(var: !4324, expr: !DIExpression())
!4324 = distinct !DIGlobalVariable(name: "range_ni_M_625x_ao", scope: !2, file: !3, line: 129, type: !4199, isLocal: true, isDefinition: true)
!4325 = !DIGlobalVariableExpression(var: !4326, expr: !DIExpression())
!4326 = distinct !DIGlobalVariable(name: "range_ni_M_628x_ao", scope: !2, file: !3, line: 115, type: !4199, isLocal: true, isDefinition: true)
!4327 = !DIGlobalVariableExpression(var: !4328, expr: !DIExpression())
!4328 = distinct !DIGlobalVariable(name: "start_cal_eeprom", scope: !4329, file: !3, line: 1217, type: !4330, isLocal: true, isDefinition: true)
!4329 = distinct !DISubprogram(name: "m_series_init_eeprom_buffer", scope: !3, file: !3, line: 1212, type: !4265, scopeLine: 1213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!4330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !429)
!4331 = !DIGlobalVariableExpression(var: !4332, expr: !DIExpression())
!4332 = distinct !DIGlobalVariable(name: "window_size", scope: !4329, file: !3, line: 1218, type: !2125, isLocal: true, isDefinition: true)
!4333 = !DIGlobalVariableExpression(var: !4334, expr: !DIExpression())
!4334 = distinct !DIGlobalVariable(name: "m_series_stc_write_regmap", scope: !2, file: !209, line: 292, type: !4335, isLocal: true, isDefinition: true)
!4335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4336, size: 5632, elements: !4341)
!4336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4337)
!4337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mio_regmap", file: !209, line: 287, size: 64, elements: !4338)
!4338 = !{!4339, !4340}
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "mio_reg", scope: !4337, file: !209, line: 288, baseType: !7, size: 32)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4337, file: !209, line: 289, baseType: !429, size: 32, offset: 32)
!4341 = !{!4342}
!4342 = !DISubrange(count: 88)
!4343 = !DIGlobalVariableExpression(var: !4344, expr: !DIExpression())
!4344 = distinct !DIGlobalVariable(name: "m_series_stc_read_regmap", scope: !2, file: !209, line: 390, type: !4345, isLocal: true, isDefinition: true)
!4345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4336, size: 4288, elements: !4346)
!4346 = !{!4347}
!4347 = !DISubrange(count: 67)
!4348 = !DIGlobalVariableExpression(var: !4349, expr: !DIExpression())
!4349 = distinct !DIGlobalVariable(name: "timeout", scope: !4350, file: !209, line: 892, type: !4330, isLocal: true, isDefinition: true)
!4350 = distinct !DISubprogram(name: "ni_ai_drain_dma", scope: !209, file: !209, line: 888, type: !4261, scopeLine: 889, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!4351 = !DIGlobalVariableExpression(var: !4352, expr: !DIExpression())
!4352 = distinct !DIGlobalVariable(name: "timeout", scope: !4353, file: !209, line: 1232, type: !4330, isLocal: true, isDefinition: true)
!4353 = distinct !DISubprogram(name: "ni_handle_eos", scope: !209, file: !209, line: 1226, type: !4354, scopeLine: 1227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!4354 = !DISubroutineType(types: !4355)
!4355 = !{null, !3350, !4119}
!4356 = !DIGlobalVariableExpression(var: !4357, expr: !DIExpression())
!4357 = distinct !DIGlobalVariable(name: "default_rtsi_routing", scope: !2, file: !209, line: 5259, type: !4358, isLocal: true, isDefinition: true)
!4358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4330, size: 256, elements: !597)
!4359 = !DIGlobalVariableExpression(var: !4360, expr: !DIExpression())
!4360 = distinct !DIGlobalVariable(name: "ni_range_lkup", scope: !2, file: !209, line: 172, type: !4361, isLocal: true, isDefinition: true)
!4361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4212, size: 512, elements: !597)
!4362 = !DIGlobalVariableExpression(var: !4363, expr: !DIExpression())
!4363 = distinct !DIGlobalVariable(name: "range_ni_E_ai", scope: !2, file: !209, line: 67, type: !4199, isLocal: true, isDefinition: true)
!4364 = !DIGlobalVariableExpression(var: !4365, expr: !DIExpression())
!4365 = distinct !DIGlobalVariable(name: "range_ni_E_ai_limited", scope: !2, file: !209, line: 88, type: !4199, isLocal: true, isDefinition: true)
!4366 = !DIGlobalVariableExpression(var: !4367, expr: !DIExpression())
!4367 = distinct !DIGlobalVariable(name: "range_ni_E_ai_limited14", scope: !2, file: !209, line: 101, type: !4199, isLocal: true, isDefinition: true)
!4368 = !DIGlobalVariableExpression(var: !4369, expr: !DIExpression())
!4369 = distinct !DIGlobalVariable(name: "range_ni_E_ai_bipolar4", scope: !2, file: !209, line: 120, type: !4199, isLocal: true, isDefinition: true)
!4370 = !DIGlobalVariableExpression(var: !4371, expr: !DIExpression())
!4371 = distinct !DIGlobalVariable(name: "range_ni_E_ai_611x", scope: !2, file: !209, line: 129, type: !4199, isLocal: true, isDefinition: true)
!4372 = !DIGlobalVariableExpression(var: !4373, expr: !DIExpression())
!4373 = distinct !DIGlobalVariable(name: "range_ni_M_ai_622x", scope: !2, file: !209, line: 142, type: !4199, isLocal: true, isDefinition: true)
!4374 = !DIGlobalVariableExpression(var: !4375, expr: !DIExpression())
!4375 = distinct !DIGlobalVariable(name: "range_ni_M_ai_628x", scope: !2, file: !209, line: 151, type: !4199, isLocal: true, isDefinition: true)
!4376 = !DIGlobalVariableExpression(var: !4377, expr: !DIExpression(DW_OP_constu, 3, DW_OP_stack_value))
!4377 = distinct !DIGlobalVariable(name: "num_adc_stages_611x", scope: !2, file: !209, line: 220, type: !4330, isLocal: true, isDefinition: true)
!4378 = !DIGlobalVariableExpression(var: !4379, expr: !DIExpression())
!4379 = distinct !DIGlobalVariable(name: "ni_gainlkup", scope: !2, file: !209, line: 53, type: !4380, isLocal: true, isDefinition: true)
!4380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4381, size: 2048, elements: !4382)
!4381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1931)
!4382 = !{!598, !1391}
!4383 = !DIGlobalVariableExpression(var: !4384, expr: !DIExpression())
!4384 = distinct !DIGlobalVariable(name: "timeout", scope: !4385, file: !209, line: 779, type: !4330, isLocal: true, isDefinition: true)
!4385 = distinct !DISubprogram(name: "ni_clear_ai_fifo", scope: !209, file: !209, line: 776, type: !4265, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!4386 = !DIGlobalVariableExpression(var: !4387, expr: !DIExpression())
!4387 = distinct !DIGlobalVariable(name: "timeout", scope: !4388, file: !209, line: 2755, type: !4330, isLocal: true, isDefinition: true)
!4388 = distinct !DISubprogram(name: "ni_ao_arm", scope: !209, file: !209, line: 2748, type: !4233, scopeLine: 2750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!4389 = !DIGlobalVariableExpression(var: !4390, expr: !DIExpression())
!4390 = distinct !DIGlobalVariable(name: "timeout", scope: !4391, file: !209, line: 923, type: !4330, isLocal: true, isDefinition: true)
!4391 = distinct !DISubprogram(name: "ni_ao_wait_for_dma_load", scope: !209, file: !209, line: 921, type: !4261, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!4392 = !DIGlobalVariableExpression(var: !4393, expr: !DIExpression())
!4393 = distinct !DIGlobalVariable(name: "caldacs", scope: !2, file: !209, line: 4352, type: !4394, isLocal: true, isDefinition: true)
!4394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4395, size: 1024, elements: !597)
!4395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "caldac_struct", file: !209, line: 4346, size: 128, elements: !4396)
!4396 = !{!4397, !4398, !4399}
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "n_chans", scope: !4395, file: !209, line: 4347, baseType: !429, size: 32)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !4395, file: !209, line: 4348, baseType: !429, size: 32, offset: 32)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "packbits", scope: !4395, file: !209, line: 4349, baseType: !4400, size: 64, offset: 64)
!4400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4401, size: 64)
!4401 = !DISubroutineType(types: !4402)
!4402 = !{!429, !429, !429, !1042}
!4403 = !DIGlobalVariableExpression(var: !4404, expr: !DIExpression())
!4404 = distinct !DIGlobalVariable(name: "timeout", scope: !4405, file: !209, line: 4763, type: !4330, isLocal: true, isDefinition: true)
!4405 = distinct !DISubprogram(name: "cs5529_command", scope: !209, file: !209, line: 4761, type: !4406, scopeLine: 4762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!4406 = !DISubroutineType(types: !4407)
!4407 = !{null, !3350, !438}
!4408 = !DIGlobalVariableExpression(var: !4409, expr: !DIExpression())
!4409 = distinct !DIGlobalVariable(name: "min_period_ns", scope: !4410, file: !209, line: 4930, type: !2125, isLocal: true, isDefinition: true)
!4410 = distinct !DISubprogram(name: "ni_mseries_set_pll_master_clock", scope: !209, file: !209, line: 4925, type: !4411, scopeLine: 4928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!4411 = !DISubroutineType(types: !4412)
!4412 = !{!429, !3350, !7, !7}
!4413 = !DIGlobalVariableExpression(var: !4414, expr: !DIExpression())
!4414 = distinct !DIGlobalVariable(name: "max_period_ns", scope: !4410, file: !209, line: 4931, type: !2125, isLocal: true, isDefinition: true)
!4415 = !DIGlobalVariableExpression(var: !4416, expr: !DIExpression())
!4416 = distinct !DIGlobalVariable(name: "timeout", scope: !4410, file: !209, line: 4932, type: !2125, isLocal: true, isDefinition: true)
!4417 = !DIGlobalVariableExpression(var: !4418, expr: !DIExpression())
!4418 = distinct !DIGlobalVariable(name: "pico_per_nano", scope: !4419, file: !209, line: 4892, type: !2125, isLocal: true, isDefinition: true)
!4419 = distinct !DISubprogram(name: "ni_mseries_get_pll_parameters", scope: !209, file: !209, line: 4883, type: !4420, scopeLine: 4887, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!4420 = !DISubroutineType(types: !4421)
!4421 = !{!429, !7, !1365, !1365, !1365}
!4422 = !DIGlobalVariableExpression(var: !4423, expr: !DIExpression())
!4423 = distinct !DIGlobalVariable(name: "target_picosec", scope: !4419, file: !209, line: 4899, type: !2125, isLocal: true, isDefinition: true)
!4424 = !DIGlobalVariableExpression(var: !4425, expr: !DIExpression())
!4425 = distinct !DIGlobalVariable(name: "ni_gpct_to_stc_regmap", scope: !2, file: !209, line: 3956, type: !4426, isLocal: true, isDefinition: true)
!4426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4336, size: 4352, elements: !4427)
!4427 = !{!4428}
!4428 = !DISubrange(count: 68)
!4429 = !DIGlobalVariableExpression(var: !4430, expr: !DIExpression())
!4430 = distinct !DIGlobalVariable(name: "ni_pcimio_pci_driver", scope: !2, file: !3, line: 1467, type: !4431, isLocal: true, isDefinition: true)
!4431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !4432, line: 858, size: 2048, elements: !4433)
!4432 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!4433 = !{!4434, !4435, !4436, !4448, !4668, !4672, !4676, !4680, !4681, !4685, !4703, !4704, !4705}
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4431, file: !4432, line: 859, baseType: !503, size: 128)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4431, file: !4432, line: 860, baseType: !873, size: 64, offset: 128)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4431, file: !4432, line: 861, baseType: !4437, size: 64, offset: 192)
!4437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4438, size: 64)
!4438 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4439)
!4439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !3744, line: 38, size: 256, elements: !4440)
!4440 = !{!4441, !4442, !4443, !4444, !4445, !4446, !4447}
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4439, file: !3744, line: 39, baseType: !439, size: 32)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4439, file: !3744, line: 39, baseType: !439, size: 32, offset: 32)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !4439, file: !3744, line: 40, baseType: !439, size: 32, offset: 64)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !4439, file: !3744, line: 40, baseType: !439, size: 32, offset: 96)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4439, file: !3744, line: 41, baseType: !439, size: 32, offset: 128)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !4439, file: !3744, line: 41, baseType: !439, size: 32, offset: 160)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4439, file: !3744, line: 42, baseType: !3763, size: 64, offset: 192)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4431, file: !4432, line: 862, baseType: !4449, size: 64, offset: 256)
!4449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4450, size: 64)
!4450 = !DISubroutineType(types: !4451)
!4451 = !{!429, !4452, !4437}
!4452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4453, size: 64)
!4453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !4432, line: 309, size: 19264, elements: !4454)
!4454 = !{!4455, !4456, !4531, !4532, !4533, !4534, !4545, !4546, !4547, !4548, !4549, !4550, !4551, !4552, !4553, !4554, !4555, !4556, !4557, !4558, !4559, !4560, !4562, !4564, !4565, !4566, !4568, !4569, !4570, !4571, !4572, !4573, !4574, !4575, !4576, !4577, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586, !4587, !4590, !4591, !4592, !4593, !4595, !4596, !4597, !4598, !4602, !4603, !4604, !4605, !4606, !4607, !4608, !4609, !4610, !4611, !4612, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4620, !4621, !4622, !4623, !4624, !4625, !4626, !4627, !4628, !4629, !4630, !4631, !4632, !4633, !4634, !4635, !4636, !4637, !4638, !4639, !4641, !4642, !4644, !4645, !4646, !4647, !4649, !4650, !4651, !4654, !4661, !4662, !4663, !4664, !4665, !4666, !4667}
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !4453, file: !4432, line: 310, baseType: !503, size: 128)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4453, file: !4432, line: 311, baseType: !4457, size: 64, offset: 128)
!4457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4458, size: 64)
!4458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !4432, line: 605, size: 8064, elements: !4459)
!4459 = !{!4460, !4461, !4462, !4463, !4464, !4465, !4466, !4481, !4482, !4483, !4507, !4510, !4511, !4515, !4516, !4517, !4518, !4519, !4523, !4524, !4526, !4527, !4528, !4529, !4530}
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4458, file: !4432, line: 606, baseType: !503, size: 128)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4458, file: !4432, line: 607, baseType: !4457, size: 64, offset: 128)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4458, file: !4432, line: 608, baseType: !503, size: 128, offset: 192)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !4458, file: !4432, line: 609, baseType: !503, size: 128, offset: 320)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !4458, file: !4432, line: 610, baseType: !4452, size: 64, offset: 448)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !4458, file: !4432, line: 611, baseType: !503, size: 128, offset: 512)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !4458, file: !4432, line: 613, baseType: !4467, size: 256, offset: 640)
!4467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4468, size: 256, elements: !1849)
!4468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4469, size: 64)
!4469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !4470, line: 20, size: 512, elements: !4471)
!4470 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!4471 = !{!4472, !4474, !4475, !4476, !4477, !4478, !4479, !4480}
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4469, file: !4470, line: 21, baseType: !4473, size: 64)
!4473 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !471, line: 158, baseType: !3129)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4469, file: !4470, line: 22, baseType: !4473, size: 64, offset: 64)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4469, file: !4470, line: 23, baseType: !873, size: 64, offset: 128)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4469, file: !4470, line: 24, baseType: !435, size: 64, offset: 192)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4469, file: !4470, line: 25, baseType: !435, size: 64, offset: 256)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4469, file: !4470, line: 26, baseType: !4468, size: 64, offset: 320)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4469, file: !4470, line: 26, baseType: !4468, size: 64, offset: 384)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4469, file: !4470, line: 26, baseType: !4468, size: 64, offset: 448)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4458, file: !4432, line: 614, baseType: !503, size: 128, offset: 896)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !4458, file: !4432, line: 615, baseType: !4469, size: 512, offset: 1024)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4458, file: !4432, line: 617, baseType: !4484, size: 64, offset: 1536)
!4484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4485, size: 64)
!4485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !4432, line: 731, size: 320, elements: !4486)
!4486 = !{!4487, !4491, !4495, !4499, !4503}
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !4485, file: !4432, line: 732, baseType: !4488, size: 64)
!4488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4489, size: 64)
!4489 = !DISubroutineType(types: !4490)
!4490 = !{!429, !4457}
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !4485, file: !4432, line: 733, baseType: !4492, size: 64, offset: 64)
!4492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4493, size: 64)
!4493 = !DISubroutineType(types: !4494)
!4494 = !{null, !4457}
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !4485, file: !4432, line: 734, baseType: !4496, size: 64, offset: 128)
!4496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4497, size: 64)
!4497 = !DISubroutineType(types: !4498)
!4498 = !{!463, !4457, !7, !429}
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4485, file: !4432, line: 735, baseType: !4500, size: 64, offset: 192)
!4500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4501, size: 64)
!4501 = !DISubroutineType(types: !4502)
!4502 = !{!429, !4457, !7, !429, !429, !2652}
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4485, file: !4432, line: 736, baseType: !4504, size: 64, offset: 256)
!4504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4505, size: 64)
!4505 = !DISubroutineType(types: !4506)
!4506 = !{!429, !4457, !7, !429, !429, !459}
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !4458, file: !4432, line: 618, baseType: !4508, size: 64, offset: 1600)
!4508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4509, size: 64)
!4509 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !4432, line: 537, flags: DIFlagFwdDecl)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !4458, file: !4432, line: 619, baseType: !463, size: 64, offset: 1664)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !4458, file: !4432, line: 620, baseType: !4512, size: 64, offset: 1728)
!4512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4513, size: 64)
!4513 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !4514, line: 123, flags: DIFlagFwdDecl)
!4514 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4458, file: !4432, line: 622, baseType: !434, size: 8, offset: 1792)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !4458, file: !4432, line: 623, baseType: !434, size: 8, offset: 1800)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !4458, file: !4432, line: 624, baseType: !434, size: 8, offset: 1808)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !4458, file: !4432, line: 625, baseType: !434, size: 8, offset: 1816)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4458, file: !4432, line: 630, baseType: !4520, size: 384, offset: 1824)
!4520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !875, size: 384, elements: !4521)
!4521 = !{!4522}
!4522 = !DISubrange(count: 48)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !4458, file: !4432, line: 632, baseType: !438, size: 16, offset: 2208)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !4458, file: !4432, line: 633, baseType: !4525, size: 16, offset: 2224)
!4525 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !4432, line: 237, baseType: !438)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !4458, file: !4432, line: 634, baseType: !3360, size: 64, offset: 2240)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4458, file: !4432, line: 635, baseType: !3361, size: 5568, offset: 2304)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !4458, file: !4432, line: 636, baseType: !3455, size: 64, offset: 7872)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !4458, file: !4432, line: 637, baseType: !3455, size: 64, offset: 7936)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !4458, file: !4432, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !4453, file: !4432, line: 312, baseType: !4457, size: 64, offset: 192)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !4453, file: !4432, line: 314, baseType: !463, size: 64, offset: 256)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !4453, file: !4432, line: 315, baseType: !4512, size: 64, offset: 320)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !4453, file: !4432, line: 316, baseType: !4535, size: 64, offset: 384)
!4535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4536, size: 64)
!4536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !4432, line: 69, size: 832, elements: !4537)
!4537 = !{!4538, !4539, !4540, !4543, !4544}
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4536, file: !4432, line: 70, baseType: !4457, size: 64)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4536, file: !4432, line: 71, baseType: !503, size: 128, offset: 64)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !4536, file: !4432, line: 72, baseType: !4541, size: 64, offset: 192)
!4541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4542, size: 64)
!4542 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !4432, line: 72, flags: DIFlagFwdDecl)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4536, file: !4432, line: 73, baseType: !434, size: 8, offset: 256)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4536, file: !4432, line: 74, baseType: !3364, size: 512, offset: 320)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !4453, file: !4432, line: 318, baseType: !7, size: 32, offset: 448)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4453, file: !4432, line: 319, baseType: !438, size: 16, offset: 480)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4453, file: !4432, line: 320, baseType: !438, size: 16, offset: 496)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !4453, file: !4432, line: 321, baseType: !438, size: 16, offset: 512)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !4453, file: !4432, line: 322, baseType: !438, size: 16, offset: 528)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4453, file: !4432, line: 323, baseType: !7, size: 32, offset: 544)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !4453, file: !4432, line: 324, baseType: !632, size: 8, offset: 576)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !4453, file: !4432, line: 325, baseType: !632, size: 8, offset: 584)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !4453, file: !4432, line: 330, baseType: !632, size: 8, offset: 592)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !4453, file: !4432, line: 331, baseType: !632, size: 8, offset: 600)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !4453, file: !4432, line: 332, baseType: !632, size: 8, offset: 608)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !4453, file: !4432, line: 333, baseType: !632, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !4453, file: !4432, line: 334, baseType: !632, size: 8, offset: 624)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !4453, file: !4432, line: 335, baseType: !632, size: 8, offset: 632)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !4453, file: !4432, line: 336, baseType: !1610, size: 16, offset: 640)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !4453, file: !4432, line: 337, baseType: !4561, size: 64, offset: 704)
!4561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4453, file: !4432, line: 339, baseType: !4563, size: 64, offset: 768)
!4563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4431, size: 64)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !4453, file: !4432, line: 340, baseType: !510, size: 64, offset: 832)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !4453, file: !4432, line: 346, baseType: !3956, size: 128, offset: 896)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !4453, file: !4432, line: 348, baseType: !4567, size: 32, offset: 1024)
!4567 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !4432, line: 155, baseType: !429)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !4453, file: !4432, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !4453, file: !4432, line: 352, baseType: !632, size: 8, offset: 1064)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !4453, file: !4432, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !4453, file: !4432, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !4453, file: !4432, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !4453, file: !4432, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !4453, file: !4432, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !4453, file: !4432, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !4453, file: !4432, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !4453, file: !4432, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !4453, file: !4432, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !4453, file: !4432, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !4453, file: !4432, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !4453, file: !4432, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !4453, file: !4432, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !4453, file: !4432, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !4453, file: !4432, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !4453, file: !4432, line: 376, baseType: !7, size: 32, offset: 1120)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !4453, file: !4432, line: 377, baseType: !7, size: 32, offset: 1152)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !4453, file: !4432, line: 380, baseType: !4588, size: 64, offset: 1216)
!4588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4589, size: 64)
!4589 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !4432, line: 303, flags: DIFlagFwdDecl)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !4453, file: !4432, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !4453, file: !4432, line: 383, baseType: !429, size: 32, offset: 1312)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !4453, file: !4432, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !4453, file: !4432, line: 387, baseType: !4594, size: 32, offset: 1376)
!4594 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !4432, line: 180, baseType: !7)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4453, file: !4432, line: 388, baseType: !3361, size: 5568, offset: 1408)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !4453, file: !4432, line: 390, baseType: !429, size: 32, offset: 6976)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4453, file: !4432, line: 396, baseType: !7, size: 32, offset: 7008)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !4453, file: !4432, line: 397, baseType: !4599, size: 8704, offset: 7040)
!4599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4469, size: 8704, elements: !4600)
!4600 = !{!4601}
!4601 = !DISubrange(count: 17)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !4453, file: !4432, line: 399, baseType: !918, size: 8, offset: 15744)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !4453, file: !4432, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !4453, file: !4432, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !4453, file: !4432, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !4453, file: !4432, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !4453, file: !4432, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !4453, file: !4432, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !4453, file: !4432, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !4453, file: !4432, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !4453, file: !4432, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !4453, file: !4432, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !4453, file: !4432, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !4453, file: !4432, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !4453, file: !4432, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !4453, file: !4432, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !4453, file: !4432, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !4453, file: !4432, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !4453, file: !4432, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !4453, file: !4432, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !4453, file: !4432, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !4453, file: !4432, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !4453, file: !4432, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !4453, file: !4432, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !4453, file: !4432, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !4453, file: !4432, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !4453, file: !4432, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !4453, file: !4432, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !4453, file: !4432, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !4453, file: !4432, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !4453, file: !4432, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !4453, file: !4432, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !4453, file: !4432, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !4453, file: !4432, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !4453, file: !4432, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !4453, file: !4432, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !4453, file: !4432, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !4453, file: !4432, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !4453, file: !4432, line: 450, baseType: !4640, size: 16, offset: 15792)
!4640 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !4432, line: 206, baseType: !438)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !4453, file: !4432, line: 451, baseType: !470, size: 32, offset: 15808)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !4453, file: !4432, line: 453, baseType: !4643, size: 512, offset: 15840)
!4643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !459, size: 512, elements: !1390)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !4453, file: !4432, line: 454, baseType: !970, size: 64, offset: 16384)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !4453, file: !4432, line: 455, baseType: !3455, size: 64, offset: 16448)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !4453, file: !4432, line: 456, baseType: !429, size: 32, offset: 16512)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !4453, file: !4432, line: 457, baseType: !4648, size: 1088, offset: 16576)
!4648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3455, size: 1088, elements: !4600)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !4453, file: !4432, line: 458, baseType: !4648, size: 1088, offset: 17664)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !4453, file: !4432, line: 469, baseType: !3441, size: 64, offset: 18752)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !4453, file: !4432, line: 471, baseType: !4652, size: 64, offset: 18816)
!4652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4653, size: 64)
!4653 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !4432, line: 304, flags: DIFlagFwdDecl)
!4654 = !DIDerivedType(tag: DW_TAG_member, scope: !4453, file: !4432, line: 478, baseType: !4655, size: 64, offset: 18880)
!4655 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4453, file: !4432, line: 478, size: 64, elements: !4656)
!4656 = !{!4657, !4660}
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !4655, file: !4432, line: 479, baseType: !4658, size: 64)
!4658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4659, size: 64)
!4659 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !4432, line: 305, flags: DIFlagFwdDecl)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !4655, file: !4432, line: 480, baseType: !4452, size: 64)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !4453, file: !4432, line: 482, baseType: !1610, size: 16, offset: 18944)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !4453, file: !4432, line: 483, baseType: !632, size: 8, offset: 18960)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !4453, file: !4432, line: 497, baseType: !1610, size: 16, offset: 18976)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !4453, file: !4432, line: 498, baseType: !3129, size: 64, offset: 19008)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !4453, file: !4432, line: 499, baseType: !1586, size: 64, offset: 19072)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !4453, file: !4432, line: 500, baseType: !899, size: 64, offset: 19136)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !4453, file: !4432, line: 502, baseType: !435, size: 64, offset: 19200)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4431, file: !4432, line: 863, baseType: !4669, size: 64, offset: 320)
!4669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4670, size: 64)
!4670 = !DISubroutineType(types: !4671)
!4671 = !{null, !4452}
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4431, file: !4432, line: 864, baseType: !4673, size: 64, offset: 384)
!4673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4674, size: 64)
!4674 = !DISubroutineType(types: !4675)
!4675 = !{!429, !4452, !3774}
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4431, file: !4432, line: 865, baseType: !4677, size: 64, offset: 448)
!4677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4678, size: 64)
!4678 = !DISubroutineType(types: !4679)
!4679 = !{!429, !4452}
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4431, file: !4432, line: 866, baseType: !4669, size: 64, offset: 512)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !4431, file: !4432, line: 867, baseType: !4682, size: 64, offset: 576)
!4682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4683, size: 64)
!4683 = !DISubroutineType(types: !4684)
!4684 = !{!429, !4452, !429}
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !4431, file: !4432, line: 868, baseType: !4686, size: 64, offset: 640)
!4686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4687, size: 64)
!4687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4688)
!4688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !4432, line: 795, size: 384, elements: !4689)
!4689 = !{!4690, !4695, !4699, !4700, !4701, !4702}
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !4688, file: !4432, line: 797, baseType: !4691, size: 64)
!4691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4692, size: 64)
!4692 = !DISubroutineType(types: !4693)
!4693 = !{!4694, !4452, !4594}
!4694 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !4432, line: 772, baseType: !7)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !4688, file: !4432, line: 801, baseType: !4696, size: 64, offset: 64)
!4696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4697, size: 64)
!4697 = !DISubroutineType(types: !4698)
!4698 = !{!4694, !4452}
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !4688, file: !4432, line: 804, baseType: !4696, size: 64, offset: 128)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !4688, file: !4432, line: 807, baseType: !4669, size: 64, offset: 192)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !4688, file: !4432, line: 808, baseType: !4669, size: 64, offset: 256)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4688, file: !4432, line: 811, baseType: !4669, size: 64, offset: 320)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4431, file: !4432, line: 869, baseType: !3441, size: 64, offset: 704)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4431, file: !4432, line: 870, baseType: !3732, size: 1152, offset: 768)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !4431, file: !4432, line: 871, baseType: !4706, size: 128, offset: 1920)
!4706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !4432, line: 759, size: 128, elements: !4707)
!4707 = !{!4708, !4709}
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4706, file: !4432, line: 760, baseType: !844)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4706, file: !4432, line: 761, baseType: !503, size: 128)
!4710 = !DIGlobalVariableExpression(var: !4711, expr: !DIExpression())
!4711 = distinct !DIGlobalVariable(name: "ni_pcimio_pci_table", scope: !2, file: !3, line: 1397, type: !4712, isLocal: true, isDefinition: true)
!4712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4438, size: 16896, elements: !4713)
!4713 = !{!4714}
!4714 = !DISubrange(count: 66)
!4715 = !{!"rsp"}
!4716 = !{i32 7, !"Dwarf Version", i32 4}
!4717 = !{i32 2, !"Debug Info Version", i32 3}
!4718 = !{i32 1, !"wchar_size", i32 2}
!4719 = !{i32 1, !"Code Model", i32 2}
!4720 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4721 = distinct !DISubprogram(name: "ni_pcimio_driver_init", scope: !3, file: !3, line: 1473, type: !4722, scopeLine: 1473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!4722 = !DISubroutineType(types: !4723)
!4723 = !{!429}
!4724 = !DILocation(line: 1473, column: 1, scope: !4721)
!4725 = distinct !DISubprogram(name: "ni_pcimio_driver_exit", scope: !3, file: !3, line: 1473, type: !2895, scopeLine: 1473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!4726 = !DILocation(line: 1473, column: 1, scope: !4725)
!4727 = distinct !DISubprogram(name: "pcimio_detach", scope: !3, file: !3, line: 1272, type: !4265, scopeLine: 1273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!4728 = !DILocalVariable(name: "dev", arg: 1, scope: !4727, file: !3, line: 1272, type: !3350)
!4729 = !DILocation(line: 1272, column: 49, scope: !4727)
!4730 = !DILocalVariable(name: "devpriv", scope: !4727, file: !3, line: 1274, type: !4731)
!4731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4732, size: 64)
!4732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ni_private", file: !180, line: 979, size: 159104, elements: !4733)
!4733 = !{!4734, !4735, !4736, !4737, !4738, !4739, !4740, !4741, !4742, !4743, !4744, !4748, !4750, !4751, !4753, !4754, !4755, !4756, !4757, !4758, !4846, !4847, !4851, !4852, !4853, !4854, !4855, !4856, !4857, !4858, !4859, !4860, !4861, !4863, !4864, !4865, !4866, !4867, !4868, !4869, !4870, !4874, !4878, !4879, !4880, !4881, !4882, !4883, !4884, !4885, !4887, !4888, !4889, !4890, !4891, !4892, !4893, !4894, !4895, !4896, !4897, !4898, !4899, !4901, !4902}
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "dio_output", scope: !4732, file: !180, line: 980, baseType: !438, size: 16)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "dio_control", scope: !4732, file: !180, line: 981, baseType: !438, size: 16, offset: 16)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "aimode", scope: !4732, file: !180, line: 982, baseType: !429, size: 32, offset: 32)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "ai_calib_source", scope: !4732, file: !180, line: 983, baseType: !7, size: 32, offset: 64)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "ai_calib_source_enabled", scope: !4732, file: !180, line: 984, baseType: !7, size: 32, offset: 96)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "window_lock", scope: !4732, file: !180, line: 986, baseType: !844, offset: 128)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "soft_reg_copy_lock", scope: !4732, file: !180, line: 988, baseType: !844, offset: 128)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "mite_channel_lock", scope: !4732, file: !180, line: 990, baseType: !844, offset: 128)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "changain_state", scope: !4732, file: !180, line: 992, baseType: !429, size: 32, offset: 128)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "changain_spec", scope: !4732, file: !180, line: 993, baseType: !7, size: 32, offset: 160)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "caldac_maxdata_list", scope: !4732, file: !180, line: 995, baseType: !4745, size: 1088, offset: 192)
!4745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 1088, elements: !4746)
!4746 = !{!4747}
!4747 = !DISubrange(count: 34)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "caldacs", scope: !4732, file: !180, line: 996, baseType: !4749, size: 544, offset: 1280)
!4749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !438, size: 544, elements: !4746)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "ai_cmd2", scope: !4732, file: !180, line: 998, baseType: !438, size: 16, offset: 1824)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "ao_conf", scope: !4732, file: !180, line: 1000, baseType: !4752, size: 128, offset: 1840)
!4752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !438, size: 128, elements: !597)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "ao_mode1", scope: !4732, file: !180, line: 1001, baseType: !438, size: 16, offset: 1968)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "ao_mode2", scope: !4732, file: !180, line: 1002, baseType: !438, size: 16, offset: 1984)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "ao_mode3", scope: !4732, file: !180, line: 1003, baseType: !438, size: 16, offset: 2000)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "ao_cmd1", scope: !4732, file: !180, line: 1004, baseType: !438, size: 16, offset: 2016)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "ao_cmd2", scope: !4732, file: !180, line: 1005, baseType: !438, size: 16, offset: 2032)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "counter_dev", scope: !4732, file: !180, line: 1007, baseType: !4759, size: 64, offset: 2048)
!4759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4760, size: 64)
!4760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ni_gpct_device", file: !101, line: 102, size: 512, elements: !4761)
!4761 = !{!4762, !4763, !4809, !4813, !4814, !4815, !4816, !4817, !4822, !4823}
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4760, file: !101, line: 103, baseType: !3350, size: 64)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4760, file: !101, line: 104, baseType: !4764, size: 64, offset: 64)
!4764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4765, size: 64)
!4765 = !DISubroutineType(types: !4766)
!4766 = !{null, !4767, !7, !100}
!4767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4768, size: 64)
!4768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ni_gpct", file: !101, line: 93, size: 256, elements: !4769)
!4769 = !{!4770, !4771, !4772, !4773, !4774, !4808}
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "counter_dev", scope: !4768, file: !101, line: 94, baseType: !4759, size: 64)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "counter_index", scope: !4768, file: !101, line: 95, baseType: !7, size: 32, offset: 64)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "chip_index", scope: !4768, file: !101, line: 96, baseType: !7, size: 32, offset: 96)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "clock_period_ps", scope: !4768, file: !101, line: 97, baseType: !510, size: 64, offset: 128)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "mite_chan", scope: !4768, file: !101, line: 98, baseType: !4775, size: 64, offset: 192)
!4775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4776, size: 64)
!4776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mite_channel", file: !4777, line: 36, size: 256, elements: !4778)
!4777 = !DIFile(filename: "drivers/staging/comedi/drivers/mite.h", directory: "/home/lizy2001/genbc/linux")
!4778 = !{!4779, !4790, !4791, !4792, !4793}
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "mite", scope: !4776, file: !4777, line: 37, baseType: !4780, size: 64)
!4780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4781, size: 64)
!4781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mite", file: !4777, line: 44, size: 2240, elements: !4782)
!4782 = !{!4783, !4784, !4785, !4787, !4788, !4789}
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "pcidev", scope: !4781, file: !4777, line: 45, baseType: !4452, size: 64)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "mmio", scope: !4781, file: !4777, line: 46, baseType: !463, size: 64, offset: 64)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !4781, file: !4777, line: 47, baseType: !4786, size: 2048, offset: 128)
!4786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4776, size: 2048, elements: !597)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "num_channels", scope: !4781, file: !4777, line: 48, baseType: !429, size: 32, offset: 2176)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_size", scope: !4781, file: !4777, line: 49, baseType: !7, size: 32, offset: 2208)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4781, file: !4777, line: 51, baseType: !844, offset: 2240)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !4776, file: !4777, line: 38, baseType: !7, size: 32, offset: 64)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4776, file: !4777, line: 39, baseType: !429, size: 32, offset: 96)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4776, file: !4777, line: 40, baseType: !429, size: 32, offset: 128)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "ring", scope: !4776, file: !4777, line: 41, baseType: !4794, size: 64, offset: 192)
!4794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4795, size: 64)
!4795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mite_ring", file: !4777, line: 29, size: 256, elements: !4796)
!4796 = !{!4797, !4798, !4799, !4807}
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "hw_dev", scope: !4795, file: !4777, line: 30, baseType: !3360, size: 64)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "n_links", scope: !4795, file: !4777, line: 31, baseType: !7, size: 32, offset: 64)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "descs", scope: !4795, file: !4777, line: 32, baseType: !4800, size: 64, offset: 128)
!4800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4801, size: 64)
!4801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mite_dma_desc", file: !4777, line: 22, size: 128, elements: !4802)
!4802 = !{!4803, !4804, !4805, !4806}
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4801, file: !4777, line: 23, baseType: !441, size: 32)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4801, file: !4777, line: 24, baseType: !441, size: 32, offset: 32)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4801, file: !4777, line: 25, baseType: !441, size: 32, offset: 64)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "dar", scope: !4801, file: !4777, line: 26, baseType: !459, size: 32, offset: 96)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !4795, file: !4777, line: 33, baseType: !2305, size: 64, offset: 192)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4768, file: !101, line: 99, baseType: !844, offset: 256)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4760, file: !101, line: 106, baseType: !4810, size: 64, offset: 128)
!4810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4811, size: 64)
!4811 = !DISubroutineType(types: !4812)
!4812 = !{!7, !4767, !100}
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "variant", scope: !4760, file: !101, line: 107, baseType: !174, size: 32, offset: 192)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !4760, file: !101, line: 108, baseType: !4767, size: 64, offset: 256)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "num_counters", scope: !4760, file: !101, line: 109, baseType: !7, size: 32, offset: 320)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "num_chips", scope: !4760, file: !101, line: 110, baseType: !7, size: 32, offset: 352)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4760, file: !101, line: 111, baseType: !4818, size: 64, offset: 384)
!4818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4819, size: 64)
!4819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2240, elements: !4820)
!4820 = !{!4821}
!4821 = !DISubrange(count: 70)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "regs_lock", scope: !4760, file: !101, line: 112, baseType: !844, offset: 448)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "routing_tables", scope: !4760, file: !101, line: 113, baseType: !4824, size: 64, offset: 448)
!4824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4825, size: 64)
!4825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4826)
!4826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ni_route_tables", file: !4827, line: 66, size: 128, elements: !4828)
!4827 = !DIFile(filename: "drivers/staging/comedi/drivers/ni_routes.h", directory: "/home/lizy2001/genbc/linux")
!4828 = !{!4829, !4843}
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "valid_routes", scope: !4826, file: !4827, line: 67, baseType: !4830, size: 64)
!4830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4831, size: 64)
!4831 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4832)
!4832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ni_device_routes", file: !4827, line: 51, size: 192, elements: !4833)
!4833 = !{!4834, !4835, !4836}
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4832, file: !4827, line: 52, baseType: !873, size: 64)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "n_route_sets", scope: !4832, file: !4827, line: 53, baseType: !429, size: 32, offset: 64)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "routes", scope: !4832, file: !4827, line: 54, baseType: !4837, size: 64, offset: 128)
!4837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4838, size: 64)
!4838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ni_route_set", file: !4827, line: 39, size: 128, elements: !4839)
!4839 = !{!4840, !4841, !4842}
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !4838, file: !4827, line: 40, baseType: !429, size: 32)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "n_src", scope: !4838, file: !4827, line: 41, baseType: !429, size: 32, offset: 32)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !4838, file: !4827, line: 42, baseType: !1042, size: 64, offset: 64)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "route_values", scope: !4826, file: !4827, line: 68, baseType: !4844, size: 64, offset: 64)
!4844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4845, size: 64)
!4845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !632)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "an_trig_etc_reg", scope: !4732, file: !180, line: 1008, baseType: !438, size: 16, offset: 2112)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "ai_offset", scope: !4732, file: !180, line: 1010, baseType: !4848, size: 16384, offset: 2144)
!4848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 16384, elements: !4849)
!4849 = !{!4850}
!4850 = !DISubrange(count: 512)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "serial_interval_ns", scope: !4732, file: !180, line: 1012, baseType: !435, size: 64, offset: 18560)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "serial_hw_mode", scope: !4732, file: !180, line: 1013, baseType: !434, size: 8, offset: 18624)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "clock_and_fout", scope: !4732, file: !180, line: 1014, baseType: !438, size: 16, offset: 18640)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "clock_and_fout2", scope: !4732, file: !180, line: 1015, baseType: !438, size: 16, offset: 18656)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "int_a_enable_reg", scope: !4732, file: !180, line: 1017, baseType: !438, size: 16, offset: 18672)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "int_b_enable_reg", scope: !4732, file: !180, line: 1018, baseType: !438, size: 16, offset: 18688)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "io_bidirection_pin_reg", scope: !4732, file: !180, line: 1019, baseType: !438, size: 16, offset: 18704)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "rtsi_trig_direction_reg", scope: !4732, file: !180, line: 1020, baseType: !438, size: 16, offset: 18720)
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "rtsi_trig_a_output_reg", scope: !4732, file: !180, line: 1021, baseType: !438, size: 16, offset: 18736)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "rtsi_trig_b_output_reg", scope: !4732, file: !180, line: 1022, baseType: !438, size: 16, offset: 18752)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "pfi_output_select_reg", scope: !4732, file: !180, line: 1023, baseType: !4862, size: 96, offset: 18768)
!4862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !438, size: 96, elements: !1949)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "ai_ao_select_reg", scope: !4732, file: !180, line: 1024, baseType: !438, size: 16, offset: 18864)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "g0_g1_select_reg", scope: !4732, file: !180, line: 1025, baseType: !438, size: 16, offset: 18880)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "cdio_dma_select_reg", scope: !4732, file: !180, line: 1026, baseType: !438, size: 16, offset: 18896)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "clock_ns", scope: !4732, file: !180, line: 1028, baseType: !7, size: 32, offset: 18912)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "clock_source", scope: !4732, file: !180, line: 1029, baseType: !7, size: 32, offset: 18944)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "pwm_up_count", scope: !4732, file: !180, line: 1031, baseType: !438, size: 16, offset: 18976)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "pwm_down_count", scope: !4732, file: !180, line: 1032, baseType: !438, size: 16, offset: 18992)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "ai_fifo_buffer", scope: !4732, file: !180, line: 1034, baseType: !4871, size: 131072, offset: 19008)
!4871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !438, size: 131072, elements: !4872)
!4872 = !{!4873}
!4873 = !DISubrange(count: 8192)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_buffer", scope: !4732, file: !180, line: 1035, baseType: !4875, size: 8192, offset: 150080)
!4875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !632, size: 8192, elements: !4876)
!4876 = !{!4877}
!4877 = !DISubrange(count: 1024)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "mite", scope: !4732, file: !180, line: 1037, baseType: !4780, size: 64, offset: 158272)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "ai_mite_chan", scope: !4732, file: !180, line: 1038, baseType: !4775, size: 64, offset: 158336)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "ao_mite_chan", scope: !4732, file: !180, line: 1039, baseType: !4775, size: 64, offset: 158400)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "cdo_mite_chan", scope: !4732, file: !180, line: 1040, baseType: !4775, size: 64, offset: 158464)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "ai_mite_ring", scope: !4732, file: !180, line: 1041, baseType: !4794, size: 64, offset: 158528)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "ao_mite_ring", scope: !4732, file: !180, line: 1042, baseType: !4794, size: 64, offset: 158592)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "cdo_mite_ring", scope: !4732, file: !180, line: 1043, baseType: !4794, size: 64, offset: 158656)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "gpct_mite_ring", scope: !4732, file: !180, line: 1044, baseType: !4886, size: 128, offset: 158720)
!4886 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4794, size: 128, elements: !1889)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "is_m_series", scope: !4732, file: !180, line: 1047, baseType: !7, size: 1, offset: 158848, flags: DIFlagBitField, extraData: i64 158848)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "is_6xxx", scope: !4732, file: !180, line: 1048, baseType: !7, size: 1, offset: 158849, flags: DIFlagBitField, extraData: i64 158848)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "is_611x", scope: !4732, file: !180, line: 1049, baseType: !7, size: 1, offset: 158850, flags: DIFlagBitField, extraData: i64 158848)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "is_6143", scope: !4732, file: !180, line: 1050, baseType: !7, size: 1, offset: 158851, flags: DIFlagBitField, extraData: i64 158848)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "is_622x", scope: !4732, file: !180, line: 1051, baseType: !7, size: 1, offset: 158852, flags: DIFlagBitField, extraData: i64 158848)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "is_625x", scope: !4732, file: !180, line: 1052, baseType: !7, size: 1, offset: 158853, flags: DIFlagBitField, extraData: i64 158848)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "is_628x", scope: !4732, file: !180, line: 1053, baseType: !7, size: 1, offset: 158854, flags: DIFlagBitField, extraData: i64 158848)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "is_67xx", scope: !4732, file: !180, line: 1054, baseType: !7, size: 1, offset: 158855, flags: DIFlagBitField, extraData: i64 158848)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "is_6711", scope: !4732, file: !180, line: 1055, baseType: !7, size: 1, offset: 158856, flags: DIFlagBitField, extraData: i64 158848)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "is_6713", scope: !4732, file: !180, line: 1056, baseType: !7, size: 1, offset: 158857, flags: DIFlagBitField, extraData: i64 158848)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "ao_needs_arming", scope: !4732, file: !180, line: 1070, baseType: !7, size: 1, offset: 158858, flags: DIFlagBitField, extraData: i64 158848)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "routing_tables", scope: !4732, file: !180, line: 1073, baseType: !4826, size: 128, offset: 158912)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "rtsi_shared_mux_usage", scope: !4732, file: !180, line: 1085, baseType: !4900, size: 32, offset: 159040)
!4900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !632, size: 32, elements: !1849)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "rtsi_shared_mux_reg", scope: !4732, file: !180, line: 1131, baseType: !1610, size: 16, offset: 159072)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "rgout0_usage", scope: !4732, file: !180, line: 1137, baseType: !632, size: 8, offset: 159088)
!4903 = !DILocation(line: 1274, column: 21, scope: !4727)
!4904 = !DILocation(line: 1274, column: 31, scope: !4727)
!4905 = !DILocation(line: 1274, column: 36, scope: !4727)
!4906 = !DILocation(line: 1276, column: 20, scope: !4727)
!4907 = !DILocation(line: 1276, column: 2, scope: !4727)
!4908 = !DILocation(line: 1277, column: 6, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 1277, column: 6)
!4910 = !DILocation(line: 1277, column: 11, scope: !4909)
!4911 = !DILocation(line: 1277, column: 6, scope: !4727)
!4912 = !DILocation(line: 1278, column: 12, scope: !4909)
!4913 = !DILocation(line: 1278, column: 17, scope: !4909)
!4914 = !DILocation(line: 1278, column: 22, scope: !4909)
!4915 = !DILocation(line: 1278, column: 3, scope: !4909)
!4916 = !DILocation(line: 1279, column: 6, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 1279, column: 6)
!4918 = !DILocation(line: 1279, column: 6, scope: !4727)
!4919 = !DILocation(line: 1280, column: 18, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 1279, column: 15)
!4921 = !DILocation(line: 1280, column: 27, scope: !4920)
!4922 = !DILocation(line: 1280, column: 3, scope: !4920)
!4923 = !DILocation(line: 1281, column: 18, scope: !4920)
!4924 = !DILocation(line: 1281, column: 27, scope: !4920)
!4925 = !DILocation(line: 1281, column: 3, scope: !4920)
!4926 = !DILocation(line: 1282, column: 18, scope: !4920)
!4927 = !DILocation(line: 1282, column: 27, scope: !4920)
!4928 = !DILocation(line: 1282, column: 3, scope: !4920)
!4929 = !DILocation(line: 1283, column: 18, scope: !4920)
!4930 = !DILocation(line: 1283, column: 27, scope: !4920)
!4931 = !DILocation(line: 1283, column: 3, scope: !4920)
!4932 = !DILocation(line: 1284, column: 18, scope: !4920)
!4933 = !DILocation(line: 1284, column: 27, scope: !4920)
!4934 = !DILocation(line: 1284, column: 3, scope: !4920)
!4935 = !DILocation(line: 1285, column: 15, scope: !4920)
!4936 = !DILocation(line: 1285, column: 24, scope: !4920)
!4937 = !DILocation(line: 1285, column: 3, scope: !4920)
!4938 = !DILocation(line: 1286, column: 2, scope: !4920)
!4939 = !DILocation(line: 1287, column: 6, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 1287, column: 6)
!4941 = !DILocation(line: 1287, column: 11, scope: !4940)
!4942 = !DILocation(line: 1287, column: 6, scope: !4727)
!4943 = !DILocation(line: 1288, column: 11, scope: !4940)
!4944 = !DILocation(line: 1288, column: 16, scope: !4940)
!4945 = !DILocation(line: 1288, column: 3, scope: !4940)
!4946 = !DILocation(line: 1289, column: 21, scope: !4727)
!4947 = !DILocation(line: 1289, column: 2, scope: !4727)
!4948 = !DILocation(line: 1290, column: 1, scope: !4727)
!4949 = distinct !DISubprogram(name: "pcimio_auto_attach", scope: !3, file: !3, line: 1292, type: !4285, scopeLine: 1294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!4950 = !DILocalVariable(name: "dev", arg: 1, scope: !4949, file: !3, line: 1292, type: !3350)
!4951 = !DILocation(line: 1292, column: 53, scope: !4949)
!4952 = !DILocalVariable(name: "context", arg: 2, scope: !4949, file: !3, line: 1293, type: !435)
!4953 = !DILocation(line: 1293, column: 24, scope: !4949)
!4954 = !DILocalVariable(name: "pcidev", scope: !4949, file: !3, line: 1295, type: !4452)
!4955 = !DILocation(line: 1295, column: 18, scope: !4949)
!4956 = !DILocation(line: 1295, column: 45, scope: !4949)
!4957 = !DILocation(line: 1295, column: 27, scope: !4949)
!4958 = !DILocalVariable(name: "board", scope: !4949, file: !3, line: 1296, type: !4959)
!4959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4295, size: 64)
!4960 = !DILocation(line: 1296, column: 32, scope: !4949)
!4961 = !DILocalVariable(name: "devpriv", scope: !4949, file: !3, line: 1297, type: !4731)
!4962 = !DILocation(line: 1297, column: 21, scope: !4949)
!4963 = !DILocalVariable(name: "irq", scope: !4949, file: !3, line: 1298, type: !7)
!4964 = !DILocation(line: 1298, column: 15, scope: !4949)
!4965 = !DILocalVariable(name: "ret", scope: !4949, file: !3, line: 1299, type: !429)
!4966 = !DILocation(line: 1299, column: 6, scope: !4949)
!4967 = !DILocation(line: 1301, column: 6, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 1301, column: 6)
!4969 = !DILocation(line: 1301, column: 14, scope: !4968)
!4970 = !DILocation(line: 1301, column: 6, scope: !4949)
!4971 = !DILocation(line: 1302, column: 22, scope: !4968)
!4972 = !DILocation(line: 1302, column: 12, scope: !4968)
!4973 = !DILocation(line: 1302, column: 9, scope: !4968)
!4974 = !DILocation(line: 1302, column: 3, scope: !4968)
!4975 = !DILocation(line: 1303, column: 7, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 1303, column: 6)
!4977 = !DILocation(line: 1303, column: 6, scope: !4949)
!4978 = !DILocation(line: 1304, column: 3, scope: !4976)
!4979 = !DILocation(line: 1305, column: 19, scope: !4949)
!4980 = !DILocation(line: 1305, column: 2, scope: !4949)
!4981 = !DILocation(line: 1305, column: 7, scope: !4949)
!4982 = !DILocation(line: 1305, column: 17, scope: !4949)
!4983 = !DILocation(line: 1306, column: 20, scope: !4949)
!4984 = !DILocation(line: 1306, column: 27, scope: !4949)
!4985 = !DILocation(line: 1306, column: 2, scope: !4949)
!4986 = !DILocation(line: 1306, column: 7, scope: !4949)
!4987 = !DILocation(line: 1306, column: 18, scope: !4949)
!4988 = !DILocation(line: 1308, column: 26, scope: !4949)
!4989 = !DILocation(line: 1308, column: 8, scope: !4949)
!4990 = !DILocation(line: 1308, column: 6, scope: !4949)
!4991 = !DILocation(line: 1309, column: 6, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 1309, column: 6)
!4993 = !DILocation(line: 1309, column: 6, scope: !4949)
!4994 = !DILocation(line: 1310, column: 10, scope: !4992)
!4995 = !DILocation(line: 1310, column: 3, scope: !4992)
!4996 = !DILocation(line: 1312, column: 25, scope: !4949)
!4997 = !DILocation(line: 1312, column: 8, scope: !4949)
!4998 = !DILocation(line: 1312, column: 6, scope: !4949)
!4999 = !DILocation(line: 1313, column: 6, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 1313, column: 6)
!5001 = !DILocation(line: 1313, column: 6, scope: !4949)
!5002 = !DILocation(line: 1314, column: 10, scope: !5000)
!5003 = !DILocation(line: 1314, column: 3, scope: !5000)
!5004 = !DILocation(line: 1315, column: 12, scope: !4949)
!5005 = !DILocation(line: 1315, column: 17, scope: !4949)
!5006 = !DILocation(line: 1315, column: 10, scope: !4949)
!5007 = !DILocation(line: 1317, column: 30, scope: !4949)
!5008 = !DILocation(line: 1317, column: 18, scope: !4949)
!5009 = !DILocation(line: 1317, column: 2, scope: !4949)
!5010 = !DILocation(line: 1317, column: 11, scope: !4949)
!5011 = !DILocation(line: 1317, column: 16, scope: !4949)
!5012 = !DILocation(line: 1318, column: 7, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 1318, column: 6)
!5014 = !DILocation(line: 1318, column: 16, scope: !5013)
!5015 = !DILocation(line: 1318, column: 6, scope: !4949)
!5016 = !DILocation(line: 1319, column: 3, scope: !5013)
!5017 = !DILocation(line: 1321, column: 6, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 1321, column: 6)
!5019 = !DILocation(line: 1321, column: 13, scope: !5018)
!5020 = !DILocation(line: 1321, column: 22, scope: !5018)
!5021 = !DILocation(line: 1321, column: 6, scope: !4949)
!5022 = !DILocation(line: 1322, column: 3, scope: !5018)
!5023 = !DILocation(line: 1322, column: 12, scope: !5018)
!5024 = !DILocation(line: 1322, column: 24, scope: !5018)
!5025 = !DILocation(line: 1323, column: 6, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 1323, column: 6)
!5027 = !DILocation(line: 1323, column: 13, scope: !5026)
!5028 = !DILocation(line: 1323, column: 22, scope: !5026)
!5029 = !DILocation(line: 1323, column: 6, scope: !4949)
!5030 = !DILocation(line: 1324, column: 3, scope: !5026)
!5031 = !DILocation(line: 1324, column: 12, scope: !5026)
!5032 = !DILocation(line: 1324, column: 20, scope: !5026)
!5033 = !DILocation(line: 1325, column: 6, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 1325, column: 6)
!5035 = !DILocation(line: 1325, column: 13, scope: !5034)
!5036 = !DILocation(line: 1325, column: 22, scope: !5034)
!5037 = !DILocation(line: 1325, column: 6, scope: !4949)
!5038 = !DILocation(line: 1326, column: 3, scope: !5034)
!5039 = !DILocation(line: 1326, column: 12, scope: !5034)
!5040 = !DILocation(line: 1326, column: 20, scope: !5034)
!5041 = !DILocation(line: 1327, column: 6, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 1327, column: 6)
!5043 = !DILocation(line: 1327, column: 13, scope: !5042)
!5044 = !DILocation(line: 1327, column: 22, scope: !5042)
!5045 = !DILocation(line: 1327, column: 6, scope: !4949)
!5046 = !DILocation(line: 1328, column: 3, scope: !5042)
!5047 = !DILocation(line: 1328, column: 12, scope: !5042)
!5048 = !DILocation(line: 1328, column: 20, scope: !5042)
!5049 = !DILocation(line: 1329, column: 6, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 1329, column: 6)
!5051 = !DILocation(line: 1329, column: 13, scope: !5050)
!5052 = !DILocation(line: 1329, column: 22, scope: !5050)
!5053 = !DILocation(line: 1329, column: 6, scope: !4949)
!5054 = !DILocation(line: 1330, column: 3, scope: !5050)
!5055 = !DILocation(line: 1330, column: 12, scope: !5050)
!5056 = !DILocation(line: 1330, column: 20, scope: !5050)
!5057 = !DILocation(line: 1331, column: 6, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 1331, column: 6)
!5059 = !DILocation(line: 1331, column: 13, scope: !5058)
!5060 = !DILocation(line: 1331, column: 22, scope: !5058)
!5061 = !DILocation(line: 1331, column: 6, scope: !4949)
!5062 = !DILocation(line: 1332, column: 3, scope: !5058)
!5063 = !DILocation(line: 1332, column: 12, scope: !5058)
!5064 = !DILocation(line: 1332, column: 20, scope: !5058)
!5065 = !DILocation(line: 1333, column: 6, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 1333, column: 6)
!5067 = !DILocation(line: 1333, column: 13, scope: !5066)
!5068 = !DILocation(line: 1333, column: 22, scope: !5066)
!5069 = !DILocation(line: 1333, column: 6, scope: !4949)
!5070 = !DILocation(line: 1334, column: 3, scope: !5066)
!5071 = !DILocation(line: 1334, column: 12, scope: !5066)
!5072 = !DILocation(line: 1334, column: 20, scope: !5066)
!5073 = !DILocation(line: 1335, column: 6, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 1335, column: 6)
!5075 = !DILocation(line: 1335, column: 13, scope: !5074)
!5076 = !DILocation(line: 1335, column: 22, scope: !5074)
!5077 = !DILocation(line: 1335, column: 6, scope: !4949)
!5078 = !DILocation(line: 1336, column: 3, scope: !5074)
!5079 = !DILocation(line: 1336, column: 12, scope: !5074)
!5080 = !DILocation(line: 1336, column: 20, scope: !5074)
!5081 = !DILocation(line: 1337, column: 6, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 1337, column: 6)
!5083 = !DILocation(line: 1337, column: 13, scope: !5082)
!5084 = !DILocation(line: 1337, column: 22, scope: !5082)
!5085 = !DILocation(line: 1337, column: 6, scope: !4949)
!5086 = !DILocation(line: 1338, column: 3, scope: !5082)
!5087 = !DILocation(line: 1338, column: 12, scope: !5082)
!5088 = !DILocation(line: 1338, column: 20, scope: !5082)
!5089 = !DILocation(line: 1339, column: 6, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 1339, column: 6)
!5091 = !DILocation(line: 1339, column: 13, scope: !5090)
!5092 = !DILocation(line: 1339, column: 22, scope: !5090)
!5093 = !DILocation(line: 1339, column: 6, scope: !4949)
!5094 = !DILocation(line: 1340, column: 3, scope: !5090)
!5095 = !DILocation(line: 1340, column: 12, scope: !5090)
!5096 = !DILocation(line: 1340, column: 20, scope: !5090)
!5097 = !DILocation(line: 1342, column: 42, scope: !4949)
!5098 = !DILocation(line: 1342, column: 51, scope: !4949)
!5099 = !DILocation(line: 1342, column: 26, scope: !4949)
!5100 = !DILocation(line: 1342, column: 2, scope: !4949)
!5101 = !DILocation(line: 1342, column: 11, scope: !4949)
!5102 = !DILocation(line: 1342, column: 24, scope: !4949)
!5103 = !DILocation(line: 1343, column: 7, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 1343, column: 6)
!5105 = !DILocation(line: 1343, column: 16, scope: !5104)
!5106 = !DILocation(line: 1343, column: 6, scope: !4949)
!5107 = !DILocation(line: 1344, column: 3, scope: !5104)
!5108 = !DILocation(line: 1345, column: 42, scope: !4949)
!5109 = !DILocation(line: 1345, column: 51, scope: !4949)
!5110 = !DILocation(line: 1345, column: 26, scope: !4949)
!5111 = !DILocation(line: 1345, column: 2, scope: !4949)
!5112 = !DILocation(line: 1345, column: 11, scope: !4949)
!5113 = !DILocation(line: 1345, column: 24, scope: !4949)
!5114 = !DILocation(line: 1346, column: 7, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 1346, column: 6)
!5116 = !DILocation(line: 1346, column: 16, scope: !5115)
!5117 = !DILocation(line: 1346, column: 6, scope: !4949)
!5118 = !DILocation(line: 1347, column: 3, scope: !5115)
!5119 = !DILocation(line: 1348, column: 43, scope: !4949)
!5120 = !DILocation(line: 1348, column: 52, scope: !4949)
!5121 = !DILocation(line: 1348, column: 27, scope: !4949)
!5122 = !DILocation(line: 1348, column: 2, scope: !4949)
!5123 = !DILocation(line: 1348, column: 11, scope: !4949)
!5124 = !DILocation(line: 1348, column: 25, scope: !4949)
!5125 = !DILocation(line: 1349, column: 7, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 1349, column: 6)
!5127 = !DILocation(line: 1349, column: 16, scope: !5126)
!5128 = !DILocation(line: 1349, column: 6, scope: !4949)
!5129 = !DILocation(line: 1350, column: 3, scope: !5126)
!5130 = !DILocation(line: 1351, column: 47, scope: !4949)
!5131 = !DILocation(line: 1351, column: 56, scope: !4949)
!5132 = !DILocation(line: 1351, column: 31, scope: !4949)
!5133 = !DILocation(line: 1351, column: 2, scope: !4949)
!5134 = !DILocation(line: 1351, column: 11, scope: !4949)
!5135 = !DILocation(line: 1351, column: 29, scope: !4949)
!5136 = !DILocation(line: 1352, column: 7, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 1352, column: 6)
!5138 = !DILocation(line: 1352, column: 16, scope: !5137)
!5139 = !DILocation(line: 1352, column: 6, scope: !4949)
!5140 = !DILocation(line: 1353, column: 3, scope: !5137)
!5141 = !DILocation(line: 1354, column: 47, scope: !4949)
!5142 = !DILocation(line: 1354, column: 56, scope: !4949)
!5143 = !DILocation(line: 1354, column: 31, scope: !4949)
!5144 = !DILocation(line: 1354, column: 2, scope: !4949)
!5145 = !DILocation(line: 1354, column: 11, scope: !4949)
!5146 = !DILocation(line: 1354, column: 29, scope: !4949)
!5147 = !DILocation(line: 1355, column: 7, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 1355, column: 6)
!5149 = !DILocation(line: 1355, column: 16, scope: !5148)
!5150 = !DILocation(line: 1355, column: 6, scope: !4949)
!5151 = !DILocation(line: 1356, column: 3, scope: !5148)
!5152 = !DILocation(line: 1358, column: 6, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 1358, column: 6)
!5154 = !DILocation(line: 1358, column: 15, scope: !5153)
!5155 = !DILocation(line: 1358, column: 6, scope: !4949)
!5156 = !DILocation(line: 1359, column: 31, scope: !5153)
!5157 = !DILocation(line: 1359, column: 3, scope: !5153)
!5158 = !DILocation(line: 1360, column: 6, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 1360, column: 6)
!5160 = !DILocation(line: 1360, column: 15, scope: !5159)
!5161 = !DILocation(line: 1360, column: 6, scope: !4949)
!5162 = !DILocation(line: 1361, column: 13, scope: !5159)
!5163 = !DILocation(line: 1361, column: 3, scope: !5159)
!5164 = !DILocation(line: 1363, column: 8, scope: !4949)
!5165 = !DILocation(line: 1363, column: 16, scope: !4949)
!5166 = !DILocation(line: 1363, column: 6, scope: !4949)
!5167 = !DILocation(line: 1364, column: 6, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 1364, column: 6)
!5169 = !DILocation(line: 1364, column: 6, scope: !4949)
!5170 = !DILocation(line: 1365, column: 21, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5168, file: !3, line: 1364, column: 11)
!5172 = !DILocation(line: 1366, column: 7, scope: !5171)
!5173 = !DILocation(line: 1366, column: 12, scope: !5171)
!5174 = !DILocation(line: 1366, column: 24, scope: !5171)
!5175 = !DILocation(line: 1365, column: 9, scope: !5171)
!5176 = !DILocation(line: 1365, column: 7, scope: !5171)
!5177 = !DILocation(line: 1367, column: 7, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5171, file: !3, line: 1367, column: 7)
!5179 = !DILocation(line: 1367, column: 11, scope: !5178)
!5180 = !DILocation(line: 1367, column: 7, scope: !5171)
!5181 = !DILocation(line: 1368, column: 15, scope: !5178)
!5182 = !DILocation(line: 1368, column: 4, scope: !5178)
!5183 = !DILocation(line: 1368, column: 9, scope: !5178)
!5184 = !DILocation(line: 1368, column: 13, scope: !5178)
!5185 = !DILocation(line: 1369, column: 2, scope: !5171)
!5186 = !DILocation(line: 1371, column: 18, scope: !4949)
!5187 = !DILocation(line: 1371, column: 8, scope: !4949)
!5188 = !DILocation(line: 1371, column: 6, scope: !4949)
!5189 = !DILocation(line: 1372, column: 6, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 1372, column: 6)
!5191 = !DILocation(line: 1372, column: 10, scope: !5190)
!5192 = !DILocation(line: 1372, column: 6, scope: !4949)
!5193 = !DILocation(line: 1373, column: 10, scope: !5190)
!5194 = !DILocation(line: 1373, column: 3, scope: !5190)
!5195 = !DILocation(line: 1375, column: 2, scope: !4949)
!5196 = !DILocation(line: 1375, column: 7, scope: !4949)
!5197 = !DILocation(line: 1375, column: 32, scope: !4949)
!5198 = !DILocation(line: 1375, column: 43, scope: !4949)
!5199 = !DILocation(line: 1376, column: 2, scope: !4949)
!5200 = !DILocation(line: 1376, column: 7, scope: !4949)
!5201 = !DILocation(line: 1376, column: 32, scope: !4949)
!5202 = !DILocation(line: 1376, column: 43, scope: !4949)
!5203 = !DILocation(line: 1377, column: 2, scope: !4949)
!5204 = !DILocation(line: 1377, column: 7, scope: !4949)
!5205 = !DILocation(line: 1377, column: 37, scope: !4949)
!5206 = !DILocation(line: 1377, column: 48, scope: !4949)
!5207 = !DILocation(line: 1378, column: 2, scope: !4949)
!5208 = !DILocation(line: 1378, column: 7, scope: !4949)
!5209 = !DILocation(line: 1378, column: 37, scope: !4949)
!5210 = !DILocation(line: 1378, column: 48, scope: !4949)
!5211 = !DILocation(line: 1379, column: 2, scope: !4949)
!5212 = !DILocation(line: 1379, column: 7, scope: !4949)
!5213 = !DILocation(line: 1379, column: 33, scope: !4949)
!5214 = !DILocation(line: 1379, column: 44, scope: !4949)
!5215 = !DILocation(line: 1381, column: 2, scope: !4949)
!5216 = !DILocation(line: 1382, column: 1, scope: !4949)
!5217 = distinct !DISubprogram(name: "mio_common_detach", scope: !209, file: !209, line: 6336, type: !4265, scopeLine: 6337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!5218 = !DILocalVariable(name: "dev", arg: 1, scope: !5217, file: !209, line: 6336, type: !3350)
!5219 = !DILocation(line: 6336, column: 53, scope: !5217)
!5220 = !DILocalVariable(name: "devpriv", scope: !5217, file: !209, line: 6338, type: !4731)
!5221 = !DILocation(line: 6338, column: 21, scope: !5217)
!5222 = !DILocation(line: 6338, column: 31, scope: !5217)
!5223 = !DILocation(line: 6338, column: 36, scope: !5217)
!5224 = !DILocation(line: 6340, column: 6, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5217, file: !209, line: 6340, column: 6)
!5226 = !DILocation(line: 6340, column: 6, scope: !5217)
!5227 = !DILocation(line: 6341, column: 26, scope: !5225)
!5228 = !DILocation(line: 6341, column: 35, scope: !5225)
!5229 = !DILocation(line: 6341, column: 3, scope: !5225)
!5230 = !DILocation(line: 6342, column: 1, scope: !5217)
!5231 = distinct !DISubprogram(name: "ni_alloc_private", scope: !209, file: !209, line: 5946, type: !4261, scopeLine: 5947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!5232 = !DILocalVariable(name: "lock", arg: 1, scope: !5233, file: !5234, line: 327, type: !2452)
!5233 = distinct !DISubprogram(name: "spinlock_check", scope: !5234, file: !5234, line: 327, type: !5235, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!5234 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!5235 = !DISubroutineType(types: !5236)
!5236 = !{!5237, !2452}
!5237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!5238 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !5239)
!5239 = distinct !DILocation(line: 5955, column: 2, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5231, file: !209, line: 5955, column: 2)
!5241 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !5242)
!5242 = distinct !DILocation(line: 5956, column: 2, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5231, file: !209, line: 5956, column: 2)
!5244 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !5245)
!5245 = distinct !DILocation(line: 5954, column: 2, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5231, file: !209, line: 5954, column: 2)
!5247 = !DILocalVariable(name: "dev", arg: 1, scope: !5231, file: !209, line: 5946, type: !3350)
!5248 = !DILocation(line: 5946, column: 51, scope: !5231)
!5249 = !DILocalVariable(name: "devpriv", scope: !5231, file: !209, line: 5948, type: !4731)
!5250 = !DILocation(line: 5948, column: 21, scope: !5231)
!5251 = !DILocation(line: 5950, column: 33, scope: !5231)
!5252 = !DILocation(line: 5950, column: 12, scope: !5231)
!5253 = !DILocation(line: 5950, column: 10, scope: !5231)
!5254 = !DILocation(line: 5951, column: 7, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5231, file: !209, line: 5951, column: 6)
!5256 = !DILocation(line: 5951, column: 6, scope: !5231)
!5257 = !DILocation(line: 5952, column: 3, scope: !5255)
!5258 = !DILocation(line: 5954, column: 2, scope: !5231)
!5259 = !DILocation(line: 5954, column: 2, scope: !5246)
!5260 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !5245)
!5261 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !5245)
!5262 = !DILocation(line: 5955, column: 2, scope: !5231)
!5263 = !DILocation(line: 5955, column: 2, scope: !5240)
!5264 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !5239)
!5265 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !5239)
!5266 = !DILocation(line: 5956, column: 2, scope: !5231)
!5267 = !DILocation(line: 5956, column: 2, scope: !5243)
!5268 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !5242)
!5269 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !5242)
!5270 = !DILocation(line: 5958, column: 2, scope: !5231)
!5271 = !DILocation(line: 5959, column: 1, scope: !5231)
!5272 = !DILocalVariable(name: "dev", arg: 1, scope: !4329, file: !3, line: 1212, type: !3350)
!5273 = !DILocation(line: 1212, column: 63, scope: !4329)
!5274 = !DILocalVariable(name: "devpriv", scope: !4329, file: !3, line: 1214, type: !4731)
!5275 = !DILocation(line: 1214, column: 21, scope: !4329)
!5276 = !DILocation(line: 1214, column: 31, scope: !4329)
!5277 = !DILocation(line: 1214, column: 36, scope: !4329)
!5278 = !DILocalVariable(name: "mite", scope: !4329, file: !3, line: 1215, type: !4780)
!5279 = !DILocation(line: 1215, column: 15, scope: !4329)
!5280 = !DILocation(line: 1215, column: 22, scope: !4329)
!5281 = !DILocation(line: 1215, column: 31, scope: !4329)
!5282 = !DILocalVariable(name: "daq_phys_addr", scope: !4329, file: !3, line: 1216, type: !4473)
!5283 = !DILocation(line: 1216, column: 18, scope: !4329)
!5284 = !DILocalVariable(name: "old_iodwbsr_bits", scope: !4329, file: !3, line: 1219, type: !7)
!5285 = !DILocation(line: 1219, column: 15, scope: !4329)
!5286 = !DILocalVariable(name: "old_iodwbsr1_bits", scope: !4329, file: !3, line: 1220, type: !7)
!5287 = !DILocation(line: 1220, column: 15, scope: !4329)
!5288 = !DILocalVariable(name: "old_iodwcr1_bits", scope: !4329, file: !3, line: 1221, type: !7)
!5289 = !DILocation(line: 1221, column: 15, scope: !4329)
!5290 = !DILocalVariable(name: "i", scope: !4329, file: !3, line: 1222, type: !429)
!5291 = !DILocation(line: 1222, column: 6, scope: !4329)
!5292 = !DILocation(line: 1225, column: 18, scope: !4329)
!5293 = !DILocation(line: 1225, column: 16, scope: !4329)
!5294 = !DILocation(line: 1227, column: 27, scope: !4329)
!5295 = !DILocation(line: 1227, column: 33, scope: !4329)
!5296 = !DILocation(line: 1227, column: 38, scope: !4329)
!5297 = !DILocation(line: 1227, column: 21, scope: !4329)
!5298 = !DILocation(line: 1227, column: 19, scope: !4329)
!5299 = !DILocation(line: 1228, column: 28, scope: !4329)
!5300 = !DILocation(line: 1228, column: 34, scope: !4329)
!5301 = !DILocation(line: 1228, column: 39, scope: !4329)
!5302 = !DILocation(line: 1228, column: 22, scope: !4329)
!5303 = !DILocation(line: 1228, column: 20, scope: !4329)
!5304 = !DILocation(line: 1229, column: 27, scope: !4329)
!5305 = !DILocation(line: 1229, column: 33, scope: !4329)
!5306 = !DILocation(line: 1229, column: 38, scope: !4329)
!5307 = !DILocation(line: 1229, column: 21, scope: !4329)
!5308 = !DILocation(line: 1229, column: 19, scope: !4329)
!5309 = !DILocation(line: 1230, column: 14, scope: !4329)
!5310 = !DILocation(line: 1230, column: 20, scope: !4329)
!5311 = !DILocation(line: 1230, column: 25, scope: !4329)
!5312 = !DILocation(line: 1230, column: 2, scope: !4329)
!5313 = !DILocation(line: 1231, column: 33, scope: !4329)
!5314 = !DILocation(line: 1231, column: 31, scope: !4329)
!5315 = !DILocation(line: 1231, column: 9, scope: !4329)
!5316 = !DILocation(line: 1232, column: 9, scope: !4329)
!5317 = !DILocation(line: 1232, column: 15, scope: !4329)
!5318 = !DILocation(line: 1232, column: 20, scope: !4329)
!5319 = !DILocation(line: 1231, column: 2, scope: !4329)
!5320 = !DILocation(line: 1233, column: 15, scope: !4329)
!5321 = !DILocation(line: 1233, column: 13, scope: !4329)
!5322 = !DILocation(line: 1233, column: 33, scope: !4329)
!5323 = !DILocation(line: 1233, column: 39, scope: !4329)
!5324 = !DILocation(line: 1233, column: 44, scope: !4329)
!5325 = !DILocation(line: 1233, column: 2, scope: !4329)
!5326 = !DILocation(line: 1234, column: 14, scope: !4329)
!5327 = !DILocation(line: 1234, column: 20, scope: !4329)
!5328 = !DILocation(line: 1234, column: 25, scope: !4329)
!5329 = !DILocation(line: 1234, column: 2, scope: !4329)
!5330 = !DILocation(line: 1236, column: 9, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 1236, column: 2)
!5332 = !DILocation(line: 1236, column: 7, scope: !5331)
!5333 = !DILocation(line: 1236, column: 14, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 1236, column: 2)
!5335 = !DILocation(line: 1236, column: 16, scope: !5334)
!5336 = !DILocation(line: 1236, column: 2, scope: !5331)
!5337 = !DILocation(line: 1237, column: 40, scope: !5334)
!5338 = !DILocation(line: 1237, column: 64, scope: !5334)
!5339 = !DILocation(line: 1237, column: 62, scope: !5334)
!5340 = !DILocation(line: 1237, column: 31, scope: !5334)
!5341 = !DILocation(line: 1237, column: 3, scope: !5334)
!5342 = !DILocation(line: 1237, column: 12, scope: !5334)
!5343 = !DILocation(line: 1237, column: 26, scope: !5334)
!5344 = !DILocation(line: 1237, column: 29, scope: !5334)
!5345 = !DILocation(line: 1236, column: 40, scope: !5334)
!5346 = !DILocation(line: 1236, column: 2, scope: !5334)
!5347 = distinct !{!5347, !5336, !5348}
!5348 = !DILocation(line: 1237, column: 65, scope: !5331)
!5349 = !DILocation(line: 1239, column: 9, scope: !4329)
!5350 = !DILocation(line: 1239, column: 28, scope: !4329)
!5351 = !DILocation(line: 1239, column: 34, scope: !4329)
!5352 = !DILocation(line: 1239, column: 39, scope: !4329)
!5353 = !DILocation(line: 1239, column: 2, scope: !4329)
!5354 = !DILocation(line: 1240, column: 9, scope: !4329)
!5355 = !DILocation(line: 1240, column: 27, scope: !4329)
!5356 = !DILocation(line: 1240, column: 33, scope: !4329)
!5357 = !DILocation(line: 1240, column: 38, scope: !4329)
!5358 = !DILocation(line: 1240, column: 2, scope: !4329)
!5359 = !DILocation(line: 1241, column: 9, scope: !4329)
!5360 = !DILocation(line: 1241, column: 27, scope: !4329)
!5361 = !DILocation(line: 1241, column: 33, scope: !4329)
!5362 = !DILocation(line: 1241, column: 38, scope: !4329)
!5363 = !DILocation(line: 1241, column: 2, scope: !4329)
!5364 = !DILocation(line: 1242, column: 14, scope: !4329)
!5365 = !DILocation(line: 1242, column: 20, scope: !4329)
!5366 = !DILocation(line: 1242, column: 25, scope: !4329)
!5367 = !DILocation(line: 1242, column: 2, scope: !4329)
!5368 = !DILocation(line: 1243, column: 1, scope: !4329)
!5369 = distinct !DISubprogram(name: "init_6143", scope: !3, file: !3, line: 1245, type: !4265, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!5370 = !DILocalVariable(name: "dev", arg: 1, scope: !5369, file: !3, line: 1245, type: !3350)
!5371 = !DILocation(line: 1245, column: 45, scope: !5369)
!5372 = !DILocalVariable(name: "board", scope: !5369, file: !3, line: 1247, type: !4959)
!5373 = !DILocation(line: 1247, column: 32, scope: !5369)
!5374 = !DILocation(line: 1247, column: 40, scope: !5369)
!5375 = !DILocation(line: 1247, column: 45, scope: !5369)
!5376 = !DILocalVariable(name: "devpriv", scope: !5369, file: !3, line: 1248, type: !4731)
!5377 = !DILocation(line: 1248, column: 21, scope: !5369)
!5378 = !DILocation(line: 1248, column: 31, scope: !5369)
!5379 = !DILocation(line: 1248, column: 36, scope: !5369)
!5380 = !DILocation(line: 1251, column: 16, scope: !5369)
!5381 = !DILocation(line: 1251, column: 2, scope: !5369)
!5382 = !DILocation(line: 1256, column: 12, scope: !5369)
!5383 = !DILocation(line: 1256, column: 2, scope: !5369)
!5384 = !DILocation(line: 1258, column: 12, scope: !5369)
!5385 = !DILocation(line: 1258, column: 2, scope: !5369)
!5386 = !DILocation(line: 1260, column: 12, scope: !5369)
!5387 = !DILocation(line: 1260, column: 2, scope: !5369)
!5388 = !DILocation(line: 1263, column: 12, scope: !5369)
!5389 = !DILocation(line: 1263, column: 17, scope: !5369)
!5390 = !DILocation(line: 1263, column: 24, scope: !5369)
!5391 = !DILocation(line: 1263, column: 38, scope: !5369)
!5392 = !DILocation(line: 1263, column: 2, scope: !5369)
!5393 = !DILocation(line: 1266, column: 2, scope: !5369)
!5394 = !DILocation(line: 1266, column: 11, scope: !5369)
!5395 = !DILocation(line: 1266, column: 35, scope: !5369)
!5396 = !DILocation(line: 1267, column: 12, scope: !5369)
!5397 = !DILocation(line: 1267, column: 17, scope: !5369)
!5398 = !DILocation(line: 1267, column: 26, scope: !5369)
!5399 = !DILocation(line: 1267, column: 42, scope: !5369)
!5400 = !DILocation(line: 1267, column: 2, scope: !5369)
!5401 = !DILocation(line: 1269, column: 12, scope: !5369)
!5402 = !DILocation(line: 1269, column: 17, scope: !5369)
!5403 = !DILocation(line: 1269, column: 26, scope: !5369)
!5404 = !DILocation(line: 1269, column: 2, scope: !5369)
!5405 = !DILocation(line: 1270, column: 1, scope: !5369)
!5406 = distinct !DISubprogram(name: "request_irq", scope: !4514, file: !4514, line: 157, type: !5407, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!5407 = !DISubroutineType(types: !5408)
!5408 = !{!429, !7, !5409, !435, !873, !463}
!5409 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !4514, line: 92, baseType: !5410)
!5410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5411, size: 64)
!5411 = !DISubroutineType(types: !5412)
!5412 = !{!5413, !429, !463}
!5413 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !227, line: 17, baseType: !226)
!5414 = !DILocalVariable(name: "irq", arg: 1, scope: !5406, file: !4514, line: 157, type: !7)
!5415 = !DILocation(line: 157, column: 26, scope: !5406)
!5416 = !DILocalVariable(name: "handler", arg: 2, scope: !5406, file: !4514, line: 157, type: !5409)
!5417 = !DILocation(line: 157, column: 45, scope: !5406)
!5418 = !DILocalVariable(name: "flags", arg: 3, scope: !5406, file: !4514, line: 157, type: !435)
!5419 = !DILocation(line: 157, column: 68, scope: !5406)
!5420 = !DILocalVariable(name: "name", arg: 4, scope: !5406, file: !4514, line: 158, type: !873)
!5421 = !DILocation(line: 158, column: 18, scope: !5406)
!5422 = !DILocalVariable(name: "dev", arg: 5, scope: !5406, file: !4514, line: 158, type: !463)
!5423 = !DILocation(line: 158, column: 30, scope: !5406)
!5424 = !DILocation(line: 160, column: 30, scope: !5406)
!5425 = !DILocation(line: 160, column: 35, scope: !5406)
!5426 = !DILocation(line: 160, column: 50, scope: !5406)
!5427 = !DILocation(line: 160, column: 57, scope: !5406)
!5428 = !DILocation(line: 160, column: 63, scope: !5406)
!5429 = !DILocation(line: 160, column: 9, scope: !5406)
!5430 = !DILocation(line: 160, column: 2, scope: !5406)
!5431 = distinct !DISubprogram(name: "ni_E_interrupt", scope: !209, file: !209, line: 5889, type: !5411, scopeLine: 5890, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!5432 = !DILocalVariable(name: "lock", arg: 1, scope: !5433, file: !5234, line: 407, type: !2452)
!5433 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !5234, file: !5234, line: 407, type: !5434, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!5434 = !DISubroutineType(types: !5435)
!5435 = !{null, !2452, !435}
!5436 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !5437)
!5437 = distinct !DILocation(line: 5918, column: 3, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5439, file: !209, line: 5910, column: 21)
!5439 = distinct !DILexicalBlock(scope: !5431, file: !209, line: 5910, column: 6)
!5440 = !DILocalVariable(name: "flags", arg: 2, scope: !5433, file: !5234, line: 407, type: !435)
!5441 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !5437)
!5442 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !5443)
!5443 = distinct !DILocation(line: 5913, column: 3, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5445, file: !209, line: 5913, column: 3)
!5445 = distinct !DILexicalBlock(scope: !5446, file: !209, line: 5913, column: 3)
!5446 = distinct !DILexicalBlock(scope: !5447, file: !209, line: 5913, column: 3)
!5447 = distinct !DILexicalBlock(scope: !5448, file: !209, line: 5913, column: 3)
!5448 = distinct !DILexicalBlock(scope: !5438, file: !209, line: 5913, column: 3)
!5449 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !5450)
!5450 = distinct !DILocation(line: 5942, column: 2, scope: !5431)
!5451 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !5450)
!5452 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !5453)
!5453 = distinct !DILocation(line: 5906, column: 2, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5455, file: !209, line: 5906, column: 2)
!5455 = distinct !DILexicalBlock(scope: !5456, file: !209, line: 5906, column: 2)
!5456 = distinct !DILexicalBlock(scope: !5457, file: !209, line: 5906, column: 2)
!5457 = distinct !DILexicalBlock(scope: !5458, file: !209, line: 5906, column: 2)
!5458 = distinct !DILexicalBlock(scope: !5431, file: !209, line: 5906, column: 2)
!5459 = !DILocalVariable(name: "irq", arg: 1, scope: !5431, file: !209, line: 5889, type: !429)
!5460 = !DILocation(line: 5889, column: 39, scope: !5431)
!5461 = !DILocalVariable(name: "d", arg: 2, scope: !5431, file: !209, line: 5889, type: !463)
!5462 = !DILocation(line: 5889, column: 50, scope: !5431)
!5463 = !DILocalVariable(name: "dev", scope: !5431, file: !209, line: 5891, type: !3350)
!5464 = !DILocation(line: 5891, column: 24, scope: !5431)
!5465 = !DILocation(line: 5891, column: 30, scope: !5431)
!5466 = !DILocalVariable(name: "s_ai", scope: !5431, file: !209, line: 5892, type: !4119)
!5467 = !DILocation(line: 5892, column: 27, scope: !5431)
!5468 = !DILocation(line: 5892, column: 34, scope: !5431)
!5469 = !DILocation(line: 5892, column: 39, scope: !5431)
!5470 = !DILocalVariable(name: "s_ao", scope: !5431, file: !209, line: 5893, type: !4119)
!5471 = !DILocation(line: 5893, column: 27, scope: !5431)
!5472 = !DILocation(line: 5893, column: 34, scope: !5431)
!5473 = !DILocation(line: 5893, column: 39, scope: !5431)
!5474 = !DILocalVariable(name: "a_status", scope: !5431, file: !209, line: 5894, type: !438)
!5475 = !DILocation(line: 5894, column: 17, scope: !5431)
!5476 = !DILocalVariable(name: "b_status", scope: !5431, file: !209, line: 5895, type: !438)
!5477 = !DILocation(line: 5895, column: 17, scope: !5431)
!5478 = !DILocalVariable(name: "flags", scope: !5431, file: !209, line: 5896, type: !435)
!5479 = !DILocation(line: 5896, column: 16, scope: !5431)
!5480 = !DILocalVariable(name: "devpriv", scope: !5431, file: !209, line: 5898, type: !4731)
!5481 = !DILocation(line: 5898, column: 21, scope: !5431)
!5482 = !DILocation(line: 5898, column: 31, scope: !5431)
!5483 = !DILocation(line: 5898, column: 36, scope: !5431)
!5484 = !DILocation(line: 5901, column: 7, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5431, file: !209, line: 5901, column: 6)
!5486 = !DILocation(line: 5901, column: 12, scope: !5485)
!5487 = !DILocation(line: 5901, column: 6, scope: !5431)
!5488 = !DILocation(line: 5902, column: 3, scope: !5485)
!5489 = !DILocation(line: 5903, column: 2, scope: !5431)
!5490 = !{i32 -2141219161}
!5491 = !DILocation(line: 5906, column: 2, scope: !5431)
!5492 = !DILocation(line: 5906, column: 2, scope: !5458)
!5493 = !DILocalVariable(name: "__dummy", scope: !5494, file: !209, line: 5906, type: !435)
!5494 = distinct !DILexicalBlock(scope: !5457, file: !209, line: 5906, column: 2)
!5495 = !DILocation(line: 5906, column: 2, scope: !5494)
!5496 = !DILocalVariable(name: "__dummy2", scope: !5494, file: !209, line: 5906, type: !435)
!5497 = !DILocation(line: 5906, column: 2, scope: !5457)
!5498 = !DILocation(line: 5906, column: 2, scope: !5456)
!5499 = !DILocation(line: 5906, column: 2, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5456, file: !209, line: 5906, column: 2)
!5501 = !DILocalVariable(name: "__dummy", scope: !5502, file: !209, line: 5906, type: !435)
!5502 = distinct !DILexicalBlock(scope: !5503, file: !209, line: 5906, column: 2)
!5503 = distinct !DILexicalBlock(scope: !5500, file: !209, line: 5906, column: 2)
!5504 = !DILocation(line: 5906, column: 2, scope: !5502)
!5505 = !DILocalVariable(name: "__dummy2", scope: !5502, file: !209, line: 5906, type: !435)
!5506 = !DILocation(line: 5906, column: 2, scope: !5503)
!5507 = !DILocation(line: 5906, column: 2, scope: !5455)
!5508 = !{i32 -2141218243}
!5509 = !DILocation(line: 5906, column: 2, scope: !5454)
!5510 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !5453)
!5511 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !5453)
!5512 = !DILocation(line: 5907, column: 26, scope: !5431)
!5513 = !DILocation(line: 5907, column: 13, scope: !5431)
!5514 = !DILocation(line: 5907, column: 11, scope: !5431)
!5515 = !DILocation(line: 5908, column: 26, scope: !5431)
!5516 = !DILocation(line: 5908, column: 13, scope: !5431)
!5517 = !DILocation(line: 5908, column: 11, scope: !5431)
!5518 = !DILocation(line: 5910, column: 6, scope: !5439)
!5519 = !DILocation(line: 5910, column: 15, scope: !5439)
!5520 = !DILocation(line: 5910, column: 6, scope: !5431)
!5521 = !DILocalVariable(name: "flags_too", scope: !5438, file: !209, line: 5911, type: !435)
!5522 = !DILocation(line: 5911, column: 17, scope: !5438)
!5523 = !DILocation(line: 5913, column: 3, scope: !5438)
!5524 = !DILocation(line: 5913, column: 3, scope: !5448)
!5525 = !DILocalVariable(name: "__dummy", scope: !5526, file: !209, line: 5913, type: !435)
!5526 = distinct !DILexicalBlock(scope: !5447, file: !209, line: 5913, column: 3)
!5527 = !DILocation(line: 5913, column: 3, scope: !5526)
!5528 = !DILocalVariable(name: "__dummy2", scope: !5526, file: !209, line: 5913, type: !435)
!5529 = !DILocation(line: 5913, column: 3, scope: !5447)
!5530 = !DILocation(line: 5913, column: 3, scope: !5446)
!5531 = !DILocation(line: 5913, column: 3, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5446, file: !209, line: 5913, column: 3)
!5533 = !DILocalVariable(name: "__dummy", scope: !5534, file: !209, line: 5913, type: !435)
!5534 = distinct !DILexicalBlock(scope: !5535, file: !209, line: 5913, column: 3)
!5535 = distinct !DILexicalBlock(scope: !5532, file: !209, line: 5913, column: 3)
!5536 = !DILocation(line: 5913, column: 3, scope: !5534)
!5537 = !DILocalVariable(name: "__dummy2", scope: !5534, file: !209, line: 5913, type: !435)
!5538 = !DILocation(line: 5913, column: 3, scope: !5535)
!5539 = !DILocation(line: 5913, column: 3, scope: !5445)
!5540 = !{i32 -2141217094}
!5541 = !DILocation(line: 5913, column: 3, scope: !5444)
!5542 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !5443)
!5543 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !5443)
!5544 = !DILocation(line: 5914, column: 7, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5438, file: !209, line: 5914, column: 7)
!5546 = !DILocation(line: 5914, column: 12, scope: !5545)
!5547 = !DILocation(line: 5914, column: 15, scope: !5545)
!5548 = !DILocation(line: 5914, column: 24, scope: !5545)
!5549 = !DILocation(line: 5914, column: 7, scope: !5438)
!5550 = !DILocation(line: 5915, column: 19, scope: !5545)
!5551 = !DILocation(line: 5915, column: 28, scope: !5545)
!5552 = !DILocation(line: 5915, column: 42, scope: !5545)
!5553 = !DILocation(line: 5915, column: 4, scope: !5545)
!5554 = !DILocation(line: 5916, column: 7, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5438, file: !209, line: 5916, column: 7)
!5556 = !DILocation(line: 5916, column: 12, scope: !5555)
!5557 = !DILocation(line: 5916, column: 15, scope: !5555)
!5558 = !DILocation(line: 5916, column: 24, scope: !5555)
!5559 = !DILocation(line: 5916, column: 7, scope: !5438)
!5560 = !DILocation(line: 5917, column: 19, scope: !5555)
!5561 = !DILocation(line: 5917, column: 28, scope: !5555)
!5562 = !DILocation(line: 5917, column: 42, scope: !5555)
!5563 = !DILocation(line: 5917, column: 4, scope: !5555)
!5564 = !DILocation(line: 5918, column: 27, scope: !5438)
!5565 = !DILocation(line: 5918, column: 36, scope: !5438)
!5566 = !DILocation(line: 5918, column: 55, scope: !5438)
!5567 = !DILocalVariable(name: "__dummy", scope: !5568, file: !5234, line: 409, type: !435)
!5568 = distinct !DILexicalBlock(scope: !5569, file: !5234, line: 409, column: 2)
!5569 = distinct !DILexicalBlock(scope: !5433, file: !5234, line: 409, column: 2)
!5570 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !5437)
!5571 = !DILocalVariable(name: "__dummy2", scope: !5568, file: !5234, line: 409, type: !435)
!5572 = !DILocalVariable(name: "__dummy", scope: !5573, file: !5234, line: 409, type: !435)
!5573 = distinct !DILexicalBlock(scope: !5574, file: !5234, line: 409, column: 2)
!5574 = distinct !DILexicalBlock(scope: !5575, file: !5234, line: 409, column: 2)
!5575 = distinct !DILexicalBlock(scope: !5576, file: !5234, line: 409, column: 2)
!5576 = distinct !DILexicalBlock(scope: !5569, file: !5234, line: 409, column: 2)
!5577 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !5437)
!5578 = !DILocalVariable(name: "__dummy2", scope: !5573, file: !5234, line: 409, type: !435)
!5579 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !5437)
!5580 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !5437)
!5581 = distinct !DILexicalBlock(scope: !5576, file: !5234, line: 409, column: 2)
!5582 = !{i32 -2145440262}
!5583 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !5437)
!5584 = distinct !DILexicalBlock(scope: !5581, file: !5234, line: 409, column: 2)
!5585 = !DILocation(line: 5919, column: 2, scope: !5438)
!5586 = !DILocation(line: 5921, column: 18, scope: !5431)
!5587 = !DILocation(line: 5921, column: 23, scope: !5431)
!5588 = !DILocation(line: 5921, column: 2, scope: !5431)
!5589 = !DILocation(line: 5922, column: 18, scope: !5431)
!5590 = !DILocation(line: 5922, column: 23, scope: !5431)
!5591 = !DILocation(line: 5922, column: 2, scope: !5431)
!5592 = !DILocation(line: 5923, column: 6, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5431, file: !209, line: 5923, column: 6)
!5594 = !DILocation(line: 5923, column: 6, scope: !5431)
!5595 = !DILocation(line: 5924, column: 7, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5597, file: !209, line: 5924, column: 7)
!5597 = distinct !DILexicalBlock(scope: !5593, file: !209, line: 5923, column: 12)
!5598 = !DILocation(line: 5924, column: 16, scope: !5596)
!5599 = !DILocation(line: 5924, column: 7, scope: !5597)
!5600 = !DILocation(line: 5925, column: 23, scope: !5596)
!5601 = !DILocation(line: 5925, column: 28, scope: !5596)
!5602 = !DILocation(line: 5925, column: 34, scope: !5596)
!5603 = !DILocation(line: 5925, column: 4, scope: !5596)
!5604 = !DILocation(line: 5927, column: 24, scope: !5597)
!5605 = !DILocation(line: 5927, column: 29, scope: !5597)
!5606 = !DILocation(line: 5927, column: 3, scope: !5597)
!5607 = !DILocation(line: 5928, column: 2, scope: !5597)
!5608 = !DILocation(line: 5929, column: 6, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5431, file: !209, line: 5929, column: 6)
!5610 = !DILocation(line: 5929, column: 6, scope: !5431)
!5611 = !DILocation(line: 5930, column: 7, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5613, file: !209, line: 5930, column: 7)
!5613 = distinct !DILexicalBlock(scope: !5609, file: !209, line: 5929, column: 12)
!5614 = !DILocation(line: 5930, column: 16, scope: !5612)
!5615 = !DILocation(line: 5930, column: 7, scope: !5613)
!5616 = !DILocation(line: 5931, column: 23, scope: !5612)
!5617 = !DILocation(line: 5931, column: 28, scope: !5612)
!5618 = !DILocation(line: 5931, column: 34, scope: !5612)
!5619 = !DILocation(line: 5931, column: 4, scope: !5612)
!5620 = !DILocation(line: 5933, column: 24, scope: !5613)
!5621 = !DILocation(line: 5933, column: 29, scope: !5613)
!5622 = !DILocation(line: 5933, column: 3, scope: !5613)
!5623 = !DILocation(line: 5934, column: 2, scope: !5613)
!5624 = !DILocation(line: 5935, column: 24, scope: !5431)
!5625 = !DILocation(line: 5935, column: 2, scope: !5431)
!5626 = !DILocation(line: 5936, column: 24, scope: !5431)
!5627 = !DILocation(line: 5936, column: 2, scope: !5431)
!5628 = !DILocation(line: 5938, column: 6, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5431, file: !209, line: 5938, column: 6)
!5630 = !DILocation(line: 5938, column: 15, scope: !5629)
!5631 = !DILocation(line: 5938, column: 6, scope: !5431)
!5632 = !DILocation(line: 5939, column: 25, scope: !5629)
!5633 = !DILocation(line: 5939, column: 3, scope: !5629)
!5634 = !DILocation(line: 5942, column: 26, scope: !5431)
!5635 = !DILocation(line: 5942, column: 31, scope: !5431)
!5636 = !DILocation(line: 5942, column: 41, scope: !5431)
!5637 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !5450)
!5638 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !5450)
!5639 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !5450)
!5640 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !5450)
!5641 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !5450)
!5642 = !DILocation(line: 5943, column: 2, scope: !5431)
!5643 = !DILocation(line: 5944, column: 1, scope: !5431)
!5644 = distinct !DISubprogram(name: "ni_E_init", scope: !209, file: !209, line: 5971, type: !4411, scopeLine: 5973, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!5645 = !DILocalVariable(name: "dev", arg: 1, scope: !5644, file: !209, line: 5971, type: !3350)
!5646 = !DILocation(line: 5971, column: 44, scope: !5644)
!5647 = !DILocalVariable(name: "interrupt_pin", arg: 2, scope: !5644, file: !209, line: 5972, type: !7)
!5648 = !DILocation(line: 5972, column: 21, scope: !5644)
!5649 = !DILocalVariable(name: "irq_polarity", arg: 3, scope: !5644, file: !209, line: 5972, type: !7)
!5650 = !DILocation(line: 5972, column: 49, scope: !5644)
!5651 = !DILocalVariable(name: "board", scope: !5644, file: !209, line: 5974, type: !4959)
!5652 = !DILocation(line: 5974, column: 32, scope: !5644)
!5653 = !DILocation(line: 5974, column: 40, scope: !5644)
!5654 = !DILocation(line: 5974, column: 45, scope: !5644)
!5655 = !DILocalVariable(name: "devpriv", scope: !5644, file: !209, line: 5975, type: !4731)
!5656 = !DILocation(line: 5975, column: 21, scope: !5644)
!5657 = !DILocation(line: 5975, column: 31, scope: !5644)
!5658 = !DILocation(line: 5975, column: 36, scope: !5644)
!5659 = !DILocalVariable(name: "s", scope: !5644, file: !209, line: 5976, type: !4119)
!5660 = !DILocation(line: 5976, column: 27, scope: !5644)
!5661 = !DILocalVariable(name: "ret", scope: !5644, file: !209, line: 5977, type: !429)
!5662 = !DILocation(line: 5977, column: 6, scope: !5644)
!5663 = !DILocalVariable(name: "i", scope: !5644, file: !209, line: 5978, type: !429)
!5664 = !DILocation(line: 5978, column: 6, scope: !5644)
!5665 = !DILocalVariable(name: "dev_family", scope: !5644, file: !209, line: 5979, type: !873)
!5666 = !DILocation(line: 5979, column: 14, scope: !5644)
!5667 = !DILocation(line: 5979, column: 27, scope: !5644)
!5668 = !DILocation(line: 5979, column: 36, scope: !5644)
!5669 = !DILocation(line: 5983, column: 30, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5644, file: !209, line: 5983, column: 6)
!5671 = !DILocation(line: 5983, column: 42, scope: !5670)
!5672 = !DILocation(line: 5983, column: 49, scope: !5670)
!5673 = !DILocation(line: 5984, column: 9, scope: !5670)
!5674 = !DILocation(line: 5984, column: 16, scope: !5670)
!5675 = !DILocation(line: 5985, column: 10, scope: !5670)
!5676 = !DILocation(line: 5985, column: 19, scope: !5670)
!5677 = !DILocation(line: 5983, column: 6, scope: !5670)
!5678 = !DILocation(line: 5985, column: 35, scope: !5670)
!5679 = !DILocation(line: 5983, column: 6, scope: !5644)
!5680 = !DILocation(line: 5986, column: 3, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5670, file: !209, line: 5985, column: 40)
!5682 = !DILocation(line: 5988, column: 3, scope: !5681)
!5683 = !DILocation(line: 5990, column: 2, scope: !5681)
!5684 = !DILocation(line: 5995, column: 3, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5670, file: !209, line: 5990, column: 9)
!5686 = !DILocation(line: 5995, column: 8, scope: !5685)
!5687 = !DILocation(line: 5995, column: 27, scope: !5685)
!5688 = !DILocation(line: 5996, column: 3, scope: !5685)
!5689 = !DILocation(line: 5996, column: 8, scope: !5685)
!5690 = !DILocation(line: 5996, column: 25, scope: !5685)
!5691 = !DILocation(line: 5999, column: 6, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5644, file: !209, line: 5999, column: 6)
!5693 = !DILocation(line: 5999, column: 13, scope: !5692)
!5694 = !DILocation(line: 5999, column: 22, scope: !5692)
!5695 = !DILocation(line: 5999, column: 6, scope: !5644)
!5696 = !DILocation(line: 6000, column: 3, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5692, file: !209, line: 5999, column: 39)
!5698 = !DILocation(line: 6001, column: 3, scope: !5697)
!5699 = !DILocation(line: 6005, column: 2, scope: !5644)
!5700 = !DILocation(line: 6005, column: 11, scope: !5644)
!5701 = !DILocation(line: 6005, column: 26, scope: !5644)
!5702 = !DILocation(line: 6009, column: 7, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5644, file: !209, line: 6009, column: 6)
!5704 = !DILocation(line: 6009, column: 16, scope: !5703)
!5705 = !DILocation(line: 6009, column: 6, scope: !5644)
!5706 = !DILocation(line: 6011, column: 3, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5703, file: !209, line: 6009, column: 25)
!5708 = !DILocation(line: 6011, column: 12, scope: !5707)
!5709 = !DILocation(line: 6011, column: 27, scope: !5707)
!5710 = !DILocation(line: 6013, column: 2, scope: !5707)
!5711 = !DILocation(line: 6014, column: 16, scope: !5644)
!5712 = !DILocation(line: 6014, column: 21, scope: !5644)
!5713 = !DILocation(line: 6014, column: 30, scope: !5644)
!5714 = !DILocation(line: 6014, column: 2, scope: !5644)
!5715 = !DILocation(line: 6016, column: 32, scope: !5644)
!5716 = !DILocation(line: 6016, column: 8, scope: !5644)
!5717 = !DILocation(line: 6016, column: 6, scope: !5644)
!5718 = !DILocation(line: 6017, column: 6, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5644, file: !209, line: 6017, column: 6)
!5720 = !DILocation(line: 6017, column: 6, scope: !5644)
!5721 = !DILocation(line: 6018, column: 10, scope: !5719)
!5722 = !DILocation(line: 6018, column: 3, scope: !5719)
!5723 = !DILocation(line: 6021, column: 7, scope: !5644)
!5724 = !DILocation(line: 6021, column: 12, scope: !5644)
!5725 = !DILocation(line: 6021, column: 4, scope: !5644)
!5726 = !DILocation(line: 6022, column: 6, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5644, file: !209, line: 6022, column: 6)
!5728 = !DILocation(line: 6022, column: 13, scope: !5727)
!5729 = !DILocation(line: 6022, column: 6, scope: !5644)
!5730 = !DILocation(line: 6023, column: 3, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5727, file: !209, line: 6022, column: 23)
!5732 = !DILocation(line: 6023, column: 6, scope: !5731)
!5733 = !DILocation(line: 6023, column: 12, scope: !5731)
!5734 = !DILocation(line: 6024, column: 3, scope: !5731)
!5735 = !DILocation(line: 6024, column: 6, scope: !5731)
!5736 = !DILocation(line: 6024, column: 19, scope: !5731)
!5737 = !DILocation(line: 6025, column: 8, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5731, file: !209, line: 6025, column: 7)
!5739 = !DILocation(line: 6025, column: 17, scope: !5738)
!5740 = !DILocation(line: 6025, column: 7, scope: !5731)
!5741 = !DILocation(line: 6026, column: 4, scope: !5738)
!5742 = !DILocation(line: 6026, column: 7, scope: !5738)
!5743 = !DILocation(line: 6026, column: 20, scope: !5738)
!5744 = !DILocation(line: 6027, column: 7, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5731, file: !209, line: 6027, column: 7)
!5746 = !DILocation(line: 6027, column: 14, scope: !5745)
!5747 = !DILocation(line: 6027, column: 25, scope: !5745)
!5748 = !DILocation(line: 6027, column: 7, scope: !5731)
!5749 = !DILocation(line: 6028, column: 4, scope: !5745)
!5750 = !DILocation(line: 6028, column: 7, scope: !5745)
!5751 = !DILocation(line: 6028, column: 20, scope: !5745)
!5752 = !DILocation(line: 6029, column: 7, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5731, file: !209, line: 6029, column: 7)
!5754 = !DILocation(line: 6029, column: 16, scope: !5753)
!5755 = !DILocation(line: 6029, column: 7, scope: !5731)
!5756 = !DILocation(line: 6030, column: 4, scope: !5753)
!5757 = !DILocation(line: 6030, column: 7, scope: !5753)
!5758 = !DILocation(line: 6030, column: 20, scope: !5753)
!5759 = !DILocation(line: 6031, column: 15, scope: !5731)
!5760 = !DILocation(line: 6031, column: 22, scope: !5731)
!5761 = !DILocation(line: 6031, column: 3, scope: !5731)
!5762 = !DILocation(line: 6031, column: 6, scope: !5731)
!5763 = !DILocation(line: 6031, column: 13, scope: !5731)
!5764 = !DILocation(line: 6032, column: 16, scope: !5731)
!5765 = !DILocation(line: 6032, column: 23, scope: !5731)
!5766 = !DILocation(line: 6032, column: 3, scope: !5731)
!5767 = !DILocation(line: 6032, column: 6, scope: !5731)
!5768 = !DILocation(line: 6032, column: 14, scope: !5731)
!5769 = !DILocation(line: 6033, column: 34, scope: !5731)
!5770 = !DILocation(line: 6033, column: 41, scope: !5731)
!5771 = !DILocation(line: 6033, column: 20, scope: !5731)
!5772 = !DILocation(line: 6033, column: 3, scope: !5731)
!5773 = !DILocation(line: 6033, column: 6, scope: !5731)
!5774 = !DILocation(line: 6033, column: 18, scope: !5731)
!5775 = !DILocation(line: 6034, column: 3, scope: !5731)
!5776 = !DILocation(line: 6034, column: 6, scope: !5731)
!5777 = !DILocation(line: 6034, column: 16, scope: !5731)
!5778 = !DILocation(line: 6035, column: 3, scope: !5731)
!5779 = !DILocation(line: 6035, column: 6, scope: !5731)
!5780 = !DILocation(line: 6035, column: 18, scope: !5731)
!5781 = !DILocation(line: 6036, column: 7, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5731, file: !209, line: 6036, column: 7)
!5783 = !DILocation(line: 6036, column: 12, scope: !5782)
!5784 = !DILocation(line: 6036, column: 7, scope: !5731)
!5785 = !DILocation(line: 6037, column: 23, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5782, file: !209, line: 6036, column: 17)
!5787 = !DILocation(line: 6037, column: 4, scope: !5786)
!5788 = !DILocation(line: 6037, column: 9, scope: !5786)
!5789 = !DILocation(line: 6037, column: 21, scope: !5786)
!5790 = !DILocation(line: 6038, column: 4, scope: !5786)
!5791 = !DILocation(line: 6038, column: 7, scope: !5786)
!5792 = !DILocation(line: 6038, column: 20, scope: !5786)
!5793 = !DILocation(line: 6039, column: 4, scope: !5786)
!5794 = !DILocation(line: 6039, column: 7, scope: !5786)
!5795 = !DILocation(line: 6039, column: 20, scope: !5786)
!5796 = !DILocation(line: 6040, column: 4, scope: !5786)
!5797 = !DILocation(line: 6040, column: 7, scope: !5786)
!5798 = !DILocation(line: 6040, column: 18, scope: !5786)
!5799 = !DILocation(line: 6041, column: 4, scope: !5786)
!5800 = !DILocation(line: 6041, column: 7, scope: !5786)
!5801 = !DILocation(line: 6041, column: 14, scope: !5786)
!5802 = !DILocation(line: 6042, column: 4, scope: !5786)
!5803 = !DILocation(line: 6042, column: 7, scope: !5786)
!5804 = !DILocation(line: 6042, column: 14, scope: !5786)
!5805 = !DILocation(line: 6043, column: 4, scope: !5786)
!5806 = !DILocation(line: 6043, column: 7, scope: !5786)
!5807 = !DILocation(line: 6043, column: 13, scope: !5786)
!5808 = !DILocation(line: 6044, column: 4, scope: !5786)
!5809 = !DILocation(line: 6044, column: 7, scope: !5786)
!5810 = !DILocation(line: 6044, column: 13, scope: !5786)
!5811 = !DILocation(line: 6046, column: 8, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5786, file: !209, line: 6046, column: 8)
!5813 = !DILocation(line: 6046, column: 17, scope: !5812)
!5814 = !DILocation(line: 6046, column: 8, scope: !5786)
!5815 = !DILocation(line: 6047, column: 5, scope: !5812)
!5816 = !DILocation(line: 6047, column: 8, scope: !5812)
!5817 = !DILocation(line: 6047, column: 22, scope: !5812)
!5818 = !DILocation(line: 6048, column: 3, scope: !5786)
!5819 = !DILocation(line: 6051, column: 15, scope: !5731)
!5820 = !DILocation(line: 6051, column: 20, scope: !5731)
!5821 = !DILocation(line: 6051, column: 3, scope: !5731)
!5822 = !DILocation(line: 6052, column: 2, scope: !5731)
!5823 = !DILocation(line: 6053, column: 3, scope: !5824)
!5824 = distinct !DILexicalBlock(scope: !5727, file: !209, line: 6052, column: 9)
!5825 = !DILocation(line: 6053, column: 6, scope: !5824)
!5826 = !DILocation(line: 6053, column: 12, scope: !5824)
!5827 = !DILocation(line: 6057, column: 7, scope: !5644)
!5828 = !DILocation(line: 6057, column: 12, scope: !5644)
!5829 = !DILocation(line: 6057, column: 4, scope: !5644)
!5830 = !DILocation(line: 6058, column: 6, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5644, file: !209, line: 6058, column: 6)
!5832 = !DILocation(line: 6058, column: 13, scope: !5831)
!5833 = !DILocation(line: 6058, column: 6, scope: !5644)
!5834 = !DILocation(line: 6059, column: 3, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5831, file: !209, line: 6058, column: 23)
!5836 = !DILocation(line: 6059, column: 6, scope: !5835)
!5837 = !DILocation(line: 6059, column: 12, scope: !5835)
!5838 = !DILocation(line: 6060, column: 3, scope: !5835)
!5839 = !DILocation(line: 6060, column: 6, scope: !5835)
!5840 = !DILocation(line: 6060, column: 19, scope: !5835)
!5841 = !DILocation(line: 6061, column: 7, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5835, file: !209, line: 6061, column: 7)
!5843 = !DILocation(line: 6061, column: 16, scope: !5842)
!5844 = !DILocation(line: 6061, column: 7, scope: !5835)
!5845 = !DILocation(line: 6062, column: 4, scope: !5842)
!5846 = !DILocation(line: 6062, column: 7, scope: !5842)
!5847 = !DILocation(line: 6062, column: 20, scope: !5842)
!5848 = !DILocation(line: 6063, column: 15, scope: !5835)
!5849 = !DILocation(line: 6063, column: 22, scope: !5835)
!5850 = !DILocation(line: 6063, column: 3, scope: !5835)
!5851 = !DILocation(line: 6063, column: 6, scope: !5835)
!5852 = !DILocation(line: 6063, column: 13, scope: !5835)
!5853 = !DILocation(line: 6064, column: 16, scope: !5835)
!5854 = !DILocation(line: 6064, column: 23, scope: !5835)
!5855 = !DILocation(line: 6064, column: 3, scope: !5835)
!5856 = !DILocation(line: 6064, column: 6, scope: !5835)
!5857 = !DILocation(line: 6064, column: 14, scope: !5835)
!5858 = !DILocation(line: 6065, column: 20, scope: !5835)
!5859 = !DILocation(line: 6065, column: 27, scope: !5835)
!5860 = !DILocation(line: 6065, column: 3, scope: !5835)
!5861 = !DILocation(line: 6065, column: 6, scope: !5835)
!5862 = !DILocation(line: 6065, column: 18, scope: !5835)
!5863 = !DILocation(line: 6066, column: 3, scope: !5835)
!5864 = !DILocation(line: 6066, column: 6, scope: !5835)
!5865 = !DILocation(line: 6066, column: 18, scope: !5835)
!5866 = !DILocation(line: 6067, column: 3, scope: !5835)
!5867 = !DILocation(line: 6067, column: 6, scope: !5835)
!5868 = !DILocation(line: 6067, column: 17, scope: !5835)
!5869 = !DILocation(line: 6069, column: 38, scope: !5835)
!5870 = !DILocation(line: 6069, column: 9, scope: !5835)
!5871 = !DILocation(line: 6069, column: 7, scope: !5835)
!5872 = !DILocation(line: 6070, column: 7, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5835, file: !209, line: 6070, column: 7)
!5874 = !DILocation(line: 6070, column: 7, scope: !5835)
!5875 = !DILocation(line: 6071, column: 11, scope: !5873)
!5876 = !DILocation(line: 6071, column: 4, scope: !5873)
!5877 = !DILocation(line: 6077, column: 7, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5835, file: !209, line: 6077, column: 7)
!5879 = !DILocation(line: 6077, column: 12, scope: !5878)
!5880 = !DILocation(line: 6077, column: 16, scope: !5878)
!5881 = !DILocation(line: 6077, column: 20, scope: !5878)
!5882 = !DILocation(line: 6077, column: 27, scope: !5878)
!5883 = !DILocation(line: 6077, column: 41, scope: !5878)
!5884 = !DILocation(line: 6077, column: 44, scope: !5878)
!5885 = !DILocation(line: 6077, column: 53, scope: !5878)
!5886 = !DILocation(line: 6077, column: 7, scope: !5835)
!5887 = !DILocation(line: 6078, column: 24, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5878, file: !209, line: 6077, column: 60)
!5889 = !DILocation(line: 6078, column: 4, scope: !5888)
!5890 = !DILocation(line: 6078, column: 9, scope: !5888)
!5891 = !DILocation(line: 6078, column: 22, scope: !5888)
!5892 = !DILocation(line: 6079, column: 4, scope: !5888)
!5893 = !DILocation(line: 6079, column: 7, scope: !5888)
!5894 = !DILocation(line: 6079, column: 20, scope: !5888)
!5895 = !DILocation(line: 6080, column: 22, scope: !5888)
!5896 = !DILocation(line: 6080, column: 25, scope: !5888)
!5897 = !DILocation(line: 6080, column: 4, scope: !5888)
!5898 = !DILocation(line: 6080, column: 7, scope: !5888)
!5899 = !DILocation(line: 6080, column: 20, scope: !5888)
!5900 = !DILocation(line: 6081, column: 4, scope: !5888)
!5901 = !DILocation(line: 6081, column: 7, scope: !5888)
!5902 = !DILocation(line: 6081, column: 18, scope: !5888)
!5903 = !DILocation(line: 6082, column: 4, scope: !5888)
!5904 = !DILocation(line: 6082, column: 7, scope: !5888)
!5905 = !DILocation(line: 6082, column: 14, scope: !5888)
!5906 = !DILocation(line: 6083, column: 4, scope: !5888)
!5907 = !DILocation(line: 6083, column: 7, scope: !5888)
!5908 = !DILocation(line: 6083, column: 14, scope: !5888)
!5909 = !DILocation(line: 6084, column: 9, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5888, file: !209, line: 6084, column: 8)
!5911 = !DILocation(line: 6084, column: 18, scope: !5910)
!5912 = !DILocation(line: 6084, column: 8, scope: !5888)
!5913 = !DILocation(line: 6085, column: 5, scope: !5910)
!5914 = !DILocation(line: 6085, column: 8, scope: !5910)
!5915 = !DILocation(line: 6085, column: 14, scope: !5910)
!5916 = !DILocation(line: 6087, column: 8, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5888, file: !209, line: 6087, column: 8)
!5918 = !DILocation(line: 6087, column: 17, scope: !5917)
!5919 = !DILocation(line: 6087, column: 8, scope: !5888)
!5920 = !DILocation(line: 6088, column: 5, scope: !5917)
!5921 = !DILocation(line: 6088, column: 8, scope: !5917)
!5922 = !DILocation(line: 6088, column: 22, scope: !5917)
!5923 = !DILocation(line: 6089, column: 3, scope: !5888)
!5924 = !DILocation(line: 6091, column: 7, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5835, file: !209, line: 6091, column: 7)
!5926 = !DILocation(line: 6091, column: 16, scope: !5925)
!5927 = !DILocation(line: 6091, column: 7, scope: !5835)
!5928 = !DILocation(line: 6092, column: 17, scope: !5925)
!5929 = !DILocation(line: 6092, column: 22, scope: !5925)
!5930 = !DILocation(line: 6092, column: 4, scope: !5925)
!5931 = !DILocation(line: 6095, column: 15, scope: !5835)
!5932 = !DILocation(line: 6095, column: 20, scope: !5835)
!5933 = !DILocation(line: 6095, column: 3, scope: !5835)
!5934 = !DILocation(line: 6096, column: 2, scope: !5835)
!5935 = !DILocation(line: 6097, column: 3, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5831, file: !209, line: 6096, column: 9)
!5937 = !DILocation(line: 6097, column: 6, scope: !5936)
!5938 = !DILocation(line: 6097, column: 12, scope: !5936)
!5939 = !DILocation(line: 6101, column: 7, scope: !5644)
!5940 = !DILocation(line: 6101, column: 12, scope: !5644)
!5941 = !DILocation(line: 6101, column: 4, scope: !5644)
!5942 = !DILocation(line: 6102, column: 2, scope: !5644)
!5943 = !DILocation(line: 6102, column: 5, scope: !5644)
!5944 = !DILocation(line: 6102, column: 11, scope: !5644)
!5945 = !DILocation(line: 6103, column: 2, scope: !5644)
!5946 = !DILocation(line: 6103, column: 5, scope: !5644)
!5947 = !DILocation(line: 6103, column: 18, scope: !5644)
!5948 = !DILocation(line: 6104, column: 14, scope: !5644)
!5949 = !DILocation(line: 6104, column: 21, scope: !5644)
!5950 = !DILocation(line: 6104, column: 2, scope: !5644)
!5951 = !DILocation(line: 6104, column: 5, scope: !5644)
!5952 = !DILocation(line: 6104, column: 12, scope: !5644)
!5953 = !DILocation(line: 6105, column: 2, scope: !5644)
!5954 = !DILocation(line: 6105, column: 5, scope: !5644)
!5955 = !DILocation(line: 6105, column: 13, scope: !5644)
!5956 = !DILocation(line: 6106, column: 2, scope: !5644)
!5957 = !DILocation(line: 6106, column: 5, scope: !5644)
!5958 = !DILocation(line: 6106, column: 17, scope: !5644)
!5959 = !DILocation(line: 6107, column: 6, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5644, file: !209, line: 6107, column: 6)
!5961 = !DILocation(line: 6107, column: 15, scope: !5960)
!5962 = !DILocation(line: 6107, column: 6, scope: !5644)
!5963 = !DILocation(line: 6109, column: 3, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5960, file: !209, line: 6107, column: 28)
!5965 = !DILocation(line: 6109, column: 6, scope: !5964)
!5966 = !DILocation(line: 6109, column: 19, scope: !5964)
!5967 = !DILocation(line: 6110, column: 3, scope: !5964)
!5968 = !DILocation(line: 6110, column: 6, scope: !5964)
!5969 = !DILocation(line: 6110, column: 16, scope: !5964)
!5970 = !DILocation(line: 6111, column: 3, scope: !5964)
!5971 = !DILocation(line: 6111, column: 6, scope: !5964)
!5972 = !DILocation(line: 6111, column: 18, scope: !5964)
!5973 = !DILocation(line: 6112, column: 7, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5964, file: !209, line: 6112, column: 7)
!5975 = !DILocation(line: 6112, column: 12, scope: !5974)
!5976 = !DILocation(line: 6112, column: 7, scope: !5964)
!5977 = !DILocation(line: 6113, column: 4, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5974, file: !209, line: 6112, column: 17)
!5979 = !DILocation(line: 6113, column: 7, scope: !5978)
!5980 = !DILocation(line: 6113, column: 20, scope: !5978)
!5981 = !DILocation(line: 6114, column: 22, scope: !5978)
!5982 = !DILocation(line: 6114, column: 25, scope: !5978)
!5983 = !DILocation(line: 6114, column: 4, scope: !5978)
!5984 = !DILocation(line: 6114, column: 7, scope: !5978)
!5985 = !DILocation(line: 6114, column: 20, scope: !5978)
!5986 = !DILocation(line: 6115, column: 4, scope: !5978)
!5987 = !DILocation(line: 6115, column: 7, scope: !5978)
!5988 = !DILocation(line: 6115, column: 18, scope: !5978)
!5989 = !DILocation(line: 6116, column: 4, scope: !5978)
!5990 = !DILocation(line: 6116, column: 7, scope: !5978)
!5991 = !DILocation(line: 6116, column: 14, scope: !5978)
!5992 = !DILocation(line: 6117, column: 4, scope: !5978)
!5993 = !DILocation(line: 6117, column: 7, scope: !5978)
!5994 = !DILocation(line: 6117, column: 14, scope: !5978)
!5995 = !DILocation(line: 6120, column: 4, scope: !5978)
!5996 = !DILocation(line: 6120, column: 7, scope: !5978)
!5997 = !DILocation(line: 6120, column: 21, scope: !5978)
!5998 = !DILocation(line: 6121, column: 3, scope: !5978)
!5999 = !DILocation(line: 6124, column: 13, scope: !5964)
!6000 = !DILocation(line: 6124, column: 3, scope: !5964)
!6001 = !DILocation(line: 6127, column: 13, scope: !5964)
!6002 = !DILocation(line: 6127, column: 18, scope: !5964)
!6003 = !DILocation(line: 6127, column: 21, scope: !5964)
!6004 = !DILocation(line: 6127, column: 3, scope: !5964)
!6005 = !DILocation(line: 6129, column: 2, scope: !5964)
!6006 = !DILocation(line: 6130, column: 3, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !5960, file: !209, line: 6129, column: 9)
!6008 = !DILocation(line: 6130, column: 6, scope: !6007)
!6009 = !DILocation(line: 6130, column: 16, scope: !6007)
!6010 = !DILocation(line: 6131, column: 3, scope: !6007)
!6011 = !DILocation(line: 6131, column: 6, scope: !6007)
!6012 = !DILocation(line: 6131, column: 18, scope: !6007)
!6013 = !DILocation(line: 6134, column: 26, scope: !6007)
!6014 = !DILocation(line: 6134, column: 3, scope: !6007)
!6015 = !DILocation(line: 6134, column: 12, scope: !6007)
!6016 = !DILocation(line: 6134, column: 24, scope: !6007)
!6017 = !DILocation(line: 6135, column: 13, scope: !6007)
!6018 = !DILocation(line: 6135, column: 18, scope: !6007)
!6019 = !DILocation(line: 6135, column: 27, scope: !6007)
!6020 = !DILocation(line: 6135, column: 3, scope: !6007)
!6021 = !DILocation(line: 6139, column: 7, scope: !5644)
!6022 = !DILocation(line: 6139, column: 12, scope: !5644)
!6023 = !DILocation(line: 6139, column: 4, scope: !5644)
!6024 = !DILocation(line: 6140, column: 6, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !5644, file: !209, line: 6140, column: 6)
!6026 = !DILocation(line: 6140, column: 13, scope: !6025)
!6027 = !DILocation(line: 6140, column: 6, scope: !5644)
!6028 = !DILocation(line: 6141, column: 26, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6025, file: !209, line: 6140, column: 23)
!6030 = !DILocation(line: 6141, column: 31, scope: !6029)
!6031 = !DILocation(line: 6141, column: 9, scope: !6029)
!6032 = !DILocation(line: 6141, column: 7, scope: !6029)
!6033 = !DILocation(line: 6143, column: 7, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6029, file: !209, line: 6143, column: 7)
!6035 = !DILocation(line: 6143, column: 7, scope: !6029)
!6036 = !DILocation(line: 6144, column: 11, scope: !6034)
!6037 = !DILocation(line: 6144, column: 4, scope: !6034)
!6038 = !DILocation(line: 6145, column: 2, scope: !6029)
!6039 = !DILocation(line: 6146, column: 3, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !6025, file: !209, line: 6145, column: 9)
!6041 = !DILocation(line: 6146, column: 6, scope: !6040)
!6042 = !DILocation(line: 6146, column: 11, scope: !6040)
!6043 = !DILocation(line: 6150, column: 7, scope: !5644)
!6044 = !DILocation(line: 6150, column: 12, scope: !5644)
!6045 = !DILocation(line: 6150, column: 4, scope: !5644)
!6046 = !DILocation(line: 6151, column: 2, scope: !5644)
!6047 = !DILocation(line: 6151, column: 5, scope: !5644)
!6048 = !DILocation(line: 6151, column: 10, scope: !5644)
!6049 = !DILocation(line: 6154, column: 7, scope: !5644)
!6050 = !DILocation(line: 6154, column: 12, scope: !5644)
!6051 = !DILocation(line: 6154, column: 4, scope: !5644)
!6052 = !DILocation(line: 6155, column: 2, scope: !5644)
!6053 = !DILocation(line: 6155, column: 5, scope: !5644)
!6054 = !DILocation(line: 6155, column: 11, scope: !5644)
!6055 = !DILocation(line: 6156, column: 2, scope: !5644)
!6056 = !DILocation(line: 6156, column: 5, scope: !5644)
!6057 = !DILocation(line: 6156, column: 18, scope: !5644)
!6058 = !DILocation(line: 6157, column: 2, scope: !5644)
!6059 = !DILocation(line: 6157, column: 5, scope: !5644)
!6060 = !DILocation(line: 6157, column: 12, scope: !5644)
!6061 = !DILocation(line: 6158, column: 2, scope: !5644)
!6062 = !DILocation(line: 6158, column: 5, scope: !5644)
!6063 = !DILocation(line: 6158, column: 13, scope: !5644)
!6064 = !DILocation(line: 6159, column: 6, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !5644, file: !209, line: 6159, column: 6)
!6066 = !DILocation(line: 6159, column: 15, scope: !6065)
!6067 = !DILocation(line: 6159, column: 6, scope: !5644)
!6068 = !DILocation(line: 6161, column: 3, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6065, file: !209, line: 6159, column: 28)
!6070 = !DILocation(line: 6161, column: 6, scope: !6069)
!6071 = !DILocation(line: 6161, column: 18, scope: !6069)
!6072 = !DILocation(line: 6163, column: 13, scope: !6069)
!6073 = !DILocation(line: 6163, column: 3, scope: !6069)
!6074 = !DILocation(line: 6164, column: 2, scope: !6069)
!6075 = !DILocation(line: 6164, column: 13, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6065, file: !209, line: 6164, column: 13)
!6077 = !DILocation(line: 6164, column: 22, scope: !6076)
!6078 = !DILocation(line: 6164, column: 13, scope: !6065)
!6079 = !DILocation(line: 6166, column: 3, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6076, file: !209, line: 6164, column: 31)
!6081 = !DILocation(line: 6166, column: 6, scope: !6080)
!6082 = !DILocation(line: 6166, column: 18, scope: !6080)
!6083 = !DILocation(line: 6167, column: 2, scope: !6080)
!6084 = !DILocation(line: 6168, column: 3, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6076, file: !209, line: 6167, column: 9)
!6086 = !DILocation(line: 6168, column: 6, scope: !6085)
!6087 = !DILocation(line: 6168, column: 19, scope: !6085)
!6088 = !DILocation(line: 6169, column: 3, scope: !6085)
!6089 = !DILocation(line: 6169, column: 6, scope: !6085)
!6090 = !DILocation(line: 6169, column: 16, scope: !6085)
!6091 = !DILocation(line: 6170, column: 3, scope: !6085)
!6092 = !DILocation(line: 6170, column: 6, scope: !6085)
!6093 = !DILocation(line: 6170, column: 17, scope: !6085)
!6094 = !DILocation(line: 6173, column: 16, scope: !6085)
!6095 = !DILocation(line: 6173, column: 21, scope: !6085)
!6096 = !DILocation(line: 6173, column: 3, scope: !6085)
!6097 = !DILocation(line: 6177, column: 7, scope: !5644)
!6098 = !DILocation(line: 6177, column: 12, scope: !5644)
!6099 = !DILocation(line: 6177, column: 4, scope: !5644)
!6100 = !DILocation(line: 6178, column: 2, scope: !5644)
!6101 = !DILocation(line: 6178, column: 5, scope: !5644)
!6102 = !DILocation(line: 6178, column: 11, scope: !5644)
!6103 = !DILocation(line: 6179, column: 2, scope: !5644)
!6104 = !DILocation(line: 6179, column: 5, scope: !5644)
!6105 = !DILocation(line: 6179, column: 18, scope: !5644)
!6106 = !DILocation(line: 6180, column: 2, scope: !5644)
!6107 = !DILocation(line: 6180, column: 5, scope: !5644)
!6108 = !DILocation(line: 6180, column: 13, scope: !5644)
!6109 = !DILocation(line: 6181, column: 6, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !5644, file: !209, line: 6181, column: 6)
!6111 = !DILocation(line: 6181, column: 15, scope: !6110)
!6112 = !DILocation(line: 6181, column: 6, scope: !5644)
!6113 = !DILocation(line: 6182, column: 3, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6110, file: !209, line: 6181, column: 28)
!6115 = !DILocation(line: 6182, column: 6, scope: !6114)
!6116 = !DILocation(line: 6182, column: 13, scope: !6114)
!6117 = !DILocation(line: 6183, column: 3, scope: !6114)
!6118 = !DILocation(line: 6183, column: 6, scope: !6114)
!6119 = !DILocation(line: 6183, column: 16, scope: !6114)
!6120 = !DILocation(line: 6184, column: 2, scope: !6114)
!6121 = !DILocation(line: 6185, column: 3, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6110, file: !209, line: 6184, column: 9)
!6123 = !DILocation(line: 6185, column: 6, scope: !6122)
!6124 = !DILocation(line: 6185, column: 13, scope: !6122)
!6125 = !DILocation(line: 6186, column: 3, scope: !6122)
!6126 = !DILocation(line: 6186, column: 6, scope: !6122)
!6127 = !DILocation(line: 6186, column: 16, scope: !6122)
!6128 = !DILocation(line: 6190, column: 7, scope: !5644)
!6129 = !DILocation(line: 6190, column: 12, scope: !5644)
!6130 = !DILocation(line: 6190, column: 4, scope: !5644)
!6131 = !DILocation(line: 6191, column: 2, scope: !5644)
!6132 = !DILocation(line: 6191, column: 5, scope: !5644)
!6133 = !DILocation(line: 6191, column: 11, scope: !5644)
!6134 = !DILocation(line: 6192, column: 2, scope: !5644)
!6135 = !DILocation(line: 6192, column: 5, scope: !5644)
!6136 = !DILocation(line: 6192, column: 13, scope: !5644)
!6137 = !DILocation(line: 6193, column: 6, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !5644, file: !209, line: 6193, column: 6)
!6139 = !DILocation(line: 6193, column: 15, scope: !6138)
!6140 = !DILocation(line: 6193, column: 6, scope: !5644)
!6141 = !DILocation(line: 6194, column: 3, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6138, file: !209, line: 6193, column: 28)
!6143 = !DILocation(line: 6194, column: 6, scope: !6142)
!6144 = !DILocation(line: 6194, column: 13, scope: !6142)
!6145 = !DILocation(line: 6195, column: 3, scope: !6142)
!6146 = !DILocation(line: 6195, column: 6, scope: !6142)
!6147 = !DILocation(line: 6195, column: 16, scope: !6142)
!6148 = !DILocation(line: 6196, column: 3, scope: !6142)
!6149 = !DILocation(line: 6196, column: 6, scope: !6142)
!6150 = !DILocation(line: 6196, column: 19, scope: !6142)
!6151 = !DILocation(line: 6198, column: 13, scope: !6142)
!6152 = !DILocation(line: 6198, column: 18, scope: !6142)
!6153 = !DILocation(line: 6198, column: 21, scope: !6142)
!6154 = !DILocation(line: 6198, column: 3, scope: !6142)
!6155 = !DILocation(line: 6199, column: 10, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6142, file: !209, line: 6199, column: 3)
!6157 = !DILocation(line: 6199, column: 8, scope: !6156)
!6158 = !DILocation(line: 6199, column: 15, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6156, file: !209, line: 6199, column: 3)
!6160 = !DILocation(line: 6199, column: 17, scope: !6159)
!6161 = !DILocation(line: 6199, column: 3, scope: !6156)
!6162 = !DILocation(line: 6200, column: 14, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6159, file: !209, line: 6199, column: 52)
!6164 = !DILocation(line: 6200, column: 19, scope: !6163)
!6165 = !DILocation(line: 6200, column: 28, scope: !6163)
!6166 = !DILocation(line: 6200, column: 50, scope: !6163)
!6167 = !DILocation(line: 6201, column: 7, scope: !6163)
!6168 = !DILocation(line: 6200, column: 4, scope: !6163)
!6169 = !DILocation(line: 6202, column: 3, scope: !6163)
!6170 = !DILocation(line: 6199, column: 47, scope: !6159)
!6171 = !DILocation(line: 6199, column: 3, scope: !6159)
!6172 = distinct !{!6172, !6161, !6173}
!6173 = !DILocation(line: 6202, column: 3, scope: !6156)
!6174 = !DILocation(line: 6203, column: 2, scope: !6142)
!6175 = !DILocation(line: 6204, column: 3, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6138, file: !209, line: 6203, column: 9)
!6177 = !DILocation(line: 6204, column: 6, scope: !6176)
!6178 = !DILocation(line: 6204, column: 13, scope: !6176)
!6179 = !DILocation(line: 6205, column: 3, scope: !6176)
!6180 = !DILocation(line: 6205, column: 6, scope: !6176)
!6181 = !DILocation(line: 6205, column: 19, scope: !6176)
!6182 = !DILocation(line: 6207, column: 2, scope: !5644)
!6183 = !DILocation(line: 6207, column: 5, scope: !5644)
!6184 = !DILocation(line: 6207, column: 17, scope: !5644)
!6185 = !DILocation(line: 6209, column: 14, scope: !5644)
!6186 = !DILocation(line: 6209, column: 2, scope: !5644)
!6187 = !DILocation(line: 6212, column: 7, scope: !5644)
!6188 = !DILocation(line: 6212, column: 12, scope: !5644)
!6189 = !DILocation(line: 6212, column: 4, scope: !5644)
!6190 = !DILocation(line: 6213, column: 6, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !5644, file: !209, line: 6213, column: 6)
!6192 = !DILocation(line: 6213, column: 15, scope: !6191)
!6193 = !DILocation(line: 6213, column: 6, scope: !5644)
!6194 = !DILocation(line: 6214, column: 3, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6191, file: !209, line: 6213, column: 24)
!6196 = !DILocation(line: 6214, column: 6, scope: !6195)
!6197 = !DILocation(line: 6214, column: 11, scope: !6195)
!6198 = !DILocation(line: 6215, column: 3, scope: !6195)
!6199 = !DILocation(line: 6215, column: 6, scope: !6195)
!6200 = !DILocation(line: 6215, column: 19, scope: !6195)
!6201 = !DILocation(line: 6217, column: 15, scope: !6195)
!6202 = !DILocation(line: 6217, column: 22, scope: !6195)
!6203 = !DILocation(line: 6217, column: 3, scope: !6195)
!6204 = !DILocation(line: 6217, column: 6, scope: !6195)
!6205 = !DILocation(line: 6217, column: 13, scope: !6195)
!6206 = !DILocation(line: 6218, column: 3, scope: !6195)
!6207 = !DILocation(line: 6218, column: 6, scope: !6195)
!6208 = !DILocation(line: 6218, column: 14, scope: !6195)
!6209 = !DILocation(line: 6219, column: 3, scope: !6195)
!6210 = !DILocation(line: 6219, column: 6, scope: !6195)
!6211 = !DILocation(line: 6219, column: 18, scope: !6195)
!6212 = !DILocation(line: 6220, column: 3, scope: !6195)
!6213 = !DILocation(line: 6220, column: 6, scope: !6195)
!6214 = !DILocation(line: 6220, column: 16, scope: !6195)
!6215 = !DILocation(line: 6221, column: 3, scope: !6195)
!6216 = !DILocation(line: 6221, column: 6, scope: !6195)
!6217 = !DILocation(line: 6221, column: 18, scope: !6195)
!6218 = !DILocation(line: 6222, column: 15, scope: !6195)
!6219 = !DILocation(line: 6222, column: 3, scope: !6195)
!6220 = !DILocation(line: 6223, column: 2, scope: !6195)
!6221 = !DILocation(line: 6224, column: 3, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6191, file: !209, line: 6223, column: 9)
!6223 = !DILocation(line: 6224, column: 6, scope: !6222)
!6224 = !DILocation(line: 6224, column: 11, scope: !6222)
!6225 = !DILocation(line: 6228, column: 7, scope: !5644)
!6226 = !DILocation(line: 6228, column: 12, scope: !5644)
!6227 = !DILocation(line: 6228, column: 4, scope: !5644)
!6228 = !DILocation(line: 6229, column: 2, scope: !5644)
!6229 = !DILocation(line: 6229, column: 5, scope: !5644)
!6230 = !DILocation(line: 6229, column: 10, scope: !5644)
!6231 = !DILocation(line: 6230, column: 2, scope: !5644)
!6232 = !DILocation(line: 6230, column: 5, scope: !5644)
!6233 = !DILocation(line: 6230, column: 18, scope: !5644)
!6234 = !DILocation(line: 6231, column: 2, scope: !5644)
!6235 = !DILocation(line: 6231, column: 5, scope: !5644)
!6236 = !DILocation(line: 6231, column: 12, scope: !5644)
!6237 = !DILocation(line: 6232, column: 2, scope: !5644)
!6238 = !DILocation(line: 6232, column: 5, scope: !5644)
!6239 = !DILocation(line: 6232, column: 13, scope: !5644)
!6240 = !DILocation(line: 6233, column: 2, scope: !5644)
!6241 = !DILocation(line: 6233, column: 5, scope: !5644)
!6242 = !DILocation(line: 6233, column: 17, scope: !5644)
!6243 = !DILocation(line: 6234, column: 2, scope: !5644)
!6244 = !DILocation(line: 6234, column: 11, scope: !5644)
!6245 = !DILocation(line: 6234, column: 30, scope: !5644)
!6246 = !DILocation(line: 6235, column: 2, scope: !5644)
!6247 = !DILocation(line: 6235, column: 11, scope: !5644)
!6248 = !DILocation(line: 6235, column: 26, scope: !5644)
!6249 = !DILocation(line: 6238, column: 7, scope: !5644)
!6250 = !DILocation(line: 6238, column: 12, scope: !5644)
!6251 = !DILocation(line: 6238, column: 4, scope: !5644)
!6252 = !DILocation(line: 6239, column: 2, scope: !5644)
!6253 = !DILocation(line: 6239, column: 5, scope: !5644)
!6254 = !DILocation(line: 6239, column: 10, scope: !5644)
!6255 = !DILocation(line: 6240, column: 2, scope: !5644)
!6256 = !DILocation(line: 6240, column: 5, scope: !5644)
!6257 = !DILocation(line: 6240, column: 18, scope: !5644)
!6258 = !DILocation(line: 6241, column: 2, scope: !5644)
!6259 = !DILocation(line: 6241, column: 5, scope: !5644)
!6260 = !DILocation(line: 6241, column: 12, scope: !5644)
!6261 = !DILocation(line: 6242, column: 2, scope: !5644)
!6262 = !DILocation(line: 6242, column: 5, scope: !5644)
!6263 = !DILocation(line: 6242, column: 13, scope: !5644)
!6264 = !DILocation(line: 6243, column: 2, scope: !5644)
!6265 = !DILocation(line: 6243, column: 5, scope: !5644)
!6266 = !DILocation(line: 6243, column: 15, scope: !5644)
!6267 = !DILocation(line: 6244, column: 2, scope: !5644)
!6268 = !DILocation(line: 6244, column: 5, scope: !5644)
!6269 = !DILocation(line: 6244, column: 17, scope: !5644)
!6270 = !DILocation(line: 6245, column: 15, scope: !5644)
!6271 = !DILocation(line: 6245, column: 2, scope: !5644)
!6272 = !DILocation(line: 6248, column: 50, scope: !5644)
!6273 = !DILocation(line: 6251, column: 7, scope: !5644)
!6274 = !DILocation(line: 6251, column: 16, scope: !5644)
!6275 = !DILocation(line: 6251, column: 6, scope: !5644)
!6276 = !DILocation(line: 6256, column: 7, scope: !5644)
!6277 = !DILocation(line: 6256, column: 16, scope: !5644)
!6278 = !DILocation(line: 6248, column: 25, scope: !5644)
!6279 = !DILocation(line: 6248, column: 2, scope: !5644)
!6280 = !DILocation(line: 6248, column: 11, scope: !5644)
!6281 = !DILocation(line: 6248, column: 23, scope: !5644)
!6282 = !DILocation(line: 6257, column: 7, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !5644, file: !209, line: 6257, column: 6)
!6284 = !DILocation(line: 6257, column: 16, scope: !6283)
!6285 = !DILocation(line: 6257, column: 6, scope: !5644)
!6286 = !DILocation(line: 6258, column: 3, scope: !6283)
!6287 = !DILocation(line: 6261, column: 9, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !5644, file: !209, line: 6261, column: 2)
!6289 = !DILocation(line: 6261, column: 7, scope: !6288)
!6290 = !DILocation(line: 6261, column: 14, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6288, file: !209, line: 6261, column: 2)
!6292 = !DILocation(line: 6261, column: 16, scope: !6291)
!6293 = !DILocation(line: 6261, column: 2, scope: !6288)
!6294 = !DILocalVariable(name: "gpct", scope: !6295, file: !209, line: 6262, type: !4767)
!6295 = distinct !DILexicalBlock(scope: !6291, file: !209, line: 6261, column: 33)
!6296 = !DILocation(line: 6262, column: 19, scope: !6295)
!6297 = !DILocation(line: 6262, column: 27, scope: !6295)
!6298 = !DILocation(line: 6262, column: 36, scope: !6295)
!6299 = !DILocation(line: 6262, column: 49, scope: !6295)
!6300 = !DILocation(line: 6262, column: 58, scope: !6295)
!6301 = !DILocation(line: 6265, column: 23, scope: !6295)
!6302 = !DILocation(line: 6265, column: 3, scope: !6295)
!6303 = !DILocation(line: 6267, column: 8, scope: !6295)
!6304 = !DILocation(line: 6267, column: 13, scope: !6295)
!6305 = !DILocation(line: 6267, column: 24, scope: !6295)
!6306 = !DILocation(line: 6267, column: 5, scope: !6295)
!6307 = !DILocation(line: 6268, column: 3, scope: !6295)
!6308 = !DILocation(line: 6268, column: 6, scope: !6295)
!6309 = !DILocation(line: 6268, column: 12, scope: !6295)
!6310 = !DILocation(line: 6269, column: 3, scope: !6295)
!6311 = !DILocation(line: 6269, column: 6, scope: !6295)
!6312 = !DILocation(line: 6269, column: 19, scope: !6295)
!6313 = !DILocation(line: 6270, column: 3, scope: !6295)
!6314 = !DILocation(line: 6270, column: 6, scope: !6295)
!6315 = !DILocation(line: 6270, column: 13, scope: !6295)
!6316 = !DILocation(line: 6271, column: 17, scope: !6295)
!6317 = !DILocation(line: 6271, column: 26, scope: !6295)
!6318 = !DILocation(line: 6271, column: 16, scope: !6295)
!6319 = !DILocation(line: 6271, column: 3, scope: !6295)
!6320 = !DILocation(line: 6271, column: 6, scope: !6295)
!6321 = !DILocation(line: 6271, column: 14, scope: !6295)
!6322 = !DILocation(line: 6273, column: 3, scope: !6295)
!6323 = !DILocation(line: 6273, column: 6, scope: !6295)
!6324 = !DILocation(line: 6273, column: 16, scope: !6295)
!6325 = !DILocation(line: 6274, column: 3, scope: !6295)
!6326 = !DILocation(line: 6274, column: 6, scope: !6295)
!6327 = !DILocation(line: 6274, column: 17, scope: !6295)
!6328 = !DILocation(line: 6275, column: 3, scope: !6295)
!6329 = !DILocation(line: 6275, column: 6, scope: !6295)
!6330 = !DILocation(line: 6275, column: 18, scope: !6295)
!6331 = !DILocation(line: 6277, column: 7, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6295, file: !209, line: 6277, column: 7)
!6333 = !DILocation(line: 6277, column: 12, scope: !6332)
!6334 = !DILocation(line: 6277, column: 16, scope: !6332)
!6335 = !DILocation(line: 6277, column: 19, scope: !6332)
!6336 = !DILocation(line: 6277, column: 28, scope: !6332)
!6337 = !DILocation(line: 6277, column: 7, scope: !6295)
!6338 = !DILocation(line: 6278, column: 4, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6332, file: !209, line: 6277, column: 34)
!6340 = !DILocation(line: 6278, column: 7, scope: !6339)
!6341 = !DILocation(line: 6278, column: 20, scope: !6339)
!6342 = !DILocation(line: 6279, column: 4, scope: !6339)
!6343 = !DILocation(line: 6279, column: 7, scope: !6339)
!6344 = !DILocation(line: 6279, column: 20, scope: !6339)
!6345 = !DILocation(line: 6280, column: 4, scope: !6339)
!6346 = !DILocation(line: 6280, column: 7, scope: !6339)
!6347 = !DILocation(line: 6280, column: 18, scope: !6339)
!6348 = !DILocation(line: 6281, column: 4, scope: !6339)
!6349 = !DILocation(line: 6281, column: 7, scope: !6339)
!6350 = !DILocation(line: 6281, column: 14, scope: !6339)
!6351 = !DILocation(line: 6282, column: 4, scope: !6339)
!6352 = !DILocation(line: 6282, column: 7, scope: !6339)
!6353 = !DILocation(line: 6282, column: 14, scope: !6339)
!6354 = !DILocation(line: 6284, column: 4, scope: !6339)
!6355 = !DILocation(line: 6284, column: 7, scope: !6339)
!6356 = !DILocation(line: 6284, column: 21, scope: !6339)
!6357 = !DILocation(line: 6285, column: 3, scope: !6339)
!6358 = !DILocation(line: 6287, column: 16, scope: !6295)
!6359 = !DILocation(line: 6287, column: 3, scope: !6295)
!6360 = !DILocation(line: 6287, column: 6, scope: !6295)
!6361 = !DILocation(line: 6287, column: 14, scope: !6295)
!6362 = !DILocation(line: 6288, column: 2, scope: !6295)
!6363 = !DILocation(line: 6261, column: 28, scope: !6291)
!6364 = !DILocation(line: 6261, column: 2, scope: !6291)
!6365 = distinct !{!6365, !6293, !6366}
!6366 = !DILocation(line: 6288, column: 2, scope: !6288)
!6367 = !DILocation(line: 6291, column: 28, scope: !5644)
!6368 = !DILocation(line: 6291, column: 2, scope: !5644)
!6369 = !DILocation(line: 6292, column: 28, scope: !5644)
!6370 = !DILocation(line: 6292, column: 2, scope: !5644)
!6371 = !DILocation(line: 6295, column: 7, scope: !5644)
!6372 = !DILocation(line: 6295, column: 12, scope: !5644)
!6373 = !DILocation(line: 6295, column: 4, scope: !5644)
!6374 = !DILocation(line: 6296, column: 2, scope: !5644)
!6375 = !DILocation(line: 6296, column: 5, scope: !5644)
!6376 = !DILocation(line: 6296, column: 11, scope: !5644)
!6377 = !DILocation(line: 6297, column: 2, scope: !5644)
!6378 = !DILocation(line: 6297, column: 5, scope: !5644)
!6379 = !DILocation(line: 6297, column: 18, scope: !5644)
!6380 = !DILocation(line: 6298, column: 2, scope: !5644)
!6381 = !DILocation(line: 6298, column: 5, scope: !5644)
!6382 = !DILocation(line: 6298, column: 12, scope: !5644)
!6383 = !DILocation(line: 6299, column: 2, scope: !5644)
!6384 = !DILocation(line: 6299, column: 5, scope: !5644)
!6385 = !DILocation(line: 6299, column: 13, scope: !5644)
!6386 = !DILocation(line: 6300, column: 2, scope: !5644)
!6387 = !DILocation(line: 6300, column: 5, scope: !5644)
!6388 = !DILocation(line: 6300, column: 15, scope: !5644)
!6389 = !DILocation(line: 6301, column: 2, scope: !5644)
!6390 = !DILocation(line: 6301, column: 5, scope: !5644)
!6391 = !DILocation(line: 6301, column: 16, scope: !5644)
!6392 = !DILocation(line: 6302, column: 2, scope: !5644)
!6393 = !DILocation(line: 6302, column: 5, scope: !5644)
!6394 = !DILocation(line: 6302, column: 17, scope: !5644)
!6395 = !DILocation(line: 6304, column: 6, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !5644, file: !209, line: 6304, column: 6)
!6397 = !DILocation(line: 6304, column: 11, scope: !6396)
!6398 = !DILocation(line: 6304, column: 6, scope: !5644)
!6399 = !DILocation(line: 6305, column: 17, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6396, file: !209, line: 6304, column: 16)
!6401 = !DILocation(line: 6306, column: 11, scope: !6400)
!6402 = !DILocation(line: 6307, column: 40, scope: !6400)
!6403 = !DILocation(line: 6308, column: 34, scope: !6400)
!6404 = !DILocation(line: 6310, column: 10, scope: !6400)
!6405 = !DILocation(line: 6309, column: 34, scope: !6400)
!6406 = !DILocation(line: 6311, column: 10, scope: !6400)
!6407 = !DILocation(line: 6310, column: 49, scope: !6400)
!6408 = !DILocation(line: 6306, column: 10, scope: !6400)
!6409 = !DILocation(line: 6305, column: 3, scope: !6400)
!6410 = !DILocation(line: 6313, column: 2, scope: !6400)
!6411 = !DILocation(line: 6316, column: 12, scope: !5644)
!6412 = !DILocation(line: 6316, column: 17, scope: !5644)
!6413 = !DILocation(line: 6316, column: 26, scope: !5644)
!6414 = !DILocation(line: 6316, column: 2, scope: !5644)
!6415 = !DILocation(line: 6317, column: 12, scope: !5644)
!6416 = !DILocation(line: 6317, column: 17, scope: !5644)
!6417 = !DILocation(line: 6317, column: 26, scope: !5644)
!6418 = !DILocation(line: 6317, column: 2, scope: !5644)
!6419 = !DILocation(line: 6319, column: 6, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !5644, file: !209, line: 6319, column: 6)
!6421 = !DILocation(line: 6319, column: 15, scope: !6420)
!6422 = !DILocation(line: 6319, column: 6, scope: !5644)
!6423 = !DILocation(line: 6320, column: 13, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6420, file: !209, line: 6319, column: 24)
!6425 = !DILocation(line: 6320, column: 3, scope: !6424)
!6426 = !DILocation(line: 6321, column: 2, scope: !6424)
!6427 = !DILocation(line: 6321, column: 13, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6420, file: !209, line: 6321, column: 13)
!6429 = !DILocation(line: 6321, column: 22, scope: !6428)
!6430 = !DILocation(line: 6321, column: 13, scope: !6420)
!6431 = !DILocalVariable(name: "channel", scope: !6432, file: !209, line: 6322, type: !429)
!6432 = distinct !DILexicalBlock(scope: !6428, file: !209, line: 6321, column: 35)
!6433 = !DILocation(line: 6322, column: 7, scope: !6432)
!6434 = !DILocation(line: 6324, column: 16, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6432, file: !209, line: 6324, column: 3)
!6436 = !DILocation(line: 6324, column: 8, scope: !6435)
!6437 = !DILocation(line: 6324, column: 21, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6435, file: !209, line: 6324, column: 3)
!6439 = !DILocation(line: 6324, column: 31, scope: !6438)
!6440 = !DILocation(line: 6324, column: 38, scope: !6438)
!6441 = !DILocation(line: 6324, column: 29, scope: !6438)
!6442 = !DILocation(line: 6324, column: 3, scope: !6435)
!6443 = !DILocation(line: 6325, column: 14, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6438, file: !209, line: 6324, column: 59)
!6445 = !DILocation(line: 6326, column: 7, scope: !6444)
!6446 = !DILocation(line: 6325, column: 4, scope: !6444)
!6447 = !DILocation(line: 6327, column: 14, scope: !6444)
!6448 = !DILocation(line: 6328, column: 7, scope: !6444)
!6449 = !DILocation(line: 6327, column: 4, scope: !6444)
!6450 = !DILocation(line: 6329, column: 3, scope: !6444)
!6451 = !DILocation(line: 6324, column: 48, scope: !6438)
!6452 = !DILocation(line: 6324, column: 3, scope: !6438)
!6453 = distinct !{!6453, !6442, !6454}
!6454 = !DILocation(line: 6329, column: 3, scope: !6435)
!6455 = !DILocation(line: 6330, column: 13, scope: !6432)
!6456 = !DILocation(line: 6330, column: 3, scope: !6432)
!6457 = !DILocation(line: 6331, column: 2, scope: !6432)
!6458 = !DILocation(line: 6333, column: 2, scope: !5644)
!6459 = !DILocation(line: 6334, column: 1, scope: !5644)
!6460 = distinct !DISubprogram(name: "pcimio_ai_change", scope: !3, file: !3, line: 1147, type: !4233, scopeLine: 1149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6461 = !DILocalVariable(name: "dev", arg: 1, scope: !6460, file: !3, line: 1147, type: !3350)
!6462 = !DILocation(line: 1147, column: 51, scope: !6460)
!6463 = !DILocalVariable(name: "s", arg: 2, scope: !6460, file: !3, line: 1148, type: !4119)
!6464 = !DILocation(line: 1148, column: 33, scope: !6460)
!6465 = !DILocalVariable(name: "devpriv", scope: !6460, file: !3, line: 1150, type: !4731)
!6466 = !DILocation(line: 1150, column: 21, scope: !6460)
!6467 = !DILocation(line: 1150, column: 31, scope: !6460)
!6468 = !DILocation(line: 1150, column: 36, scope: !6460)
!6469 = !DILocalVariable(name: "ret", scope: !6460, file: !3, line: 1151, type: !429)
!6470 = !DILocation(line: 1151, column: 6, scope: !6460)
!6471 = !DILocation(line: 1153, column: 24, scope: !6460)
!6472 = !DILocation(line: 1153, column: 33, scope: !6460)
!6473 = !DILocation(line: 1153, column: 47, scope: !6460)
!6474 = !DILocation(line: 1153, column: 8, scope: !6460)
!6475 = !DILocation(line: 1153, column: 6, scope: !6460)
!6476 = !DILocation(line: 1154, column: 6, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 1154, column: 6)
!6478 = !DILocation(line: 1154, column: 10, scope: !6477)
!6479 = !DILocation(line: 1154, column: 6, scope: !6460)
!6480 = !DILocation(line: 1155, column: 10, scope: !6477)
!6481 = !DILocation(line: 1155, column: 3, scope: !6477)
!6482 = !DILocation(line: 1157, column: 2, scope: !6460)
!6483 = !DILocation(line: 1158, column: 1, scope: !6460)
!6484 = distinct !DISubprogram(name: "pcimio_ao_change", scope: !3, file: !3, line: 1160, type: !4233, scopeLine: 1162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6485 = !DILocalVariable(name: "dev", arg: 1, scope: !6484, file: !3, line: 1160, type: !3350)
!6486 = !DILocation(line: 1160, column: 51, scope: !6484)
!6487 = !DILocalVariable(name: "s", arg: 2, scope: !6484, file: !3, line: 1161, type: !4119)
!6488 = !DILocation(line: 1161, column: 33, scope: !6484)
!6489 = !DILocalVariable(name: "devpriv", scope: !6484, file: !3, line: 1163, type: !4731)
!6490 = !DILocation(line: 1163, column: 21, scope: !6484)
!6491 = !DILocation(line: 1163, column: 31, scope: !6484)
!6492 = !DILocation(line: 1163, column: 36, scope: !6484)
!6493 = !DILocalVariable(name: "ret", scope: !6484, file: !3, line: 1164, type: !429)
!6494 = !DILocation(line: 1164, column: 6, scope: !6484)
!6495 = !DILocation(line: 1166, column: 24, scope: !6484)
!6496 = !DILocation(line: 1166, column: 33, scope: !6484)
!6497 = !DILocation(line: 1166, column: 47, scope: !6484)
!6498 = !DILocation(line: 1166, column: 8, scope: !6484)
!6499 = !DILocation(line: 1166, column: 6, scope: !6484)
!6500 = !DILocation(line: 1167, column: 6, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6484, file: !3, line: 1167, column: 6)
!6502 = !DILocation(line: 1167, column: 10, scope: !6501)
!6503 = !DILocation(line: 1167, column: 6, scope: !6484)
!6504 = !DILocation(line: 1168, column: 10, scope: !6501)
!6505 = !DILocation(line: 1168, column: 3, scope: !6501)
!6506 = !DILocation(line: 1170, column: 2, scope: !6484)
!6507 = !DILocation(line: 1171, column: 1, scope: !6484)
!6508 = distinct !DISubprogram(name: "pcimio_gpct0_change", scope: !3, file: !3, line: 1173, type: !4233, scopeLine: 1175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6509 = !DILocalVariable(name: "dev", arg: 1, scope: !6508, file: !3, line: 1173, type: !3350)
!6510 = !DILocation(line: 1173, column: 54, scope: !6508)
!6511 = !DILocalVariable(name: "s", arg: 2, scope: !6508, file: !3, line: 1174, type: !4119)
!6512 = !DILocation(line: 1174, column: 36, scope: !6508)
!6513 = !DILocalVariable(name: "devpriv", scope: !6508, file: !3, line: 1176, type: !4731)
!6514 = !DILocation(line: 1176, column: 21, scope: !6508)
!6515 = !DILocation(line: 1176, column: 31, scope: !6508)
!6516 = !DILocation(line: 1176, column: 36, scope: !6508)
!6517 = !DILocalVariable(name: "ret", scope: !6508, file: !3, line: 1177, type: !429)
!6518 = !DILocation(line: 1177, column: 6, scope: !6508)
!6519 = !DILocation(line: 1179, column: 24, scope: !6508)
!6520 = !DILocation(line: 1179, column: 33, scope: !6508)
!6521 = !DILocation(line: 1179, column: 52, scope: !6508)
!6522 = !DILocation(line: 1179, column: 8, scope: !6508)
!6523 = !DILocation(line: 1179, column: 6, scope: !6508)
!6524 = !DILocation(line: 1180, column: 6, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6508, file: !3, line: 1180, column: 6)
!6526 = !DILocation(line: 1180, column: 10, scope: !6525)
!6527 = !DILocation(line: 1180, column: 6, scope: !6508)
!6528 = !DILocation(line: 1181, column: 10, scope: !6525)
!6529 = !DILocation(line: 1181, column: 3, scope: !6525)
!6530 = !DILocation(line: 1183, column: 2, scope: !6508)
!6531 = !DILocation(line: 1184, column: 1, scope: !6508)
!6532 = distinct !DISubprogram(name: "pcimio_gpct1_change", scope: !3, file: !3, line: 1186, type: !4233, scopeLine: 1188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6533 = !DILocalVariable(name: "dev", arg: 1, scope: !6532, file: !3, line: 1186, type: !3350)
!6534 = !DILocation(line: 1186, column: 54, scope: !6532)
!6535 = !DILocalVariable(name: "s", arg: 2, scope: !6532, file: !3, line: 1187, type: !4119)
!6536 = !DILocation(line: 1187, column: 36, scope: !6532)
!6537 = !DILocalVariable(name: "devpriv", scope: !6532, file: !3, line: 1189, type: !4731)
!6538 = !DILocation(line: 1189, column: 21, scope: !6532)
!6539 = !DILocation(line: 1189, column: 31, scope: !6532)
!6540 = !DILocation(line: 1189, column: 36, scope: !6532)
!6541 = !DILocalVariable(name: "ret", scope: !6532, file: !3, line: 1190, type: !429)
!6542 = !DILocation(line: 1190, column: 6, scope: !6532)
!6543 = !DILocation(line: 1192, column: 24, scope: !6532)
!6544 = !DILocation(line: 1192, column: 33, scope: !6532)
!6545 = !DILocation(line: 1192, column: 52, scope: !6532)
!6546 = !DILocation(line: 1192, column: 8, scope: !6532)
!6547 = !DILocation(line: 1192, column: 6, scope: !6532)
!6548 = !DILocation(line: 1193, column: 6, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6532, file: !3, line: 1193, column: 6)
!6550 = !DILocation(line: 1193, column: 10, scope: !6549)
!6551 = !DILocation(line: 1193, column: 6, scope: !6532)
!6552 = !DILocation(line: 1194, column: 10, scope: !6549)
!6553 = !DILocation(line: 1194, column: 3, scope: !6549)
!6554 = !DILocation(line: 1196, column: 2, scope: !6532)
!6555 = !DILocation(line: 1197, column: 1, scope: !6532)
!6556 = distinct !DISubprogram(name: "pcimio_dio_change", scope: !3, file: !3, line: 1199, type: !4233, scopeLine: 1201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6557 = !DILocalVariable(name: "dev", arg: 1, scope: !6556, file: !3, line: 1199, type: !3350)
!6558 = !DILocation(line: 1199, column: 52, scope: !6556)
!6559 = !DILocalVariable(name: "s", arg: 2, scope: !6556, file: !3, line: 1200, type: !4119)
!6560 = !DILocation(line: 1200, column: 34, scope: !6556)
!6561 = !DILocalVariable(name: "devpriv", scope: !6556, file: !3, line: 1202, type: !4731)
!6562 = !DILocation(line: 1202, column: 21, scope: !6556)
!6563 = !DILocation(line: 1202, column: 31, scope: !6556)
!6564 = !DILocation(line: 1202, column: 36, scope: !6556)
!6565 = !DILocalVariable(name: "ret", scope: !6556, file: !3, line: 1203, type: !429)
!6566 = !DILocation(line: 1203, column: 6, scope: !6556)
!6567 = !DILocation(line: 1205, column: 24, scope: !6556)
!6568 = !DILocation(line: 1205, column: 33, scope: !6556)
!6569 = !DILocation(line: 1205, column: 48, scope: !6556)
!6570 = !DILocation(line: 1205, column: 8, scope: !6556)
!6571 = !DILocation(line: 1205, column: 6, scope: !6556)
!6572 = !DILocation(line: 1206, column: 6, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6556, file: !3, line: 1206, column: 6)
!6574 = !DILocation(line: 1206, column: 10, scope: !6573)
!6575 = !DILocation(line: 1206, column: 6, scope: !6556)
!6576 = !DILocation(line: 1207, column: 10, scope: !6573)
!6577 = !DILocation(line: 1207, column: 3, scope: !6573)
!6578 = !DILocation(line: 1209, column: 2, scope: !6556)
!6579 = !DILocation(line: 1210, column: 1, scope: !6556)
!6580 = distinct !DISubprogram(name: "readl", scope: !6581, file: !6581, line: 59, type: !6582, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6581 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!6582 = !DISubroutineType(types: !6583)
!6583 = !{!7, !6584}
!6584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6585, size: 64)
!6585 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6586)
!6586 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!6587 = !DILocalVariable(name: "addr", arg: 1, scope: !6580, file: !6581, line: 59, type: !6584)
!6588 = !DILocation(line: 59, column: 1, scope: !6580)
!6589 = !DILocalVariable(name: "ret", scope: !6580, file: !6581, line: 59, type: !7)
!6590 = !{i32 -2143392702}
!6591 = distinct !DISubprogram(name: "writel", scope: !6581, file: !6581, line: 67, type: !6592, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6592 = !DISubroutineType(types: !6593)
!6593 = !{null, !7, !6594}
!6594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6586, size: 64)
!6595 = !DILocalVariable(name: "val", arg: 1, scope: !6591, file: !6581, line: 67, type: !7)
!6596 = !DILocation(line: 67, column: 1, scope: !6591)
!6597 = !DILocalVariable(name: "addr", arg: 2, scope: !6591, file: !6581, line: 67, type: !6594)
!6598 = !{i32 -2143390309}
!6599 = distinct !DISubprogram(name: "ni_readb", scope: !209, file: !209, line: 262, type: !6600, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6600 = !DISubroutineType(types: !6601)
!6601 = !{!7, !3350, !429}
!6602 = !DILocalVariable(name: "dev", arg: 1, scope: !6599, file: !209, line: 262, type: !3350)
!6603 = !DILocation(line: 262, column: 52, scope: !6599)
!6604 = !DILocalVariable(name: "reg", arg: 2, scope: !6599, file: !209, line: 262, type: !429)
!6605 = !DILocation(line: 262, column: 61, scope: !6599)
!6606 = !DILocation(line: 264, column: 6, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6599, file: !209, line: 264, column: 6)
!6608 = !DILocation(line: 264, column: 11, scope: !6607)
!6609 = !DILocation(line: 264, column: 6, scope: !6599)
!6610 = !DILocation(line: 265, column: 16, scope: !6607)
!6611 = !DILocation(line: 265, column: 21, scope: !6607)
!6612 = !DILocation(line: 265, column: 28, scope: !6607)
!6613 = !DILocation(line: 265, column: 26, scope: !6607)
!6614 = !DILocation(line: 265, column: 10, scope: !6607)
!6615 = !DILocation(line: 265, column: 3, scope: !6607)
!6616 = !DILocation(line: 267, column: 13, scope: !6599)
!6617 = !DILocation(line: 267, column: 18, scope: !6599)
!6618 = !DILocation(line: 267, column: 27, scope: !6599)
!6619 = !DILocation(line: 267, column: 25, scope: !6599)
!6620 = !DILocation(line: 267, column: 9, scope: !6599)
!6621 = !DILocation(line: 267, column: 2, scope: !6599)
!6622 = !DILocation(line: 268, column: 1, scope: !6599)
!6623 = distinct !DISubprogram(name: "readb", scope: !6581, file: !6581, line: 57, type: !6624, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6624 = !DISubroutineType(types: !6625)
!6625 = !{!434, !6584}
!6626 = !DILocalVariable(name: "addr", arg: 1, scope: !6623, file: !6581, line: 57, type: !6584)
!6627 = !DILocation(line: 57, column: 1, scope: !6623)
!6628 = !DILocalVariable(name: "ret", scope: !6623, file: !6581, line: 57, type: !434)
!6629 = !{i32 -2143393533}
!6630 = distinct !DISubprogram(name: "inb", scope: !6581, file: !6581, line: 334, type: !6631, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6631 = !DISubroutineType(types: !6632)
!6632 = !{!434, !429}
!6633 = !DILocalVariable(name: "port", arg: 1, scope: !6630, file: !6581, line: 334, type: !429)
!6634 = !DILocation(line: 334, column: 1, scope: !6630)
!6635 = !DILocalVariable(name: "value", scope: !6630, file: !6581, line: 334, type: !434)
!6636 = !{i32 -2143380237}
!6637 = distinct !DISubprogram(name: "ni_stc_writew", scope: !209, file: !209, line: 438, type: !6638, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6638 = !DISubroutineType(types: !6639)
!6639 = !{null, !3350, !7, !429}
!6640 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !6641)
!6641 = distinct !DILocation(line: 454, column: 3, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6643, file: !209, line: 446, column: 9)
!6643 = distinct !DILexicalBlock(scope: !6637, file: !209, line: 444, column: 6)
!6644 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !6641)
!6645 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !6646)
!6646 = distinct !DILocation(line: 447, column: 3, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6648, file: !209, line: 447, column: 3)
!6648 = distinct !DILexicalBlock(scope: !6649, file: !209, line: 447, column: 3)
!6649 = distinct !DILexicalBlock(scope: !6650, file: !209, line: 447, column: 3)
!6650 = distinct !DILexicalBlock(scope: !6651, file: !209, line: 447, column: 3)
!6651 = distinct !DILexicalBlock(scope: !6642, file: !209, line: 447, column: 3)
!6652 = !DILocalVariable(name: "dev", arg: 1, scope: !6637, file: !209, line: 438, type: !3350)
!6653 = !DILocation(line: 438, column: 49, scope: !6637)
!6654 = !DILocalVariable(name: "data", arg: 2, scope: !6637, file: !209, line: 439, type: !7)
!6655 = !DILocation(line: 439, column: 19, scope: !6637)
!6656 = !DILocalVariable(name: "reg", arg: 3, scope: !6637, file: !209, line: 439, type: !429)
!6657 = !DILocation(line: 439, column: 29, scope: !6637)
!6658 = !DILocalVariable(name: "devpriv", scope: !6637, file: !209, line: 441, type: !4731)
!6659 = !DILocation(line: 441, column: 21, scope: !6637)
!6660 = !DILocation(line: 441, column: 31, scope: !6637)
!6661 = !DILocation(line: 441, column: 36, scope: !6637)
!6662 = !DILocalVariable(name: "flags", scope: !6637, file: !209, line: 442, type: !435)
!6663 = !DILocation(line: 442, column: 16, scope: !6637)
!6664 = !DILocation(line: 444, column: 6, scope: !6643)
!6665 = !DILocation(line: 444, column: 15, scope: !6643)
!6666 = !DILocation(line: 444, column: 6, scope: !6637)
!6667 = !DILocation(line: 445, column: 22, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6643, file: !209, line: 444, column: 28)
!6669 = !DILocation(line: 445, column: 27, scope: !6668)
!6670 = !DILocation(line: 445, column: 33, scope: !6668)
!6671 = !DILocation(line: 445, column: 3, scope: !6668)
!6672 = !DILocation(line: 446, column: 2, scope: !6668)
!6673 = !DILocation(line: 447, column: 3, scope: !6642)
!6674 = !DILocation(line: 447, column: 3, scope: !6651)
!6675 = !DILocalVariable(name: "__dummy", scope: !6676, file: !209, line: 447, type: !435)
!6676 = distinct !DILexicalBlock(scope: !6650, file: !209, line: 447, column: 3)
!6677 = !DILocation(line: 447, column: 3, scope: !6676)
!6678 = !DILocalVariable(name: "__dummy2", scope: !6676, file: !209, line: 447, type: !435)
!6679 = !DILocation(line: 447, column: 3, scope: !6650)
!6680 = !DILocation(line: 447, column: 3, scope: !6649)
!6681 = !DILocation(line: 447, column: 3, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6649, file: !209, line: 447, column: 3)
!6683 = !DILocalVariable(name: "__dummy", scope: !6684, file: !209, line: 447, type: !435)
!6684 = distinct !DILexicalBlock(scope: !6685, file: !209, line: 447, column: 3)
!6685 = distinct !DILexicalBlock(scope: !6682, file: !209, line: 447, column: 3)
!6686 = !DILocation(line: 447, column: 3, scope: !6684)
!6687 = !DILocalVariable(name: "__dummy2", scope: !6684, file: !209, line: 447, type: !435)
!6688 = !DILocation(line: 447, column: 3, scope: !6685)
!6689 = !DILocation(line: 447, column: 3, scope: !6648)
!6690 = !{i32 -2141355879}
!6691 = !DILocation(line: 447, column: 3, scope: !6647)
!6692 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !6646)
!6693 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !6646)
!6694 = !DILocation(line: 448, column: 8, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6642, file: !209, line: 448, column: 7)
!6696 = !DILocation(line: 448, column: 17, scope: !6695)
!6697 = !DILocation(line: 448, column: 22, scope: !6695)
!6698 = !DILocation(line: 448, column: 25, scope: !6695)
!6699 = !DILocation(line: 448, column: 29, scope: !6695)
!6700 = !DILocation(line: 448, column: 7, scope: !6642)
!6701 = !DILocation(line: 449, column: 14, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6695, file: !209, line: 448, column: 34)
!6703 = !DILocation(line: 449, column: 19, scope: !6702)
!6704 = !DILocation(line: 449, column: 25, scope: !6702)
!6705 = !DILocation(line: 449, column: 29, scope: !6702)
!6706 = !DILocation(line: 449, column: 4, scope: !6702)
!6707 = !DILocation(line: 450, column: 3, scope: !6702)
!6708 = !DILocation(line: 451, column: 14, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6695, file: !209, line: 450, column: 10)
!6710 = !DILocation(line: 451, column: 19, scope: !6709)
!6711 = !DILocation(line: 451, column: 4, scope: !6709)
!6712 = !DILocation(line: 452, column: 14, scope: !6709)
!6713 = !DILocation(line: 452, column: 19, scope: !6709)
!6714 = !DILocation(line: 452, column: 4, scope: !6709)
!6715 = !DILocation(line: 454, column: 27, scope: !6642)
!6716 = !DILocation(line: 454, column: 36, scope: !6642)
!6717 = !DILocation(line: 454, column: 49, scope: !6642)
!6718 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !6641)
!6719 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !6641)
!6720 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !6641)
!6721 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !6641)
!6722 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !6641)
!6723 = !DILocation(line: 456, column: 1, scope: !6637)
!6724 = distinct !DISubprogram(name: "ni_writeb", scope: !209, file: !209, line: 238, type: !6638, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6725 = !DILocalVariable(name: "dev", arg: 1, scope: !6724, file: !209, line: 238, type: !3350)
!6726 = !DILocation(line: 238, column: 45, scope: !6724)
!6727 = !DILocalVariable(name: "data", arg: 2, scope: !6724, file: !209, line: 238, type: !7)
!6728 = !DILocation(line: 238, column: 63, scope: !6724)
!6729 = !DILocalVariable(name: "reg", arg: 3, scope: !6724, file: !209, line: 238, type: !429)
!6730 = !DILocation(line: 238, column: 73, scope: !6724)
!6731 = !DILocation(line: 240, column: 6, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6724, file: !209, line: 240, column: 6)
!6733 = !DILocation(line: 240, column: 11, scope: !6732)
!6734 = !DILocation(line: 240, column: 6, scope: !6724)
!6735 = !DILocation(line: 241, column: 10, scope: !6732)
!6736 = !DILocation(line: 241, column: 16, scope: !6732)
!6737 = !DILocation(line: 241, column: 21, scope: !6732)
!6738 = !DILocation(line: 241, column: 28, scope: !6732)
!6739 = !DILocation(line: 241, column: 26, scope: !6732)
!6740 = !DILocation(line: 241, column: 3, scope: !6732)
!6741 = !DILocation(line: 243, column: 8, scope: !6732)
!6742 = !DILocation(line: 243, column: 14, scope: !6732)
!6743 = !DILocation(line: 243, column: 19, scope: !6732)
!6744 = !DILocation(line: 243, column: 28, scope: !6732)
!6745 = !DILocation(line: 243, column: 26, scope: !6732)
!6746 = !DILocation(line: 243, column: 3, scope: !6732)
!6747 = !DILocation(line: 244, column: 1, scope: !6724)
!6748 = distinct !DISubprogram(name: "ni_writel", scope: !209, file: !209, line: 222, type: !6638, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6749 = !DILocalVariable(name: "dev", arg: 1, scope: !6748, file: !209, line: 222, type: !3350)
!6750 = !DILocation(line: 222, column: 45, scope: !6748)
!6751 = !DILocalVariable(name: "data", arg: 2, scope: !6748, file: !209, line: 222, type: !7)
!6752 = !DILocation(line: 222, column: 63, scope: !6748)
!6753 = !DILocalVariable(name: "reg", arg: 3, scope: !6748, file: !209, line: 222, type: !429)
!6754 = !DILocation(line: 222, column: 73, scope: !6748)
!6755 = !DILocation(line: 224, column: 6, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6748, file: !209, line: 224, column: 6)
!6757 = !DILocation(line: 224, column: 11, scope: !6756)
!6758 = !DILocation(line: 224, column: 6, scope: !6748)
!6759 = !DILocation(line: 225, column: 10, scope: !6756)
!6760 = !DILocation(line: 225, column: 16, scope: !6756)
!6761 = !DILocation(line: 225, column: 21, scope: !6756)
!6762 = !DILocation(line: 225, column: 28, scope: !6756)
!6763 = !DILocation(line: 225, column: 26, scope: !6756)
!6764 = !DILocation(line: 225, column: 3, scope: !6756)
!6765 = !DILocation(line: 227, column: 8, scope: !6756)
!6766 = !DILocation(line: 227, column: 14, scope: !6756)
!6767 = !DILocation(line: 227, column: 19, scope: !6756)
!6768 = !DILocation(line: 227, column: 28, scope: !6756)
!6769 = !DILocation(line: 227, column: 26, scope: !6756)
!6770 = !DILocation(line: 227, column: 3, scope: !6756)
!6771 = !DILocation(line: 228, column: 1, scope: !6748)
!6772 = distinct !DISubprogram(name: "ni_writew", scope: !209, file: !209, line: 230, type: !6638, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6773 = !DILocalVariable(name: "dev", arg: 1, scope: !6772, file: !209, line: 230, type: !3350)
!6774 = !DILocation(line: 230, column: 45, scope: !6772)
!6775 = !DILocalVariable(name: "data", arg: 2, scope: !6772, file: !209, line: 230, type: !7)
!6776 = !DILocation(line: 230, column: 63, scope: !6772)
!6777 = !DILocalVariable(name: "reg", arg: 3, scope: !6772, file: !209, line: 230, type: !429)
!6778 = !DILocation(line: 230, column: 73, scope: !6772)
!6779 = !DILocation(line: 232, column: 6, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6772, file: !209, line: 232, column: 6)
!6781 = !DILocation(line: 232, column: 11, scope: !6780)
!6782 = !DILocation(line: 232, column: 6, scope: !6772)
!6783 = !DILocation(line: 233, column: 10, scope: !6780)
!6784 = !DILocation(line: 233, column: 16, scope: !6780)
!6785 = !DILocation(line: 233, column: 21, scope: !6780)
!6786 = !DILocation(line: 233, column: 28, scope: !6780)
!6787 = !DILocation(line: 233, column: 26, scope: !6780)
!6788 = !DILocation(line: 233, column: 3, scope: !6780)
!6789 = !DILocation(line: 235, column: 8, scope: !6780)
!6790 = !DILocation(line: 235, column: 14, scope: !6780)
!6791 = !DILocation(line: 235, column: 19, scope: !6780)
!6792 = !DILocation(line: 235, column: 28, scope: !6780)
!6793 = !DILocation(line: 235, column: 26, scope: !6780)
!6794 = !DILocation(line: 235, column: 3, scope: !6780)
!6795 = !DILocation(line: 236, column: 1, scope: !6772)
!6796 = distinct !DISubprogram(name: "m_series_stc_write", scope: !209, file: !209, line: 363, type: !6797, scopeLine: 365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6797 = !DISubroutineType(types: !6798)
!6798 = !{null, !3350, !7, !7}
!6799 = !DILocalVariable(name: "dev", arg: 1, scope: !6796, file: !209, line: 363, type: !3350)
!6800 = !DILocation(line: 363, column: 54, scope: !6796)
!6801 = !DILocalVariable(name: "data", arg: 2, scope: !6796, file: !209, line: 364, type: !7)
!6802 = !DILocation(line: 364, column: 24, scope: !6796)
!6803 = !DILocalVariable(name: "reg", arg: 3, scope: !6796, file: !209, line: 364, type: !7)
!6804 = !DILocation(line: 364, column: 43, scope: !6796)
!6805 = !DILocalVariable(name: "regmap", scope: !6796, file: !209, line: 366, type: !6806)
!6806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4336, size: 64)
!6807 = !DILocation(line: 366, column: 27, scope: !6796)
!6808 = !DILocation(line: 368, column: 6, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6796, file: !209, line: 368, column: 6)
!6810 = !DILocation(line: 368, column: 10, scope: !6809)
!6811 = !DILocation(line: 368, column: 6, scope: !6796)
!6812 = !DILocation(line: 369, column: 39, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6809, file: !209, line: 368, column: 51)
!6814 = !DILocation(line: 369, column: 13, scope: !6813)
!6815 = !DILocation(line: 369, column: 10, scope: !6813)
!6816 = !DILocation(line: 370, column: 2, scope: !6813)
!6817 = !DILocation(line: 371, column: 3, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6809, file: !209, line: 370, column: 9)
!6819 = !DILocation(line: 373, column: 3, scope: !6818)
!6820 = !DILocation(line: 376, column: 10, scope: !6796)
!6821 = !DILocation(line: 376, column: 18, scope: !6796)
!6822 = !DILocation(line: 376, column: 2, scope: !6796)
!6823 = !DILocation(line: 378, column: 13, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6796, file: !209, line: 376, column: 24)
!6825 = !DILocation(line: 378, column: 18, scope: !6824)
!6826 = !DILocation(line: 378, column: 24, scope: !6824)
!6827 = !DILocation(line: 378, column: 32, scope: !6824)
!6828 = !DILocation(line: 378, column: 3, scope: !6824)
!6829 = !DILocation(line: 379, column: 3, scope: !6824)
!6830 = !DILocation(line: 381, column: 13, scope: !6824)
!6831 = !DILocation(line: 381, column: 18, scope: !6824)
!6832 = !DILocation(line: 381, column: 24, scope: !6824)
!6833 = !DILocation(line: 381, column: 32, scope: !6824)
!6834 = !DILocation(line: 381, column: 3, scope: !6824)
!6835 = !DILocation(line: 382, column: 3, scope: !6824)
!6836 = !DILocation(line: 384, column: 3, scope: !6824)
!6837 = !DILocation(line: 386, column: 3, scope: !6824)
!6838 = !DILocation(line: 388, column: 1, scope: !6796)
!6839 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !6840, file: !6840, line: 666, type: !6841, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6840 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!6841 = !DISubroutineType(types: !6842)
!6842 = !{!435}
!6843 = !DILocalVariable(name: "f", scope: !6839, file: !6840, line: 668, type: !435)
!6844 = !DILocation(line: 668, column: 16, scope: !6839)
!6845 = !DILocation(line: 670, column: 6, scope: !6839)
!6846 = !DILocation(line: 670, column: 4, scope: !6839)
!6847 = !DILocation(line: 671, column: 2, scope: !6839)
!6848 = !DILocation(line: 672, column: 9, scope: !6839)
!6849 = !DILocation(line: 672, column: 2, scope: !6839)
!6850 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !6840, file: !6840, line: 646, type: !6841, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6851 = !DILocalVariable(name: "__ret", scope: !6852, file: !6840, line: 648, type: !435)
!6852 = distinct !DILexicalBlock(scope: !6850, file: !6840, line: 648, column: 9)
!6853 = !DILocation(line: 648, column: 9, scope: !6852)
!6854 = !DILocalVariable(name: "__edi", scope: !6852, file: !6840, line: 648, type: !435)
!6855 = !DILocalVariable(name: "__esi", scope: !6852, file: !6840, line: 648, type: !435)
!6856 = !DILocalVariable(name: "__edx", scope: !6852, file: !6840, line: 648, type: !435)
!6857 = !DILocalVariable(name: "__ecx", scope: !6852, file: !6840, line: 648, type: !435)
!6858 = !DILocalVariable(name: "__eax", scope: !6852, file: !6840, line: 648, type: !435)
!6859 = !DILocation(line: 648, column: 9, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6861, file: !6840, line: 648, column: 9)
!6861 = distinct !DILexicalBlock(scope: !6852, file: !6840, line: 648, column: 9)
!6862 = !{i32 -2145753831, i32 -2145751516, i32 -2145751282, i32 -2145751231, i32 -2145751203, i32 -2145751178, i32 -2145751494, i32 -2145751481, i32 -2145751043, i32 -2145750924, i32 -2145751389, i32 -2145751362, i32 -2145751334, i32 -2145751304}
!6863 = !DILocalVariable(name: "__mask", scope: !6864, file: !6840, line: 648, type: !435)
!6864 = distinct !DILexicalBlock(scope: !6860, file: !6840, line: 648, column: 9)
!6865 = !DILocation(line: 648, column: 9, scope: !6864)
!6866 = !DILocation(line: 648, column: 9, scope: !6861)
!6867 = !DILocation(line: 648, column: 2, scope: !6850)
!6868 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !6840, file: !6840, line: 656, type: !2895, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6869 = !DILocalVariable(name: "__edi", scope: !6870, file: !6840, line: 658, type: !435)
!6870 = distinct !DILexicalBlock(scope: !6868, file: !6840, line: 658, column: 2)
!6871 = !DILocation(line: 658, column: 2, scope: !6870)
!6872 = !DILocalVariable(name: "__esi", scope: !6870, file: !6840, line: 658, type: !435)
!6873 = !DILocalVariable(name: "__edx", scope: !6870, file: !6840, line: 658, type: !435)
!6874 = !DILocalVariable(name: "__ecx", scope: !6870, file: !6840, line: 658, type: !435)
!6875 = !DILocalVariable(name: "__eax", scope: !6870, file: !6840, line: 658, type: !435)
!6876 = !{i32 -2145746737, i32 -2145746005, i32 -2145745771, i32 -2145745720, i32 -2145745692, i32 -2145745667, i32 -2145745983, i32 -2145745970, i32 -2145745532, i32 -2145745413, i32 -2145745878, i32 -2145745851, i32 -2145745823, i32 -2145745793}
!6877 = !DILocation(line: 659, column: 1, scope: !6868)
!6878 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !6840, file: !6840, line: 651, type: !6879, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6879 = !DISubroutineType(types: !6880)
!6880 = !{null, !435}
!6881 = !DILocalVariable(name: "f", arg: 1, scope: !6878, file: !6840, line: 651, type: !435)
!6882 = !DILocation(line: 651, column: 65, scope: !6878)
!6883 = !DILocalVariable(name: "__edi", scope: !6884, file: !6840, line: 653, type: !435)
!6884 = distinct !DILexicalBlock(scope: !6878, file: !6840, line: 653, column: 2)
!6885 = !DILocation(line: 653, column: 2, scope: !6884)
!6886 = !DILocalVariable(name: "__esi", scope: !6884, file: !6840, line: 653, type: !435)
!6887 = !DILocalVariable(name: "__edx", scope: !6884, file: !6840, line: 653, type: !435)
!6888 = !DILocalVariable(name: "__ecx", scope: !6884, file: !6840, line: 653, type: !435)
!6889 = !DILocalVariable(name: "__eax", scope: !6884, file: !6840, line: 653, type: !435)
!6890 = !{i32 -2145749364, i32 -2145748614, i32 -2145748380, i32 -2145748329, i32 -2145748301, i32 -2145748276, i32 -2145748592, i32 -2145748579, i32 -2145748141, i32 -2145748022, i32 -2145748487, i32 -2145748460, i32 -2145748432, i32 -2145748402}
!6891 = !DILocation(line: 654, column: 1, scope: !6878)
!6892 = distinct !DISubprogram(name: "writeb", scope: !6581, file: !6581, line: 65, type: !6893, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6893 = !DISubroutineType(types: !6894)
!6894 = !{null, !434, !6594}
!6895 = !DILocalVariable(name: "val", arg: 1, scope: !6892, file: !6581, line: 65, type: !434)
!6896 = !DILocation(line: 65, column: 1, scope: !6892)
!6897 = !DILocalVariable(name: "addr", arg: 2, scope: !6892, file: !6581, line: 65, type: !6594)
!6898 = !{i32 -2143391079}
!6899 = distinct !DISubprogram(name: "outb", scope: !6581, file: !6581, line: 334, type: !6900, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6900 = !DISubroutineType(types: !6901)
!6901 = !{null, !434, !429}
!6902 = !DILocalVariable(name: "value", arg: 1, scope: !6899, file: !6581, line: 334, type: !434)
!6903 = !DILocation(line: 334, column: 1, scope: !6899)
!6904 = !DILocalVariable(name: "port", arg: 2, scope: !6899, file: !6581, line: 334, type: !429)
!6905 = !{i32 -2143380439}
!6906 = distinct !DISubprogram(name: "outl", scope: !6581, file: !6581, line: 336, type: !6907, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6907 = !DISubroutineType(types: !6908)
!6908 = !{null, !7, !429}
!6909 = !DILocalVariable(name: "value", arg: 1, scope: !6906, file: !6581, line: 336, type: !7)
!6910 = !DILocation(line: 336, column: 1, scope: !6906)
!6911 = !DILocalVariable(name: "port", arg: 2, scope: !6906, file: !6581, line: 336, type: !429)
!6912 = !{i32 -2143374943}
!6913 = distinct !DISubprogram(name: "writew", scope: !6581, file: !6581, line: 66, type: !6914, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6914 = !DISubroutineType(types: !6915)
!6915 = !{null, !438, !6594}
!6916 = !DILocalVariable(name: "val", arg: 1, scope: !6913, file: !6581, line: 66, type: !438)
!6917 = !DILocation(line: 66, column: 1, scope: !6913)
!6918 = !DILocalVariable(name: "addr", arg: 2, scope: !6913, file: !6581, line: 66, type: !6594)
!6919 = !{i32 -2143390695}
!6920 = distinct !DISubprogram(name: "outw", scope: !6581, file: !6581, line: 335, type: !6921, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6921 = !DISubroutineType(types: !6922)
!6922 = !{null, !438, !429}
!6923 = !DILocalVariable(name: "value", arg: 1, scope: !6920, file: !6581, line: 335, type: !438)
!6924 = !DILocation(line: 335, column: 1, scope: !6920)
!6925 = !DILocalVariable(name: "port", arg: 2, scope: !6920, file: !6581, line: 335, type: !429)
!6926 = !{i32 -2143377696}
!6927 = distinct !DISubprogram(name: "ni_stc_readw", scope: !209, file: !209, line: 471, type: !6600, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!6928 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !6929)
!6929 = distinct !DILocation(line: 487, column: 3, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6931, file: !209, line: 479, column: 9)
!6931 = distinct !DILexicalBlock(scope: !6927, file: !209, line: 477, column: 6)
!6932 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !6929)
!6933 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !6934)
!6934 = distinct !DILocation(line: 480, column: 3, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6936, file: !209, line: 480, column: 3)
!6936 = distinct !DILexicalBlock(scope: !6937, file: !209, line: 480, column: 3)
!6937 = distinct !DILexicalBlock(scope: !6938, file: !209, line: 480, column: 3)
!6938 = distinct !DILexicalBlock(scope: !6939, file: !209, line: 480, column: 3)
!6939 = distinct !DILexicalBlock(scope: !6930, file: !209, line: 480, column: 3)
!6940 = !DILocalVariable(name: "dev", arg: 1, scope: !6927, file: !209, line: 471, type: !3350)
!6941 = !DILocation(line: 471, column: 56, scope: !6927)
!6942 = !DILocalVariable(name: "reg", arg: 2, scope: !6927, file: !209, line: 471, type: !429)
!6943 = !DILocation(line: 471, column: 65, scope: !6927)
!6944 = !DILocalVariable(name: "devpriv", scope: !6927, file: !209, line: 473, type: !4731)
!6945 = !DILocation(line: 473, column: 21, scope: !6927)
!6946 = !DILocation(line: 473, column: 31, scope: !6927)
!6947 = !DILocation(line: 473, column: 36, scope: !6927)
!6948 = !DILocalVariable(name: "flags", scope: !6927, file: !209, line: 474, type: !435)
!6949 = !DILocation(line: 474, column: 16, scope: !6927)
!6950 = !DILocalVariable(name: "val", scope: !6927, file: !209, line: 475, type: !7)
!6951 = !DILocation(line: 475, column: 15, scope: !6927)
!6952 = !DILocation(line: 477, column: 6, scope: !6931)
!6953 = !DILocation(line: 477, column: 15, scope: !6931)
!6954 = !DILocation(line: 477, column: 6, scope: !6927)
!6955 = !DILocation(line: 478, column: 27, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6931, file: !209, line: 477, column: 28)
!6957 = !DILocation(line: 478, column: 32, scope: !6956)
!6958 = !DILocation(line: 478, column: 9, scope: !6956)
!6959 = !DILocation(line: 478, column: 7, scope: !6956)
!6960 = !DILocation(line: 479, column: 2, scope: !6956)
!6961 = !DILocation(line: 480, column: 3, scope: !6930)
!6962 = !DILocation(line: 480, column: 3, scope: !6939)
!6963 = !DILocalVariable(name: "__dummy", scope: !6964, file: !209, line: 480, type: !435)
!6964 = distinct !DILexicalBlock(scope: !6938, file: !209, line: 480, column: 3)
!6965 = !DILocation(line: 480, column: 3, scope: !6964)
!6966 = !DILocalVariable(name: "__dummy2", scope: !6964, file: !209, line: 480, type: !435)
!6967 = !DILocation(line: 480, column: 3, scope: !6938)
!6968 = !DILocation(line: 480, column: 3, scope: !6937)
!6969 = !DILocation(line: 480, column: 3, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6937, file: !209, line: 480, column: 3)
!6971 = !DILocalVariable(name: "__dummy", scope: !6972, file: !209, line: 480, type: !435)
!6972 = distinct !DILexicalBlock(scope: !6973, file: !209, line: 480, column: 3)
!6973 = distinct !DILexicalBlock(scope: !6970, file: !209, line: 480, column: 3)
!6974 = !DILocation(line: 480, column: 3, scope: !6972)
!6975 = !DILocalVariable(name: "__dummy2", scope: !6972, file: !209, line: 480, type: !435)
!6976 = !DILocation(line: 480, column: 3, scope: !6973)
!6977 = !DILocation(line: 480, column: 3, scope: !6936)
!6978 = !{i32 -2141354780}
!6979 = !DILocation(line: 480, column: 3, scope: !6935)
!6980 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !6934)
!6981 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !6934)
!6982 = !DILocation(line: 481, column: 8, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6930, file: !209, line: 481, column: 7)
!6984 = !DILocation(line: 481, column: 17, scope: !6983)
!6985 = !DILocation(line: 481, column: 22, scope: !6983)
!6986 = !DILocation(line: 481, column: 25, scope: !6983)
!6987 = !DILocation(line: 481, column: 29, scope: !6983)
!6988 = !DILocation(line: 481, column: 7, scope: !6930)
!6989 = !DILocation(line: 482, column: 19, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6983, file: !209, line: 481, column: 34)
!6991 = !DILocation(line: 482, column: 24, scope: !6990)
!6992 = !DILocation(line: 482, column: 28, scope: !6990)
!6993 = !DILocation(line: 482, column: 10, scope: !6990)
!6994 = !DILocation(line: 482, column: 8, scope: !6990)
!6995 = !DILocation(line: 483, column: 3, scope: !6990)
!6996 = !DILocation(line: 484, column: 14, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6983, file: !209, line: 483, column: 10)
!6998 = !DILocation(line: 484, column: 19, scope: !6997)
!6999 = !DILocation(line: 484, column: 4, scope: !6997)
!7000 = !DILocation(line: 485, column: 19, scope: !6997)
!7001 = !DILocation(line: 485, column: 10, scope: !6997)
!7002 = !DILocation(line: 485, column: 8, scope: !6997)
!7003 = !DILocation(line: 487, column: 27, scope: !6930)
!7004 = !DILocation(line: 487, column: 36, scope: !6930)
!7005 = !DILocation(line: 487, column: 49, scope: !6930)
!7006 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !6929)
!7007 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !6929)
!7008 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !6929)
!7009 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !6929)
!7010 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !6929)
!7011 = !DILocation(line: 489, column: 9, scope: !6927)
!7012 = !DILocation(line: 489, column: 2, scope: !6927)
!7013 = distinct !DISubprogram(name: "ack_a_interrupt", scope: !209, file: !209, line: 1266, type: !4406, scopeLine: 1267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!7014 = !DILocalVariable(name: "dev", arg: 1, scope: !7013, file: !209, line: 1266, type: !3350)
!7015 = !DILocation(line: 1266, column: 51, scope: !7013)
!7016 = !DILocalVariable(name: "a_status", arg: 2, scope: !7013, file: !209, line: 1266, type: !438)
!7017 = !DILocation(line: 1266, column: 71, scope: !7013)
!7018 = !DILocalVariable(name: "ack", scope: !7013, file: !209, line: 1268, type: !438)
!7019 = !DILocation(line: 1268, column: 17, scope: !7013)
!7020 = !DILocation(line: 1270, column: 6, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !7013, file: !209, line: 1270, column: 6)
!7022 = !DILocation(line: 1270, column: 15, scope: !7021)
!7023 = !DILocation(line: 1270, column: 6, scope: !7013)
!7024 = !DILocation(line: 1271, column: 7, scope: !7021)
!7025 = !DILocation(line: 1271, column: 3, scope: !7021)
!7026 = !DILocation(line: 1272, column: 6, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7013, file: !209, line: 1272, column: 6)
!7028 = !DILocation(line: 1272, column: 15, scope: !7027)
!7029 = !DILocation(line: 1272, column: 6, scope: !7013)
!7030 = !DILocation(line: 1273, column: 7, scope: !7027)
!7031 = !DILocation(line: 1273, column: 3, scope: !7027)
!7032 = !DILocation(line: 1274, column: 6, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7013, file: !209, line: 1274, column: 6)
!7034 = !DILocation(line: 1274, column: 15, scope: !7033)
!7035 = !DILocation(line: 1274, column: 6, scope: !7013)
!7036 = !DILocation(line: 1275, column: 7, scope: !7033)
!7037 = !DILocation(line: 1275, column: 3, scope: !7033)
!7038 = !DILocation(line: 1276, column: 6, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7013, file: !209, line: 1276, column: 6)
!7040 = !DILocation(line: 1276, column: 15, scope: !7039)
!7041 = !DILocation(line: 1276, column: 6, scope: !7013)
!7042 = !DILocation(line: 1277, column: 7, scope: !7039)
!7043 = !DILocation(line: 1277, column: 3, scope: !7039)
!7044 = !DILocation(line: 1278, column: 6, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7013, file: !209, line: 1278, column: 6)
!7046 = !DILocation(line: 1278, column: 15, scope: !7045)
!7047 = !DILocation(line: 1278, column: 6, scope: !7013)
!7048 = !DILocation(line: 1279, column: 7, scope: !7045)
!7049 = !DILocation(line: 1279, column: 3, scope: !7045)
!7050 = !DILocation(line: 1280, column: 6, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7013, file: !209, line: 1280, column: 6)
!7052 = !DILocation(line: 1280, column: 6, scope: !7013)
!7053 = !DILocation(line: 1281, column: 17, scope: !7051)
!7054 = !DILocation(line: 1281, column: 22, scope: !7051)
!7055 = !DILocation(line: 1281, column: 3, scope: !7051)
!7056 = !DILocation(line: 1282, column: 1, scope: !7013)
!7057 = distinct !DISubprogram(name: "ack_b_interrupt", scope: !209, file: !209, line: 1341, type: !4406, scopeLine: 1342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!7058 = !DILocalVariable(name: "dev", arg: 1, scope: !7057, file: !209, line: 1341, type: !3350)
!7059 = !DILocation(line: 1341, column: 51, scope: !7057)
!7060 = !DILocalVariable(name: "b_status", arg: 2, scope: !7057, file: !209, line: 1341, type: !438)
!7061 = !DILocation(line: 1341, column: 71, scope: !7057)
!7062 = !DILocalVariable(name: "ack", scope: !7057, file: !209, line: 1343, type: !438)
!7063 = !DILocation(line: 1343, column: 17, scope: !7057)
!7064 = !DILocation(line: 1345, column: 6, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !7057, file: !209, line: 1345, column: 6)
!7066 = !DILocation(line: 1345, column: 15, scope: !7065)
!7067 = !DILocation(line: 1345, column: 6, scope: !7057)
!7068 = !DILocation(line: 1346, column: 7, scope: !7065)
!7069 = !DILocation(line: 1346, column: 3, scope: !7065)
!7070 = !DILocation(line: 1347, column: 6, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7057, file: !209, line: 1347, column: 6)
!7072 = !DILocation(line: 1347, column: 15, scope: !7071)
!7073 = !DILocation(line: 1347, column: 6, scope: !7057)
!7074 = !DILocation(line: 1348, column: 7, scope: !7071)
!7075 = !DILocation(line: 1348, column: 3, scope: !7071)
!7076 = !DILocation(line: 1349, column: 6, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7057, file: !209, line: 1349, column: 6)
!7078 = !DILocation(line: 1349, column: 15, scope: !7077)
!7079 = !DILocation(line: 1349, column: 6, scope: !7057)
!7080 = !DILocation(line: 1350, column: 7, scope: !7077)
!7081 = !DILocation(line: 1350, column: 3, scope: !7077)
!7082 = !DILocation(line: 1351, column: 6, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7057, file: !209, line: 1351, column: 6)
!7084 = !DILocation(line: 1351, column: 15, scope: !7083)
!7085 = !DILocation(line: 1351, column: 6, scope: !7057)
!7086 = !DILocation(line: 1352, column: 7, scope: !7083)
!7087 = !DILocation(line: 1352, column: 3, scope: !7083)
!7088 = !DILocation(line: 1353, column: 6, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !7057, file: !209, line: 1353, column: 6)
!7090 = !DILocation(line: 1353, column: 15, scope: !7089)
!7091 = !DILocation(line: 1353, column: 6, scope: !7057)
!7092 = !DILocation(line: 1354, column: 7, scope: !7089)
!7093 = !DILocation(line: 1354, column: 3, scope: !7089)
!7094 = !DILocation(line: 1355, column: 6, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7057, file: !209, line: 1355, column: 6)
!7096 = !DILocation(line: 1355, column: 15, scope: !7095)
!7097 = !DILocation(line: 1355, column: 6, scope: !7057)
!7098 = !DILocation(line: 1356, column: 7, scope: !7095)
!7099 = !DILocation(line: 1356, column: 3, scope: !7095)
!7100 = !DILocation(line: 1357, column: 6, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7057, file: !209, line: 1357, column: 6)
!7102 = !DILocation(line: 1357, column: 15, scope: !7101)
!7103 = !DILocation(line: 1357, column: 6, scope: !7057)
!7104 = !DILocation(line: 1358, column: 7, scope: !7101)
!7105 = !DILocation(line: 1358, column: 3, scope: !7101)
!7106 = !DILocation(line: 1359, column: 6, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7057, file: !209, line: 1359, column: 6)
!7108 = !DILocation(line: 1359, column: 6, scope: !7057)
!7109 = !DILocation(line: 1360, column: 17, scope: !7107)
!7110 = !DILocation(line: 1360, column: 22, scope: !7107)
!7111 = !DILocation(line: 1360, column: 3, scope: !7107)
!7112 = !DILocation(line: 1361, column: 1, scope: !7057)
!7113 = distinct !DISubprogram(name: "handle_a_interrupt", scope: !209, file: !209, line: 1284, type: !7114, scopeLine: 1287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!7114 = !DISubroutineType(types: !7115)
!7115 = !{null, !3350, !4119, !438}
!7116 = !DILocalVariable(name: "dev", arg: 1, scope: !7113, file: !209, line: 1284, type: !3350)
!7117 = !DILocation(line: 1284, column: 54, scope: !7113)
!7118 = !DILocalVariable(name: "s", arg: 2, scope: !7113, file: !209, line: 1285, type: !4119)
!7119 = !DILocation(line: 1285, column: 36, scope: !7113)
!7120 = !DILocalVariable(name: "status", arg: 3, scope: !7113, file: !209, line: 1286, type: !438)
!7121 = !DILocation(line: 1286, column: 26, scope: !7113)
!7122 = !DILocalVariable(name: "cmd", scope: !7113, file: !209, line: 1288, type: !4239)
!7123 = !DILocation(line: 1288, column: 21, scope: !7113)
!7124 = !DILocation(line: 1288, column: 28, scope: !7113)
!7125 = !DILocation(line: 1288, column: 31, scope: !7113)
!7126 = !DILocation(line: 1288, column: 38, scope: !7113)
!7127 = !DILocation(line: 1291, column: 6, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7113, file: !209, line: 1291, column: 6)
!7129 = !DILocation(line: 1291, column: 13, scope: !7128)
!7130 = !DILocation(line: 1291, column: 6, scope: !7113)
!7131 = !DILocation(line: 1293, column: 7, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7133, file: !209, line: 1293, column: 7)
!7133 = distinct !DILexicalBlock(scope: !7128, file: !209, line: 1292, column: 60)
!7134 = !DILocation(line: 1293, column: 14, scope: !7132)
!7135 = !DILocation(line: 1293, column: 7, scope: !7133)
!7136 = !DILocation(line: 1294, column: 4, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7132, file: !209, line: 1293, column: 25)
!7138 = !DILocation(line: 1299, column: 36, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7137, file: !209, line: 1299, column: 8)
!7140 = !DILocation(line: 1299, column: 8, scope: !7139)
!7141 = !DILocation(line: 1299, column: 8, scope: !7137)
!7142 = !DILocation(line: 1300, column: 5, scope: !7139)
!7143 = !DILocation(line: 1300, column: 8, scope: !7139)
!7144 = !DILocation(line: 1300, column: 15, scope: !7139)
!7145 = !DILocation(line: 1300, column: 22, scope: !7139)
!7146 = !DILocation(line: 1301, column: 4, scope: !7137)
!7147 = !DILocation(line: 1303, column: 7, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7133, file: !209, line: 1303, column: 7)
!7149 = !DILocation(line: 1303, column: 14, scope: !7148)
!7150 = !DILocation(line: 1303, column: 7, scope: !7133)
!7151 = !DILocation(line: 1304, column: 4, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7148, file: !209, line: 1303, column: 38)
!7153 = !DILocation(line: 1307, column: 24, scope: !7152)
!7154 = !DILocation(line: 1307, column: 4, scope: !7152)
!7155 = !DILocation(line: 1309, column: 4, scope: !7152)
!7156 = !DILocation(line: 1309, column: 7, scope: !7152)
!7157 = !DILocation(line: 1309, column: 14, scope: !7152)
!7158 = !DILocation(line: 1309, column: 21, scope: !7152)
!7159 = !DILocation(line: 1310, column: 8, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7152, file: !209, line: 1310, column: 8)
!7161 = !DILocation(line: 1310, column: 15, scope: !7160)
!7162 = !DILocation(line: 1310, column: 8, scope: !7152)
!7163 = !DILocation(line: 1311, column: 5, scope: !7160)
!7164 = !DILocation(line: 1311, column: 8, scope: !7160)
!7165 = !DILocation(line: 1311, column: 15, scope: !7160)
!7166 = !DILocation(line: 1311, column: 22, scope: !7160)
!7167 = !DILocation(line: 1312, column: 4, scope: !7152)
!7168 = !DILocation(line: 1314, column: 7, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7133, file: !209, line: 1314, column: 7)
!7170 = !DILocation(line: 1314, column: 14, scope: !7169)
!7171 = !DILocation(line: 1314, column: 7, scope: !7133)
!7172 = !DILocation(line: 1315, column: 8, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7174, file: !209, line: 1315, column: 8)
!7174 = distinct !DILexicalBlock(scope: !7169, file: !209, line: 1314, column: 40)
!7175 = !DILocation(line: 1315, column: 13, scope: !7173)
!7176 = !DILocation(line: 1315, column: 22, scope: !7173)
!7177 = !DILocation(line: 1315, column: 8, scope: !7174)
!7178 = !DILocation(line: 1316, column: 25, scope: !7173)
!7179 = !DILocation(line: 1316, column: 5, scope: !7173)
!7180 = !DILocation(line: 1317, column: 3, scope: !7174)
!7181 = !DILocation(line: 1318, column: 2, scope: !7133)
!7182 = !DILocation(line: 1337, column: 6, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7113, file: !209, line: 1337, column: 6)
!7184 = !DILocation(line: 1337, column: 13, scope: !7183)
!7185 = !DILocation(line: 1337, column: 6, scope: !7113)
!7186 = !DILocation(line: 1338, column: 17, scope: !7183)
!7187 = !DILocation(line: 1338, column: 22, scope: !7183)
!7188 = !DILocation(line: 1338, column: 3, scope: !7183)
!7189 = !DILocation(line: 1339, column: 1, scope: !7113)
!7190 = distinct !DISubprogram(name: "handle_b_interrupt", scope: !209, file: !209, line: 1363, type: !7114, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!7191 = !DILocalVariable(name: "dev", arg: 1, scope: !7190, file: !209, line: 1363, type: !3350)
!7192 = !DILocation(line: 1363, column: 54, scope: !7190)
!7193 = !DILocalVariable(name: "s", arg: 2, scope: !7190, file: !209, line: 1364, type: !4119)
!7194 = !DILocation(line: 1364, column: 36, scope: !7190)
!7195 = !DILocalVariable(name: "b_status", arg: 3, scope: !7190, file: !209, line: 1365, type: !438)
!7196 = !DILocation(line: 1365, column: 26, scope: !7190)
!7197 = !DILocation(line: 1367, column: 6, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7190, file: !209, line: 1367, column: 6)
!7199 = !DILocation(line: 1367, column: 15, scope: !7198)
!7200 = !DILocation(line: 1367, column: 6, scope: !7190)
!7201 = !DILocation(line: 1368, column: 3, scope: !7198)
!7202 = !DILocation(line: 1369, column: 6, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7190, file: !209, line: 1369, column: 6)
!7204 = !DILocation(line: 1369, column: 15, scope: !7203)
!7205 = !DILocation(line: 1369, column: 6, scope: !7190)
!7206 = !DILocation(line: 1370, column: 3, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7203, file: !209, line: 1369, column: 43)
!7208 = !DILocation(line: 1373, column: 3, scope: !7207)
!7209 = !DILocation(line: 1373, column: 6, scope: !7207)
!7210 = !DILocation(line: 1373, column: 13, scope: !7207)
!7211 = !DILocation(line: 1373, column: 20, scope: !7207)
!7212 = !DILocation(line: 1374, column: 2, scope: !7207)
!7213 = !DILocation(line: 1376, column: 6, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7190, file: !209, line: 1376, column: 6)
!7215 = !DILocation(line: 1376, column: 9, scope: !7214)
!7216 = !DILocation(line: 1376, column: 16, scope: !7214)
!7217 = !DILocation(line: 1376, column: 20, scope: !7214)
!7218 = !DILocation(line: 1376, column: 29, scope: !7214)
!7219 = !DILocation(line: 1376, column: 42, scope: !7214)
!7220 = !DILocation(line: 1377, column: 6, scope: !7214)
!7221 = !DILocation(line: 1377, column: 15, scope: !7214)
!7222 = !DILocation(line: 1376, column: 6, scope: !7190)
!7223 = !DILocation(line: 1378, column: 3, scope: !7214)
!7224 = !DILocation(line: 1378, column: 6, scope: !7214)
!7225 = !DILocation(line: 1378, column: 13, scope: !7214)
!7226 = !DILocation(line: 1378, column: 20, scope: !7214)
!7227 = !DILocation(line: 1394, column: 1, scope: !7190)
!7228 = distinct !DISubprogram(name: "handle_gpct_interrupt", scope: !209, file: !209, line: 1251, type: !4406, scopeLine: 1253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!7229 = !DILocalVariable(name: "dev", arg: 1, scope: !7228, file: !209, line: 1251, type: !3350)
!7230 = !DILocation(line: 1251, column: 57, scope: !7228)
!7231 = !DILocalVariable(name: "counter_index", arg: 2, scope: !7228, file: !209, line: 1252, type: !438)
!7232 = !DILocation(line: 1252, column: 22, scope: !7228)
!7233 = !DILocalVariable(name: "devpriv", scope: !7228, file: !209, line: 1255, type: !4731)
!7234 = !DILocation(line: 1255, column: 21, scope: !7228)
!7235 = !DILocation(line: 1255, column: 31, scope: !7228)
!7236 = !DILocation(line: 1255, column: 36, scope: !7228)
!7237 = !DILocalVariable(name: "s", scope: !7228, file: !209, line: 1256, type: !4119)
!7238 = !DILocation(line: 1256, column: 27, scope: !7228)
!7239 = !DILocation(line: 1258, column: 7, scope: !7228)
!7240 = !DILocation(line: 1258, column: 12, scope: !7228)
!7241 = !DILocation(line: 1258, column: 23, scope: !7228)
!7242 = !DILocation(line: 1258, column: 4, scope: !7228)
!7243 = !DILocation(line: 1260, column: 27, scope: !7228)
!7244 = !DILocation(line: 1260, column: 36, scope: !7228)
!7245 = !DILocation(line: 1260, column: 49, scope: !7228)
!7246 = !DILocation(line: 1260, column: 58, scope: !7228)
!7247 = !DILocation(line: 1261, column: 5, scope: !7228)
!7248 = !DILocation(line: 1260, column: 2, scope: !7228)
!7249 = !DILocation(line: 1262, column: 23, scope: !7228)
!7250 = !DILocation(line: 1262, column: 28, scope: !7228)
!7251 = !DILocation(line: 1262, column: 2, scope: !7228)
!7252 = !DILocation(line: 1264, column: 1, scope: !7228)
!7253 = distinct !DISubprogram(name: "handle_cdio_interrupt", scope: !209, file: !209, line: 3726, type: !4265, scopeLine: 3727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!7254 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !7255)
!7255 = distinct !DILocation(line: 3736, column: 2, scope: !7253)
!7256 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !7255)
!7257 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !7258)
!7258 = distinct !DILocation(line: 3733, column: 2, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7260, file: !209, line: 3733, column: 2)
!7260 = distinct !DILexicalBlock(scope: !7261, file: !209, line: 3733, column: 2)
!7261 = distinct !DILexicalBlock(scope: !7262, file: !209, line: 3733, column: 2)
!7262 = distinct !DILexicalBlock(scope: !7263, file: !209, line: 3733, column: 2)
!7263 = distinct !DILexicalBlock(scope: !7253, file: !209, line: 3733, column: 2)
!7264 = !DILocalVariable(name: "dev", arg: 1, scope: !7253, file: !209, line: 3726, type: !3350)
!7265 = !DILocation(line: 3726, column: 57, scope: !7253)
!7266 = !DILocalVariable(name: "devpriv", scope: !7253, file: !209, line: 3728, type: !4731)
!7267 = !DILocation(line: 3728, column: 21, scope: !7253)
!7268 = !DILocation(line: 3728, column: 31, scope: !7253)
!7269 = !DILocation(line: 3728, column: 36, scope: !7253)
!7270 = !DILocalVariable(name: "cdio_status", scope: !7253, file: !209, line: 3729, type: !7)
!7271 = !DILocation(line: 3729, column: 15, scope: !7253)
!7272 = !DILocalVariable(name: "s", scope: !7253, file: !209, line: 3730, type: !4119)
!7273 = !DILocation(line: 3730, column: 27, scope: !7253)
!7274 = !DILocation(line: 3730, column: 32, scope: !7253)
!7275 = !DILocation(line: 3730, column: 37, scope: !7253)
!7276 = !DILocalVariable(name: "flags", scope: !7253, file: !209, line: 3731, type: !435)
!7277 = !DILocation(line: 3731, column: 16, scope: !7253)
!7278 = !DILocation(line: 3733, column: 2, scope: !7253)
!7279 = !DILocation(line: 3733, column: 2, scope: !7263)
!7280 = !DILocalVariable(name: "__dummy", scope: !7281, file: !209, line: 3733, type: !435)
!7281 = distinct !DILexicalBlock(scope: !7262, file: !209, line: 3733, column: 2)
!7282 = !DILocation(line: 3733, column: 2, scope: !7281)
!7283 = !DILocalVariable(name: "__dummy2", scope: !7281, file: !209, line: 3733, type: !435)
!7284 = !DILocation(line: 3733, column: 2, scope: !7262)
!7285 = !DILocation(line: 3733, column: 2, scope: !7261)
!7286 = !DILocation(line: 3733, column: 2, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7261, file: !209, line: 3733, column: 2)
!7288 = !DILocalVariable(name: "__dummy", scope: !7289, file: !209, line: 3733, type: !435)
!7289 = distinct !DILexicalBlock(scope: !7290, file: !209, line: 3733, column: 2)
!7290 = distinct !DILexicalBlock(scope: !7287, file: !209, line: 3733, column: 2)
!7291 = !DILocation(line: 3733, column: 2, scope: !7289)
!7292 = !DILocalVariable(name: "__dummy2", scope: !7289, file: !209, line: 3733, type: !435)
!7293 = !DILocation(line: 3733, column: 2, scope: !7290)
!7294 = !DILocation(line: 3733, column: 2, scope: !7260)
!7295 = !{i32 -2141292351}
!7296 = !DILocation(line: 3733, column: 2, scope: !7259)
!7297 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !7258)
!7298 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !7258)
!7299 = !DILocation(line: 3734, column: 6, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7253, file: !209, line: 3734, column: 6)
!7301 = !DILocation(line: 3734, column: 15, scope: !7300)
!7302 = !DILocation(line: 3734, column: 6, scope: !7253)
!7303 = !DILocation(line: 3735, column: 18, scope: !7300)
!7304 = !DILocation(line: 3735, column: 27, scope: !7300)
!7305 = !DILocation(line: 3735, column: 42, scope: !7300)
!7306 = !DILocation(line: 3735, column: 3, scope: !7300)
!7307 = !DILocation(line: 3736, column: 26, scope: !7253)
!7308 = !DILocation(line: 3736, column: 35, scope: !7253)
!7309 = !DILocation(line: 3736, column: 54, scope: !7253)
!7310 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !7255)
!7311 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !7255)
!7312 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !7255)
!7313 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !7255)
!7314 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !7255)
!7315 = !DILocation(line: 3738, column: 25, scope: !7253)
!7316 = !DILocation(line: 3738, column: 16, scope: !7253)
!7317 = !DILocation(line: 3738, column: 14, scope: !7253)
!7318 = !DILocation(line: 3739, column: 6, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7253, file: !209, line: 3739, column: 6)
!7320 = !DILocation(line: 3739, column: 18, scope: !7319)
!7321 = !DILocation(line: 3739, column: 6, scope: !7253)
!7322 = !DILocation(line: 3741, column: 13, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7319, file: !209, line: 3739, column: 48)
!7324 = !DILocation(line: 3741, column: 3, scope: !7323)
!7325 = !DILocation(line: 3743, column: 3, scope: !7323)
!7326 = !DILocation(line: 3743, column: 6, scope: !7323)
!7327 = !DILocation(line: 3743, column: 13, scope: !7323)
!7328 = !DILocation(line: 3743, column: 20, scope: !7323)
!7329 = !DILocation(line: 3744, column: 2, scope: !7323)
!7330 = !DILocation(line: 3745, column: 6, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7253, file: !209, line: 3745, column: 6)
!7332 = !DILocation(line: 3745, column: 18, scope: !7331)
!7333 = !DILocation(line: 3745, column: 6, scope: !7253)
!7334 = !DILocation(line: 3746, column: 13, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7331, file: !209, line: 3745, column: 53)
!7336 = !DILocation(line: 3746, column: 3, scope: !7335)
!7337 = !DILocation(line: 3749, column: 2, scope: !7335)
!7338 = !DILocation(line: 3750, column: 23, scope: !7253)
!7339 = !DILocation(line: 3750, column: 28, scope: !7253)
!7340 = !DILocation(line: 3750, column: 2, scope: !7253)
!7341 = !DILocation(line: 3751, column: 1, scope: !7253)
!7342 = distinct !DISubprogram(name: "m_series_stc_read", scope: !209, file: !209, line: 411, type: !7343, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!7343 = !DISubroutineType(types: !7344)
!7344 = !{!7, !3350, !7}
!7345 = !DILocalVariable(name: "dev", arg: 1, scope: !7342, file: !209, line: 411, type: !3350)
!7346 = !DILocation(line: 411, column: 61, scope: !7342)
!7347 = !DILocalVariable(name: "reg", arg: 2, scope: !7342, file: !209, line: 412, type: !7)
!7348 = !DILocation(line: 412, column: 24, scope: !7342)
!7349 = !DILocalVariable(name: "regmap", scope: !7342, file: !209, line: 414, type: !6806)
!7350 = !DILocation(line: 414, column: 27, scope: !7342)
!7351 = !DILocation(line: 416, column: 6, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7342, file: !209, line: 416, column: 6)
!7353 = !DILocation(line: 416, column: 10, scope: !7352)
!7354 = !DILocation(line: 416, column: 6, scope: !7342)
!7355 = !DILocation(line: 417, column: 38, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7352, file: !209, line: 416, column: 50)
!7357 = !DILocation(line: 417, column: 13, scope: !7356)
!7358 = !DILocation(line: 417, column: 10, scope: !7356)
!7359 = !DILocation(line: 418, column: 2, scope: !7356)
!7360 = !DILocation(line: 419, column: 3, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7352, file: !209, line: 418, column: 9)
!7362 = !DILocation(line: 421, column: 3, scope: !7361)
!7363 = !DILocation(line: 424, column: 10, scope: !7342)
!7364 = !DILocation(line: 424, column: 18, scope: !7342)
!7365 = !DILocation(line: 424, column: 2, scope: !7342)
!7366 = !DILocation(line: 426, column: 19, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7342, file: !209, line: 424, column: 24)
!7368 = !DILocation(line: 426, column: 24, scope: !7367)
!7369 = !DILocation(line: 426, column: 32, scope: !7367)
!7370 = !DILocation(line: 426, column: 10, scope: !7367)
!7371 = !DILocation(line: 426, column: 3, scope: !7367)
!7372 = !DILocation(line: 428, column: 19, scope: !7367)
!7373 = !DILocation(line: 428, column: 24, scope: !7367)
!7374 = !DILocation(line: 428, column: 32, scope: !7367)
!7375 = !DILocation(line: 428, column: 10, scope: !7367)
!7376 = !DILocation(line: 428, column: 3, scope: !7367)
!7377 = !DILocation(line: 430, column: 19, scope: !7367)
!7378 = !DILocation(line: 430, column: 24, scope: !7367)
!7379 = !DILocation(line: 430, column: 32, scope: !7367)
!7380 = !DILocation(line: 430, column: 10, scope: !7367)
!7381 = !DILocation(line: 430, column: 3, scope: !7367)
!7382 = !DILocation(line: 432, column: 3, scope: !7367)
!7383 = !DILocation(line: 434, column: 3, scope: !7367)
!7384 = !DILocation(line: 436, column: 1, scope: !7342)
!7385 = distinct !DISubprogram(name: "ni_readw", scope: !209, file: !209, line: 254, type: !6600, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!7386 = !DILocalVariable(name: "dev", arg: 1, scope: !7385, file: !209, line: 254, type: !3350)
!7387 = !DILocation(line: 254, column: 52, scope: !7385)
!7388 = !DILocalVariable(name: "reg", arg: 2, scope: !7385, file: !209, line: 254, type: !429)
!7389 = !DILocation(line: 254, column: 61, scope: !7385)
!7390 = !DILocation(line: 256, column: 6, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7385, file: !209, line: 256, column: 6)
!7392 = !DILocation(line: 256, column: 11, scope: !7391)
!7393 = !DILocation(line: 256, column: 6, scope: !7385)
!7394 = !DILocation(line: 257, column: 16, scope: !7391)
!7395 = !DILocation(line: 257, column: 21, scope: !7391)
!7396 = !DILocation(line: 257, column: 28, scope: !7391)
!7397 = !DILocation(line: 257, column: 26, scope: !7391)
!7398 = !DILocation(line: 257, column: 10, scope: !7391)
!7399 = !DILocation(line: 257, column: 3, scope: !7391)
!7400 = !DILocation(line: 259, column: 13, scope: !7385)
!7401 = !DILocation(line: 259, column: 18, scope: !7385)
!7402 = !DILocation(line: 259, column: 27, scope: !7385)
!7403 = !DILocation(line: 259, column: 25, scope: !7385)
!7404 = !DILocation(line: 259, column: 9, scope: !7385)
!7405 = !DILocation(line: 259, column: 2, scope: !7385)
!7406 = !DILocation(line: 260, column: 1, scope: !7385)
!7407 = distinct !DISubprogram(name: "ni_readl", scope: !209, file: !209, line: 246, type: !6600, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!7408 = !DILocalVariable(name: "dev", arg: 1, scope: !7407, file: !209, line: 246, type: !3350)
!7409 = !DILocation(line: 246, column: 52, scope: !7407)
!7410 = !DILocalVariable(name: "reg", arg: 2, scope: !7407, file: !209, line: 246, type: !429)
!7411 = !DILocation(line: 246, column: 61, scope: !7407)
!7412 = !DILocation(line: 248, column: 6, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7407, file: !209, line: 248, column: 6)
!7414 = !DILocation(line: 248, column: 11, scope: !7413)
!7415 = !DILocation(line: 248, column: 6, scope: !7407)
!7416 = !DILocation(line: 249, column: 16, scope: !7413)
!7417 = !DILocation(line: 249, column: 21, scope: !7413)
!7418 = !DILocation(line: 249, column: 28, scope: !7413)
!7419 = !DILocation(line: 249, column: 26, scope: !7413)
!7420 = !DILocation(line: 249, column: 10, scope: !7413)
!7421 = !DILocation(line: 249, column: 3, scope: !7413)
!7422 = !DILocation(line: 251, column: 13, scope: !7407)
!7423 = !DILocation(line: 251, column: 18, scope: !7407)
!7424 = !DILocation(line: 251, column: 27, scope: !7407)
!7425 = !DILocation(line: 251, column: 25, scope: !7407)
!7426 = !DILocation(line: 251, column: 9, scope: !7407)
!7427 = !DILocation(line: 251, column: 2, scope: !7407)
!7428 = !DILocation(line: 252, column: 1, scope: !7407)
!7429 = distinct !DISubprogram(name: "inl", scope: !6581, file: !6581, line: 336, type: !7430, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!7430 = !DISubroutineType(types: !7431)
!7431 = !{!7, !429}
!7432 = !DILocalVariable(name: "port", arg: 1, scope: !7429, file: !6581, line: 336, type: !429)
!7433 = !DILocation(line: 336, column: 1, scope: !7429)
!7434 = !DILocalVariable(name: "value", scope: !7429, file: !6581, line: 336, type: !7)
!7435 = !{i32 -2143374741}
!7436 = distinct !DISubprogram(name: "readw", scope: !6581, file: !6581, line: 58, type: !7437, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!7437 = !DISubroutineType(types: !7438)
!7438 = !{!438, !6584}
!7439 = !DILocalVariable(name: "addr", arg: 1, scope: !7436, file: !6581, line: 58, type: !6584)
!7440 = !DILocation(line: 58, column: 1, scope: !7436)
!7441 = !DILocalVariable(name: "ret", scope: !7436, file: !6581, line: 58, type: !438)
!7442 = !{i32 -2143393119}
!7443 = distinct !DISubprogram(name: "inw", scope: !6581, file: !6581, line: 335, type: !7444, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!7444 = !DISubroutineType(types: !7445)
!7445 = !{!438, !429}
!7446 = !DILocalVariable(name: "port", arg: 1, scope: !7443, file: !6581, line: 335, type: !429)
!7447 = !DILocation(line: 335, column: 1, scope: !7443)
!7448 = !DILocalVariable(name: "value", scope: !7443, file: !6581, line: 335, type: !438)
!7449 = !{i32 -2143377494}
!7450 = distinct !DISubprogram(name: "shutdown_ai_command", scope: !209, file: !209, line: 1212, type: !4265, scopeLine: 1213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!7451 = !DILocalVariable(name: "dev", arg: 1, scope: !7450, file: !209, line: 1212, type: !3350)
!7452 = !DILocation(line: 1212, column: 55, scope: !7450)
!7453 = !DILocalVariable(name: "s", scope: !7450, file: !209, line: 1214, type: !4119)
!7454 = !DILocation(line: 1214, column: 27, scope: !7450)
!7455 = !DILocation(line: 1214, column: 31, scope: !7450)
!7456 = !DILocation(line: 1214, column: 36, scope: !7450)
!7457 = !DILocation(line: 1217, column: 18, scope: !7450)
!7458 = !DILocation(line: 1217, column: 2, scope: !7450)
!7459 = !DILocation(line: 1219, column: 23, scope: !7450)
!7460 = !DILocation(line: 1219, column: 2, scope: !7450)
!7461 = !DILocation(line: 1220, column: 23, scope: !7450)
!7462 = !DILocation(line: 1220, column: 2, scope: !7450)
!7463 = !DILocation(line: 1221, column: 23, scope: !7450)
!7464 = !DILocation(line: 1221, column: 2, scope: !7450)
!7465 = !DILocation(line: 1223, column: 2, scope: !7450)
!7466 = !DILocation(line: 1223, column: 5, scope: !7450)
!7467 = !DILocation(line: 1223, column: 12, scope: !7450)
!7468 = !DILocation(line: 1223, column: 19, scope: !7450)
!7469 = !DILocation(line: 1224, column: 1, scope: !7450)
!7470 = !DILocalVariable(name: "dev", arg: 1, scope: !4353, file: !209, line: 1226, type: !3350)
!7471 = !DILocation(line: 1226, column: 49, scope: !4353)
!7472 = !DILocalVariable(name: "s", arg: 2, scope: !4353, file: !209, line: 1226, type: !4119)
!7473 = !DILocation(line: 1226, column: 79, scope: !4353)
!7474 = !DILocalVariable(name: "devpriv", scope: !4353, file: !209, line: 1228, type: !4731)
!7475 = !DILocation(line: 1228, column: 21, scope: !4353)
!7476 = !DILocation(line: 1228, column: 31, scope: !4353)
!7477 = !DILocation(line: 1228, column: 36, scope: !4353)
!7478 = !DILocation(line: 1230, column: 6, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !4353, file: !209, line: 1230, column: 6)
!7480 = !DILocation(line: 1230, column: 15, scope: !7479)
!7481 = !DILocation(line: 1230, column: 22, scope: !7479)
!7482 = !DILocation(line: 1230, column: 6, scope: !4353)
!7483 = !DILocalVariable(name: "i", scope: !7484, file: !209, line: 1233, type: !429)
!7484 = distinct !DILexicalBlock(scope: !7479, file: !209, line: 1230, column: 38)
!7485 = !DILocation(line: 1233, column: 7, scope: !7484)
!7486 = !DILocation(line: 1235, column: 10, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7484, file: !209, line: 1235, column: 3)
!7488 = !DILocation(line: 1235, column: 8, scope: !7487)
!7489 = !DILocation(line: 1235, column: 15, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7487, file: !209, line: 1235, column: 3)
!7491 = !DILocation(line: 1235, column: 17, scope: !7490)
!7492 = !DILocation(line: 1235, column: 3, scope: !7487)
!7493 = !DILocation(line: 1236, column: 19, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7490, file: !209, line: 1235, column: 33)
!7495 = !DILocation(line: 1236, column: 4, scope: !7494)
!7496 = !DILocation(line: 1237, column: 9, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7494, file: !209, line: 1237, column: 8)
!7498 = !DILocation(line: 1237, column: 12, scope: !7497)
!7499 = !DILocation(line: 1237, column: 19, scope: !7497)
!7500 = !DILocation(line: 1237, column: 26, scope: !7497)
!7501 = !DILocation(line: 1237, column: 8, scope: !7494)
!7502 = !DILocation(line: 1238, column: 5, scope: !7497)
!7503 = !DILocation(line: 1239, column: 4, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7505, file: !209, line: 1239, column: 4)
!7505 = distinct !DILexicalBlock(scope: !7506, file: !209, line: 1239, column: 4)
!7506 = distinct !DILexicalBlock(scope: !7507, file: !209, line: 1239, column: 4)
!7507 = distinct !DILexicalBlock(scope: !7494, file: !209, line: 1239, column: 4)
!7508 = !DILocation(line: 1240, column: 3, scope: !7494)
!7509 = !DILocation(line: 1235, column: 29, scope: !7490)
!7510 = !DILocation(line: 1235, column: 3, scope: !7490)
!7511 = distinct !{!7511, !7492, !7512}
!7512 = !DILocation(line: 1240, column: 3, scope: !7487)
!7513 = !DILocation(line: 1245, column: 2, scope: !7484)
!7514 = !DILocation(line: 1247, column: 6, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !4353, file: !209, line: 1247, column: 6)
!7516 = !DILocation(line: 1247, column: 15, scope: !7515)
!7517 = !DILocation(line: 1247, column: 23, scope: !7515)
!7518 = !DILocation(line: 1247, column: 6, scope: !4353)
!7519 = !DILocation(line: 1248, column: 23, scope: !7515)
!7520 = !DILocation(line: 1248, column: 3, scope: !7515)
!7521 = !DILocation(line: 1249, column: 1, scope: !4353)
!7522 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !7523)
!7523 = distinct !DILocation(line: 914, column: 2, scope: !4350)
!7524 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !7523)
!7525 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !7526)
!7526 = distinct !DILocation(line: 896, column: 2, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7528, file: !209, line: 896, column: 2)
!7528 = distinct !DILexicalBlock(scope: !7529, file: !209, line: 896, column: 2)
!7529 = distinct !DILexicalBlock(scope: !7530, file: !209, line: 896, column: 2)
!7530 = distinct !DILexicalBlock(scope: !7531, file: !209, line: 896, column: 2)
!7531 = distinct !DILexicalBlock(scope: !4350, file: !209, line: 896, column: 2)
!7532 = !DILocalVariable(name: "dev", arg: 1, scope: !4350, file: !209, line: 888, type: !3350)
!7533 = !DILocation(line: 888, column: 50, scope: !4350)
!7534 = !DILocalVariable(name: "devpriv", scope: !4350, file: !209, line: 890, type: !4731)
!7535 = !DILocation(line: 890, column: 21, scope: !4350)
!7536 = !DILocation(line: 890, column: 31, scope: !4350)
!7537 = !DILocation(line: 890, column: 36, scope: !4350)
!7538 = !DILocalVariable(name: "i", scope: !4350, file: !209, line: 891, type: !429)
!7539 = !DILocation(line: 891, column: 6, scope: !4350)
!7540 = !DILocalVariable(name: "flags", scope: !4350, file: !209, line: 893, type: !435)
!7541 = !DILocation(line: 893, column: 16, scope: !4350)
!7542 = !DILocalVariable(name: "retval", scope: !4350, file: !209, line: 894, type: !429)
!7543 = !DILocation(line: 894, column: 6, scope: !4350)
!7544 = !DILocation(line: 896, column: 2, scope: !4350)
!7545 = !DILocation(line: 896, column: 2, scope: !7531)
!7546 = !DILocalVariable(name: "__dummy", scope: !7547, file: !209, line: 896, type: !435)
!7547 = distinct !DILexicalBlock(scope: !7530, file: !209, line: 896, column: 2)
!7548 = !DILocation(line: 896, column: 2, scope: !7547)
!7549 = !DILocalVariable(name: "__dummy2", scope: !7547, file: !209, line: 896, type: !435)
!7550 = !DILocation(line: 896, column: 2, scope: !7530)
!7551 = !DILocation(line: 896, column: 2, scope: !7529)
!7552 = !DILocation(line: 896, column: 2, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7529, file: !209, line: 896, column: 2)
!7554 = !DILocalVariable(name: "__dummy", scope: !7555, file: !209, line: 896, type: !435)
!7555 = distinct !DILexicalBlock(scope: !7556, file: !209, line: 896, column: 2)
!7556 = distinct !DILexicalBlock(scope: !7553, file: !209, line: 896, column: 2)
!7557 = !DILocation(line: 896, column: 2, scope: !7555)
!7558 = !DILocalVariable(name: "__dummy2", scope: !7555, file: !209, line: 896, type: !435)
!7559 = !DILocation(line: 896, column: 2, scope: !7556)
!7560 = !DILocation(line: 896, column: 2, scope: !7528)
!7561 = !{i32 -2141335085}
!7562 = !DILocation(line: 896, column: 2, scope: !7527)
!7563 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !7526)
!7564 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !7526)
!7565 = !DILocation(line: 897, column: 6, scope: !7566)
!7566 = distinct !DILexicalBlock(scope: !4350, file: !209, line: 897, column: 6)
!7567 = !DILocation(line: 897, column: 15, scope: !7566)
!7568 = !DILocation(line: 897, column: 6, scope: !4350)
!7569 = !DILocation(line: 898, column: 10, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7571, file: !209, line: 898, column: 3)
!7571 = distinct !DILexicalBlock(scope: !7566, file: !209, line: 897, column: 29)
!7572 = !DILocation(line: 898, column: 8, scope: !7570)
!7573 = !DILocation(line: 898, column: 15, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7570, file: !209, line: 898, column: 3)
!7575 = !DILocation(line: 898, column: 17, scope: !7574)
!7576 = !DILocation(line: 898, column: 3, scope: !7570)
!7577 = !DILocation(line: 899, column: 22, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7579, file: !209, line: 899, column: 8)
!7579 = distinct !DILexicalBlock(scope: !7574, file: !209, line: 898, column: 33)
!7580 = !DILocation(line: 899, column: 9, scope: !7578)
!7581 = !DILocation(line: 899, column: 49, scope: !7578)
!7582 = !DILocation(line: 900, column: 34, scope: !7578)
!7583 = !DILocation(line: 901, column: 30, scope: !7578)
!7584 = !DILocation(line: 901, column: 39, scope: !7578)
!7585 = !DILocation(line: 901, column: 8, scope: !7578)
!7586 = !DILocation(line: 901, column: 53, scope: !7578)
!7587 = !DILocation(line: 899, column: 8, scope: !7579)
!7588 = !DILocation(line: 902, column: 5, scope: !7578)
!7589 = !DILocation(line: 903, column: 4, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7591, file: !209, line: 903, column: 4)
!7591 = distinct !DILexicalBlock(scope: !7592, file: !209, line: 903, column: 4)
!7592 = distinct !DILexicalBlock(scope: !7593, file: !209, line: 903, column: 4)
!7593 = distinct !DILexicalBlock(scope: !7579, file: !209, line: 903, column: 4)
!7594 = !DILocation(line: 904, column: 3, scope: !7579)
!7595 = !DILocation(line: 898, column: 29, scope: !7574)
!7596 = !DILocation(line: 898, column: 3, scope: !7574)
!7597 = distinct !{!7597, !7576, !7598}
!7598 = !DILocation(line: 904, column: 3, scope: !7570)
!7599 = !DILocation(line: 905, column: 7, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7571, file: !209, line: 905, column: 7)
!7601 = !DILocation(line: 905, column: 9, scope: !7600)
!7602 = !DILocation(line: 905, column: 7, scope: !7571)
!7603 = !DILocation(line: 906, column: 4, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7600, file: !209, line: 905, column: 21)
!7605 = !DILocation(line: 907, column: 4, scope: !7604)
!7606 = !DILocation(line: 911, column: 11, scope: !7604)
!7607 = !DILocation(line: 912, column: 3, scope: !7604)
!7608 = !DILocation(line: 913, column: 2, scope: !7571)
!7609 = !DILocation(line: 914, column: 26, scope: !4350)
!7610 = !DILocation(line: 914, column: 35, scope: !4350)
!7611 = !DILocation(line: 914, column: 54, scope: !4350)
!7612 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !7523)
!7613 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !7523)
!7614 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !7523)
!7615 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !7523)
!7616 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !7523)
!7617 = !DILocation(line: 916, column: 17, scope: !4350)
!7618 = !DILocation(line: 916, column: 2, scope: !4350)
!7619 = !DILocation(line: 918, column: 9, scope: !4350)
!7620 = !DILocation(line: 918, column: 2, scope: !4350)
!7621 = distinct !DISubprogram(name: "ni_handle_fifo_dregs", scope: !209, file: !209, line: 1112, type: !4265, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!7622 = !DILocalVariable(name: "dev", arg: 1, scope: !7621, file: !209, line: 1112, type: !3350)
!7623 = !DILocation(line: 1112, column: 56, scope: !7621)
!7624 = !DILocalVariable(name: "devpriv", scope: !7621, file: !209, line: 1114, type: !4731)
!7625 = !DILocation(line: 1114, column: 21, scope: !7621)
!7626 = !DILocation(line: 1114, column: 31, scope: !7621)
!7627 = !DILocation(line: 1114, column: 36, scope: !7621)
!7628 = !DILocalVariable(name: "s", scope: !7621, file: !209, line: 1115, type: !4119)
!7629 = !DILocation(line: 1115, column: 27, scope: !7621)
!7630 = !DILocation(line: 1115, column: 31, scope: !7621)
!7631 = !DILocation(line: 1115, column: 36, scope: !7621)
!7632 = !DILocalVariable(name: "dl", scope: !7621, file: !209, line: 1116, type: !7)
!7633 = !DILocation(line: 1116, column: 15, scope: !7621)
!7634 = !DILocalVariable(name: "data", scope: !7621, file: !209, line: 1117, type: !438)
!7635 = !DILocation(line: 1117, column: 17, scope: !7621)
!7636 = !DILocalVariable(name: "i", scope: !7621, file: !209, line: 1118, type: !429)
!7637 = !DILocation(line: 1118, column: 6, scope: !7621)
!7638 = !DILocation(line: 1120, column: 6, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7621, file: !209, line: 1120, column: 6)
!7640 = !DILocation(line: 1120, column: 15, scope: !7639)
!7641 = !DILocation(line: 1120, column: 6, scope: !7621)
!7642 = !DILocation(line: 1121, column: 3, scope: !7643)
!7643 = distinct !DILexicalBlock(scope: !7639, file: !209, line: 1120, column: 24)
!7644 = !DILocation(line: 1121, column: 24, scope: !7643)
!7645 = !DILocation(line: 1121, column: 11, scope: !7643)
!7646 = !DILocation(line: 1121, column: 51, scope: !7643)
!7647 = !DILocation(line: 1122, column: 29, scope: !7643)
!7648 = !DILocation(line: 1123, column: 18, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7643, file: !209, line: 1122, column: 35)
!7650 = !DILocation(line: 1123, column: 9, scope: !7649)
!7651 = !DILocation(line: 1123, column: 7, scope: !7649)
!7652 = !DILocation(line: 1126, column: 11, scope: !7649)
!7653 = !DILocation(line: 1126, column: 14, scope: !7649)
!7654 = !DILocation(line: 1126, column: 9, scope: !7649)
!7655 = !DILocation(line: 1127, column: 29, scope: !7649)
!7656 = !DILocation(line: 1127, column: 32, scope: !7649)
!7657 = !DILocation(line: 1127, column: 4, scope: !7649)
!7658 = !DILocation(line: 1128, column: 11, scope: !7649)
!7659 = !DILocation(line: 1128, column: 14, scope: !7649)
!7660 = !DILocation(line: 1128, column: 9, scope: !7649)
!7661 = !DILocation(line: 1129, column: 29, scope: !7649)
!7662 = !DILocation(line: 1129, column: 32, scope: !7649)
!7663 = !DILocation(line: 1129, column: 4, scope: !7649)
!7664 = distinct !{!7664, !7642, !7665}
!7665 = !DILocation(line: 1130, column: 3, scope: !7643)
!7666 = !DILocation(line: 1131, column: 2, scope: !7643)
!7667 = !DILocation(line: 1131, column: 13, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7639, file: !209, line: 1131, column: 13)
!7669 = !DILocation(line: 1131, column: 22, scope: !7668)
!7670 = !DILocation(line: 1131, column: 13, scope: !7639)
!7671 = !DILocation(line: 1132, column: 5, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7668, file: !209, line: 1131, column: 31)
!7673 = !DILocation(line: 1133, column: 3, scope: !7672)
!7674 = !DILocation(line: 1133, column: 19, scope: !7672)
!7675 = !DILocation(line: 1133, column: 10, scope: !7672)
!7676 = !DILocation(line: 1133, column: 51, scope: !7672)
!7677 = !DILocation(line: 1134, column: 18, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7672, file: !209, line: 1133, column: 59)
!7679 = !DILocation(line: 1134, column: 9, scope: !7678)
!7680 = !DILocation(line: 1134, column: 7, scope: !7678)
!7681 = !DILocation(line: 1137, column: 11, scope: !7678)
!7682 = !DILocation(line: 1137, column: 14, scope: !7678)
!7683 = !DILocation(line: 1137, column: 9, scope: !7678)
!7684 = !DILocation(line: 1138, column: 29, scope: !7678)
!7685 = !DILocation(line: 1138, column: 32, scope: !7678)
!7686 = !DILocation(line: 1138, column: 4, scope: !7678)
!7687 = !DILocation(line: 1139, column: 11, scope: !7678)
!7688 = !DILocation(line: 1139, column: 14, scope: !7678)
!7689 = !DILocation(line: 1139, column: 9, scope: !7678)
!7690 = !DILocation(line: 1140, column: 29, scope: !7678)
!7691 = !DILocation(line: 1140, column: 32, scope: !7678)
!7692 = !DILocation(line: 1140, column: 4, scope: !7678)
!7693 = !DILocation(line: 1141, column: 6, scope: !7678)
!7694 = distinct !{!7694, !7673, !7695}
!7695 = !DILocation(line: 1142, column: 3, scope: !7672)
!7696 = !DILocation(line: 1144, column: 16, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7672, file: !209, line: 1144, column: 7)
!7698 = !DILocation(line: 1144, column: 7, scope: !7697)
!7699 = !DILocation(line: 1144, column: 48, scope: !7697)
!7700 = !DILocation(line: 1144, column: 7, scope: !7672)
!7701 = !DILocation(line: 1146, column: 14, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7697, file: !209, line: 1144, column: 56)
!7703 = !DILocation(line: 1146, column: 4, scope: !7702)
!7704 = !DILocation(line: 1147, column: 18, scope: !7702)
!7705 = !DILocation(line: 1147, column: 9, scope: !7702)
!7706 = !DILocation(line: 1147, column: 7, scope: !7702)
!7707 = !DILocation(line: 1148, column: 12, scope: !7702)
!7708 = !DILocation(line: 1148, column: 15, scope: !7702)
!7709 = !DILocation(line: 1148, column: 22, scope: !7702)
!7710 = !DILocation(line: 1148, column: 11, scope: !7702)
!7711 = !DILocation(line: 1148, column: 9, scope: !7702)
!7712 = !DILocation(line: 1149, column: 29, scope: !7702)
!7713 = !DILocation(line: 1149, column: 32, scope: !7702)
!7714 = !DILocation(line: 1149, column: 4, scope: !7702)
!7715 = !DILocation(line: 1150, column: 3, scope: !7702)
!7716 = !DILocation(line: 1152, column: 2, scope: !7672)
!7717 = !DILocalVariable(name: "fe", scope: !7718, file: !209, line: 1153, type: !438)
!7718 = distinct !DILexicalBlock(scope: !7668, file: !209, line: 1152, column: 9)
!7719 = !DILocation(line: 1153, column: 18, scope: !7718)
!7720 = !DILocation(line: 1155, column: 21, scope: !7718)
!7721 = !DILocation(line: 1155, column: 8, scope: !7718)
!7722 = !DILocation(line: 1155, column: 48, scope: !7718)
!7723 = !DILocation(line: 1155, column: 6, scope: !7718)
!7724 = !DILocation(line: 1157, column: 3, scope: !7718)
!7725 = !DILocation(line: 1157, column: 10, scope: !7718)
!7726 = !DILocation(line: 1157, column: 13, scope: !7718)
!7727 = !DILocation(line: 1158, column: 11, scope: !7728)
!7728 = distinct !DILexicalBlock(scope: !7729, file: !209, line: 1158, column: 4)
!7729 = distinct !DILexicalBlock(scope: !7718, file: !209, line: 1157, column: 19)
!7730 = !DILocation(line: 1158, column: 9, scope: !7728)
!7731 = !DILocation(line: 1159, column: 9, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7728, file: !209, line: 1158, column: 4)
!7733 = !DILocation(line: 1159, column: 11, scope: !7732)
!7734 = !DILocation(line: 1158, column: 4, scope: !7728)
!7735 = !DILocation(line: 1160, column: 23, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7732, file: !209, line: 1159, column: 55)
!7737 = !DILocation(line: 1160, column: 10, scope: !7736)
!7738 = !DILocation(line: 1160, column: 50, scope: !7736)
!7739 = !DILocation(line: 1160, column: 8, scope: !7736)
!7740 = !DILocation(line: 1162, column: 9, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7736, file: !209, line: 1162, column: 9)
!7742 = !DILocation(line: 1162, column: 9, scope: !7736)
!7743 = !DILocation(line: 1163, column: 6, scope: !7741)
!7744 = !DILocation(line: 1165, column: 18, scope: !7736)
!7745 = !DILocation(line: 1165, column: 9, scope: !7736)
!7746 = !DILocation(line: 1164, column: 5, scope: !7736)
!7747 = !DILocation(line: 1164, column: 14, scope: !7736)
!7748 = !DILocation(line: 1164, column: 29, scope: !7736)
!7749 = !DILocation(line: 1164, column: 32, scope: !7736)
!7750 = !DILocation(line: 1166, column: 4, scope: !7736)
!7751 = !DILocation(line: 1159, column: 51, scope: !7732)
!7752 = !DILocation(line: 1158, column: 4, scope: !7732)
!7753 = distinct !{!7753, !7734, !7754}
!7754 = !DILocation(line: 1166, column: 4, scope: !7728)
!7755 = !DILocation(line: 1167, column: 29, scope: !7729)
!7756 = !DILocation(line: 1167, column: 32, scope: !7729)
!7757 = !DILocation(line: 1167, column: 41, scope: !7729)
!7758 = !DILocation(line: 1167, column: 57, scope: !7729)
!7759 = !DILocation(line: 1167, column: 4, scope: !7729)
!7760 = distinct !{!7760, !7724, !7761}
!7761 = !DILocation(line: 1168, column: 3, scope: !7718)
!7762 = !DILocation(line: 1170, column: 1, scope: !7621)
!7763 = distinct !DISubprogram(name: "get_last_sample_611x", scope: !209, file: !209, line: 1172, type: !4265, scopeLine: 1173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!7764 = !DILocalVariable(name: "dev", arg: 1, scope: !7763, file: !209, line: 1172, type: !3350)
!7765 = !DILocation(line: 1172, column: 56, scope: !7763)
!7766 = !DILocalVariable(name: "devpriv", scope: !7763, file: !209, line: 1174, type: !4731)
!7767 = !DILocation(line: 1174, column: 21, scope: !7763)
!7768 = !DILocation(line: 1174, column: 31, scope: !7763)
!7769 = !DILocation(line: 1174, column: 36, scope: !7763)
!7770 = !DILocalVariable(name: "s", scope: !7763, file: !209, line: 1175, type: !4119)
!7771 = !DILocation(line: 1175, column: 27, scope: !7763)
!7772 = !DILocation(line: 1175, column: 31, scope: !7763)
!7773 = !DILocation(line: 1175, column: 36, scope: !7763)
!7774 = !DILocalVariable(name: "data", scope: !7763, file: !209, line: 1176, type: !438)
!7775 = !DILocation(line: 1176, column: 17, scope: !7763)
!7776 = !DILocalVariable(name: "dl", scope: !7763, file: !209, line: 1177, type: !7)
!7777 = !DILocation(line: 1177, column: 15, scope: !7763)
!7778 = !DILocation(line: 1179, column: 7, scope: !7779)
!7779 = distinct !DILexicalBlock(scope: !7763, file: !209, line: 1179, column: 6)
!7780 = !DILocation(line: 1179, column: 16, scope: !7779)
!7781 = !DILocation(line: 1179, column: 6, scope: !7763)
!7782 = !DILocation(line: 1180, column: 3, scope: !7779)
!7783 = !DILocation(line: 1183, column: 15, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7763, file: !209, line: 1183, column: 6)
!7785 = !DILocation(line: 1183, column: 6, scope: !7784)
!7786 = !DILocation(line: 1183, column: 37, scope: !7784)
!7787 = !DILocation(line: 1183, column: 6, scope: !7763)
!7788 = !DILocation(line: 1184, column: 17, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7784, file: !209, line: 1183, column: 45)
!7790 = !DILocation(line: 1184, column: 8, scope: !7789)
!7791 = !DILocation(line: 1184, column: 6, scope: !7789)
!7792 = !DILocation(line: 1185, column: 10, scope: !7789)
!7793 = !DILocation(line: 1185, column: 13, scope: !7789)
!7794 = !DILocation(line: 1185, column: 8, scope: !7789)
!7795 = !DILocation(line: 1186, column: 28, scope: !7789)
!7796 = !DILocation(line: 1186, column: 31, scope: !7789)
!7797 = !DILocation(line: 1186, column: 3, scope: !7789)
!7798 = !DILocation(line: 1187, column: 2, scope: !7789)
!7799 = !DILocation(line: 1188, column: 1, scope: !7763)
!7800 = distinct !DISubprogram(name: "get_last_sample_6143", scope: !209, file: !209, line: 1190, type: !4265, scopeLine: 1191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!7801 = !DILocalVariable(name: "dev", arg: 1, scope: !7800, file: !209, line: 1190, type: !3350)
!7802 = !DILocation(line: 1190, column: 56, scope: !7800)
!7803 = !DILocalVariable(name: "devpriv", scope: !7800, file: !209, line: 1192, type: !4731)
!7804 = !DILocation(line: 1192, column: 21, scope: !7800)
!7805 = !DILocation(line: 1192, column: 31, scope: !7800)
!7806 = !DILocation(line: 1192, column: 36, scope: !7800)
!7807 = !DILocalVariable(name: "s", scope: !7800, file: !209, line: 1193, type: !4119)
!7808 = !DILocation(line: 1193, column: 27, scope: !7800)
!7809 = !DILocation(line: 1193, column: 31, scope: !7800)
!7810 = !DILocation(line: 1193, column: 36, scope: !7800)
!7811 = !DILocalVariable(name: "data", scope: !7800, file: !209, line: 1194, type: !438)
!7812 = !DILocation(line: 1194, column: 17, scope: !7800)
!7813 = !DILocalVariable(name: "dl", scope: !7800, file: !209, line: 1195, type: !7)
!7814 = !DILocation(line: 1195, column: 15, scope: !7800)
!7815 = !DILocation(line: 1197, column: 7, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7800, file: !209, line: 1197, column: 6)
!7817 = !DILocation(line: 1197, column: 16, scope: !7816)
!7818 = !DILocation(line: 1197, column: 6, scope: !7800)
!7819 = !DILocation(line: 1198, column: 3, scope: !7816)
!7820 = !DILocation(line: 1201, column: 15, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7800, file: !209, line: 1201, column: 6)
!7822 = !DILocation(line: 1201, column: 6, scope: !7821)
!7823 = !DILocation(line: 1201, column: 47, scope: !7821)
!7824 = !DILocation(line: 1201, column: 6, scope: !7800)
!7825 = !DILocation(line: 1203, column: 13, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7821, file: !209, line: 1201, column: 55)
!7827 = !DILocation(line: 1203, column: 3, scope: !7826)
!7828 = !DILocation(line: 1204, column: 17, scope: !7826)
!7829 = !DILocation(line: 1204, column: 8, scope: !7826)
!7830 = !DILocation(line: 1204, column: 6, scope: !7826)
!7831 = !DILocation(line: 1207, column: 11, scope: !7826)
!7832 = !DILocation(line: 1207, column: 14, scope: !7826)
!7833 = !DILocation(line: 1207, column: 21, scope: !7826)
!7834 = !DILocation(line: 1207, column: 10, scope: !7826)
!7835 = !DILocation(line: 1207, column: 8, scope: !7826)
!7836 = !DILocation(line: 1208, column: 28, scope: !7826)
!7837 = !DILocation(line: 1208, column: 31, scope: !7826)
!7838 = !DILocation(line: 1208, column: 3, scope: !7826)
!7839 = !DILocation(line: 1209, column: 2, scope: !7826)
!7840 = !DILocation(line: 1210, column: 1, scope: !7800)
!7841 = distinct !DISubprogram(name: "ni_sync_ai_dma", scope: !209, file: !209, line: 876, type: !4265, scopeLine: 877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!7842 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !7843)
!7843 = distinct !DILocation(line: 885, column: 2, scope: !7841)
!7844 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !7843)
!7845 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !7846)
!7846 = distinct !DILocation(line: 882, column: 2, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7848, file: !209, line: 882, column: 2)
!7848 = distinct !DILexicalBlock(scope: !7849, file: !209, line: 882, column: 2)
!7849 = distinct !DILexicalBlock(scope: !7850, file: !209, line: 882, column: 2)
!7850 = distinct !DILexicalBlock(scope: !7851, file: !209, line: 882, column: 2)
!7851 = distinct !DILexicalBlock(scope: !7841, file: !209, line: 882, column: 2)
!7852 = !DILocalVariable(name: "dev", arg: 1, scope: !7841, file: !209, line: 876, type: !3350)
!7853 = !DILocation(line: 876, column: 50, scope: !7841)
!7854 = !DILocalVariable(name: "devpriv", scope: !7841, file: !209, line: 878, type: !4731)
!7855 = !DILocation(line: 878, column: 21, scope: !7841)
!7856 = !DILocation(line: 878, column: 31, scope: !7841)
!7857 = !DILocation(line: 878, column: 36, scope: !7841)
!7858 = !DILocalVariable(name: "s", scope: !7841, file: !209, line: 879, type: !4119)
!7859 = !DILocation(line: 879, column: 27, scope: !7841)
!7860 = !DILocation(line: 879, column: 31, scope: !7841)
!7861 = !DILocation(line: 879, column: 36, scope: !7841)
!7862 = !DILocalVariable(name: "flags", scope: !7841, file: !209, line: 880, type: !435)
!7863 = !DILocation(line: 880, column: 16, scope: !7841)
!7864 = !DILocation(line: 882, column: 2, scope: !7841)
!7865 = !DILocation(line: 882, column: 2, scope: !7851)
!7866 = !DILocalVariable(name: "__dummy", scope: !7867, file: !209, line: 882, type: !435)
!7867 = distinct !DILexicalBlock(scope: !7850, file: !209, line: 882, column: 2)
!7868 = !DILocation(line: 882, column: 2, scope: !7867)
!7869 = !DILocalVariable(name: "__dummy2", scope: !7867, file: !209, line: 882, type: !435)
!7870 = !DILocation(line: 882, column: 2, scope: !7850)
!7871 = !DILocation(line: 882, column: 2, scope: !7849)
!7872 = !DILocation(line: 882, column: 2, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7849, file: !209, line: 882, column: 2)
!7874 = !DILocalVariable(name: "__dummy", scope: !7875, file: !209, line: 882, type: !435)
!7875 = distinct !DILexicalBlock(scope: !7876, file: !209, line: 882, column: 2)
!7876 = distinct !DILexicalBlock(scope: !7873, file: !209, line: 882, column: 2)
!7877 = !DILocation(line: 882, column: 2, scope: !7875)
!7878 = !DILocalVariable(name: "__dummy2", scope: !7875, file: !209, line: 882, type: !435)
!7879 = !DILocation(line: 882, column: 2, scope: !7876)
!7880 = !DILocation(line: 882, column: 2, scope: !7848)
!7881 = !{i32 -2141336216}
!7882 = !DILocation(line: 882, column: 2, scope: !7847)
!7883 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !7846)
!7884 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !7846)
!7885 = !DILocation(line: 883, column: 6, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7841, file: !209, line: 883, column: 6)
!7887 = !DILocation(line: 883, column: 15, scope: !7886)
!7888 = !DILocation(line: 883, column: 6, scope: !7841)
!7889 = !DILocation(line: 884, column: 17, scope: !7886)
!7890 = !DILocation(line: 884, column: 26, scope: !7886)
!7891 = !DILocation(line: 884, column: 40, scope: !7886)
!7892 = !DILocation(line: 884, column: 3, scope: !7886)
!7893 = !DILocation(line: 885, column: 26, scope: !7841)
!7894 = !DILocation(line: 885, column: 35, scope: !7841)
!7895 = !DILocation(line: 885, column: 54, scope: !7841)
!7896 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !7843)
!7897 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !7843)
!7898 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !7843)
!7899 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !7843)
!7900 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !7843)
!7901 = !DILocation(line: 886, column: 1, scope: !7841)
!7902 = distinct !DISubprogram(name: "ni_global_insn_config", scope: !209, file: !209, line: 5836, type: !4269, scopeLine: 5839, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!7903 = !DILocalVariable(name: "dev", arg: 1, scope: !7902, file: !209, line: 5836, type: !3350)
!7904 = !DILocation(line: 5836, column: 56, scope: !7902)
!7905 = !DILocalVariable(name: "insn", arg: 2, scope: !7902, file: !209, line: 5837, type: !4218)
!7906 = !DILocation(line: 5837, column: 26, scope: !7902)
!7907 = !DILocalVariable(name: "data", arg: 3, scope: !7902, file: !209, line: 5838, type: !1365)
!7908 = !DILocation(line: 5838, column: 20, scope: !7902)
!7909 = !DILocation(line: 5840, column: 10, scope: !7902)
!7910 = !DILocation(line: 5840, column: 2, scope: !7902)
!7911 = !DILocation(line: 5842, column: 24, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7902, file: !209, line: 5840, column: 19)
!7913 = !DILocation(line: 5842, column: 33, scope: !7912)
!7914 = !DILocation(line: 5842, column: 42, scope: !7912)
!7915 = !DILocation(line: 5842, column: 13, scope: !7912)
!7916 = !DILocation(line: 5842, column: 3, scope: !7912)
!7917 = !DILocation(line: 5842, column: 11, scope: !7912)
!7918 = !DILocation(line: 5843, column: 3, scope: !7912)
!7919 = !DILocation(line: 5845, column: 24, scope: !7912)
!7920 = !DILocation(line: 5845, column: 33, scope: !7912)
!7921 = !DILocation(line: 5845, column: 42, scope: !7912)
!7922 = !DILocation(line: 5845, column: 10, scope: !7912)
!7923 = !DILocation(line: 5845, column: 3, scope: !7912)
!7924 = !DILocation(line: 5847, column: 27, scope: !7912)
!7925 = !DILocation(line: 5847, column: 36, scope: !7912)
!7926 = !DILocation(line: 5847, column: 45, scope: !7912)
!7927 = !DILocation(line: 5847, column: 10, scope: !7912)
!7928 = !DILocation(line: 5847, column: 3, scope: !7912)
!7929 = !DILocation(line: 5853, column: 3, scope: !7912)
!7930 = !DILocation(line: 5856, column: 1, scope: !7902)
!7931 = distinct !DISubprogram(name: "_ni_get_valid_routes", scope: !209, file: !209, line: 5961, type: !4273, scopeLine: 5964, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!7932 = !DILocalVariable(name: "dev", arg: 1, scope: !7931, file: !209, line: 5961, type: !3350)
!7933 = !DILocation(line: 5961, column: 64, scope: !7931)
!7934 = !DILocalVariable(name: "n_pairs", arg: 2, scope: !7931, file: !209, line: 5962, type: !7)
!7935 = !DILocation(line: 5962, column: 20, scope: !7931)
!7936 = !DILocalVariable(name: "pair_data", arg: 3, scope: !7931, file: !209, line: 5963, type: !1365)
!7937 = !DILocation(line: 5963, column: 21, scope: !7931)
!7938 = !DILocalVariable(name: "devpriv", scope: !7931, file: !209, line: 5965, type: !4731)
!7939 = !DILocation(line: 5965, column: 21, scope: !7931)
!7940 = !DILocation(line: 5965, column: 31, scope: !7931)
!7941 = !DILocation(line: 5965, column: 36, scope: !7931)
!7942 = !DILocation(line: 5967, column: 30, scope: !7931)
!7943 = !DILocation(line: 5967, column: 39, scope: !7931)
!7944 = !DILocation(line: 5967, column: 55, scope: !7931)
!7945 = !DILocation(line: 5968, column: 8, scope: !7931)
!7946 = !DILocation(line: 5967, column: 9, scope: !7931)
!7947 = !DILocation(line: 5967, column: 2, scope: !7931)
!7948 = distinct !DISubprogram(name: "ni_ai_insn_read", scope: !209, file: !209, line: 1822, type: !4216, scopeLine: 1826, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!7949 = !DILocalVariable(name: "dev", arg: 1, scope: !7948, file: !209, line: 1822, type: !3350)
!7950 = !DILocation(line: 1822, column: 50, scope: !7948)
!7951 = !DILocalVariable(name: "s", arg: 2, scope: !7948, file: !209, line: 1823, type: !4119)
!7952 = !DILocation(line: 1823, column: 32, scope: !7948)
!7953 = !DILocalVariable(name: "insn", arg: 3, scope: !7948, file: !209, line: 1824, type: !4218)
!7954 = !DILocation(line: 1824, column: 27, scope: !7948)
!7955 = !DILocalVariable(name: "data", arg: 4, scope: !7948, file: !209, line: 1825, type: !1365)
!7956 = !DILocation(line: 1825, column: 21, scope: !7948)
!7957 = !DILocalVariable(name: "devpriv", scope: !7948, file: !209, line: 1827, type: !4731)
!7958 = !DILocation(line: 1827, column: 21, scope: !7948)
!7959 = !DILocation(line: 1827, column: 31, scope: !7948)
!7960 = !DILocation(line: 1827, column: 36, scope: !7948)
!7961 = !DILocalVariable(name: "mask", scope: !7948, file: !209, line: 1828, type: !7)
!7962 = !DILocation(line: 1828, column: 15, scope: !7948)
!7963 = !DILocation(line: 1828, column: 22, scope: !7948)
!7964 = !DILocation(line: 1828, column: 25, scope: !7948)
!7965 = !DILocalVariable(name: "i", scope: !7948, file: !209, line: 1829, type: !429)
!7966 = !DILocation(line: 1829, column: 6, scope: !7948)
!7967 = !DILocalVariable(name: "n", scope: !7948, file: !209, line: 1829, type: !429)
!7968 = !DILocation(line: 1829, column: 9, scope: !7948)
!7969 = !DILocalVariable(name: "signbits", scope: !7948, file: !209, line: 1830, type: !7)
!7970 = !DILocation(line: 1830, column: 15, scope: !7948)
!7971 = !DILocalVariable(name: "d", scope: !7948, file: !209, line: 1831, type: !7)
!7972 = !DILocation(line: 1831, column: 15, scope: !7948)
!7973 = !DILocation(line: 1833, column: 27, scope: !7948)
!7974 = !DILocation(line: 1833, column: 32, scope: !7948)
!7975 = !DILocation(line: 1833, column: 39, scope: !7948)
!7976 = !DILocation(line: 1833, column: 45, scope: !7948)
!7977 = !DILocation(line: 1833, column: 2, scope: !7948)
!7978 = !DILocation(line: 1835, column: 19, scope: !7948)
!7979 = !DILocation(line: 1835, column: 2, scope: !7948)
!7980 = !DILocation(line: 1837, column: 13, scope: !7948)
!7981 = !DILocation(line: 1837, column: 22, scope: !7948)
!7982 = !DILocation(line: 1837, column: 11, scope: !7948)
!7983 = !DILocation(line: 1838, column: 6, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7948, file: !209, line: 1838, column: 6)
!7985 = !DILocation(line: 1838, column: 15, scope: !7984)
!7986 = !DILocation(line: 1838, column: 6, scope: !7948)
!7987 = !DILocation(line: 1839, column: 10, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7989, file: !209, line: 1839, column: 3)
!7989 = distinct !DILexicalBlock(scope: !7984, file: !209, line: 1838, column: 24)
!7990 = !DILocation(line: 1839, column: 8, scope: !7988)
!7991 = !DILocation(line: 1839, column: 15, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7988, file: !209, line: 1839, column: 3)
!7993 = !DILocation(line: 1839, column: 17, scope: !7992)
!7994 = !DILocation(line: 1839, column: 3, scope: !7988)
!7995 = !DILocation(line: 1840, column: 18, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7992, file: !209, line: 1839, column: 45)
!7997 = !DILocation(line: 1840, column: 4, scope: !7996)
!7998 = !DILocation(line: 1842, column: 4, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !8000, file: !209, line: 1842, column: 4)
!8000 = distinct !DILexicalBlock(scope: !8001, file: !209, line: 1842, column: 4)
!8001 = distinct !DILexicalBlock(scope: !8002, file: !209, line: 1842, column: 4)
!8002 = distinct !DILexicalBlock(scope: !7996, file: !209, line: 1842, column: 4)
!8003 = !DILocation(line: 1843, column: 3, scope: !7996)
!8004 = !DILocation(line: 1839, column: 41, scope: !7992)
!8005 = !DILocation(line: 1839, column: 3, scope: !7992)
!8006 = distinct !{!8006, !7994, !8007}
!8007 = !DILocation(line: 1843, column: 3, scope: !7988)
!8008 = !DILocation(line: 1844, column: 10, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !7989, file: !209, line: 1844, column: 3)
!8010 = !DILocation(line: 1844, column: 8, scope: !8009)
!8011 = !DILocation(line: 1844, column: 15, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8009, file: !209, line: 1844, column: 3)
!8013 = !DILocation(line: 1844, column: 19, scope: !8012)
!8014 = !DILocation(line: 1844, column: 25, scope: !8012)
!8015 = !DILocation(line: 1844, column: 17, scope: !8012)
!8016 = !DILocation(line: 1844, column: 3, scope: !8009)
!8017 = !DILocation(line: 1845, column: 18, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8012, file: !209, line: 1844, column: 33)
!8019 = !DILocation(line: 1845, column: 4, scope: !8018)
!8020 = !DILocation(line: 1848, column: 6, scope: !8018)
!8021 = !DILocation(line: 1849, column: 11, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8018, file: !209, line: 1849, column: 4)
!8023 = !DILocation(line: 1849, column: 9, scope: !8022)
!8024 = !DILocation(line: 1849, column: 16, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8022, file: !209, line: 1849, column: 4)
!8026 = !DILocation(line: 1849, column: 18, scope: !8025)
!8027 = !DILocation(line: 1849, column: 4, scope: !8022)
!8028 = !DILocation(line: 1850, column: 18, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !8030, file: !209, line: 1850, column: 9)
!8030 = distinct !DILexicalBlock(scope: !8025, file: !209, line: 1849, column: 37)
!8031 = !DILocation(line: 1850, column: 9, scope: !8029)
!8032 = !DILocation(line: 1850, column: 40, scope: !8029)
!8033 = !DILocation(line: 1850, column: 9, scope: !8030)
!8034 = !DILocation(line: 1851, column: 19, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8029, file: !209, line: 1850, column: 48)
!8036 = !DILocation(line: 1851, column: 10, scope: !8035)
!8037 = !DILocation(line: 1851, column: 8, scope: !8035)
!8038 = !DILocation(line: 1853, column: 8, scope: !8035)
!8039 = !DILocation(line: 1854, column: 8, scope: !8035)
!8040 = !DILocation(line: 1855, column: 6, scope: !8035)
!8041 = !DILocation(line: 1857, column: 24, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8030, file: !209, line: 1857, column: 9)
!8043 = !DILocation(line: 1857, column: 11, scope: !8042)
!8044 = !DILocation(line: 1857, column: 51, scope: !8042)
!8045 = !DILocation(line: 1857, column: 9, scope: !8030)
!8046 = !DILocation(line: 1859, column: 19, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8042, file: !209, line: 1858, column: 37)
!8048 = !DILocation(line: 1859, column: 10, scope: !8047)
!8049 = !DILocation(line: 1859, column: 8, scope: !8047)
!8050 = !DILocation(line: 1861, column: 8, scope: !8047)
!8051 = !DILocation(line: 1862, column: 6, scope: !8047)
!8052 = !DILocation(line: 1864, column: 4, scope: !8030)
!8053 = !DILocation(line: 1849, column: 33, scope: !8025)
!8054 = !DILocation(line: 1849, column: 4, scope: !8025)
!8055 = distinct !{!8055, !8027, !8056}
!8056 = !DILocation(line: 1864, column: 4, scope: !8022)
!8057 = !DILocation(line: 1865, column: 8, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8018, file: !209, line: 1865, column: 8)
!8059 = !DILocation(line: 1865, column: 10, scope: !8058)
!8060 = !DILocation(line: 1865, column: 8, scope: !8018)
!8061 = !DILocation(line: 1866, column: 5, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8058, file: !209, line: 1865, column: 25)
!8063 = !DILocation(line: 1867, column: 5, scope: !8062)
!8064 = !DILocation(line: 1869, column: 9, scope: !8018)
!8065 = !DILocation(line: 1869, column: 6, scope: !8018)
!8066 = !DILocation(line: 1870, column: 14, scope: !8018)
!8067 = !DILocation(line: 1870, column: 16, scope: !8018)
!8068 = !DILocation(line: 1870, column: 4, scope: !8018)
!8069 = !DILocation(line: 1870, column: 9, scope: !8018)
!8070 = !DILocation(line: 1870, column: 12, scope: !8018)
!8071 = !DILocation(line: 1871, column: 3, scope: !8018)
!8072 = !DILocation(line: 1844, column: 29, scope: !8012)
!8073 = !DILocation(line: 1844, column: 3, scope: !8012)
!8074 = distinct !{!8074, !8016, !8075}
!8075 = !DILocation(line: 1871, column: 3, scope: !8009)
!8076 = !DILocation(line: 1872, column: 2, scope: !7989)
!8077 = !DILocation(line: 1872, column: 13, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !7984, file: !209, line: 1872, column: 13)
!8079 = !DILocation(line: 1872, column: 22, scope: !8078)
!8080 = !DILocation(line: 1872, column: 13, scope: !7984)
!8081 = !DILocation(line: 1873, column: 10, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8083, file: !209, line: 1873, column: 3)
!8083 = distinct !DILexicalBlock(scope: !8078, file: !209, line: 1872, column: 31)
!8084 = !DILocation(line: 1873, column: 8, scope: !8082)
!8085 = !DILocation(line: 1873, column: 15, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8082, file: !209, line: 1873, column: 3)
!8087 = !DILocation(line: 1873, column: 19, scope: !8086)
!8088 = !DILocation(line: 1873, column: 25, scope: !8086)
!8089 = !DILocation(line: 1873, column: 17, scope: !8086)
!8090 = !DILocation(line: 1873, column: 3, scope: !8082)
!8091 = !DILocation(line: 1874, column: 18, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8086, file: !209, line: 1873, column: 33)
!8093 = !DILocation(line: 1874, column: 4, scope: !8092)
!8094 = !DILocation(line: 1882, column: 6, scope: !8092)
!8095 = !DILocation(line: 1883, column: 11, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8092, file: !209, line: 1883, column: 4)
!8097 = !DILocation(line: 1883, column: 9, scope: !8096)
!8098 = !DILocation(line: 1883, column: 16, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8096, file: !209, line: 1883, column: 4)
!8100 = !DILocation(line: 1883, column: 18, scope: !8099)
!8101 = !DILocation(line: 1883, column: 4, scope: !8096)
!8102 = !DILocation(line: 1884, column: 18, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8104, file: !209, line: 1884, column: 9)
!8104 = distinct !DILexicalBlock(scope: !8099, file: !209, line: 1883, column: 37)
!8105 = !DILocation(line: 1884, column: 9, scope: !8103)
!8106 = !DILocation(line: 1884, column: 50, scope: !8103)
!8107 = !DILocation(line: 1884, column: 9, scope: !8104)
!8108 = !DILocation(line: 1887, column: 16, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !8103, file: !209, line: 1885, column: 15)
!8110 = !DILocation(line: 1887, column: 6, scope: !8109)
!8111 = !DILocation(line: 1889, column: 19, scope: !8109)
!8112 = !DILocation(line: 1889, column: 10, scope: !8109)
!8113 = !DILocation(line: 1889, column: 8, scope: !8109)
!8114 = !DILocation(line: 1891, column: 6, scope: !8109)
!8115 = !DILocation(line: 1893, column: 4, scope: !8104)
!8116 = !DILocation(line: 1883, column: 33, scope: !8099)
!8117 = !DILocation(line: 1883, column: 4, scope: !8099)
!8118 = distinct !{!8118, !8101, !8119}
!8119 = !DILocation(line: 1893, column: 4, scope: !8096)
!8120 = !DILocation(line: 1894, column: 8, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8092, file: !209, line: 1894, column: 8)
!8122 = !DILocation(line: 1894, column: 10, scope: !8121)
!8123 = !DILocation(line: 1894, column: 8, scope: !8092)
!8124 = !DILocation(line: 1895, column: 5, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8121, file: !209, line: 1894, column: 25)
!8126 = !DILocation(line: 1896, column: 5, scope: !8125)
!8127 = !DILocation(line: 1898, column: 17, scope: !8092)
!8128 = !DILocation(line: 1898, column: 19, scope: !8092)
!8129 = !DILocation(line: 1898, column: 26, scope: !8092)
!8130 = !DILocation(line: 1898, column: 38, scope: !8092)
!8131 = !DILocation(line: 1898, column: 36, scope: !8092)
!8132 = !DILocation(line: 1898, column: 48, scope: !8092)
!8133 = !DILocation(line: 1898, column: 4, scope: !8092)
!8134 = !DILocation(line: 1898, column: 9, scope: !8092)
!8135 = !DILocation(line: 1898, column: 12, scope: !8092)
!8136 = !DILocation(line: 1899, column: 3, scope: !8092)
!8137 = !DILocation(line: 1873, column: 29, scope: !8086)
!8138 = !DILocation(line: 1873, column: 3, scope: !8086)
!8139 = distinct !{!8139, !8090, !8140}
!8140 = !DILocation(line: 1899, column: 3, scope: !8082)
!8141 = !DILocation(line: 1900, column: 2, scope: !8083)
!8142 = !DILocation(line: 1901, column: 10, scope: !8143)
!8143 = distinct !DILexicalBlock(scope: !8144, file: !209, line: 1901, column: 3)
!8144 = distinct !DILexicalBlock(scope: !8078, file: !209, line: 1900, column: 9)
!8145 = !DILocation(line: 1901, column: 8, scope: !8143)
!8146 = !DILocation(line: 1901, column: 15, scope: !8147)
!8147 = distinct !DILexicalBlock(scope: !8143, file: !209, line: 1901, column: 3)
!8148 = !DILocation(line: 1901, column: 19, scope: !8147)
!8149 = !DILocation(line: 1901, column: 25, scope: !8147)
!8150 = !DILocation(line: 1901, column: 17, scope: !8147)
!8151 = !DILocation(line: 1901, column: 3, scope: !8143)
!8152 = !DILocation(line: 1902, column: 18, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8147, file: !209, line: 1901, column: 33)
!8154 = !DILocation(line: 1902, column: 4, scope: !8153)
!8155 = !DILocation(line: 1904, column: 11, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8153, file: !209, line: 1904, column: 4)
!8157 = !DILocation(line: 1904, column: 9, scope: !8156)
!8158 = !DILocation(line: 1904, column: 16, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8156, file: !209, line: 1904, column: 4)
!8160 = !DILocation(line: 1904, column: 18, scope: !8159)
!8161 = !DILocation(line: 1904, column: 4, scope: !8156)
!8162 = !DILocation(line: 1905, column: 24, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8164, file: !209, line: 1905, column: 9)
!8164 = distinct !DILexicalBlock(scope: !8159, file: !209, line: 1904, column: 37)
!8165 = !DILocation(line: 1905, column: 11, scope: !8163)
!8166 = !DILocation(line: 1905, column: 51, scope: !8163)
!8167 = !DILocation(line: 1905, column: 9, scope: !8164)
!8168 = !DILocation(line: 1907, column: 6, scope: !8163)
!8169 = !DILocation(line: 1908, column: 4, scope: !8164)
!8170 = !DILocation(line: 1904, column: 33, scope: !8159)
!8171 = !DILocation(line: 1904, column: 4, scope: !8159)
!8172 = distinct !{!8172, !8161, !8173}
!8173 = !DILocation(line: 1908, column: 4, scope: !8156)
!8174 = !DILocation(line: 1909, column: 8, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8153, file: !209, line: 1909, column: 8)
!8176 = !DILocation(line: 1909, column: 10, scope: !8175)
!8177 = !DILocation(line: 1909, column: 8, scope: !8153)
!8178 = !DILocation(line: 1910, column: 5, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8175, file: !209, line: 1909, column: 25)
!8180 = !DILocation(line: 1911, column: 5, scope: !8179)
!8181 = !DILocation(line: 1913, column: 8, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8153, file: !209, line: 1913, column: 8)
!8183 = !DILocation(line: 1913, column: 17, scope: !8182)
!8184 = !DILocation(line: 1913, column: 8, scope: !8153)
!8185 = !DILocation(line: 1914, column: 18, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8182, file: !209, line: 1913, column: 30)
!8187 = !DILocation(line: 1914, column: 9, scope: !8186)
!8188 = !DILocation(line: 1914, column: 7, scope: !8186)
!8189 = !DILocation(line: 1915, column: 10, scope: !8186)
!8190 = !DILocation(line: 1915, column: 7, scope: !8186)
!8191 = !DILocation(line: 1916, column: 15, scope: !8186)
!8192 = !DILocation(line: 1916, column: 5, scope: !8186)
!8193 = !DILocation(line: 1916, column: 10, scope: !8186)
!8194 = !DILocation(line: 1916, column: 13, scope: !8186)
!8195 = !DILocation(line: 1917, column: 4, scope: !8186)
!8196 = !DILocation(line: 1918, column: 18, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8182, file: !209, line: 1917, column: 11)
!8198 = !DILocation(line: 1918, column: 9, scope: !8197)
!8199 = !DILocation(line: 1918, column: 7, scope: !8197)
!8200 = !DILocation(line: 1919, column: 10, scope: !8197)
!8201 = !DILocation(line: 1919, column: 7, scope: !8197)
!8202 = !DILocation(line: 1920, column: 15, scope: !8197)
!8203 = !DILocation(line: 1920, column: 17, scope: !8197)
!8204 = !DILocation(line: 1920, column: 5, scope: !8197)
!8205 = !DILocation(line: 1920, column: 10, scope: !8197)
!8206 = !DILocation(line: 1920, column: 13, scope: !8197)
!8207 = !DILocation(line: 1922, column: 3, scope: !8153)
!8208 = !DILocation(line: 1901, column: 29, scope: !8147)
!8209 = !DILocation(line: 1901, column: 3, scope: !8147)
!8210 = distinct !{!8210, !8151, !8211}
!8211 = !DILocation(line: 1922, column: 3, scope: !8143)
!8212 = !DILocation(line: 1924, column: 9, scope: !7948)
!8213 = !DILocation(line: 1924, column: 15, scope: !7948)
!8214 = !DILocation(line: 1924, column: 2, scope: !7948)
!8215 = !DILocation(line: 1925, column: 1, scope: !7948)
!8216 = distinct !DISubprogram(name: "ni_ai_insn_config", scope: !209, file: !209, line: 2465, type: !4216, scopeLine: 2468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!8217 = !DILocalVariable(name: "dev", arg: 1, scope: !8216, file: !209, line: 2465, type: !3350)
!8218 = !DILocation(line: 2465, column: 52, scope: !8216)
!8219 = !DILocalVariable(name: "s", arg: 2, scope: !8216, file: !209, line: 2466, type: !4119)
!8220 = !DILocation(line: 2466, column: 34, scope: !8216)
!8221 = !DILocalVariable(name: "insn", arg: 3, scope: !8216, file: !209, line: 2467, type: !4218)
!8222 = !DILocation(line: 2467, column: 29, scope: !8216)
!8223 = !DILocalVariable(name: "data", arg: 4, scope: !8216, file: !209, line: 2467, type: !1365)
!8224 = !DILocation(line: 2467, column: 49, scope: !8216)
!8225 = !DILocalVariable(name: "board", scope: !8216, file: !209, line: 2469, type: !4959)
!8226 = !DILocation(line: 2469, column: 32, scope: !8216)
!8227 = !DILocation(line: 2469, column: 40, scope: !8216)
!8228 = !DILocation(line: 2469, column: 45, scope: !8216)
!8229 = !DILocalVariable(name: "devpriv", scope: !8216, file: !209, line: 2470, type: !4731)
!8230 = !DILocation(line: 2470, column: 21, scope: !8216)
!8231 = !DILocation(line: 2470, column: 31, scope: !8216)
!8232 = !DILocation(line: 2470, column: 36, scope: !8216)
!8233 = !DILocation(line: 2472, column: 6, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8216, file: !209, line: 2472, column: 6)
!8235 = !DILocation(line: 2472, column: 12, scope: !8234)
!8236 = !DILocation(line: 2472, column: 14, scope: !8234)
!8237 = !DILocation(line: 2472, column: 6, scope: !8216)
!8238 = !DILocation(line: 2473, column: 3, scope: !8234)
!8239 = !DILocation(line: 2475, column: 10, scope: !8216)
!8240 = !DILocation(line: 2475, column: 2, scope: !8216)
!8241 = !DILocation(line: 2477, column: 7, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8243, file: !209, line: 2477, column: 7)
!8243 = distinct !DILexicalBlock(scope: !8216, file: !209, line: 2475, column: 19)
!8244 = !DILocation(line: 2477, column: 16, scope: !8242)
!8245 = !DILocation(line: 2477, column: 7, scope: !8243)
!8246 = !DILocation(line: 2478, column: 8, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8248, file: !209, line: 2478, column: 8)
!8248 = distinct !DILexicalBlock(scope: !8242, file: !209, line: 2477, column: 29)
!8249 = !DILocation(line: 2478, column: 16, scope: !8247)
!8250 = !DILocation(line: 2478, column: 8, scope: !8248)
!8251 = !DILocation(line: 2479, column: 5, scope: !8247)
!8252 = !DILocation(line: 2480, column: 31, scope: !8248)
!8253 = !DILocation(line: 2480, column: 4, scope: !8248)
!8254 = !DILocation(line: 2480, column: 13, scope: !8248)
!8255 = !DILocation(line: 2480, column: 29, scope: !8248)
!8256 = !DILocation(line: 2481, column: 3, scope: !8248)
!8257 = !DILocation(line: 2481, column: 14, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8242, file: !209, line: 2481, column: 14)
!8259 = !DILocation(line: 2481, column: 23, scope: !8258)
!8260 = !DILocation(line: 2481, column: 14, scope: !8242)
!8261 = !DILocalVariable(name: "calib_source", scope: !8262, file: !209, line: 2482, type: !7)
!8262 = distinct !DILexicalBlock(scope: !8258, file: !209, line: 2481, column: 32)
!8263 = !DILocation(line: 2482, column: 17, scope: !8262)
!8264 = !DILocation(line: 2484, column: 19, scope: !8262)
!8265 = !DILocation(line: 2484, column: 27, scope: !8262)
!8266 = !DILocation(line: 2484, column: 17, scope: !8262)
!8267 = !DILocation(line: 2486, column: 31, scope: !8262)
!8268 = !DILocation(line: 2486, column: 4, scope: !8262)
!8269 = !DILocation(line: 2486, column: 13, scope: !8262)
!8270 = !DILocation(line: 2486, column: 29, scope: !8262)
!8271 = !DILocation(line: 2487, column: 14, scope: !8262)
!8272 = !DILocation(line: 2487, column: 19, scope: !8262)
!8273 = !DILocation(line: 2487, column: 4, scope: !8262)
!8274 = !DILocation(line: 2488, column: 3, scope: !8262)
!8275 = !DILocalVariable(name: "calib_source", scope: !8276, file: !209, line: 2489, type: !7)
!8276 = distinct !DILexicalBlock(scope: !8258, file: !209, line: 2488, column: 10)
!8277 = !DILocation(line: 2489, column: 17, scope: !8276)
!8278 = !DILocalVariable(name: "calib_source_adjust", scope: !8276, file: !209, line: 2490, type: !7)
!8279 = !DILocation(line: 2490, column: 17, scope: !8276)
!8280 = !DILocation(line: 2492, column: 19, scope: !8276)
!8281 = !DILocation(line: 2492, column: 27, scope: !8276)
!8282 = !DILocation(line: 2492, column: 17, scope: !8276)
!8283 = !DILocation(line: 2493, column: 27, scope: !8276)
!8284 = !DILocation(line: 2493, column: 35, scope: !8276)
!8285 = !DILocation(line: 2493, column: 41, scope: !8276)
!8286 = !DILocation(line: 2493, column: 24, scope: !8276)
!8287 = !DILocation(line: 2495, column: 8, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8276, file: !209, line: 2495, column: 8)
!8289 = !DILocation(line: 2495, column: 21, scope: !8288)
!8290 = !DILocation(line: 2495, column: 8, scope: !8276)
!8291 = !DILocation(line: 2496, column: 5, scope: !8288)
!8292 = !DILocation(line: 2497, column: 31, scope: !8276)
!8293 = !DILocation(line: 2497, column: 4, scope: !8276)
!8294 = !DILocation(line: 2497, column: 13, scope: !8276)
!8295 = !DILocation(line: 2497, column: 29, scope: !8276)
!8296 = !DILocation(line: 2498, column: 8, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8276, file: !209, line: 2498, column: 8)
!8298 = !DILocation(line: 2498, column: 17, scope: !8297)
!8299 = !DILocation(line: 2498, column: 8, scope: !8276)
!8300 = !DILocation(line: 2499, column: 15, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8297, file: !209, line: 2498, column: 26)
!8302 = !DILocation(line: 2499, column: 20, scope: !8301)
!8303 = !DILocation(line: 2499, column: 5, scope: !8301)
!8304 = !DILocation(line: 2501, column: 4, scope: !8301)
!8305 = !DILocation(line: 2503, column: 3, scope: !8243)
!8306 = !DILocation(line: 2507, column: 38, scope: !8243)
!8307 = !DILocation(line: 2507, column: 43, scope: !8243)
!8308 = !DILocation(line: 2507, column: 13, scope: !8243)
!8309 = !DILocation(line: 2507, column: 3, scope: !8243)
!8310 = !DILocation(line: 2507, column: 11, scope: !8243)
!8311 = !DILocation(line: 2508, column: 7, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8243, file: !209, line: 2508, column: 7)
!8313 = !DILocation(line: 2508, column: 16, scope: !8312)
!8314 = !DILocation(line: 2508, column: 24, scope: !8312)
!8315 = !DILocation(line: 2508, column: 27, scope: !8312)
!8316 = !DILocation(line: 2508, column: 36, scope: !8312)
!8317 = !DILocation(line: 2508, column: 7, scope: !8243)
!8318 = !DILocation(line: 2509, column: 4, scope: !8312)
!8319 = !DILocation(line: 2509, column: 12, scope: !8312)
!8320 = !DILocation(line: 2511, column: 14, scope: !8312)
!8321 = !DILocation(line: 2511, column: 21, scope: !8312)
!8322 = !DILocation(line: 2511, column: 4, scope: !8312)
!8323 = !DILocation(line: 2511, column: 12, scope: !8312)
!8324 = !DILocation(line: 2512, column: 3, scope: !8243)
!8325 = !DILocation(line: 2514, column: 3, scope: !8243)
!8326 = !DILocation(line: 2517, column: 2, scope: !8216)
!8327 = !DILocation(line: 2518, column: 1, scope: !8216)
!8328 = distinct !DISubprogram(name: "ni_ai_cmdtest", scope: !209, file: !209, line: 2003, type: !4237, scopeLine: 2005, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!8329 = !DILocalVariable(name: "dev", arg: 1, scope: !8328, file: !209, line: 2003, type: !3350)
!8330 = !DILocation(line: 2003, column: 48, scope: !8328)
!8331 = !DILocalVariable(name: "s", arg: 2, scope: !8328, file: !209, line: 2003, type: !4119)
!8332 = !DILocation(line: 2003, column: 78, scope: !8328)
!8333 = !DILocalVariable(name: "cmd", arg: 3, scope: !8328, file: !209, line: 2004, type: !4239)
!8334 = !DILocation(line: 2004, column: 24, scope: !8328)
!8335 = !DILocalVariable(name: "board", scope: !8328, file: !209, line: 2006, type: !4959)
!8336 = !DILocation(line: 2006, column: 32, scope: !8328)
!8337 = !DILocation(line: 2006, column: 40, scope: !8328)
!8338 = !DILocation(line: 2006, column: 45, scope: !8328)
!8339 = !DILocalVariable(name: "devpriv", scope: !8328, file: !209, line: 2007, type: !4731)
!8340 = !DILocation(line: 2007, column: 21, scope: !8328)
!8341 = !DILocation(line: 2007, column: 31, scope: !8328)
!8342 = !DILocation(line: 2007, column: 36, scope: !8328)
!8343 = !DILocalVariable(name: "err", scope: !8328, file: !209, line: 2008, type: !429)
!8344 = !DILocation(line: 2008, column: 6, scope: !8328)
!8345 = !DILocalVariable(name: "sources", scope: !8328, file: !209, line: 2009, type: !7)
!8346 = !DILocation(line: 2009, column: 15, scope: !8328)
!8347 = !DILocation(line: 2013, column: 35, scope: !8328)
!8348 = !DILocation(line: 2013, column: 40, scope: !8328)
!8349 = !DILocation(line: 2013, column: 9, scope: !8328)
!8350 = !DILocation(line: 2013, column: 6, scope: !8328)
!8351 = !DILocation(line: 2015, column: 35, scope: !8328)
!8352 = !DILocation(line: 2015, column: 40, scope: !8328)
!8353 = !DILocation(line: 2015, column: 9, scope: !8328)
!8354 = !DILocation(line: 2015, column: 6, scope: !8328)
!8355 = !DILocation(line: 2018, column: 10, scope: !8328)
!8356 = !DILocation(line: 2019, column: 6, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8328, file: !209, line: 2019, column: 6)
!8358 = !DILocation(line: 2019, column: 15, scope: !8357)
!8359 = !DILocation(line: 2019, column: 23, scope: !8357)
!8360 = !DILocation(line: 2019, column: 26, scope: !8357)
!8361 = !DILocation(line: 2019, column: 35, scope: !8357)
!8362 = !DILocation(line: 2019, column: 6, scope: !8328)
!8363 = !DILocation(line: 2020, column: 11, scope: !8357)
!8364 = !DILocation(line: 2020, column: 3, scope: !8357)
!8365 = !DILocation(line: 2021, column: 35, scope: !8328)
!8366 = !DILocation(line: 2021, column: 40, scope: !8328)
!8367 = !DILocation(line: 2021, column: 53, scope: !8328)
!8368 = !DILocation(line: 2021, column: 9, scope: !8328)
!8369 = !DILocation(line: 2021, column: 6, scope: !8328)
!8370 = !DILocation(line: 2023, column: 35, scope: !8328)
!8371 = !DILocation(line: 2023, column: 40, scope: !8328)
!8372 = !DILocation(line: 2023, column: 9, scope: !8328)
!8373 = !DILocation(line: 2023, column: 6, scope: !8328)
!8374 = !DILocation(line: 2024, column: 35, scope: !8328)
!8375 = !DILocation(line: 2024, column: 40, scope: !8328)
!8376 = !DILocation(line: 2024, column: 9, scope: !8328)
!8377 = !DILocation(line: 2024, column: 6, scope: !8328)
!8378 = !DILocation(line: 2026, column: 6, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8328, file: !209, line: 2026, column: 6)
!8380 = !DILocation(line: 2026, column: 6, scope: !8328)
!8381 = !DILocation(line: 2027, column: 3, scope: !8379)
!8382 = !DILocation(line: 2031, column: 40, scope: !8328)
!8383 = !DILocation(line: 2031, column: 45, scope: !8328)
!8384 = !DILocation(line: 2031, column: 9, scope: !8328)
!8385 = !DILocation(line: 2031, column: 6, scope: !8328)
!8386 = !DILocation(line: 2032, column: 40, scope: !8328)
!8387 = !DILocation(line: 2032, column: 45, scope: !8328)
!8388 = !DILocation(line: 2032, column: 9, scope: !8328)
!8389 = !DILocation(line: 2032, column: 6, scope: !8328)
!8390 = !DILocation(line: 2033, column: 40, scope: !8328)
!8391 = !DILocation(line: 2033, column: 45, scope: !8328)
!8392 = !DILocation(line: 2033, column: 9, scope: !8328)
!8393 = !DILocation(line: 2033, column: 6, scope: !8328)
!8394 = !DILocation(line: 2034, column: 40, scope: !8328)
!8395 = !DILocation(line: 2034, column: 45, scope: !8328)
!8396 = !DILocation(line: 2034, column: 9, scope: !8328)
!8397 = !DILocation(line: 2034, column: 6, scope: !8328)
!8398 = !DILocation(line: 2038, column: 6, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8328, file: !209, line: 2038, column: 6)
!8400 = !DILocation(line: 2038, column: 6, scope: !8328)
!8401 = !DILocation(line: 2039, column: 3, scope: !8399)
!8402 = !DILocation(line: 2043, column: 10, scope: !8328)
!8403 = !DILocation(line: 2043, column: 15, scope: !8328)
!8404 = !DILocation(line: 2043, column: 2, scope: !8328)
!8405 = !DILocation(line: 2046, column: 39, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8328, file: !209, line: 2043, column: 26)
!8407 = !DILocation(line: 2046, column: 44, scope: !8406)
!8408 = !DILocation(line: 2046, column: 10, scope: !8406)
!8409 = !DILocation(line: 2046, column: 7, scope: !8406)
!8410 = !DILocation(line: 2047, column: 3, scope: !8406)
!8411 = !DILocation(line: 2049, column: 37, scope: !8406)
!8412 = !DILocation(line: 2051, column: 10, scope: !8406)
!8413 = !DILocation(line: 2051, column: 19, scope: !8406)
!8414 = !DILocation(line: 2049, column: 10, scope: !8406)
!8415 = !DILocation(line: 2049, column: 7, scope: !8406)
!8416 = !DILocation(line: 2052, column: 3, scope: !8406)
!8417 = !DILocation(line: 2055, column: 6, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8328, file: !209, line: 2055, column: 6)
!8419 = !DILocation(line: 2055, column: 11, scope: !8418)
!8420 = !DILocation(line: 2055, column: 26, scope: !8418)
!8421 = !DILocation(line: 2055, column: 6, scope: !8328)
!8422 = !DILocation(line: 2056, column: 40, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8418, file: !209, line: 2055, column: 41)
!8424 = !DILocation(line: 2056, column: 45, scope: !8423)
!8425 = !DILocation(line: 2057, column: 29, scope: !8423)
!8426 = !DILocation(line: 2057, column: 34, scope: !8423)
!8427 = !DILocation(line: 2057, column: 39, scope: !8423)
!8428 = !DILocation(line: 2057, column: 4, scope: !8423)
!8429 = !DILocation(line: 2056, column: 10, scope: !8423)
!8430 = !DILocation(line: 2056, column: 7, scope: !8423)
!8431 = !DILocation(line: 2058, column: 40, scope: !8423)
!8432 = !DILocation(line: 2058, column: 45, scope: !8423)
!8433 = !DILocation(line: 2059, column: 11, scope: !8423)
!8434 = !DILocation(line: 2059, column: 20, scope: !8423)
!8435 = !DILocation(line: 2059, column: 29, scope: !8423)
!8436 = !DILocation(line: 2058, column: 10, scope: !8423)
!8437 = !DILocation(line: 2058, column: 7, scope: !8423)
!8438 = !DILocation(line: 2061, column: 2, scope: !8423)
!8439 = !DILocation(line: 2061, column: 13, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8418, file: !209, line: 2061, column: 13)
!8441 = !DILocation(line: 2061, column: 18, scope: !8440)
!8442 = !DILocation(line: 2061, column: 33, scope: !8440)
!8443 = !DILocation(line: 2061, column: 13, scope: !8418)
!8444 = !DILocation(line: 2063, column: 37, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8440, file: !209, line: 2061, column: 46)
!8446 = !DILocation(line: 2065, column: 10, scope: !8445)
!8447 = !DILocation(line: 2065, column: 19, scope: !8445)
!8448 = !DILocation(line: 2063, column: 10, scope: !8445)
!8449 = !DILocation(line: 2063, column: 7, scope: !8445)
!8450 = !DILocation(line: 2066, column: 2, scope: !8445)
!8451 = !DILocation(line: 2067, column: 39, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8440, file: !209, line: 2066, column: 9)
!8453 = !DILocation(line: 2067, column: 44, scope: !8452)
!8454 = !DILocation(line: 2067, column: 10, scope: !8452)
!8455 = !DILocation(line: 2067, column: 7, scope: !8452)
!8456 = !DILocation(line: 2070, column: 6, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !8328, file: !209, line: 2070, column: 6)
!8458 = !DILocation(line: 2070, column: 11, scope: !8457)
!8459 = !DILocation(line: 2070, column: 23, scope: !8457)
!8460 = !DILocation(line: 2070, column: 6, scope: !8328)
!8461 = !DILocation(line: 2071, column: 7, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8463, file: !209, line: 2071, column: 7)
!8463 = distinct !DILexicalBlock(scope: !8457, file: !209, line: 2070, column: 38)
!8464 = !DILocation(line: 2071, column: 16, scope: !8462)
!8465 = !DILocation(line: 2071, column: 24, scope: !8462)
!8466 = !DILocation(line: 2071, column: 27, scope: !8462)
!8467 = !DILocation(line: 2071, column: 36, scope: !8462)
!8468 = !DILocation(line: 2071, column: 7, scope: !8463)
!8469 = !DILocation(line: 2072, column: 40, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8462, file: !209, line: 2071, column: 45)
!8471 = !DILocation(line: 2072, column: 45, scope: !8470)
!8472 = !DILocation(line: 2072, column: 11, scope: !8470)
!8473 = !DILocation(line: 2072, column: 8, scope: !8470)
!8474 = !DILocation(line: 2074, column: 3, scope: !8470)
!8475 = !DILocation(line: 2075, column: 41, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8462, file: !209, line: 2074, column: 10)
!8477 = !DILocation(line: 2075, column: 46, scope: !8476)
!8478 = !DILocation(line: 2076, column: 12, scope: !8476)
!8479 = !DILocation(line: 2076, column: 19, scope: !8476)
!8480 = !DILocation(line: 2075, column: 11, scope: !8476)
!8481 = !DILocation(line: 2075, column: 8, scope: !8476)
!8482 = !DILocation(line: 2077, column: 41, scope: !8476)
!8483 = !DILocation(line: 2077, column: 46, scope: !8476)
!8484 = !DILocation(line: 2078, column: 12, scope: !8476)
!8485 = !DILocation(line: 2078, column: 21, scope: !8476)
!8486 = !DILocation(line: 2078, column: 30, scope: !8476)
!8487 = !DILocation(line: 2077, column: 11, scope: !8476)
!8488 = !DILocation(line: 2077, column: 8, scope: !8476)
!8489 = !DILocation(line: 2081, column: 2, scope: !8463)
!8490 = !DILocation(line: 2081, column: 13, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8457, file: !209, line: 2081, column: 13)
!8492 = !DILocation(line: 2081, column: 18, scope: !8491)
!8493 = !DILocation(line: 2081, column: 30, scope: !8491)
!8494 = !DILocation(line: 2081, column: 13, scope: !8457)
!8495 = !DILocation(line: 2083, column: 37, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8491, file: !209, line: 2081, column: 43)
!8497 = !DILocation(line: 2085, column: 10, scope: !8496)
!8498 = !DILocation(line: 2085, column: 19, scope: !8496)
!8499 = !DILocation(line: 2083, column: 10, scope: !8496)
!8500 = !DILocation(line: 2083, column: 7, scope: !8496)
!8501 = !DILocation(line: 2086, column: 2, scope: !8496)
!8502 = !DILocation(line: 2086, column: 13, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8491, file: !209, line: 2086, column: 13)
!8504 = !DILocation(line: 2086, column: 18, scope: !8503)
!8505 = !DILocation(line: 2086, column: 30, scope: !8503)
!8506 = !DILocation(line: 2086, column: 13, scope: !8491)
!8507 = !DILocation(line: 2087, column: 39, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8503, file: !209, line: 2086, column: 43)
!8509 = !DILocation(line: 2087, column: 44, scope: !8508)
!8510 = !DILocation(line: 2087, column: 10, scope: !8508)
!8511 = !DILocation(line: 2087, column: 7, scope: !8508)
!8512 = !DILocation(line: 2088, column: 2, scope: !8508)
!8513 = !DILocation(line: 2090, column: 38, scope: !8328)
!8514 = !DILocation(line: 2090, column: 43, scope: !8328)
!8515 = !DILocation(line: 2091, column: 9, scope: !8328)
!8516 = !DILocation(line: 2091, column: 14, scope: !8328)
!8517 = !DILocation(line: 2090, column: 9, scope: !8328)
!8518 = !DILocation(line: 2090, column: 6, scope: !8328)
!8519 = !DILocation(line: 2093, column: 6, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8328, file: !209, line: 2093, column: 6)
!8521 = !DILocation(line: 2093, column: 11, scope: !8520)
!8522 = !DILocation(line: 2093, column: 20, scope: !8520)
!8523 = !DILocation(line: 2093, column: 6, scope: !8328)
!8524 = !DILocalVariable(name: "max_count", scope: !8525, file: !209, line: 2094, type: !7)
!8525 = distinct !DILexicalBlock(scope: !8520, file: !209, line: 2093, column: 35)
!8526 = !DILocation(line: 2094, column: 16, scope: !8525)
!8527 = !DILocation(line: 2096, column: 7, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8525, file: !209, line: 2096, column: 7)
!8529 = !DILocation(line: 2096, column: 16, scope: !8528)
!8530 = !DILocation(line: 2096, column: 7, scope: !8525)
!8531 = !DILocation(line: 2097, column: 14, scope: !8528)
!8532 = !DILocation(line: 2097, column: 4, scope: !8528)
!8533 = !DILocation(line: 2098, column: 40, scope: !8525)
!8534 = !DILocation(line: 2098, column: 45, scope: !8525)
!8535 = !DILocation(line: 2098, column: 55, scope: !8525)
!8536 = !DILocation(line: 2098, column: 10, scope: !8525)
!8537 = !DILocation(line: 2098, column: 7, scope: !8525)
!8538 = !DILocation(line: 2099, column: 40, scope: !8525)
!8539 = !DILocation(line: 2099, column: 45, scope: !8525)
!8540 = !DILocation(line: 2099, column: 10, scope: !8525)
!8541 = !DILocation(line: 2099, column: 7, scope: !8525)
!8542 = !DILocation(line: 2100, column: 2, scope: !8525)
!8543 = !DILocation(line: 2102, column: 39, scope: !8544)
!8544 = distinct !DILexicalBlock(scope: !8520, file: !209, line: 2100, column: 9)
!8545 = !DILocation(line: 2102, column: 44, scope: !8544)
!8546 = !DILocation(line: 2102, column: 10, scope: !8544)
!8547 = !DILocation(line: 2102, column: 7, scope: !8544)
!8548 = !DILocation(line: 2105, column: 6, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8328, file: !209, line: 2105, column: 6)
!8550 = !DILocation(line: 2105, column: 6, scope: !8328)
!8551 = !DILocation(line: 2106, column: 3, scope: !8549)
!8552 = !DILocation(line: 2110, column: 6, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8328, file: !209, line: 2110, column: 6)
!8554 = !DILocation(line: 2110, column: 11, scope: !8553)
!8555 = !DILocation(line: 2110, column: 26, scope: !8553)
!8556 = !DILocation(line: 2110, column: 6, scope: !8328)
!8557 = !DILocalVariable(name: "tmp", scope: !8558, file: !209, line: 2111, type: !7)
!8558 = distinct !DILexicalBlock(scope: !8553, file: !209, line: 2110, column: 41)
!8559 = !DILocation(line: 2111, column: 16, scope: !8558)
!8560 = !DILocation(line: 2111, column: 22, scope: !8558)
!8561 = !DILocation(line: 2111, column: 27, scope: !8558)
!8562 = !DILocation(line: 2114, column: 22, scope: !8558)
!8563 = !DILocation(line: 2114, column: 42, scope: !8558)
!8564 = !DILocation(line: 2115, column: 14, scope: !8558)
!8565 = !DILocation(line: 2115, column: 19, scope: !8558)
!8566 = !DILocation(line: 2116, column: 14, scope: !8558)
!8567 = !DILocation(line: 2116, column: 19, scope: !8558)
!8568 = !DILocation(line: 2114, column: 27, scope: !8558)
!8569 = !DILocation(line: 2114, column: 7, scope: !8558)
!8570 = !DILocation(line: 2113, column: 3, scope: !8558)
!8571 = !DILocation(line: 2113, column: 8, scope: !8558)
!8572 = !DILocation(line: 2113, column: 23, scope: !8558)
!8573 = !DILocation(line: 2117, column: 7, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !8558, file: !209, line: 2117, column: 7)
!8575 = !DILocation(line: 2117, column: 14, scope: !8574)
!8576 = !DILocation(line: 2117, column: 19, scope: !8574)
!8577 = !DILocation(line: 2117, column: 11, scope: !8574)
!8578 = !DILocation(line: 2117, column: 7, scope: !8558)
!8579 = !DILocation(line: 2118, column: 7, scope: !8574)
!8580 = !DILocation(line: 2118, column: 4, scope: !8574)
!8581 = !DILocation(line: 2119, column: 2, scope: !8558)
!8582 = !DILocation(line: 2120, column: 6, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8328, file: !209, line: 2120, column: 6)
!8584 = !DILocation(line: 2120, column: 11, scope: !8583)
!8585 = !DILocation(line: 2120, column: 23, scope: !8583)
!8586 = !DILocation(line: 2120, column: 6, scope: !8328)
!8587 = !DILocation(line: 2121, column: 8, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8589, file: !209, line: 2121, column: 7)
!8589 = distinct !DILexicalBlock(scope: !8583, file: !209, line: 2120, column: 38)
!8590 = !DILocation(line: 2121, column: 17, scope: !8588)
!8591 = !DILocation(line: 2121, column: 25, scope: !8588)
!8592 = !DILocation(line: 2121, column: 29, scope: !8588)
!8593 = !DILocation(line: 2121, column: 38, scope: !8588)
!8594 = !DILocation(line: 2121, column: 7, scope: !8589)
!8595 = !DILocalVariable(name: "tmp", scope: !8596, file: !209, line: 2122, type: !7)
!8596 = distinct !DILexicalBlock(scope: !8588, file: !209, line: 2121, column: 47)
!8597 = !DILocation(line: 2122, column: 17, scope: !8596)
!8598 = !DILocation(line: 2122, column: 23, scope: !8596)
!8599 = !DILocation(line: 2122, column: 28, scope: !8596)
!8600 = !DILocation(line: 2125, column: 23, scope: !8596)
!8601 = !DILocation(line: 2125, column: 43, scope: !8596)
!8602 = !DILocation(line: 2126, column: 15, scope: !8596)
!8603 = !DILocation(line: 2126, column: 20, scope: !8596)
!8604 = !DILocation(line: 2127, column: 15, scope: !8596)
!8605 = !DILocation(line: 2127, column: 20, scope: !8596)
!8606 = !DILocation(line: 2125, column: 28, scope: !8596)
!8607 = !DILocation(line: 2125, column: 8, scope: !8596)
!8608 = !DILocation(line: 2124, column: 4, scope: !8596)
!8609 = !DILocation(line: 2124, column: 9, scope: !8596)
!8610 = !DILocation(line: 2124, column: 21, scope: !8596)
!8611 = !DILocation(line: 2128, column: 8, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8596, file: !209, line: 2128, column: 8)
!8613 = !DILocation(line: 2128, column: 15, scope: !8612)
!8614 = !DILocation(line: 2128, column: 20, scope: !8612)
!8615 = !DILocation(line: 2128, column: 12, scope: !8612)
!8616 = !DILocation(line: 2128, column: 8, scope: !8596)
!8617 = !DILocation(line: 2129, column: 8, scope: !8612)
!8618 = !DILocation(line: 2129, column: 5, scope: !8612)
!8619 = !DILocation(line: 2130, column: 8, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8596, file: !209, line: 2130, column: 8)
!8621 = !DILocation(line: 2130, column: 13, scope: !8620)
!8622 = !DILocation(line: 2130, column: 28, scope: !8620)
!8623 = !DILocation(line: 2130, column: 42, scope: !8620)
!8624 = !DILocation(line: 2131, column: 8, scope: !8620)
!8625 = !DILocation(line: 2131, column: 13, scope: !8620)
!8626 = !DILocation(line: 2132, column: 8, scope: !8620)
!8627 = !DILocation(line: 2132, column: 13, scope: !8620)
!8628 = !DILocation(line: 2132, column: 27, scope: !8620)
!8629 = !DILocation(line: 2132, column: 32, scope: !8620)
!8630 = !DILocation(line: 2132, column: 25, scope: !8620)
!8631 = !DILocation(line: 2131, column: 28, scope: !8620)
!8632 = !DILocation(line: 2130, column: 8, scope: !8596)
!8633 = !DILocation(line: 2134, column: 9, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8620, file: !209, line: 2132, column: 46)
!8635 = !DILocation(line: 2134, column: 14, scope: !8634)
!8636 = !DILocation(line: 2134, column: 28, scope: !8634)
!8637 = !DILocation(line: 2134, column: 33, scope: !8634)
!8638 = !DILocation(line: 2134, column: 26, scope: !8634)
!8639 = !DILocation(line: 2133, column: 5, scope: !8634)
!8640 = !DILocation(line: 2133, column: 10, scope: !8634)
!8641 = !DILocation(line: 2133, column: 25, scope: !8634)
!8642 = !DILocation(line: 2135, column: 8, scope: !8634)
!8643 = !DILocation(line: 2136, column: 4, scope: !8634)
!8644 = !DILocation(line: 2137, column: 3, scope: !8596)
!8645 = !DILocation(line: 2138, column: 2, scope: !8589)
!8646 = !DILocation(line: 2140, column: 6, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8328, file: !209, line: 2140, column: 6)
!8648 = !DILocation(line: 2140, column: 6, scope: !8328)
!8649 = !DILocation(line: 2141, column: 3, scope: !8647)
!8650 = !DILocation(line: 2143, column: 2, scope: !8328)
!8651 = !DILocation(line: 2144, column: 1, scope: !8328)
!8652 = distinct !DISubprogram(name: "ni_ai_cmd", scope: !209, file: !209, line: 2163, type: !4233, scopeLine: 2164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!8653 = !DILocalVariable(name: "dev", arg: 1, scope: !8652, file: !209, line: 2163, type: !3350)
!8654 = !DILocation(line: 2163, column: 44, scope: !8652)
!8655 = !DILocalVariable(name: "s", arg: 2, scope: !8652, file: !209, line: 2163, type: !4119)
!8656 = !DILocation(line: 2163, column: 74, scope: !8652)
!8657 = !DILocalVariable(name: "devpriv", scope: !8652, file: !209, line: 2165, type: !4731)
!8658 = !DILocation(line: 2165, column: 21, scope: !8652)
!8659 = !DILocation(line: 2165, column: 31, scope: !8652)
!8660 = !DILocation(line: 2165, column: 36, scope: !8652)
!8661 = !DILocalVariable(name: "cmd", scope: !8652, file: !209, line: 2166, type: !8662)
!8662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8663, size: 64)
!8663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4164)
!8664 = !DILocation(line: 2166, column: 27, scope: !8652)
!8665 = !DILocation(line: 2166, column: 34, scope: !8652)
!8666 = !DILocation(line: 2166, column: 37, scope: !8652)
!8667 = !DILocation(line: 2166, column: 44, scope: !8652)
!8668 = !DILocalVariable(name: "timer", scope: !8652, file: !209, line: 2167, type: !429)
!8669 = !DILocation(line: 2167, column: 6, scope: !8652)
!8670 = !DILocalVariable(name: "mode1", scope: !8652, file: !209, line: 2168, type: !429)
!8671 = !DILocation(line: 2168, column: 6, scope: !8652)
!8672 = !DILocalVariable(name: "mode2", scope: !8652, file: !209, line: 2169, type: !429)
!8673 = !DILocation(line: 2169, column: 6, scope: !8652)
!8674 = !DILocalVariable(name: "start_stop_select", scope: !8652, file: !209, line: 2170, type: !429)
!8675 = !DILocation(line: 2170, column: 6, scope: !8652)
!8676 = !DILocalVariable(name: "stop_count", scope: !8652, file: !209, line: 2171, type: !7)
!8677 = !DILocation(line: 2171, column: 15, scope: !8652)
!8678 = !DILocalVariable(name: "interrupt_a_enable", scope: !8652, file: !209, line: 2172, type: !429)
!8679 = !DILocation(line: 2172, column: 6, scope: !8652)
!8680 = !DILocalVariable(name: "ai_trig", scope: !8652, file: !209, line: 2173, type: !7)
!8681 = !DILocation(line: 2173, column: 15, scope: !8652)
!8682 = !DILocation(line: 2175, column: 6, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8652, file: !209, line: 2175, column: 6)
!8684 = !DILocation(line: 2175, column: 11, scope: !8683)
!8685 = !DILocation(line: 2175, column: 15, scope: !8683)
!8686 = !DILocation(line: 2175, column: 6, scope: !8652)
!8687 = !DILocation(line: 2176, column: 3, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8683, file: !209, line: 2175, column: 21)
!8689 = !DILocation(line: 2177, column: 3, scope: !8688)
!8690 = !DILocation(line: 2179, column: 19, scope: !8652)
!8691 = !DILocation(line: 2179, column: 2, scope: !8652)
!8692 = !DILocation(line: 2181, column: 27, scope: !8652)
!8693 = !DILocation(line: 2181, column: 32, scope: !8652)
!8694 = !DILocation(line: 2181, column: 35, scope: !8652)
!8695 = !DILocation(line: 2181, column: 40, scope: !8652)
!8696 = !DILocation(line: 2181, column: 54, scope: !8652)
!8697 = !DILocation(line: 2181, column: 59, scope: !8652)
!8698 = !DILocation(line: 2181, column: 2, scope: !8652)
!8699 = !DILocation(line: 2184, column: 16, scope: !8652)
!8700 = !DILocation(line: 2184, column: 2, scope: !8652)
!8701 = !DILocation(line: 2190, column: 2, scope: !8652)
!8702 = !DILocation(line: 2190, column: 11, scope: !8652)
!8703 = !DILocation(line: 2190, column: 27, scope: !8652)
!8704 = !DILocation(line: 2191, column: 16, scope: !8652)
!8705 = !DILocation(line: 2191, column: 21, scope: !8652)
!8706 = !DILocation(line: 2191, column: 30, scope: !8652)
!8707 = !DILocation(line: 2191, column: 2, scope: !8652)
!8708 = !DILocation(line: 2193, column: 10, scope: !8652)
!8709 = !DILocation(line: 2194, column: 10, scope: !8652)
!8710 = !DILocation(line: 2194, column: 15, scope: !8652)
!8711 = !DILocation(line: 2194, column: 2, scope: !8652)
!8712 = !DILocation(line: 2197, column: 11, scope: !8713)
!8713 = distinct !DILexicalBlock(scope: !8652, file: !209, line: 2194, column: 26)
!8714 = !DILocation(line: 2199, column: 3, scope: !8713)
!8715 = !DILocation(line: 2201, column: 14, scope: !8713)
!8716 = !DILocation(line: 2201, column: 11, scope: !8713)
!8717 = !DILocation(line: 2207, column: 7, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8713, file: !209, line: 2207, column: 7)
!8719 = !DILocation(line: 2207, column: 12, scope: !8718)
!8720 = !DILocation(line: 2207, column: 22, scope: !8718)
!8721 = !DILocation(line: 2207, column: 7, scope: !8713)
!8722 = !DILocation(line: 2208, column: 12, scope: !8718)
!8723 = !DILocation(line: 2208, column: 4, scope: !8718)
!8724 = !DILocation(line: 2209, column: 7, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8713, file: !209, line: 2209, column: 7)
!8726 = !DILocation(line: 2209, column: 12, scope: !8725)
!8727 = !DILocation(line: 2209, column: 22, scope: !8725)
!8728 = !DILocation(line: 2209, column: 7, scope: !8713)
!8729 = !DILocation(line: 2210, column: 12, scope: !8725)
!8730 = !DILocation(line: 2210, column: 4, scope: !8725)
!8731 = !DILocation(line: 2211, column: 3, scope: !8713)
!8732 = !DILocation(line: 2213, column: 16, scope: !8652)
!8733 = !DILocation(line: 2213, column: 21, scope: !8652)
!8734 = !DILocation(line: 2213, column: 2, scope: !8652)
!8735 = !DILocation(line: 2215, column: 8, scope: !8652)
!8736 = !DILocation(line: 2216, column: 8, scope: !8652)
!8737 = !DILocation(line: 2217, column: 8, scope: !8652)
!8738 = !DILocation(line: 2218, column: 16, scope: !8652)
!8739 = !DILocation(line: 2218, column: 21, scope: !8652)
!8740 = !DILocation(line: 2218, column: 2, scope: !8652)
!8741 = !DILocation(line: 2220, column: 6, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8652, file: !209, line: 2220, column: 6)
!8743 = !DILocation(line: 2220, column: 11, scope: !8742)
!8744 = !DILocation(line: 2220, column: 24, scope: !8742)
!8745 = !DILocation(line: 2220, column: 29, scope: !8742)
!8746 = !DILocation(line: 2220, column: 32, scope: !8742)
!8747 = !DILocation(line: 2220, column: 41, scope: !8742)
!8748 = !DILocation(line: 2220, column: 49, scope: !8742)
!8749 = !DILocation(line: 2220, column: 52, scope: !8742)
!8750 = !DILocation(line: 2220, column: 61, scope: !8742)
!8751 = !DILocation(line: 2220, column: 6, scope: !8652)
!8752 = !DILocation(line: 2222, column: 21, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !8742, file: !209, line: 2220, column: 70)
!8754 = !DILocation(line: 2225, column: 2, scope: !8753)
!8755 = !DILocation(line: 2227, column: 21, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8742, file: !209, line: 2225, column: 9)
!8757 = !DILocation(line: 2229, column: 16, scope: !8652)
!8758 = !DILocation(line: 2229, column: 21, scope: !8652)
!8759 = !DILocation(line: 2229, column: 2, scope: !8652)
!8760 = !DILocation(line: 2231, column: 2, scope: !8652)
!8761 = !DILocation(line: 2231, column: 11, scope: !8652)
!8762 = !DILocation(line: 2231, column: 19, scope: !8652)
!8763 = !DILocation(line: 2232, column: 10, scope: !8652)
!8764 = !DILocation(line: 2232, column: 15, scope: !8652)
!8765 = !DILocation(line: 2232, column: 2, scope: !8652)
!8766 = !DILocation(line: 2234, column: 16, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8652, file: !209, line: 2232, column: 25)
!8768 = !DILocation(line: 2234, column: 21, scope: !8767)
!8769 = !DILocation(line: 2234, column: 30, scope: !8767)
!8770 = !DILocation(line: 2234, column: 14, scope: !8767)
!8771 = !DILocation(line: 2236, column: 7, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8767, file: !209, line: 2236, column: 7)
!8773 = !DILocation(line: 2236, column: 16, scope: !8772)
!8774 = !DILocation(line: 2236, column: 7, scope: !8767)
!8775 = !DILocation(line: 2238, column: 15, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8772, file: !209, line: 2236, column: 25)
!8777 = !DILocation(line: 2239, column: 3, scope: !8776)
!8778 = !DILocation(line: 2241, column: 17, scope: !8767)
!8779 = !DILocation(line: 2241, column: 22, scope: !8767)
!8780 = !DILocation(line: 2241, column: 3, scope: !8767)
!8781 = !DILocation(line: 2243, column: 9, scope: !8767)
!8782 = !DILocation(line: 2246, column: 17, scope: !8767)
!8783 = !DILocation(line: 2246, column: 22, scope: !8767)
!8784 = !DILocation(line: 2246, column: 3, scope: !8767)
!8785 = !DILocation(line: 2248, column: 17, scope: !8767)
!8786 = !DILocation(line: 2248, column: 3, scope: !8767)
!8787 = !DILocation(line: 2250, column: 7, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8767, file: !209, line: 2250, column: 7)
!8789 = !DILocation(line: 2250, column: 18, scope: !8788)
!8790 = !DILocation(line: 2250, column: 7, scope: !8767)
!8791 = !DILocation(line: 2251, column: 4, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8788, file: !209, line: 2250, column: 24)
!8793 = !DILocation(line: 2251, column: 13, scope: !8792)
!8794 = !DILocation(line: 2251, column: 21, scope: !8792)
!8795 = !DILocation(line: 2252, column: 23, scope: !8792)
!8796 = !DILocation(line: 2257, column: 8, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !8792, file: !209, line: 2257, column: 8)
!8798 = !DILocation(line: 2257, column: 13, scope: !8797)
!8799 = !DILocation(line: 2257, column: 26, scope: !8797)
!8800 = !DILocation(line: 2257, column: 8, scope: !8792)
!8801 = !DILocation(line: 2258, column: 23, scope: !8797)
!8802 = !DILocation(line: 2258, column: 5, scope: !8797)
!8803 = !DILocation(line: 2260, column: 3, scope: !8792)
!8804 = !DILocation(line: 2261, column: 3, scope: !8767)
!8805 = !DILocation(line: 2264, column: 17, scope: !8767)
!8806 = !DILocation(line: 2264, column: 3, scope: !8767)
!8807 = !DILocation(line: 2266, column: 9, scope: !8767)
!8808 = !DILocation(line: 2269, column: 17, scope: !8767)
!8809 = !DILocation(line: 2269, column: 22, scope: !8767)
!8810 = !DILocation(line: 2269, column: 3, scope: !8767)
!8811 = !DILocation(line: 2272, column: 17, scope: !8767)
!8812 = !DILocation(line: 2272, column: 3, scope: !8767)
!8813 = !DILocation(line: 2273, column: 3, scope: !8767)
!8814 = !DILocation(line: 2276, column: 10, scope: !8652)
!8815 = !DILocation(line: 2276, column: 15, scope: !8652)
!8816 = !DILocation(line: 2276, column: 2, scope: !8652)
!8817 = !DILocation(line: 2292, column: 21, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8652, file: !209, line: 2276, column: 31)
!8819 = !DILocation(line: 2293, column: 17, scope: !8818)
!8820 = !DILocation(line: 2293, column: 22, scope: !8818)
!8821 = !DILocation(line: 2293, column: 3, scope: !8818)
!8822 = !DILocation(line: 2295, column: 9, scope: !8818)
!8823 = !DILocation(line: 2296, column: 9, scope: !8818)
!8824 = !DILocation(line: 2298, column: 17, scope: !8818)
!8825 = !DILocation(line: 2298, column: 22, scope: !8818)
!8826 = !DILocation(line: 2298, column: 3, scope: !8818)
!8827 = !DILocation(line: 2301, column: 26, scope: !8818)
!8828 = !DILocation(line: 2301, column: 31, scope: !8818)
!8829 = !DILocation(line: 2301, column: 36, scope: !8818)
!8830 = !DILocation(line: 2301, column: 11, scope: !8818)
!8831 = !DILocation(line: 2301, column: 9, scope: !8818)
!8832 = !DILocation(line: 2303, column: 17, scope: !8818)
!8833 = !DILocation(line: 2303, column: 22, scope: !8818)
!8834 = !DILocation(line: 2303, column: 3, scope: !8818)
!8835 = !DILocation(line: 2304, column: 17, scope: !8818)
!8836 = !DILocation(line: 2304, column: 3, scope: !8818)
!8837 = !DILocation(line: 2305, column: 3, scope: !8818)
!8838 = !DILocation(line: 2307, column: 7, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8818, file: !209, line: 2307, column: 7)
!8840 = !DILocation(line: 2307, column: 12, scope: !8839)
!8841 = !DILocation(line: 2307, column: 27, scope: !8839)
!8842 = !DILocation(line: 2307, column: 7, scope: !8818)
!8843 = !DILocation(line: 2308, column: 22, scope: !8839)
!8844 = !DILocation(line: 2308, column: 4, scope: !8839)
!8845 = !DILocation(line: 2309, column: 7, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8818, file: !209, line: 2309, column: 7)
!8847 = !DILocation(line: 2309, column: 12, scope: !8846)
!8848 = !DILocation(line: 2309, column: 27, scope: !8846)
!8849 = !DILocation(line: 2309, column: 7, scope: !8818)
!8850 = !DILocation(line: 2310, column: 22, scope: !8846)
!8851 = !DILocation(line: 2310, column: 4, scope: !8846)
!8852 = !DILocation(line: 2311, column: 7, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8818, file: !209, line: 2311, column: 7)
!8854 = !DILocation(line: 2311, column: 12, scope: !8853)
!8855 = !DILocation(line: 2311, column: 30, scope: !8853)
!8856 = !DILocation(line: 2311, column: 35, scope: !8853)
!8857 = !DILocation(line: 2311, column: 27, scope: !8853)
!8858 = !DILocation(line: 2311, column: 47, scope: !8853)
!8859 = !DILocation(line: 2312, column: 8, scope: !8853)
!8860 = !DILocation(line: 2312, column: 13, scope: !8853)
!8861 = !DILocation(line: 2312, column: 28, scope: !8853)
!8862 = !DILocation(line: 2313, column: 8, scope: !8853)
!8863 = !DILocation(line: 2313, column: 13, scope: !8853)
!8864 = !DILocation(line: 2313, column: 25, scope: !8853)
!8865 = !DILocation(line: 2312, column: 40, scope: !8853)
!8866 = !DILocation(line: 2311, column: 7, scope: !8818)
!8867 = !DILocation(line: 2314, column: 22, scope: !8853)
!8868 = !DILocation(line: 2314, column: 4, scope: !8853)
!8869 = !DILocation(line: 2316, column: 24, scope: !8818)
!8870 = !DILocation(line: 2316, column: 21, scope: !8818)
!8871 = !DILocation(line: 2321, column: 17, scope: !8818)
!8872 = !DILocation(line: 2321, column: 22, scope: !8818)
!8873 = !DILocation(line: 2321, column: 3, scope: !8818)
!8874 = !DILocation(line: 2322, column: 3, scope: !8818)
!8875 = !DILocation(line: 2325, column: 10, scope: !8652)
!8876 = !DILocation(line: 2325, column: 15, scope: !8652)
!8877 = !DILocation(line: 2325, column: 2, scope: !8652)
!8878 = !DILocation(line: 2328, column: 7, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8880, file: !209, line: 2328, column: 7)
!8880 = distinct !DILexicalBlock(scope: !8652, file: !209, line: 2325, column: 28)
!8881 = !DILocation(line: 2328, column: 12, scope: !8879)
!8882 = !DILocation(line: 2328, column: 24, scope: !8879)
!8883 = !DILocation(line: 2328, column: 29, scope: !8879)
!8884 = !DILocation(line: 2328, column: 32, scope: !8879)
!8885 = !DILocation(line: 2328, column: 37, scope: !8879)
!8886 = !DILocation(line: 2328, column: 49, scope: !8879)
!8887 = !DILocation(line: 2328, column: 7, scope: !8880)
!8888 = !DILocation(line: 2329, column: 10, scope: !8879)
!8889 = !DILocation(line: 2329, column: 4, scope: !8879)
!8890 = !DILocation(line: 2331, column: 27, scope: !8879)
!8891 = !DILocation(line: 2331, column: 32, scope: !8879)
!8892 = !DILocation(line: 2331, column: 37, scope: !8879)
!8893 = !DILocation(line: 2331, column: 12, scope: !8879)
!8894 = !DILocation(line: 2331, column: 10, scope: !8879)
!8895 = !DILocation(line: 2334, column: 17, scope: !8880)
!8896 = !DILocation(line: 2334, column: 3, scope: !8880)
!8897 = !DILocation(line: 2335, column: 17, scope: !8880)
!8898 = !DILocation(line: 2335, column: 22, scope: !8880)
!8899 = !DILocation(line: 2335, column: 3, scope: !8880)
!8900 = !DILocation(line: 2337, column: 9, scope: !8880)
!8901 = !DILocation(line: 2338, column: 9, scope: !8880)
!8902 = !DILocation(line: 2339, column: 17, scope: !8880)
!8903 = !DILocation(line: 2339, column: 22, scope: !8880)
!8904 = !DILocation(line: 2339, column: 3, scope: !8880)
!8905 = !DILocation(line: 2341, column: 17, scope: !8880)
!8906 = !DILocation(line: 2341, column: 3, scope: !8880)
!8907 = !DILocation(line: 2343, column: 9, scope: !8880)
!8908 = !DILocation(line: 2344, column: 9, scope: !8880)
!8909 = !DILocation(line: 2345, column: 17, scope: !8880)
!8910 = !DILocation(line: 2345, column: 22, scope: !8880)
!8911 = !DILocation(line: 2345, column: 3, scope: !8880)
!8912 = !DILocation(line: 2346, column: 3, scope: !8880)
!8913 = !DILocation(line: 2348, column: 12, scope: !8880)
!8914 = !DILocation(line: 2348, column: 9, scope: !8880)
!8915 = !DILocation(line: 2353, column: 8, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8880, file: !209, line: 2353, column: 7)
!8917 = !DILocation(line: 2353, column: 13, scope: !8916)
!8918 = !DILocation(line: 2353, column: 25, scope: !8916)
!8919 = !DILocation(line: 2353, column: 38, scope: !8916)
!8920 = !DILocation(line: 2353, column: 7, scope: !8880)
!8921 = !DILocation(line: 2354, column: 10, scope: !8916)
!8922 = !DILocation(line: 2354, column: 4, scope: !8916)
!8923 = !DILocation(line: 2355, column: 17, scope: !8880)
!8924 = !DILocation(line: 2355, column: 22, scope: !8880)
!8925 = !DILocation(line: 2355, column: 3, scope: !8880)
!8926 = !DILocation(line: 2357, column: 9, scope: !8880)
!8927 = !DILocation(line: 2359, column: 17, scope: !8880)
!8928 = !DILocation(line: 2359, column: 22, scope: !8880)
!8929 = !DILocation(line: 2359, column: 3, scope: !8880)
!8930 = !DILocation(line: 2361, column: 3, scope: !8880)
!8931 = !DILocation(line: 2364, column: 6, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8652, file: !209, line: 2364, column: 6)
!8933 = !DILocation(line: 2364, column: 11, scope: !8932)
!8934 = !DILocation(line: 2364, column: 6, scope: !8652)
!8935 = !DILocation(line: 2366, column: 22, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8932, file: !209, line: 2364, column: 16)
!8937 = !DILocation(line: 2373, column: 8, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8936, file: !209, line: 2373, column: 7)
!8939 = !DILocation(line: 2373, column: 13, scope: !8938)
!8940 = !DILocation(line: 2373, column: 19, scope: !8938)
!8941 = !DILocation(line: 2373, column: 36, scope: !8938)
!8942 = !DILocation(line: 2374, column: 8, scope: !8938)
!8943 = !DILocation(line: 2374, column: 17, scope: !8938)
!8944 = !DILocation(line: 2374, column: 25, scope: !8938)
!8945 = !DILocation(line: 2373, column: 7, scope: !8936)
!8946 = !DILocation(line: 2376, column: 4, scope: !8947)
!8947 = distinct !DILexicalBlock(scope: !8938, file: !209, line: 2374, column: 54)
!8948 = !DILocation(line: 2376, column: 13, scope: !8947)
!8949 = !DILocation(line: 2376, column: 20, scope: !8947)
!8950 = !DILocation(line: 2377, column: 3, scope: !8947)
!8951 = !DILocation(line: 2378, column: 4, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8938, file: !209, line: 2377, column: 10)
!8953 = !DILocation(line: 2378, column: 13, scope: !8952)
!8954 = !DILocation(line: 2378, column: 20, scope: !8952)
!8955 = !DILocation(line: 2381, column: 11, scope: !8936)
!8956 = !DILocation(line: 2381, column: 20, scope: !8936)
!8957 = !DILocation(line: 2381, column: 3, scope: !8936)
!8958 = !DILocation(line: 2385, column: 18, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8936, file: !209, line: 2381, column: 28)
!8960 = !DILocation(line: 2385, column: 4, scope: !8959)
!8961 = !DILocation(line: 2391, column: 4, scope: !8959)
!8962 = !DILocation(line: 2394, column: 18, scope: !8959)
!8963 = !DILocation(line: 2394, column: 4, scope: !8959)
!8964 = !DILocation(line: 2396, column: 4, scope: !8959)
!8965 = !DILocation(line: 2399, column: 18, scope: !8959)
!8966 = !DILocation(line: 2399, column: 4, scope: !8959)
!8967 = !DILocation(line: 2405, column: 23, scope: !8959)
!8968 = !DILocation(line: 2406, column: 4, scope: !8959)
!8969 = !DILocation(line: 2408, column: 4, scope: !8959)
!8970 = !DILocation(line: 2412, column: 17, scope: !8936)
!8971 = !DILocation(line: 2412, column: 3, scope: !8936)
!8972 = !DILocation(line: 2414, column: 15, scope: !8936)
!8973 = !DILocation(line: 2414, column: 40, scope: !8936)
!8974 = !DILocation(line: 2414, column: 3, scope: !8936)
!8975 = !DILocation(line: 2415, column: 2, scope: !8936)
!8976 = !DILocation(line: 2417, column: 15, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8932, file: !209, line: 2415, column: 9)
!8978 = !DILocation(line: 2417, column: 3, scope: !8977)
!8979 = !DILocation(line: 2423, column: 16, scope: !8652)
!8980 = !DILocation(line: 2423, column: 2, scope: !8652)
!8981 = !DILocation(line: 2425, column: 10, scope: !8652)
!8982 = !DILocation(line: 2425, column: 15, scope: !8652)
!8983 = !DILocation(line: 2425, column: 2, scope: !8652)
!8984 = !DILocation(line: 2427, column: 17, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8652, file: !209, line: 2425, column: 31)
!8986 = !DILocation(line: 2427, column: 3, scope: !8985)
!8987 = !DILocation(line: 2432, column: 3, scope: !8985)
!8988 = !DILocation(line: 2434, column: 17, scope: !8985)
!8989 = !DILocation(line: 2434, column: 3, scope: !8985)
!8990 = !DILocation(line: 2439, column: 3, scope: !8985)
!8991 = !DILocalVariable(name: "retval", scope: !8992, file: !209, line: 2444, type: !429)
!8992 = distinct !DILexicalBlock(scope: !8652, file: !209, line: 2443, column: 2)
!8993 = !DILocation(line: 2444, column: 7, scope: !8992)
!8994 = !DILocation(line: 2444, column: 37, scope: !8992)
!8995 = !DILocation(line: 2444, column: 16, scope: !8992)
!8996 = !DILocation(line: 2446, column: 7, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8992, file: !209, line: 2446, column: 7)
!8998 = !DILocation(line: 2446, column: 7, scope: !8992)
!8999 = !DILocation(line: 2447, column: 11, scope: !8997)
!9000 = !DILocation(line: 2447, column: 4, scope: !8997)
!9001 = !DILocation(line: 2451, column: 6, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8652, file: !209, line: 2451, column: 6)
!9003 = !DILocation(line: 2451, column: 11, scope: !9002)
!9004 = !DILocation(line: 2451, column: 21, scope: !9002)
!9005 = !DILocation(line: 2451, column: 6, scope: !8652)
!9006 = !DILocation(line: 2452, column: 17, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !9002, file: !209, line: 2451, column: 34)
!9008 = !DILocation(line: 2453, column: 8, scope: !9007)
!9009 = !DILocation(line: 2453, column: 17, scope: !9007)
!9010 = !DILocation(line: 2452, column: 49, scope: !9007)
!9011 = !DILocation(line: 2452, column: 22, scope: !9007)
!9012 = !DILocation(line: 2452, column: 3, scope: !9007)
!9013 = !DILocation(line: 2455, column: 3, scope: !9007)
!9014 = !DILocation(line: 2455, column: 6, scope: !9007)
!9015 = !DILocation(line: 2455, column: 13, scope: !9007)
!9016 = !DILocation(line: 2455, column: 21, scope: !9007)
!9017 = !DILocation(line: 2456, column: 2, scope: !9007)
!9018 = !DILocation(line: 2456, column: 13, scope: !9019)
!9019 = distinct !DILexicalBlock(scope: !9002, file: !209, line: 2456, column: 13)
!9020 = !DILocation(line: 2456, column: 18, scope: !9019)
!9021 = !DILocation(line: 2456, column: 28, scope: !9019)
!9022 = !DILocation(line: 2456, column: 13, scope: !9002)
!9023 = !DILocation(line: 2457, column: 3, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9019, file: !209, line: 2456, column: 41)
!9025 = !DILocation(line: 2457, column: 6, scope: !9024)
!9026 = !DILocation(line: 2457, column: 13, scope: !9024)
!9027 = !DILocation(line: 2457, column: 21, scope: !9024)
!9028 = !DILocation(line: 2458, column: 2, scope: !9024)
!9029 = !DILocation(line: 2459, column: 3, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9019, file: !209, line: 2458, column: 9)
!9031 = !DILocation(line: 2459, column: 6, scope: !9030)
!9032 = !DILocation(line: 2459, column: 13, scope: !9030)
!9033 = !DILocation(line: 2459, column: 21, scope: !9030)
!9034 = !DILocation(line: 2462, column: 2, scope: !8652)
!9035 = !DILocation(line: 2463, column: 1, scope: !8652)
!9036 = distinct !DISubprogram(name: "ni_ai_reset", scope: !209, file: !209, line: 1506, type: !4233, scopeLine: 1507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!9037 = !DILocalVariable(name: "dev", arg: 1, scope: !9036, file: !209, line: 1506, type: !3350)
!9038 = !DILocation(line: 1506, column: 46, scope: !9036)
!9039 = !DILocalVariable(name: "s", arg: 2, scope: !9036, file: !209, line: 1506, type: !4119)
!9040 = !DILocation(line: 1506, column: 76, scope: !9036)
!9041 = !DILocalVariable(name: "devpriv", scope: !9036, file: !209, line: 1508, type: !4731)
!9042 = !DILocation(line: 1508, column: 21, scope: !9036)
!9043 = !DILocation(line: 1508, column: 31, scope: !9036)
!9044 = !DILocation(line: 1508, column: 36, scope: !9036)
!9045 = !DILocalVariable(name: "ai_personal", scope: !9036, file: !209, line: 1509, type: !7)
!9046 = !DILocation(line: 1509, column: 15, scope: !9036)
!9047 = !DILocalVariable(name: "ai_out_ctrl", scope: !9036, file: !209, line: 1510, type: !7)
!9048 = !DILocation(line: 1510, column: 15, scope: !9036)
!9049 = !DILocation(line: 1512, column: 29, scope: !9036)
!9050 = !DILocation(line: 1512, column: 2, scope: !9036)
!9051 = !DILocation(line: 1514, column: 16, scope: !9036)
!9052 = !DILocation(line: 1514, column: 2, scope: !9036)
!9053 = !DILocation(line: 1517, column: 14, scope: !9036)
!9054 = !DILocation(line: 1517, column: 2, scope: !9036)
!9055 = !DILocation(line: 1519, column: 19, scope: !9036)
!9056 = !DILocation(line: 1519, column: 2, scope: !9036)
!9057 = !DILocation(line: 1521, column: 7, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9036, file: !209, line: 1521, column: 6)
!9059 = !DILocation(line: 1521, column: 16, scope: !9058)
!9060 = !DILocation(line: 1521, column: 6, scope: !9036)
!9061 = !DILocation(line: 1522, column: 13, scope: !9058)
!9062 = !DILocation(line: 1522, column: 3, scope: !9058)
!9063 = !DILocation(line: 1524, column: 16, scope: !9036)
!9064 = !DILocation(line: 1524, column: 2, scope: !9036)
!9065 = !DILocation(line: 1525, column: 16, scope: !9036)
!9066 = !DILocation(line: 1525, column: 2, scope: !9036)
!9067 = !DILocation(line: 1529, column: 16, scope: !9036)
!9068 = !DILocation(line: 1529, column: 2, scope: !9036)
!9069 = !DILocation(line: 1531, column: 16, scope: !9036)
!9070 = !DILocation(line: 1531, column: 2, scope: !9036)
!9071 = !DILocation(line: 1534, column: 14, scope: !9036)
!9072 = !DILocation(line: 1537, column: 14, scope: !9036)
!9073 = !DILocation(line: 1541, column: 6, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9036, file: !209, line: 1541, column: 6)
!9075 = !DILocation(line: 1541, column: 15, scope: !9074)
!9076 = !DILocation(line: 1541, column: 6, scope: !9036)
!9077 = !DILocation(line: 1542, column: 15, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9074, file: !209, line: 1541, column: 24)
!9079 = !DILocation(line: 1543, column: 2, scope: !9078)
!9080 = !DILocation(line: 1543, column: 13, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9074, file: !209, line: 1543, column: 13)
!9082 = !DILocation(line: 1543, column: 22, scope: !9081)
!9083 = !DILocation(line: 1543, column: 13, scope: !9074)
!9084 = !DILocation(line: 1544, column: 15, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9081, file: !209, line: 1543, column: 31)
!9086 = !DILocation(line: 1545, column: 2, scope: !9085)
!9087 = !DILocation(line: 1546, column: 15, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9081, file: !209, line: 1545, column: 9)
!9089 = !DILocation(line: 1547, column: 7, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9088, file: !209, line: 1547, column: 7)
!9091 = !DILocation(line: 1547, column: 16, scope: !9090)
!9092 = !DILocation(line: 1547, column: 7, scope: !9088)
!9093 = !DILocation(line: 1548, column: 16, scope: !9090)
!9094 = !DILocation(line: 1548, column: 4, scope: !9090)
!9095 = !DILocation(line: 1550, column: 16, scope: !9090)
!9096 = !DILocation(line: 1552, column: 16, scope: !9036)
!9097 = !DILocation(line: 1552, column: 21, scope: !9036)
!9098 = !DILocation(line: 1552, column: 2, scope: !9036)
!9099 = !DILocation(line: 1553, column: 16, scope: !9036)
!9100 = !DILocation(line: 1553, column: 21, scope: !9036)
!9101 = !DILocation(line: 1553, column: 2, scope: !9036)
!9102 = !DILocation(line: 1565, column: 16, scope: !9036)
!9103 = !DILocation(line: 1565, column: 2, scope: !9036)
!9104 = !DILocation(line: 1567, column: 16, scope: !9036)
!9105 = !DILocation(line: 1567, column: 2, scope: !9036)
!9106 = !DILocation(line: 1569, column: 2, scope: !9036)
!9107 = distinct !DISubprogram(name: "ni_ai_poll", scope: !209, file: !209, line: 1572, type: !4233, scopeLine: 1573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!9108 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !9109)
!9109 = distinct !DILocation(line: 1585, column: 2, scope: !9107)
!9110 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !9109)
!9111 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !9112)
!9112 = distinct !DILocation(line: 1578, column: 2, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9114, file: !209, line: 1578, column: 2)
!9114 = distinct !DILexicalBlock(scope: !9115, file: !209, line: 1578, column: 2)
!9115 = distinct !DILexicalBlock(scope: !9116, file: !209, line: 1578, column: 2)
!9116 = distinct !DILexicalBlock(scope: !9117, file: !209, line: 1578, column: 2)
!9117 = distinct !DILexicalBlock(scope: !9107, file: !209, line: 1578, column: 2)
!9118 = !DILocalVariable(name: "dev", arg: 1, scope: !9107, file: !209, line: 1572, type: !3350)
!9119 = !DILocation(line: 1572, column: 45, scope: !9107)
!9120 = !DILocalVariable(name: "s", arg: 2, scope: !9107, file: !209, line: 1572, type: !4119)
!9121 = !DILocation(line: 1572, column: 75, scope: !9107)
!9122 = !DILocalVariable(name: "flags", scope: !9107, file: !209, line: 1574, type: !435)
!9123 = !DILocation(line: 1574, column: 16, scope: !9107)
!9124 = !DILocalVariable(name: "count", scope: !9107, file: !209, line: 1575, type: !429)
!9125 = !DILocation(line: 1575, column: 6, scope: !9107)
!9126 = !DILocation(line: 1578, column: 2, scope: !9107)
!9127 = !DILocation(line: 1578, column: 2, scope: !9117)
!9128 = !DILocalVariable(name: "__dummy", scope: !9129, file: !209, line: 1578, type: !435)
!9129 = distinct !DILexicalBlock(scope: !9116, file: !209, line: 1578, column: 2)
!9130 = !DILocation(line: 1578, column: 2, scope: !9129)
!9131 = !DILocalVariable(name: "__dummy2", scope: !9129, file: !209, line: 1578, type: !435)
!9132 = !DILocation(line: 1578, column: 2, scope: !9116)
!9133 = !DILocation(line: 1578, column: 2, scope: !9115)
!9134 = !DILocation(line: 1578, column: 2, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9115, file: !209, line: 1578, column: 2)
!9136 = !DILocalVariable(name: "__dummy", scope: !9137, file: !209, line: 1578, type: !435)
!9137 = distinct !DILexicalBlock(scope: !9138, file: !209, line: 1578, column: 2)
!9138 = distinct !DILexicalBlock(scope: !9135, file: !209, line: 1578, column: 2)
!9139 = !DILocation(line: 1578, column: 2, scope: !9137)
!9140 = !DILocalVariable(name: "__dummy2", scope: !9137, file: !209, line: 1578, type: !435)
!9141 = !DILocation(line: 1578, column: 2, scope: !9138)
!9142 = !DILocation(line: 1578, column: 2, scope: !9114)
!9143 = !{i32 -2141322651}
!9144 = !DILocation(line: 1578, column: 2, scope: !9113)
!9145 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !9112)
!9146 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !9112)
!9147 = !DILocation(line: 1582, column: 17, scope: !9107)
!9148 = !DILocation(line: 1582, column: 2, scope: !9107)
!9149 = !DILocation(line: 1584, column: 35, scope: !9107)
!9150 = !DILocation(line: 1584, column: 10, scope: !9107)
!9151 = !DILocation(line: 1584, column: 8, scope: !9107)
!9152 = !DILocation(line: 1585, column: 26, scope: !9107)
!9153 = !DILocation(line: 1585, column: 31, scope: !9107)
!9154 = !DILocation(line: 1585, column: 41, scope: !9107)
!9155 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !9109)
!9156 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !9109)
!9157 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !9109)
!9158 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !9109)
!9159 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !9109)
!9160 = !DILocation(line: 1587, column: 9, scope: !9107)
!9161 = !DILocation(line: 1587, column: 2, scope: !9107)
!9162 = distinct !DISubprogram(name: "ni_ai_munge", scope: !209, file: !209, line: 1396, type: !4245, scopeLine: 1399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!9163 = !DILocalVariable(name: "dev", arg: 1, scope: !9162, file: !209, line: 1396, type: !3350)
!9164 = !DILocation(line: 1396, column: 47, scope: !9162)
!9165 = !DILocalVariable(name: "s", arg: 2, scope: !9162, file: !209, line: 1396, type: !4119)
!9166 = !DILocation(line: 1396, column: 77, scope: !9162)
!9167 = !DILocalVariable(name: "data", arg: 3, scope: !9162, file: !209, line: 1397, type: !463)
!9168 = !DILocation(line: 1397, column: 10, scope: !9162)
!9169 = !DILocalVariable(name: "num_bytes", arg: 4, scope: !9162, file: !209, line: 1397, type: !7)
!9170 = !DILocation(line: 1397, column: 29, scope: !9162)
!9171 = !DILocalVariable(name: "chan_index", arg: 5, scope: !9162, file: !209, line: 1398, type: !7)
!9172 = !DILocation(line: 1398, column: 17, scope: !9162)
!9173 = !DILocalVariable(name: "devpriv", scope: !9162, file: !209, line: 1400, type: !4731)
!9174 = !DILocation(line: 1400, column: 21, scope: !9162)
!9175 = !DILocation(line: 1400, column: 31, scope: !9162)
!9176 = !DILocation(line: 1400, column: 36, scope: !9162)
!9177 = !DILocalVariable(name: "async", scope: !9162, file: !209, line: 1401, type: !4130)
!9178 = !DILocation(line: 1401, column: 23, scope: !9162)
!9179 = !DILocation(line: 1401, column: 31, scope: !9162)
!9180 = !DILocation(line: 1401, column: 34, scope: !9162)
!9181 = !DILocalVariable(name: "cmd", scope: !9162, file: !209, line: 1402, type: !4239)
!9182 = !DILocation(line: 1402, column: 21, scope: !9162)
!9183 = !DILocation(line: 1402, column: 28, scope: !9162)
!9184 = !DILocation(line: 1402, column: 35, scope: !9162)
!9185 = !DILocalVariable(name: "nsamples", scope: !9162, file: !209, line: 1403, type: !7)
!9186 = !DILocation(line: 1403, column: 15, scope: !9162)
!9187 = !DILocation(line: 1403, column: 50, scope: !9162)
!9188 = !DILocation(line: 1403, column: 53, scope: !9162)
!9189 = !DILocation(line: 1403, column: 26, scope: !9162)
!9190 = !DILocalVariable(name: "array", scope: !9162, file: !209, line: 1404, type: !9191)
!9191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!9192 = !DILocation(line: 1404, column: 18, scope: !9162)
!9193 = !DILocation(line: 1404, column: 26, scope: !9162)
!9194 = !DILocalVariable(name: "larray", scope: !9162, file: !209, line: 1405, type: !1365)
!9195 = !DILocation(line: 1405, column: 16, scope: !9162)
!9196 = !DILocation(line: 1405, column: 25, scope: !9162)
!9197 = !DILocalVariable(name: "i", scope: !9162, file: !209, line: 1406, type: !7)
!9198 = !DILocation(line: 1406, column: 15, scope: !9162)
!9199 = !DILocalVariable(name: "barray", scope: !9162, file: !209, line: 1408, type: !9200)
!9200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!9201 = !DILocation(line: 1408, column: 10, scope: !9162)
!9202 = !DILocation(line: 1408, column: 19, scope: !9162)
!9203 = !DILocalVariable(name: "blarray", scope: !9162, file: !209, line: 1409, type: !9204)
!9204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!9205 = !DILocation(line: 1409, column: 10, scope: !9162)
!9206 = !DILocation(line: 1409, column: 20, scope: !9162)
!9207 = !DILocation(line: 1412, column: 9, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9162, file: !209, line: 1412, column: 2)
!9209 = !DILocation(line: 1412, column: 7, scope: !9208)
!9210 = !DILocation(line: 1412, column: 14, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9208, file: !209, line: 1412, column: 2)
!9212 = !DILocation(line: 1412, column: 18, scope: !9211)
!9213 = !DILocation(line: 1412, column: 16, scope: !9211)
!9214 = !DILocation(line: 1412, column: 2, scope: !9208)
!9215 = !DILocation(line: 1414, column: 7, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9217, file: !209, line: 1414, column: 7)
!9217 = distinct !DILexicalBlock(scope: !9211, file: !209, line: 1412, column: 33)
!9218 = !DILocation(line: 1414, column: 10, scope: !9216)
!9219 = !DILocation(line: 1414, column: 23, scope: !9216)
!9220 = !DILocation(line: 1414, column: 7, scope: !9217)
!9221 = !DILocation(line: 1415, column: 16, scope: !9216)
!9222 = !DILocation(line: 1415, column: 4, scope: !9216)
!9223 = !DILocation(line: 1415, column: 11, scope: !9216)
!9224 = !DILocation(line: 1415, column: 14, scope: !9216)
!9225 = !DILocation(line: 1417, column: 15, scope: !9216)
!9226 = !DILocation(line: 1417, column: 4, scope: !9216)
!9227 = !DILocation(line: 1417, column: 10, scope: !9216)
!9228 = !DILocation(line: 1417, column: 13, scope: !9216)
!9229 = !DILocation(line: 1419, column: 7, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9217, file: !209, line: 1419, column: 7)
!9231 = !DILocation(line: 1419, column: 10, scope: !9230)
!9232 = !DILocation(line: 1419, column: 23, scope: !9230)
!9233 = !DILocation(line: 1419, column: 7, scope: !9217)
!9234 = !DILocation(line: 1420, column: 17, scope: !9230)
!9235 = !DILocation(line: 1420, column: 26, scope: !9230)
!9236 = !DILocation(line: 1420, column: 36, scope: !9230)
!9237 = !DILocation(line: 1420, column: 4, scope: !9230)
!9238 = !DILocation(line: 1420, column: 11, scope: !9230)
!9239 = !DILocation(line: 1420, column: 14, scope: !9230)
!9240 = !DILocation(line: 1422, column: 16, scope: !9230)
!9241 = !DILocation(line: 1422, column: 25, scope: !9230)
!9242 = !DILocation(line: 1422, column: 35, scope: !9230)
!9243 = !DILocation(line: 1422, column: 4, scope: !9230)
!9244 = !DILocation(line: 1422, column: 10, scope: !9230)
!9245 = !DILocation(line: 1422, column: 13, scope: !9230)
!9246 = !DILocation(line: 1423, column: 13, scope: !9217)
!9247 = !DILocation(line: 1424, column: 17, scope: !9217)
!9248 = !DILocation(line: 1424, column: 22, scope: !9217)
!9249 = !DILocation(line: 1424, column: 14, scope: !9217)
!9250 = !DILocation(line: 1425, column: 2, scope: !9217)
!9251 = !DILocation(line: 1412, column: 29, scope: !9211)
!9252 = !DILocation(line: 1412, column: 2, scope: !9211)
!9253 = distinct !{!9253, !9214, !9254}
!9254 = !DILocation(line: 1425, column: 2, scope: !9208)
!9255 = !DILocation(line: 1426, column: 1, scope: !9162)
!9256 = distinct !DISubprogram(name: "ni_ao_insn_config", scope: !209, file: !209, line: 2822, type: !4216, scopeLine: 2825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!9257 = !DILocalVariable(name: "dev", arg: 1, scope: !9256, file: !209, line: 2822, type: !3350)
!9258 = !DILocation(line: 2822, column: 52, scope: !9256)
!9259 = !DILocalVariable(name: "s", arg: 2, scope: !9256, file: !209, line: 2823, type: !4119)
!9260 = !DILocation(line: 2823, column: 34, scope: !9256)
!9261 = !DILocalVariable(name: "insn", arg: 3, scope: !9256, file: !209, line: 2824, type: !4218)
!9262 = !DILocation(line: 2824, column: 29, scope: !9256)
!9263 = !DILocalVariable(name: "data", arg: 4, scope: !9256, file: !209, line: 2824, type: !1365)
!9264 = !DILocation(line: 2824, column: 49, scope: !9256)
!9265 = !DILocalVariable(name: "board", scope: !9256, file: !209, line: 2826, type: !4959)
!9266 = !DILocation(line: 2826, column: 32, scope: !9256)
!9267 = !DILocation(line: 2826, column: 40, scope: !9256)
!9268 = !DILocation(line: 2826, column: 45, scope: !9256)
!9269 = !DILocalVariable(name: "devpriv", scope: !9256, file: !209, line: 2827, type: !4731)
!9270 = !DILocation(line: 2827, column: 21, scope: !9256)
!9271 = !DILocation(line: 2827, column: 31, scope: !9256)
!9272 = !DILocation(line: 2827, column: 36, scope: !9256)
!9273 = !DILocalVariable(name: "nbytes", scope: !9256, file: !209, line: 2828, type: !7)
!9274 = !DILocation(line: 2828, column: 15, scope: !9256)
!9275 = !DILocation(line: 2830, column: 10, scope: !9256)
!9276 = !DILocation(line: 2830, column: 2, scope: !9256)
!9277 = !DILocation(line: 2832, column: 11, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9256, file: !209, line: 2830, column: 19)
!9279 = !DILocation(line: 2832, column: 3, scope: !9278)
!9280 = !DILocation(line: 2834, column: 37, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9278, file: !209, line: 2832, column: 20)
!9282 = !DILocation(line: 2835, column: 9, scope: !9281)
!9283 = !DILocation(line: 2835, column: 16, scope: !9281)
!9284 = !DILocation(line: 2834, column: 13, scope: !9281)
!9285 = !DILocation(line: 2834, column: 11, scope: !9281)
!9286 = !DILocation(line: 2836, column: 18, scope: !9281)
!9287 = !DILocation(line: 2836, column: 16, scope: !9281)
!9288 = !DILocation(line: 2836, column: 4, scope: !9281)
!9289 = !DILocation(line: 2836, column: 12, scope: !9281)
!9290 = !DILocation(line: 2837, column: 8, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9281, file: !209, line: 2837, column: 8)
!9292 = !DILocation(line: 2837, column: 17, scope: !9291)
!9293 = !DILocation(line: 2837, column: 8, scope: !9281)
!9294 = !DILocation(line: 2838, column: 16, scope: !9291)
!9295 = !DILocation(line: 2838, column: 25, scope: !9291)
!9296 = !DILocation(line: 2838, column: 31, scope: !9291)
!9297 = !DILocation(line: 2838, column: 5, scope: !9291)
!9298 = !DILocation(line: 2838, column: 13, scope: !9291)
!9299 = !DILocation(line: 2839, column: 4, scope: !9281)
!9300 = !DILocation(line: 2841, column: 4, scope: !9281)
!9301 = !DILocation(line: 2841, column: 12, scope: !9281)
!9302 = !DILocation(line: 2842, column: 4, scope: !9281)
!9303 = !DILocation(line: 2844, column: 4, scope: !9281)
!9304 = !DILocation(line: 2846, column: 3, scope: !9278)
!9305 = !DILocation(line: 2848, column: 20, scope: !9278)
!9306 = !DILocation(line: 2848, column: 25, scope: !9278)
!9307 = !DILocation(line: 2848, column: 10, scope: !9278)
!9308 = !DILocation(line: 2848, column: 3, scope: !9278)
!9309 = !DILocation(line: 2852, column: 13, scope: !9278)
!9310 = !DILocation(line: 2852, column: 20, scope: !9278)
!9311 = !DILocation(line: 2852, column: 31, scope: !9278)
!9312 = !DILocation(line: 2852, column: 29, scope: !9278)
!9313 = !DILocation(line: 2852, column: 3, scope: !9278)
!9314 = !DILocation(line: 2852, column: 11, scope: !9278)
!9315 = !DILocation(line: 2853, column: 3, scope: !9278)
!9316 = !DILocation(line: 2853, column: 11, scope: !9278)
!9317 = !DILocation(line: 2854, column: 3, scope: !9278)
!9318 = !DILocation(line: 2856, column: 3, scope: !9278)
!9319 = !DILocation(line: 2859, column: 2, scope: !9256)
!9320 = !DILocation(line: 2860, column: 1, scope: !9256)
!9321 = distinct !DISubprogram(name: "ni_ao_insn_write", scope: !209, file: !209, line: 2681, type: !4216, scopeLine: 2685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!9322 = !DILocalVariable(name: "dev", arg: 1, scope: !9321, file: !209, line: 2681, type: !3350)
!9323 = !DILocation(line: 2681, column: 51, scope: !9321)
!9324 = !DILocalVariable(name: "s", arg: 2, scope: !9321, file: !209, line: 2682, type: !4119)
!9325 = !DILocation(line: 2682, column: 33, scope: !9321)
!9326 = !DILocalVariable(name: "insn", arg: 3, scope: !9321, file: !209, line: 2683, type: !4218)
!9327 = !DILocation(line: 2683, column: 28, scope: !9321)
!9328 = !DILocalVariable(name: "data", arg: 4, scope: !9321, file: !209, line: 2684, type: !1365)
!9329 = !DILocation(line: 2684, column: 22, scope: !9321)
!9330 = !DILocalVariable(name: "devpriv", scope: !9321, file: !209, line: 2686, type: !4731)
!9331 = !DILocation(line: 2686, column: 21, scope: !9321)
!9332 = !DILocation(line: 2686, column: 31, scope: !9321)
!9333 = !DILocation(line: 2686, column: 36, scope: !9321)
!9334 = !DILocalVariable(name: "chan", scope: !9321, file: !209, line: 2687, type: !7)
!9335 = !DILocation(line: 2687, column: 15, scope: !9321)
!9336 = !DILocation(line: 2687, column: 22, scope: !9321)
!9337 = !DILocalVariable(name: "range", scope: !9321, file: !209, line: 2688, type: !7)
!9338 = !DILocation(line: 2688, column: 15, scope: !9321)
!9339 = !DILocation(line: 2688, column: 23, scope: !9321)
!9340 = !DILocalVariable(name: "reg", scope: !9321, file: !209, line: 2689, type: !429)
!9341 = !DILocation(line: 2689, column: 6, scope: !9321)
!9342 = !DILocalVariable(name: "i", scope: !9321, file: !209, line: 2690, type: !429)
!9343 = !DILocation(line: 2690, column: 6, scope: !9321)
!9344 = !DILocation(line: 2692, column: 6, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9321, file: !209, line: 2692, column: 6)
!9346 = !DILocation(line: 2692, column: 15, scope: !9345)
!9347 = !DILocation(line: 2692, column: 6, scope: !9321)
!9348 = !DILocation(line: 2693, column: 18, scope: !9349)
!9349 = distinct !DILexicalBlock(scope: !9345, file: !209, line: 2692, column: 24)
!9350 = !DILocation(line: 2693, column: 28, scope: !9349)
!9351 = !DILocation(line: 2693, column: 25, scope: !9349)
!9352 = !DILocation(line: 2693, column: 3, scope: !9349)
!9353 = !DILocation(line: 2695, column: 9, scope: !9349)
!9354 = !DILocation(line: 2695, column: 7, scope: !9349)
!9355 = !DILocation(line: 2696, column: 2, scope: !9349)
!9356 = !DILocation(line: 2696, column: 13, scope: !9357)
!9357 = distinct !DILexicalBlock(scope: !9345, file: !209, line: 2696, column: 13)
!9358 = !DILocation(line: 2696, column: 22, scope: !9357)
!9359 = !DILocation(line: 2696, column: 13, scope: !9345)
!9360 = !DILocation(line: 2697, column: 9, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9357, file: !209, line: 2696, column: 35)
!9362 = !DILocation(line: 2697, column: 7, scope: !9361)
!9363 = !DILocation(line: 2698, column: 2, scope: !9361)
!9364 = !DILocation(line: 2699, column: 9, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9357, file: !209, line: 2698, column: 9)
!9366 = !DILocation(line: 2699, column: 7, scope: !9365)
!9367 = !DILocation(line: 2702, column: 24, scope: !9321)
!9368 = !DILocation(line: 2702, column: 29, scope: !9321)
!9369 = !DILocation(line: 2702, column: 33, scope: !9321)
!9370 = !DILocation(line: 2702, column: 39, scope: !9321)
!9371 = !DILocation(line: 2702, column: 2, scope: !9321)
!9372 = !DILocation(line: 2704, column: 9, scope: !9373)
!9373 = distinct !DILexicalBlock(scope: !9321, file: !209, line: 2704, column: 2)
!9374 = !DILocation(line: 2704, column: 7, scope: !9373)
!9375 = !DILocation(line: 2704, column: 14, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9373, file: !209, line: 2704, column: 2)
!9377 = !DILocation(line: 2704, column: 18, scope: !9376)
!9378 = !DILocation(line: 2704, column: 24, scope: !9376)
!9379 = !DILocation(line: 2704, column: 16, scope: !9376)
!9380 = !DILocation(line: 2704, column: 2, scope: !9373)
!9381 = !DILocalVariable(name: "val", scope: !9382, file: !209, line: 2705, type: !7)
!9382 = distinct !DILexicalBlock(scope: !9376, file: !209, line: 2704, column: 32)
!9383 = !DILocation(line: 2705, column: 16, scope: !9382)
!9384 = !DILocation(line: 2705, column: 22, scope: !9382)
!9385 = !DILocation(line: 2705, column: 27, scope: !9382)
!9386 = !DILocation(line: 2707, column: 23, scope: !9382)
!9387 = !DILocation(line: 2707, column: 3, scope: !9382)
!9388 = !DILocation(line: 2707, column: 6, scope: !9382)
!9389 = !DILocation(line: 2707, column: 15, scope: !9382)
!9390 = !DILocation(line: 2707, column: 21, scope: !9382)
!9391 = !DILocation(line: 2709, column: 7, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9382, file: !209, line: 2709, column: 7)
!9393 = !DILocation(line: 2709, column: 16, scope: !9392)
!9394 = !DILocation(line: 2709, column: 7, scope: !9382)
!9395 = !DILocation(line: 2714, column: 30, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9392, file: !209, line: 2709, column: 25)
!9397 = !DILocation(line: 2714, column: 33, scope: !9396)
!9398 = !DILocation(line: 2714, column: 10, scope: !9396)
!9399 = !DILocation(line: 2714, column: 8, scope: !9396)
!9400 = !DILocation(line: 2716, column: 19, scope: !9396)
!9401 = !DILocation(line: 2716, column: 24, scope: !9396)
!9402 = !DILocation(line: 2716, column: 29, scope: !9396)
!9403 = !DILocation(line: 2716, column: 4, scope: !9396)
!9404 = !DILocation(line: 2717, column: 3, scope: !9396)
!9405 = !DILocation(line: 2717, column: 14, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9392, file: !209, line: 2717, column: 14)
!9407 = !DILocation(line: 2717, column: 23, scope: !9406)
!9408 = !DILocation(line: 2717, column: 14, scope: !9392)
!9409 = !DILocation(line: 2722, column: 14, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9406, file: !209, line: 2717, column: 36)
!9411 = !DILocation(line: 2722, column: 19, scope: !9410)
!9412 = !DILocation(line: 2722, column: 24, scope: !9410)
!9413 = !DILocation(line: 2722, column: 4, scope: !9410)
!9414 = !DILocation(line: 2723, column: 3, scope: !9410)
!9415 = !DILocation(line: 2728, column: 32, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9417, file: !209, line: 2728, column: 8)
!9417 = distinct !DILexicalBlock(scope: !9406, file: !209, line: 2723, column: 10)
!9418 = !DILocation(line: 2728, column: 35, scope: !9416)
!9419 = !DILocation(line: 2728, column: 8, scope: !9416)
!9420 = !DILocation(line: 2728, column: 8, scope: !9417)
!9421 = !DILocation(line: 2729, column: 31, scope: !9416)
!9422 = !DILocation(line: 2729, column: 34, scope: !9416)
!9423 = !DILocation(line: 2729, column: 11, scope: !9416)
!9424 = !DILocation(line: 2729, column: 9, scope: !9416)
!9425 = !DILocation(line: 2729, column: 5, scope: !9416)
!9426 = !DILocation(line: 2731, column: 14, scope: !9417)
!9427 = !DILocation(line: 2731, column: 19, scope: !9417)
!9428 = !DILocation(line: 2731, column: 24, scope: !9417)
!9429 = !DILocation(line: 2731, column: 4, scope: !9417)
!9430 = !DILocation(line: 2733, column: 2, scope: !9382)
!9431 = !DILocation(line: 2704, column: 28, scope: !9376)
!9432 = !DILocation(line: 2704, column: 2, scope: !9376)
!9433 = distinct !{!9433, !9380, !9434}
!9434 = !DILocation(line: 2733, column: 2, scope: !9373)
!9435 = !DILocation(line: 2735, column: 9, scope: !9321)
!9436 = !DILocation(line: 2735, column: 15, scope: !9321)
!9437 = !DILocation(line: 2735, column: 2, scope: !9321)
!9438 = distinct !DISubprogram(name: "ni_ao_cmdtest", scope: !209, file: !209, line: 3302, type: !4237, scopeLine: 3304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!9439 = !DILocalVariable(name: "dev", arg: 1, scope: !9438, file: !209, line: 3302, type: !3350)
!9440 = !DILocation(line: 3302, column: 48, scope: !9438)
!9441 = !DILocalVariable(name: "s", arg: 2, scope: !9438, file: !209, line: 3302, type: !4119)
!9442 = !DILocation(line: 3302, column: 78, scope: !9438)
!9443 = !DILocalVariable(name: "cmd", arg: 3, scope: !9438, file: !209, line: 3303, type: !4239)
!9444 = !DILocation(line: 3303, column: 24, scope: !9438)
!9445 = !DILocalVariable(name: "board", scope: !9438, file: !209, line: 3305, type: !4959)
!9446 = !DILocation(line: 3305, column: 32, scope: !9438)
!9447 = !DILocation(line: 3305, column: 40, scope: !9438)
!9448 = !DILocation(line: 3305, column: 45, scope: !9438)
!9449 = !DILocalVariable(name: "devpriv", scope: !9438, file: !209, line: 3306, type: !4731)
!9450 = !DILocation(line: 3306, column: 21, scope: !9438)
!9451 = !DILocation(line: 3306, column: 31, scope: !9438)
!9452 = !DILocation(line: 3306, column: 36, scope: !9438)
!9453 = !DILocalVariable(name: "err", scope: !9438, file: !209, line: 3307, type: !429)
!9454 = !DILocation(line: 3307, column: 6, scope: !9438)
!9455 = !DILocalVariable(name: "tmp", scope: !9438, file: !209, line: 3308, type: !7)
!9456 = !DILocation(line: 3308, column: 15, scope: !9438)
!9457 = !DILocation(line: 3312, column: 35, scope: !9438)
!9458 = !DILocation(line: 3312, column: 40, scope: !9438)
!9459 = !DILocation(line: 3312, column: 9, scope: !9438)
!9460 = !DILocation(line: 3312, column: 6, scope: !9438)
!9461 = !DILocation(line: 3313, column: 35, scope: !9438)
!9462 = !DILocation(line: 3313, column: 40, scope: !9438)
!9463 = !DILocation(line: 3313, column: 9, scope: !9438)
!9464 = !DILocation(line: 3313, column: 6, scope: !9438)
!9465 = !DILocation(line: 3315, column: 35, scope: !9438)
!9466 = !DILocation(line: 3315, column: 40, scope: !9438)
!9467 = !DILocation(line: 3315, column: 9, scope: !9438)
!9468 = !DILocation(line: 3315, column: 6, scope: !9438)
!9469 = !DILocation(line: 3316, column: 35, scope: !9438)
!9470 = !DILocation(line: 3316, column: 40, scope: !9438)
!9471 = !DILocation(line: 3316, column: 9, scope: !9438)
!9472 = !DILocation(line: 3316, column: 6, scope: !9438)
!9473 = !DILocation(line: 3317, column: 35, scope: !9438)
!9474 = !DILocation(line: 3317, column: 40, scope: !9438)
!9475 = !DILocation(line: 3317, column: 9, scope: !9438)
!9476 = !DILocation(line: 3317, column: 6, scope: !9438)
!9477 = !DILocation(line: 3319, column: 6, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9438, file: !209, line: 3319, column: 6)
!9479 = !DILocation(line: 3319, column: 6, scope: !9438)
!9480 = !DILocation(line: 3320, column: 3, scope: !9478)
!9481 = !DILocation(line: 3324, column: 40, scope: !9438)
!9482 = !DILocation(line: 3324, column: 45, scope: !9438)
!9483 = !DILocation(line: 3324, column: 9, scope: !9438)
!9484 = !DILocation(line: 3324, column: 6, scope: !9438)
!9485 = !DILocation(line: 3325, column: 40, scope: !9438)
!9486 = !DILocation(line: 3325, column: 45, scope: !9438)
!9487 = !DILocation(line: 3325, column: 9, scope: !9438)
!9488 = !DILocation(line: 3325, column: 6, scope: !9438)
!9489 = !DILocation(line: 3326, column: 40, scope: !9438)
!9490 = !DILocation(line: 3326, column: 45, scope: !9438)
!9491 = !DILocation(line: 3326, column: 9, scope: !9438)
!9492 = !DILocation(line: 3326, column: 6, scope: !9438)
!9493 = !DILocation(line: 3330, column: 6, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9438, file: !209, line: 3330, column: 6)
!9495 = !DILocation(line: 3330, column: 6, scope: !9438)
!9496 = !DILocation(line: 3331, column: 3, scope: !9494)
!9497 = !DILocation(line: 3335, column: 10, scope: !9438)
!9498 = !DILocation(line: 3335, column: 15, scope: !9438)
!9499 = !DILocation(line: 3335, column: 2, scope: !9438)
!9500 = !DILocation(line: 3337, column: 39, scope: !9501)
!9501 = distinct !DILexicalBlock(scope: !9438, file: !209, line: 3335, column: 26)
!9502 = !DILocation(line: 3337, column: 44, scope: !9501)
!9503 = !DILocation(line: 3337, column: 10, scope: !9501)
!9504 = !DILocation(line: 3337, column: 7, scope: !9501)
!9505 = !DILocation(line: 3338, column: 3, scope: !9501)
!9506 = !DILocation(line: 3340, column: 37, scope: !9501)
!9507 = !DILocation(line: 3342, column: 10, scope: !9501)
!9508 = !DILocation(line: 3342, column: 19, scope: !9501)
!9509 = !DILocation(line: 3340, column: 10, scope: !9501)
!9510 = !DILocation(line: 3340, column: 7, scope: !9501)
!9511 = !DILocation(line: 3343, column: 3, scope: !9501)
!9512 = !DILocation(line: 3346, column: 6, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9438, file: !209, line: 3346, column: 6)
!9514 = !DILocation(line: 3346, column: 11, scope: !9513)
!9515 = !DILocation(line: 3346, column: 26, scope: !9513)
!9516 = !DILocation(line: 3346, column: 6, scope: !9438)
!9517 = !DILocation(line: 3347, column: 40, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9513, file: !209, line: 3346, column: 41)
!9519 = !DILocation(line: 3347, column: 45, scope: !9518)
!9520 = !DILocation(line: 3348, column: 11, scope: !9518)
!9521 = !DILocation(line: 3348, column: 18, scope: !9518)
!9522 = !DILocation(line: 3347, column: 10, scope: !9518)
!9523 = !DILocation(line: 3347, column: 7, scope: !9518)
!9524 = !DILocation(line: 3349, column: 40, scope: !9518)
!9525 = !DILocation(line: 3349, column: 45, scope: !9518)
!9526 = !DILocation(line: 3350, column: 11, scope: !9518)
!9527 = !DILocation(line: 3350, column: 20, scope: !9518)
!9528 = !DILocation(line: 3350, column: 29, scope: !9518)
!9529 = !DILocation(line: 3349, column: 10, scope: !9518)
!9530 = !DILocation(line: 3349, column: 7, scope: !9518)
!9531 = !DILocation(line: 3352, column: 2, scope: !9518)
!9532 = !DILocation(line: 3353, column: 31, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9513, file: !209, line: 3352, column: 9)
!9534 = !DILocation(line: 3355, column: 11, scope: !9533)
!9535 = !DILocation(line: 3355, column: 20, scope: !9533)
!9536 = !DILocation(line: 3353, column: 10, scope: !9533)
!9537 = !DILocation(line: 3353, column: 7, scope: !9533)
!9538 = !DILocation(line: 3358, column: 38, scope: !9438)
!9539 = !DILocation(line: 3358, column: 43, scope: !9438)
!9540 = !DILocation(line: 3358, column: 9, scope: !9438)
!9541 = !DILocation(line: 3358, column: 6, scope: !9438)
!9542 = !DILocation(line: 3359, column: 38, scope: !9438)
!9543 = !DILocation(line: 3359, column: 43, scope: !9438)
!9544 = !DILocation(line: 3360, column: 9, scope: !9438)
!9545 = !DILocation(line: 3360, column: 14, scope: !9438)
!9546 = !DILocation(line: 3359, column: 9, scope: !9438)
!9547 = !DILocation(line: 3359, column: 6, scope: !9438)
!9548 = !DILocation(line: 3361, column: 39, scope: !9438)
!9549 = !DILocation(line: 3361, column: 44, scope: !9438)
!9550 = !DILocation(line: 3361, column: 9, scope: !9438)
!9551 = !DILocation(line: 3361, column: 6, scope: !9438)
!9552 = !DILocation(line: 3363, column: 6, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9438, file: !209, line: 3363, column: 6)
!9554 = !DILocation(line: 3363, column: 6, scope: !9438)
!9555 = !DILocation(line: 3364, column: 3, scope: !9553)
!9556 = !DILocation(line: 3367, column: 6, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9438, file: !209, line: 3367, column: 6)
!9558 = !DILocation(line: 3367, column: 11, scope: !9557)
!9559 = !DILocation(line: 3367, column: 26, scope: !9557)
!9560 = !DILocation(line: 3367, column: 6, scope: !9438)
!9561 = !DILocation(line: 3368, column: 9, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9557, file: !209, line: 3367, column: 41)
!9563 = !DILocation(line: 3368, column: 14, scope: !9562)
!9564 = !DILocation(line: 3368, column: 7, scope: !9562)
!9565 = !DILocation(line: 3370, column: 22, scope: !9562)
!9566 = !DILocation(line: 3370, column: 42, scope: !9562)
!9567 = !DILocation(line: 3371, column: 14, scope: !9562)
!9568 = !DILocation(line: 3371, column: 19, scope: !9562)
!9569 = !DILocation(line: 3372, column: 14, scope: !9562)
!9570 = !DILocation(line: 3372, column: 19, scope: !9562)
!9571 = !DILocation(line: 3370, column: 27, scope: !9562)
!9572 = !DILocation(line: 3370, column: 7, scope: !9562)
!9573 = !DILocation(line: 3369, column: 3, scope: !9562)
!9574 = !DILocation(line: 3369, column: 8, scope: !9562)
!9575 = !DILocation(line: 3369, column: 23, scope: !9562)
!9576 = !DILocation(line: 3373, column: 7, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9562, file: !209, line: 3373, column: 7)
!9578 = !DILocation(line: 3373, column: 14, scope: !9577)
!9579 = !DILocation(line: 3373, column: 19, scope: !9577)
!9580 = !DILocation(line: 3373, column: 11, scope: !9577)
!9581 = !DILocation(line: 3373, column: 7, scope: !9562)
!9582 = !DILocation(line: 3374, column: 7, scope: !9577)
!9583 = !DILocation(line: 3374, column: 4, scope: !9577)
!9584 = !DILocation(line: 3375, column: 2, scope: !9562)
!9585 = !DILocation(line: 3376, column: 6, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9438, file: !209, line: 3376, column: 6)
!9587 = !DILocation(line: 3376, column: 6, scope: !9438)
!9588 = !DILocation(line: 3377, column: 3, scope: !9586)
!9589 = !DILocation(line: 3379, column: 2, scope: !9438)
!9590 = !DILocation(line: 3380, column: 1, scope: !9438)
!9591 = distinct !DISubprogram(name: "ni_ao_cmd", scope: !209, file: !209, line: 3262, type: !4233, scopeLine: 3263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!9592 = !DILocalVariable(name: "dev", arg: 1, scope: !9591, file: !209, line: 3262, type: !3350)
!9593 = !DILocation(line: 3262, column: 44, scope: !9591)
!9594 = !DILocalVariable(name: "s", arg: 2, scope: !9591, file: !209, line: 3262, type: !4119)
!9595 = !DILocation(line: 3262, column: 74, scope: !9591)
!9596 = !DILocalVariable(name: "devpriv", scope: !9591, file: !209, line: 3264, type: !4731)
!9597 = !DILocation(line: 3264, column: 21, scope: !9591)
!9598 = !DILocation(line: 3264, column: 31, scope: !9591)
!9599 = !DILocation(line: 3264, column: 36, scope: !9591)
!9600 = !DILocalVariable(name: "cmd", scope: !9591, file: !209, line: 3265, type: !8662)
!9601 = !DILocation(line: 3265, column: 27, scope: !9591)
!9602 = !DILocation(line: 3265, column: 34, scope: !9591)
!9603 = !DILocation(line: 3265, column: 37, scope: !9591)
!9604 = !DILocation(line: 3265, column: 44, scope: !9591)
!9605 = !DILocation(line: 3267, column: 6, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9591, file: !209, line: 3267, column: 6)
!9607 = !DILocation(line: 3267, column: 11, scope: !9606)
!9608 = !DILocation(line: 3267, column: 15, scope: !9606)
!9609 = !DILocation(line: 3267, column: 6, scope: !9591)
!9610 = !DILocation(line: 3268, column: 3, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9606, file: !209, line: 3267, column: 21)
!9612 = !DILocation(line: 3269, column: 3, scope: !9611)
!9613 = !DILocation(line: 3273, column: 24, scope: !9591)
!9614 = !DILocation(line: 3273, column: 29, scope: !9591)
!9615 = !DILocation(line: 3273, column: 2, scope: !9591)
!9616 = !DILocation(line: 3276, column: 24, scope: !9591)
!9617 = !DILocation(line: 3276, column: 29, scope: !9591)
!9618 = !DILocation(line: 3276, column: 2, scope: !9591)
!9619 = !DILocation(line: 3277, column: 25, scope: !9591)
!9620 = !DILocation(line: 3277, column: 30, scope: !9591)
!9621 = !DILocation(line: 3277, column: 2, scope: !9591)
!9622 = !DILocation(line: 3278, column: 23, scope: !9591)
!9623 = !DILocation(line: 3278, column: 28, scope: !9591)
!9624 = !DILocation(line: 3278, column: 2, scope: !9591)
!9625 = !DILocation(line: 3279, column: 25, scope: !9591)
!9626 = !DILocation(line: 3279, column: 30, scope: !9591)
!9627 = !DILocation(line: 3279, column: 2, scope: !9591)
!9628 = !DILocation(line: 3280, column: 32, scope: !9591)
!9629 = !DILocation(line: 3280, column: 37, scope: !9591)
!9630 = !DILocation(line: 3280, column: 2, scope: !9591)
!9631 = !DILocation(line: 3281, column: 26, scope: !9591)
!9632 = !DILocation(line: 3281, column: 2, scope: !9591)
!9633 = !DILocation(line: 3282, column: 27, scope: !9591)
!9634 = !DILocation(line: 3282, column: 36, scope: !9591)
!9635 = !DILocation(line: 3282, column: 50, scope: !9591)
!9636 = !DILocation(line: 3282, column: 53, scope: !9591)
!9637 = !DILocation(line: 3282, column: 2, scope: !9591)
!9638 = !DILocation(line: 3283, column: 27, scope: !9591)
!9639 = !DILocation(line: 3283, column: 32, scope: !9591)
!9640 = !DILocation(line: 3283, column: 2, scope: !9591)
!9641 = !DILocation(line: 3296, column: 2, scope: !9591)
!9642 = !DILocation(line: 3296, column: 11, scope: !9591)
!9643 = !DILocation(line: 3296, column: 27, scope: !9591)
!9644 = !DILocation(line: 3297, column: 2, scope: !9591)
!9645 = !DILocation(line: 3298, column: 1, scope: !9591)
!9646 = distinct !DISubprogram(name: "ni_ao_reset", scope: !209, file: !209, line: 3382, type: !4233, scopeLine: 3383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!9647 = !DILocalVariable(name: "dev", arg: 1, scope: !9646, file: !209, line: 3382, type: !3350)
!9648 = !DILocation(line: 3382, column: 46, scope: !9646)
!9649 = !DILocalVariable(name: "s", arg: 2, scope: !9646, file: !209, line: 3382, type: !4119)
!9650 = !DILocation(line: 3382, column: 76, scope: !9646)
!9651 = !DILocalVariable(name: "devpriv", scope: !9646, file: !209, line: 3392, type: !4731)
!9652 = !DILocation(line: 3392, column: 21, scope: !9646)
!9653 = !DILocation(line: 3392, column: 31, scope: !9646)
!9654 = !DILocation(line: 3392, column: 36, scope: !9646)
!9655 = !DILocation(line: 3394, column: 29, scope: !9646)
!9656 = !DILocation(line: 3394, column: 2, scope: !9646)
!9657 = !DILocation(line: 3397, column: 6, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9646, file: !209, line: 3397, column: 6)
!9659 = !DILocation(line: 3397, column: 15, scope: !9658)
!9660 = !DILocation(line: 3397, column: 6, scope: !9646)
!9661 = !DILocation(line: 3399, column: 17, scope: !9658)
!9662 = !DILocation(line: 3399, column: 3, scope: !9658)
!9663 = !DILocation(line: 3402, column: 16, scope: !9646)
!9664 = !DILocation(line: 3402, column: 2, scope: !9646)
!9665 = !DILocation(line: 3405, column: 16, scope: !9646)
!9666 = !DILocation(line: 3405, column: 2, scope: !9646)
!9667 = !DILocation(line: 3412, column: 2, scope: !9646)
!9668 = !DILocation(line: 3412, column: 11, scope: !9646)
!9669 = !DILocation(line: 3412, column: 20, scope: !9646)
!9670 = !DILocation(line: 3413, column: 2, scope: !9646)
!9671 = !DILocation(line: 3413, column: 11, scope: !9646)
!9672 = !DILocation(line: 3413, column: 20, scope: !9646)
!9673 = !DILocation(line: 3414, column: 2, scope: !9646)
!9674 = !DILocation(line: 3414, column: 11, scope: !9646)
!9675 = !DILocation(line: 3414, column: 20, scope: !9646)
!9676 = !DILocation(line: 3415, column: 2, scope: !9646)
!9677 = !DILocation(line: 3415, column: 11, scope: !9646)
!9678 = !DILocation(line: 3415, column: 20, scope: !9646)
!9679 = !DILocation(line: 3416, column: 6, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9646, file: !209, line: 3416, column: 6)
!9681 = !DILocation(line: 3416, column: 15, scope: !9680)
!9682 = !DILocation(line: 3416, column: 6, scope: !9646)
!9683 = !DILocation(line: 3417, column: 3, scope: !9680)
!9684 = !DILocation(line: 3417, column: 12, scope: !9680)
!9685 = !DILocation(line: 3417, column: 21, scope: !9680)
!9686 = !DILocation(line: 3419, column: 3, scope: !9680)
!9687 = !DILocation(line: 3419, column: 12, scope: !9680)
!9688 = !DILocation(line: 3419, column: 21, scope: !9680)
!9689 = !DILocation(line: 3421, column: 16, scope: !9646)
!9690 = !DILocation(line: 3421, column: 2, scope: !9646)
!9691 = !DILocation(line: 3422, column: 16, scope: !9646)
!9692 = !DILocation(line: 3422, column: 2, scope: !9646)
!9693 = !DILocation(line: 3423, column: 16, scope: !9646)
!9694 = !DILocation(line: 3423, column: 2, scope: !9646)
!9695 = !DILocation(line: 3424, column: 16, scope: !9646)
!9696 = !DILocation(line: 3424, column: 2, scope: !9646)
!9697 = !DILocation(line: 3425, column: 16, scope: !9646)
!9698 = !DILocation(line: 3425, column: 2, scope: !9646)
!9699 = !DILocation(line: 3426, column: 16, scope: !9646)
!9700 = !DILocation(line: 3426, column: 2, scope: !9646)
!9701 = !DILocation(line: 3427, column: 16, scope: !9646)
!9702 = !DILocation(line: 3427, column: 21, scope: !9646)
!9703 = !DILocation(line: 3427, column: 30, scope: !9646)
!9704 = !DILocation(line: 3427, column: 2, scope: !9646)
!9705 = !DILocation(line: 3428, column: 16, scope: !9646)
!9706 = !DILocation(line: 3428, column: 2, scope: !9646)
!9707 = !DILocation(line: 3429, column: 16, scope: !9646)
!9708 = !DILocation(line: 3429, column: 2, scope: !9646)
!9709 = !DILocation(line: 3432, column: 14, scope: !9646)
!9710 = !DILocation(line: 3432, column: 2, scope: !9646)
!9711 = !DILocation(line: 3435, column: 16, scope: !9646)
!9712 = !DILocation(line: 3435, column: 2, scope: !9646)
!9713 = !DILocation(line: 3436, column: 16, scope: !9646)
!9714 = !DILocation(line: 3436, column: 2, scope: !9646)
!9715 = !DILocation(line: 3439, column: 6, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9646, file: !209, line: 3439, column: 6)
!9717 = !DILocation(line: 3439, column: 15, scope: !9716)
!9718 = !DILocation(line: 3439, column: 6, scope: !9646)
!9719 = !DILocation(line: 3440, column: 18, scope: !9720)
!9720 = distinct !DILexicalBlock(scope: !9716, file: !209, line: 3439, column: 24)
!9721 = !DILocation(line: 3440, column: 30, scope: !9720)
!9722 = !DILocation(line: 3440, column: 33, scope: !9720)
!9723 = !DILocation(line: 3440, column: 27, scope: !9720)
!9724 = !DILocation(line: 3440, column: 41, scope: !9720)
!9725 = !DILocation(line: 3440, column: 3, scope: !9720)
!9726 = !DILocation(line: 3442, column: 18, scope: !9720)
!9727 = !DILocation(line: 3442, column: 3, scope: !9720)
!9728 = !DILocation(line: 3444, column: 2, scope: !9720)
!9729 = !DILocation(line: 3445, column: 16, scope: !9646)
!9730 = !DILocation(line: 3445, column: 2, scope: !9646)
!9731 = !DILocation(line: 3448, column: 2, scope: !9646)
!9732 = distinct !DISubprogram(name: "ni_ao_munge", scope: !209, file: !209, line: 2520, type: !4245, scopeLine: 2523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!9733 = !DILocalVariable(name: "dev", arg: 1, scope: !9732, file: !209, line: 2520, type: !3350)
!9734 = !DILocation(line: 2520, column: 47, scope: !9732)
!9735 = !DILocalVariable(name: "s", arg: 2, scope: !9732, file: !209, line: 2520, type: !4119)
!9736 = !DILocation(line: 2520, column: 77, scope: !9732)
!9737 = !DILocalVariable(name: "data", arg: 3, scope: !9732, file: !209, line: 2521, type: !463)
!9738 = !DILocation(line: 2521, column: 10, scope: !9732)
!9739 = !DILocalVariable(name: "num_bytes", arg: 4, scope: !9732, file: !209, line: 2521, type: !7)
!9740 = !DILocation(line: 2521, column: 29, scope: !9732)
!9741 = !DILocalVariable(name: "chan_index", arg: 5, scope: !9732, file: !209, line: 2522, type: !7)
!9742 = !DILocation(line: 2522, column: 17, scope: !9732)
!9743 = !DILocalVariable(name: "cmd", scope: !9732, file: !209, line: 2524, type: !4239)
!9744 = !DILocation(line: 2524, column: 21, scope: !9732)
!9745 = !DILocation(line: 2524, column: 28, scope: !9732)
!9746 = !DILocation(line: 2524, column: 31, scope: !9732)
!9747 = !DILocation(line: 2524, column: 38, scope: !9732)
!9748 = !DILocalVariable(name: "nsamples", scope: !9732, file: !209, line: 2525, type: !7)
!9749 = !DILocation(line: 2525, column: 15, scope: !9732)
!9750 = !DILocation(line: 2525, column: 50, scope: !9732)
!9751 = !DILocation(line: 2525, column: 53, scope: !9732)
!9752 = !DILocation(line: 2525, column: 26, scope: !9732)
!9753 = !DILocalVariable(name: "array", scope: !9732, file: !209, line: 2526, type: !9191)
!9754 = !DILocation(line: 2526, column: 18, scope: !9732)
!9755 = !DILocation(line: 2526, column: 26, scope: !9732)
!9756 = !DILocalVariable(name: "i", scope: !9732, file: !209, line: 2527, type: !7)
!9757 = !DILocation(line: 2527, column: 15, scope: !9732)
!9758 = !DILocalVariable(name: "buf", scope: !9732, file: !209, line: 2529, type: !444)
!9759 = !DILocation(line: 2529, column: 9, scope: !9732)
!9760 = !DILocalVariable(name: "barray", scope: !9732, file: !209, line: 2529, type: !9200)
!9761 = !DILocation(line: 2529, column: 15, scope: !9732)
!9762 = !DILocation(line: 2529, column: 24, scope: !9732)
!9763 = !DILocation(line: 2532, column: 9, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9732, file: !209, line: 2532, column: 2)
!9765 = !DILocation(line: 2532, column: 7, scope: !9764)
!9766 = !DILocation(line: 2532, column: 14, scope: !9767)
!9767 = distinct !DILexicalBlock(scope: !9764, file: !209, line: 2532, column: 2)
!9768 = !DILocation(line: 2532, column: 18, scope: !9767)
!9769 = !DILocation(line: 2532, column: 16, scope: !9767)
!9770 = !DILocation(line: 2532, column: 2, scope: !9764)
!9771 = !DILocalVariable(name: "range", scope: !9772, file: !209, line: 2533, type: !7)
!9772 = distinct !DILexicalBlock(scope: !9767, file: !209, line: 2532, column: 33)
!9773 = !DILocation(line: 2533, column: 16, scope: !9772)
!9774 = !DILocation(line: 2533, column: 24, scope: !9772)
!9775 = !DILocalVariable(name: "val", scope: !9772, file: !209, line: 2534, type: !438)
!9776 = !DILocation(line: 2534, column: 18, scope: !9772)
!9777 = !DILocation(line: 2534, column: 24, scope: !9772)
!9778 = !DILocation(line: 2534, column: 30, scope: !9772)
!9779 = !DILocation(line: 2540, column: 31, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !9772, file: !209, line: 2540, column: 7)
!9781 = !DILocation(line: 2540, column: 34, scope: !9780)
!9782 = !DILocation(line: 2540, column: 7, scope: !9780)
!9783 = !DILocation(line: 2540, column: 7, scope: !9772)
!9784 = !DILocation(line: 2541, column: 30, scope: !9780)
!9785 = !DILocation(line: 2541, column: 33, scope: !9780)
!9786 = !DILocation(line: 2541, column: 10, scope: !9780)
!9787 = !DILocation(line: 2541, column: 8, scope: !9780)
!9788 = !DILocation(line: 2541, column: 4, scope: !9780)
!9789 = !DILocation(line: 2543, column: 9, scope: !9772)
!9790 = !DILocation(line: 2543, column: 7, scope: !9772)
!9791 = !DILocation(line: 2544, column: 15, scope: !9772)
!9792 = !DILocation(line: 2544, column: 3, scope: !9772)
!9793 = !DILocation(line: 2544, column: 10, scope: !9772)
!9794 = !DILocation(line: 2544, column: 13, scope: !9772)
!9795 = !DILocation(line: 2548, column: 13, scope: !9772)
!9796 = !DILocation(line: 2549, column: 17, scope: !9772)
!9797 = !DILocation(line: 2549, column: 22, scope: !9772)
!9798 = !DILocation(line: 2549, column: 14, scope: !9772)
!9799 = !DILocation(line: 2550, column: 2, scope: !9772)
!9800 = !DILocation(line: 2532, column: 29, scope: !9767)
!9801 = !DILocation(line: 2532, column: 2, scope: !9767)
!9802 = distinct !{!9802, !9770, !9803}
!9803 = !DILocation(line: 2550, column: 2, scope: !9764)
!9804 = !DILocation(line: 2551, column: 1, scope: !9732)
!9805 = distinct !DISubprogram(name: "init_ao_67xx", scope: !209, file: !209, line: 3945, type: !4354, scopeLine: 3946, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!9806 = !DILocalVariable(name: "dev", arg: 1, scope: !9805, file: !209, line: 3945, type: !3350)
!9807 = !DILocation(line: 3945, column: 48, scope: !9805)
!9808 = !DILocalVariable(name: "s", arg: 2, scope: !9805, file: !209, line: 3945, type: !4119)
!9809 = !DILocation(line: 3945, column: 78, scope: !9805)
!9810 = !DILocalVariable(name: "i", scope: !9805, file: !209, line: 3947, type: !429)
!9811 = !DILocation(line: 3947, column: 6, scope: !9805)
!9812 = !DILocation(line: 3949, column: 9, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !9805, file: !209, line: 3949, column: 2)
!9814 = !DILocation(line: 3949, column: 7, scope: !9813)
!9815 = !DILocation(line: 3949, column: 14, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9813, file: !209, line: 3949, column: 2)
!9817 = !DILocation(line: 3949, column: 18, scope: !9816)
!9818 = !DILocation(line: 3949, column: 21, scope: !9816)
!9819 = !DILocation(line: 3949, column: 16, scope: !9816)
!9820 = !DILocation(line: 3949, column: 2, scope: !9813)
!9821 = !DILocation(line: 3950, column: 18, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9816, file: !209, line: 3949, column: 34)
!9823 = !DILocation(line: 3950, column: 23, scope: !9822)
!9824 = !DILocation(line: 3950, column: 3, scope: !9822)
!9825 = !DILocation(line: 3952, column: 2, scope: !9822)
!9826 = !DILocation(line: 3949, column: 30, scope: !9816)
!9827 = !DILocation(line: 3949, column: 2, scope: !9816)
!9828 = distinct !{!9828, !9820, !9829}
!9829 = !DILocation(line: 3952, column: 2, scope: !9813)
!9830 = !DILocation(line: 3953, column: 17, scope: !9805)
!9831 = !DILocation(line: 3953, column: 2, scope: !9805)
!9832 = !DILocation(line: 3954, column: 1, scope: !9805)
!9833 = distinct !DISubprogram(name: "ni_m_series_dio_insn_bits", scope: !209, file: !209, line: 3521, type: !4216, scopeLine: 3525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!9834 = !DILocalVariable(name: "dev", arg: 1, scope: !9833, file: !209, line: 3521, type: !3350)
!9835 = !DILocation(line: 3521, column: 60, scope: !9833)
!9836 = !DILocalVariable(name: "s", arg: 2, scope: !9833, file: !209, line: 3522, type: !4119)
!9837 = !DILocation(line: 3522, column: 35, scope: !9833)
!9838 = !DILocalVariable(name: "insn", arg: 3, scope: !9833, file: !209, line: 3523, type: !4218)
!9839 = !DILocation(line: 3523, column: 30, scope: !9833)
!9840 = !DILocalVariable(name: "data", arg: 4, scope: !9833, file: !209, line: 3524, type: !1365)
!9841 = !DILocation(line: 3524, column: 24, scope: !9833)
!9842 = !DILocation(line: 3526, column: 30, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9833, file: !209, line: 3526, column: 6)
!9844 = !DILocation(line: 3526, column: 33, scope: !9843)
!9845 = !DILocation(line: 3526, column: 6, scope: !9843)
!9846 = !DILocation(line: 3526, column: 6, scope: !9833)
!9847 = !DILocation(line: 3527, column: 13, scope: !9843)
!9848 = !DILocation(line: 3527, column: 18, scope: !9843)
!9849 = !DILocation(line: 3527, column: 21, scope: !9843)
!9850 = !DILocation(line: 3527, column: 3, scope: !9843)
!9851 = !DILocation(line: 3529, column: 21, scope: !9833)
!9852 = !DILocation(line: 3529, column: 12, scope: !9833)
!9853 = !DILocation(line: 3529, column: 2, scope: !9833)
!9854 = !DILocation(line: 3529, column: 10, scope: !9833)
!9855 = !DILocation(line: 3531, column: 9, scope: !9833)
!9856 = !DILocation(line: 3531, column: 15, scope: !9833)
!9857 = !DILocation(line: 3531, column: 2, scope: !9833)
!9858 = distinct !DISubprogram(name: "ni_m_series_dio_insn_config", scope: !209, file: !209, line: 3496, type: !4216, scopeLine: 3500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!9859 = !DILocalVariable(name: "dev", arg: 1, scope: !9858, file: !209, line: 3496, type: !3350)
!9860 = !DILocation(line: 3496, column: 62, scope: !9858)
!9861 = !DILocalVariable(name: "s", arg: 2, scope: !9858, file: !209, line: 3497, type: !4119)
!9862 = !DILocation(line: 3497, column: 37, scope: !9858)
!9863 = !DILocalVariable(name: "insn", arg: 3, scope: !9858, file: !209, line: 3498, type: !4218)
!9864 = !DILocation(line: 3498, column: 32, scope: !9858)
!9865 = !DILocalVariable(name: "data", arg: 4, scope: !9858, file: !209, line: 3499, type: !1365)
!9866 = !DILocation(line: 3499, column: 26, scope: !9858)
!9867 = !DILocalVariable(name: "ret", scope: !9858, file: !209, line: 3501, type: !429)
!9868 = !DILocation(line: 3501, column: 6, scope: !9858)
!9869 = !DILocation(line: 3503, column: 6, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9858, file: !209, line: 3503, column: 6)
!9871 = !DILocation(line: 3503, column: 14, scope: !9870)
!9872 = !DILocation(line: 3503, column: 6, scope: !9858)
!9873 = !DILocalVariable(name: "board", scope: !9874, file: !209, line: 3504, type: !4959)
!9874 = distinct !DILexicalBlock(scope: !9870, file: !209, line: 3503, column: 57)
!9875 = !DILocation(line: 3504, column: 33, scope: !9874)
!9876 = !DILocation(line: 3504, column: 41, scope: !9874)
!9877 = !DILocation(line: 3504, column: 46, scope: !9874)
!9878 = !DILocation(line: 3507, column: 13, scope: !9874)
!9879 = !DILocation(line: 3507, column: 20, scope: !9874)
!9880 = !DILocation(line: 3507, column: 3, scope: !9874)
!9881 = !DILocation(line: 3507, column: 11, scope: !9874)
!9882 = !DILocation(line: 3508, column: 3, scope: !9874)
!9883 = !DILocation(line: 3508, column: 11, scope: !9874)
!9884 = !DILocation(line: 3509, column: 3, scope: !9874)
!9885 = !DILocation(line: 3512, column: 31, scope: !9858)
!9886 = !DILocation(line: 3512, column: 36, scope: !9858)
!9887 = !DILocation(line: 3512, column: 39, scope: !9858)
!9888 = !DILocation(line: 3512, column: 45, scope: !9858)
!9889 = !DILocation(line: 3512, column: 8, scope: !9858)
!9890 = !DILocation(line: 3512, column: 6, scope: !9858)
!9891 = !DILocation(line: 3513, column: 6, scope: !9892)
!9892 = distinct !DILexicalBlock(scope: !9858, file: !209, line: 3513, column: 6)
!9893 = !DILocation(line: 3513, column: 6, scope: !9858)
!9894 = !DILocation(line: 3514, column: 10, scope: !9892)
!9895 = !DILocation(line: 3514, column: 3, scope: !9892)
!9896 = !DILocation(line: 3516, column: 12, scope: !9858)
!9897 = !DILocation(line: 3516, column: 17, scope: !9858)
!9898 = !DILocation(line: 3516, column: 20, scope: !9858)
!9899 = !DILocation(line: 3516, column: 2, scope: !9858)
!9900 = !DILocation(line: 3518, column: 9, scope: !9858)
!9901 = !DILocation(line: 3518, column: 15, scope: !9858)
!9902 = !DILocation(line: 3518, column: 2, scope: !9858)
!9903 = !DILocation(line: 3519, column: 1, scope: !9858)
!9904 = distinct !DISubprogram(name: "ni_cdio_cmdtest", scope: !209, file: !209, line: 3550, type: !4237, scopeLine: 3552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!9905 = !DILocalVariable(name: "dev", arg: 1, scope: !9904, file: !209, line: 3550, type: !3350)
!9906 = !DILocation(line: 3550, column: 50, scope: !9904)
!9907 = !DILocalVariable(name: "s", arg: 2, scope: !9904, file: !209, line: 3551, type: !4119)
!9908 = !DILocation(line: 3551, column: 32, scope: !9904)
!9909 = !DILocalVariable(name: "cmd", arg: 3, scope: !9904, file: !209, line: 3551, type: !4239)
!9910 = !DILocation(line: 3551, column: 54, scope: !9904)
!9911 = !DILocalVariable(name: "devpriv", scope: !9904, file: !209, line: 3553, type: !4731)
!9912 = !DILocation(line: 3553, column: 21, scope: !9904)
!9913 = !DILocation(line: 3553, column: 31, scope: !9904)
!9914 = !DILocation(line: 3553, column: 36, scope: !9904)
!9915 = !DILocalVariable(name: "bytes_per_scan", scope: !9904, file: !209, line: 3554, type: !7)
!9916 = !DILocation(line: 3554, column: 15, scope: !9904)
!9917 = !DILocalVariable(name: "err", scope: !9904, file: !209, line: 3555, type: !429)
!9918 = !DILocation(line: 3555, column: 6, scope: !9904)
!9919 = !DILocation(line: 3559, column: 35, scope: !9904)
!9920 = !DILocation(line: 3559, column: 40, scope: !9904)
!9921 = !DILocation(line: 3559, column: 9, scope: !9904)
!9922 = !DILocation(line: 3559, column: 6, scope: !9904)
!9923 = !DILocation(line: 3560, column: 35, scope: !9904)
!9924 = !DILocation(line: 3560, column: 40, scope: !9904)
!9925 = !DILocation(line: 3560, column: 9, scope: !9904)
!9926 = !DILocation(line: 3560, column: 6, scope: !9904)
!9927 = !DILocation(line: 3561, column: 35, scope: !9904)
!9928 = !DILocation(line: 3561, column: 40, scope: !9904)
!9929 = !DILocation(line: 3561, column: 9, scope: !9904)
!9930 = !DILocation(line: 3561, column: 6, scope: !9904)
!9931 = !DILocation(line: 3562, column: 35, scope: !9904)
!9932 = !DILocation(line: 3562, column: 40, scope: !9904)
!9933 = !DILocation(line: 3562, column: 9, scope: !9904)
!9934 = !DILocation(line: 3562, column: 6, scope: !9904)
!9935 = !DILocation(line: 3563, column: 35, scope: !9904)
!9936 = !DILocation(line: 3563, column: 40, scope: !9904)
!9937 = !DILocation(line: 3563, column: 9, scope: !9904)
!9938 = !DILocation(line: 3563, column: 6, scope: !9904)
!9939 = !DILocation(line: 3565, column: 6, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9904, file: !209, line: 3565, column: 6)
!9941 = !DILocation(line: 3565, column: 6, scope: !9904)
!9942 = !DILocation(line: 3566, column: 3, scope: !9940)
!9943 = !DILocation(line: 3573, column: 38, scope: !9904)
!9944 = !DILocation(line: 3573, column: 43, scope: !9904)
!9945 = !DILocation(line: 3573, column: 9, scope: !9904)
!9946 = !DILocation(line: 3573, column: 6, scope: !9904)
!9947 = !DILocation(line: 3579, column: 30, scope: !9904)
!9948 = !DILocation(line: 3581, column: 10, scope: !9904)
!9949 = !DILocation(line: 3581, column: 19, scope: !9904)
!9950 = !DILocation(line: 3579, column: 9, scope: !9904)
!9951 = !DILocation(line: 3579, column: 6, scope: !9904)
!9952 = !DILocation(line: 3582, column: 6, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9904, file: !209, line: 3582, column: 6)
!9954 = !DILocation(line: 3582, column: 36, scope: !9953)
!9955 = !DILocation(line: 3582, column: 41, scope: !9953)
!9956 = !DILocation(line: 3583, column: 6, scope: !9953)
!9957 = !DILocation(line: 3583, column: 35, scope: !9953)
!9958 = !DILocation(line: 3582, column: 6, scope: !9904)
!9959 = !DILocation(line: 3584, column: 7, scope: !9953)
!9960 = !DILocation(line: 3584, column: 3, scope: !9953)
!9961 = !DILocation(line: 3586, column: 38, scope: !9904)
!9962 = !DILocation(line: 3586, column: 43, scope: !9904)
!9963 = !DILocation(line: 3586, column: 9, scope: !9904)
!9964 = !DILocation(line: 3586, column: 6, scope: !9904)
!9965 = !DILocation(line: 3587, column: 38, scope: !9904)
!9966 = !DILocation(line: 3587, column: 43, scope: !9904)
!9967 = !DILocation(line: 3588, column: 9, scope: !9904)
!9968 = !DILocation(line: 3588, column: 14, scope: !9904)
!9969 = !DILocation(line: 3587, column: 9, scope: !9904)
!9970 = !DILocation(line: 3587, column: 6, scope: !9904)
!9971 = !DILocation(line: 3589, column: 45, scope: !9904)
!9972 = !DILocation(line: 3589, column: 48, scope: !9904)
!9973 = !DILocation(line: 3589, column: 19, scope: !9904)
!9974 = !DILocation(line: 3589, column: 17, scope: !9904)
!9975 = !DILocation(line: 3590, column: 6, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9904, file: !209, line: 3590, column: 6)
!9977 = !DILocation(line: 3590, column: 6, scope: !9904)
!9978 = !DILocation(line: 3591, column: 40, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9976, file: !209, line: 3590, column: 22)
!9980 = !DILocation(line: 3591, column: 45, scope: !9979)
!9981 = !DILocation(line: 3592, column: 11, scope: !9979)
!9982 = !DILocation(line: 3592, column: 14, scope: !9979)
!9983 = !DILocation(line: 3592, column: 21, scope: !9979)
!9984 = !DILocation(line: 3593, column: 11, scope: !9979)
!9985 = !DILocation(line: 3592, column: 36, scope: !9979)
!9986 = !DILocation(line: 3591, column: 10, scope: !9979)
!9987 = !DILocation(line: 3591, column: 7, scope: !9979)
!9988 = !DILocation(line: 3594, column: 2, scope: !9979)
!9989 = !DILocation(line: 3596, column: 6, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9904, file: !209, line: 3596, column: 6)
!9991 = !DILocation(line: 3596, column: 6, scope: !9904)
!9992 = !DILocation(line: 3597, column: 3, scope: !9990)
!9993 = !DILocation(line: 3603, column: 6, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9904, file: !209, line: 3603, column: 6)
!9995 = !DILocation(line: 3603, column: 11, scope: !9994)
!9996 = !DILocation(line: 3603, column: 20, scope: !9994)
!9997 = !DILocation(line: 3603, column: 23, scope: !9994)
!9998 = !DILocation(line: 3603, column: 28, scope: !9994)
!9999 = !DILocation(line: 3603, column: 41, scope: !9994)
!10000 = !DILocation(line: 3603, column: 6, scope: !9904)
!10001 = !DILocation(line: 3604, column: 33, scope: !9994)
!10002 = !DILocation(line: 3604, column: 38, scope: !9994)
!10003 = !DILocation(line: 3604, column: 41, scope: !9994)
!10004 = !DILocation(line: 3604, column: 10, scope: !9994)
!10005 = !DILocation(line: 3604, column: 7, scope: !9994)
!10006 = !DILocation(line: 3604, column: 3, scope: !9994)
!10007 = !DILocation(line: 3606, column: 6, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !9904, file: !209, line: 3606, column: 6)
!10009 = !DILocation(line: 3606, column: 6, scope: !9904)
!10010 = !DILocation(line: 3607, column: 3, scope: !10008)
!10011 = !DILocation(line: 3609, column: 2, scope: !9904)
!10012 = !DILocation(line: 3610, column: 1, scope: !9904)
!10013 = distinct !DISubprogram(name: "ni_cdio_cmd", scope: !209, file: !209, line: 3666, type: !4233, scopeLine: 3667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!10014 = !DILocalVariable(name: "dev", arg: 1, scope: !10013, file: !209, line: 3666, type: !3350)
!10015 = !DILocation(line: 3666, column: 46, scope: !10013)
!10016 = !DILocalVariable(name: "s", arg: 2, scope: !10013, file: !209, line: 3666, type: !4119)
!10017 = !DILocation(line: 3666, column: 76, scope: !10013)
!10018 = !DILocalVariable(name: "devpriv", scope: !10013, file: !209, line: 3668, type: !4731)
!10019 = !DILocation(line: 3668, column: 21, scope: !10013)
!10020 = !DILocation(line: 3668, column: 31, scope: !10013)
!10021 = !DILocation(line: 3668, column: 36, scope: !10013)
!10022 = !DILocalVariable(name: "cmd", scope: !10013, file: !209, line: 3669, type: !8662)
!10023 = !DILocation(line: 3669, column: 27, scope: !10013)
!10024 = !DILocation(line: 3669, column: 34, scope: !10013)
!10025 = !DILocation(line: 3669, column: 37, scope: !10013)
!10026 = !DILocation(line: 3669, column: 44, scope: !10013)
!10027 = !DILocalVariable(name: "cdo_mode_bits", scope: !10013, file: !209, line: 3670, type: !7)
!10028 = !DILocation(line: 3670, column: 15, scope: !10013)
!10029 = !DILocalVariable(name: "retval", scope: !10013, file: !209, line: 3671, type: !429)
!10030 = !DILocation(line: 3671, column: 6, scope: !10013)
!10031 = !DILocation(line: 3673, column: 12, scope: !10013)
!10032 = !DILocation(line: 3673, column: 2, scope: !10013)
!10033 = !DILocation(line: 3680, column: 4, scope: !10013)
!10034 = !DILocation(line: 3679, column: 32, scope: !10013)
!10035 = !DILocation(line: 3678, column: 18, scope: !10013)
!10036 = !DILocation(line: 3678, column: 16, scope: !10013)
!10037 = !DILocation(line: 3685, column: 6, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10013, file: !209, line: 3685, column: 6)
!10039 = !DILocation(line: 3685, column: 11, scope: !10038)
!10040 = !DILocation(line: 3685, column: 26, scope: !10038)
!10041 = !DILocation(line: 3685, column: 6, scope: !10013)
!10042 = !DILocation(line: 3686, column: 17, scope: !10038)
!10043 = !DILocation(line: 3686, column: 3, scope: !10038)
!10044 = !DILocation(line: 3687, column: 12, scope: !10013)
!10045 = !DILocation(line: 3687, column: 17, scope: !10013)
!10046 = !DILocation(line: 3687, column: 2, scope: !10013)
!10047 = !DILocation(line: 3688, column: 6, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !10013, file: !209, line: 3688, column: 6)
!10049 = !DILocation(line: 3688, column: 9, scope: !10048)
!10050 = !DILocation(line: 3688, column: 6, scope: !10013)
!10051 = !DILocation(line: 3689, column: 13, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !10048, file: !209, line: 3688, column: 18)
!10053 = !DILocation(line: 3689, column: 18, scope: !10052)
!10054 = !DILocation(line: 3689, column: 21, scope: !10052)
!10055 = !DILocation(line: 3689, column: 3, scope: !10052)
!10056 = !DILocation(line: 3690, column: 13, scope: !10052)
!10057 = !DILocation(line: 3690, column: 3, scope: !10052)
!10058 = !DILocation(line: 3691, column: 13, scope: !10052)
!10059 = !DILocation(line: 3691, column: 18, scope: !10052)
!10060 = !DILocation(line: 3691, column: 21, scope: !10052)
!10061 = !DILocation(line: 3691, column: 3, scope: !10052)
!10062 = !DILocation(line: 3692, column: 2, scope: !10052)
!10063 = !DILocation(line: 3693, column: 3, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10048, file: !209, line: 3692, column: 9)
!10065 = !DILocation(line: 3695, column: 3, scope: !10064)
!10066 = !DILocation(line: 3697, column: 39, scope: !10013)
!10067 = !DILocation(line: 3697, column: 11, scope: !10013)
!10068 = !DILocation(line: 3697, column: 9, scope: !10013)
!10069 = !DILocation(line: 3698, column: 6, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !10013, file: !209, line: 3698, column: 6)
!10071 = !DILocation(line: 3698, column: 13, scope: !10070)
!10072 = !DILocation(line: 3698, column: 6, scope: !10013)
!10073 = !DILocation(line: 3699, column: 10, scope: !10070)
!10074 = !DILocation(line: 3699, column: 3, scope: !10070)
!10075 = !DILocation(line: 3701, column: 27, scope: !10013)
!10076 = !DILocation(line: 3701, column: 36, scope: !10013)
!10077 = !DILocation(line: 3701, column: 51, scope: !10013)
!10078 = !DILocation(line: 3701, column: 54, scope: !10013)
!10079 = !DILocation(line: 3702, column: 6, scope: !10013)
!10080 = !DILocation(line: 3702, column: 9, scope: !10013)
!10081 = !DILocation(line: 3702, column: 16, scope: !10013)
!10082 = !DILocation(line: 3703, column: 28, scope: !10013)
!10083 = !DILocation(line: 3703, column: 6, scope: !10013)
!10084 = !DILocation(line: 3702, column: 31, scope: !10013)
!10085 = !DILocation(line: 3701, column: 2, scope: !10013)
!10086 = !DILocation(line: 3705, column: 2, scope: !10013)
!10087 = !DILocation(line: 3705, column: 5, scope: !10013)
!10088 = !DILocation(line: 3705, column: 12, scope: !10013)
!10089 = !DILocation(line: 3705, column: 20, scope: !10013)
!10090 = !DILocation(line: 3707, column: 2, scope: !10013)
!10091 = !DILocation(line: 3708, column: 1, scope: !10013)
!10092 = distinct !DISubprogram(name: "ni_cdio_cancel", scope: !209, file: !209, line: 3710, type: !4233, scopeLine: 3711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!10093 = !DILocalVariable(name: "dev", arg: 1, scope: !10092, file: !209, line: 3710, type: !3350)
!10094 = !DILocation(line: 3710, column: 49, scope: !10092)
!10095 = !DILocalVariable(name: "s", arg: 2, scope: !10092, file: !209, line: 3710, type: !4119)
!10096 = !DILocation(line: 3710, column: 79, scope: !10092)
!10097 = !DILocation(line: 3712, column: 12, scope: !10092)
!10098 = !DILocation(line: 3712, column: 2, scope: !10092)
!10099 = !DILocation(line: 3721, column: 12, scope: !10092)
!10100 = !DILocation(line: 3721, column: 2, scope: !10092)
!10101 = !DILocation(line: 3722, column: 30, scope: !10092)
!10102 = !DILocation(line: 3722, column: 2, scope: !10092)
!10103 = !DILocation(line: 3723, column: 2, scope: !10092)
!10104 = distinct !DISubprogram(name: "ni_dio_insn_bits", scope: !209, file: !209, line: 3472, type: !4216, scopeLine: 3476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!10105 = !DILocalVariable(name: "dev", arg: 1, scope: !10104, file: !209, line: 3472, type: !3350)
!10106 = !DILocation(line: 3472, column: 51, scope: !10104)
!10107 = !DILocalVariable(name: "s", arg: 2, scope: !10104, file: !209, line: 3473, type: !4119)
!10108 = !DILocation(line: 3473, column: 33, scope: !10104)
!10109 = !DILocalVariable(name: "insn", arg: 3, scope: !10104, file: !209, line: 3474, type: !4218)
!10110 = !DILocation(line: 3474, column: 28, scope: !10104)
!10111 = !DILocalVariable(name: "data", arg: 4, scope: !10104, file: !209, line: 3475, type: !1365)
!10112 = !DILocation(line: 3475, column: 22, scope: !10104)
!10113 = !DILocalVariable(name: "devpriv", scope: !10104, file: !209, line: 3477, type: !4731)
!10114 = !DILocation(line: 3477, column: 21, scope: !10104)
!10115 = !DILocation(line: 3477, column: 31, scope: !10104)
!10116 = !DILocation(line: 3477, column: 36, scope: !10104)
!10117 = !DILocation(line: 3480, column: 7, scope: !10118)
!10118 = distinct !DILexicalBlock(scope: !10104, file: !209, line: 3480, column: 6)
!10119 = !DILocation(line: 3480, column: 15, scope: !10118)
!10120 = !DILocation(line: 3480, column: 53, scope: !10118)
!10121 = !DILocation(line: 3481, column: 6, scope: !10118)
!10122 = !DILocation(line: 3481, column: 15, scope: !10118)
!10123 = !DILocation(line: 3480, column: 6, scope: !10104)
!10124 = !DILocation(line: 3482, column: 3, scope: !10118)
!10125 = !DILocation(line: 3484, column: 30, scope: !10126)
!10126 = distinct !DILexicalBlock(scope: !10104, file: !209, line: 3484, column: 6)
!10127 = !DILocation(line: 3484, column: 33, scope: !10126)
!10128 = !DILocation(line: 3484, column: 6, scope: !10126)
!10129 = !DILocation(line: 3484, column: 6, scope: !10104)
!10130 = !DILocation(line: 3485, column: 3, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10126, file: !209, line: 3484, column: 40)
!10132 = !DILocation(line: 3485, column: 12, scope: !10131)
!10133 = !DILocation(line: 3485, column: 23, scope: !10131)
!10134 = !DILocation(line: 3486, column: 26, scope: !10131)
!10135 = !DILocation(line: 3486, column: 3, scope: !10131)
!10136 = !DILocation(line: 3486, column: 12, scope: !10131)
!10137 = !DILocation(line: 3486, column: 23, scope: !10131)
!10138 = !DILocation(line: 3487, column: 17, scope: !10131)
!10139 = !DILocation(line: 3487, column: 22, scope: !10131)
!10140 = !DILocation(line: 3487, column: 31, scope: !10131)
!10141 = !DILocation(line: 3487, column: 3, scope: !10131)
!10142 = !DILocation(line: 3488, column: 2, scope: !10131)
!10143 = !DILocation(line: 3490, column: 25, scope: !10104)
!10144 = !DILocation(line: 3490, column: 12, scope: !10104)
!10145 = !DILocation(line: 3490, column: 2, scope: !10104)
!10146 = !DILocation(line: 3490, column: 10, scope: !10104)
!10147 = !DILocation(line: 3492, column: 9, scope: !10104)
!10148 = !DILocation(line: 3492, column: 15, scope: !10104)
!10149 = !DILocation(line: 3492, column: 2, scope: !10104)
!10150 = !DILocation(line: 3493, column: 1, scope: !10104)
!10151 = distinct !DISubprogram(name: "ni_dio_insn_config", scope: !209, file: !209, line: 3453, type: !4216, scopeLine: 3457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!10152 = !DILocalVariable(name: "dev", arg: 1, scope: !10151, file: !209, line: 3453, type: !3350)
!10153 = !DILocation(line: 3453, column: 53, scope: !10151)
!10154 = !DILocalVariable(name: "s", arg: 2, scope: !10151, file: !209, line: 3454, type: !4119)
!10155 = !DILocation(line: 3454, column: 35, scope: !10151)
!10156 = !DILocalVariable(name: "insn", arg: 3, scope: !10151, file: !209, line: 3455, type: !4218)
!10157 = !DILocation(line: 3455, column: 30, scope: !10151)
!10158 = !DILocalVariable(name: "data", arg: 4, scope: !10151, file: !209, line: 3456, type: !1365)
!10159 = !DILocation(line: 3456, column: 24, scope: !10151)
!10160 = !DILocalVariable(name: "devpriv", scope: !10151, file: !209, line: 3458, type: !4731)
!10161 = !DILocation(line: 3458, column: 21, scope: !10151)
!10162 = !DILocation(line: 3458, column: 31, scope: !10151)
!10163 = !DILocation(line: 3458, column: 36, scope: !10151)
!10164 = !DILocalVariable(name: "ret", scope: !10151, file: !209, line: 3459, type: !429)
!10165 = !DILocation(line: 3459, column: 6, scope: !10151)
!10166 = !DILocation(line: 3461, column: 31, scope: !10151)
!10167 = !DILocation(line: 3461, column: 36, scope: !10151)
!10168 = !DILocation(line: 3461, column: 39, scope: !10151)
!10169 = !DILocation(line: 3461, column: 45, scope: !10151)
!10170 = !DILocation(line: 3461, column: 8, scope: !10151)
!10171 = !DILocation(line: 3461, column: 6, scope: !10151)
!10172 = !DILocation(line: 3462, column: 6, scope: !10173)
!10173 = distinct !DILexicalBlock(scope: !10151, file: !209, line: 3462, column: 6)
!10174 = !DILocation(line: 3462, column: 6, scope: !10151)
!10175 = !DILocation(line: 3463, column: 10, scope: !10173)
!10176 = !DILocation(line: 3463, column: 3, scope: !10173)
!10177 = !DILocation(line: 3465, column: 2, scope: !10151)
!10178 = !DILocation(line: 3465, column: 11, scope: !10151)
!10179 = !DILocation(line: 3465, column: 23, scope: !10151)
!10180 = !DILocation(line: 3466, column: 26, scope: !10151)
!10181 = !DILocation(line: 3466, column: 2, scope: !10151)
!10182 = !DILocation(line: 3466, column: 11, scope: !10151)
!10183 = !DILocation(line: 3466, column: 23, scope: !10151)
!10184 = !DILocation(line: 3467, column: 16, scope: !10151)
!10185 = !DILocation(line: 3467, column: 21, scope: !10151)
!10186 = !DILocation(line: 3467, column: 30, scope: !10151)
!10187 = !DILocation(line: 3467, column: 2, scope: !10151)
!10188 = !DILocation(line: 3469, column: 9, scope: !10151)
!10189 = !DILocation(line: 3469, column: 15, scope: !10151)
!10190 = !DILocation(line: 3469, column: 2, scope: !10151)
!10191 = !DILocation(line: 3470, column: 1, scope: !10151)
!10192 = distinct !DISubprogram(name: "ni_8255_callback", scope: !209, file: !209, line: 4159, type: !10193, scopeLine: 4161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!10193 = !DISubroutineType(types: !10194)
!10194 = !{!429, !3350, !429, !429, !429, !435}
!10195 = !DILocalVariable(name: "dev", arg: 1, scope: !10192, file: !209, line: 4159, type: !3350)
!10196 = !DILocation(line: 4159, column: 51, scope: !10192)
!10197 = !DILocalVariable(name: "dir", arg: 2, scope: !10192, file: !209, line: 4160, type: !429)
!10198 = !DILocation(line: 4160, column: 12, scope: !10192)
!10199 = !DILocalVariable(name: "port", arg: 3, scope: !10192, file: !209, line: 4160, type: !429)
!10200 = !DILocation(line: 4160, column: 21, scope: !10192)
!10201 = !DILocalVariable(name: "data", arg: 4, scope: !10192, file: !209, line: 4160, type: !429)
!10202 = !DILocation(line: 4160, column: 31, scope: !10192)
!10203 = !DILocalVariable(name: "iobase", arg: 5, scope: !10192, file: !209, line: 4160, type: !435)
!10204 = !DILocation(line: 4160, column: 51, scope: !10192)
!10205 = !DILocation(line: 4162, column: 6, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !10192, file: !209, line: 4162, column: 6)
!10207 = !DILocation(line: 4162, column: 6, scope: !10192)
!10208 = !DILocation(line: 4163, column: 13, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10206, file: !209, line: 4162, column: 11)
!10210 = !DILocation(line: 4163, column: 18, scope: !10209)
!10211 = !DILocation(line: 4163, column: 24, scope: !10209)
!10212 = !DILocation(line: 4163, column: 37, scope: !10209)
!10213 = !DILocation(line: 4163, column: 35, scope: !10209)
!10214 = !DILocation(line: 4163, column: 33, scope: !10209)
!10215 = !DILocation(line: 4163, column: 31, scope: !10209)
!10216 = !DILocation(line: 4163, column: 3, scope: !10209)
!10217 = !DILocation(line: 4164, column: 3, scope: !10209)
!10218 = !DILocation(line: 4167, column: 18, scope: !10192)
!10219 = !DILocation(line: 4167, column: 23, scope: !10192)
!10220 = !DILocation(line: 4167, column: 36, scope: !10192)
!10221 = !DILocation(line: 4167, column: 34, scope: !10192)
!10222 = !DILocation(line: 4167, column: 32, scope: !10192)
!10223 = !DILocation(line: 4167, column: 30, scope: !10192)
!10224 = !DILocation(line: 4167, column: 9, scope: !10192)
!10225 = !DILocation(line: 4167, column: 2, scope: !10192)
!10226 = !DILocation(line: 4168, column: 1, scope: !10192)
!10227 = distinct !DISubprogram(name: "ni_m_series_pwm_config", scope: !209, file: !209, line: 4179, type: !4216, scopeLine: 4183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!10228 = !DILocalVariable(name: "dev", arg: 1, scope: !10227, file: !209, line: 4179, type: !3350)
!10229 = !DILocation(line: 4179, column: 57, scope: !10227)
!10230 = !DILocalVariable(name: "s", arg: 2, scope: !10227, file: !209, line: 4180, type: !4119)
!10231 = !DILocation(line: 4180, column: 32, scope: !10227)
!10232 = !DILocalVariable(name: "insn", arg: 3, scope: !10227, file: !209, line: 4181, type: !4218)
!10233 = !DILocation(line: 4181, column: 27, scope: !10227)
!10234 = !DILocalVariable(name: "data", arg: 4, scope: !10227, file: !209, line: 4182, type: !1365)
!10235 = !DILocation(line: 4182, column: 21, scope: !10227)
!10236 = !DILocalVariable(name: "devpriv", scope: !10227, file: !209, line: 4184, type: !4731)
!10237 = !DILocation(line: 4184, column: 21, scope: !10227)
!10238 = !DILocation(line: 4184, column: 31, scope: !10227)
!10239 = !DILocation(line: 4184, column: 36, scope: !10227)
!10240 = !DILocalVariable(name: "up_count", scope: !10227, file: !209, line: 4185, type: !7)
!10241 = !DILocation(line: 4185, column: 15, scope: !10227)
!10242 = !DILocalVariable(name: "down_count", scope: !10227, file: !209, line: 4185, type: !7)
!10243 = !DILocation(line: 4185, column: 25, scope: !10227)
!10244 = !DILocation(line: 4187, column: 10, scope: !10227)
!10245 = !DILocation(line: 4187, column: 2, scope: !10227)
!10246 = !DILocation(line: 4189, column: 11, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10227, file: !209, line: 4187, column: 19)
!10248 = !DILocation(line: 4189, column: 3, scope: !10247)
!10249 = !DILocalVariable(name: "__x", scope: !10250, file: !209, line: 4191, type: !7)
!10250 = distinct !DILexicalBlock(scope: !10251, file: !209, line: 4191, column: 15)
!10251 = distinct !DILexicalBlock(scope: !10247, file: !209, line: 4189, column: 20)
!10252 = !DILocation(line: 4191, column: 15, scope: !10250)
!10253 = !DILocalVariable(name: "__d", scope: !10250, file: !209, line: 4191, type: !7)
!10254 = !DILocation(line: 4191, column: 13, scope: !10251)
!10255 = !DILocation(line: 4193, column: 4, scope: !10251)
!10256 = !DILocation(line: 4195, column: 15, scope: !10251)
!10257 = !DILocation(line: 4195, column: 25, scope: !10251)
!10258 = !DILocation(line: 4195, column: 34, scope: !10251)
!10259 = !DILocation(line: 4195, column: 23, scope: !10251)
!10260 = !DILocation(line: 4195, column: 13, scope: !10251)
!10261 = !DILocation(line: 4196, column: 4, scope: !10251)
!10262 = !DILocation(line: 4199, column: 8, scope: !10251)
!10263 = !DILocation(line: 4198, column: 13, scope: !10251)
!10264 = !DILocation(line: 4200, column: 4, scope: !10251)
!10265 = !DILocation(line: 4202, column: 4, scope: !10251)
!10266 = !DILocation(line: 4204, column: 11, scope: !10247)
!10267 = !DILocation(line: 4204, column: 3, scope: !10247)
!10268 = !DILocalVariable(name: "__x", scope: !10269, file: !209, line: 4206, type: !7)
!10269 = distinct !DILexicalBlock(scope: !10270, file: !209, line: 4206, column: 17)
!10270 = distinct !DILexicalBlock(scope: !10247, file: !209, line: 4204, column: 20)
!10271 = !DILocation(line: 4206, column: 17, scope: !10269)
!10272 = !DILocalVariable(name: "__d", scope: !10269, file: !209, line: 4206, type: !7)
!10273 = !DILocation(line: 4206, column: 15, scope: !10270)
!10274 = !DILocation(line: 4208, column: 4, scope: !10270)
!10275 = !DILocation(line: 4210, column: 17, scope: !10270)
!10276 = !DILocation(line: 4210, column: 27, scope: !10270)
!10277 = !DILocation(line: 4210, column: 36, scope: !10270)
!10278 = !DILocation(line: 4210, column: 25, scope: !10270)
!10279 = !DILocation(line: 4210, column: 15, scope: !10270)
!10280 = !DILocation(line: 4211, column: 4, scope: !10270)
!10281 = !DILocation(line: 4214, column: 8, scope: !10270)
!10282 = !DILocation(line: 4213, column: 15, scope: !10270)
!10283 = !DILocation(line: 4215, column: 4, scope: !10270)
!10284 = !DILocation(line: 4217, column: 4, scope: !10270)
!10285 = !DILocation(line: 4219, column: 7, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !10247, file: !209, line: 4219, column: 7)
!10287 = !DILocation(line: 4219, column: 18, scope: !10286)
!10288 = !DILocation(line: 4219, column: 27, scope: !10286)
!10289 = !DILocation(line: 4219, column: 16, scope: !10286)
!10290 = !DILocation(line: 4219, column: 39, scope: !10286)
!10291 = !DILocation(line: 4219, column: 36, scope: !10286)
!10292 = !DILocation(line: 4219, column: 47, scope: !10286)
!10293 = !DILocation(line: 4220, column: 7, scope: !10286)
!10294 = !DILocation(line: 4220, column: 20, scope: !10286)
!10295 = !DILocation(line: 4220, column: 29, scope: !10286)
!10296 = !DILocation(line: 4220, column: 18, scope: !10286)
!10297 = !DILocation(line: 4220, column: 41, scope: !10286)
!10298 = !DILocation(line: 4220, column: 38, scope: !10286)
!10299 = !DILocation(line: 4219, column: 7, scope: !10247)
!10300 = !DILocation(line: 4221, column: 14, scope: !10301)
!10301 = distinct !DILexicalBlock(scope: !10286, file: !209, line: 4220, column: 50)
!10302 = !DILocation(line: 4221, column: 25, scope: !10301)
!10303 = !DILocation(line: 4221, column: 34, scope: !10301)
!10304 = !DILocation(line: 4221, column: 23, scope: !10301)
!10305 = !DILocation(line: 4221, column: 4, scope: !10301)
!10306 = !DILocation(line: 4221, column: 12, scope: !10301)
!10307 = !DILocation(line: 4222, column: 14, scope: !10301)
!10308 = !DILocation(line: 4222, column: 27, scope: !10301)
!10309 = !DILocation(line: 4222, column: 36, scope: !10301)
!10310 = !DILocation(line: 4222, column: 25, scope: !10301)
!10311 = !DILocation(line: 4222, column: 4, scope: !10301)
!10312 = !DILocation(line: 4222, column: 12, scope: !10301)
!10313 = !DILocation(line: 4223, column: 4, scope: !10301)
!10314 = !DILocation(line: 4225, column: 13, scope: !10247)
!10315 = !DILocation(line: 4225, column: 18, scope: !10247)
!10316 = !DILocation(line: 4226, column: 11, scope: !10247)
!10317 = !DILocation(line: 4225, column: 51, scope: !10247)
!10318 = !DILocation(line: 4225, column: 3, scope: !10247)
!10319 = !DILocation(line: 4228, column: 27, scope: !10247)
!10320 = !DILocation(line: 4228, column: 3, scope: !10247)
!10321 = !DILocation(line: 4228, column: 12, scope: !10247)
!10322 = !DILocation(line: 4228, column: 25, scope: !10247)
!10323 = !DILocation(line: 4229, column: 29, scope: !10247)
!10324 = !DILocation(line: 4229, column: 3, scope: !10247)
!10325 = !DILocation(line: 4229, column: 12, scope: !10247)
!10326 = !DILocation(line: 4229, column: 27, scope: !10247)
!10327 = !DILocation(line: 4230, column: 3, scope: !10247)
!10328 = !DILocation(line: 4232, column: 28, scope: !10247)
!10329 = !DILocation(line: 4232, column: 33, scope: !10247)
!10330 = !DILocation(line: 4232, column: 10, scope: !10247)
!10331 = !DILocation(line: 4232, column: 3, scope: !10247)
!10332 = !DILocation(line: 4234, column: 3, scope: !10247)
!10333 = !DILocation(line: 4237, column: 1, scope: !10227)
!10334 = distinct !DISubprogram(name: "ni_6143_pwm_config", scope: !209, file: !209, line: 4239, type: !4216, scopeLine: 4243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!10335 = !DILocalVariable(name: "dev", arg: 1, scope: !10334, file: !209, line: 4239, type: !3350)
!10336 = !DILocation(line: 4239, column: 53, scope: !10334)
!10337 = !DILocalVariable(name: "s", arg: 2, scope: !10334, file: !209, line: 4240, type: !4119)
!10338 = !DILocation(line: 4240, column: 35, scope: !10334)
!10339 = !DILocalVariable(name: "insn", arg: 3, scope: !10334, file: !209, line: 4241, type: !4218)
!10340 = !DILocation(line: 4241, column: 30, scope: !10334)
!10341 = !DILocalVariable(name: "data", arg: 4, scope: !10334, file: !209, line: 4242, type: !1365)
!10342 = !DILocation(line: 4242, column: 24, scope: !10334)
!10343 = !DILocalVariable(name: "devpriv", scope: !10334, file: !209, line: 4244, type: !4731)
!10344 = !DILocation(line: 4244, column: 21, scope: !10334)
!10345 = !DILocation(line: 4244, column: 31, scope: !10334)
!10346 = !DILocation(line: 4244, column: 36, scope: !10334)
!10347 = !DILocalVariable(name: "up_count", scope: !10334, file: !209, line: 4245, type: !7)
!10348 = !DILocation(line: 4245, column: 15, scope: !10334)
!10349 = !DILocalVariable(name: "down_count", scope: !10334, file: !209, line: 4245, type: !7)
!10350 = !DILocation(line: 4245, column: 25, scope: !10334)
!10351 = !DILocation(line: 4247, column: 10, scope: !10334)
!10352 = !DILocation(line: 4247, column: 2, scope: !10334)
!10353 = !DILocation(line: 4249, column: 11, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10334, file: !209, line: 4247, column: 19)
!10355 = !DILocation(line: 4249, column: 3, scope: !10354)
!10356 = !DILocalVariable(name: "__x", scope: !10357, file: !209, line: 4251, type: !7)
!10357 = distinct !DILexicalBlock(scope: !10358, file: !209, line: 4251, column: 15)
!10358 = distinct !DILexicalBlock(scope: !10354, file: !209, line: 4249, column: 20)
!10359 = !DILocation(line: 4251, column: 15, scope: !10357)
!10360 = !DILocalVariable(name: "__d", scope: !10357, file: !209, line: 4251, type: !7)
!10361 = !DILocation(line: 4251, column: 13, scope: !10358)
!10362 = !DILocation(line: 4253, column: 4, scope: !10358)
!10363 = !DILocation(line: 4255, column: 15, scope: !10358)
!10364 = !DILocation(line: 4255, column: 25, scope: !10358)
!10365 = !DILocation(line: 4255, column: 34, scope: !10358)
!10366 = !DILocation(line: 4255, column: 23, scope: !10358)
!10367 = !DILocation(line: 4255, column: 13, scope: !10358)
!10368 = !DILocation(line: 4256, column: 4, scope: !10358)
!10369 = !DILocation(line: 4259, column: 8, scope: !10358)
!10370 = !DILocation(line: 4258, column: 13, scope: !10358)
!10371 = !DILocation(line: 4260, column: 4, scope: !10358)
!10372 = !DILocation(line: 4262, column: 4, scope: !10358)
!10373 = !DILocation(line: 4264, column: 11, scope: !10354)
!10374 = !DILocation(line: 4264, column: 3, scope: !10354)
!10375 = !DILocalVariable(name: "__x", scope: !10376, file: !209, line: 4266, type: !7)
!10376 = distinct !DILexicalBlock(scope: !10377, file: !209, line: 4266, column: 17)
!10377 = distinct !DILexicalBlock(scope: !10354, file: !209, line: 4264, column: 20)
!10378 = !DILocation(line: 4266, column: 17, scope: !10376)
!10379 = !DILocalVariable(name: "__d", scope: !10376, file: !209, line: 4266, type: !7)
!10380 = !DILocation(line: 4266, column: 15, scope: !10377)
!10381 = !DILocation(line: 4268, column: 4, scope: !10377)
!10382 = !DILocation(line: 4270, column: 17, scope: !10377)
!10383 = !DILocation(line: 4270, column: 27, scope: !10377)
!10384 = !DILocation(line: 4270, column: 36, scope: !10377)
!10385 = !DILocation(line: 4270, column: 25, scope: !10377)
!10386 = !DILocation(line: 4270, column: 15, scope: !10377)
!10387 = !DILocation(line: 4271, column: 4, scope: !10377)
!10388 = !DILocation(line: 4274, column: 8, scope: !10377)
!10389 = !DILocation(line: 4273, column: 15, scope: !10377)
!10390 = !DILocation(line: 4275, column: 4, scope: !10377)
!10391 = !DILocation(line: 4277, column: 4, scope: !10377)
!10392 = !DILocation(line: 4279, column: 7, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10354, file: !209, line: 4279, column: 7)
!10394 = !DILocation(line: 4279, column: 18, scope: !10393)
!10395 = !DILocation(line: 4279, column: 27, scope: !10393)
!10396 = !DILocation(line: 4279, column: 16, scope: !10393)
!10397 = !DILocation(line: 4279, column: 39, scope: !10393)
!10398 = !DILocation(line: 4279, column: 36, scope: !10393)
!10399 = !DILocation(line: 4279, column: 47, scope: !10393)
!10400 = !DILocation(line: 4280, column: 7, scope: !10393)
!10401 = !DILocation(line: 4280, column: 20, scope: !10393)
!10402 = !DILocation(line: 4280, column: 29, scope: !10393)
!10403 = !DILocation(line: 4280, column: 18, scope: !10393)
!10404 = !DILocation(line: 4280, column: 41, scope: !10393)
!10405 = !DILocation(line: 4280, column: 38, scope: !10393)
!10406 = !DILocation(line: 4279, column: 7, scope: !10354)
!10407 = !DILocation(line: 4281, column: 14, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !10393, file: !209, line: 4280, column: 50)
!10409 = !DILocation(line: 4281, column: 25, scope: !10408)
!10410 = !DILocation(line: 4281, column: 34, scope: !10408)
!10411 = !DILocation(line: 4281, column: 23, scope: !10408)
!10412 = !DILocation(line: 4281, column: 4, scope: !10408)
!10413 = !DILocation(line: 4281, column: 12, scope: !10408)
!10414 = !DILocation(line: 4282, column: 14, scope: !10408)
!10415 = !DILocation(line: 4282, column: 27, scope: !10408)
!10416 = !DILocation(line: 4282, column: 36, scope: !10408)
!10417 = !DILocation(line: 4282, column: 25, scope: !10408)
!10418 = !DILocation(line: 4282, column: 4, scope: !10408)
!10419 = !DILocation(line: 4282, column: 12, scope: !10408)
!10420 = !DILocation(line: 4283, column: 4, scope: !10408)
!10421 = !DILocation(line: 4285, column: 13, scope: !10354)
!10422 = !DILocation(line: 4285, column: 18, scope: !10354)
!10423 = !DILocation(line: 4285, column: 3, scope: !10354)
!10424 = !DILocation(line: 4286, column: 27, scope: !10354)
!10425 = !DILocation(line: 4286, column: 3, scope: !10354)
!10426 = !DILocation(line: 4286, column: 12, scope: !10354)
!10427 = !DILocation(line: 4286, column: 25, scope: !10354)
!10428 = !DILocation(line: 4287, column: 13, scope: !10354)
!10429 = !DILocation(line: 4287, column: 18, scope: !10354)
!10430 = !DILocation(line: 4287, column: 3, scope: !10354)
!10431 = !DILocation(line: 4288, column: 29, scope: !10354)
!10432 = !DILocation(line: 4288, column: 3, scope: !10354)
!10433 = !DILocation(line: 4288, column: 12, scope: !10354)
!10434 = !DILocation(line: 4288, column: 27, scope: !10354)
!10435 = !DILocation(line: 4289, column: 3, scope: !10354)
!10436 = !DILocation(line: 4291, column: 28, scope: !10354)
!10437 = !DILocation(line: 4291, column: 33, scope: !10354)
!10438 = !DILocation(line: 4291, column: 10, scope: !10354)
!10439 = !DILocation(line: 4291, column: 3, scope: !10354)
!10440 = !DILocation(line: 4293, column: 3, scope: !10354)
!10441 = !DILocation(line: 4296, column: 1, scope: !10334)
!10442 = distinct !DISubprogram(name: "ni_calib_insn_read", scope: !209, file: !209, line: 4417, type: !4216, scopeLine: 4421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!10443 = !DILocalVariable(name: "dev", arg: 1, scope: !10442, file: !209, line: 4417, type: !3350)
!10444 = !DILocation(line: 4417, column: 53, scope: !10442)
!10445 = !DILocalVariable(name: "s", arg: 2, scope: !10442, file: !209, line: 4418, type: !4119)
!10446 = !DILocation(line: 4418, column: 35, scope: !10442)
!10447 = !DILocalVariable(name: "insn", arg: 3, scope: !10442, file: !209, line: 4419, type: !4218)
!10448 = !DILocation(line: 4419, column: 30, scope: !10442)
!10449 = !DILocalVariable(name: "data", arg: 4, scope: !10442, file: !209, line: 4420, type: !1365)
!10450 = !DILocation(line: 4420, column: 24, scope: !10442)
!10451 = !DILocalVariable(name: "devpriv", scope: !10442, file: !209, line: 4422, type: !4731)
!10452 = !DILocation(line: 4422, column: 21, scope: !10442)
!10453 = !DILocation(line: 4422, column: 31, scope: !10442)
!10454 = !DILocation(line: 4422, column: 36, scope: !10442)
!10455 = !DILocalVariable(name: "i", scope: !10442, file: !209, line: 4423, type: !7)
!10456 = !DILocation(line: 4423, column: 15, scope: !10442)
!10457 = !DILocation(line: 4425, column: 9, scope: !10458)
!10458 = distinct !DILexicalBlock(scope: !10442, file: !209, line: 4425, column: 2)
!10459 = !DILocation(line: 4425, column: 7, scope: !10458)
!10460 = !DILocation(line: 4425, column: 14, scope: !10461)
!10461 = distinct !DILexicalBlock(scope: !10458, file: !209, line: 4425, column: 2)
!10462 = !DILocation(line: 4425, column: 18, scope: !10461)
!10463 = !DILocation(line: 4425, column: 24, scope: !10461)
!10464 = !DILocation(line: 4425, column: 16, scope: !10461)
!10465 = !DILocation(line: 4425, column: 2, scope: !10458)
!10466 = !DILocation(line: 4426, column: 13, scope: !10461)
!10467 = !DILocation(line: 4426, column: 22, scope: !10461)
!10468 = !DILocation(line: 4426, column: 30, scope: !10461)
!10469 = !DILocation(line: 4426, column: 3, scope: !10461)
!10470 = !DILocation(line: 4426, column: 11, scope: !10461)
!10471 = !DILocation(line: 4425, column: 28, scope: !10461)
!10472 = !DILocation(line: 4425, column: 2, scope: !10461)
!10473 = distinct !{!10473, !10465, !10474}
!10474 = !DILocation(line: 4426, column: 53, scope: !10458)
!10475 = !DILocation(line: 4428, column: 9, scope: !10442)
!10476 = !DILocation(line: 4428, column: 15, scope: !10442)
!10477 = !DILocation(line: 4428, column: 2, scope: !10442)
!10478 = distinct !DISubprogram(name: "ni_calib_insn_write", scope: !209, file: !209, line: 4403, type: !4216, scopeLine: 4407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!10479 = !DILocalVariable(name: "dev", arg: 1, scope: !10478, file: !209, line: 4403, type: !3350)
!10480 = !DILocation(line: 4403, column: 54, scope: !10478)
!10481 = !DILocalVariable(name: "s", arg: 2, scope: !10478, file: !209, line: 4404, type: !4119)
!10482 = !DILocation(line: 4404, column: 36, scope: !10478)
!10483 = !DILocalVariable(name: "insn", arg: 3, scope: !10478, file: !209, line: 4405, type: !4218)
!10484 = !DILocation(line: 4405, column: 31, scope: !10478)
!10485 = !DILocalVariable(name: "data", arg: 4, scope: !10478, file: !209, line: 4406, type: !1365)
!10486 = !DILocation(line: 4406, column: 25, scope: !10478)
!10487 = !DILocation(line: 4408, column: 6, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10478, file: !209, line: 4408, column: 6)
!10489 = !DILocation(line: 4408, column: 12, scope: !10488)
!10490 = !DILocation(line: 4408, column: 6, scope: !10478)
!10491 = !DILocation(line: 4410, column: 19, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10488, file: !209, line: 4408, column: 15)
!10493 = !DILocation(line: 4410, column: 24, scope: !10492)
!10494 = !DILocation(line: 4411, column: 5, scope: !10492)
!10495 = !DILocation(line: 4411, column: 10, scope: !10492)
!10496 = !DILocation(line: 4411, column: 16, scope: !10492)
!10497 = !DILocation(line: 4411, column: 18, scope: !10492)
!10498 = !DILocation(line: 4410, column: 3, scope: !10492)
!10499 = !DILocation(line: 4412, column: 2, scope: !10492)
!10500 = !DILocation(line: 4414, column: 9, scope: !10478)
!10501 = !DILocation(line: 4414, column: 15, scope: !10478)
!10502 = !DILocation(line: 4414, column: 2, scope: !10478)
!10503 = distinct !DISubprogram(name: "caldac_setup", scope: !209, file: !209, line: 4431, type: !4354, scopeLine: 4432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!10504 = !DILocalVariable(name: "dev", arg: 1, scope: !10503, file: !209, line: 4431, type: !3350)
!10505 = !DILocation(line: 4431, column: 48, scope: !10503)
!10506 = !DILocalVariable(name: "s", arg: 2, scope: !10503, file: !209, line: 4431, type: !4119)
!10507 = !DILocation(line: 4431, column: 78, scope: !10503)
!10508 = !DILocalVariable(name: "board", scope: !10503, file: !209, line: 4433, type: !4959)
!10509 = !DILocation(line: 4433, column: 32, scope: !10503)
!10510 = !DILocation(line: 4433, column: 40, scope: !10503)
!10511 = !DILocation(line: 4433, column: 45, scope: !10503)
!10512 = !DILocalVariable(name: "devpriv", scope: !10503, file: !209, line: 4434, type: !4731)
!10513 = !DILocation(line: 4434, column: 21, scope: !10503)
!10514 = !DILocation(line: 4434, column: 31, scope: !10503)
!10515 = !DILocation(line: 4434, column: 36, scope: !10503)
!10516 = !DILocalVariable(name: "i", scope: !10503, file: !209, line: 4435, type: !429)
!10517 = !DILocation(line: 4435, column: 6, scope: !10503)
!10518 = !DILocalVariable(name: "j", scope: !10503, file: !209, line: 4435, type: !429)
!10519 = !DILocation(line: 4435, column: 9, scope: !10503)
!10520 = !DILocalVariable(name: "n_dacs", scope: !10503, file: !209, line: 4436, type: !429)
!10521 = !DILocation(line: 4436, column: 6, scope: !10503)
!10522 = !DILocalVariable(name: "n_chans", scope: !10503, file: !209, line: 4437, type: !429)
!10523 = !DILocation(line: 4437, column: 6, scope: !10503)
!10524 = !DILocalVariable(name: "n_bits", scope: !10503, file: !209, line: 4438, type: !429)
!10525 = !DILocation(line: 4438, column: 6, scope: !10503)
!10526 = !DILocalVariable(name: "diffbits", scope: !10503, file: !209, line: 4439, type: !429)
!10527 = !DILocation(line: 4439, column: 6, scope: !10503)
!10528 = !DILocalVariable(name: "type", scope: !10503, file: !209, line: 4440, type: !429)
!10529 = !DILocation(line: 4440, column: 6, scope: !10503)
!10530 = !DILocalVariable(name: "chan", scope: !10503, file: !209, line: 4441, type: !429)
!10531 = !DILocation(line: 4441, column: 6, scope: !10503)
!10532 = !DILocation(line: 4443, column: 9, scope: !10503)
!10533 = !DILocation(line: 4443, column: 16, scope: !10503)
!10534 = !DILocation(line: 4443, column: 7, scope: !10503)
!10535 = !DILocation(line: 4444, column: 6, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10503, file: !209, line: 4444, column: 6)
!10537 = !DILocation(line: 4444, column: 11, scope: !10536)
!10538 = !DILocation(line: 4444, column: 6, scope: !10503)
!10539 = !DILocation(line: 4445, column: 3, scope: !10536)
!10540 = !DILocation(line: 4446, column: 19, scope: !10503)
!10541 = !DILocation(line: 4446, column: 11, scope: !10503)
!10542 = !DILocation(line: 4446, column: 25, scope: !10503)
!10543 = !DILocation(line: 4446, column: 9, scope: !10503)
!10544 = !DILocation(line: 4447, column: 9, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10503, file: !209, line: 4447, column: 2)
!10546 = !DILocation(line: 4447, column: 7, scope: !10545)
!10547 = !DILocation(line: 4447, column: 14, scope: !10548)
!10548 = distinct !DILexicalBlock(scope: !10545, file: !209, line: 4447, column: 2)
!10549 = !DILocation(line: 4447, column: 16, scope: !10548)
!10550 = !DILocation(line: 4447, column: 2, scope: !10545)
!10551 = !DILocation(line: 4448, column: 10, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10548, file: !209, line: 4447, column: 26)
!10553 = !DILocation(line: 4448, column: 17, scope: !10552)
!10554 = !DILocation(line: 4448, column: 24, scope: !10552)
!10555 = !DILocation(line: 4448, column: 8, scope: !10552)
!10556 = !DILocation(line: 4449, column: 7, scope: !10557)
!10557 = distinct !DILexicalBlock(scope: !10552, file: !209, line: 4449, column: 7)
!10558 = !DILocation(line: 4449, column: 12, scope: !10557)
!10559 = !DILocation(line: 4449, column: 7, scope: !10552)
!10560 = !DILocation(line: 4450, column: 4, scope: !10557)
!10561 = !DILocation(line: 4451, column: 15, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10552, file: !209, line: 4451, column: 7)
!10563 = !DILocation(line: 4451, column: 7, scope: !10562)
!10564 = !DILocation(line: 4451, column: 21, scope: !10562)
!10565 = !DILocation(line: 4451, column: 31, scope: !10562)
!10566 = !DILocation(line: 4451, column: 28, scope: !10562)
!10567 = !DILocation(line: 4451, column: 7, scope: !10552)
!10568 = !DILocation(line: 4452, column: 13, scope: !10562)
!10569 = !DILocation(line: 4452, column: 4, scope: !10562)
!10570 = !DILocation(line: 4453, column: 22, scope: !10552)
!10571 = !DILocation(line: 4453, column: 14, scope: !10552)
!10572 = !DILocation(line: 4453, column: 28, scope: !10552)
!10573 = !DILocation(line: 4453, column: 11, scope: !10552)
!10574 = !DILocation(line: 4454, column: 2, scope: !10552)
!10575 = !DILocation(line: 4447, column: 22, scope: !10548)
!10576 = !DILocation(line: 4447, column: 2, scope: !10548)
!10577 = distinct !{!10577, !10550, !10578}
!10578 = !DILocation(line: 4454, column: 2, scope: !10545)
!10579 = !DILocation(line: 4455, column: 11, scope: !10503)
!10580 = !DILocation(line: 4455, column: 9, scope: !10503)
!10581 = !DILocation(line: 4456, column: 14, scope: !10503)
!10582 = !DILocation(line: 4456, column: 2, scope: !10503)
!10583 = !DILocation(line: 4456, column: 5, scope: !10503)
!10584 = !DILocation(line: 4456, column: 12, scope: !10503)
!10585 = !DILocation(line: 4458, column: 6, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10503, file: !209, line: 4458, column: 6)
!10587 = !DILocation(line: 4458, column: 6, scope: !10503)
!10588 = !DILocalVariable(name: "maxdata_list", scope: !10589, file: !209, line: 4459, type: !1365)
!10589 = distinct !DILexicalBlock(scope: !10586, file: !209, line: 4458, column: 16)
!10590 = !DILocation(line: 4459, column: 17, scope: !10589)
!10591 = !DILocation(line: 4459, column: 32, scope: !10589)
!10592 = !DILocation(line: 4459, column: 41, scope: !10589)
!10593 = !DILocation(line: 4461, column: 7, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10589, file: !209, line: 4461, column: 7)
!10595 = !DILocation(line: 4461, column: 15, scope: !10594)
!10596 = !DILocation(line: 4461, column: 7, scope: !10589)
!10597 = !DILocation(line: 4462, column: 4, scope: !10594)
!10598 = !DILocation(line: 4464, column: 21, scope: !10589)
!10599 = !DILocation(line: 4464, column: 3, scope: !10589)
!10600 = !DILocation(line: 4464, column: 6, scope: !10589)
!10601 = !DILocation(line: 4464, column: 19, scope: !10589)
!10602 = !DILocation(line: 4465, column: 8, scope: !10589)
!10603 = !DILocation(line: 4466, column: 10, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10589, file: !209, line: 4466, column: 3)
!10605 = !DILocation(line: 4466, column: 8, scope: !10604)
!10606 = !DILocation(line: 4466, column: 15, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10604, file: !209, line: 4466, column: 3)
!10608 = !DILocation(line: 4466, column: 19, scope: !10607)
!10609 = !DILocation(line: 4466, column: 17, scope: !10607)
!10610 = !DILocation(line: 4466, column: 3, scope: !10604)
!10611 = !DILocation(line: 4467, column: 11, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10607, file: !209, line: 4466, column: 32)
!10613 = !DILocation(line: 4467, column: 18, scope: !10612)
!10614 = !DILocation(line: 4467, column: 25, scope: !10612)
!10615 = !DILocation(line: 4467, column: 9, scope: !10612)
!10616 = !DILocation(line: 4468, column: 11, scope: !10617)
!10617 = distinct !DILexicalBlock(scope: !10612, file: !209, line: 4468, column: 4)
!10618 = !DILocation(line: 4468, column: 9, scope: !10617)
!10619 = !DILocation(line: 4468, column: 16, scope: !10620)
!10620 = distinct !DILexicalBlock(scope: !10617, file: !209, line: 4468, column: 4)
!10621 = !DILocation(line: 4468, column: 28, scope: !10620)
!10622 = !DILocation(line: 4468, column: 20, scope: !10620)
!10623 = !DILocation(line: 4468, column: 34, scope: !10620)
!10624 = !DILocation(line: 4468, column: 18, scope: !10620)
!10625 = !DILocation(line: 4468, column: 4, scope: !10617)
!10626 = !DILocation(line: 4470, column: 23, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10620, file: !209, line: 4468, column: 48)
!10628 = !DILocation(line: 4470, column: 15, scope: !10627)
!10629 = !DILocation(line: 4470, column: 29, scope: !10627)
!10630 = !DILocation(line: 4470, column: 12, scope: !10627)
!10631 = !DILocation(line: 4470, column: 37, scope: !10627)
!10632 = !DILocation(line: 4469, column: 5, scope: !10627)
!10633 = !DILocation(line: 4469, column: 18, scope: !10627)
!10634 = !DILocation(line: 4469, column: 24, scope: !10627)
!10635 = !DILocation(line: 4471, column: 9, scope: !10627)
!10636 = !DILocation(line: 4472, column: 4, scope: !10627)
!10637 = !DILocation(line: 4468, column: 44, scope: !10620)
!10638 = !DILocation(line: 4468, column: 4, scope: !10620)
!10639 = distinct !{!10639, !10625, !10640}
!10640 = !DILocation(line: 4472, column: 4, scope: !10617)
!10641 = !DILocation(line: 4473, column: 3, scope: !10612)
!10642 = !DILocation(line: 4466, column: 28, scope: !10607)
!10643 = !DILocation(line: 4466, column: 3, scope: !10607)
!10644 = distinct !{!10644, !10610, !10645}
!10645 = !DILocation(line: 4473, column: 3, scope: !10604)
!10646 = !DILocation(line: 4475, column: 13, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10589, file: !209, line: 4475, column: 3)
!10648 = !DILocation(line: 4475, column: 8, scope: !10647)
!10649 = !DILocation(line: 4475, column: 18, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10647, file: !209, line: 4475, column: 3)
!10651 = !DILocation(line: 4475, column: 25, scope: !10650)
!10652 = !DILocation(line: 4475, column: 28, scope: !10650)
!10653 = !DILocation(line: 4475, column: 23, scope: !10650)
!10654 = !DILocation(line: 4475, column: 3, scope: !10647)
!10655 = !DILocation(line: 4476, column: 20, scope: !10650)
!10656 = !DILocation(line: 4476, column: 25, scope: !10650)
!10657 = !DILocation(line: 4476, column: 28, scope: !10650)
!10658 = !DILocation(line: 4476, column: 31, scope: !10650)
!10659 = !DILocation(line: 4476, column: 44, scope: !10650)
!10660 = !DILocation(line: 4476, column: 47, scope: !10650)
!10661 = !DILocation(line: 4476, column: 4, scope: !10650)
!10662 = !DILocation(line: 4475, column: 40, scope: !10650)
!10663 = !DILocation(line: 4475, column: 3, scope: !10650)
!10664 = distinct !{!10664, !10654, !10665}
!10665 = !DILocation(line: 4476, column: 50, scope: !10647)
!10666 = !DILocation(line: 4477, column: 2, scope: !10589)
!10667 = !DILocation(line: 4478, column: 10, scope: !10668)
!10668 = distinct !DILexicalBlock(scope: !10586, file: !209, line: 4477, column: 9)
!10669 = !DILocation(line: 4478, column: 17, scope: !10668)
!10670 = !DILocation(line: 4478, column: 8, scope: !10668)
!10671 = !DILocation(line: 4479, column: 30, scope: !10668)
!10672 = !DILocation(line: 4479, column: 22, scope: !10668)
!10673 = !DILocation(line: 4479, column: 36, scope: !10668)
!10674 = !DILocation(line: 4479, column: 19, scope: !10668)
!10675 = !DILocation(line: 4479, column: 44, scope: !10668)
!10676 = !DILocation(line: 4479, column: 3, scope: !10668)
!10677 = !DILocation(line: 4479, column: 6, scope: !10668)
!10678 = !DILocation(line: 4479, column: 14, scope: !10668)
!10679 = !DILocation(line: 4481, column: 13, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10668, file: !209, line: 4481, column: 3)
!10681 = !DILocation(line: 4481, column: 8, scope: !10680)
!10682 = !DILocation(line: 4481, column: 18, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10680, file: !209, line: 4481, column: 3)
!10684 = !DILocation(line: 4481, column: 25, scope: !10683)
!10685 = !DILocation(line: 4481, column: 28, scope: !10683)
!10686 = !DILocation(line: 4481, column: 23, scope: !10683)
!10687 = !DILocation(line: 4481, column: 3, scope: !10680)
!10688 = !DILocation(line: 4482, column: 20, scope: !10683)
!10689 = !DILocation(line: 4482, column: 25, scope: !10683)
!10690 = !DILocation(line: 4482, column: 28, scope: !10683)
!10691 = !DILocation(line: 4482, column: 31, scope: !10683)
!10692 = !DILocation(line: 4482, column: 39, scope: !10683)
!10693 = !DILocation(line: 4482, column: 4, scope: !10683)
!10694 = !DILocation(line: 4481, column: 40, scope: !10683)
!10695 = !DILocation(line: 4481, column: 3, scope: !10683)
!10696 = distinct !{!10696, !10687, !10697}
!10697 = !DILocation(line: 4482, column: 42, scope: !10680)
!10698 = !DILocation(line: 4484, column: 1, scope: !10503)
!10699 = distinct !DISubprogram(name: "ni_m_series_eeprom_insn_read", scope: !209, file: !209, line: 4532, type: !4216, scopeLine: 4536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!10700 = !DILocalVariable(name: "dev", arg: 1, scope: !10699, file: !209, line: 4532, type: !3350)
!10701 = !DILocation(line: 4532, column: 63, scope: !10699)
!10702 = !DILocalVariable(name: "s", arg: 2, scope: !10699, file: !209, line: 4533, type: !4119)
!10703 = !DILocation(line: 4533, column: 31, scope: !10699)
!10704 = !DILocalVariable(name: "insn", arg: 3, scope: !10699, file: !209, line: 4534, type: !4218)
!10705 = !DILocation(line: 4534, column: 26, scope: !10699)
!10706 = !DILocalVariable(name: "data", arg: 4, scope: !10699, file: !209, line: 4535, type: !1365)
!10707 = !DILocation(line: 4535, column: 20, scope: !10699)
!10708 = !DILocalVariable(name: "devpriv", scope: !10699, file: !209, line: 4537, type: !4731)
!10709 = !DILocation(line: 4537, column: 21, scope: !10699)
!10710 = !DILocation(line: 4537, column: 31, scope: !10699)
!10711 = !DILocation(line: 4537, column: 36, scope: !10699)
!10712 = !DILocalVariable(name: "i", scope: !10699, file: !209, line: 4538, type: !7)
!10713 = !DILocation(line: 4538, column: 15, scope: !10699)
!10714 = !DILocation(line: 4540, column: 9, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10699, file: !209, line: 4540, column: 2)
!10716 = !DILocation(line: 4540, column: 7, scope: !10715)
!10717 = !DILocation(line: 4540, column: 14, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10715, file: !209, line: 4540, column: 2)
!10719 = !DILocation(line: 4540, column: 18, scope: !10718)
!10720 = !DILocation(line: 4540, column: 24, scope: !10718)
!10721 = !DILocation(line: 4540, column: 16, scope: !10718)
!10722 = !DILocation(line: 4540, column: 2, scope: !10715)
!10723 = !DILocation(line: 4541, column: 13, scope: !10718)
!10724 = !DILocation(line: 4541, column: 22, scope: !10718)
!10725 = !DILocation(line: 4541, column: 36, scope: !10718)
!10726 = !DILocation(line: 4541, column: 3, scope: !10718)
!10727 = !DILocation(line: 4541, column: 8, scope: !10718)
!10728 = !DILocation(line: 4541, column: 11, scope: !10718)
!10729 = !DILocation(line: 4540, column: 28, scope: !10718)
!10730 = !DILocation(line: 4540, column: 2, scope: !10718)
!10731 = distinct !{!10731, !10722, !10732}
!10732 = !DILocation(line: 4541, column: 59, scope: !10715)
!10733 = !DILocation(line: 4543, column: 9, scope: !10699)
!10734 = !DILocation(line: 4543, column: 15, scope: !10699)
!10735 = !DILocation(line: 4543, column: 2, scope: !10699)
!10736 = distinct !DISubprogram(name: "ni_eeprom_insn_read", scope: !209, file: !209, line: 4516, type: !4216, scopeLine: 4520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!10737 = !DILocalVariable(name: "dev", arg: 1, scope: !10736, file: !209, line: 4516, type: !3350)
!10738 = !DILocation(line: 4516, column: 54, scope: !10736)
!10739 = !DILocalVariable(name: "s", arg: 2, scope: !10736, file: !209, line: 4517, type: !4119)
!10740 = !DILocation(line: 4517, column: 36, scope: !10736)
!10741 = !DILocalVariable(name: "insn", arg: 3, scope: !10736, file: !209, line: 4518, type: !4218)
!10742 = !DILocation(line: 4518, column: 31, scope: !10736)
!10743 = !DILocalVariable(name: "data", arg: 4, scope: !10736, file: !209, line: 4519, type: !1365)
!10744 = !DILocation(line: 4519, column: 25, scope: !10736)
!10745 = !DILocalVariable(name: "val", scope: !10736, file: !209, line: 4521, type: !7)
!10746 = !DILocation(line: 4521, column: 15, scope: !10736)
!10747 = !DILocalVariable(name: "i", scope: !10736, file: !209, line: 4522, type: !7)
!10748 = !DILocation(line: 4522, column: 15, scope: !10736)
!10749 = !DILocation(line: 4524, column: 6, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !10736, file: !209, line: 4524, column: 6)
!10751 = !DILocation(line: 4524, column: 12, scope: !10750)
!10752 = !DILocation(line: 4524, column: 6, scope: !10736)
!10753 = !DILocation(line: 4525, column: 24, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10750, file: !209, line: 4524, column: 15)
!10755 = !DILocation(line: 4525, column: 29, scope: !10754)
!10756 = !DILocation(line: 4525, column: 9, scope: !10754)
!10757 = !DILocation(line: 4525, column: 7, scope: !10754)
!10758 = !DILocation(line: 4526, column: 10, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10754, file: !209, line: 4526, column: 3)
!10760 = !DILocation(line: 4526, column: 8, scope: !10759)
!10761 = !DILocation(line: 4526, column: 15, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10759, file: !209, line: 4526, column: 3)
!10763 = !DILocation(line: 4526, column: 19, scope: !10762)
!10764 = !DILocation(line: 4526, column: 25, scope: !10762)
!10765 = !DILocation(line: 4526, column: 17, scope: !10762)
!10766 = !DILocation(line: 4526, column: 3, scope: !10759)
!10767 = !DILocation(line: 4527, column: 14, scope: !10762)
!10768 = !DILocation(line: 4527, column: 4, scope: !10762)
!10769 = !DILocation(line: 4527, column: 9, scope: !10762)
!10770 = !DILocation(line: 4527, column: 12, scope: !10762)
!10771 = !DILocation(line: 4526, column: 29, scope: !10762)
!10772 = !DILocation(line: 4526, column: 3, scope: !10762)
!10773 = distinct !{!10773, !10766, !10774}
!10774 = !DILocation(line: 4527, column: 14, scope: !10759)
!10775 = !DILocation(line: 4528, column: 2, scope: !10754)
!10776 = !DILocation(line: 4529, column: 9, scope: !10736)
!10777 = !DILocation(line: 4529, column: 15, scope: !10736)
!10778 = !DILocation(line: 4529, column: 2, scope: !10736)
!10779 = distinct !DISubprogram(name: "ni_pfi_insn_bits", scope: !209, file: !209, line: 4722, type: !4216, scopeLine: 4726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!10780 = !DILocalVariable(name: "dev", arg: 1, scope: !10779, file: !209, line: 4722, type: !3350)
!10781 = !DILocation(line: 4722, column: 51, scope: !10779)
!10782 = !DILocalVariable(name: "s", arg: 2, scope: !10779, file: !209, line: 4723, type: !4119)
!10783 = !DILocation(line: 4723, column: 33, scope: !10779)
!10784 = !DILocalVariable(name: "insn", arg: 3, scope: !10779, file: !209, line: 4724, type: !4218)
!10785 = !DILocation(line: 4724, column: 28, scope: !10779)
!10786 = !DILocalVariable(name: "data", arg: 4, scope: !10779, file: !209, line: 4725, type: !1365)
!10787 = !DILocation(line: 4725, column: 22, scope: !10779)
!10788 = !DILocalVariable(name: "devpriv", scope: !10779, file: !209, line: 4727, type: !4731)
!10789 = !DILocation(line: 4727, column: 21, scope: !10779)
!10790 = !DILocation(line: 4727, column: 31, scope: !10779)
!10791 = !DILocation(line: 4727, column: 36, scope: !10779)
!10792 = !DILocation(line: 4729, column: 7, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10779, file: !209, line: 4729, column: 6)
!10794 = !DILocation(line: 4729, column: 16, scope: !10793)
!10795 = !DILocation(line: 4729, column: 6, scope: !10779)
!10796 = !DILocation(line: 4730, column: 3, scope: !10793)
!10797 = !DILocation(line: 4732, column: 30, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10779, file: !209, line: 4732, column: 6)
!10799 = !DILocation(line: 4732, column: 33, scope: !10798)
!10800 = !DILocation(line: 4732, column: 6, scope: !10798)
!10801 = !DILocation(line: 4732, column: 6, scope: !10779)
!10802 = !DILocation(line: 4733, column: 13, scope: !10798)
!10803 = !DILocation(line: 4733, column: 18, scope: !10798)
!10804 = !DILocation(line: 4733, column: 21, scope: !10798)
!10805 = !DILocation(line: 4733, column: 3, scope: !10798)
!10806 = !DILocation(line: 4735, column: 21, scope: !10779)
!10807 = !DILocation(line: 4735, column: 12, scope: !10779)
!10808 = !DILocation(line: 4735, column: 2, scope: !10779)
!10809 = !DILocation(line: 4735, column: 10, scope: !10779)
!10810 = !DILocation(line: 4737, column: 9, scope: !10779)
!10811 = !DILocation(line: 4737, column: 15, scope: !10779)
!10812 = !DILocation(line: 4737, column: 2, scope: !10779)
!10813 = !DILocation(line: 4738, column: 1, scope: !10779)
!10814 = distinct !DISubprogram(name: "ni_pfi_insn_config", scope: !209, file: !209, line: 4689, type: !4216, scopeLine: 4693, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!10815 = !DILocalVariable(name: "dev", arg: 1, scope: !10814, file: !209, line: 4689, type: !3350)
!10816 = !DILocation(line: 4689, column: 53, scope: !10814)
!10817 = !DILocalVariable(name: "s", arg: 2, scope: !10814, file: !209, line: 4690, type: !4119)
!10818 = !DILocation(line: 4690, column: 35, scope: !10814)
!10819 = !DILocalVariable(name: "insn", arg: 3, scope: !10814, file: !209, line: 4691, type: !4218)
!10820 = !DILocation(line: 4691, column: 30, scope: !10814)
!10821 = !DILocalVariable(name: "data", arg: 4, scope: !10814, file: !209, line: 4692, type: !1365)
!10822 = !DILocation(line: 4692, column: 24, scope: !10814)
!10823 = !DILocalVariable(name: "chan", scope: !10814, file: !209, line: 4694, type: !7)
!10824 = !DILocation(line: 4694, column: 15, scope: !10814)
!10825 = !DILocation(line: 4696, column: 6, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10814, file: !209, line: 4696, column: 6)
!10827 = !DILocation(line: 4696, column: 12, scope: !10826)
!10828 = !DILocation(line: 4696, column: 14, scope: !10826)
!10829 = !DILocation(line: 4696, column: 6, scope: !10814)
!10830 = !DILocation(line: 4697, column: 3, scope: !10826)
!10831 = !DILocation(line: 4699, column: 9, scope: !10814)
!10832 = !DILocation(line: 4699, column: 7, scope: !10814)
!10833 = !DILocation(line: 4701, column: 10, scope: !10814)
!10834 = !DILocation(line: 4701, column: 2, scope: !10814)
!10835 = !DILocation(line: 4704, column: 24, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10814, file: !209, line: 4701, column: 19)
!10837 = !DILocation(line: 4704, column: 29, scope: !10836)
!10838 = !DILocation(line: 4704, column: 35, scope: !10836)
!10839 = !DILocation(line: 4704, column: 3, scope: !10836)
!10840 = !DILocation(line: 4705, column: 3, scope: !10836)
!10841 = !DILocation(line: 4707, column: 34, scope: !10836)
!10842 = !DILocation(line: 4707, column: 39, scope: !10836)
!10843 = !DILocation(line: 4707, column: 13, scope: !10836)
!10844 = !DILocation(line: 4707, column: 3, scope: !10836)
!10845 = !DILocation(line: 4707, column: 11, scope: !10836)
!10846 = !DILocation(line: 4708, column: 3, scope: !10836)
!10847 = !DILocation(line: 4710, column: 29, scope: !10836)
!10848 = !DILocation(line: 4710, column: 34, scope: !10836)
!10849 = !DILocation(line: 4710, column: 40, scope: !10836)
!10850 = !DILocation(line: 4710, column: 10, scope: !10836)
!10851 = !DILocation(line: 4710, column: 3, scope: !10836)
!10852 = !DILocation(line: 4712, column: 32, scope: !10836)
!10853 = !DILocation(line: 4712, column: 37, scope: !10836)
!10854 = !DILocation(line: 4712, column: 13, scope: !10836)
!10855 = !DILocation(line: 4712, column: 3, scope: !10836)
!10856 = !DILocation(line: 4712, column: 11, scope: !10836)
!10857 = !DILocation(line: 4713, column: 3, scope: !10836)
!10858 = !DILocation(line: 4715, column: 31, scope: !10836)
!10859 = !DILocation(line: 4715, column: 36, scope: !10836)
!10860 = !DILocation(line: 4715, column: 42, scope: !10836)
!10861 = !DILocation(line: 4715, column: 10, scope: !10836)
!10862 = !DILocation(line: 4715, column: 3, scope: !10836)
!10863 = !DILocation(line: 4717, column: 3, scope: !10836)
!10864 = !DILocation(line: 4719, column: 2, scope: !10814)
!10865 = !DILocation(line: 4720, column: 1, scope: !10814)
!10866 = distinct !DISubprogram(name: "ni_set_bits", scope: !209, file: !209, line: 863, type: !10867, scopeLine: 865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!10867 = !DISubroutineType(types: !10868)
!10868 = !{null, !3350, !429, !7, !7}
!10869 = !DILocalVariable(name: "dev", arg: 1, scope: !10866, file: !209, line: 863, type: !3350)
!10870 = !DILocation(line: 863, column: 54, scope: !10866)
!10871 = !DILocalVariable(name: "reg", arg: 2, scope: !10866, file: !209, line: 863, type: !429)
!10872 = !DILocation(line: 863, column: 63, scope: !10866)
!10873 = !DILocalVariable(name: "bits", arg: 3, scope: !10866, file: !209, line: 864, type: !7)
!10874 = !DILocation(line: 864, column: 24, scope: !10866)
!10875 = !DILocalVariable(name: "value", arg: 4, scope: !10866, file: !209, line: 864, type: !7)
!10876 = !DILocation(line: 864, column: 43, scope: !10866)
!10877 = !DILocalVariable(name: "bit_values", scope: !10866, file: !209, line: 866, type: !7)
!10878 = !DILocation(line: 866, column: 15, scope: !10866)
!10879 = !DILocation(line: 868, column: 6, scope: !10880)
!10880 = distinct !DILexicalBlock(scope: !10866, file: !209, line: 868, column: 6)
!10881 = !DILocation(line: 868, column: 6, scope: !10866)
!10882 = !DILocation(line: 869, column: 16, scope: !10880)
!10883 = !DILocation(line: 869, column: 14, scope: !10880)
!10884 = !DILocation(line: 869, column: 3, scope: !10880)
!10885 = !DILocation(line: 871, column: 14, scope: !10880)
!10886 = !DILocation(line: 872, column: 18, scope: !10866)
!10887 = !DILocation(line: 872, column: 23, scope: !10866)
!10888 = !DILocation(line: 872, column: 28, scope: !10866)
!10889 = !DILocation(line: 872, column: 34, scope: !10866)
!10890 = !DILocation(line: 872, column: 2, scope: !10866)
!10891 = !DILocation(line: 873, column: 1, scope: !10866)
!10892 = distinct !DISubprogram(name: "cs5529_ai_insn_read", scope: !209, file: !209, line: 4813, type: !4216, scopeLine: 4817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!10893 = !DILocalVariable(name: "dev", arg: 1, scope: !10892, file: !209, line: 4813, type: !3350)
!10894 = !DILocation(line: 4813, column: 54, scope: !10892)
!10895 = !DILocalVariable(name: "s", arg: 2, scope: !10892, file: !209, line: 4814, type: !4119)
!10896 = !DILocation(line: 4814, column: 36, scope: !10892)
!10897 = !DILocalVariable(name: "insn", arg: 3, scope: !10892, file: !209, line: 4815, type: !4218)
!10898 = !DILocation(line: 4815, column: 31, scope: !10892)
!10899 = !DILocalVariable(name: "data", arg: 4, scope: !10892, file: !209, line: 4816, type: !1365)
!10900 = !DILocation(line: 4816, column: 25, scope: !10892)
!10901 = !DILocalVariable(name: "n", scope: !10892, file: !209, line: 4818, type: !429)
!10902 = !DILocation(line: 4818, column: 6, scope: !10892)
!10903 = !DILocalVariable(name: "retval", scope: !10892, file: !209, line: 4818, type: !429)
!10904 = !DILocation(line: 4818, column: 9, scope: !10892)
!10905 = !DILocalVariable(name: "sample", scope: !10892, file: !209, line: 4819, type: !438)
!10906 = !DILocation(line: 4819, column: 17, scope: !10892)
!10907 = !DILocalVariable(name: "channel_select", scope: !10892, file: !209, line: 4820, type: !7)
!10908 = !DILocation(line: 4820, column: 15, scope: !10892)
!10909 = !DILocalVariable(name: "INTERNAL_REF", scope: !10892, file: !209, line: 4821, type: !2125)
!10910 = !DILocation(line: 4821, column: 21, scope: !10892)
!10911 = !DILocation(line: 4829, column: 6, scope: !10912)
!10912 = distinct !DILexicalBlock(scope: !10892, file: !209, line: 4829, column: 6)
!10913 = !DILocation(line: 4829, column: 12, scope: !10912)
!10914 = !DILocation(line: 4829, column: 21, scope: !10912)
!10915 = !DILocation(line: 4829, column: 6, scope: !10892)
!10916 = !DILocation(line: 4830, column: 18, scope: !10912)
!10917 = !DILocation(line: 4830, column: 3, scope: !10912)
!10918 = !DILocation(line: 4832, column: 20, scope: !10912)
!10919 = !DILocation(line: 4832, column: 18, scope: !10912)
!10920 = !DILocation(line: 4833, column: 17, scope: !10892)
!10921 = !DILocation(line: 4833, column: 22, scope: !10892)
!10922 = !DILocation(line: 4833, column: 2, scope: !10892)
!10923 = !DILocation(line: 4835, column: 9, scope: !10924)
!10924 = distinct !DILexicalBlock(scope: !10892, file: !209, line: 4835, column: 2)
!10925 = !DILocation(line: 4835, column: 7, scope: !10924)
!10926 = !DILocation(line: 4835, column: 14, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10924, file: !209, line: 4835, column: 2)
!10928 = !DILocation(line: 4835, column: 18, scope: !10927)
!10929 = !DILocation(line: 4835, column: 24, scope: !10927)
!10930 = !DILocation(line: 4835, column: 16, scope: !10927)
!10931 = !DILocation(line: 4835, column: 2, scope: !10924)
!10932 = !DILocation(line: 4836, column: 33, scope: !10933)
!10933 = distinct !DILexicalBlock(scope: !10927, file: !209, line: 4835, column: 32)
!10934 = !DILocation(line: 4836, column: 12, scope: !10933)
!10935 = !DILocation(line: 4836, column: 10, scope: !10933)
!10936 = !DILocation(line: 4837, column: 7, scope: !10937)
!10937 = distinct !DILexicalBlock(scope: !10933, file: !209, line: 4837, column: 7)
!10938 = !DILocation(line: 4837, column: 14, scope: !10937)
!10939 = !DILocation(line: 4837, column: 7, scope: !10933)
!10940 = !DILocation(line: 4838, column: 11, scope: !10937)
!10941 = !DILocation(line: 4838, column: 4, scope: !10937)
!10942 = !DILocation(line: 4839, column: 13, scope: !10933)
!10943 = !DILocation(line: 4839, column: 3, scope: !10933)
!10944 = !DILocation(line: 4839, column: 8, scope: !10933)
!10945 = !DILocation(line: 4839, column: 11, scope: !10933)
!10946 = !DILocation(line: 4840, column: 2, scope: !10933)
!10947 = !DILocation(line: 4835, column: 28, scope: !10927)
!10948 = !DILocation(line: 4835, column: 2, scope: !10927)
!10949 = distinct !{!10949, !10931, !10950}
!10950 = !DILocation(line: 4840, column: 2, scope: !10924)
!10951 = !DILocation(line: 4841, column: 9, scope: !10892)
!10952 = !DILocation(line: 4841, column: 15, scope: !10892)
!10953 = !DILocation(line: 4841, column: 2, scope: !10892)
!10954 = !DILocation(line: 4842, column: 1, scope: !10892)
!10955 = distinct !DISubprogram(name: "init_cs5529", scope: !209, file: !209, line: 4856, type: !4261, scopeLine: 4857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!10956 = !DILocalVariable(name: "dev", arg: 1, scope: !10955, file: !209, line: 4856, type: !3350)
!10957 = !DILocation(line: 4856, column: 46, scope: !10955)
!10958 = !DILocalVariable(name: "config_bits", scope: !10955, file: !209, line: 4858, type: !7)
!10959 = !DILocation(line: 4858, column: 15, scope: !10955)
!10960 = !DILocation(line: 4863, column: 22, scope: !10955)
!10961 = !DILocation(line: 4863, column: 27, scope: !10955)
!10962 = !DILocation(line: 4863, column: 39, scope: !10955)
!10963 = !DILocation(line: 4863, column: 2, scope: !10955)
!10964 = !DILocation(line: 4866, column: 23, scope: !10955)
!10965 = !DILocation(line: 4866, column: 2, scope: !10955)
!10966 = !DILocation(line: 4876, column: 2, scope: !10955)
!10967 = distinct !DISubprogram(name: "ni_serial_insn_config", scope: !209, file: !209, line: 3852, type: !4216, scopeLine: 3856, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!10968 = !DILocalVariable(name: "dev", arg: 1, scope: !10967, file: !209, line: 3852, type: !3350)
!10969 = !DILocation(line: 3852, column: 56, scope: !10967)
!10970 = !DILocalVariable(name: "s", arg: 2, scope: !10967, file: !209, line: 3853, type: !4119)
!10971 = !DILocation(line: 3853, column: 31, scope: !10967)
!10972 = !DILocalVariable(name: "insn", arg: 3, scope: !10967, file: !209, line: 3854, type: !4218)
!10973 = !DILocation(line: 3854, column: 26, scope: !10967)
!10974 = !DILocalVariable(name: "data", arg: 4, scope: !10967, file: !209, line: 3855, type: !1365)
!10975 = !DILocation(line: 3855, column: 20, scope: !10967)
!10976 = !DILocalVariable(name: "devpriv", scope: !10967, file: !209, line: 3857, type: !4731)
!10977 = !DILocation(line: 3857, column: 21, scope: !10967)
!10978 = !DILocation(line: 3857, column: 31, scope: !10967)
!10979 = !DILocation(line: 3857, column: 36, scope: !10967)
!10980 = !DILocalVariable(name: "clk_fout", scope: !10967, file: !209, line: 3858, type: !7)
!10981 = !DILocation(line: 3858, column: 15, scope: !10967)
!10982 = !DILocation(line: 3858, column: 26, scope: !10967)
!10983 = !DILocation(line: 3858, column: 35, scope: !10967)
!10984 = !DILocalVariable(name: "err", scope: !10967, file: !209, line: 3859, type: !429)
!10985 = !DILocation(line: 3859, column: 6, scope: !10967)
!10986 = !DILocation(line: 3859, column: 12, scope: !10967)
!10987 = !DILocation(line: 3859, column: 18, scope: !10967)
!10988 = !DILocalVariable(name: "byte_out", scope: !10967, file: !209, line: 3860, type: !434)
!10989 = !DILocation(line: 3860, column: 16, scope: !10967)
!10990 = !DILocalVariable(name: "byte_in", scope: !10967, file: !209, line: 3860, type: !434)
!10991 = !DILocation(line: 3860, column: 26, scope: !10967)
!10992 = !DILocation(line: 3862, column: 6, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10967, file: !209, line: 3862, column: 6)
!10994 = !DILocation(line: 3862, column: 12, scope: !10993)
!10995 = !DILocation(line: 3862, column: 14, scope: !10993)
!10996 = !DILocation(line: 3862, column: 6, scope: !10967)
!10997 = !DILocation(line: 3863, column: 3, scope: !10993)
!10998 = !DILocation(line: 3865, column: 10, scope: !10967)
!10999 = !DILocation(line: 3865, column: 2, scope: !10967)
!11000 = !DILocation(line: 3867, column: 3, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10967, file: !209, line: 3865, column: 19)
!11002 = !DILocation(line: 3867, column: 12, scope: !11001)
!11003 = !DILocation(line: 3867, column: 27, scope: !11001)
!11004 = !DILocation(line: 3868, column: 3, scope: !11001)
!11005 = !DILocation(line: 3868, column: 12, scope: !11001)
!11006 = !DILocation(line: 3868, column: 24, scope: !11001)
!11007 = !DILocation(line: 3870, column: 7, scope: !11008)
!11008 = distinct !DILexicalBlock(scope: !11001, file: !209, line: 3870, column: 7)
!11009 = !DILocation(line: 3870, column: 15, scope: !11008)
!11010 = !DILocation(line: 3870, column: 7, scope: !11001)
!11011 = !DILocation(line: 3871, column: 4, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !11008, file: !209, line: 3870, column: 35)
!11013 = !DILocation(line: 3871, column: 13, scope: !11012)
!11014 = !DILocation(line: 3871, column: 28, scope: !11012)
!11015 = !DILocation(line: 3872, column: 4, scope: !11012)
!11016 = !DILocation(line: 3872, column: 13, scope: !11012)
!11017 = !DILocation(line: 3872, column: 25, scope: !11012)
!11018 = !DILocation(line: 3874, column: 4, scope: !11012)
!11019 = !DILocation(line: 3874, column: 12, scope: !11012)
!11020 = !DILocation(line: 3875, column: 34, scope: !11012)
!11021 = !DILocation(line: 3875, column: 4, scope: !11012)
!11022 = !DILocation(line: 3875, column: 13, scope: !11012)
!11023 = !DILocation(line: 3875, column: 32, scope: !11012)
!11024 = !DILocation(line: 3876, column: 3, scope: !11012)
!11025 = !DILocation(line: 3876, column: 14, scope: !11026)
!11026 = distinct !DILexicalBlock(scope: !11008, file: !209, line: 3876, column: 14)
!11027 = !DILocation(line: 3876, column: 22, scope: !11026)
!11028 = !DILocation(line: 3876, column: 14, scope: !11008)
!11029 = !DILocation(line: 3881, column: 4, scope: !11030)
!11030 = distinct !DILexicalBlock(scope: !11026, file: !209, line: 3876, column: 39)
!11031 = !DILocation(line: 3881, column: 13, scope: !11030)
!11032 = !DILocation(line: 3881, column: 25, scope: !11030)
!11033 = !DILocation(line: 3882, column: 13, scope: !11030)
!11034 = !DILocation(line: 3883, column: 13, scope: !11030)
!11035 = !DILocation(line: 3884, column: 4, scope: !11030)
!11036 = !DILocation(line: 3884, column: 12, scope: !11030)
!11037 = !DILocation(line: 3885, column: 34, scope: !11030)
!11038 = !DILocation(line: 3885, column: 4, scope: !11030)
!11039 = !DILocation(line: 3885, column: 13, scope: !11030)
!11040 = !DILocation(line: 3885, column: 32, scope: !11030)
!11041 = !DILocation(line: 3886, column: 3, scope: !11030)
!11042 = !DILocation(line: 3886, column: 14, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11026, file: !209, line: 3886, column: 14)
!11044 = !DILocation(line: 3886, column: 22, scope: !11043)
!11045 = !DILocation(line: 3886, column: 14, scope: !11026)
!11046 = !DILocation(line: 3887, column: 4, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11043, file: !209, line: 3886, column: 39)
!11048 = !DILocation(line: 3887, column: 13, scope: !11047)
!11049 = !DILocation(line: 3887, column: 25, scope: !11047)
!11050 = !DILocation(line: 3888, column: 13, scope: !11047)
!11051 = !DILocation(line: 3890, column: 4, scope: !11047)
!11052 = !DILocation(line: 3890, column: 12, scope: !11047)
!11053 = !DILocation(line: 3891, column: 34, scope: !11047)
!11054 = !DILocation(line: 3891, column: 4, scope: !11047)
!11055 = !DILocation(line: 3891, column: 13, scope: !11047)
!11056 = !DILocation(line: 3891, column: 32, scope: !11047)
!11057 = !DILocation(line: 3892, column: 3, scope: !11047)
!11058 = !DILocation(line: 3892, column: 14, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11043, file: !209, line: 3892, column: 14)
!11060 = !DILocation(line: 3892, column: 22, scope: !11059)
!11061 = !DILocation(line: 3892, column: 14, scope: !11043)
!11062 = !DILocation(line: 3893, column: 4, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11059, file: !209, line: 3892, column: 38)
!11064 = !DILocation(line: 3893, column: 13, scope: !11063)
!11065 = !DILocation(line: 3893, column: 25, scope: !11063)
!11066 = !DILocation(line: 3894, column: 13, scope: !11063)
!11067 = !DILocation(line: 3902, column: 4, scope: !11063)
!11068 = !DILocation(line: 3902, column: 12, scope: !11063)
!11069 = !DILocation(line: 3903, column: 34, scope: !11063)
!11070 = !DILocation(line: 3903, column: 4, scope: !11063)
!11071 = !DILocation(line: 3903, column: 13, scope: !11063)
!11072 = !DILocation(line: 3903, column: 32, scope: !11063)
!11073 = !DILocation(line: 3904, column: 3, scope: !11063)
!11074 = !DILocation(line: 3905, column: 4, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11059, file: !209, line: 3904, column: 10)
!11076 = !DILocation(line: 3905, column: 13, scope: !11075)
!11077 = !DILocation(line: 3905, column: 25, scope: !11075)
!11078 = !DILocation(line: 3907, column: 4, scope: !11075)
!11079 = !DILocation(line: 3907, column: 13, scope: !11075)
!11080 = !DILocation(line: 3907, column: 28, scope: !11075)
!11081 = !DILocation(line: 3908, column: 15, scope: !11075)
!11082 = !DILocation(line: 3908, column: 23, scope: !11075)
!11083 = !DILocation(line: 3908, column: 31, scope: !11075)
!11084 = !DILocation(line: 3908, column: 4, scope: !11075)
!11085 = !DILocation(line: 3908, column: 12, scope: !11075)
!11086 = !DILocation(line: 3909, column: 34, scope: !11075)
!11087 = !DILocation(line: 3909, column: 4, scope: !11075)
!11088 = !DILocation(line: 3909, column: 13, scope: !11075)
!11089 = !DILocation(line: 3909, column: 32, scope: !11075)
!11090 = !DILocation(line: 3911, column: 29, scope: !11001)
!11091 = !DILocation(line: 3911, column: 3, scope: !11001)
!11092 = !DILocation(line: 3911, column: 12, scope: !11001)
!11093 = !DILocation(line: 3911, column: 27, scope: !11001)
!11094 = !DILocation(line: 3913, column: 17, scope: !11001)
!11095 = !DILocation(line: 3913, column: 22, scope: !11001)
!11096 = !DILocation(line: 3913, column: 31, scope: !11001)
!11097 = !DILocation(line: 3913, column: 3, scope: !11001)
!11098 = !DILocation(line: 3914, column: 17, scope: !11001)
!11099 = !DILocation(line: 3914, column: 22, scope: !11001)
!11100 = !DILocation(line: 3914, column: 31, scope: !11001)
!11101 = !DILocation(line: 3914, column: 3, scope: !11001)
!11102 = !DILocation(line: 3915, column: 3, scope: !11001)
!11103 = !DILocation(line: 3919, column: 7, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11001, file: !209, line: 3919, column: 7)
!11105 = !DILocation(line: 3919, column: 16, scope: !11104)
!11106 = !DILocation(line: 3919, column: 35, scope: !11104)
!11107 = !DILocation(line: 3919, column: 7, scope: !11001)
!11108 = !DILocation(line: 3920, column: 4, scope: !11104)
!11109 = !DILocation(line: 3922, column: 14, scope: !11001)
!11110 = !DILocation(line: 3922, column: 22, scope: !11001)
!11111 = !DILocation(line: 3922, column: 12, scope: !11001)
!11112 = !DILocation(line: 3924, column: 7, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11001, file: !209, line: 3924, column: 7)
!11114 = !DILocation(line: 3924, column: 16, scope: !11113)
!11115 = !DILocation(line: 3924, column: 7, scope: !11001)
!11116 = !DILocation(line: 3925, column: 34, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11113, file: !209, line: 3924, column: 32)
!11118 = !DILocation(line: 3925, column: 39, scope: !11117)
!11119 = !DILocation(line: 3925, column: 42, scope: !11117)
!11120 = !DILocation(line: 3925, column: 10, scope: !11117)
!11121 = !DILocation(line: 3925, column: 8, scope: !11117)
!11122 = !DILocation(line: 3927, column: 3, scope: !11117)
!11123 = !DILocation(line: 3927, column: 14, scope: !11124)
!11124 = distinct !DILexicalBlock(scope: !11113, file: !209, line: 3927, column: 14)
!11125 = !DILocation(line: 3927, column: 23, scope: !11124)
!11126 = !DILocation(line: 3927, column: 42, scope: !11124)
!11127 = !DILocation(line: 3927, column: 14, scope: !11113)
!11128 = !DILocation(line: 3928, column: 34, scope: !11129)
!11129 = distinct !DILexicalBlock(scope: !11124, file: !209, line: 3927, column: 47)
!11130 = !DILocation(line: 3928, column: 39, scope: !11129)
!11131 = !DILocation(line: 3928, column: 42, scope: !11129)
!11132 = !DILocation(line: 3928, column: 10, scope: !11129)
!11133 = !DILocation(line: 3928, column: 8, scope: !11129)
!11134 = !DILocation(line: 3930, column: 3, scope: !11129)
!11135 = !DILocation(line: 3931, column: 4, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11124, file: !209, line: 3930, column: 10)
!11137 = !DILocation(line: 3932, column: 4, scope: !11136)
!11138 = !DILocation(line: 3934, column: 7, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11001, file: !209, line: 3934, column: 7)
!11140 = !DILocation(line: 3934, column: 11, scope: !11139)
!11141 = !DILocation(line: 3934, column: 7, scope: !11001)
!11142 = !DILocation(line: 3935, column: 11, scope: !11139)
!11143 = !DILocation(line: 3935, column: 4, scope: !11139)
!11144 = !DILocation(line: 3936, column: 13, scope: !11001)
!11145 = !DILocation(line: 3936, column: 21, scope: !11001)
!11146 = !DILocation(line: 3936, column: 3, scope: !11001)
!11147 = !DILocation(line: 3936, column: 11, scope: !11001)
!11148 = !DILocation(line: 3937, column: 10, scope: !11001)
!11149 = !DILocation(line: 3937, column: 16, scope: !11001)
!11150 = !DILocation(line: 3937, column: 3, scope: !11001)
!11151 = !DILocation(line: 3941, column: 3, scope: !11001)
!11152 = !DILocation(line: 3943, column: 1, scope: !10967)
!11153 = distinct !DISubprogram(name: "ni_rtsi_insn_bits", scope: !209, file: !209, line: 5243, type: !4216, scopeLine: 5247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!11154 = !DILocalVariable(name: "dev", arg: 1, scope: !11153, file: !209, line: 5243, type: !3350)
!11155 = !DILocation(line: 5243, column: 52, scope: !11153)
!11156 = !DILocalVariable(name: "s", arg: 2, scope: !11153, file: !209, line: 5244, type: !4119)
!11157 = !DILocation(line: 5244, column: 34, scope: !11153)
!11158 = !DILocalVariable(name: "insn", arg: 3, scope: !11153, file: !209, line: 5245, type: !4218)
!11159 = !DILocation(line: 5245, column: 29, scope: !11153)
!11160 = !DILocalVariable(name: "data", arg: 4, scope: !11153, file: !209, line: 5246, type: !1365)
!11161 = !DILocation(line: 5246, column: 23, scope: !11153)
!11162 = !DILocation(line: 5248, column: 2, scope: !11153)
!11163 = !DILocation(line: 5248, column: 10, scope: !11153)
!11164 = !DILocation(line: 5250, column: 9, scope: !11153)
!11165 = !DILocation(line: 5250, column: 15, scope: !11153)
!11166 = !DILocation(line: 5250, column: 2, scope: !11153)
!11167 = distinct !DISubprogram(name: "ni_rtsi_insn_config", scope: !209, file: !209, line: 5200, type: !4216, scopeLine: 5204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!11168 = !DILocalVariable(name: "dev", arg: 1, scope: !11167, file: !209, line: 5200, type: !3350)
!11169 = !DILocation(line: 5200, column: 54, scope: !11167)
!11170 = !DILocalVariable(name: "s", arg: 2, scope: !11167, file: !209, line: 5201, type: !4119)
!11171 = !DILocation(line: 5201, column: 36, scope: !11167)
!11172 = !DILocalVariable(name: "insn", arg: 3, scope: !11167, file: !209, line: 5202, type: !4218)
!11173 = !DILocation(line: 5202, column: 31, scope: !11167)
!11174 = !DILocalVariable(name: "data", arg: 4, scope: !11167, file: !209, line: 5203, type: !1365)
!11175 = !DILocation(line: 5203, column: 25, scope: !11167)
!11176 = !DILocalVariable(name: "devpriv", scope: !11167, file: !209, line: 5205, type: !4731)
!11177 = !DILocation(line: 5205, column: 21, scope: !11167)
!11178 = !DILocation(line: 5205, column: 31, scope: !11167)
!11179 = !DILocation(line: 5205, column: 36, scope: !11167)
!11180 = !DILocalVariable(name: "chan", scope: !11167, file: !209, line: 5206, type: !7)
!11181 = !DILocation(line: 5206, column: 15, scope: !11167)
!11182 = !DILocation(line: 5206, column: 22, scope: !11167)
!11183 = !DILocation(line: 5208, column: 10, scope: !11167)
!11184 = !DILocation(line: 5208, column: 2, scope: !11167)
!11185 = !DILocation(line: 5211, column: 25, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !11167, file: !209, line: 5208, column: 19)
!11187 = !DILocation(line: 5211, column: 30, scope: !11186)
!11188 = !DILocation(line: 5211, column: 36, scope: !11186)
!11189 = !DILocation(line: 5211, column: 3, scope: !11186)
!11190 = !DILocation(line: 5212, column: 3, scope: !11186)
!11191 = !DILocalVariable(name: "ret", scope: !11192, file: !209, line: 5214, type: !429)
!11192 = distinct !DILexicalBlock(scope: !11186, file: !209, line: 5213, column: 30)
!11193 = !DILocation(line: 5214, column: 7, scope: !11192)
!11194 = !DILocation(line: 5214, column: 35, scope: !11192)
!11195 = !DILocation(line: 5214, column: 40, scope: !11192)
!11196 = !DILocation(line: 5214, column: 13, scope: !11192)
!11197 = !DILocation(line: 5216, column: 7, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11192, file: !209, line: 5216, column: 7)
!11199 = !DILocation(line: 5216, column: 11, scope: !11198)
!11200 = !DILocation(line: 5216, column: 7, scope: !11192)
!11201 = !DILocation(line: 5217, column: 11, scope: !11198)
!11202 = !DILocation(line: 5217, column: 4, scope: !11198)
!11203 = !DILocation(line: 5218, column: 13, scope: !11192)
!11204 = !DILocation(line: 5218, column: 3, scope: !11192)
!11205 = !DILocation(line: 5218, column: 11, scope: !11192)
!11206 = !DILocation(line: 5219, column: 3, scope: !11192)
!11207 = !DILocation(line: 5222, column: 30, scope: !11186)
!11208 = !DILocation(line: 5222, column: 35, scope: !11186)
!11209 = !DILocation(line: 5222, column: 44, scope: !11186)
!11210 = !DILocation(line: 5222, column: 10, scope: !11186)
!11211 = !DILocation(line: 5222, column: 3, scope: !11186)
!11212 = !DILocation(line: 5224, column: 13, scope: !11186)
!11213 = !DILocation(line: 5224, column: 22, scope: !11186)
!11214 = !DILocation(line: 5224, column: 3, scope: !11186)
!11215 = !DILocation(line: 5224, column: 11, scope: !11186)
!11216 = !DILocation(line: 5225, column: 13, scope: !11186)
!11217 = !DILocation(line: 5225, column: 22, scope: !11186)
!11218 = !DILocation(line: 5225, column: 3, scope: !11186)
!11219 = !DILocation(line: 5225, column: 11, scope: !11186)
!11220 = !DILocation(line: 5226, column: 3, scope: !11186)
!11221 = !DILocation(line: 5228, column: 30, scope: !11186)
!11222 = !DILocation(line: 5228, column: 35, scope: !11186)
!11223 = !DILocation(line: 5228, column: 41, scope: !11186)
!11224 = !DILocation(line: 5228, column: 10, scope: !11186)
!11225 = !DILocation(line: 5228, column: 3, scope: !11186)
!11226 = !DILocalVariable(name: "ret", scope: !11227, file: !209, line: 5230, type: !429)
!11227 = distinct !DILexicalBlock(scope: !11186, file: !209, line: 5229, column: 32)
!11228 = !DILocation(line: 5230, column: 7, scope: !11227)
!11229 = !DILocation(line: 5230, column: 33, scope: !11227)
!11230 = !DILocation(line: 5230, column: 38, scope: !11227)
!11231 = !DILocation(line: 5230, column: 13, scope: !11227)
!11232 = !DILocation(line: 5232, column: 7, scope: !11233)
!11233 = distinct !DILexicalBlock(scope: !11227, file: !209, line: 5232, column: 7)
!11234 = !DILocation(line: 5232, column: 11, scope: !11233)
!11235 = !DILocation(line: 5232, column: 7, scope: !11227)
!11236 = !DILocation(line: 5233, column: 11, scope: !11233)
!11237 = !DILocation(line: 5233, column: 4, scope: !11233)
!11238 = !DILocation(line: 5234, column: 13, scope: !11227)
!11239 = !DILocation(line: 5234, column: 3, scope: !11227)
!11240 = !DILocation(line: 5234, column: 11, scope: !11227)
!11241 = !DILocation(line: 5235, column: 3, scope: !11227)
!11242 = !DILocation(line: 5238, column: 3, scope: !11186)
!11243 = !DILocation(line: 5240, column: 2, scope: !11167)
!11244 = !DILocation(line: 5241, column: 1, scope: !11167)
!11245 = distinct !DISubprogram(name: "ni_rtsi_init", scope: !209, file: !209, line: 5518, type: !4265, scopeLine: 5519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!11246 = !DILocalVariable(name: "dev", arg: 1, scope: !11245, file: !209, line: 5518, type: !3350)
!11247 = !DILocation(line: 5518, column: 48, scope: !11245)
!11248 = !DILocalVariable(name: "devpriv", scope: !11245, file: !209, line: 5520, type: !4731)
!11249 = !DILocation(line: 5520, column: 21, scope: !11245)
!11250 = !DILocation(line: 5520, column: 31, scope: !11245)
!11251 = !DILocation(line: 5520, column: 36, scope: !11245)
!11252 = !DILocalVariable(name: "i", scope: !11245, file: !209, line: 5521, type: !429)
!11253 = !DILocation(line: 5521, column: 6, scope: !11245)
!11254 = !DILocation(line: 5530, column: 2, scope: !11245)
!11255 = !DILocation(line: 5530, column: 11, scope: !11245)
!11256 = !DILocation(line: 5530, column: 27, scope: !11245)
!11257 = !DILocation(line: 5532, column: 26, scope: !11258)
!11258 = distinct !DILexicalBlock(scope: !11245, file: !209, line: 5532, column: 6)
!11259 = !DILocation(line: 5532, column: 6, scope: !11258)
!11260 = !DILocation(line: 5532, column: 57, scope: !11258)
!11261 = !DILocation(line: 5532, column: 6, scope: !11245)
!11262 = !DILocation(line: 5533, column: 3, scope: !11258)
!11263 = !DILocation(line: 5536, column: 9, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11245, file: !209, line: 5536, column: 2)
!11265 = !DILocation(line: 5536, column: 7, scope: !11264)
!11266 = !DILocation(line: 5536, column: 14, scope: !11267)
!11267 = distinct !DILexicalBlock(scope: !11264, file: !209, line: 5536, column: 2)
!11268 = !DILocation(line: 5536, column: 16, scope: !11267)
!11269 = !DILocation(line: 5536, column: 2, scope: !11264)
!11270 = !DILocation(line: 5537, column: 25, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11267, file: !209, line: 5536, column: 26)
!11272 = !DILocation(line: 5537, column: 30, scope: !11271)
!11273 = !DILocation(line: 5537, column: 3, scope: !11271)
!11274 = !DILocation(line: 5538, column: 23, scope: !11271)
!11275 = !DILocation(line: 5538, column: 28, scope: !11271)
!11276 = !DILocation(line: 5538, column: 52, scope: !11271)
!11277 = !DILocation(line: 5538, column: 31, scope: !11271)
!11278 = !DILocation(line: 5538, column: 3, scope: !11271)
!11279 = !DILocation(line: 5539, column: 2, scope: !11271)
!11280 = !DILocation(line: 5536, column: 21, scope: !11267)
!11281 = !DILocation(line: 5536, column: 2, scope: !11267)
!11282 = distinct !{!11282, !11269, !11283}
!11283 = !DILocation(line: 5539, column: 2, scope: !11264)
!11284 = !DILocation(line: 5550, column: 2, scope: !11245)
!11285 = !DILocation(line: 5550, column: 11, scope: !11245)
!11286 = !DILocation(line: 5550, column: 31, scope: !11245)
!11287 = !DILocation(line: 5551, column: 9, scope: !11288)
!11288 = distinct !DILexicalBlock(scope: !11245, file: !209, line: 5551, column: 2)
!11289 = !DILocation(line: 5551, column: 7, scope: !11288)
!11290 = !DILocation(line: 5551, column: 14, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11288, file: !209, line: 5551, column: 2)
!11292 = !DILocation(line: 5551, column: 16, scope: !11291)
!11293 = !DILocation(line: 5551, column: 2, scope: !11288)
!11294 = !DILocation(line: 5552, column: 24, scope: !11291)
!11295 = !DILocation(line: 5552, column: 30, scope: !11291)
!11296 = !DILocation(line: 5552, column: 3, scope: !11291)
!11297 = !DILocation(line: 5551, column: 21, scope: !11291)
!11298 = !DILocation(line: 5551, column: 2, scope: !11291)
!11299 = distinct !{!11299, !11293, !11300}
!11300 = !DILocation(line: 5552, column: 33, scope: !11288)
!11301 = !DILocation(line: 5553, column: 9, scope: !11245)
!11302 = !DILocation(line: 5553, column: 18, scope: !11245)
!11303 = !DILocation(line: 5553, column: 2, scope: !11245)
!11304 = !DILocation(line: 5557, column: 2, scope: !11245)
!11305 = !DILocation(line: 5557, column: 11, scope: !11245)
!11306 = !DILocation(line: 5557, column: 24, scope: !11245)
!11307 = !DILocation(line: 5558, column: 20, scope: !11245)
!11308 = !DILocation(line: 5558, column: 2, scope: !11245)
!11309 = !DILocation(line: 5559, column: 1, scope: !11245)
!11310 = distinct !DISubprogram(name: "ni_gpct_write_register", scope: !209, file: !209, line: 4011, type: !4765, scopeLine: 4013, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!11311 = !DILocalVariable(name: "counter", arg: 1, scope: !11310, file: !209, line: 4011, type: !4767)
!11312 = !DILocation(line: 4011, column: 52, scope: !11310)
!11313 = !DILocalVariable(name: "bits", arg: 2, scope: !11310, file: !209, line: 4011, type: !7)
!11314 = !DILocation(line: 4011, column: 74, scope: !11310)
!11315 = !DILocalVariable(name: "reg", arg: 3, scope: !11310, file: !209, line: 4012, type: !100)
!11316 = !DILocation(line: 4012, column: 30, scope: !11310)
!11317 = !DILocalVariable(name: "dev", scope: !11310, file: !209, line: 4014, type: !3350)
!11318 = !DILocation(line: 4014, column: 24, scope: !11310)
!11319 = !DILocation(line: 4014, column: 30, scope: !11310)
!11320 = !DILocation(line: 4014, column: 39, scope: !11310)
!11321 = !DILocation(line: 4014, column: 52, scope: !11310)
!11322 = !DILocalVariable(name: "stc_register", scope: !11310, file: !209, line: 4015, type: !7)
!11323 = !DILocation(line: 4015, column: 15, scope: !11310)
!11324 = !DILocation(line: 4015, column: 54, scope: !11310)
!11325 = !DILocation(line: 4015, column: 59, scope: !11310)
!11326 = !DILocation(line: 4015, column: 30, scope: !11310)
!11327 = !DILocation(line: 4017, column: 6, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11310, file: !209, line: 4017, column: 6)
!11329 = !DILocation(line: 4017, column: 19, scope: !11328)
!11330 = !DILocation(line: 4017, column: 6, scope: !11310)
!11331 = !DILocation(line: 4018, column: 3, scope: !11328)
!11332 = !DILocation(line: 4020, column: 10, scope: !11310)
!11333 = !DILocation(line: 4020, column: 2, scope: !11310)
!11334 = !DILocation(line: 4030, column: 13, scope: !11335)
!11335 = distinct !DILexicalBlock(scope: !11310, file: !209, line: 4020, column: 15)
!11336 = !DILocation(line: 4030, column: 18, scope: !11335)
!11337 = !DILocation(line: 4030, column: 24, scope: !11335)
!11338 = !DILocation(line: 4030, column: 3, scope: !11335)
!11339 = !DILocation(line: 4031, column: 3, scope: !11335)
!11340 = !DILocation(line: 4038, column: 17, scope: !11335)
!11341 = !DILocation(line: 4038, column: 22, scope: !11335)
!11342 = !DILocation(line: 4038, column: 28, scope: !11335)
!11343 = !DILocation(line: 4038, column: 3, scope: !11335)
!11344 = !DILocation(line: 4039, column: 3, scope: !11335)
!11345 = !DILocation(line: 4043, column: 19, scope: !11335)
!11346 = !DILocation(line: 4043, column: 24, scope: !11335)
!11347 = !DILocation(line: 4045, column: 5, scope: !11335)
!11348 = !DILocation(line: 4043, column: 3, scope: !11335)
!11349 = !DILocation(line: 4046, column: 3, scope: !11335)
!11350 = !DILocation(line: 4048, column: 19, scope: !11335)
!11351 = !DILocation(line: 4048, column: 24, scope: !11335)
!11352 = !DILocation(line: 4050, column: 5, scope: !11335)
!11353 = !DILocation(line: 4048, column: 3, scope: !11335)
!11354 = !DILocation(line: 4051, column: 3, scope: !11335)
!11355 = !DILocation(line: 4053, column: 17, scope: !11335)
!11356 = !DILocation(line: 4053, column: 22, scope: !11335)
!11357 = !DILocation(line: 4053, column: 28, scope: !11335)
!11358 = !DILocation(line: 4053, column: 3, scope: !11335)
!11359 = !DILocation(line: 4054, column: 2, scope: !11335)
!11360 = !DILocation(line: 4055, column: 1, scope: !11310)
!11361 = distinct !DISubprogram(name: "ni_gpct_read_register", scope: !209, file: !209, line: 4057, type: !4811, scopeLine: 4059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!11362 = !DILocalVariable(name: "counter", arg: 1, scope: !11361, file: !209, line: 4057, type: !4767)
!11363 = !DILocation(line: 4057, column: 59, scope: !11361)
!11364 = !DILocalVariable(name: "reg", arg: 2, scope: !11361, file: !209, line: 4058, type: !100)
!11365 = !DILocation(line: 4058, column: 30, scope: !11361)
!11366 = !DILocalVariable(name: "dev", scope: !11361, file: !209, line: 4060, type: !3350)
!11367 = !DILocation(line: 4060, column: 24, scope: !11361)
!11368 = !DILocation(line: 4060, column: 30, scope: !11361)
!11369 = !DILocation(line: 4060, column: 39, scope: !11361)
!11370 = !DILocation(line: 4060, column: 52, scope: !11361)
!11371 = !DILocalVariable(name: "stc_register", scope: !11361, file: !209, line: 4061, type: !7)
!11372 = !DILocation(line: 4061, column: 15, scope: !11361)
!11373 = !DILocation(line: 4061, column: 54, scope: !11361)
!11374 = !DILocation(line: 4061, column: 59, scope: !11361)
!11375 = !DILocation(line: 4061, column: 30, scope: !11361)
!11376 = !DILocation(line: 4063, column: 6, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11361, file: !209, line: 4063, column: 6)
!11378 = !DILocation(line: 4063, column: 19, scope: !11377)
!11379 = !DILocation(line: 4063, column: 6, scope: !11361)
!11380 = !DILocation(line: 4064, column: 3, scope: !11377)
!11381 = !DILocation(line: 4066, column: 10, scope: !11361)
!11382 = !DILocation(line: 4066, column: 2, scope: !11361)
!11383 = !DILocation(line: 4070, column: 19, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11361, file: !209, line: 4066, column: 15)
!11385 = !DILocation(line: 4070, column: 24, scope: !11384)
!11386 = !DILocation(line: 4070, column: 10, scope: !11384)
!11387 = !DILocation(line: 4070, column: 3, scope: !11384)
!11388 = !DILocation(line: 4077, column: 23, scope: !11384)
!11389 = !DILocation(line: 4077, column: 28, scope: !11384)
!11390 = !DILocation(line: 4077, column: 10, scope: !11384)
!11391 = !DILocation(line: 4077, column: 3, scope: !11384)
!11392 = !DILocation(line: 4081, column: 23, scope: !11384)
!11393 = !DILocation(line: 4081, column: 28, scope: !11384)
!11394 = !DILocation(line: 4081, column: 10, scope: !11384)
!11395 = !DILocation(line: 4081, column: 3, scope: !11384)
!11396 = !DILocation(line: 4083, column: 1, scope: !11361)
!11397 = distinct !DISubprogram(name: "ni_gpct_cmd", scope: !209, file: !209, line: 5859, type: !4233, scopeLine: 5860, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!11398 = !DILocalVariable(name: "dev", arg: 1, scope: !11397, file: !209, line: 5859, type: !3350)
!11399 = !DILocation(line: 5859, column: 46, scope: !11397)
!11400 = !DILocalVariable(name: "s", arg: 2, scope: !11397, file: !209, line: 5859, type: !4119)
!11401 = !DILocation(line: 5859, column: 76, scope: !11397)
!11402 = !DILocalVariable(name: "counter", scope: !11397, file: !209, line: 5861, type: !4767)
!11403 = !DILocation(line: 5861, column: 18, scope: !11397)
!11404 = !DILocation(line: 5861, column: 28, scope: !11397)
!11405 = !DILocation(line: 5861, column: 31, scope: !11397)
!11406 = !DILocalVariable(name: "retval", scope: !11397, file: !209, line: 5862, type: !429)
!11407 = !DILocation(line: 5862, column: 6, scope: !11397)
!11408 = !DILocation(line: 5864, column: 40, scope: !11397)
!11409 = !DILocation(line: 5864, column: 45, scope: !11397)
!11410 = !DILocation(line: 5864, column: 54, scope: !11397)
!11411 = !DILocation(line: 5864, column: 11, scope: !11397)
!11412 = !DILocation(line: 5864, column: 9, scope: !11397)
!11413 = !DILocation(line: 5866, column: 6, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11397, file: !209, line: 5866, column: 6)
!11415 = !DILocation(line: 5866, column: 6, scope: !11397)
!11416 = !DILocation(line: 5867, column: 3, scope: !11417)
!11417 = distinct !DILexicalBlock(scope: !11414, file: !209, line: 5866, column: 14)
!11418 = !DILocation(line: 5869, column: 10, scope: !11417)
!11419 = !DILocation(line: 5869, column: 3, scope: !11417)
!11420 = !DILocation(line: 5871, column: 21, scope: !11397)
!11421 = !DILocation(line: 5871, column: 2, scope: !11397)
!11422 = !DILocation(line: 5872, column: 32, scope: !11397)
!11423 = !DILocation(line: 5872, column: 37, scope: !11397)
!11424 = !DILocation(line: 5872, column: 46, scope: !11397)
!11425 = !DILocation(line: 5872, column: 2, scope: !11397)
!11426 = !DILocation(line: 5874, column: 20, scope: !11397)
!11427 = !DILocation(line: 5874, column: 25, scope: !11397)
!11428 = !DILocation(line: 5874, column: 9, scope: !11397)
!11429 = !DILocation(line: 5874, column: 2, scope: !11397)
!11430 = !DILocation(line: 5875, column: 1, scope: !11397)
!11431 = distinct !DISubprogram(name: "ni_gpct_cancel", scope: !209, file: !209, line: 5877, type: !4233, scopeLine: 5878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!11432 = !DILocalVariable(name: "dev", arg: 1, scope: !11431, file: !209, line: 5877, type: !3350)
!11433 = !DILocation(line: 5877, column: 49, scope: !11431)
!11434 = !DILocalVariable(name: "s", arg: 2, scope: !11431, file: !209, line: 5877, type: !4119)
!11435 = !DILocation(line: 5877, column: 79, scope: !11431)
!11436 = !DILocalVariable(name: "counter", scope: !11431, file: !209, line: 5879, type: !4767)
!11437 = !DILocation(line: 5879, column: 18, scope: !11431)
!11438 = !DILocation(line: 5879, column: 28, scope: !11431)
!11439 = !DILocation(line: 5879, column: 31, scope: !11431)
!11440 = !DILocalVariable(name: "retval", scope: !11431, file: !209, line: 5880, type: !429)
!11441 = !DILocation(line: 5880, column: 6, scope: !11431)
!11442 = !DILocation(line: 5882, column: 25, scope: !11431)
!11443 = !DILocation(line: 5882, column: 11, scope: !11431)
!11444 = !DILocation(line: 5882, column: 9, scope: !11431)
!11445 = !DILocation(line: 5883, column: 32, scope: !11431)
!11446 = !DILocation(line: 5883, column: 37, scope: !11431)
!11447 = !DILocation(line: 5883, column: 46, scope: !11431)
!11448 = !DILocation(line: 5883, column: 2, scope: !11431)
!11449 = !DILocation(line: 5884, column: 31, scope: !11431)
!11450 = !DILocation(line: 5884, column: 36, scope: !11431)
!11451 = !DILocation(line: 5884, column: 45, scope: !11431)
!11452 = !DILocation(line: 5884, column: 2, scope: !11431)
!11453 = !DILocation(line: 5885, column: 9, scope: !11431)
!11454 = !DILocation(line: 5885, column: 2, scope: !11431)
!11455 = distinct !DISubprogram(name: "ni_set_gout_routing", scope: !209, file: !209, line: 5604, type: !11456, scopeLine: 5606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!11456 = !DISubroutineType(types: !11457)
!11457 = !{!429, !7, !7, !3350}
!11458 = !DILocalVariable(name: "src", arg: 1, scope: !11455, file: !209, line: 5604, type: !7)
!11459 = !DILocation(line: 5604, column: 52, scope: !11455)
!11460 = !DILocalVariable(name: "dest", arg: 2, scope: !11455, file: !209, line: 5604, type: !7)
!11461 = !DILocation(line: 5604, column: 70, scope: !11455)
!11462 = !DILocalVariable(name: "dev", arg: 3, scope: !11455, file: !209, line: 5605, type: !3350)
!11463 = !DILocation(line: 5605, column: 33, scope: !11455)
!11464 = !DILocalVariable(name: "devpriv", scope: !11455, file: !209, line: 5607, type: !4731)
!11465 = !DILocation(line: 5607, column: 21, scope: !11455)
!11466 = !DILocation(line: 5607, column: 31, scope: !11455)
!11467 = !DILocation(line: 5607, column: 36, scope: !11455)
!11468 = !DILocation(line: 5609, column: 10, scope: !11455)
!11469 = !DILocation(line: 5609, column: 2, scope: !11455)
!11470 = !DILocation(line: 5612, column: 3, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11455, file: !209, line: 5609, column: 16)
!11472 = !DILocation(line: 5612, column: 12, scope: !11471)
!11473 = !DILocation(line: 5612, column: 28, scope: !11471)
!11474 = !DILocation(line: 5615, column: 10, scope: !11471)
!11475 = !DILocation(line: 5615, column: 7, scope: !11471)
!11476 = !DILocation(line: 5614, column: 3, scope: !11471)
!11477 = !DILocation(line: 5614, column: 12, scope: !11471)
!11478 = !DILocation(line: 5614, column: 28, scope: !11471)
!11479 = !DILocation(line: 5616, column: 3, scope: !11471)
!11480 = !DILocation(line: 5619, column: 3, scope: !11471)
!11481 = !DILocation(line: 5619, column: 12, scope: !11471)
!11482 = !DILocation(line: 5619, column: 28, scope: !11471)
!11483 = !DILocation(line: 5620, column: 9, scope: !11471)
!11484 = !DILocation(line: 5620, column: 7, scope: !11471)
!11485 = !DILocation(line: 5622, column: 60, scope: !11471)
!11486 = !DILocation(line: 5622, column: 58, scope: !11471)
!11487 = !DILocation(line: 5622, column: 3, scope: !11471)
!11488 = !DILocation(line: 5622, column: 12, scope: !11471)
!11489 = !DILocation(line: 5622, column: 28, scope: !11471)
!11490 = !DILocation(line: 5623, column: 3, scope: !11471)
!11491 = !DILocation(line: 5625, column: 3, scope: !11471)
!11492 = !DILocation(line: 5628, column: 16, scope: !11455)
!11493 = !DILocation(line: 5628, column: 21, scope: !11455)
!11494 = !DILocation(line: 5628, column: 30, scope: !11455)
!11495 = !DILocation(line: 5628, column: 2, scope: !11455)
!11496 = !DILocation(line: 5629, column: 2, scope: !11455)
!11497 = !DILocation(line: 5630, column: 1, scope: !11455)
!11498 = distinct !DISubprogram(name: "ni_freq_out_insn_read", scope: !209, file: !209, line: 4085, type: !4216, scopeLine: 4089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!11499 = !DILocalVariable(name: "dev", arg: 1, scope: !11498, file: !209, line: 4085, type: !3350)
!11500 = !DILocation(line: 4085, column: 56, scope: !11498)
!11501 = !DILocalVariable(name: "s", arg: 2, scope: !11498, file: !209, line: 4086, type: !4119)
!11502 = !DILocation(line: 4086, column: 31, scope: !11498)
!11503 = !DILocalVariable(name: "insn", arg: 3, scope: !11498, file: !209, line: 4087, type: !4218)
!11504 = !DILocation(line: 4087, column: 26, scope: !11498)
!11505 = !DILocalVariable(name: "data", arg: 4, scope: !11498, file: !209, line: 4088, type: !1365)
!11506 = !DILocation(line: 4088, column: 20, scope: !11498)
!11507 = !DILocalVariable(name: "devpriv", scope: !11498, file: !209, line: 4090, type: !4731)
!11508 = !DILocation(line: 4090, column: 21, scope: !11498)
!11509 = !DILocation(line: 4090, column: 31, scope: !11498)
!11510 = !DILocation(line: 4090, column: 36, scope: !11498)
!11511 = !DILocalVariable(name: "val", scope: !11498, file: !209, line: 4091, type: !7)
!11512 = !DILocation(line: 4091, column: 15, scope: !11498)
!11513 = !DILocation(line: 4091, column: 21, scope: !11498)
!11514 = !DILocalVariable(name: "i", scope: !11498, file: !209, line: 4092, type: !429)
!11515 = !DILocation(line: 4092, column: 6, scope: !11498)
!11516 = !DILocation(line: 4094, column: 9, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11498, file: !209, line: 4094, column: 2)
!11518 = !DILocation(line: 4094, column: 7, scope: !11517)
!11519 = !DILocation(line: 4094, column: 14, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !11517, file: !209, line: 4094, column: 2)
!11521 = !DILocation(line: 4094, column: 18, scope: !11520)
!11522 = !DILocation(line: 4094, column: 24, scope: !11520)
!11523 = !DILocation(line: 4094, column: 16, scope: !11520)
!11524 = !DILocation(line: 4094, column: 2, scope: !11517)
!11525 = !DILocation(line: 4095, column: 13, scope: !11520)
!11526 = !DILocation(line: 4095, column: 3, scope: !11520)
!11527 = !DILocation(line: 4095, column: 8, scope: !11520)
!11528 = !DILocation(line: 4095, column: 11, scope: !11520)
!11529 = !DILocation(line: 4094, column: 28, scope: !11520)
!11530 = !DILocation(line: 4094, column: 2, scope: !11520)
!11531 = distinct !{!11531, !11524, !11532}
!11532 = !DILocation(line: 4095, column: 13, scope: !11517)
!11533 = !DILocation(line: 4097, column: 9, scope: !11498)
!11534 = !DILocation(line: 4097, column: 15, scope: !11498)
!11535 = !DILocation(line: 4097, column: 2, scope: !11498)
!11536 = distinct !DISubprogram(name: "ni_freq_out_insn_write", scope: !209, file: !209, line: 4100, type: !4216, scopeLine: 4104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!11537 = !DILocalVariable(name: "dev", arg: 1, scope: !11536, file: !209, line: 4100, type: !3350)
!11538 = !DILocation(line: 4100, column: 57, scope: !11536)
!11539 = !DILocalVariable(name: "s", arg: 2, scope: !11536, file: !209, line: 4101, type: !4119)
!11540 = !DILocation(line: 4101, column: 32, scope: !11536)
!11541 = !DILocalVariable(name: "insn", arg: 3, scope: !11536, file: !209, line: 4102, type: !4218)
!11542 = !DILocation(line: 4102, column: 27, scope: !11536)
!11543 = !DILocalVariable(name: "data", arg: 4, scope: !11536, file: !209, line: 4103, type: !1365)
!11544 = !DILocation(line: 4103, column: 21, scope: !11536)
!11545 = !DILocalVariable(name: "devpriv", scope: !11536, file: !209, line: 4105, type: !4731)
!11546 = !DILocation(line: 4105, column: 21, scope: !11536)
!11547 = !DILocation(line: 4105, column: 31, scope: !11536)
!11548 = !DILocation(line: 4105, column: 36, scope: !11536)
!11549 = !DILocation(line: 4107, column: 6, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11536, file: !209, line: 4107, column: 6)
!11551 = !DILocation(line: 4107, column: 12, scope: !11550)
!11552 = !DILocation(line: 4107, column: 6, scope: !11536)
!11553 = !DILocalVariable(name: "val", scope: !11554, file: !209, line: 4108, type: !7)
!11554 = distinct !DILexicalBlock(scope: !11550, file: !209, line: 4107, column: 15)
!11555 = !DILocation(line: 4108, column: 16, scope: !11554)
!11556 = !DILocation(line: 4108, column: 22, scope: !11554)
!11557 = !DILocation(line: 4108, column: 27, scope: !11554)
!11558 = !DILocation(line: 4108, column: 33, scope: !11554)
!11559 = !DILocation(line: 4108, column: 35, scope: !11554)
!11560 = !DILocation(line: 4110, column: 3, scope: !11554)
!11561 = !DILocation(line: 4110, column: 12, scope: !11554)
!11562 = !DILocation(line: 4110, column: 27, scope: !11554)
!11563 = !DILocation(line: 4111, column: 17, scope: !11554)
!11564 = !DILocation(line: 4111, column: 22, scope: !11554)
!11565 = !DILocation(line: 4111, column: 31, scope: !11554)
!11566 = !DILocation(line: 4111, column: 3, scope: !11554)
!11567 = !DILocation(line: 4112, column: 3, scope: !11554)
!11568 = !DILocation(line: 4112, column: 12, scope: !11554)
!11569 = !DILocation(line: 4112, column: 27, scope: !11554)
!11570 = !DILocation(line: 4115, column: 30, scope: !11554)
!11571 = !DILocation(line: 4115, column: 3, scope: !11554)
!11572 = !DILocation(line: 4115, column: 12, scope: !11554)
!11573 = !DILocation(line: 4115, column: 27, scope: !11554)
!11574 = !DILocation(line: 4117, column: 3, scope: !11554)
!11575 = !DILocation(line: 4117, column: 12, scope: !11554)
!11576 = !DILocation(line: 4117, column: 27, scope: !11554)
!11577 = !DILocation(line: 4118, column: 17, scope: !11554)
!11578 = !DILocation(line: 4118, column: 22, scope: !11554)
!11579 = !DILocation(line: 4118, column: 31, scope: !11554)
!11580 = !DILocation(line: 4118, column: 3, scope: !11554)
!11581 = !DILocation(line: 4119, column: 2, scope: !11554)
!11582 = !DILocation(line: 4120, column: 9, scope: !11536)
!11583 = !DILocation(line: 4120, column: 15, scope: !11536)
!11584 = !DILocation(line: 4120, column: 2, scope: !11536)
!11585 = distinct !DISubprogram(name: "ni_freq_out_insn_config", scope: !209, file: !209, line: 4123, type: !4216, scopeLine: 4127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!11586 = !DILocalVariable(name: "dev", arg: 1, scope: !11585, file: !209, line: 4123, type: !3350)
!11587 = !DILocation(line: 4123, column: 58, scope: !11585)
!11588 = !DILocalVariable(name: "s", arg: 2, scope: !11585, file: !209, line: 4124, type: !4119)
!11589 = !DILocation(line: 4124, column: 33, scope: !11585)
!11590 = !DILocalVariable(name: "insn", arg: 3, scope: !11585, file: !209, line: 4125, type: !4218)
!11591 = !DILocation(line: 4125, column: 28, scope: !11585)
!11592 = !DILocalVariable(name: "data", arg: 4, scope: !11585, file: !209, line: 4126, type: !1365)
!11593 = !DILocation(line: 4126, column: 22, scope: !11585)
!11594 = !DILocalVariable(name: "devpriv", scope: !11585, file: !209, line: 4128, type: !4731)
!11595 = !DILocation(line: 4128, column: 21, scope: !11585)
!11596 = !DILocation(line: 4128, column: 31, scope: !11585)
!11597 = !DILocation(line: 4128, column: 36, scope: !11585)
!11598 = !DILocation(line: 4130, column: 10, scope: !11585)
!11599 = !DILocation(line: 4130, column: 2, scope: !11585)
!11600 = !DILocation(line: 4132, column: 11, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11585, file: !209, line: 4130, column: 19)
!11602 = !DILocation(line: 4132, column: 3, scope: !11601)
!11603 = !DILocation(line: 4134, column: 4, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11601, file: !209, line: 4132, column: 20)
!11605 = !DILocation(line: 4134, column: 13, scope: !11604)
!11606 = !DILocation(line: 4134, column: 28, scope: !11604)
!11607 = !DILocation(line: 4135, column: 4, scope: !11604)
!11608 = !DILocation(line: 4137, column: 4, scope: !11604)
!11609 = !DILocation(line: 4137, column: 13, scope: !11604)
!11610 = !DILocation(line: 4137, column: 28, scope: !11604)
!11611 = !DILocation(line: 4138, column: 4, scope: !11604)
!11612 = !DILocation(line: 4140, column: 4, scope: !11604)
!11613 = !DILocation(line: 4142, column: 17, scope: !11601)
!11614 = !DILocation(line: 4142, column: 22, scope: !11601)
!11615 = !DILocation(line: 4142, column: 31, scope: !11601)
!11616 = !DILocation(line: 4142, column: 3, scope: !11601)
!11617 = !DILocation(line: 4143, column: 3, scope: !11601)
!11618 = !DILocation(line: 4145, column: 7, scope: !11619)
!11619 = distinct !DILexicalBlock(scope: !11601, file: !209, line: 4145, column: 7)
!11620 = !DILocation(line: 4145, column: 16, scope: !11619)
!11621 = !DILocation(line: 4145, column: 31, scope: !11619)
!11622 = !DILocation(line: 4145, column: 7, scope: !11601)
!11623 = !DILocation(line: 4146, column: 4, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11619, file: !209, line: 4145, column: 62)
!11625 = !DILocation(line: 4146, column: 12, scope: !11624)
!11626 = !DILocation(line: 4147, column: 4, scope: !11624)
!11627 = !DILocation(line: 4147, column: 12, scope: !11624)
!11628 = !DILocation(line: 4148, column: 3, scope: !11624)
!11629 = !DILocation(line: 4149, column: 4, scope: !11630)
!11630 = distinct !DILexicalBlock(scope: !11619, file: !209, line: 4148, column: 10)
!11631 = !DILocation(line: 4149, column: 12, scope: !11630)
!11632 = !DILocation(line: 4150, column: 4, scope: !11630)
!11633 = !DILocation(line: 4150, column: 12, scope: !11630)
!11634 = !DILocation(line: 4152, column: 3, scope: !11601)
!11635 = !DILocation(line: 4154, column: 3, scope: !11601)
!11636 = !DILocation(line: 4156, column: 9, scope: !11585)
!11637 = !DILocation(line: 4156, column: 15, scope: !11585)
!11638 = !DILocation(line: 4156, column: 2, scope: !11585)
!11639 = !DILocation(line: 4157, column: 1, scope: !11585)
!11640 = distinct !DISubprogram(name: "test_route", scope: !209, file: !209, line: 5693, type: !11456, scopeLine: 5695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!11641 = !DILocalVariable(name: "src", arg: 1, scope: !11640, file: !209, line: 5693, type: !7)
!11642 = !DILocation(line: 5693, column: 36, scope: !11640)
!11643 = !DILocalVariable(name: "dest", arg: 2, scope: !11640, file: !209, line: 5693, type: !7)
!11644 = !DILocation(line: 5693, column: 54, scope: !11640)
!11645 = !DILocalVariable(name: "dev", arg: 3, scope: !11640, file: !209, line: 5694, type: !3350)
!11646 = !DILocation(line: 5694, column: 31, scope: !11640)
!11647 = !DILocalVariable(name: "devpriv", scope: !11640, file: !209, line: 5696, type: !4731)
!11648 = !DILocation(line: 5696, column: 21, scope: !11640)
!11649 = !DILocation(line: 5696, column: 31, scope: !11640)
!11650 = !DILocation(line: 5696, column: 36, scope: !11640)
!11651 = !DILocalVariable(name: "reg", scope: !11640, file: !209, line: 5697, type: !11652)
!11652 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !460, line: 16, baseType: !11653)
!11653 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !440, line: 20, baseType: !11654)
!11654 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!11655 = !DILocation(line: 5697, column: 5, scope: !11640)
!11656 = !DILocation(line: 5697, column: 32, scope: !11640)
!11657 = !DILocation(line: 5697, column: 46, scope: !11640)
!11658 = !DILocation(line: 5698, column: 12, scope: !11640)
!11659 = !DILocation(line: 5698, column: 21, scope: !11640)
!11660 = !DILocation(line: 5697, column: 11, scope: !11640)
!11661 = !DILocation(line: 5700, column: 6, scope: !11662)
!11662 = distinct !DILexicalBlock(scope: !11640, file: !209, line: 5700, column: 6)
!11663 = !DILocation(line: 5700, column: 10, scope: !11662)
!11664 = !DILocation(line: 5700, column: 6, scope: !11640)
!11665 = !DILocation(line: 5701, column: 3, scope: !11662)
!11666 = !DILocation(line: 5702, column: 31, scope: !11667)
!11667 = distinct !DILexicalBlock(scope: !11640, file: !209, line: 5702, column: 6)
!11668 = !DILocation(line: 5702, column: 37, scope: !11667)
!11669 = !DILocation(line: 5702, column: 6, scope: !11667)
!11670 = !DILocation(line: 5702, column: 45, scope: !11667)
!11671 = !DILocation(line: 5702, column: 42, scope: !11667)
!11672 = !DILocation(line: 5702, column: 6, scope: !11640)
!11673 = !DILocation(line: 5703, column: 3, scope: !11667)
!11674 = !DILocation(line: 5704, column: 2, scope: !11640)
!11675 = !DILocation(line: 5705, column: 1, scope: !11640)
!11676 = distinct !DISubprogram(name: "connect_route", scope: !209, file: !209, line: 5708, type: !11456, scopeLine: 5710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!11677 = !DILocalVariable(name: "src", arg: 1, scope: !11676, file: !209, line: 5708, type: !7)
!11678 = !DILocation(line: 5708, column: 39, scope: !11676)
!11679 = !DILocalVariable(name: "dest", arg: 2, scope: !11676, file: !209, line: 5708, type: !7)
!11680 = !DILocation(line: 5708, column: 57, scope: !11676)
!11681 = !DILocalVariable(name: "dev", arg: 3, scope: !11676, file: !209, line: 5709, type: !3350)
!11682 = !DILocation(line: 5709, column: 27, scope: !11676)
!11683 = !DILocalVariable(name: "devpriv", scope: !11676, file: !209, line: 5711, type: !4731)
!11684 = !DILocation(line: 5711, column: 21, scope: !11676)
!11685 = !DILocation(line: 5711, column: 31, scope: !11676)
!11686 = !DILocation(line: 5711, column: 36, scope: !11676)
!11687 = !DILocalVariable(name: "reg", scope: !11676, file: !209, line: 5712, type: !11652)
!11688 = !DILocation(line: 5712, column: 5, scope: !11676)
!11689 = !DILocation(line: 5712, column: 32, scope: !11676)
!11690 = !DILocation(line: 5712, column: 46, scope: !11676)
!11691 = !DILocation(line: 5713, column: 12, scope: !11676)
!11692 = !DILocation(line: 5713, column: 21, scope: !11676)
!11693 = !DILocation(line: 5712, column: 11, scope: !11676)
!11694 = !DILocalVariable(name: "current_src", scope: !11676, file: !209, line: 5714, type: !11652)
!11695 = !DILocation(line: 5714, column: 5, scope: !11676)
!11696 = !DILocation(line: 5716, column: 6, scope: !11697)
!11697 = distinct !DILexicalBlock(scope: !11676, file: !209, line: 5716, column: 6)
!11698 = !DILocation(line: 5716, column: 10, scope: !11697)
!11699 = !DILocation(line: 5716, column: 6, scope: !11676)
!11700 = !DILocation(line: 5718, column: 3, scope: !11697)
!11701 = !DILocation(line: 5720, column: 41, scope: !11676)
!11702 = !DILocation(line: 5720, column: 47, scope: !11676)
!11703 = !DILocation(line: 5720, column: 16, scope: !11676)
!11704 = !DILocation(line: 5720, column: 14, scope: !11676)
!11705 = !DILocation(line: 5721, column: 6, scope: !11706)
!11706 = distinct !DILexicalBlock(scope: !11676, file: !209, line: 5721, column: 6)
!11707 = !DILocation(line: 5721, column: 21, scope: !11706)
!11708 = !DILocation(line: 5721, column: 18, scope: !11706)
!11709 = !DILocation(line: 5721, column: 6, scope: !11676)
!11710 = !DILocation(line: 5722, column: 3, scope: !11706)
!11711 = !DILocation(line: 5723, column: 6, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !11676, file: !209, line: 5723, column: 6)
!11713 = !DILocation(line: 5723, column: 18, scope: !11712)
!11714 = !DILocation(line: 5723, column: 6, scope: !11676)
!11715 = !DILocation(line: 5725, column: 3, scope: !11712)
!11716 = !DILocation(line: 5728, column: 21, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11676, file: !209, line: 5728, column: 6)
!11718 = !DILocation(line: 5728, column: 6, scope: !11717)
!11719 = !DILocation(line: 5728, column: 6, scope: !11676)
!11720 = !DILocation(line: 5730, column: 22, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11717, file: !209, line: 5728, column: 28)
!11722 = !DILocation(line: 5730, column: 27, scope: !11721)
!11723 = !DILocation(line: 5730, column: 33, scope: !11721)
!11724 = !DILocation(line: 5730, column: 3, scope: !11721)
!11725 = !DILocation(line: 5731, column: 24, scope: !11721)
!11726 = !DILocation(line: 5731, column: 29, scope: !11721)
!11727 = !DILocation(line: 5731, column: 3, scope: !11721)
!11728 = !DILocation(line: 5732, column: 2, scope: !11721)
!11729 = !DILocation(line: 5732, column: 29, scope: !11730)
!11730 = distinct !DILexicalBlock(scope: !11717, file: !209, line: 5732, column: 13)
!11731 = !DILocation(line: 5732, column: 13, scope: !11730)
!11732 = !DILocation(line: 5732, column: 13, scope: !11717)
!11733 = !DILocation(line: 5733, column: 7, scope: !11734)
!11734 = distinct !DILexicalBlock(scope: !11735, file: !209, line: 5733, column: 7)
!11735 = distinct !DILexicalBlock(scope: !11730, file: !209, line: 5732, column: 36)
!11736 = !DILocation(line: 5733, column: 11, scope: !11734)
!11737 = !DILocation(line: 5733, column: 7, scope: !11735)
!11738 = !DILocalVariable(name: "ret", scope: !11739, file: !209, line: 5734, type: !429)
!11739 = distinct !DILexicalBlock(scope: !11734, file: !209, line: 5733, column: 37)
!11740 = !DILocation(line: 5734, column: 8, scope: !11739)
!11741 = !DILocation(line: 5734, column: 34, scope: !11739)
!11742 = !DILocation(line: 5734, column: 39, scope: !11739)
!11743 = !DILocation(line: 5734, column: 14, scope: !11739)
!11744 = !DILocation(line: 5736, column: 8, scope: !11745)
!11745 = distinct !DILexicalBlock(scope: !11739, file: !209, line: 5736, column: 8)
!11746 = !DILocation(line: 5736, column: 12, scope: !11745)
!11747 = !DILocation(line: 5736, column: 8, scope: !11739)
!11748 = !DILocation(line: 5737, column: 12, scope: !11745)
!11749 = !DILocation(line: 5737, column: 5, scope: !11745)
!11750 = !DILocation(line: 5738, column: 3, scope: !11739)
!11751 = !DILocation(line: 5738, column: 41, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11734, file: !209, line: 5738, column: 14)
!11753 = !DILocation(line: 5738, column: 14, scope: !11752)
!11754 = !DILocation(line: 5738, column: 14, scope: !11734)
!11755 = !DILocalVariable(name: "brd", scope: !11756, file: !209, line: 5740, type: !429)
!11756 = distinct !DILexicalBlock(scope: !11752, file: !209, line: 5738, column: 47)
!11757 = !DILocation(line: 5740, column: 8, scope: !11756)
!11758 = !DILocation(line: 5740, column: 36, scope: !11756)
!11759 = !DILocation(line: 5740, column: 41, scope: !11756)
!11760 = !DILocation(line: 5740, column: 14, scope: !11756)
!11761 = !DILocation(line: 5742, column: 8, scope: !11762)
!11762 = distinct !DILexicalBlock(scope: !11756, file: !209, line: 5742, column: 8)
!11763 = !DILocation(line: 5742, column: 12, scope: !11762)
!11764 = !DILocation(line: 5742, column: 8, scope: !11756)
!11765 = !DILocation(line: 5743, column: 12, scope: !11762)
!11766 = !DILocation(line: 5743, column: 5, scope: !11762)
!11767 = !DILocation(line: 5747, column: 5, scope: !11756)
!11768 = !DILocation(line: 5747, column: 10, scope: !11756)
!11769 = !DILocation(line: 5747, column: 17, scope: !11756)
!11770 = !DILocation(line: 5747, column: 26, scope: !11756)
!11771 = !DILocation(line: 5746, column: 10, scope: !11756)
!11772 = !DILocation(line: 5746, column: 8, scope: !11756)
!11773 = !DILocation(line: 5748, column: 3, scope: !11756)
!11774 = !DILocation(line: 5750, column: 25, scope: !11735)
!11775 = !DILocation(line: 5750, column: 30, scope: !11735)
!11776 = !DILocation(line: 5750, column: 3, scope: !11735)
!11777 = !DILocation(line: 5751, column: 23, scope: !11735)
!11778 = !DILocation(line: 5751, column: 28, scope: !11735)
!11779 = !DILocation(line: 5751, column: 34, scope: !11735)
!11780 = !DILocation(line: 5751, column: 3, scope: !11735)
!11781 = !DILocation(line: 5752, column: 2, scope: !11735)
!11782 = !DILocation(line: 5752, column: 13, scope: !11783)
!11783 = distinct !DILexicalBlock(scope: !11730, file: !209, line: 5752, column: 13)
!11784 = !DILocation(line: 5752, column: 18, scope: !11783)
!11785 = !DILocation(line: 5752, column: 34, scope: !11783)
!11786 = !DILocation(line: 5752, column: 37, scope: !11783)
!11787 = !DILocation(line: 5752, column: 42, scope: !11783)
!11788 = !DILocation(line: 5752, column: 13, scope: !11730)
!11789 = !DILocation(line: 5757, column: 8, scope: !11790)
!11790 = distinct !DILexicalBlock(scope: !11783, file: !209, line: 5752, column: 60)
!11791 = !DILocation(line: 5758, column: 7, scope: !11792)
!11792 = distinct !DILexicalBlock(scope: !11790, file: !209, line: 5758, column: 7)
!11793 = !DILocation(line: 5758, column: 12, scope: !11792)
!11794 = !DILocation(line: 5758, column: 7, scope: !11790)
!11795 = !DILocation(line: 5760, column: 4, scope: !11792)
!11796 = !DILocation(line: 5761, column: 27, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11790, file: !209, line: 5761, column: 7)
!11798 = !DILocation(line: 5761, column: 32, scope: !11797)
!11799 = !DILocation(line: 5761, column: 38, scope: !11797)
!11800 = !DILocation(line: 5761, column: 7, scope: !11797)
!11801 = !DILocation(line: 5761, column: 7, scope: !11790)
!11802 = !DILocation(line: 5762, column: 4, scope: !11797)
!11803 = !DILocation(line: 5763, column: 2, scope: !11790)
!11804 = !DILocation(line: 5763, column: 28, scope: !11805)
!11805 = distinct !DILexicalBlock(scope: !11783, file: !209, line: 5763, column: 13)
!11806 = !DILocation(line: 5763, column: 13, scope: !11805)
!11807 = !DILocation(line: 5763, column: 13, scope: !11783)
!11808 = !DILocation(line: 5768, column: 22, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11805, file: !209, line: 5763, column: 35)
!11810 = !DILocation(line: 5768, column: 31, scope: !11809)
!11811 = !DILocation(line: 5768, column: 44, scope: !11809)
!11812 = !DILocation(line: 5769, column: 8, scope: !11809)
!11813 = !DILocation(line: 5769, column: 15, scope: !11809)
!11814 = !DILocation(line: 5769, column: 19, scope: !11809)
!11815 = !DILocation(line: 5769, column: 12, scope: !11809)
!11816 = !DILocation(line: 5768, column: 3, scope: !11809)
!11817 = !DILocation(line: 5770, column: 2, scope: !11809)
!11818 = !DILocation(line: 5771, column: 3, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !11805, file: !209, line: 5770, column: 9)
!11820 = !DILocation(line: 5773, column: 2, scope: !11676)
!11821 = !DILocation(line: 5774, column: 1, scope: !11676)
!11822 = distinct !DISubprogram(name: "disconnect_route", scope: !209, file: !209, line: 5776, type: !11456, scopeLine: 5778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!11823 = !DILocalVariable(name: "src", arg: 1, scope: !11822, file: !209, line: 5776, type: !7)
!11824 = !DILocation(line: 5776, column: 42, scope: !11822)
!11825 = !DILocalVariable(name: "dest", arg: 2, scope: !11822, file: !209, line: 5776, type: !7)
!11826 = !DILocation(line: 5776, column: 60, scope: !11822)
!11827 = !DILocalVariable(name: "dev", arg: 3, scope: !11822, file: !209, line: 5777, type: !3350)
!11828 = !DILocation(line: 5777, column: 30, scope: !11822)
!11829 = !DILocalVariable(name: "devpriv", scope: !11822, file: !209, line: 5779, type: !4731)
!11830 = !DILocation(line: 5779, column: 21, scope: !11822)
!11831 = !DILocation(line: 5779, column: 31, scope: !11822)
!11832 = !DILocation(line: 5779, column: 36, scope: !11822)
!11833 = !DILocalVariable(name: "reg", scope: !11822, file: !209, line: 5780, type: !11652)
!11834 = !DILocation(line: 5780, column: 5, scope: !11822)
!11835 = !DILocation(line: 5780, column: 32, scope: !11822)
!11836 = !DILocation(line: 5780, column: 46, scope: !11822)
!11837 = !DILocation(line: 5781, column: 12, scope: !11822)
!11838 = !DILocation(line: 5781, column: 21, scope: !11822)
!11839 = !DILocation(line: 5780, column: 11, scope: !11822)
!11840 = !DILocation(line: 5783, column: 6, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !11822, file: !209, line: 5783, column: 6)
!11842 = !DILocation(line: 5783, column: 10, scope: !11841)
!11843 = !DILocation(line: 5783, column: 6, scope: !11822)
!11844 = !DILocation(line: 5785, column: 3, scope: !11841)
!11845 = !DILocation(line: 5786, column: 31, scope: !11846)
!11846 = distinct !DILexicalBlock(scope: !11822, file: !209, line: 5786, column: 6)
!11847 = !DILocation(line: 5786, column: 37, scope: !11846)
!11848 = !DILocation(line: 5786, column: 6, scope: !11846)
!11849 = !DILocation(line: 5786, column: 45, scope: !11846)
!11850 = !DILocation(line: 5786, column: 42, scope: !11846)
!11851 = !DILocation(line: 5786, column: 6, scope: !11822)
!11852 = !DILocation(line: 5788, column: 3, scope: !11846)
!11853 = !DILocation(line: 5791, column: 21, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11822, file: !209, line: 5791, column: 6)
!11855 = !DILocation(line: 5791, column: 6, scope: !11854)
!11856 = !DILocation(line: 5791, column: 6, scope: !11822)
!11857 = !DILocation(line: 5793, column: 24, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !11854, file: !209, line: 5791, column: 28)
!11859 = !DILocation(line: 5793, column: 29, scope: !11858)
!11860 = !DILocation(line: 5793, column: 3, scope: !11858)
!11861 = !DILocation(line: 5794, column: 22, scope: !11858)
!11862 = !DILocation(line: 5794, column: 27, scope: !11858)
!11863 = !DILocation(line: 5794, column: 3, scope: !11858)
!11864 = !DILocation(line: 5795, column: 2, scope: !11858)
!11865 = !DILocation(line: 5795, column: 29, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11854, file: !209, line: 5795, column: 13)
!11867 = !DILocation(line: 5795, column: 13, scope: !11866)
!11868 = !DILocation(line: 5795, column: 13, scope: !11854)
!11869 = !DILocation(line: 5796, column: 7, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11871, file: !209, line: 5796, column: 7)
!11871 = distinct !DILexicalBlock(scope: !11866, file: !209, line: 5795, column: 36)
!11872 = !DILocation(line: 5796, column: 11, scope: !11870)
!11873 = !DILocation(line: 5796, column: 7, scope: !11871)
!11874 = !DILocalVariable(name: "ret", scope: !11875, file: !209, line: 5797, type: !429)
!11875 = distinct !DILexicalBlock(scope: !11870, file: !209, line: 5796, column: 37)
!11876 = !DILocation(line: 5797, column: 8, scope: !11875)
!11877 = !DILocation(line: 5797, column: 34, scope: !11875)
!11878 = !DILocation(line: 5797, column: 39, scope: !11875)
!11879 = !DILocation(line: 5797, column: 14, scope: !11875)
!11880 = !DILocation(line: 5799, column: 8, scope: !11881)
!11881 = distinct !DILexicalBlock(scope: !11875, file: !209, line: 5799, column: 8)
!11882 = !DILocation(line: 5799, column: 12, scope: !11881)
!11883 = !DILocation(line: 5799, column: 8, scope: !11875)
!11884 = !DILocation(line: 5800, column: 12, scope: !11881)
!11885 = !DILocation(line: 5800, column: 5, scope: !11881)
!11886 = !DILocation(line: 5801, column: 3, scope: !11875)
!11887 = !DILocation(line: 5801, column: 41, scope: !11888)
!11888 = distinct !DILexicalBlock(scope: !11870, file: !209, line: 5801, column: 14)
!11889 = !DILocation(line: 5801, column: 14, scope: !11888)
!11890 = !DILocation(line: 5801, column: 14, scope: !11870)
!11891 = !DILocalVariable(name: "brd", scope: !11892, file: !209, line: 5803, type: !429)
!11892 = distinct !DILexicalBlock(scope: !11888, file: !209, line: 5801, column: 47)
!11893 = !DILocation(line: 5803, column: 8, scope: !11892)
!11894 = !DILocation(line: 5804, column: 25, scope: !11892)
!11895 = !DILocation(line: 5804, column: 30, scope: !11892)
!11896 = !DILocation(line: 5804, column: 5, scope: !11892)
!11897 = !DILocation(line: 5804, column: 37, scope: !11892)
!11898 = !DILocation(line: 5805, column: 6, scope: !11892)
!11899 = !DILocation(line: 5805, column: 15, scope: !11892)
!11900 = !DILocation(line: 5803, column: 14, scope: !11892)
!11901 = !DILocation(line: 5807, column: 8, scope: !11902)
!11902 = distinct !DILexicalBlock(scope: !11892, file: !209, line: 5807, column: 8)
!11903 = !DILocation(line: 5807, column: 12, scope: !11902)
!11904 = !DILocation(line: 5807, column: 8, scope: !11892)
!11905 = !DILocation(line: 5808, column: 12, scope: !11902)
!11906 = !DILocation(line: 5808, column: 5, scope: !11902)
!11907 = !DILocation(line: 5811, column: 26, scope: !11892)
!11908 = !DILocation(line: 5811, column: 31, scope: !11892)
!11909 = !DILocation(line: 5811, column: 36, scope: !11892)
!11910 = !DILocation(line: 5811, column: 4, scope: !11892)
!11911 = !DILocation(line: 5812, column: 3, scope: !11892)
!11912 = !DILocation(line: 5815, column: 30, scope: !11871)
!11913 = !DILocation(line: 5815, column: 35, scope: !11871)
!11914 = !DILocation(line: 5815, column: 9, scope: !11871)
!11915 = !DILocation(line: 5815, column: 7, scope: !11871)
!11916 = !DILocation(line: 5816, column: 25, scope: !11871)
!11917 = !DILocation(line: 5816, column: 30, scope: !11871)
!11918 = !DILocation(line: 5816, column: 3, scope: !11871)
!11919 = !DILocation(line: 5817, column: 23, scope: !11871)
!11920 = !DILocation(line: 5817, column: 28, scope: !11871)
!11921 = !DILocation(line: 5817, column: 34, scope: !11871)
!11922 = !DILocation(line: 5817, column: 3, scope: !11871)
!11923 = !DILocation(line: 5818, column: 2, scope: !11871)
!11924 = !DILocation(line: 5818, column: 13, scope: !11925)
!11925 = distinct !DILexicalBlock(scope: !11866, file: !209, line: 5818, column: 13)
!11926 = !DILocation(line: 5818, column: 18, scope: !11925)
!11927 = !DILocation(line: 5818, column: 34, scope: !11925)
!11928 = !DILocation(line: 5818, column: 37, scope: !11925)
!11929 = !DILocation(line: 5818, column: 42, scope: !11925)
!11930 = !DILocation(line: 5818, column: 13, scope: !11866)
!11931 = !DILocation(line: 5823, column: 8, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11925, file: !209, line: 5818, column: 60)
!11933 = !DILocation(line: 5824, column: 7, scope: !11934)
!11934 = distinct !DILexicalBlock(scope: !11932, file: !209, line: 5824, column: 7)
!11935 = !DILocation(line: 5824, column: 12, scope: !11934)
!11936 = !DILocation(line: 5824, column: 7, scope: !11932)
!11937 = !DILocation(line: 5826, column: 4, scope: !11934)
!11938 = !DILocation(line: 5827, column: 33, scope: !11932)
!11939 = !DILocation(line: 5827, column: 39, scope: !11932)
!11940 = !DILocation(line: 5827, column: 9, scope: !11932)
!11941 = !DILocation(line: 5827, column: 7, scope: !11932)
!11942 = !DILocation(line: 5828, column: 2, scope: !11932)
!11943 = !DILocation(line: 5828, column: 28, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11925, file: !209, line: 5828, column: 13)
!11945 = !DILocation(line: 5828, column: 13, scope: !11944)
!11946 = !DILocation(line: 5828, column: 13, scope: !11925)
!11947 = !DILocation(line: 5829, column: 24, scope: !11948)
!11948 = distinct !DILexicalBlock(scope: !11944, file: !209, line: 5828, column: 35)
!11949 = !DILocation(line: 5829, column: 33, scope: !11948)
!11950 = !DILocation(line: 5829, column: 46, scope: !11948)
!11951 = !DILocation(line: 5829, column: 3, scope: !11948)
!11952 = !DILocation(line: 5830, column: 2, scope: !11948)
!11953 = !DILocation(line: 5831, column: 3, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !11944, file: !209, line: 5830, column: 9)
!11955 = !DILocation(line: 5833, column: 2, scope: !11822)
!11956 = !DILocation(line: 5834, column: 1, scope: !11822)
!11957 = distinct !DISubprogram(name: "get_output_select_source", scope: !209, file: !209, line: 5640, type: !11958, scopeLine: 5641, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!11958 = !DISubroutineType(types: !11959)
!11959 = !{!429, !429, !3350}
!11960 = !DILocalVariable(name: "dest", arg: 1, scope: !11957, file: !209, line: 5640, type: !429)
!11961 = !DILocation(line: 5640, column: 41, scope: !11957)
!11962 = !DILocalVariable(name: "dev", arg: 2, scope: !11957, file: !209, line: 5640, type: !3350)
!11963 = !DILocation(line: 5640, column: 69, scope: !11957)
!11964 = !DILocalVariable(name: "devpriv", scope: !11957, file: !209, line: 5642, type: !4731)
!11965 = !DILocation(line: 5642, column: 21, scope: !11957)
!11966 = !DILocation(line: 5642, column: 31, scope: !11957)
!11967 = !DILocation(line: 5642, column: 36, scope: !11957)
!11968 = !DILocalVariable(name: "reg", scope: !11957, file: !209, line: 5643, type: !429)
!11969 = !DILocation(line: 5643, column: 6, scope: !11957)
!11970 = !DILocation(line: 5645, column: 21, scope: !11971)
!11971 = distinct !DILexicalBlock(scope: !11957, file: !209, line: 5645, column: 6)
!11972 = !DILocation(line: 5645, column: 6, scope: !11971)
!11973 = !DILocation(line: 5645, column: 6, scope: !11957)
!11974 = !DILocation(line: 5646, column: 28, scope: !11975)
!11975 = distinct !DILexicalBlock(scope: !11976, file: !209, line: 5646, column: 7)
!11976 = distinct !DILexicalBlock(scope: !11971, file: !209, line: 5645, column: 28)
!11977 = !DILocation(line: 5646, column: 33, scope: !11975)
!11978 = !DILocation(line: 5646, column: 7, scope: !11975)
!11979 = !DILocation(line: 5646, column: 39, scope: !11975)
!11980 = !DILocation(line: 5646, column: 7, scope: !11976)
!11981 = !DILocation(line: 5647, column: 29, scope: !11975)
!11982 = !DILocation(line: 5647, column: 34, scope: !11975)
!11983 = !DILocation(line: 5647, column: 10, scope: !11975)
!11984 = !DILocation(line: 5647, column: 8, scope: !11975)
!11985 = !DILocation(line: 5647, column: 4, scope: !11975)
!11986 = !DILocation(line: 5648, column: 2, scope: !11976)
!11987 = !DILocation(line: 5648, column: 29, scope: !11988)
!11988 = distinct !DILexicalBlock(scope: !11971, file: !209, line: 5648, column: 13)
!11989 = !DILocation(line: 5648, column: 13, scope: !11988)
!11990 = !DILocation(line: 5648, column: 13, scope: !11971)
!11991 = !DILocation(line: 5649, column: 29, scope: !11992)
!11992 = distinct !DILexicalBlock(scope: !11993, file: !209, line: 5649, column: 7)
!11993 = distinct !DILexicalBlock(scope: !11988, file: !209, line: 5648, column: 36)
!11994 = !DILocation(line: 5649, column: 34, scope: !11992)
!11995 = !DILocation(line: 5649, column: 7, scope: !11992)
!11996 = !DILocation(line: 5649, column: 40, scope: !11992)
!11997 = !DILocation(line: 5649, column: 7, scope: !11993)
!11998 = !DILocation(line: 5650, column: 30, scope: !11999)
!11999 = distinct !DILexicalBlock(scope: !11992, file: !209, line: 5649, column: 58)
!12000 = !DILocation(line: 5650, column: 35, scope: !11999)
!12001 = !DILocation(line: 5650, column: 10, scope: !11999)
!12002 = !DILocation(line: 5650, column: 8, scope: !11999)
!12003 = !DILocation(line: 5652, column: 8, scope: !12004)
!12004 = distinct !DILexicalBlock(scope: !11999, file: !209, line: 5652, column: 8)
!12005 = !DILocation(line: 5652, column: 12, scope: !12004)
!12006 = !DILocation(line: 5652, column: 8, scope: !11999)
!12007 = !DILocation(line: 5653, column: 10, scope: !12008)
!12008 = distinct !DILexicalBlock(scope: !12004, file: !209, line: 5652, column: 38)
!12009 = !DILocation(line: 5654, column: 26, scope: !12008)
!12010 = !DILocation(line: 5654, column: 11, scope: !12008)
!12011 = !DILocation(line: 5654, column: 9, scope: !12008)
!12012 = !DILocation(line: 5655, column: 4, scope: !12008)
!12013 = !DILocation(line: 5655, column: 15, scope: !12014)
!12014 = distinct !DILexicalBlock(scope: !12004, file: !209, line: 5655, column: 15)
!12015 = !DILocation(line: 5655, column: 19, scope: !12014)
!12016 = !DILocation(line: 5655, column: 49, scope: !12014)
!12017 = !DILocation(line: 5656, column: 8, scope: !12014)
!12018 = !DILocation(line: 5656, column: 12, scope: !12014)
!12019 = !DILocation(line: 5655, column: 15, scope: !12004)
!12020 = !DILocalVariable(name: "i", scope: !12021, file: !209, line: 5657, type: !4330)
!12021 = distinct !DILexicalBlock(scope: !12014, file: !209, line: 5656, column: 43)
!12022 = !DILocation(line: 5657, column: 15, scope: !12021)
!12023 = !DILocation(line: 5657, column: 19, scope: !12021)
!12024 = !DILocation(line: 5657, column: 23, scope: !12021)
!12025 = !DILocation(line: 5659, column: 12, scope: !12021)
!12026 = !DILocation(line: 5659, column: 10, scope: !12021)
!12027 = !DILocation(line: 5660, column: 32, scope: !12021)
!12028 = !DILocation(line: 5660, column: 35, scope: !12021)
!12029 = !DILocation(line: 5660, column: 11, scope: !12021)
!12030 = !DILocation(line: 5660, column: 9, scope: !12021)
!12031 = !DILocation(line: 5661, column: 4, scope: !12021)
!12032 = !DILocation(line: 5662, column: 3, scope: !11999)
!12033 = !DILocation(line: 5663, column: 2, scope: !11993)
!12034 = !DILocation(line: 5663, column: 13, scope: !12035)
!12035 = distinct !DILexicalBlock(scope: !11988, file: !209, line: 5663, column: 13)
!12036 = !DILocation(line: 5663, column: 18, scope: !12035)
!12037 = !DILocation(line: 5663, column: 34, scope: !12035)
!12038 = !DILocation(line: 5663, column: 37, scope: !12035)
!12039 = !DILocation(line: 5663, column: 42, scope: !12035)
!12040 = !DILocation(line: 5663, column: 13, scope: !11988)
!12041 = !DILocation(line: 5668, column: 8, scope: !12042)
!12042 = distinct !DILexicalBlock(scope: !12035, file: !209, line: 5663, column: 60)
!12043 = !DILocation(line: 5669, column: 7, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !12042, file: !209, line: 5669, column: 7)
!12045 = !DILocation(line: 5669, column: 12, scope: !12044)
!12046 = !DILocation(line: 5669, column: 7, scope: !12042)
!12047 = !DILocation(line: 5671, column: 4, scope: !12044)
!12048 = !DILocation(line: 5672, column: 29, scope: !12042)
!12049 = !DILocation(line: 5672, column: 35, scope: !12042)
!12050 = !DILocation(line: 5672, column: 9, scope: !12042)
!12051 = !DILocation(line: 5672, column: 7, scope: !12042)
!12052 = !DILocation(line: 5673, column: 2, scope: !12042)
!12053 = !DILocation(line: 5673, column: 28, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !12035, file: !209, line: 5673, column: 13)
!12055 = !DILocation(line: 5673, column: 13, scope: !12054)
!12056 = !DILocation(line: 5673, column: 13, scope: !12035)
!12057 = !DILocation(line: 5674, column: 28, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !12054, file: !209, line: 5673, column: 35)
!12059 = !DILocation(line: 5674, column: 37, scope: !12058)
!12060 = !DILocation(line: 5674, column: 50, scope: !12058)
!12061 = !DILocation(line: 5674, column: 9, scope: !12058)
!12062 = !DILocation(line: 5674, column: 7, scope: !12058)
!12063 = !DILocation(line: 5675, column: 2, scope: !12058)
!12064 = !DILocation(line: 5680, column: 6, scope: !12065)
!12065 = distinct !DILexicalBlock(scope: !11957, file: !209, line: 5680, column: 6)
!12066 = !DILocation(line: 5680, column: 10, scope: !12065)
!12067 = !DILocation(line: 5680, column: 6, scope: !11957)
!12068 = !DILocation(line: 5681, column: 31, scope: !12065)
!12069 = !DILocation(line: 5681, column: 45, scope: !12065)
!12070 = !DILocation(line: 5682, column: 11, scope: !12065)
!12071 = !DILocation(line: 5682, column: 20, scope: !12065)
!12072 = !DILocation(line: 5681, column: 10, scope: !12065)
!12073 = !DILocation(line: 5681, column: 3, scope: !12065)
!12074 = !DILocation(line: 5683, column: 2, scope: !11957)
!12075 = !DILocation(line: 5684, column: 1, scope: !11957)
!12076 = distinct !DISubprogram(name: "channel_is_pfi", scope: !4827, file: !4827, line: 176, type: !12077, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12077 = !DISubroutineType(types: !12078)
!12078 = !{!918, !429}
!12079 = !DILocalVariable(name: "channel", arg: 1, scope: !12076, file: !4827, line: 176, type: !429)
!12080 = !DILocation(line: 176, column: 39, scope: !12076)
!12081 = !DILocation(line: 178, column: 22, scope: !12076)
!12082 = !DILocation(line: 178, column: 19, scope: !12076)
!12083 = !DILocation(line: 178, column: 30, scope: !12076)
!12084 = !DILocation(line: 178, column: 33, scope: !12076)
!12085 = !DILocation(line: 178, column: 41, scope: !12076)
!12086 = !DILocation(line: 0, scope: !12076)
!12087 = !DILocation(line: 178, column: 2, scope: !12076)
!12088 = distinct !DISubprogram(name: "ni_get_pfi_direction", scope: !209, file: !209, line: 4677, type: !12089, scopeLine: 4678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12089 = !DISubroutineType(types: !12090)
!12090 = !{!429, !3350, !429}
!12091 = !DILocalVariable(name: "dev", arg: 1, scope: !12088, file: !209, line: 4677, type: !3350)
!12092 = !DILocation(line: 4677, column: 55, scope: !12088)
!12093 = !DILocalVariable(name: "chan", arg: 2, scope: !12088, file: !209, line: 4677, type: !429)
!12094 = !DILocation(line: 4677, column: 64, scope: !12088)
!12095 = !DILocalVariable(name: "devpriv", scope: !12088, file: !209, line: 4679, type: !4731)
!12096 = !DILocation(line: 4679, column: 21, scope: !12088)
!12097 = !DILocation(line: 4679, column: 31, scope: !12088)
!12098 = !DILocation(line: 4679, column: 36, scope: !12088)
!12099 = !DILocation(line: 4681, column: 6, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12088, file: !209, line: 4681, column: 6)
!12101 = !DILocation(line: 4681, column: 11, scope: !12100)
!12102 = !DILocation(line: 4681, column: 6, scope: !12088)
!12103 = !DILocation(line: 4683, column: 8, scope: !12104)
!12104 = distinct !DILexicalBlock(scope: !12100, file: !209, line: 4681, column: 25)
!12105 = !DILocation(line: 4684, column: 2, scope: !12104)
!12106 = !DILocation(line: 4685, column: 9, scope: !12088)
!12107 = !DILocation(line: 4685, column: 18, scope: !12088)
!12108 = !DILocation(line: 4685, column: 49, scope: !12088)
!12109 = !DILocation(line: 4685, column: 46, scope: !12088)
!12110 = !DILocation(line: 4685, column: 41, scope: !12088)
!12111 = !DILocation(line: 4685, column: 2, scope: !12088)
!12112 = distinct !DISubprogram(name: "ni_get_pfi_routing", scope: !209, file: !209, line: 4615, type: !7343, scopeLine: 4617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12113 = !DILocalVariable(name: "dev", arg: 1, scope: !12112, file: !209, line: 4615, type: !3350)
!12114 = !DILocation(line: 4615, column: 62, scope: !12112)
!12115 = !DILocalVariable(name: "chan", arg: 2, scope: !12112, file: !209, line: 4616, type: !7)
!12116 = !DILocation(line: 4616, column: 25, scope: !12112)
!12117 = !DILocalVariable(name: "devpriv", scope: !12112, file: !209, line: 4618, type: !4731)
!12118 = !DILocation(line: 4618, column: 21, scope: !12112)
!12119 = !DILocation(line: 4618, column: 31, scope: !12112)
!12120 = !DILocation(line: 4618, column: 36, scope: !12112)
!12121 = !DILocation(line: 4620, column: 6, scope: !12122)
!12122 = distinct !DILexicalBlock(scope: !12112, file: !209, line: 4620, column: 6)
!12123 = !DILocation(line: 4620, column: 11, scope: !12122)
!12124 = !DILocation(line: 4620, column: 6, scope: !12112)
!12125 = !DILocation(line: 4622, column: 8, scope: !12126)
!12126 = distinct !DILexicalBlock(scope: !12122, file: !209, line: 4620, column: 25)
!12127 = !DILocation(line: 4623, column: 2, scope: !12126)
!12128 = !DILocation(line: 4624, column: 10, scope: !12112)
!12129 = !DILocation(line: 4624, column: 19, scope: !12112)
!12130 = !DILocation(line: 4624, column: 9, scope: !12112)
!12131 = !DILocation(line: 4625, column: 34, scope: !12112)
!12132 = !DILocation(line: 4625, column: 39, scope: !12112)
!12133 = !DILocation(line: 4625, column: 6, scope: !12112)
!12134 = !DILocation(line: 4626, column: 29, scope: !12112)
!12135 = !DILocation(line: 4626, column: 34, scope: !12112)
!12136 = !DILocation(line: 4626, column: 6, scope: !12112)
!12137 = !DILocation(line: 4624, column: 2, scope: !12112)
!12138 = distinct !DISubprogram(name: "channel_is_rtsi", scope: !4827, file: !4827, line: 181, type: !12077, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12139 = !DILocalVariable(name: "channel", arg: 1, scope: !12138, file: !4827, line: 181, type: !429)
!12140 = !DILocation(line: 181, column: 40, scope: !12138)
!12141 = !DILocation(line: 183, column: 28, scope: !12138)
!12142 = !DILocation(line: 183, column: 25, scope: !12138)
!12143 = !DILocation(line: 183, column: 36, scope: !12138)
!12144 = !DILocation(line: 183, column: 39, scope: !12138)
!12145 = !DILocation(line: 183, column: 47, scope: !12138)
!12146 = !DILocation(line: 0, scope: !12138)
!12147 = !DILocation(line: 183, column: 2, scope: !12138)
!12148 = distinct !DISubprogram(name: "ni_get_rtsi_direction", scope: !209, file: !209, line: 5179, type: !12089, scopeLine: 5180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12149 = !DILocalVariable(name: "dev", arg: 1, scope: !12148, file: !209, line: 5179, type: !3350)
!12150 = !DILocation(line: 5179, column: 56, scope: !12148)
!12151 = !DILocalVariable(name: "chan", arg: 2, scope: !12148, file: !209, line: 5179, type: !429)
!12152 = !DILocation(line: 5179, column: 65, scope: !12148)
!12153 = !DILocalVariable(name: "devpriv", scope: !12148, file: !209, line: 5181, type: !4731)
!12154 = !DILocation(line: 5181, column: 21, scope: !12148)
!12155 = !DILocation(line: 5181, column: 31, scope: !12148)
!12156 = !DILocation(line: 5181, column: 36, scope: !12148)
!12157 = !DILocalVariable(name: "max_chan", scope: !12148, file: !209, line: 5182, type: !7)
!12158 = !DILocation(line: 5182, column: 15, scope: !12148)
!12159 = !DILocation(line: 5182, column: 26, scope: !12148)
!12160 = !DILocation(line: 5184, column: 6, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !12148, file: !209, line: 5184, column: 6)
!12162 = !DILocation(line: 5184, column: 11, scope: !12161)
!12163 = !DILocation(line: 5184, column: 6, scope: !12148)
!12164 = !DILocation(line: 5186, column: 8, scope: !12161)
!12165 = !DILocation(line: 5186, column: 3, scope: !12161)
!12166 = !DILocation(line: 5188, column: 6, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12148, file: !209, line: 5188, column: 6)
!12168 = !DILocation(line: 5188, column: 13, scope: !12167)
!12169 = !DILocation(line: 5188, column: 11, scope: !12167)
!12170 = !DILocation(line: 5188, column: 6, scope: !12148)
!12171 = !DILocation(line: 5189, column: 11, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12167, file: !209, line: 5188, column: 23)
!12173 = !DILocation(line: 5189, column: 20, scope: !12172)
!12174 = !DILocation(line: 5190, column: 4, scope: !12172)
!12175 = !DILocation(line: 5189, column: 44, scope: !12172)
!12176 = !DILocation(line: 5189, column: 10, scope: !12172)
!12177 = !DILocation(line: 5189, column: 3, scope: !12172)
!12178 = !DILocation(line: 5192, column: 13, scope: !12179)
!12179 = distinct !DILexicalBlock(scope: !12167, file: !209, line: 5192, column: 13)
!12180 = !DILocation(line: 5192, column: 18, scope: !12179)
!12181 = !DILocation(line: 5192, column: 13, scope: !12167)
!12182 = !DILocation(line: 5193, column: 11, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12179, file: !209, line: 5192, column: 51)
!12184 = !DILocation(line: 5193, column: 20, scope: !12183)
!12185 = !DILocation(line: 5193, column: 44, scope: !12183)
!12186 = !DILocation(line: 5193, column: 10, scope: !12183)
!12187 = !DILocation(line: 5193, column: 3, scope: !12183)
!12188 = !DILocation(line: 5197, column: 2, scope: !12148)
!12189 = !DILocation(line: 5198, column: 1, scope: !12148)
!12190 = distinct !DISubprogram(name: "ni_get_rtsi_routing", scope: !209, file: !209, line: 5125, type: !7343, scopeLine: 5127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12191 = !DILocalVariable(name: "dev", arg: 1, scope: !12190, file: !209, line: 5125, type: !3350)
!12192 = !DILocation(line: 5125, column: 63, scope: !12190)
!12193 = !DILocalVariable(name: "chan", arg: 2, scope: !12190, file: !209, line: 5126, type: !7)
!12194 = !DILocation(line: 5126, column: 19, scope: !12190)
!12195 = !DILocalVariable(name: "devpriv", scope: !12190, file: !209, line: 5128, type: !4731)
!12196 = !DILocation(line: 5128, column: 21, scope: !12190)
!12197 = !DILocation(line: 5128, column: 31, scope: !12190)
!12198 = !DILocation(line: 5128, column: 36, scope: !12190)
!12199 = !DILocation(line: 5130, column: 6, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12190, file: !209, line: 5130, column: 6)
!12201 = !DILocation(line: 5130, column: 11, scope: !12200)
!12202 = !DILocation(line: 5130, column: 6, scope: !12190)
!12203 = !DILocation(line: 5132, column: 8, scope: !12200)
!12204 = !DILocation(line: 5132, column: 3, scope: !12200)
!12205 = !DILocation(line: 5134, column: 6, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12190, file: !209, line: 5134, column: 6)
!12207 = !DILocation(line: 5134, column: 11, scope: !12206)
!12208 = !DILocation(line: 5134, column: 6, scope: !12190)
!12209 = !DILocation(line: 5135, column: 10, scope: !12210)
!12210 = distinct !DILexicalBlock(scope: !12206, file: !209, line: 5134, column: 16)
!12211 = !DILocation(line: 5135, column: 3, scope: !12210)
!12212 = !DILocation(line: 5137, column: 13, scope: !12213)
!12213 = distinct !DILexicalBlock(scope: !12206, file: !209, line: 5137, column: 13)
!12214 = !DILocation(line: 5137, column: 20, scope: !12213)
!12215 = !DILocation(line: 5137, column: 18, scope: !12213)
!12216 = !DILocation(line: 5137, column: 13, scope: !12206)
!12217 = !DILocation(line: 5138, column: 10, scope: !12218)
!12218 = distinct !DILexicalBlock(scope: !12213, file: !209, line: 5137, column: 68)
!12219 = !DILocation(line: 5138, column: 3, scope: !12218)
!12220 = !DILocation(line: 5140, column: 13, scope: !12221)
!12221 = distinct !DILexicalBlock(scope: !12213, file: !209, line: 5140, column: 13)
!12222 = !DILocation(line: 5140, column: 18, scope: !12221)
!12223 = !DILocation(line: 5140, column: 13, scope: !12213)
!12224 = !DILocation(line: 5141, column: 3, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12221, file: !209, line: 5140, column: 51)
!12226 = !DILocation(line: 5144, column: 2, scope: !12190)
!12227 = !DILocation(line: 5145, column: 2, scope: !12190)
!12228 = !DILocation(line: 5146, column: 1, scope: !12190)
!12229 = distinct !DISubprogram(name: "get_rgout0_reg", scope: !209, file: !209, line: 5297, type: !4261, scopeLine: 5298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12230 = !DILocalVariable(name: "dev", arg: 1, scope: !12229, file: !209, line: 5297, type: !3350)
!12231 = !DILocation(line: 5297, column: 49, scope: !12229)
!12232 = !DILocalVariable(name: "devpriv", scope: !12229, file: !209, line: 5299, type: !4731)
!12233 = !DILocation(line: 5299, column: 21, scope: !12229)
!12234 = !DILocation(line: 5299, column: 31, scope: !12229)
!12235 = !DILocation(line: 5299, column: 36, scope: !12229)
!12236 = !DILocalVariable(name: "reg", scope: !12229, file: !209, line: 5300, type: !429)
!12237 = !DILocation(line: 5300, column: 6, scope: !12229)
!12238 = !DILocation(line: 5302, column: 6, scope: !12239)
!12239 = distinct !DILexicalBlock(scope: !12229, file: !209, line: 5302, column: 6)
!12240 = !DILocation(line: 5302, column: 15, scope: !12239)
!12241 = !DILocation(line: 5302, column: 6, scope: !12229)
!12242 = !DILocation(line: 5303, column: 10, scope: !12239)
!12243 = !DILocation(line: 5303, column: 19, scope: !12239)
!12244 = !DILocation(line: 5303, column: 43, scope: !12239)
!12245 = !DILocation(line: 5305, column: 7, scope: !12239)
!12246 = !DILocation(line: 5303, column: 9, scope: !12239)
!12247 = !DILocation(line: 5303, column: 7, scope: !12239)
!12248 = !DILocation(line: 5303, column: 3, scope: !12239)
!12249 = !DILocation(line: 5307, column: 10, scope: !12239)
!12250 = !DILocation(line: 5307, column: 19, scope: !12239)
!12251 = !DILocation(line: 5307, column: 42, scope: !12239)
!12252 = !DILocation(line: 5309, column: 7, scope: !12239)
!12253 = !DILocation(line: 5307, column: 9, scope: !12239)
!12254 = !DILocation(line: 5307, column: 7, scope: !12239)
!12255 = !DILocation(line: 5310, column: 9, scope: !12229)
!12256 = !DILocation(line: 5310, column: 2, scope: !12229)
!12257 = distinct !DISubprogram(name: "get_ith_rtsi_brd_reg", scope: !209, file: !209, line: 5398, type: !11958, scopeLine: 5399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12258 = !DILocalVariable(name: "i", arg: 1, scope: !12257, file: !209, line: 5398, type: !429)
!12259 = !DILocation(line: 5398, column: 37, scope: !12257)
!12260 = !DILocalVariable(name: "dev", arg: 2, scope: !12257, file: !209, line: 5398, type: !3350)
!12261 = !DILocation(line: 5398, column: 62, scope: !12257)
!12262 = !DILocalVariable(name: "devpriv", scope: !12257, file: !209, line: 5400, type: !4731)
!12263 = !DILocation(line: 5400, column: 21, scope: !12257)
!12264 = !DILocation(line: 5400, column: 31, scope: !12257)
!12265 = !DILocation(line: 5400, column: 36, scope: !12257)
!12266 = !DILocalVariable(name: "reg_i_sz", scope: !12257, file: !209, line: 5401, type: !429)
!12267 = !DILocation(line: 5401, column: 6, scope: !12257)
!12268 = !DILocalVariable(name: "reg_i_mask", scope: !12257, file: !209, line: 5402, type: !429)
!12269 = !DILocation(line: 5402, column: 6, scope: !12257)
!12270 = !DILocalVariable(name: "reg_i_shift", scope: !12257, file: !209, line: 5403, type: !429)
!12271 = !DILocation(line: 5403, column: 6, scope: !12257)
!12272 = !DILocation(line: 5405, column: 6, scope: !12273)
!12273 = distinct !DILexicalBlock(scope: !12257, file: !209, line: 5405, column: 6)
!12274 = !DILocation(line: 5405, column: 15, scope: !12273)
!12275 = !DILocation(line: 5405, column: 6, scope: !12257)
!12276 = !DILocation(line: 5406, column: 12, scope: !12273)
!12277 = !DILocation(line: 5406, column: 3, scope: !12273)
!12278 = !DILocation(line: 5407, column: 25, scope: !12257)
!12279 = !DILocation(line: 5407, column: 22, scope: !12257)
!12280 = !DILocation(line: 5407, column: 15, scope: !12257)
!12281 = !DILocation(line: 5407, column: 13, scope: !12257)
!12282 = !DILocation(line: 5408, column: 16, scope: !12257)
!12283 = !DILocation(line: 5408, column: 20, scope: !12257)
!12284 = !DILocation(line: 5408, column: 18, scope: !12257)
!12285 = !DILocation(line: 5408, column: 14, scope: !12257)
!12286 = !DILocation(line: 5410, column: 10, scope: !12257)
!12287 = !DILocation(line: 5410, column: 19, scope: !12257)
!12288 = !DILocation(line: 5410, column: 42, scope: !12257)
!12289 = !DILocation(line: 5410, column: 39, scope: !12257)
!12290 = !DILocation(line: 5410, column: 57, scope: !12257)
!12291 = !DILocation(line: 5410, column: 55, scope: !12257)
!12292 = !DILocation(line: 5410, column: 2, scope: !12257)
!12293 = distinct !DISubprogram(name: "ni_get_gout_routing", scope: !209, file: !209, line: 5562, type: !12294, scopeLine: 5564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12294 = !DISubroutineType(types: !12295)
!12295 = !{!429, !7, !3350}
!12296 = !DILocalVariable(name: "dest", arg: 1, scope: !12293, file: !209, line: 5562, type: !7)
!12297 = !DILocation(line: 5562, column: 52, scope: !12293)
!12298 = !DILocalVariable(name: "dev", arg: 2, scope: !12293, file: !209, line: 5563, type: !3350)
!12299 = !DILocation(line: 5563, column: 33, scope: !12293)
!12300 = !DILocalVariable(name: "devpriv", scope: !12293, file: !209, line: 5565, type: !4731)
!12301 = !DILocation(line: 5565, column: 21, scope: !12293)
!12302 = !DILocation(line: 5565, column: 31, scope: !12293)
!12303 = !DILocation(line: 5565, column: 36, scope: !12293)
!12304 = !DILocalVariable(name: "reg", scope: !12293, file: !209, line: 5566, type: !7)
!12305 = !DILocation(line: 5566, column: 15, scope: !12293)
!12306 = !DILocation(line: 5566, column: 21, scope: !12293)
!12307 = !DILocation(line: 5566, column: 30, scope: !12293)
!12308 = !DILocation(line: 5568, column: 10, scope: !12293)
!12309 = !DILocation(line: 5568, column: 2, scope: !12293)
!12310 = !DILocation(line: 5570, column: 7, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12312, file: !209, line: 5570, column: 7)
!12312 = distinct !DILexicalBlock(scope: !12293, file: !209, line: 5568, column: 16)
!12313 = !DILocation(line: 5570, column: 11, scope: !12311)
!12314 = !DILocation(line: 5570, column: 7, scope: !12312)
!12315 = !DILocation(line: 5571, column: 11, scope: !12311)
!12316 = !DILocation(line: 5571, column: 4, scope: !12311)
!12317 = !DILocation(line: 5572, column: 3, scope: !12312)
!12318 = !DILocation(line: 5574, column: 7, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12312, file: !209, line: 5574, column: 7)
!12320 = !DILocation(line: 5574, column: 11, scope: !12319)
!12321 = !DILocation(line: 5574, column: 7, scope: !12312)
!12322 = !DILocation(line: 5575, column: 11, scope: !12319)
!12323 = !DILocation(line: 5575, column: 4, scope: !12319)
!12324 = !DILocation(line: 5576, column: 3, scope: !12312)
!12325 = !DILocation(line: 5579, column: 2, scope: !12293)
!12326 = !DILocation(line: 5580, column: 1, scope: !12293)
!12327 = distinct !DISubprogram(name: "channel_is_ctr", scope: !4827, file: !4827, line: 186, type: !12077, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12328 = !DILocalVariable(name: "channel", arg: 1, scope: !12327, file: !4827, line: 186, type: !429)
!12329 = !DILocation(line: 186, column: 39, scope: !12327)
!12330 = !DILocation(line: 188, column: 9, scope: !12327)
!12331 = !DILocation(line: 188, column: 17, scope: !12327)
!12332 = !DILocation(line: 188, column: 42, scope: !12327)
!12333 = !DILocation(line: 189, column: 9, scope: !12327)
!12334 = !DILocation(line: 189, column: 17, scope: !12327)
!12335 = !DILocation(line: 0, scope: !12327)
!12336 = !DILocation(line: 188, column: 2, scope: !12327)
!12337 = distinct !DISubprogram(name: "ni_m_series_get_pfi_routing", scope: !209, file: !209, line: 4587, type: !7343, scopeLine: 4589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12338 = !DILocalVariable(name: "dev", arg: 1, scope: !12337, file: !209, line: 4587, type: !3350)
!12339 = !DILocation(line: 4587, column: 71, scope: !12337)
!12340 = !DILocalVariable(name: "chan", arg: 2, scope: !12337, file: !209, line: 4588, type: !7)
!12341 = !DILocation(line: 4588, column: 20, scope: !12337)
!12342 = !DILocalVariable(name: "devpriv", scope: !12337, file: !209, line: 4590, type: !4731)
!12343 = !DILocation(line: 4590, column: 21, scope: !12337)
!12344 = !DILocation(line: 4590, column: 31, scope: !12337)
!12345 = !DILocation(line: 4590, column: 36, scope: !12337)
!12346 = !DILocalVariable(name: "array_offset", scope: !12337, file: !209, line: 4591, type: !2125)
!12347 = !DILocation(line: 4591, column: 21, scope: !12337)
!12348 = !DILocation(line: 4591, column: 36, scope: !12337)
!12349 = !DILocation(line: 4591, column: 41, scope: !12337)
!12350 = !DILocation(line: 4593, column: 9, scope: !12337)
!12351 = !DILocation(line: 4593, column: 2, scope: !12337)
!12352 = distinct !DISubprogram(name: "ni_old_get_pfi_routing", scope: !209, file: !209, line: 4546, type: !7343, scopeLine: 4548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12353 = !DILocalVariable(name: "dev", arg: 1, scope: !12352, file: !209, line: 4546, type: !3350)
!12354 = !DILocation(line: 4546, column: 66, scope: !12352)
!12355 = !DILocalVariable(name: "chan", arg: 2, scope: !12352, file: !209, line: 4547, type: !7)
!12356 = !DILocation(line: 4547, column: 22, scope: !12352)
!12357 = !DILocation(line: 4550, column: 10, scope: !12352)
!12358 = !DILocation(line: 4550, column: 2, scope: !12352)
!12359 = !DILocation(line: 4552, column: 3, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12352, file: !209, line: 4550, column: 16)
!12361 = !DILocation(line: 4554, column: 3, scope: !12360)
!12362 = !DILocation(line: 4556, column: 3, scope: !12360)
!12363 = !DILocation(line: 4558, column: 3, scope: !12360)
!12364 = !DILocation(line: 4560, column: 3, scope: !12360)
!12365 = !DILocation(line: 4562, column: 3, scope: !12360)
!12366 = !DILocation(line: 4564, column: 3, scope: !12360)
!12367 = !DILocation(line: 4566, column: 3, scope: !12360)
!12368 = !DILocation(line: 4568, column: 3, scope: !12360)
!12369 = !DILocation(line: 4570, column: 3, scope: !12360)
!12370 = !DILocation(line: 4572, column: 3, scope: !12360)
!12371 = !DILocation(line: 4573, column: 3, scope: !12360)
!12372 = !DILocation(line: 4575, column: 2, scope: !12352)
!12373 = !DILocation(line: 4576, column: 1, scope: !12352)
!12374 = distinct !DISubprogram(name: "ni_set_pfi_routing", scope: !209, file: !209, line: 4630, type: !4411, scopeLine: 4632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12375 = !DILocalVariable(name: "dev", arg: 1, scope: !12374, file: !209, line: 4630, type: !3350)
!12376 = !DILocation(line: 4630, column: 53, scope: !12374)
!12377 = !DILocalVariable(name: "chan", arg: 2, scope: !12374, file: !209, line: 4631, type: !7)
!12378 = !DILocation(line: 4631, column: 23, scope: !12374)
!12379 = !DILocalVariable(name: "source", arg: 3, scope: !12374, file: !209, line: 4631, type: !7)
!12380 = !DILocation(line: 4631, column: 42, scope: !12374)
!12381 = !DILocalVariable(name: "devpriv", scope: !12374, file: !209, line: 4633, type: !4731)
!12382 = !DILocation(line: 4633, column: 21, scope: !12374)
!12383 = !DILocation(line: 4633, column: 31, scope: !12374)
!12384 = !DILocation(line: 4633, column: 36, scope: !12374)
!12385 = !DILocation(line: 4635, column: 6, scope: !12386)
!12386 = distinct !DILexicalBlock(scope: !12374, file: !209, line: 4635, column: 6)
!12387 = !DILocation(line: 4635, column: 11, scope: !12386)
!12388 = !DILocation(line: 4635, column: 6, scope: !12374)
!12389 = !DILocation(line: 4637, column: 8, scope: !12390)
!12390 = distinct !DILexicalBlock(scope: !12386, file: !209, line: 4635, column: 25)
!12391 = !DILocation(line: 4638, column: 2, scope: !12390)
!12392 = !DILocation(line: 4639, column: 10, scope: !12374)
!12393 = !DILocation(line: 4639, column: 19, scope: !12374)
!12394 = !DILocation(line: 4639, column: 9, scope: !12374)
!12395 = !DILocation(line: 4640, column: 34, scope: !12374)
!12396 = !DILocation(line: 4640, column: 39, scope: !12374)
!12397 = !DILocation(line: 4640, column: 45, scope: !12374)
!12398 = !DILocation(line: 4640, column: 6, scope: !12374)
!12399 = !DILocation(line: 4641, column: 29, scope: !12374)
!12400 = !DILocation(line: 4641, column: 34, scope: !12374)
!12401 = !DILocation(line: 4641, column: 40, scope: !12374)
!12402 = !DILocation(line: 4641, column: 6, scope: !12374)
!12403 = !DILocation(line: 4639, column: 2, scope: !12374)
!12404 = distinct !DISubprogram(name: "ni_set_pfi_direction", scope: !209, file: !209, line: 4666, type: !12405, scopeLine: 4668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12405 = !DISubroutineType(types: !12406)
!12406 = !{null, !3350, !429, !7}
!12407 = !DILocalVariable(name: "dev", arg: 1, scope: !12404, file: !209, line: 4666, type: !3350)
!12408 = !DILocation(line: 4666, column: 56, scope: !12404)
!12409 = !DILocalVariable(name: "chan", arg: 2, scope: !12404, file: !209, line: 4666, type: !429)
!12410 = !DILocation(line: 4666, column: 65, scope: !12404)
!12411 = !DILocalVariable(name: "direction", arg: 3, scope: !12404, file: !209, line: 4667, type: !7)
!12412 = !DILocation(line: 4667, column: 19, scope: !12404)
!12413 = !DILocation(line: 4669, column: 6, scope: !12414)
!12414 = distinct !DILexicalBlock(scope: !12404, file: !209, line: 4669, column: 6)
!12415 = !DILocation(line: 4669, column: 11, scope: !12414)
!12416 = !DILocation(line: 4669, column: 6, scope: !12404)
!12417 = !DILocation(line: 4671, column: 8, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12414, file: !209, line: 4669, column: 25)
!12419 = !DILocation(line: 4672, column: 2, scope: !12418)
!12420 = !DILocation(line: 4673, column: 15, scope: !12404)
!12421 = !DILocation(line: 4673, column: 25, scope: !12404)
!12422 = !DILocation(line: 4673, column: 14, scope: !12404)
!12423 = !DILocation(line: 4673, column: 12, scope: !12404)
!12424 = !DILocation(line: 4674, column: 14, scope: !12404)
!12425 = !DILocation(line: 4674, column: 48, scope: !12404)
!12426 = !DILocation(line: 4674, column: 45, scope: !12404)
!12427 = !DILocation(line: 4674, column: 54, scope: !12404)
!12428 = !DILocation(line: 4674, column: 2, scope: !12404)
!12429 = !DILocation(line: 4675, column: 1, scope: !12404)
!12430 = distinct !DISubprogram(name: "incr_rgout0_src_use", scope: !209, file: !209, line: 5331, type: !11958, scopeLine: 5332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12431 = !DILocalVariable(name: "src", arg: 1, scope: !12430, file: !209, line: 5331, type: !429)
!12432 = !DILocation(line: 5331, column: 36, scope: !12430)
!12433 = !DILocalVariable(name: "dev", arg: 2, scope: !12430, file: !209, line: 5331, type: !3350)
!12434 = !DILocation(line: 5331, column: 63, scope: !12430)
!12435 = !DILocalVariable(name: "devpriv", scope: !12430, file: !209, line: 5333, type: !4731)
!12436 = !DILocation(line: 5333, column: 21, scope: !12430)
!12437 = !DILocation(line: 5333, column: 31, scope: !12430)
!12438 = !DILocation(line: 5333, column: 36, scope: !12430)
!12439 = !DILocalVariable(name: "reg", scope: !12430, file: !209, line: 5334, type: !11652)
!12440 = !DILocation(line: 5334, column: 5, scope: !12430)
!12441 = !DILocation(line: 5334, column: 36, scope: !12430)
!12442 = !DILocation(line: 5335, column: 9, scope: !12430)
!12443 = !DILocation(line: 5335, column: 18, scope: !12430)
!12444 = !DILocation(line: 5334, column: 11, scope: !12430)
!12445 = !DILocation(line: 5337, column: 6, scope: !12446)
!12446 = distinct !DILexicalBlock(scope: !12430, file: !209, line: 5337, column: 6)
!12447 = !DILocation(line: 5337, column: 10, scope: !12446)
!12448 = !DILocation(line: 5337, column: 6, scope: !12430)
!12449 = !DILocation(line: 5338, column: 3, scope: !12446)
!12450 = !DILocation(line: 5340, column: 6, scope: !12451)
!12451 = distinct !DILexicalBlock(scope: !12430, file: !209, line: 5340, column: 6)
!12452 = !DILocation(line: 5340, column: 15, scope: !12451)
!12453 = !DILocation(line: 5340, column: 28, scope: !12451)
!12454 = !DILocation(line: 5340, column: 32, scope: !12451)
!12455 = !DILocation(line: 5340, column: 50, scope: !12451)
!12456 = !DILocation(line: 5340, column: 35, scope: !12451)
!12457 = !DILocation(line: 5340, column: 58, scope: !12451)
!12458 = !DILocation(line: 5340, column: 55, scope: !12451)
!12459 = !DILocation(line: 5340, column: 6, scope: !12430)
!12460 = !DILocation(line: 5341, column: 3, scope: !12451)
!12461 = !DILocation(line: 5343, column: 4, scope: !12430)
!12462 = !DILocation(line: 5343, column: 13, scope: !12430)
!12463 = !DILocation(line: 5343, column: 2, scope: !12430)
!12464 = !DILocation(line: 5344, column: 17, scope: !12430)
!12465 = !DILocation(line: 5344, column: 22, scope: !12430)
!12466 = !DILocation(line: 5344, column: 2, scope: !12430)
!12467 = !DILocation(line: 5345, column: 2, scope: !12430)
!12468 = !DILocation(line: 5346, column: 1, scope: !12430)
!12469 = distinct !DISubprogram(name: "ni_rtsi_route_requires_mux", scope: !4827, file: !4827, line: 136, type: !12470, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12470 = !DISubroutineType(types: !12471)
!12471 = !{!918, !11652}
!12472 = !DILocalVariable(name: "value", arg: 1, scope: !12469, file: !4827, line: 136, type: !11652)
!12473 = !DILocation(line: 136, column: 50, scope: !12469)
!12474 = !DILocation(line: 138, column: 9, scope: !12469)
!12475 = !DILocation(line: 138, column: 15, scope: !12469)
!12476 = !DILocation(line: 138, column: 2, scope: !12469)
!12477 = distinct !DISubprogram(name: "incr_rtsi_brd_src_use", scope: !209, file: !209, line: 5442, type: !11958, scopeLine: 5443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12478 = !DILocalVariable(name: "src", arg: 1, scope: !12477, file: !209, line: 5442, type: !429)
!12479 = !DILocation(line: 5442, column: 38, scope: !12477)
!12480 = !DILocalVariable(name: "dev", arg: 2, scope: !12477, file: !209, line: 5442, type: !3350)
!12481 = !DILocation(line: 5442, column: 65, scope: !12477)
!12482 = !DILocalVariable(name: "devpriv", scope: !12477, file: !209, line: 5444, type: !4731)
!12483 = !DILocation(line: 5444, column: 21, scope: !12477)
!12484 = !DILocation(line: 5444, column: 31, scope: !12477)
!12485 = !DILocation(line: 5444, column: 36, scope: !12477)
!12486 = !DILocalVariable(name: "first_available", scope: !12477, file: !209, line: 5445, type: !429)
!12487 = !DILocation(line: 5445, column: 6, scope: !12477)
!12488 = !DILocalVariable(name: "err", scope: !12477, file: !209, line: 5446, type: !429)
!12489 = !DILocation(line: 5446, column: 6, scope: !12477)
!12490 = !DILocalVariable(name: "reg", scope: !12477, file: !209, line: 5447, type: !11652)
!12491 = !DILocation(line: 5447, column: 5, scope: !12477)
!12492 = !DILocalVariable(name: "i", scope: !12477, file: !209, line: 5448, type: !429)
!12493 = !DILocation(line: 5448, column: 6, scope: !12477)
!12494 = !DILocation(line: 5451, column: 9, scope: !12495)
!12495 = distinct !DILexicalBlock(scope: !12477, file: !209, line: 5451, column: 2)
!12496 = !DILocation(line: 5451, column: 7, scope: !12495)
!12497 = !DILocation(line: 5451, column: 14, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12495, file: !209, line: 5451, column: 2)
!12499 = !DILocation(line: 5451, column: 16, scope: !12498)
!12500 = !DILocation(line: 5451, column: 2, scope: !12495)
!12501 = !DILocation(line: 5452, column: 34, scope: !12502)
!12502 = distinct !DILexicalBlock(scope: !12498, file: !209, line: 5451, column: 45)
!12503 = !DILocation(line: 5452, column: 48, scope: !12502)
!12504 = !DILocation(line: 5453, column: 14, scope: !12502)
!12505 = !DILocation(line: 5453, column: 23, scope: !12502)
!12506 = !DILocation(line: 5452, column: 9, scope: !12502)
!12507 = !DILocation(line: 5452, column: 7, scope: !12502)
!12508 = !DILocation(line: 5455, column: 7, scope: !12509)
!12509 = distinct !DILexicalBlock(scope: !12502, file: !209, line: 5455, column: 7)
!12510 = !DILocation(line: 5455, column: 11, scope: !12509)
!12511 = !DILocation(line: 5455, column: 7, scope: !12502)
!12512 = !DILocation(line: 5456, column: 4, scope: !12509)
!12513 = !DILocation(line: 5458, column: 8, scope: !12514)
!12514 = distinct !DILexicalBlock(scope: !12502, file: !209, line: 5458, column: 7)
!12515 = !DILocation(line: 5458, column: 17, scope: !12514)
!12516 = !DILocation(line: 5458, column: 39, scope: !12514)
!12517 = !DILocation(line: 5458, column: 7, scope: !12502)
!12518 = !DILocation(line: 5459, column: 8, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12520, file: !209, line: 5459, column: 8)
!12520 = distinct !DILexicalBlock(scope: !12514, file: !209, line: 5458, column: 43)
!12521 = !DILocation(line: 5459, column: 24, scope: !12519)
!12522 = !DILocation(line: 5459, column: 8, scope: !12520)
!12523 = !DILocation(line: 5461, column: 23, scope: !12519)
!12524 = !DILocation(line: 5461, column: 21, scope: !12519)
!12525 = !DILocation(line: 5461, column: 5, scope: !12519)
!12526 = !DILocation(line: 5462, column: 3, scope: !12520)
!12527 = !DILocation(line: 5468, column: 8, scope: !12528)
!12528 = distinct !DILexicalBlock(scope: !12514, file: !209, line: 5462, column: 10)
!12529 = !DILocation(line: 5470, column: 29, scope: !12530)
!12530 = distinct !DILexicalBlock(scope: !12528, file: !209, line: 5470, column: 8)
!12531 = !DILocation(line: 5470, column: 32, scope: !12530)
!12532 = !DILocation(line: 5470, column: 8, scope: !12530)
!12533 = !DILocation(line: 5470, column: 40, scope: !12530)
!12534 = !DILocation(line: 5470, column: 37, scope: !12530)
!12535 = !DILocation(line: 5470, column: 8, scope: !12528)
!12536 = !DILocation(line: 5475, column: 5, scope: !12537)
!12537 = distinct !DILexicalBlock(scope: !12530, file: !209, line: 5470, column: 45)
!12538 = !DILocation(line: 5478, column: 2, scope: !12502)
!12539 = !DILocation(line: 5451, column: 40, scope: !12498)
!12540 = !DILocation(line: 5451, column: 2, scope: !12498)
!12541 = distinct !{!12541, !12500, !12542}
!12542 = !DILocation(line: 5478, column: 2, scope: !12495)
!12543 = !DILocation(line: 5480, column: 6, scope: !12544)
!12544 = distinct !DILexicalBlock(scope: !12477, file: !209, line: 5480, column: 6)
!12545 = !DILocation(line: 5480, column: 22, scope: !12544)
!12546 = !DILocation(line: 5480, column: 6, scope: !12477)
!12547 = !DILocation(line: 5481, column: 10, scope: !12544)
!12548 = !DILocation(line: 5481, column: 3, scope: !12544)
!12549 = !DILocation(line: 5484, column: 6, scope: !12477)
!12550 = !DILocation(line: 5484, column: 4, scope: !12477)
!12551 = !DILocation(line: 5484, column: 2, scope: !12477)
!12552 = !DILabel(scope: !12477, name: "success", file: !209, line: 5486)
!12553 = !DILocation(line: 5486, column: 1, scope: !12477)
!12554 = !DILocation(line: 5487, column: 4, scope: !12477)
!12555 = !DILocation(line: 5487, column: 13, scope: !12477)
!12556 = !DILocation(line: 5487, column: 35, scope: !12477)
!12557 = !DILocation(line: 5487, column: 2, scope: !12477)
!12558 = !DILocation(line: 5488, column: 23, scope: !12477)
!12559 = !DILocation(line: 5488, column: 26, scope: !12477)
!12560 = !DILocation(line: 5488, column: 31, scope: !12477)
!12561 = !DILocation(line: 5488, column: 2, scope: !12477)
!12562 = !DILocation(line: 5489, column: 9, scope: !12477)
!12563 = !DILocation(line: 5489, column: 2, scope: !12477)
!12564 = !DILocation(line: 5490, column: 1, scope: !12477)
!12565 = distinct !DISubprogram(name: "ni_set_rtsi_direction", scope: !209, file: !209, line: 5148, type: !12405, scopeLine: 5150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12566 = !DILocalVariable(name: "dev", arg: 1, scope: !12565, file: !209, line: 5148, type: !3350)
!12567 = !DILocation(line: 5148, column: 57, scope: !12565)
!12568 = !DILocalVariable(name: "chan", arg: 2, scope: !12565, file: !209, line: 5148, type: !429)
!12569 = !DILocation(line: 5148, column: 66, scope: !12565)
!12570 = !DILocalVariable(name: "direction", arg: 3, scope: !12565, file: !209, line: 5149, type: !7)
!12571 = !DILocation(line: 5149, column: 20, scope: !12565)
!12572 = !DILocalVariable(name: "devpriv", scope: !12565, file: !209, line: 5151, type: !4731)
!12573 = !DILocation(line: 5151, column: 21, scope: !12565)
!12574 = !DILocation(line: 5151, column: 31, scope: !12565)
!12575 = !DILocation(line: 5151, column: 36, scope: !12565)
!12576 = !DILocalVariable(name: "max_chan", scope: !12565, file: !209, line: 5152, type: !7)
!12577 = !DILocation(line: 5152, column: 15, scope: !12565)
!12578 = !DILocation(line: 5152, column: 26, scope: !12565)
!12579 = !DILocation(line: 5154, column: 6, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12565, file: !209, line: 5154, column: 6)
!12581 = !DILocation(line: 5154, column: 11, scope: !12580)
!12582 = !DILocation(line: 5154, column: 6, scope: !12565)
!12583 = !DILocation(line: 5156, column: 8, scope: !12580)
!12584 = !DILocation(line: 5156, column: 3, scope: !12580)
!12585 = !DILocation(line: 5158, column: 6, scope: !12586)
!12586 = distinct !DILexicalBlock(scope: !12565, file: !209, line: 5158, column: 6)
!12587 = !DILocation(line: 5158, column: 16, scope: !12586)
!12588 = !DILocation(line: 5158, column: 6, scope: !12565)
!12589 = !DILocation(line: 5159, column: 7, scope: !12590)
!12590 = distinct !DILexicalBlock(scope: !12591, file: !209, line: 5159, column: 7)
!12591 = distinct !DILexicalBlock(scope: !12586, file: !209, line: 5158, column: 34)
!12592 = !DILocation(line: 5159, column: 14, scope: !12590)
!12593 = !DILocation(line: 5159, column: 12, scope: !12590)
!12594 = !DILocation(line: 5159, column: 7, scope: !12591)
!12595 = !DILocation(line: 5161, column: 8, scope: !12596)
!12596 = distinct !DILexicalBlock(scope: !12590, file: !209, line: 5159, column: 24)
!12597 = !DILocation(line: 5160, column: 4, scope: !12596)
!12598 = !DILocation(line: 5160, column: 13, scope: !12596)
!12599 = !DILocation(line: 5160, column: 37, scope: !12596)
!12600 = !DILocation(line: 5162, column: 3, scope: !12596)
!12601 = !DILocation(line: 5162, column: 14, scope: !12602)
!12602 = distinct !DILexicalBlock(scope: !12590, file: !209, line: 5162, column: 14)
!12603 = !DILocation(line: 5162, column: 19, scope: !12602)
!12604 = !DILocation(line: 5162, column: 14, scope: !12590)
!12605 = !DILocation(line: 5163, column: 4, scope: !12606)
!12606 = distinct !DILexicalBlock(scope: !12602, file: !209, line: 5162, column: 52)
!12607 = !DILocation(line: 5163, column: 13, scope: !12606)
!12608 = !DILocation(line: 5163, column: 37, scope: !12606)
!12609 = !DILocation(line: 5165, column: 3, scope: !12606)
!12610 = !DILocation(line: 5166, column: 2, scope: !12591)
!12611 = !DILocation(line: 5167, column: 7, scope: !12612)
!12612 = distinct !DILexicalBlock(scope: !12613, file: !209, line: 5167, column: 7)
!12613 = distinct !DILexicalBlock(scope: !12586, file: !209, line: 5166, column: 9)
!12614 = !DILocation(line: 5167, column: 14, scope: !12612)
!12615 = !DILocation(line: 5167, column: 12, scope: !12612)
!12616 = !DILocation(line: 5167, column: 7, scope: !12613)
!12617 = !DILocation(line: 5169, column: 9, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12612, file: !209, line: 5167, column: 24)
!12619 = !DILocation(line: 5169, column: 8, scope: !12618)
!12620 = !DILocation(line: 5168, column: 4, scope: !12618)
!12621 = !DILocation(line: 5168, column: 13, scope: !12618)
!12622 = !DILocation(line: 5168, column: 37, scope: !12618)
!12623 = !DILocation(line: 5170, column: 3, scope: !12618)
!12624 = !DILocation(line: 5170, column: 14, scope: !12625)
!12625 = distinct !DILexicalBlock(scope: !12612, file: !209, line: 5170, column: 14)
!12626 = !DILocation(line: 5170, column: 19, scope: !12625)
!12627 = !DILocation(line: 5170, column: 14, scope: !12612)
!12628 = !DILocation(line: 5171, column: 4, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12625, file: !209, line: 5170, column: 52)
!12630 = !DILocation(line: 5171, column: 13, scope: !12629)
!12631 = !DILocation(line: 5171, column: 37, scope: !12629)
!12632 = !DILocation(line: 5173, column: 3, scope: !12629)
!12633 = !DILocation(line: 5175, column: 16, scope: !12565)
!12634 = !DILocation(line: 5175, column: 21, scope: !12565)
!12635 = !DILocation(line: 5175, column: 30, scope: !12565)
!12636 = !DILocation(line: 5175, column: 2, scope: !12565)
!12637 = !DILocation(line: 5177, column: 1, scope: !12565)
!12638 = distinct !DISubprogram(name: "ni_set_rtsi_routing", scope: !209, file: !209, line: 5093, type: !4411, scopeLine: 5095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12639 = !DILocalVariable(name: "dev", arg: 1, scope: !12638, file: !209, line: 5093, type: !3350)
!12640 = !DILocation(line: 5093, column: 54, scope: !12638)
!12641 = !DILocalVariable(name: "chan", arg: 2, scope: !12638, file: !209, line: 5094, type: !7)
!12642 = !DILocation(line: 5094, column: 24, scope: !12638)
!12643 = !DILocalVariable(name: "src", arg: 3, scope: !12638, file: !209, line: 5094, type: !7)
!12644 = !DILocation(line: 5094, column: 43, scope: !12638)
!12645 = !DILocalVariable(name: "devpriv", scope: !12638, file: !209, line: 5096, type: !4731)
!12646 = !DILocation(line: 5096, column: 21, scope: !12638)
!12647 = !DILocation(line: 5096, column: 31, scope: !12638)
!12648 = !DILocation(line: 5096, column: 36, scope: !12638)
!12649 = !DILocation(line: 5098, column: 6, scope: !12650)
!12650 = distinct !DILexicalBlock(scope: !12638, file: !209, line: 5098, column: 6)
!12651 = !DILocation(line: 5098, column: 11, scope: !12650)
!12652 = !DILocation(line: 5098, column: 6, scope: !12638)
!12653 = !DILocation(line: 5100, column: 8, scope: !12650)
!12654 = !DILocation(line: 5100, column: 3, scope: !12650)
!12655 = !DILocation(line: 5102, column: 34, scope: !12656)
!12656 = distinct !DILexicalBlock(scope: !12638, file: !209, line: 5102, column: 6)
!12657 = !DILocation(line: 5102, column: 39, scope: !12656)
!12658 = !DILocation(line: 5102, column: 45, scope: !12656)
!12659 = !DILocation(line: 5102, column: 6, scope: !12656)
!12660 = !DILocation(line: 5102, column: 50, scope: !12656)
!12661 = !DILocation(line: 5102, column: 6, scope: !12638)
!12662 = !DILocation(line: 5103, column: 3, scope: !12656)
!12663 = !DILocation(line: 5104, column: 6, scope: !12664)
!12664 = distinct !DILexicalBlock(scope: !12638, file: !209, line: 5104, column: 6)
!12665 = !DILocation(line: 5104, column: 11, scope: !12664)
!12666 = !DILocation(line: 5104, column: 6, scope: !12638)
!12667 = !DILocation(line: 5105, column: 39, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !12664, file: !209, line: 5104, column: 16)
!12669 = !DILocation(line: 5105, column: 38, scope: !12668)
!12670 = !DILocation(line: 5105, column: 3, scope: !12668)
!12671 = !DILocation(line: 5105, column: 12, scope: !12668)
!12672 = !DILocation(line: 5105, column: 35, scope: !12668)
!12673 = !DILocation(line: 5106, column: 38, scope: !12668)
!12674 = !DILocation(line: 5106, column: 3, scope: !12668)
!12675 = !DILocation(line: 5106, column: 12, scope: !12668)
!12676 = !DILocation(line: 5106, column: 35, scope: !12668)
!12677 = !DILocation(line: 5107, column: 17, scope: !12668)
!12678 = !DILocation(line: 5107, column: 22, scope: !12668)
!12679 = !DILocation(line: 5107, column: 31, scope: !12668)
!12680 = !DILocation(line: 5107, column: 3, scope: !12668)
!12681 = !DILocation(line: 5109, column: 2, scope: !12668)
!12682 = !DILocation(line: 5109, column: 13, scope: !12683)
!12683 = distinct !DILexicalBlock(scope: !12664, file: !209, line: 5109, column: 13)
!12684 = !DILocation(line: 5109, column: 20, scope: !12683)
!12685 = !DILocation(line: 5109, column: 18, scope: !12683)
!12686 = !DILocation(line: 5109, column: 13, scope: !12664)
!12687 = !DILocation(line: 5110, column: 39, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !12683, file: !209, line: 5109, column: 68)
!12689 = !DILocation(line: 5110, column: 38, scope: !12688)
!12690 = !DILocation(line: 5110, column: 3, scope: !12688)
!12691 = !DILocation(line: 5110, column: 12, scope: !12688)
!12692 = !DILocation(line: 5110, column: 35, scope: !12688)
!12693 = !DILocation(line: 5111, column: 38, scope: !12688)
!12694 = !DILocation(line: 5111, column: 3, scope: !12688)
!12695 = !DILocation(line: 5111, column: 12, scope: !12688)
!12696 = !DILocation(line: 5111, column: 35, scope: !12688)
!12697 = !DILocation(line: 5112, column: 17, scope: !12688)
!12698 = !DILocation(line: 5112, column: 22, scope: !12688)
!12699 = !DILocation(line: 5112, column: 31, scope: !12688)
!12700 = !DILocation(line: 5112, column: 3, scope: !12688)
!12701 = !DILocation(line: 5114, column: 2, scope: !12688)
!12702 = !DILocation(line: 5114, column: 13, scope: !12703)
!12703 = distinct !DILexicalBlock(scope: !12683, file: !209, line: 5114, column: 13)
!12704 = !DILocation(line: 5114, column: 18, scope: !12703)
!12705 = !DILocation(line: 5114, column: 13, scope: !12683)
!12706 = !DILocation(line: 5119, column: 3, scope: !12707)
!12707 = distinct !DILexicalBlock(scope: !12703, file: !209, line: 5114, column: 51)
!12708 = !DILocation(line: 5120, column: 3, scope: !12707)
!12709 = !DILocation(line: 5122, column: 2, scope: !12638)
!12710 = !DILocation(line: 5123, column: 1, scope: !12638)
!12711 = distinct !DISubprogram(name: "ni_m_series_set_pfi_routing", scope: !209, file: !209, line: 4597, type: !4411, scopeLine: 4599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12712 = !DILocalVariable(name: "dev", arg: 1, scope: !12711, file: !209, line: 4597, type: !3350)
!12713 = !DILocation(line: 4597, column: 62, scope: !12711)
!12714 = !DILocalVariable(name: "chan", arg: 2, scope: !12711, file: !209, line: 4598, type: !7)
!12715 = !DILocation(line: 4598, column: 25, scope: !12711)
!12716 = !DILocalVariable(name: "source", arg: 3, scope: !12711, file: !209, line: 4598, type: !7)
!12717 = !DILocation(line: 4598, column: 44, scope: !12711)
!12718 = !DILocalVariable(name: "devpriv", scope: !12711, file: !209, line: 4600, type: !4731)
!12719 = !DILocation(line: 4600, column: 21, scope: !12711)
!12720 = !DILocation(line: 4600, column: 31, scope: !12711)
!12721 = !DILocation(line: 4600, column: 36, scope: !12711)
!12722 = !DILocalVariable(name: "index", scope: !12711, file: !209, line: 4601, type: !7)
!12723 = !DILocation(line: 4601, column: 15, scope: !12711)
!12724 = !DILocation(line: 4601, column: 23, scope: !12711)
!12725 = !DILocation(line: 4601, column: 28, scope: !12711)
!12726 = !DILocalVariable(name: "val", scope: !12711, file: !209, line: 4602, type: !438)
!12727 = !DILocation(line: 4602, column: 17, scope: !12711)
!12728 = !DILocation(line: 4602, column: 23, scope: !12711)
!12729 = !DILocation(line: 4602, column: 32, scope: !12711)
!12730 = !DILocation(line: 4602, column: 54, scope: !12711)
!12731 = !DILocation(line: 4604, column: 7, scope: !12732)
!12732 = distinct !DILexicalBlock(scope: !12711, file: !209, line: 4604, column: 6)
!12733 = !DILocation(line: 4604, column: 14, scope: !12732)
!12734 = !DILocation(line: 4604, column: 25, scope: !12732)
!12735 = !DILocation(line: 4604, column: 22, scope: !12732)
!12736 = !DILocation(line: 4604, column: 6, scope: !12711)
!12737 = !DILocation(line: 4605, column: 3, scope: !12732)
!12738 = !DILocation(line: 4607, column: 10, scope: !12711)
!12739 = !DILocation(line: 4607, column: 9, scope: !12711)
!12740 = !DILocation(line: 4607, column: 6, scope: !12711)
!12741 = !DILocation(line: 4608, column: 9, scope: !12711)
!12742 = !DILocation(line: 4608, column: 6, scope: !12711)
!12743 = !DILocation(line: 4609, column: 12, scope: !12711)
!12744 = !DILocation(line: 4609, column: 17, scope: !12711)
!12745 = !DILocation(line: 4609, column: 22, scope: !12711)
!12746 = !DILocation(line: 4609, column: 2, scope: !12711)
!12747 = !DILocation(line: 4610, column: 42, scope: !12711)
!12748 = !DILocation(line: 4610, column: 2, scope: !12711)
!12749 = !DILocation(line: 4610, column: 11, scope: !12711)
!12750 = !DILocation(line: 4610, column: 33, scope: !12711)
!12751 = !DILocation(line: 4610, column: 40, scope: !12711)
!12752 = !DILocation(line: 4612, column: 2, scope: !12711)
!12753 = !DILocation(line: 4613, column: 1, scope: !12711)
!12754 = distinct !DISubprogram(name: "ni_old_set_pfi_routing", scope: !209, file: !209, line: 4578, type: !4411, scopeLine: 4580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12755 = !DILocalVariable(name: "dev", arg: 1, scope: !12754, file: !209, line: 4578, type: !3350)
!12756 = !DILocation(line: 4578, column: 57, scope: !12754)
!12757 = !DILocalVariable(name: "chan", arg: 2, scope: !12754, file: !209, line: 4579, type: !7)
!12758 = !DILocation(line: 4579, column: 20, scope: !12754)
!12759 = !DILocalVariable(name: "source", arg: 3, scope: !12754, file: !209, line: 4579, type: !7)
!12760 = !DILocation(line: 4579, column: 39, scope: !12754)
!12761 = !DILocation(line: 4582, column: 6, scope: !12762)
!12762 = distinct !DILexicalBlock(scope: !12754, file: !209, line: 4582, column: 6)
!12763 = !DILocation(line: 4582, column: 39, scope: !12762)
!12764 = !DILocation(line: 4582, column: 44, scope: !12762)
!12765 = !DILocation(line: 4582, column: 16, scope: !12762)
!12766 = !DILocation(line: 4582, column: 13, scope: !12762)
!12767 = !DILocation(line: 4582, column: 6, scope: !12754)
!12768 = !DILocation(line: 4583, column: 3, scope: !12762)
!12769 = !DILocation(line: 4584, column: 2, scope: !12754)
!12770 = !DILocation(line: 4585, column: 1, scope: !12754)
!12771 = distinct !DISubprogram(name: "set_rgout0_reg", scope: !209, file: !209, line: 5275, type: !12772, scopeLine: 5276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12772 = !DISubroutineType(types: !12773)
!12773 = !{null, !429, !3350}
!12774 = !DILocalVariable(name: "reg", arg: 1, scope: !12771, file: !209, line: 5275, type: !429)
!12775 = !DILocation(line: 5275, column: 32, scope: !12771)
!12776 = !DILocalVariable(name: "dev", arg: 2, scope: !12771, file: !209, line: 5275, type: !3350)
!12777 = !DILocation(line: 5275, column: 59, scope: !12771)
!12778 = !DILocalVariable(name: "devpriv", scope: !12771, file: !209, line: 5277, type: !4731)
!12779 = !DILocation(line: 5277, column: 21, scope: !12771)
!12780 = !DILocation(line: 5277, column: 31, scope: !12771)
!12781 = !DILocation(line: 5277, column: 36, scope: !12771)
!12782 = !DILocation(line: 5279, column: 6, scope: !12783)
!12783 = distinct !DILexicalBlock(scope: !12771, file: !209, line: 5279, column: 6)
!12784 = !DILocation(line: 5279, column: 15, scope: !12783)
!12785 = !DILocation(line: 5279, column: 6, scope: !12771)
!12786 = !DILocation(line: 5280, column: 3, scope: !12787)
!12787 = distinct !DILexicalBlock(scope: !12783, file: !209, line: 5279, column: 28)
!12788 = !DILocation(line: 5280, column: 12, scope: !12787)
!12789 = !DILocation(line: 5280, column: 36, scope: !12787)
!12790 = !DILocation(line: 5283, column: 5, scope: !12787)
!12791 = !DILocation(line: 5283, column: 9, scope: !12787)
!12792 = !DILocation(line: 5283, column: 4, scope: !12787)
!12793 = !DILocation(line: 5283, column: 48, scope: !12787)
!12794 = !DILocation(line: 5282, column: 3, scope: !12787)
!12795 = !DILocation(line: 5282, column: 12, scope: !12787)
!12796 = !DILocation(line: 5282, column: 36, scope: !12787)
!12797 = !DILocation(line: 5285, column: 17, scope: !12787)
!12798 = !DILocation(line: 5285, column: 22, scope: !12787)
!12799 = !DILocation(line: 5285, column: 31, scope: !12787)
!12800 = !DILocation(line: 5285, column: 3, scope: !12787)
!12801 = !DILocation(line: 5287, column: 2, scope: !12787)
!12802 = !DILocation(line: 5288, column: 3, scope: !12803)
!12803 = distinct !DILexicalBlock(scope: !12783, file: !209, line: 5287, column: 9)
!12804 = !DILocation(line: 5288, column: 12, scope: !12803)
!12805 = !DILocation(line: 5288, column: 35, scope: !12803)
!12806 = !DILocation(line: 5290, column: 5, scope: !12803)
!12807 = !DILocation(line: 5290, column: 9, scope: !12803)
!12808 = !DILocation(line: 5290, column: 4, scope: !12803)
!12809 = !DILocation(line: 5290, column: 45, scope: !12803)
!12810 = !DILocation(line: 5289, column: 3, scope: !12803)
!12811 = !DILocation(line: 5289, column: 12, scope: !12803)
!12812 = !DILocation(line: 5289, column: 35, scope: !12803)
!12813 = !DILocation(line: 5292, column: 17, scope: !12803)
!12814 = !DILocation(line: 5292, column: 22, scope: !12803)
!12815 = !DILocation(line: 5292, column: 31, scope: !12803)
!12816 = !DILocation(line: 5292, column: 3, scope: !12803)
!12817 = !DILocation(line: 5295, column: 1, scope: !12771)
!12818 = distinct !DISubprogram(name: "set_ith_rtsi_brd_reg", scope: !209, file: !209, line: 5378, type: !12819, scopeLine: 5379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12819 = !DISubroutineType(types: !12820)
!12820 = !{null, !429, !429, !3350}
!12821 = !DILocalVariable(name: "i", arg: 1, scope: !12818, file: !209, line: 5378, type: !429)
!12822 = !DILocation(line: 5378, column: 38, scope: !12818)
!12823 = !DILocalVariable(name: "reg", arg: 2, scope: !12818, file: !209, line: 5378, type: !429)
!12824 = !DILocation(line: 5378, column: 45, scope: !12818)
!12825 = !DILocalVariable(name: "dev", arg: 3, scope: !12818, file: !209, line: 5378, type: !3350)
!12826 = !DILocation(line: 5378, column: 72, scope: !12818)
!12827 = !DILocalVariable(name: "devpriv", scope: !12818, file: !209, line: 5380, type: !4731)
!12828 = !DILocation(line: 5380, column: 21, scope: !12818)
!12829 = !DILocation(line: 5380, column: 31, scope: !12818)
!12830 = !DILocation(line: 5380, column: 36, scope: !12818)
!12831 = !DILocalVariable(name: "reg_i_sz", scope: !12818, file: !209, line: 5381, type: !429)
!12832 = !DILocation(line: 5381, column: 6, scope: !12818)
!12833 = !DILocalVariable(name: "reg_i_mask", scope: !12818, file: !209, line: 5382, type: !429)
!12834 = !DILocation(line: 5382, column: 6, scope: !12818)
!12835 = !DILocalVariable(name: "reg_i_shift", scope: !12818, file: !209, line: 5383, type: !429)
!12836 = !DILocation(line: 5383, column: 6, scope: !12818)
!12837 = !DILocation(line: 5385, column: 6, scope: !12838)
!12838 = distinct !DILexicalBlock(scope: !12818, file: !209, line: 5385, column: 6)
!12839 = !DILocation(line: 5385, column: 15, scope: !12838)
!12840 = !DILocation(line: 5385, column: 6, scope: !12818)
!12841 = !DILocation(line: 5386, column: 12, scope: !12838)
!12842 = !DILocation(line: 5386, column: 3, scope: !12838)
!12843 = !DILocation(line: 5387, column: 25, scope: !12818)
!12844 = !DILocation(line: 5387, column: 22, scope: !12818)
!12845 = !DILocation(line: 5387, column: 15, scope: !12818)
!12846 = !DILocation(line: 5387, column: 13, scope: !12818)
!12847 = !DILocation(line: 5388, column: 16, scope: !12818)
!12848 = !DILocation(line: 5388, column: 20, scope: !12818)
!12849 = !DILocation(line: 5388, column: 18, scope: !12818)
!12850 = !DILocation(line: 5388, column: 14, scope: !12818)
!12851 = !DILocation(line: 5391, column: 36, scope: !12818)
!12852 = !DILocation(line: 5391, column: 56, scope: !12818)
!12853 = !DILocation(line: 5391, column: 53, scope: !12818)
!12854 = !DILocation(line: 5391, column: 34, scope: !12818)
!12855 = !DILocation(line: 5391, column: 2, scope: !12818)
!12856 = !DILocation(line: 5391, column: 11, scope: !12818)
!12857 = !DILocation(line: 5391, column: 31, scope: !12818)
!12858 = !DILocation(line: 5393, column: 35, scope: !12818)
!12859 = !DILocation(line: 5393, column: 41, scope: !12818)
!12860 = !DILocation(line: 5393, column: 39, scope: !12818)
!12861 = !DILocation(line: 5393, column: 56, scope: !12818)
!12862 = !DILocation(line: 5393, column: 53, scope: !12818)
!12863 = !DILocation(line: 5393, column: 2, scope: !12818)
!12864 = !DILocation(line: 5393, column: 11, scope: !12818)
!12865 = !DILocation(line: 5393, column: 31, scope: !12818)
!12866 = !DILocation(line: 5395, column: 16, scope: !12818)
!12867 = !DILocation(line: 5395, column: 21, scope: !12818)
!12868 = !DILocation(line: 5395, column: 30, scope: !12818)
!12869 = !DILocation(line: 5395, column: 2, scope: !12818)
!12870 = !DILocation(line: 5396, column: 1, scope: !12818)
!12871 = distinct !DISubprogram(name: "ni_valid_rtsi_output_source", scope: !209, file: !209, line: 5055, type: !4411, scopeLine: 5057, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12872 = !DILocalVariable(name: "dev", arg: 1, scope: !12871, file: !209, line: 5055, type: !3350)
!12873 = !DILocation(line: 5055, column: 62, scope: !12871)
!12874 = !DILocalVariable(name: "chan", arg: 2, scope: !12871, file: !209, line: 5056, type: !7)
!12875 = !DILocation(line: 5056, column: 25, scope: !12871)
!12876 = !DILocalVariable(name: "source", arg: 3, scope: !12871, file: !209, line: 5056, type: !7)
!12877 = !DILocation(line: 5056, column: 44, scope: !12871)
!12878 = !DILocalVariable(name: "devpriv", scope: !12871, file: !209, line: 5058, type: !4731)
!12879 = !DILocation(line: 5058, column: 21, scope: !12871)
!12880 = !DILocation(line: 5058, column: 31, scope: !12871)
!12881 = !DILocation(line: 5058, column: 36, scope: !12871)
!12882 = !DILocation(line: 5060, column: 6, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12871, file: !209, line: 5060, column: 6)
!12884 = !DILocation(line: 5060, column: 14, scope: !12883)
!12885 = !DILocation(line: 5060, column: 11, scope: !12883)
!12886 = !DILocation(line: 5060, column: 6, scope: !12871)
!12887 = !DILocation(line: 5061, column: 7, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12889, file: !209, line: 5061, column: 7)
!12889 = distinct !DILexicalBlock(scope: !12883, file: !209, line: 5060, column: 62)
!12890 = !DILocation(line: 5061, column: 12, scope: !12888)
!12891 = !DILocation(line: 5061, column: 7, scope: !12889)
!12892 = !DILocation(line: 5062, column: 8, scope: !12893)
!12893 = distinct !DILexicalBlock(scope: !12894, file: !209, line: 5062, column: 8)
!12894 = distinct !DILexicalBlock(scope: !12888, file: !209, line: 5061, column: 45)
!12895 = !DILocation(line: 5062, column: 15, scope: !12893)
!12896 = !DILocation(line: 5062, column: 8, scope: !12894)
!12897 = !DILocation(line: 5063, column: 5, scope: !12893)
!12898 = !DILocation(line: 5065, column: 4, scope: !12894)
!12899 = !DILocation(line: 5068, column: 4, scope: !12894)
!12900 = !DILocation(line: 5070, column: 3, scope: !12889)
!12901 = !DILocation(line: 5072, column: 10, scope: !12871)
!12902 = !DILocation(line: 5072, column: 2, scope: !12871)
!12903 = !DILocation(line: 5085, column: 3, scope: !12904)
!12904 = distinct !DILexicalBlock(scope: !12871, file: !209, line: 5072, column: 18)
!12905 = !DILocation(line: 5087, column: 11, scope: !12904)
!12906 = !DILocation(line: 5087, column: 20, scope: !12904)
!12907 = !DILocation(line: 5087, column: 10, scope: !12904)
!12908 = !DILocation(line: 5087, column: 3, scope: !12904)
!12909 = !DILocation(line: 5089, column: 3, scope: !12904)
!12910 = !DILocation(line: 5091, column: 1, scope: !12871)
!12911 = distinct !DISubprogram(name: "decr_rgout0_src_use", scope: !209, file: !209, line: 5357, type: !11958, scopeLine: 5358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12912 = !DILocalVariable(name: "src", arg: 1, scope: !12911, file: !209, line: 5357, type: !429)
!12913 = !DILocation(line: 5357, column: 36, scope: !12911)
!12914 = !DILocalVariable(name: "dev", arg: 2, scope: !12911, file: !209, line: 5357, type: !3350)
!12915 = !DILocation(line: 5357, column: 63, scope: !12911)
!12916 = !DILocalVariable(name: "devpriv", scope: !12911, file: !209, line: 5359, type: !4731)
!12917 = !DILocation(line: 5359, column: 21, scope: !12911)
!12918 = !DILocation(line: 5359, column: 31, scope: !12911)
!12919 = !DILocation(line: 5359, column: 36, scope: !12911)
!12920 = !DILocalVariable(name: "reg", scope: !12911, file: !209, line: 5360, type: !11652)
!12921 = !DILocation(line: 5360, column: 5, scope: !12911)
!12922 = !DILocation(line: 5360, column: 36, scope: !12911)
!12923 = !DILocation(line: 5361, column: 9, scope: !12911)
!12924 = !DILocation(line: 5361, column: 18, scope: !12911)
!12925 = !DILocation(line: 5360, column: 11, scope: !12911)
!12926 = !DILocation(line: 5363, column: 6, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12911, file: !209, line: 5363, column: 6)
!12928 = !DILocation(line: 5363, column: 15, scope: !12927)
!12929 = !DILocation(line: 5363, column: 28, scope: !12927)
!12930 = !DILocation(line: 5363, column: 32, scope: !12927)
!12931 = !DILocation(line: 5363, column: 50, scope: !12927)
!12932 = !DILocation(line: 5363, column: 35, scope: !12927)
!12933 = !DILocation(line: 5363, column: 58, scope: !12927)
!12934 = !DILocation(line: 5363, column: 55, scope: !12927)
!12935 = !DILocation(line: 5363, column: 6, scope: !12911)
!12936 = !DILocation(line: 5364, column: 5, scope: !12937)
!12937 = distinct !DILexicalBlock(scope: !12927, file: !209, line: 5363, column: 63)
!12938 = !DILocation(line: 5364, column: 14, scope: !12937)
!12939 = !DILocation(line: 5364, column: 3, scope: !12937)
!12940 = !DILocation(line: 5365, column: 8, scope: !12941)
!12941 = distinct !DILexicalBlock(scope: !12937, file: !209, line: 5365, column: 7)
!12942 = !DILocation(line: 5365, column: 17, scope: !12941)
!12943 = !DILocation(line: 5365, column: 7, scope: !12937)
!12944 = !DILocation(line: 5366, column: 22, scope: !12941)
!12945 = !DILocation(line: 5366, column: 4, scope: !12941)
!12946 = !DILocation(line: 5367, column: 3, scope: !12937)
!12947 = !DILocation(line: 5369, column: 2, scope: !12911)
!12948 = !DILocation(line: 5370, column: 1, scope: !12911)
!12949 = distinct !DISubprogram(name: "decr_rtsi_brd_src_use", scope: !209, file: !209, line: 5499, type: !12950, scopeLine: 5501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!12950 = !DISubroutineType(types: !12951)
!12951 = !{!429, !429, !429, !3350}
!12952 = !DILocalVariable(name: "src", arg: 1, scope: !12949, file: !209, line: 5499, type: !429)
!12953 = !DILocation(line: 5499, column: 38, scope: !12949)
!12954 = !DILocalVariable(name: "rtsi_brd", arg: 2, scope: !12949, file: !209, line: 5499, type: !429)
!12955 = !DILocation(line: 5499, column: 47, scope: !12949)
!12956 = !DILocalVariable(name: "dev", arg: 3, scope: !12949, file: !209, line: 5500, type: !3350)
!12957 = !DILocation(line: 5500, column: 28, scope: !12949)
!12958 = !DILocalVariable(name: "devpriv", scope: !12949, file: !209, line: 5502, type: !4731)
!12959 = !DILocation(line: 5502, column: 21, scope: !12949)
!12960 = !DILocation(line: 5502, column: 31, scope: !12949)
!12961 = !DILocation(line: 5502, column: 36, scope: !12949)
!12962 = !DILocalVariable(name: "reg", scope: !12949, file: !209, line: 5503, type: !11652)
!12963 = !DILocation(line: 5503, column: 5, scope: !12949)
!12964 = !DILocation(line: 5503, column: 36, scope: !12949)
!12965 = !DILocation(line: 5503, column: 50, scope: !12949)
!12966 = !DILocation(line: 5504, column: 9, scope: !12949)
!12967 = !DILocation(line: 5504, column: 18, scope: !12949)
!12968 = !DILocation(line: 5503, column: 11, scope: !12949)
!12969 = !DILocalVariable(name: "i", scope: !12949, file: !209, line: 5505, type: !4330)
!12970 = !DILocation(line: 5505, column: 12, scope: !12949)
!12971 = !DILocation(line: 5505, column: 16, scope: !12949)
!12972 = !DILocation(line: 5505, column: 25, scope: !12949)
!12973 = !DILocation(line: 5507, column: 6, scope: !12974)
!12974 = distinct !DILexicalBlock(scope: !12949, file: !209, line: 5507, column: 6)
!12975 = !DILocation(line: 5507, column: 15, scope: !12974)
!12976 = !DILocation(line: 5507, column: 37, scope: !12974)
!12977 = !DILocation(line: 5507, column: 40, scope: !12974)
!12978 = !DILocation(line: 5507, column: 44, scope: !12974)
!12979 = !DILocation(line: 5508, column: 27, scope: !12974)
!12980 = !DILocation(line: 5508, column: 30, scope: !12974)
!12981 = !DILocation(line: 5508, column: 6, scope: !12974)
!12982 = !DILocation(line: 5508, column: 38, scope: !12974)
!12983 = !DILocation(line: 5508, column: 35, scope: !12974)
!12984 = !DILocation(line: 5507, column: 6, scope: !12949)
!12985 = !DILocation(line: 5509, column: 5, scope: !12986)
!12986 = distinct !DILexicalBlock(scope: !12974, file: !209, line: 5508, column: 43)
!12987 = !DILocation(line: 5509, column: 14, scope: !12986)
!12988 = !DILocation(line: 5509, column: 36, scope: !12986)
!12989 = !DILocation(line: 5509, column: 3, scope: !12986)
!12990 = !DILocation(line: 5510, column: 8, scope: !12991)
!12991 = distinct !DILexicalBlock(scope: !12986, file: !209, line: 5510, column: 7)
!12992 = !DILocation(line: 5510, column: 17, scope: !12991)
!12993 = !DILocation(line: 5510, column: 39, scope: !12991)
!12994 = !DILocation(line: 5510, column: 7, scope: !12986)
!12995 = !DILocation(line: 5511, column: 25, scope: !12991)
!12996 = !DILocation(line: 5511, column: 31, scope: !12991)
!12997 = !DILocation(line: 5511, column: 4, scope: !12991)
!12998 = !DILocation(line: 5512, column: 3, scope: !12986)
!12999 = !DILocation(line: 5515, column: 2, scope: !12949)
!13000 = !DILocation(line: 5516, column: 1, scope: !12949)
!13001 = distinct !DISubprogram(name: "ni_disable_gout_routing", scope: !209, file: !209, line: 5583, type: !12294, scopeLine: 5585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!13002 = !DILocalVariable(name: "dest", arg: 1, scope: !13001, file: !209, line: 5583, type: !7)
!13003 = !DILocation(line: 5583, column: 56, scope: !13001)
!13004 = !DILocalVariable(name: "dev", arg: 2, scope: !13001, file: !209, line: 5584, type: !3350)
!13005 = !DILocation(line: 5584, column: 30, scope: !13001)
!13006 = !DILocalVariable(name: "devpriv", scope: !13001, file: !209, line: 5586, type: !4731)
!13007 = !DILocation(line: 5586, column: 21, scope: !13001)
!13008 = !DILocation(line: 5586, column: 31, scope: !13001)
!13009 = !DILocation(line: 5586, column: 36, scope: !13001)
!13010 = !DILocation(line: 5588, column: 10, scope: !13001)
!13011 = !DILocation(line: 5588, column: 2, scope: !13001)
!13012 = !DILocation(line: 5590, column: 3, scope: !13013)
!13013 = distinct !DILexicalBlock(scope: !13001, file: !209, line: 5588, column: 16)
!13014 = !DILocation(line: 5590, column: 12, scope: !13013)
!13015 = !DILocation(line: 5590, column: 28, scope: !13013)
!13016 = !DILocation(line: 5591, column: 3, scope: !13013)
!13017 = !DILocation(line: 5593, column: 3, scope: !13013)
!13018 = !DILocation(line: 5593, column: 12, scope: !13013)
!13019 = !DILocation(line: 5593, column: 28, scope: !13013)
!13020 = !DILocation(line: 5594, column: 3, scope: !13013)
!13021 = !DILocation(line: 5596, column: 3, scope: !13013)
!13022 = !DILocation(line: 5599, column: 16, scope: !13001)
!13023 = !DILocation(line: 5599, column: 21, scope: !13001)
!13024 = !DILocation(line: 5599, column: 30, scope: !13001)
!13025 = !DILocation(line: 5599, column: 2, scope: !13001)
!13026 = !DILocation(line: 5600, column: 2, scope: !13001)
!13027 = !DILocation(line: 5601, column: 1, scope: !13001)
!13028 = distinct !DISubprogram(name: "ni_load_channelgain_list", scope: !209, file: !209, line: 1704, type: !13029, scopeLine: 1707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!13029 = !DISubroutineType(types: !13030)
!13030 = !{null, !3350, !4119, !7, !1365}
!13031 = !DILocalVariable(name: "dev", arg: 1, scope: !13028, file: !209, line: 1704, type: !3350)
!13032 = !DILocation(line: 1704, column: 60, scope: !13028)
!13033 = !DILocalVariable(name: "s", arg: 2, scope: !13028, file: !209, line: 1705, type: !4119)
!13034 = !DILocation(line: 1705, column: 35, scope: !13028)
!13035 = !DILocalVariable(name: "n_chan", arg: 3, scope: !13028, file: !209, line: 1706, type: !7)
!13036 = !DILocation(line: 1706, column: 23, scope: !13028)
!13037 = !DILocalVariable(name: "list", arg: 4, scope: !13028, file: !209, line: 1706, type: !1365)
!13038 = !DILocation(line: 1706, column: 45, scope: !13028)
!13039 = !DILocalVariable(name: "board", scope: !13028, file: !209, line: 1708, type: !4959)
!13040 = !DILocation(line: 1708, column: 32, scope: !13028)
!13041 = !DILocation(line: 1708, column: 40, scope: !13028)
!13042 = !DILocation(line: 1708, column: 45, scope: !13028)
!13043 = !DILocalVariable(name: "devpriv", scope: !13028, file: !209, line: 1709, type: !4731)
!13044 = !DILocation(line: 1709, column: 21, scope: !13028)
!13045 = !DILocation(line: 1709, column: 31, scope: !13028)
!13046 = !DILocation(line: 1709, column: 36, scope: !13028)
!13047 = !DILocalVariable(name: "offset", scope: !13028, file: !209, line: 1710, type: !7)
!13048 = !DILocation(line: 1710, column: 15, scope: !13028)
!13049 = !DILocation(line: 1710, column: 25, scope: !13028)
!13050 = !DILocation(line: 1710, column: 28, scope: !13028)
!13051 = !DILocation(line: 1710, column: 36, scope: !13028)
!13052 = !DILocation(line: 1710, column: 41, scope: !13028)
!13053 = !DILocalVariable(name: "chan", scope: !13028, file: !209, line: 1711, type: !7)
!13054 = !DILocation(line: 1711, column: 15, scope: !13028)
!13055 = !DILocalVariable(name: "range", scope: !13028, file: !209, line: 1711, type: !7)
!13056 = !DILocation(line: 1711, column: 21, scope: !13028)
!13057 = !DILocalVariable(name: "aref", scope: !13028, file: !209, line: 1711, type: !7)
!13058 = !DILocation(line: 1711, column: 28, scope: !13028)
!13059 = !DILocalVariable(name: "i", scope: !13028, file: !209, line: 1712, type: !7)
!13060 = !DILocation(line: 1712, column: 15, scope: !13028)
!13061 = !DILocalVariable(name: "hi", scope: !13028, file: !209, line: 1713, type: !7)
!13062 = !DILocation(line: 1713, column: 15, scope: !13028)
!13063 = !DILocalVariable(name: "lo", scope: !13028, file: !209, line: 1713, type: !7)
!13064 = !DILocation(line: 1713, column: 19, scope: !13028)
!13065 = !DILocalVariable(name: "dither", scope: !13028, file: !209, line: 1714, type: !7)
!13066 = !DILocation(line: 1714, column: 15, scope: !13028)
!13067 = !DILocation(line: 1716, column: 6, scope: !13068)
!13068 = distinct !DILexicalBlock(scope: !13028, file: !209, line: 1716, column: 6)
!13069 = !DILocation(line: 1716, column: 15, scope: !13068)
!13070 = !DILocation(line: 1716, column: 6, scope: !13028)
!13071 = !DILocation(line: 1717, column: 37, scope: !13072)
!13072 = distinct !DILexicalBlock(scope: !13068, file: !209, line: 1716, column: 28)
!13073 = !DILocation(line: 1717, column: 42, scope: !13072)
!13074 = !DILocation(line: 1717, column: 50, scope: !13072)
!13075 = !DILocation(line: 1717, column: 3, scope: !13072)
!13076 = !DILocation(line: 1718, column: 3, scope: !13072)
!13077 = !DILocation(line: 1720, column: 6, scope: !13078)
!13078 = distinct !DILexicalBlock(scope: !13028, file: !209, line: 1720, column: 6)
!13079 = !DILocation(line: 1720, column: 13, scope: !13078)
!13080 = !DILocation(line: 1720, column: 18, scope: !13078)
!13081 = !DILocation(line: 1720, column: 22, scope: !13078)
!13082 = !DILocation(line: 1720, column: 31, scope: !13078)
!13083 = !DILocation(line: 1720, column: 39, scope: !13078)
!13084 = !DILocation(line: 1720, column: 43, scope: !13078)
!13085 = !DILocation(line: 1720, column: 52, scope: !13078)
!13086 = !DILocation(line: 1720, column: 6, scope: !13028)
!13087 = !DILocation(line: 1721, column: 7, scope: !13088)
!13088 = distinct !DILexicalBlock(scope: !13089, file: !209, line: 1721, column: 7)
!13089 = distinct !DILexicalBlock(scope: !13078, file: !209, line: 1720, column: 61)
!13090 = !DILocation(line: 1721, column: 16, scope: !13088)
!13091 = !DILocation(line: 1721, column: 31, scope: !13088)
!13092 = !DILocation(line: 1722, column: 7, scope: !13088)
!13093 = !DILocation(line: 1722, column: 16, scope: !13088)
!13094 = !DILocation(line: 1722, column: 33, scope: !13088)
!13095 = !DILocation(line: 1722, column: 30, scope: !13088)
!13096 = !DILocation(line: 1721, column: 7, scope: !13089)
!13097 = !DILocation(line: 1724, column: 4, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13088, file: !209, line: 1722, column: 42)
!13099 = !DILocation(line: 1726, column: 3, scope: !13089)
!13100 = !DILocation(line: 1726, column: 12, scope: !13089)
!13101 = !DILocation(line: 1726, column: 27, scope: !13089)
!13102 = !DILocation(line: 1727, column: 28, scope: !13089)
!13103 = !DILocation(line: 1727, column: 3, scope: !13089)
!13104 = !DILocation(line: 1727, column: 12, scope: !13089)
!13105 = !DILocation(line: 1727, column: 26, scope: !13089)
!13106 = !DILocation(line: 1728, column: 2, scope: !13089)
!13107 = !DILocation(line: 1729, column: 3, scope: !13108)
!13108 = distinct !DILexicalBlock(scope: !13078, file: !209, line: 1728, column: 9)
!13109 = !DILocation(line: 1729, column: 12, scope: !13108)
!13110 = !DILocation(line: 1729, column: 27, scope: !13108)
!13111 = !DILocation(line: 1732, column: 16, scope: !13028)
!13112 = !DILocation(line: 1732, column: 2, scope: !13028)
!13113 = !DILocation(line: 1735, column: 6, scope: !13114)
!13114 = distinct !DILexicalBlock(scope: !13028, file: !209, line: 1735, column: 6)
!13115 = !DILocation(line: 1735, column: 15, scope: !13114)
!13116 = !DILocation(line: 1735, column: 6, scope: !13028)
!13117 = !DILocation(line: 1736, column: 8, scope: !13118)
!13118 = distinct !DILexicalBlock(scope: !13119, file: !209, line: 1736, column: 7)
!13119 = distinct !DILexicalBlock(scope: !13114, file: !209, line: 1735, column: 24)
!13120 = !DILocation(line: 1736, column: 16, scope: !13118)
!13121 = !DILocation(line: 1736, column: 33, scope: !13118)
!13122 = !DILocation(line: 1737, column: 8, scope: !13118)
!13123 = !DILocation(line: 1737, column: 17, scope: !13118)
!13124 = !DILocation(line: 1736, column: 7, scope: !13119)
!13125 = !DILocation(line: 1739, column: 14, scope: !13126)
!13126 = distinct !DILexicalBlock(scope: !13118, file: !209, line: 1737, column: 42)
!13127 = !DILocation(line: 1739, column: 19, scope: !13126)
!13128 = !DILocation(line: 1739, column: 28, scope: !13126)
!13129 = !DILocation(line: 1739, column: 44, scope: !13126)
!13130 = !DILocation(line: 1739, column: 4, scope: !13126)
!13131 = !DILocation(line: 1742, column: 14, scope: !13126)
!13132 = !DILocation(line: 1742, column: 19, scope: !13126)
!13133 = !DILocation(line: 1742, column: 28, scope: !13126)
!13134 = !DILocation(line: 1742, column: 4, scope: !13126)
!13135 = !DILocation(line: 1744, column: 4, scope: !13126)
!13136 = !DILocation(line: 1744, column: 13, scope: !13126)
!13137 = !DILocation(line: 1744, column: 37, scope: !13126)
!13138 = !DILocation(line: 1746, column: 4, scope: !13126)
!13139 = !DILocation(line: 1747, column: 3, scope: !13126)
!13140 = !DILocation(line: 1747, column: 16, scope: !13141)
!13141 = distinct !DILexicalBlock(scope: !13118, file: !209, line: 1747, column: 14)
!13142 = !DILocation(line: 1747, column: 24, scope: !13141)
!13143 = !DILocation(line: 1747, column: 41, scope: !13141)
!13144 = !DILocation(line: 1748, column: 7, scope: !13141)
!13145 = !DILocation(line: 1748, column: 16, scope: !13141)
!13146 = !DILocation(line: 1747, column: 14, scope: !13118)
!13147 = !DILocation(line: 1750, column: 14, scope: !13148)
!13148 = distinct !DILexicalBlock(scope: !13141, file: !209, line: 1748, column: 41)
!13149 = !DILocation(line: 1750, column: 19, scope: !13148)
!13150 = !DILocation(line: 1750, column: 28, scope: !13148)
!13151 = !DILocation(line: 1750, column: 44, scope: !13148)
!13152 = !DILocation(line: 1750, column: 4, scope: !13148)
!13153 = !DILocation(line: 1753, column: 14, scope: !13148)
!13154 = !DILocation(line: 1753, column: 19, scope: !13148)
!13155 = !DILocation(line: 1753, column: 28, scope: !13148)
!13156 = !DILocation(line: 1753, column: 4, scope: !13148)
!13157 = !DILocation(line: 1755, column: 4, scope: !13148)
!13158 = !DILocation(line: 1755, column: 13, scope: !13148)
!13159 = !DILocation(line: 1755, column: 37, scope: !13148)
!13160 = !DILocation(line: 1757, column: 4, scope: !13148)
!13161 = !DILocation(line: 1758, column: 3, scope: !13148)
!13162 = !DILocation(line: 1759, column: 2, scope: !13119)
!13163 = !DILocation(line: 1761, column: 9, scope: !13164)
!13164 = distinct !DILexicalBlock(scope: !13028, file: !209, line: 1761, column: 2)
!13165 = !DILocation(line: 1761, column: 7, scope: !13164)
!13166 = !DILocation(line: 1761, column: 14, scope: !13167)
!13167 = distinct !DILexicalBlock(scope: !13164, file: !209, line: 1761, column: 2)
!13168 = !DILocation(line: 1761, column: 18, scope: !13167)
!13169 = !DILocation(line: 1761, column: 16, scope: !13167)
!13170 = !DILocation(line: 1761, column: 2, scope: !13164)
!13171 = !DILocation(line: 1762, column: 8, scope: !13172)
!13172 = distinct !DILexicalBlock(scope: !13173, file: !209, line: 1762, column: 7)
!13173 = distinct !DILexicalBlock(scope: !13167, file: !209, line: 1761, column: 31)
!13174 = !DILocation(line: 1762, column: 17, scope: !13172)
!13175 = !DILocation(line: 1762, column: 25, scope: !13172)
!13176 = !DILocation(line: 1762, column: 29, scope: !13172)
!13177 = !DILocation(line: 1762, column: 34, scope: !13172)
!13178 = !DILocation(line: 1762, column: 37, scope: !13172)
!13179 = !DILocation(line: 1762, column: 7, scope: !13173)
!13180 = !DILocation(line: 1763, column: 11, scope: !13172)
!13181 = !DILocation(line: 1763, column: 20, scope: !13172)
!13182 = !DILocation(line: 1763, column: 9, scope: !13172)
!13183 = !DILocation(line: 1763, column: 4, scope: !13172)
!13184 = !DILocation(line: 1765, column: 11, scope: !13172)
!13185 = !DILocation(line: 1765, column: 9, scope: !13172)
!13186 = !DILocation(line: 1766, column: 10, scope: !13173)
!13187 = !DILocation(line: 1766, column: 8, scope: !13173)
!13188 = !DILocation(line: 1767, column: 11, scope: !13173)
!13189 = !DILocation(line: 1767, column: 9, scope: !13173)
!13190 = !DILocation(line: 1768, column: 13, scope: !13173)
!13191 = !DILocation(line: 1768, column: 18, scope: !13173)
!13192 = !DILocation(line: 1768, column: 21, scope: !13173)
!13193 = !DILocation(line: 1768, column: 38, scope: !13173)
!13194 = !DILocation(line: 1768, column: 10, scope: !13173)
!13195 = !DILocation(line: 1771, column: 23, scope: !13173)
!13196 = !DILocation(line: 1771, column: 30, scope: !13173)
!13197 = !DILocation(line: 1771, column: 11, scope: !13173)
!13198 = !DILocation(line: 1771, column: 40, scope: !13173)
!13199 = !DILocation(line: 1771, column: 9, scope: !13173)
!13200 = !DILocation(line: 1772, column: 7, scope: !13201)
!13201 = distinct !DILexicalBlock(scope: !13173, file: !209, line: 1772, column: 7)
!13202 = !DILocation(line: 1772, column: 16, scope: !13201)
!13203 = !DILocation(line: 1772, column: 7, scope: !13173)
!13204 = !DILocation(line: 1773, column: 28, scope: !13201)
!13205 = !DILocation(line: 1773, column: 4, scope: !13201)
!13206 = !DILocation(line: 1773, column: 13, scope: !13201)
!13207 = !DILocation(line: 1773, column: 23, scope: !13201)
!13208 = !DILocation(line: 1773, column: 26, scope: !13201)
!13209 = !DILocation(line: 1775, column: 29, scope: !13201)
!13210 = !DILocation(line: 1775, column: 35, scope: !13201)
!13211 = !DILocation(line: 1775, column: 28, scope: !13201)
!13212 = !DILocation(line: 1775, column: 50, scope: !13201)
!13213 = !DILocation(line: 1775, column: 4, scope: !13201)
!13214 = !DILocation(line: 1775, column: 13, scope: !13201)
!13215 = !DILocation(line: 1775, column: 23, scope: !13201)
!13216 = !DILocation(line: 1775, column: 26, scope: !13201)
!13217 = !DILocation(line: 1777, column: 6, scope: !13173)
!13218 = !DILocation(line: 1778, column: 8, scope: !13219)
!13219 = distinct !DILexicalBlock(scope: !13173, file: !209, line: 1778, column: 7)
!13220 = !DILocation(line: 1778, column: 13, scope: !13219)
!13221 = !DILocation(line: 1778, column: 16, scope: !13219)
!13222 = !DILocation(line: 1778, column: 7, scope: !13173)
!13223 = !DILocation(line: 1779, column: 8, scope: !13224)
!13224 = distinct !DILexicalBlock(scope: !13225, file: !209, line: 1779, column: 8)
!13225 = distinct !DILexicalBlock(scope: !13219, file: !209, line: 1778, column: 34)
!13226 = !DILocation(line: 1779, column: 17, scope: !13224)
!13227 = !DILocation(line: 1779, column: 8, scope: !13225)
!13228 = !DILocation(line: 1780, column: 15, scope: !13224)
!13229 = !DILocation(line: 1780, column: 20, scope: !13224)
!13230 = !DILocation(line: 1780, column: 37, scope: !13224)
!13231 = !DILocation(line: 1780, column: 5, scope: !13224)
!13232 = !DILocation(line: 1782, column: 3, scope: !13225)
!13233 = !DILocation(line: 1783, column: 8, scope: !13234)
!13234 = distinct !DILexicalBlock(scope: !13235, file: !209, line: 1783, column: 8)
!13235 = distinct !DILexicalBlock(scope: !13219, file: !209, line: 1782, column: 10)
!13236 = !DILocation(line: 1783, column: 17, scope: !13234)
!13237 = !DILocation(line: 1783, column: 8, scope: !13235)
!13238 = !DILocation(line: 1784, column: 10, scope: !13234)
!13239 = !DILocation(line: 1784, column: 5, scope: !13234)
!13240 = !DILocation(line: 1785, column: 13, scope: !13241)
!13241 = distinct !DILexicalBlock(scope: !13234, file: !209, line: 1785, column: 13)
!13242 = !DILocation(line: 1785, column: 22, scope: !13241)
!13243 = !DILocation(line: 1785, column: 13, scope: !13234)
!13244 = !DILocation(line: 1786, column: 10, scope: !13241)
!13245 = !DILocation(line: 1786, column: 5, scope: !13241)
!13246 = !DILocation(line: 1787, column: 12, scope: !13235)
!13247 = !DILocation(line: 1787, column: 4, scope: !13235)
!13248 = !DILocation(line: 1789, column: 8, scope: !13249)
!13249 = distinct !DILexicalBlock(scope: !13235, file: !209, line: 1787, column: 18)
!13250 = !DILocation(line: 1790, column: 5, scope: !13249)
!13251 = !DILocation(line: 1792, column: 8, scope: !13249)
!13252 = !DILocation(line: 1793, column: 5, scope: !13249)
!13253 = !DILocation(line: 1795, column: 8, scope: !13249)
!13254 = !DILocation(line: 1796, column: 5, scope: !13249)
!13255 = !DILocation(line: 1798, column: 5, scope: !13249)
!13256 = !DILocation(line: 1801, column: 9, scope: !13173)
!13257 = !DILocation(line: 1801, column: 6, scope: !13173)
!13258 = !DILocation(line: 1803, column: 13, scope: !13173)
!13259 = !DILocation(line: 1803, column: 18, scope: !13173)
!13260 = !DILocation(line: 1803, column: 3, scope: !13173)
!13261 = !DILocation(line: 1805, column: 8, scope: !13262)
!13262 = distinct !DILexicalBlock(scope: !13173, file: !209, line: 1805, column: 7)
!13263 = !DILocation(line: 1805, column: 17, scope: !13262)
!13264 = !DILocation(line: 1805, column: 7, scope: !13173)
!13265 = !DILocation(line: 1806, column: 9, scope: !13266)
!13266 = distinct !DILexicalBlock(scope: !13262, file: !209, line: 1805, column: 26)
!13267 = !DILocation(line: 1806, column: 7, scope: !13266)
!13268 = !DILocation(line: 1808, column: 8, scope: !13269)
!13269 = distinct !DILexicalBlock(scope: !13266, file: !209, line: 1808, column: 8)
!13270 = !DILocation(line: 1808, column: 13, scope: !13269)
!13271 = !DILocation(line: 1808, column: 20, scope: !13269)
!13272 = !DILocation(line: 1808, column: 10, scope: !13269)
!13273 = !DILocation(line: 1808, column: 8, scope: !13266)
!13274 = !DILocation(line: 1809, column: 8, scope: !13269)
!13275 = !DILocation(line: 1809, column: 5, scope: !13269)
!13276 = !DILocation(line: 1810, column: 8, scope: !13277)
!13277 = distinct !DILexicalBlock(scope: !13266, file: !209, line: 1810, column: 8)
!13278 = !DILocation(line: 1810, column: 8, scope: !13266)
!13279 = !DILocation(line: 1811, column: 8, scope: !13277)
!13280 = !DILocation(line: 1811, column: 5, scope: !13277)
!13281 = !DILocation(line: 1813, column: 14, scope: !13266)
!13282 = !DILocation(line: 1813, column: 19, scope: !13266)
!13283 = !DILocation(line: 1813, column: 4, scope: !13266)
!13284 = !DILocation(line: 1814, column: 3, scope: !13266)
!13285 = !DILocation(line: 1815, column: 2, scope: !13173)
!13286 = !DILocation(line: 1761, column: 27, scope: !13167)
!13287 = !DILocation(line: 1761, column: 2, scope: !13167)
!13288 = distinct !{!13288, !13170, !13289}
!13289 = !DILocation(line: 1815, column: 2, scope: !13164)
!13290 = !DILocation(line: 1818, column: 7, scope: !13291)
!13291 = distinct !DILexicalBlock(scope: !13028, file: !209, line: 1818, column: 6)
!13292 = !DILocation(line: 1818, column: 16, scope: !13291)
!13293 = !DILocation(line: 1818, column: 24, scope: !13291)
!13294 = !DILocation(line: 1818, column: 28, scope: !13291)
!13295 = !DILocation(line: 1818, column: 37, scope: !13291)
!13296 = !DILocation(line: 1818, column: 6, scope: !13028)
!13297 = !DILocation(line: 1819, column: 29, scope: !13291)
!13298 = !DILocation(line: 1819, column: 3, scope: !13291)
!13299 = !DILocation(line: 1820, column: 1, scope: !13028)
!13300 = !DILocalVariable(name: "dev", arg: 1, scope: !4385, file: !209, line: 776, type: !3350)
!13301 = !DILocation(line: 776, column: 52, scope: !4385)
!13302 = !DILocalVariable(name: "devpriv", scope: !4385, file: !209, line: 778, type: !4731)
!13303 = !DILocation(line: 778, column: 21, scope: !4385)
!13304 = !DILocation(line: 778, column: 31, scope: !4385)
!13305 = !DILocation(line: 778, column: 36, scope: !4385)
!13306 = !DILocalVariable(name: "i", scope: !4385, file: !209, line: 780, type: !429)
!13307 = !DILocation(line: 780, column: 6, scope: !4385)
!13308 = !DILocation(line: 782, column: 6, scope: !13309)
!13309 = distinct !DILexicalBlock(scope: !4385, file: !209, line: 782, column: 6)
!13310 = !DILocation(line: 782, column: 15, scope: !13309)
!13311 = !DILocation(line: 782, column: 6, scope: !4385)
!13312 = !DILocation(line: 784, column: 13, scope: !13313)
!13313 = distinct !DILexicalBlock(scope: !13309, file: !209, line: 782, column: 24)
!13314 = !DILocation(line: 784, column: 3, scope: !13313)
!13315 = !DILocation(line: 785, column: 13, scope: !13313)
!13316 = !DILocation(line: 785, column: 3, scope: !13313)
!13317 = !DILocation(line: 787, column: 10, scope: !13318)
!13318 = distinct !DILexicalBlock(scope: !13313, file: !209, line: 787, column: 3)
!13319 = !DILocation(line: 787, column: 8, scope: !13318)
!13320 = !DILocation(line: 787, column: 15, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13318, file: !209, line: 787, column: 3)
!13322 = !DILocation(line: 787, column: 17, scope: !13321)
!13323 = !DILocation(line: 787, column: 3, scope: !13318)
!13324 = !DILocation(line: 788, column: 19, scope: !13325)
!13325 = distinct !DILexicalBlock(scope: !13326, file: !209, line: 788, column: 8)
!13326 = distinct !DILexicalBlock(scope: !13321, file: !209, line: 787, column: 33)
!13327 = !DILocation(line: 788, column: 10, scope: !13325)
!13328 = !DILocation(line: 788, column: 51, scope: !13325)
!13329 = !DILocation(line: 788, column: 8, scope: !13326)
!13330 = !DILocation(line: 789, column: 5, scope: !13325)
!13331 = !DILocation(line: 790, column: 4, scope: !13332)
!13332 = distinct !DILexicalBlock(scope: !13333, file: !209, line: 790, column: 4)
!13333 = distinct !DILexicalBlock(scope: !13334, file: !209, line: 790, column: 4)
!13334 = distinct !DILexicalBlock(scope: !13335, file: !209, line: 790, column: 4)
!13335 = distinct !DILexicalBlock(scope: !13326, file: !209, line: 790, column: 4)
!13336 = !DILocation(line: 791, column: 3, scope: !13326)
!13337 = !DILocation(line: 787, column: 29, scope: !13321)
!13338 = !DILocation(line: 787, column: 3, scope: !13321)
!13339 = distinct !{!13339, !13323, !13340}
!13340 = !DILocation(line: 791, column: 3, scope: !13318)
!13341 = !DILocation(line: 792, column: 7, scope: !13342)
!13342 = distinct !DILexicalBlock(scope: !13313, file: !209, line: 792, column: 7)
!13343 = !DILocation(line: 792, column: 9, scope: !13342)
!13344 = !DILocation(line: 792, column: 7, scope: !13313)
!13345 = !DILocation(line: 793, column: 4, scope: !13342)
!13346 = !DILocation(line: 794, column: 2, scope: !13313)
!13347 = !DILocation(line: 795, column: 17, scope: !13348)
!13348 = distinct !DILexicalBlock(scope: !13309, file: !209, line: 794, column: 9)
!13349 = !DILocation(line: 795, column: 3, scope: !13348)
!13350 = !DILocation(line: 796, column: 7, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13348, file: !209, line: 796, column: 7)
!13352 = !DILocation(line: 796, column: 16, scope: !13351)
!13353 = !DILocation(line: 796, column: 7, scope: !13348)
!13354 = !DILocation(line: 797, column: 14, scope: !13355)
!13355 = distinct !DILexicalBlock(scope: !13351, file: !209, line: 796, column: 25)
!13356 = !DILocation(line: 797, column: 4, scope: !13355)
!13357 = !DILocation(line: 798, column: 14, scope: !13355)
!13358 = !DILocation(line: 798, column: 4, scope: !13355)
!13359 = !DILocation(line: 811, column: 3, scope: !13355)
!13360 = !DILocation(line: 813, column: 1, scope: !4385)
!13361 = distinct !DISubprogram(name: "ni_m_series_load_channelgain_list", scope: !209, file: !209, line: 1606, type: !13362, scopeLine: 1609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!13362 = !DISubroutineType(types: !13363)
!13363 = !{null, !3350, !7, !1365}
!13364 = !DILocalVariable(name: "dev", arg: 1, scope: !13361, file: !209, line: 1606, type: !3350)
!13365 = !DILocation(line: 1606, column: 69, scope: !13361)
!13366 = !DILocalVariable(name: "n_chan", arg: 2, scope: !13361, file: !209, line: 1607, type: !7)
!13367 = !DILocation(line: 1607, column: 25, scope: !13361)
!13368 = !DILocalVariable(name: "list", arg: 3, scope: !13361, file: !209, line: 1608, type: !1365)
!13369 = !DILocation(line: 1608, column: 26, scope: !13361)
!13370 = !DILocalVariable(name: "board", scope: !13361, file: !209, line: 1610, type: !4959)
!13371 = !DILocation(line: 1610, column: 32, scope: !13361)
!13372 = !DILocation(line: 1610, column: 40, scope: !13361)
!13373 = !DILocation(line: 1610, column: 45, scope: !13361)
!13374 = !DILocalVariable(name: "devpriv", scope: !13361, file: !209, line: 1611, type: !4731)
!13375 = !DILocation(line: 1611, column: 21, scope: !13361)
!13376 = !DILocation(line: 1611, column: 31, scope: !13361)
!13377 = !DILocation(line: 1611, column: 36, scope: !13361)
!13378 = !DILocalVariable(name: "chan", scope: !13361, file: !209, line: 1612, type: !7)
!13379 = !DILocation(line: 1612, column: 15, scope: !13361)
!13380 = !DILocalVariable(name: "range", scope: !13361, file: !209, line: 1612, type: !7)
!13381 = !DILocation(line: 1612, column: 21, scope: !13361)
!13382 = !DILocalVariable(name: "aref", scope: !13361, file: !209, line: 1612, type: !7)
!13383 = !DILocation(line: 1612, column: 28, scope: !13361)
!13384 = !DILocalVariable(name: "i", scope: !13361, file: !209, line: 1613, type: !7)
!13385 = !DILocation(line: 1613, column: 15, scope: !13361)
!13386 = !DILocalVariable(name: "dither", scope: !13361, file: !209, line: 1614, type: !7)
!13387 = !DILocation(line: 1614, column: 15, scope: !13361)
!13388 = !DILocalVariable(name: "range_code", scope: !13361, file: !209, line: 1615, type: !7)
!13389 = !DILocation(line: 1615, column: 15, scope: !13361)
!13390 = !DILocation(line: 1617, column: 16, scope: !13361)
!13391 = !DILocation(line: 1617, column: 2, scope: !13361)
!13392 = !DILocation(line: 1619, column: 7, scope: !13393)
!13393 = distinct !DILexicalBlock(scope: !13361, file: !209, line: 1619, column: 6)
!13394 = !DILocation(line: 1619, column: 15, scope: !13393)
!13395 = !DILocation(line: 1619, column: 6, scope: !13361)
!13396 = !DILocalVariable(name: "bypass_bits", scope: !13397, file: !209, line: 1620, type: !7)
!13397 = distinct !DILexicalBlock(scope: !13393, file: !209, line: 1619, column: 33)
!13398 = !DILocation(line: 1620, column: 16, scope: !13397)
!13399 = !DILocation(line: 1622, column: 10, scope: !13397)
!13400 = !DILocation(line: 1622, column: 8, scope: !13397)
!13401 = !DILocation(line: 1623, column: 11, scope: !13397)
!13402 = !DILocation(line: 1623, column: 9, scope: !13397)
!13403 = !DILocation(line: 1624, column: 28, scope: !13397)
!13404 = !DILocation(line: 1624, column: 35, scope: !13397)
!13405 = !DILocation(line: 1624, column: 16, scope: !13397)
!13406 = !DILocation(line: 1624, column: 45, scope: !13397)
!13407 = !DILocation(line: 1624, column: 14, scope: !13397)
!13408 = !DILocation(line: 1625, column: 13, scope: !13397)
!13409 = !DILocation(line: 1625, column: 21, scope: !13397)
!13410 = !DILocation(line: 1625, column: 38, scope: !13397)
!13411 = !DILocation(line: 1625, column: 10, scope: !13397)
!13412 = !DILocation(line: 1627, column: 10, scope: !13397)
!13413 = !DILocation(line: 1626, column: 38, scope: !13397)
!13414 = !DILocation(line: 1628, column: 10, scope: !13397)
!13415 = !DILocation(line: 1627, column: 40, scope: !13397)
!13416 = !DILocation(line: 1629, column: 10, scope: !13397)
!13417 = !DILocation(line: 1629, column: 19, scope: !13397)
!13418 = !DILocation(line: 1628, column: 46, scope: !13397)
!13419 = !DILocation(line: 1626, column: 17, scope: !13397)
!13420 = !DILocation(line: 1626, column: 15, scope: !13397)
!13421 = !DILocation(line: 1630, column: 7, scope: !13422)
!13422 = distinct !DILexicalBlock(scope: !13397, file: !209, line: 1630, column: 7)
!13423 = !DILocation(line: 1630, column: 7, scope: !13397)
!13424 = !DILocation(line: 1631, column: 16, scope: !13422)
!13425 = !DILocation(line: 1631, column: 4, scope: !13422)
!13426 = !DILocation(line: 1633, column: 15, scope: !13397)
!13427 = !DILocation(line: 1634, column: 13, scope: !13397)
!13428 = !DILocation(line: 1634, column: 18, scope: !13397)
!13429 = !DILocation(line: 1634, column: 3, scope: !13397)
!13430 = !DILocation(line: 1635, column: 2, scope: !13397)
!13431 = !DILocation(line: 1636, column: 13, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13393, file: !209, line: 1635, column: 9)
!13433 = !DILocation(line: 1636, column: 3, scope: !13432)
!13434 = !DILocation(line: 1638, column: 9, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13361, file: !209, line: 1638, column: 2)
!13436 = !DILocation(line: 1638, column: 7, scope: !13435)
!13437 = !DILocation(line: 1638, column: 14, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !13435, file: !209, line: 1638, column: 2)
!13439 = !DILocation(line: 1638, column: 18, scope: !13438)
!13440 = !DILocation(line: 1638, column: 16, scope: !13438)
!13441 = !DILocation(line: 1638, column: 2, scope: !13435)
!13442 = !DILocalVariable(name: "config_bits", scope: !13443, file: !209, line: 1639, type: !7)
!13443 = distinct !DILexicalBlock(scope: !13438, file: !209, line: 1638, column: 31)
!13444 = !DILocation(line: 1639, column: 16, scope: !13443)
!13445 = !DILocation(line: 1641, column: 10, scope: !13443)
!13446 = !DILocation(line: 1641, column: 8, scope: !13443)
!13447 = !DILocation(line: 1642, column: 10, scope: !13443)
!13448 = !DILocation(line: 1642, column: 8, scope: !13443)
!13449 = !DILocation(line: 1643, column: 11, scope: !13443)
!13450 = !DILocation(line: 1643, column: 9, scope: !13443)
!13451 = !DILocation(line: 1644, column: 13, scope: !13443)
!13452 = !DILocation(line: 1644, column: 18, scope: !13443)
!13453 = !DILocation(line: 1644, column: 21, scope: !13443)
!13454 = !DILocation(line: 1644, column: 38, scope: !13443)
!13455 = !DILocation(line: 1644, column: 10, scope: !13443)
!13456 = !DILocation(line: 1646, column: 28, scope: !13443)
!13457 = !DILocation(line: 1646, column: 35, scope: !13443)
!13458 = !DILocation(line: 1646, column: 16, scope: !13443)
!13459 = !DILocation(line: 1646, column: 45, scope: !13443)
!13460 = !DILocation(line: 1646, column: 14, scope: !13443)
!13461 = !DILocation(line: 1647, column: 3, scope: !13443)
!13462 = !DILocation(line: 1647, column: 12, scope: !13443)
!13463 = !DILocation(line: 1647, column: 22, scope: !13443)
!13464 = !DILocation(line: 1647, column: 25, scope: !13443)
!13465 = !DILocation(line: 1648, column: 11, scope: !13443)
!13466 = !DILocation(line: 1648, column: 3, scope: !13443)
!13467 = !DILocation(line: 1650, column: 16, scope: !13468)
!13468 = distinct !DILexicalBlock(scope: !13443, file: !209, line: 1648, column: 17)
!13469 = !DILocation(line: 1651, column: 4, scope: !13468)
!13470 = !DILocation(line: 1653, column: 16, scope: !13468)
!13471 = !DILocation(line: 1654, column: 4, scope: !13468)
!13472 = !DILocation(line: 1656, column: 16, scope: !13468)
!13473 = !DILocation(line: 1657, column: 4, scope: !13468)
!13474 = !DILocation(line: 1659, column: 4, scope: !13468)
!13475 = !DILocation(line: 1661, column: 18, scope: !13443)
!13476 = !DILocation(line: 1661, column: 15, scope: !13443)
!13477 = !DILocation(line: 1662, column: 18, scope: !13443)
!13478 = !DILocation(line: 1662, column: 15, scope: !13443)
!13479 = !DILocation(line: 1663, column: 18, scope: !13443)
!13480 = !DILocation(line: 1663, column: 15, scope: !13443)
!13481 = !DILocation(line: 1664, column: 7, scope: !13482)
!13482 = distinct !DILexicalBlock(scope: !13443, file: !209, line: 1664, column: 7)
!13483 = !DILocation(line: 1664, column: 12, scope: !13482)
!13484 = !DILocation(line: 1664, column: 19, scope: !13482)
!13485 = !DILocation(line: 1664, column: 9, scope: !13482)
!13486 = !DILocation(line: 1664, column: 7, scope: !13443)
!13487 = !DILocation(line: 1665, column: 16, scope: !13482)
!13488 = !DILocation(line: 1665, column: 4, scope: !13482)
!13489 = !DILocation(line: 1666, column: 7, scope: !13490)
!13490 = distinct !DILexicalBlock(scope: !13443, file: !209, line: 1666, column: 7)
!13491 = !DILocation(line: 1666, column: 7, scope: !13443)
!13492 = !DILocation(line: 1667, column: 16, scope: !13490)
!13493 = !DILocation(line: 1667, column: 4, scope: !13490)
!13494 = !DILocation(line: 1669, column: 15, scope: !13443)
!13495 = !DILocation(line: 1670, column: 13, scope: !13443)
!13496 = !DILocation(line: 1670, column: 18, scope: !13443)
!13497 = !DILocation(line: 1670, column: 3, scope: !13443)
!13498 = !DILocation(line: 1671, column: 2, scope: !13443)
!13499 = !DILocation(line: 1638, column: 27, scope: !13438)
!13500 = !DILocation(line: 1638, column: 2, scope: !13438)
!13501 = distinct !{!13501, !13441, !13502}
!13502 = !DILocation(line: 1671, column: 2, scope: !13435)
!13503 = !DILocation(line: 1672, column: 28, scope: !13361)
!13504 = !DILocation(line: 1672, column: 2, scope: !13361)
!13505 = !DILocation(line: 1673, column: 1, scope: !13361)
!13506 = distinct !DISubprogram(name: "ni_prime_channelgain_list", scope: !209, file: !209, line: 1590, type: !4265, scopeLine: 1591, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!13507 = !DILocalVariable(name: "dev", arg: 1, scope: !13506, file: !209, line: 1590, type: !3350)
!13508 = !DILocation(line: 1590, column: 61, scope: !13506)
!13509 = !DILocalVariable(name: "i", scope: !13506, file: !209, line: 1592, type: !429)
!13510 = !DILocation(line: 1592, column: 6, scope: !13506)
!13511 = !DILocation(line: 1594, column: 16, scope: !13506)
!13512 = !DILocation(line: 1594, column: 2, scope: !13506)
!13513 = !DILocation(line: 1595, column: 9, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !13506, file: !209, line: 1595, column: 2)
!13515 = !DILocation(line: 1595, column: 7, scope: !13514)
!13516 = !DILocation(line: 1595, column: 14, scope: !13517)
!13517 = distinct !DILexicalBlock(scope: !13514, file: !209, line: 1595, column: 2)
!13518 = !DILocation(line: 1595, column: 16, scope: !13517)
!13519 = !DILocation(line: 1595, column: 2, scope: !13514)
!13520 = !DILocation(line: 1596, column: 22, scope: !13521)
!13521 = distinct !DILexicalBlock(scope: !13522, file: !209, line: 1596, column: 7)
!13522 = distinct !DILexicalBlock(scope: !13517, file: !209, line: 1595, column: 35)
!13523 = !DILocation(line: 1596, column: 9, scope: !13521)
!13524 = !DILocation(line: 1596, column: 49, scope: !13521)
!13525 = !DILocation(line: 1596, column: 7, scope: !13522)
!13526 = !DILocation(line: 1598, column: 18, scope: !13527)
!13527 = distinct !DILexicalBlock(scope: !13521, file: !209, line: 1597, column: 35)
!13528 = !DILocation(line: 1598, column: 4, scope: !13527)
!13529 = !DILocation(line: 1599, column: 4, scope: !13527)
!13530 = !DILocation(line: 1601, column: 3, scope: !13531)
!13531 = distinct !DILexicalBlock(scope: !13532, file: !209, line: 1601, column: 3)
!13532 = distinct !DILexicalBlock(scope: !13533, file: !209, line: 1601, column: 3)
!13533 = distinct !DILexicalBlock(scope: !13534, file: !209, line: 1601, column: 3)
!13534 = distinct !DILexicalBlock(scope: !13522, file: !209, line: 1601, column: 3)
!13535 = !DILocation(line: 1602, column: 2, scope: !13522)
!13536 = !DILocation(line: 1595, column: 30, scope: !13517)
!13537 = !DILocation(line: 1595, column: 2, scope: !13517)
!13538 = distinct !{!13538, !13519, !13539}
!13539 = !DILocation(line: 1602, column: 2, scope: !13514)
!13540 = !DILocation(line: 1603, column: 2, scope: !13506)
!13541 = !DILocation(line: 1604, column: 1, scope: !13506)
!13542 = distinct !DISubprogram(name: "ni_min_ai_scan_period_ns", scope: !209, file: !209, line: 1989, type: !7343, scopeLine: 1991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!13543 = !DILocalVariable(name: "dev", arg: 1, scope: !13542, file: !209, line: 1989, type: !3350)
!13544 = !DILocation(line: 1989, column: 68, scope: !13542)
!13545 = !DILocalVariable(name: "num_channels", arg: 2, scope: !13542, file: !209, line: 1990, type: !7)
!13546 = !DILocation(line: 1990, column: 24, scope: !13542)
!13547 = !DILocalVariable(name: "board", scope: !13542, file: !209, line: 1992, type: !4959)
!13548 = !DILocation(line: 1992, column: 32, scope: !13542)
!13549 = !DILocation(line: 1992, column: 40, scope: !13542)
!13550 = !DILocation(line: 1992, column: 45, scope: !13542)
!13551 = !DILocalVariable(name: "devpriv", scope: !13542, file: !209, line: 1993, type: !4731)
!13552 = !DILocation(line: 1993, column: 21, scope: !13542)
!13553 = !DILocation(line: 1993, column: 31, scope: !13542)
!13554 = !DILocation(line: 1993, column: 36, scope: !13542)
!13555 = !DILocation(line: 1996, column: 6, scope: !13556)
!13556 = distinct !DILexicalBlock(scope: !13542, file: !209, line: 1996, column: 6)
!13557 = !DILocation(line: 1996, column: 15, scope: !13556)
!13558 = !DILocation(line: 1996, column: 23, scope: !13556)
!13559 = !DILocation(line: 1996, column: 26, scope: !13556)
!13560 = !DILocation(line: 1996, column: 35, scope: !13556)
!13561 = !DILocation(line: 1996, column: 6, scope: !13542)
!13562 = !DILocation(line: 1997, column: 10, scope: !13556)
!13563 = !DILocation(line: 1997, column: 17, scope: !13556)
!13564 = !DILocation(line: 1997, column: 3, scope: !13556)
!13565 = !DILocation(line: 2000, column: 9, scope: !13542)
!13566 = !DILocation(line: 2000, column: 16, scope: !13542)
!13567 = !DILocation(line: 2000, column: 27, scope: !13542)
!13568 = !DILocation(line: 2000, column: 25, scope: !13542)
!13569 = !DILocation(line: 2000, column: 2, scope: !13542)
!13570 = !DILocation(line: 2001, column: 1, scope: !13542)
!13571 = distinct !DISubprogram(name: "comedi_check_trigger_src", scope: !233, file: !233, line: 859, type: !13572, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!13572 = !DISubroutineType(types: !13573)
!13573 = !{!429, !1365, !7}
!13574 = !DILocalVariable(name: "src", arg: 1, scope: !13571, file: !233, line: 859, type: !1365)
!13575 = !DILocation(line: 859, column: 58, scope: !13571)
!13576 = !DILocalVariable(name: "flags", arg: 2, scope: !13571, file: !233, line: 860, type: !7)
!13577 = !DILocation(line: 860, column: 22, scope: !13571)
!13578 = !DILocalVariable(name: "orig_src", scope: !13571, file: !233, line: 862, type: !7)
!13579 = !DILocation(line: 862, column: 15, scope: !13571)
!13580 = !DILocation(line: 862, column: 27, scope: !13571)
!13581 = !DILocation(line: 862, column: 26, scope: !13571)
!13582 = !DILocation(line: 864, column: 9, scope: !13571)
!13583 = !DILocation(line: 864, column: 20, scope: !13571)
!13584 = !DILocation(line: 864, column: 18, scope: !13571)
!13585 = !DILocation(line: 864, column: 3, scope: !13571)
!13586 = !DILocation(line: 864, column: 7, scope: !13571)
!13587 = !DILocation(line: 865, column: 7, scope: !13588)
!13588 = distinct !DILexicalBlock(scope: !13571, file: !233, line: 865, column: 6)
!13589 = !DILocation(line: 865, column: 6, scope: !13588)
!13590 = !DILocation(line: 865, column: 11, scope: !13588)
!13591 = !DILocation(line: 865, column: 27, scope: !13588)
!13592 = !DILocation(line: 865, column: 31, scope: !13588)
!13593 = !DILocation(line: 865, column: 30, scope: !13588)
!13594 = !DILocation(line: 865, column: 38, scope: !13588)
!13595 = !DILocation(line: 865, column: 35, scope: !13588)
!13596 = !DILocation(line: 865, column: 6, scope: !13571)
!13597 = !DILocation(line: 866, column: 3, scope: !13588)
!13598 = !DILocation(line: 867, column: 2, scope: !13571)
!13599 = !DILocation(line: 868, column: 1, scope: !13571)
!13600 = distinct !DISubprogram(name: "comedi_check_trigger_is_unique", scope: !233, file: !233, line: 878, type: !13601, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!13601 = !DISubroutineType(types: !13602)
!13602 = !{!429, !7}
!13603 = !DILocalVariable(name: "src", arg: 1, scope: !13600, file: !233, line: 878, type: !7)
!13604 = !DILocation(line: 878, column: 63, scope: !13600)
!13605 = !DILocation(line: 881, column: 7, scope: !13606)
!13606 = distinct !DILexicalBlock(scope: !13600, file: !233, line: 881, column: 6)
!13607 = !DILocation(line: 881, column: 14, scope: !13606)
!13608 = !DILocation(line: 881, column: 18, scope: !13606)
!13609 = !DILocation(line: 881, column: 11, scope: !13606)
!13610 = !DILocation(line: 881, column: 24, scope: !13606)
!13611 = !DILocation(line: 881, column: 6, scope: !13600)
!13612 = !DILocation(line: 882, column: 3, scope: !13606)
!13613 = !DILocation(line: 883, column: 2, scope: !13600)
!13614 = !DILocation(line: 884, column: 1, scope: !13600)
!13615 = distinct !DISubprogram(name: "comedi_check_trigger_arg_is", scope: !233, file: !233, line: 897, type: !13572, scopeLine: 899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!13616 = !DILocalVariable(name: "arg", arg: 1, scope: !13615, file: !233, line: 897, type: !1365)
!13617 = !DILocation(line: 897, column: 61, scope: !13615)
!13618 = !DILocalVariable(name: "val", arg: 2, scope: !13615, file: !233, line: 898, type: !7)
!13619 = !DILocation(line: 898, column: 25, scope: !13615)
!13620 = !DILocation(line: 900, column: 7, scope: !13621)
!13621 = distinct !DILexicalBlock(scope: !13615, file: !233, line: 900, column: 6)
!13622 = !DILocation(line: 900, column: 6, scope: !13621)
!13623 = !DILocation(line: 900, column: 14, scope: !13621)
!13624 = !DILocation(line: 900, column: 11, scope: !13621)
!13625 = !DILocation(line: 900, column: 6, scope: !13615)
!13626 = !DILocation(line: 901, column: 10, scope: !13627)
!13627 = distinct !DILexicalBlock(scope: !13621, file: !233, line: 900, column: 19)
!13628 = !DILocation(line: 901, column: 4, scope: !13627)
!13629 = !DILocation(line: 901, column: 8, scope: !13627)
!13630 = !DILocation(line: 902, column: 3, scope: !13627)
!13631 = !DILocation(line: 904, column: 2, scope: !13615)
!13632 = !DILocation(line: 905, column: 1, scope: !13615)
!13633 = distinct !DISubprogram(name: "ni_check_trigger_arg_roffs", scope: !4827, file: !4827, line: 315, type: !13634, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!13634 = !DISubroutineType(types: !13635)
!13635 = !{!429, !429, !4330, !4824, !4330}
!13636 = !DILocalVariable(name: "src", arg: 1, scope: !13633, file: !4827, line: 315, type: !429)
!13637 = !DILocation(line: 315, column: 36, scope: !13633)
!13638 = !DILocalVariable(name: "dest", arg: 2, scope: !13633, file: !4827, line: 315, type: !4330)
!13639 = !DILocation(line: 315, column: 51, scope: !13633)
!13640 = !DILocalVariable(name: "tables", arg: 3, scope: !13633, file: !4827, line: 316, type: !4824)
!13641 = !DILocation(line: 316, column: 41, scope: !13633)
!13642 = !DILocalVariable(name: "direct_reg_offset", arg: 4, scope: !13633, file: !4827, line: 317, type: !4330)
!13643 = !DILocation(line: 317, column: 21, scope: !13633)
!13644 = !DILocation(line: 319, column: 29, scope: !13645)
!13645 = distinct !DILexicalBlock(scope: !13633, file: !4827, line: 319, column: 6)
!13646 = !DILocation(line: 319, column: 34, scope: !13645)
!13647 = !DILocation(line: 319, column: 40, scope: !13645)
!13648 = !DILocation(line: 319, column: 48, scope: !13645)
!13649 = !DILocation(line: 319, column: 6, scope: !13645)
!13650 = !DILocation(line: 319, column: 67, scope: !13645)
!13651 = !DILocation(line: 319, column: 6, scope: !13633)
!13652 = !DILocation(line: 320, column: 3, scope: !13645)
!13653 = !DILocation(line: 321, column: 2, scope: !13633)
!13654 = !DILocation(line: 322, column: 1, scope: !13633)
!13655 = distinct !DISubprogram(name: "comedi_check_trigger_arg_min", scope: !233, file: !233, line: 918, type: !13572, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!13656 = !DILocalVariable(name: "arg", arg: 1, scope: !13655, file: !233, line: 918, type: !1365)
!13657 = !DILocation(line: 918, column: 62, scope: !13655)
!13658 = !DILocalVariable(name: "val", arg: 2, scope: !13655, file: !233, line: 919, type: !7)
!13659 = !DILocation(line: 919, column: 26, scope: !13655)
!13660 = !DILocation(line: 921, column: 7, scope: !13661)
!13661 = distinct !DILexicalBlock(scope: !13655, file: !233, line: 921, column: 6)
!13662 = !DILocation(line: 921, column: 6, scope: !13661)
!13663 = !DILocation(line: 921, column: 13, scope: !13661)
!13664 = !DILocation(line: 921, column: 11, scope: !13661)
!13665 = !DILocation(line: 921, column: 6, scope: !13655)
!13666 = !DILocation(line: 922, column: 10, scope: !13667)
!13667 = distinct !DILexicalBlock(scope: !13661, file: !233, line: 921, column: 18)
!13668 = !DILocation(line: 922, column: 4, scope: !13667)
!13669 = !DILocation(line: 922, column: 8, scope: !13667)
!13670 = !DILocation(line: 923, column: 3, scope: !13667)
!13671 = !DILocation(line: 925, column: 2, scope: !13655)
!13672 = !DILocation(line: 926, column: 1, scope: !13655)
!13673 = distinct !DISubprogram(name: "comedi_check_trigger_arg_max", scope: !233, file: !233, line: 939, type: !13572, scopeLine: 941, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!13674 = !DILocalVariable(name: "arg", arg: 1, scope: !13673, file: !233, line: 939, type: !1365)
!13675 = !DILocation(line: 939, column: 62, scope: !13673)
!13676 = !DILocalVariable(name: "val", arg: 2, scope: !13673, file: !233, line: 940, type: !7)
!13677 = !DILocation(line: 940, column: 26, scope: !13673)
!13678 = !DILocation(line: 942, column: 7, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !13673, file: !233, line: 942, column: 6)
!13680 = !DILocation(line: 942, column: 6, scope: !13679)
!13681 = !DILocation(line: 942, column: 13, scope: !13679)
!13682 = !DILocation(line: 942, column: 11, scope: !13679)
!13683 = !DILocation(line: 942, column: 6, scope: !13673)
!13684 = !DILocation(line: 943, column: 10, scope: !13685)
!13685 = distinct !DILexicalBlock(scope: !13679, file: !233, line: 942, column: 18)
!13686 = !DILocation(line: 943, column: 4, scope: !13685)
!13687 = !DILocation(line: 943, column: 8, scope: !13685)
!13688 = !DILocation(line: 944, column: 3, scope: !13685)
!13689 = !DILocation(line: 946, column: 2, scope: !13673)
!13690 = !DILocation(line: 947, column: 1, scope: !13673)
!13691 = distinct !DISubprogram(name: "ni_timer_to_ns", scope: !209, file: !209, line: 1948, type: !13692, scopeLine: 1949, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!13692 = !DISubroutineType(types: !13693)
!13693 = !{!7, !13694, !429}
!13694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13695, size: 64)
!13695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3351)
!13696 = !DILocalVariable(name: "dev", arg: 1, scope: !13691, file: !209, line: 1948, type: !13694)
!13697 = !DILocation(line: 1948, column: 64, scope: !13691)
!13698 = !DILocalVariable(name: "timer", arg: 2, scope: !13691, file: !209, line: 1948, type: !429)
!13699 = !DILocation(line: 1948, column: 73, scope: !13691)
!13700 = !DILocalVariable(name: "devpriv", scope: !13691, file: !209, line: 1950, type: !4731)
!13701 = !DILocation(line: 1950, column: 21, scope: !13691)
!13702 = !DILocation(line: 1950, column: 31, scope: !13691)
!13703 = !DILocation(line: 1950, column: 36, scope: !13691)
!13704 = !DILocation(line: 1952, column: 9, scope: !13691)
!13705 = !DILocation(line: 1952, column: 18, scope: !13691)
!13706 = !DILocation(line: 1952, column: 30, scope: !13691)
!13707 = !DILocation(line: 1952, column: 36, scope: !13691)
!13708 = !DILocation(line: 1952, column: 27, scope: !13691)
!13709 = !DILocation(line: 1952, column: 2, scope: !13691)
!13710 = distinct !DISubprogram(name: "ni_ns_to_timer", scope: !209, file: !209, line: 1927, type: !13711, scopeLine: 1929, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!13711 = !DISubroutineType(types: !13712)
!13712 = !{!429, !13694, !7, !7}
!13713 = !DILocalVariable(name: "dev", arg: 1, scope: !13710, file: !209, line: 1927, type: !13694)
!13714 = !DILocation(line: 1927, column: 55, scope: !13710)
!13715 = !DILocalVariable(name: "nanosec", arg: 2, scope: !13710, file: !209, line: 1928, type: !7)
!13716 = !DILocation(line: 1928, column: 19, scope: !13710)
!13717 = !DILocalVariable(name: "flags", arg: 3, scope: !13710, file: !209, line: 1928, type: !7)
!13718 = !DILocation(line: 1928, column: 41, scope: !13710)
!13719 = !DILocalVariable(name: "devpriv", scope: !13710, file: !209, line: 1930, type: !4731)
!13720 = !DILocation(line: 1930, column: 21, scope: !13710)
!13721 = !DILocation(line: 1930, column: 31, scope: !13710)
!13722 = !DILocation(line: 1930, column: 36, scope: !13710)
!13723 = !DILocalVariable(name: "divider", scope: !13710, file: !209, line: 1931, type: !429)
!13724 = !DILocation(line: 1931, column: 6, scope: !13710)
!13725 = !DILocation(line: 1933, column: 10, scope: !13710)
!13726 = !DILocation(line: 1933, column: 16, scope: !13710)
!13727 = !DILocation(line: 1933, column: 2, scope: !13710)
!13728 = !DILocation(line: 1933, column: 35, scope: !13710)
!13729 = !DILocalVariable(name: "__x", scope: !13730, file: !209, line: 1936, type: !7)
!13730 = distinct !DILexicalBlock(scope: !13731, file: !209, line: 1936, column: 13)
!13731 = distinct !DILexicalBlock(scope: !13710, file: !209, line: 1933, column: 35)
!13732 = !DILocation(line: 1936, column: 13, scope: !13730)
!13733 = !DILocalVariable(name: "__d", scope: !13730, file: !209, line: 1936, type: !7)
!13734 = !DILocation(line: 1936, column: 11, scope: !13731)
!13735 = !DILocation(line: 1937, column: 3, scope: !13731)
!13736 = !DILocation(line: 1939, column: 14, scope: !13731)
!13737 = !DILocation(line: 1939, column: 25, scope: !13731)
!13738 = !DILocation(line: 1939, column: 34, scope: !13731)
!13739 = !DILocation(line: 1939, column: 23, scope: !13731)
!13740 = !DILocation(line: 1939, column: 11, scope: !13731)
!13741 = !DILocation(line: 1940, column: 3, scope: !13731)
!13742 = !DILocation(line: 1942, column: 13, scope: !13731)
!13743 = !DILocation(line: 1942, column: 11, scope: !13731)
!13744 = !DILocation(line: 1943, column: 3, scope: !13731)
!13745 = !DILocation(line: 1945, column: 9, scope: !13710)
!13746 = !DILocation(line: 1945, column: 17, scope: !13710)
!13747 = !DILocation(line: 1945, column: 2, scope: !13710)
!13748 = distinct !DISubprogram(name: "ni_get_reg_value_roffs", scope: !4827, file: !4827, line: 266, type: !13749, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!13749 = !DISubroutineType(types: !13750)
!13750 = !{!11652, !429, !4330, !4824, !4330}
!13751 = !DILocalVariable(name: "src", arg: 1, scope: !13748, file: !4827, line: 266, type: !429)
!13752 = !DILocation(line: 266, column: 45, scope: !13748)
!13753 = !DILocalVariable(name: "dest", arg: 2, scope: !13748, file: !4827, line: 266, type: !4330)
!13754 = !DILocation(line: 266, column: 60, scope: !13748)
!13755 = !DILocalVariable(name: "tables", arg: 3, scope: !13748, file: !4827, line: 267, type: !4824)
!13756 = !DILocation(line: 267, column: 36, scope: !13748)
!13757 = !DILocalVariable(name: "direct_reg_offset", arg: 4, scope: !13748, file: !4827, line: 268, type: !4330)
!13758 = !DILocation(line: 268, column: 16, scope: !13748)
!13759 = !DILocation(line: 270, column: 6, scope: !13760)
!13760 = distinct !DILexicalBlock(scope: !13748, file: !4827, line: 270, column: 6)
!13761 = !DILocation(line: 270, column: 10, scope: !13760)
!13762 = !DILocation(line: 270, column: 6, scope: !13748)
!13763 = !DILocation(line: 271, column: 10, scope: !13764)
!13764 = distinct !DILexicalBlock(scope: !13760, file: !4827, line: 270, column: 27)
!13765 = !DILocation(line: 271, column: 7, scope: !13764)
!13766 = !DILocation(line: 276, column: 31, scope: !13767)
!13767 = distinct !DILexicalBlock(scope: !13764, file: !4827, line: 276, column: 7)
!13768 = !DILocation(line: 276, column: 36, scope: !13767)
!13769 = !DILocation(line: 276, column: 42, scope: !13767)
!13770 = !DILocation(line: 276, column: 7, scope: !13767)
!13771 = !DILocation(line: 276, column: 7, scope: !13764)
!13772 = !DILocation(line: 277, column: 11, scope: !13767)
!13773 = !DILocation(line: 277, column: 4, scope: !13767)
!13774 = !DILocation(line: 278, column: 3, scope: !13764)
!13775 = !DILocation(line: 285, column: 30, scope: !13748)
!13776 = !DILocation(line: 285, column: 35, scope: !13748)
!13777 = !DILocation(line: 285, column: 41, scope: !13748)
!13778 = !DILocation(line: 285, column: 9, scope: !13748)
!13779 = !DILocation(line: 285, column: 2, scope: !13748)
!13780 = !DILocation(line: 286, column: 1, scope: !13748)
!13781 = distinct !DISubprogram(name: "route_register_is_valid", scope: !4827, file: !4827, line: 243, type: !13782, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!13782 = !DISubroutineType(types: !13783)
!13783 = !{!918, !4845, !4330, !4824}
!13784 = !DILocalVariable(name: "src_sel_reg_value", arg: 1, scope: !13781, file: !4827, line: 243, type: !4845)
!13785 = !DILocation(line: 243, column: 53, scope: !13781)
!13786 = !DILocalVariable(name: "dest", arg: 2, scope: !13781, file: !4827, line: 244, type: !4330)
!13787 = !DILocation(line: 244, column: 19, scope: !13781)
!13788 = !DILocalVariable(name: "tables", arg: 3, scope: !13781, file: !4827, line: 245, type: !4824)
!13789 = !DILocation(line: 245, column: 39, scope: !13781)
!13790 = !DILocation(line: 247, column: 30, scope: !13781)
!13791 = !DILocation(line: 247, column: 49, scope: !13781)
!13792 = !DILocation(line: 247, column: 55, scope: !13781)
!13793 = !DILocation(line: 247, column: 9, scope: !13781)
!13794 = !DILocation(line: 247, column: 63, scope: !13781)
!13795 = !DILocation(line: 247, column: 2, scope: !13781)
!13796 = distinct !DISubprogram(name: "ni_stc_writel", scope: !209, file: !209, line: 458, type: !6638, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!13797 = !DILocalVariable(name: "dev", arg: 1, scope: !13796, file: !209, line: 458, type: !3350)
!13798 = !DILocation(line: 458, column: 49, scope: !13796)
!13799 = !DILocalVariable(name: "data", arg: 2, scope: !13796, file: !209, line: 459, type: !7)
!13800 = !DILocation(line: 459, column: 19, scope: !13796)
!13801 = !DILocalVariable(name: "reg", arg: 3, scope: !13796, file: !209, line: 459, type: !429)
!13802 = !DILocation(line: 459, column: 29, scope: !13796)
!13803 = !DILocalVariable(name: "devpriv", scope: !13796, file: !209, line: 461, type: !4731)
!13804 = !DILocation(line: 461, column: 21, scope: !13796)
!13805 = !DILocation(line: 461, column: 31, scope: !13796)
!13806 = !DILocation(line: 461, column: 36, scope: !13796)
!13807 = !DILocation(line: 463, column: 6, scope: !13808)
!13808 = distinct !DILexicalBlock(scope: !13796, file: !209, line: 463, column: 6)
!13809 = !DILocation(line: 463, column: 15, scope: !13808)
!13810 = !DILocation(line: 463, column: 6, scope: !13796)
!13811 = !DILocation(line: 464, column: 22, scope: !13812)
!13812 = distinct !DILexicalBlock(scope: !13808, file: !209, line: 463, column: 28)
!13813 = !DILocation(line: 464, column: 27, scope: !13812)
!13814 = !DILocation(line: 464, column: 33, scope: !13812)
!13815 = !DILocation(line: 464, column: 3, scope: !13812)
!13816 = !DILocation(line: 465, column: 2, scope: !13812)
!13817 = !DILocation(line: 466, column: 17, scope: !13818)
!13818 = distinct !DILexicalBlock(scope: !13808, file: !209, line: 465, column: 9)
!13819 = !DILocation(line: 466, column: 22, scope: !13818)
!13820 = !DILocation(line: 466, column: 27, scope: !13818)
!13821 = !DILocation(line: 466, column: 34, scope: !13818)
!13822 = !DILocation(line: 466, column: 3, scope: !13818)
!13823 = !DILocation(line: 467, column: 17, scope: !13818)
!13824 = !DILocation(line: 467, column: 22, scope: !13818)
!13825 = !DILocation(line: 467, column: 27, scope: !13818)
!13826 = !DILocation(line: 467, column: 37, scope: !13818)
!13827 = !DILocation(line: 467, column: 41, scope: !13818)
!13828 = !DILocation(line: 467, column: 3, scope: !13818)
!13829 = !DILocation(line: 469, column: 1, scope: !13796)
!13830 = distinct !DISubprogram(name: "ni_ai_setup_MITE_dma", scope: !209, file: !209, line: 1430, type: !4261, scopeLine: 1431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!13831 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !13832)
!13832 = distinct !DILocation(line: 1446, column: 3, scope: !13833)
!13833 = distinct !DILexicalBlock(scope: !13834, file: !209, line: 1445, column: 30)
!13834 = distinct !DILexicalBlock(scope: !13830, file: !209, line: 1445, column: 6)
!13835 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !13832)
!13836 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !13837)
!13837 = distinct !DILocation(line: 1459, column: 2, scope: !13830)
!13838 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !13837)
!13839 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !13840)
!13840 = distinct !DILocation(line: 1444, column: 2, scope: !13841)
!13841 = distinct !DILexicalBlock(scope: !13842, file: !209, line: 1444, column: 2)
!13842 = distinct !DILexicalBlock(scope: !13843, file: !209, line: 1444, column: 2)
!13843 = distinct !DILexicalBlock(scope: !13844, file: !209, line: 1444, column: 2)
!13844 = distinct !DILexicalBlock(scope: !13845, file: !209, line: 1444, column: 2)
!13845 = distinct !DILexicalBlock(scope: !13830, file: !209, line: 1444, column: 2)
!13846 = !DILocalVariable(name: "dev", arg: 1, scope: !13830, file: !209, line: 1430, type: !3350)
!13847 = !DILocation(line: 1430, column: 55, scope: !13830)
!13848 = !DILocalVariable(name: "devpriv", scope: !13830, file: !209, line: 1432, type: !4731)
!13849 = !DILocation(line: 1432, column: 21, scope: !13830)
!13850 = !DILocation(line: 1432, column: 31, scope: !13830)
!13851 = !DILocation(line: 1432, column: 36, scope: !13830)
!13852 = !DILocalVariable(name: "s", scope: !13830, file: !209, line: 1433, type: !4119)
!13853 = !DILocation(line: 1433, column: 27, scope: !13830)
!13854 = !DILocation(line: 1433, column: 31, scope: !13830)
!13855 = !DILocation(line: 1433, column: 36, scope: !13830)
!13856 = !DILocalVariable(name: "retval", scope: !13830, file: !209, line: 1434, type: !429)
!13857 = !DILocation(line: 1434, column: 6, scope: !13830)
!13858 = !DILocalVariable(name: "flags", scope: !13830, file: !209, line: 1435, type: !435)
!13859 = !DILocation(line: 1435, column: 16, scope: !13830)
!13860 = !DILocation(line: 1437, column: 38, scope: !13830)
!13861 = !DILocation(line: 1437, column: 11, scope: !13830)
!13862 = !DILocation(line: 1437, column: 9, scope: !13830)
!13863 = !DILocation(line: 1438, column: 6, scope: !13864)
!13864 = distinct !DILexicalBlock(scope: !13830, file: !209, line: 1438, column: 6)
!13865 = !DILocation(line: 1438, column: 6, scope: !13830)
!13866 = !DILocation(line: 1439, column: 10, scope: !13864)
!13867 = !DILocation(line: 1439, column: 3, scope: !13864)
!13868 = !DILocation(line: 1442, column: 25, scope: !13830)
!13869 = !DILocation(line: 1442, column: 28, scope: !13830)
!13870 = !DILocation(line: 1442, column: 31, scope: !13830)
!13871 = !DILocation(line: 1442, column: 38, scope: !13830)
!13872 = !DILocation(line: 1442, column: 2, scope: !13830)
!13873 = !DILocation(line: 1444, column: 2, scope: !13830)
!13874 = !DILocation(line: 1444, column: 2, scope: !13845)
!13875 = !DILocalVariable(name: "__dummy", scope: !13876, file: !209, line: 1444, type: !435)
!13876 = distinct !DILexicalBlock(scope: !13844, file: !209, line: 1444, column: 2)
!13877 = !DILocation(line: 1444, column: 2, scope: !13876)
!13878 = !DILocalVariable(name: "__dummy2", scope: !13876, file: !209, line: 1444, type: !435)
!13879 = !DILocation(line: 1444, column: 2, scope: !13844)
!13880 = !DILocation(line: 1444, column: 2, scope: !13843)
!13881 = !DILocation(line: 1444, column: 2, scope: !13882)
!13882 = distinct !DILexicalBlock(scope: !13843, file: !209, line: 1444, column: 2)
!13883 = !DILocalVariable(name: "__dummy", scope: !13884, file: !209, line: 1444, type: !435)
!13884 = distinct !DILexicalBlock(scope: !13885, file: !209, line: 1444, column: 2)
!13885 = distinct !DILexicalBlock(scope: !13882, file: !209, line: 1444, column: 2)
!13886 = !DILocation(line: 1444, column: 2, scope: !13884)
!13887 = !DILocalVariable(name: "__dummy2", scope: !13884, file: !209, line: 1444, type: !435)
!13888 = !DILocation(line: 1444, column: 2, scope: !13885)
!13889 = !DILocation(line: 1444, column: 2, scope: !13842)
!13890 = !{i32 -2141327730}
!13891 = !DILocation(line: 1444, column: 2, scope: !13841)
!13892 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !13840)
!13893 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !13840)
!13894 = !DILocation(line: 1445, column: 7, scope: !13834)
!13895 = !DILocation(line: 1445, column: 16, scope: !13834)
!13896 = !DILocation(line: 1445, column: 6, scope: !13830)
!13897 = !DILocation(line: 1446, column: 27, scope: !13833)
!13898 = !DILocation(line: 1446, column: 36, scope: !13833)
!13899 = !DILocation(line: 1446, column: 55, scope: !13833)
!13900 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !13832)
!13901 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !13832)
!13902 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !13832)
!13903 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !13832)
!13904 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !13832)
!13905 = !DILocation(line: 1447, column: 3, scope: !13833)
!13906 = !DILocation(line: 1450, column: 6, scope: !13907)
!13907 = distinct !DILexicalBlock(scope: !13830, file: !209, line: 1450, column: 6)
!13908 = !DILocation(line: 1450, column: 15, scope: !13907)
!13909 = !DILocation(line: 1450, column: 23, scope: !13907)
!13910 = !DILocation(line: 1450, column: 26, scope: !13907)
!13911 = !DILocation(line: 1450, column: 35, scope: !13907)
!13912 = !DILocation(line: 1450, column: 6, scope: !13830)
!13913 = !DILocation(line: 1451, column: 17, scope: !13907)
!13914 = !DILocation(line: 1451, column: 26, scope: !13907)
!13915 = !DILocation(line: 1451, column: 3, scope: !13907)
!13916 = !DILocation(line: 1452, column: 11, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13907, file: !209, line: 1452, column: 11)
!13918 = !DILocation(line: 1452, column: 20, scope: !13917)
!13919 = !DILocation(line: 1452, column: 11, scope: !13907)
!13920 = !DILocation(line: 1453, column: 17, scope: !13917)
!13921 = !DILocation(line: 1453, column: 26, scope: !13917)
!13922 = !DILocation(line: 1453, column: 3, scope: !13917)
!13923 = !DILocation(line: 1455, column: 17, scope: !13917)
!13924 = !DILocation(line: 1455, column: 26, scope: !13917)
!13925 = !DILocation(line: 1455, column: 3, scope: !13917)
!13926 = !DILocation(line: 1458, column: 15, scope: !13830)
!13927 = !DILocation(line: 1458, column: 24, scope: !13830)
!13928 = !DILocation(line: 1458, column: 2, scope: !13830)
!13929 = !DILocation(line: 1459, column: 26, scope: !13830)
!13930 = !DILocation(line: 1459, column: 35, scope: !13830)
!13931 = !DILocation(line: 1459, column: 54, scope: !13830)
!13932 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !13837)
!13933 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !13837)
!13934 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !13837)
!13935 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !13837)
!13936 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !13837)
!13937 = !DILocation(line: 1461, column: 2, scope: !13830)
!13938 = !DILocation(line: 1462, column: 1, scope: !13830)
!13939 = distinct !DISubprogram(name: "ni_ai_inttrig", scope: !209, file: !209, line: 2146, type: !4187, scopeLine: 2149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!13940 = !DILocalVariable(name: "dev", arg: 1, scope: !13939, file: !209, line: 2146, type: !3350)
!13941 = !DILocation(line: 2146, column: 48, scope: !13939)
!13942 = !DILocalVariable(name: "s", arg: 2, scope: !13939, file: !209, line: 2147, type: !4119)
!13943 = !DILocation(line: 2147, column: 30, scope: !13939)
!13944 = !DILocalVariable(name: "trig_num", arg: 3, scope: !13939, file: !209, line: 2148, type: !7)
!13945 = !DILocation(line: 2148, column: 18, scope: !13939)
!13946 = !DILocalVariable(name: "devpriv", scope: !13939, file: !209, line: 2150, type: !4731)
!13947 = !DILocation(line: 2150, column: 21, scope: !13939)
!13948 = !DILocation(line: 2150, column: 31, scope: !13939)
!13949 = !DILocation(line: 2150, column: 36, scope: !13939)
!13950 = !DILocalVariable(name: "cmd", scope: !13939, file: !209, line: 2151, type: !4239)
!13951 = !DILocation(line: 2151, column: 21, scope: !13939)
!13952 = !DILocation(line: 2151, column: 28, scope: !13939)
!13953 = !DILocation(line: 2151, column: 31, scope: !13939)
!13954 = !DILocation(line: 2151, column: 38, scope: !13939)
!13955 = !DILocation(line: 2153, column: 6, scope: !13956)
!13956 = distinct !DILexicalBlock(scope: !13939, file: !209, line: 2153, column: 6)
!13957 = !DILocation(line: 2153, column: 18, scope: !13956)
!13958 = !DILocation(line: 2153, column: 23, scope: !13956)
!13959 = !DILocation(line: 2153, column: 15, scope: !13956)
!13960 = !DILocation(line: 2153, column: 6, scope: !13939)
!13961 = !DILocation(line: 2154, column: 3, scope: !13956)
!13962 = !DILocation(line: 2156, column: 16, scope: !13939)
!13963 = !DILocation(line: 2156, column: 50, scope: !13939)
!13964 = !DILocation(line: 2156, column: 59, scope: !13939)
!13965 = !DILocation(line: 2156, column: 48, scope: !13939)
!13966 = !DILocation(line: 2156, column: 21, scope: !13939)
!13967 = !DILocation(line: 2156, column: 2, scope: !13939)
!13968 = !DILocation(line: 2158, column: 2, scope: !13939)
!13969 = !DILocation(line: 2158, column: 5, scope: !13939)
!13970 = !DILocation(line: 2158, column: 12, scope: !13939)
!13971 = !DILocation(line: 2158, column: 20, scope: !13939)
!13972 = !DILocation(line: 2160, column: 2, scope: !13939)
!13973 = !DILocation(line: 2161, column: 1, scope: !13939)
!13974 = distinct !DISubprogram(name: "ni_request_ai_mite_channel", scope: !209, file: !209, line: 561, type: !4261, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!13975 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !13976)
!13976 = distinct !DILocation(line: 571, column: 3, scope: !13977)
!13977 = distinct !DILexicalBlock(scope: !13978, file: !209, line: 570, column: 18)
!13978 = distinct !DILexicalBlock(scope: !13974, file: !209, line: 570, column: 6)
!13979 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !13976)
!13980 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !13981)
!13981 = distinct !DILocation(line: 583, column: 2, scope: !13974)
!13982 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !13981)
!13983 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !13984)
!13984 = distinct !DILocation(line: 568, column: 2, scope: !13985)
!13985 = distinct !DILexicalBlock(scope: !13986, file: !209, line: 568, column: 2)
!13986 = distinct !DILexicalBlock(scope: !13987, file: !209, line: 568, column: 2)
!13987 = distinct !DILexicalBlock(scope: !13988, file: !209, line: 568, column: 2)
!13988 = distinct !DILexicalBlock(scope: !13989, file: !209, line: 568, column: 2)
!13989 = distinct !DILexicalBlock(scope: !13974, file: !209, line: 568, column: 2)
!13990 = !DILocalVariable(name: "dev", arg: 1, scope: !13974, file: !209, line: 561, type: !3350)
!13991 = !DILocation(line: 561, column: 61, scope: !13974)
!13992 = !DILocalVariable(name: "devpriv", scope: !13974, file: !209, line: 563, type: !4731)
!13993 = !DILocation(line: 563, column: 21, scope: !13974)
!13994 = !DILocation(line: 563, column: 31, scope: !13974)
!13995 = !DILocation(line: 563, column: 36, scope: !13974)
!13996 = !DILocalVariable(name: "mite_chan", scope: !13974, file: !209, line: 564, type: !4775)
!13997 = !DILocation(line: 564, column: 23, scope: !13974)
!13998 = !DILocalVariable(name: "flags", scope: !13974, file: !209, line: 565, type: !435)
!13999 = !DILocation(line: 565, column: 16, scope: !13974)
!14000 = !DILocalVariable(name: "bits", scope: !13974, file: !209, line: 566, type: !7)
!14001 = !DILocation(line: 566, column: 15, scope: !13974)
!14002 = !DILocation(line: 568, column: 2, scope: !13974)
!14003 = !DILocation(line: 568, column: 2, scope: !13989)
!14004 = !DILocalVariable(name: "__dummy", scope: !14005, file: !209, line: 568, type: !435)
!14005 = distinct !DILexicalBlock(scope: !13988, file: !209, line: 568, column: 2)
!14006 = !DILocation(line: 568, column: 2, scope: !14005)
!14007 = !DILocalVariable(name: "__dummy2", scope: !14005, file: !209, line: 568, type: !435)
!14008 = !DILocation(line: 568, column: 2, scope: !13988)
!14009 = !DILocation(line: 568, column: 2, scope: !13987)
!14010 = !DILocation(line: 568, column: 2, scope: !14011)
!14011 = distinct !DILexicalBlock(scope: !13987, file: !209, line: 568, column: 2)
!14012 = !DILocalVariable(name: "__dummy", scope: !14013, file: !209, line: 568, type: !435)
!14013 = distinct !DILexicalBlock(scope: !14014, file: !209, line: 568, column: 2)
!14014 = distinct !DILexicalBlock(scope: !14011, file: !209, line: 568, column: 2)
!14015 = !DILocation(line: 568, column: 2, scope: !14013)
!14016 = !DILocalVariable(name: "__dummy2", scope: !14013, file: !209, line: 568, type: !435)
!14017 = !DILocation(line: 568, column: 2, scope: !14014)
!14018 = !DILocation(line: 568, column: 2, scope: !13986)
!14019 = !{i32 -2141352185}
!14020 = !DILocation(line: 568, column: 2, scope: !13985)
!14021 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !13984)
!14022 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !13984)
!14023 = !DILocation(line: 569, column: 35, scope: !13974)
!14024 = !DILocation(line: 569, column: 44, scope: !13974)
!14025 = !DILocation(line: 569, column: 50, scope: !13974)
!14026 = !DILocation(line: 569, column: 59, scope: !13974)
!14027 = !DILocation(line: 569, column: 14, scope: !13974)
!14028 = !DILocation(line: 569, column: 12, scope: !13974)
!14029 = !DILocation(line: 570, column: 7, scope: !13978)
!14030 = !DILocation(line: 570, column: 6, scope: !13974)
!14031 = !DILocation(line: 571, column: 27, scope: !13977)
!14032 = !DILocation(line: 571, column: 36, scope: !13977)
!14033 = !DILocation(line: 571, column: 55, scope: !13977)
!14034 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !13976)
!14035 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !13976)
!14036 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !13976)
!14037 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !13976)
!14038 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !13976)
!14039 = !DILocation(line: 572, column: 3, scope: !13977)
!14040 = !DILocation(line: 574, column: 3, scope: !13977)
!14041 = !DILocation(line: 576, column: 2, scope: !13974)
!14042 = !DILocation(line: 576, column: 13, scope: !13974)
!14043 = !DILocation(line: 576, column: 17, scope: !13974)
!14044 = !DILocation(line: 577, column: 26, scope: !13974)
!14045 = !DILocation(line: 577, column: 2, scope: !13974)
!14046 = !DILocation(line: 577, column: 11, scope: !13974)
!14047 = !DILocation(line: 577, column: 24, scope: !13974)
!14048 = !DILocation(line: 579, column: 9, scope: !13974)
!14049 = !DILocation(line: 579, column: 7, scope: !13974)
!14050 = !DILocation(line: 580, column: 18, scope: !13974)
!14051 = !DILocation(line: 581, column: 26, scope: !13974)
!14052 = !DILocation(line: 580, column: 2, scope: !13974)
!14053 = !DILocation(line: 583, column: 26, scope: !13974)
!14054 = !DILocation(line: 583, column: 35, scope: !13974)
!14055 = !DILocation(line: 583, column: 54, scope: !13974)
!14056 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !13981)
!14057 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !13981)
!14058 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !13981)
!14059 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !13981)
!14060 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !13981)
!14061 = !DILocation(line: 584, column: 2, scope: !13974)
!14062 = !DILocation(line: 585, column: 1, scope: !13974)
!14063 = distinct !DISubprogram(name: "ni_set_bitfield", scope: !209, file: !209, line: 506, type: !10867, scopeLine: 509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!14064 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !14065)
!14065 = distinct !DILocation(line: 550, column: 2, scope: !14063)
!14066 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !14065)
!14067 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !14068)
!14068 = distinct !DILocation(line: 513, column: 2, scope: !14069)
!14069 = distinct !DILexicalBlock(scope: !14070, file: !209, line: 513, column: 2)
!14070 = distinct !DILexicalBlock(scope: !14071, file: !209, line: 513, column: 2)
!14071 = distinct !DILexicalBlock(scope: !14072, file: !209, line: 513, column: 2)
!14072 = distinct !DILexicalBlock(scope: !14073, file: !209, line: 513, column: 2)
!14073 = distinct !DILexicalBlock(scope: !14063, file: !209, line: 513, column: 2)
!14074 = !DILocalVariable(name: "dev", arg: 1, scope: !14063, file: !209, line: 506, type: !3350)
!14075 = !DILocation(line: 506, column: 58, scope: !14063)
!14076 = !DILocalVariable(name: "reg", arg: 2, scope: !14063, file: !209, line: 506, type: !429)
!14077 = !DILocation(line: 506, column: 67, scope: !14063)
!14078 = !DILocalVariable(name: "bit_mask", arg: 3, scope: !14063, file: !209, line: 507, type: !7)
!14079 = !DILocation(line: 507, column: 21, scope: !14063)
!14080 = !DILocalVariable(name: "bit_values", arg: 4, scope: !14063, file: !209, line: 508, type: !7)
!14081 = !DILocation(line: 508, column: 21, scope: !14063)
!14082 = !DILocalVariable(name: "devpriv", scope: !14063, file: !209, line: 510, type: !4731)
!14083 = !DILocation(line: 510, column: 21, scope: !14063)
!14084 = !DILocation(line: 510, column: 31, scope: !14063)
!14085 = !DILocation(line: 510, column: 36, scope: !14063)
!14086 = !DILocalVariable(name: "flags", scope: !14063, file: !209, line: 511, type: !435)
!14087 = !DILocation(line: 511, column: 16, scope: !14063)
!14088 = !DILocation(line: 513, column: 2, scope: !14063)
!14089 = !DILocation(line: 513, column: 2, scope: !14073)
!14090 = !DILocalVariable(name: "__dummy", scope: !14091, file: !209, line: 513, type: !435)
!14091 = distinct !DILexicalBlock(scope: !14072, file: !209, line: 513, column: 2)
!14092 = !DILocation(line: 513, column: 2, scope: !14091)
!14093 = !DILocalVariable(name: "__dummy2", scope: !14091, file: !209, line: 513, type: !435)
!14094 = !DILocation(line: 513, column: 2, scope: !14072)
!14095 = !DILocation(line: 513, column: 2, scope: !14071)
!14096 = !DILocation(line: 513, column: 2, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14071, file: !209, line: 513, column: 2)
!14098 = !DILocalVariable(name: "__dummy", scope: !14099, file: !209, line: 513, type: !435)
!14099 = distinct !DILexicalBlock(scope: !14100, file: !209, line: 513, column: 2)
!14100 = distinct !DILexicalBlock(scope: !14097, file: !209, line: 513, column: 2)
!14101 = !DILocation(line: 513, column: 2, scope: !14099)
!14102 = !DILocalVariable(name: "__dummy2", scope: !14099, file: !209, line: 513, type: !435)
!14103 = !DILocation(line: 513, column: 2, scope: !14100)
!14104 = !DILocation(line: 513, column: 2, scope: !14070)
!14105 = !{i32 -2141353481}
!14106 = !DILocation(line: 513, column: 2, scope: !14069)
!14107 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !14068)
!14108 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !14068)
!14109 = !DILocation(line: 514, column: 10, scope: !14063)
!14110 = !DILocation(line: 514, column: 2, scope: !14063)
!14111 = !DILocation(line: 516, column: 33, scope: !14112)
!14112 = distinct !DILexicalBlock(scope: !14063, file: !209, line: 514, column: 15)
!14113 = !DILocation(line: 516, column: 32, scope: !14112)
!14114 = !DILocation(line: 516, column: 3, scope: !14112)
!14115 = !DILocation(line: 516, column: 12, scope: !14112)
!14116 = !DILocation(line: 516, column: 29, scope: !14112)
!14117 = !DILocation(line: 517, column: 32, scope: !14112)
!14118 = !DILocation(line: 517, column: 45, scope: !14112)
!14119 = !DILocation(line: 517, column: 43, scope: !14112)
!14120 = !DILocation(line: 517, column: 3, scope: !14112)
!14121 = !DILocation(line: 517, column: 12, scope: !14112)
!14122 = !DILocation(line: 517, column: 29, scope: !14112)
!14123 = !DILocation(line: 518, column: 17, scope: !14112)
!14124 = !DILocation(line: 518, column: 22, scope: !14112)
!14125 = !DILocation(line: 518, column: 31, scope: !14112)
!14126 = !DILocation(line: 518, column: 49, scope: !14112)
!14127 = !DILocation(line: 518, column: 3, scope: !14112)
!14128 = !DILocation(line: 519, column: 3, scope: !14112)
!14129 = !DILocation(line: 521, column: 33, scope: !14112)
!14130 = !DILocation(line: 521, column: 32, scope: !14112)
!14131 = !DILocation(line: 521, column: 3, scope: !14112)
!14132 = !DILocation(line: 521, column: 12, scope: !14112)
!14133 = !DILocation(line: 521, column: 29, scope: !14112)
!14134 = !DILocation(line: 522, column: 32, scope: !14112)
!14135 = !DILocation(line: 522, column: 45, scope: !14112)
!14136 = !DILocation(line: 522, column: 43, scope: !14112)
!14137 = !DILocation(line: 522, column: 3, scope: !14112)
!14138 = !DILocation(line: 522, column: 12, scope: !14112)
!14139 = !DILocation(line: 522, column: 29, scope: !14112)
!14140 = !DILocation(line: 523, column: 17, scope: !14112)
!14141 = !DILocation(line: 523, column: 22, scope: !14112)
!14142 = !DILocation(line: 523, column: 31, scope: !14112)
!14143 = !DILocation(line: 523, column: 49, scope: !14112)
!14144 = !DILocation(line: 523, column: 3, scope: !14112)
!14145 = !DILocation(line: 524, column: 3, scope: !14112)
!14146 = !DILocation(line: 526, column: 39, scope: !14112)
!14147 = !DILocation(line: 526, column: 38, scope: !14112)
!14148 = !DILocation(line: 526, column: 3, scope: !14112)
!14149 = !DILocation(line: 526, column: 12, scope: !14112)
!14150 = !DILocation(line: 526, column: 35, scope: !14112)
!14151 = !DILocation(line: 527, column: 38, scope: !14112)
!14152 = !DILocation(line: 527, column: 51, scope: !14112)
!14153 = !DILocation(line: 527, column: 49, scope: !14112)
!14154 = !DILocation(line: 527, column: 3, scope: !14112)
!14155 = !DILocation(line: 527, column: 12, scope: !14112)
!14156 = !DILocation(line: 527, column: 35, scope: !14112)
!14157 = !DILocation(line: 528, column: 17, scope: !14112)
!14158 = !DILocation(line: 528, column: 22, scope: !14112)
!14159 = !DILocation(line: 528, column: 31, scope: !14112)
!14160 = !DILocation(line: 528, column: 55, scope: !14112)
!14161 = !DILocation(line: 528, column: 3, scope: !14112)
!14162 = !DILocation(line: 529, column: 3, scope: !14112)
!14163 = !DILocation(line: 531, column: 33, scope: !14112)
!14164 = !DILocation(line: 531, column: 32, scope: !14112)
!14165 = !DILocation(line: 531, column: 3, scope: !14112)
!14166 = !DILocation(line: 531, column: 12, scope: !14112)
!14167 = !DILocation(line: 531, column: 29, scope: !14112)
!14168 = !DILocation(line: 532, column: 32, scope: !14112)
!14169 = !DILocation(line: 532, column: 45, scope: !14112)
!14170 = !DILocation(line: 532, column: 43, scope: !14112)
!14171 = !DILocation(line: 532, column: 3, scope: !14112)
!14172 = !DILocation(line: 532, column: 12, scope: !14112)
!14173 = !DILocation(line: 532, column: 29, scope: !14112)
!14174 = !DILocation(line: 533, column: 13, scope: !14112)
!14175 = !DILocation(line: 533, column: 18, scope: !14112)
!14176 = !DILocation(line: 533, column: 27, scope: !14112)
!14177 = !DILocation(line: 533, column: 45, scope: !14112)
!14178 = !DILocation(line: 533, column: 3, scope: !14112)
!14179 = !DILocation(line: 534, column: 3, scope: !14112)
!14180 = !DILocation(line: 536, column: 33, scope: !14112)
!14181 = !DILocation(line: 536, column: 32, scope: !14112)
!14182 = !DILocation(line: 536, column: 3, scope: !14112)
!14183 = !DILocation(line: 536, column: 12, scope: !14112)
!14184 = !DILocation(line: 536, column: 29, scope: !14112)
!14185 = !DILocation(line: 537, column: 32, scope: !14112)
!14186 = !DILocation(line: 537, column: 45, scope: !14112)
!14187 = !DILocation(line: 537, column: 43, scope: !14112)
!14188 = !DILocation(line: 537, column: 3, scope: !14112)
!14189 = !DILocation(line: 537, column: 12, scope: !14112)
!14190 = !DILocation(line: 537, column: 29, scope: !14112)
!14191 = !DILocation(line: 538, column: 13, scope: !14112)
!14192 = !DILocation(line: 538, column: 18, scope: !14112)
!14193 = !DILocation(line: 538, column: 27, scope: !14112)
!14194 = !DILocation(line: 538, column: 45, scope: !14112)
!14195 = !DILocation(line: 538, column: 3, scope: !14112)
!14196 = !DILocation(line: 539, column: 3, scope: !14112)
!14197 = !DILocation(line: 541, column: 36, scope: !14112)
!14198 = !DILocation(line: 541, column: 35, scope: !14112)
!14199 = !DILocation(line: 541, column: 3, scope: !14112)
!14200 = !DILocation(line: 541, column: 12, scope: !14112)
!14201 = !DILocation(line: 541, column: 32, scope: !14112)
!14202 = !DILocation(line: 542, column: 35, scope: !14112)
!14203 = !DILocation(line: 542, column: 48, scope: !14112)
!14204 = !DILocation(line: 542, column: 46, scope: !14112)
!14205 = !DILocation(line: 542, column: 3, scope: !14112)
!14206 = !DILocation(line: 542, column: 12, scope: !14112)
!14207 = !DILocation(line: 542, column: 32, scope: !14112)
!14208 = !DILocation(line: 543, column: 13, scope: !14112)
!14209 = !DILocation(line: 543, column: 18, scope: !14112)
!14210 = !DILocation(line: 543, column: 27, scope: !14112)
!14211 = !DILocation(line: 543, column: 48, scope: !14112)
!14212 = !DILocation(line: 543, column: 3, scope: !14112)
!14213 = !DILocation(line: 544, column: 3, scope: !14112)
!14214 = !DILocation(line: 546, column: 3, scope: !14112)
!14215 = !DILocation(line: 548, column: 3, scope: !14112)
!14216 = !DILocation(line: 550, column: 26, scope: !14063)
!14217 = !DILocation(line: 550, column: 35, scope: !14063)
!14218 = !DILocation(line: 550, column: 55, scope: !14063)
!14219 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !14065)
!14220 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !14065)
!14221 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !14065)
!14222 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !14065)
!14223 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !14065)
!14224 = !DILocation(line: 551, column: 1, scope: !14063)
!14225 = distinct !DISubprogram(name: "ni_release_ai_mite_channel", scope: !209, file: !209, line: 678, type: !4265, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!14226 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !14227)
!14227 = distinct !DILocation(line: 691, column: 2, scope: !14225)
!14228 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !14227)
!14229 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !14230)
!14230 = distinct !DILocation(line: 684, column: 2, scope: !14231)
!14231 = distinct !DILexicalBlock(scope: !14232, file: !209, line: 684, column: 2)
!14232 = distinct !DILexicalBlock(scope: !14233, file: !209, line: 684, column: 2)
!14233 = distinct !DILexicalBlock(scope: !14234, file: !209, line: 684, column: 2)
!14234 = distinct !DILexicalBlock(scope: !14235, file: !209, line: 684, column: 2)
!14235 = distinct !DILexicalBlock(scope: !14225, file: !209, line: 684, column: 2)
!14236 = !DILocalVariable(name: "dev", arg: 1, scope: !14225, file: !209, line: 678, type: !3350)
!14237 = !DILocation(line: 678, column: 62, scope: !14225)
!14238 = !DILocalVariable(name: "devpriv", scope: !14225, file: !209, line: 681, type: !4731)
!14239 = !DILocation(line: 681, column: 21, scope: !14225)
!14240 = !DILocation(line: 681, column: 31, scope: !14225)
!14241 = !DILocation(line: 681, column: 36, scope: !14225)
!14242 = !DILocalVariable(name: "flags", scope: !14225, file: !209, line: 682, type: !435)
!14243 = !DILocation(line: 682, column: 16, scope: !14225)
!14244 = !DILocation(line: 684, column: 2, scope: !14225)
!14245 = !DILocation(line: 684, column: 2, scope: !14235)
!14246 = !DILocalVariable(name: "__dummy", scope: !14247, file: !209, line: 684, type: !435)
!14247 = distinct !DILexicalBlock(scope: !14234, file: !209, line: 684, column: 2)
!14248 = !DILocation(line: 684, column: 2, scope: !14247)
!14249 = !DILocalVariable(name: "__dummy2", scope: !14247, file: !209, line: 684, type: !435)
!14250 = !DILocation(line: 684, column: 2, scope: !14234)
!14251 = !DILocation(line: 684, column: 2, scope: !14233)
!14252 = !DILocation(line: 684, column: 2, scope: !14253)
!14253 = distinct !DILexicalBlock(scope: !14233, file: !209, line: 684, column: 2)
!14254 = !DILocalVariable(name: "__dummy", scope: !14255, file: !209, line: 684, type: !435)
!14255 = distinct !DILexicalBlock(scope: !14256, file: !209, line: 684, column: 2)
!14256 = distinct !DILexicalBlock(scope: !14253, file: !209, line: 684, column: 2)
!14257 = !DILocation(line: 684, column: 2, scope: !14255)
!14258 = !DILocalVariable(name: "__dummy2", scope: !14255, file: !209, line: 684, type: !435)
!14259 = !DILocation(line: 684, column: 2, scope: !14256)
!14260 = !DILocation(line: 684, column: 2, scope: !14232)
!14261 = !{i32 -2141345582}
!14262 = !DILocation(line: 684, column: 2, scope: !14231)
!14263 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !14230)
!14264 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !14230)
!14265 = !DILocation(line: 685, column: 6, scope: !14266)
!14266 = distinct !DILexicalBlock(scope: !14225, file: !209, line: 685, column: 6)
!14267 = !DILocation(line: 685, column: 15, scope: !14266)
!14268 = !DILocation(line: 685, column: 6, scope: !14225)
!14269 = !DILocation(line: 686, column: 19, scope: !14270)
!14270 = distinct !DILexicalBlock(scope: !14266, file: !209, line: 685, column: 29)
!14271 = !DILocation(line: 686, column: 3, scope: !14270)
!14272 = !DILocation(line: 688, column: 24, scope: !14270)
!14273 = !DILocation(line: 688, column: 33, scope: !14270)
!14274 = !DILocation(line: 688, column: 3, scope: !14270)
!14275 = !DILocation(line: 689, column: 3, scope: !14270)
!14276 = !DILocation(line: 689, column: 12, scope: !14270)
!14277 = !DILocation(line: 689, column: 25, scope: !14270)
!14278 = !DILocation(line: 690, column: 2, scope: !14270)
!14279 = !DILocation(line: 691, column: 26, scope: !14225)
!14280 = !DILocation(line: 691, column: 35, scope: !14225)
!14281 = !DILocation(line: 691, column: 54, scope: !14225)
!14282 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !14227)
!14283 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !14227)
!14284 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !14227)
!14285 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !14227)
!14286 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !14227)
!14287 = !DILocation(line: 693, column: 1, scope: !14225)
!14288 = distinct !DISubprogram(name: "comedi_buf_n_bytes_ready", scope: !233, file: !233, line: 967, type: !14289, scopeLine: 968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!14289 = !DISubroutineType(types: !14290)
!14290 = !{!7, !4119}
!14291 = !DILocalVariable(name: "s", arg: 1, scope: !14288, file: !233, line: 967, type: !4119)
!14292 = !DILocation(line: 967, column: 78, scope: !14288)
!14293 = !DILocation(line: 969, column: 9, scope: !14288)
!14294 = !DILocation(line: 969, column: 12, scope: !14288)
!14295 = !DILocation(line: 969, column: 19, scope: !14288)
!14296 = !DILocation(line: 969, column: 37, scope: !14288)
!14297 = !DILocation(line: 969, column: 40, scope: !14288)
!14298 = !DILocation(line: 969, column: 47, scope: !14288)
!14299 = !DILocation(line: 969, column: 35, scope: !14288)
!14300 = !DILocation(line: 969, column: 2, scope: !14288)
!14301 = distinct !DISubprogram(name: "comedi_bytes_to_samples", scope: !233, file: !233, line: 825, type: !14302, scopeLine: 827, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!14302 = !DISubroutineType(types: !14303)
!14303 = !{!7, !4119, !7}
!14304 = !DILocalVariable(name: "s", arg: 1, scope: !14301, file: !233, line: 825, type: !4119)
!14305 = !DILocation(line: 825, column: 77, scope: !14301)
!14306 = !DILocalVariable(name: "nbytes", arg: 2, scope: !14301, file: !233, line: 826, type: !7)
!14307 = !DILocation(line: 826, column: 23, scope: !14301)
!14308 = !DILocation(line: 828, column: 9, scope: !14301)
!14309 = !DILocation(line: 828, column: 39, scope: !14301)
!14310 = !DILocation(line: 828, column: 19, scope: !14301)
!14311 = !DILocation(line: 828, column: 16, scope: !14301)
!14312 = !DILocation(line: 828, column: 2, scope: !14301)
!14313 = distinct !DISubprogram(name: "comedi_sample_shift", scope: !233, file: !233, line: 813, type: !14289, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!14314 = !DILocalVariable(name: "s", arg: 1, scope: !14313, file: !233, line: 813, type: !4119)
!14315 = !DILocation(line: 813, column: 73, scope: !14313)
!14316 = !DILocation(line: 815, column: 9, scope: !14313)
!14317 = !DILocation(line: 815, column: 12, scope: !14313)
!14318 = !DILocation(line: 815, column: 25, scope: !14313)
!14319 = !DILocation(line: 815, column: 2, scope: !14313)
!14320 = distinct !DISubprogram(name: "comedi_samples_to_bytes", scope: !233, file: !233, line: 839, type: !14302, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!14321 = !DILocalVariable(name: "s", arg: 1, scope: !14320, file: !233, line: 839, type: !4119)
!14322 = !DILocation(line: 839, column: 77, scope: !14320)
!14323 = !DILocalVariable(name: "nsamples", arg: 2, scope: !14320, file: !233, line: 840, type: !7)
!14324 = !DILocation(line: 840, column: 23, scope: !14320)
!14325 = !DILocation(line: 842, column: 9, scope: !14320)
!14326 = !DILocation(line: 842, column: 41, scope: !14320)
!14327 = !DILocation(line: 842, column: 21, scope: !14320)
!14328 = !DILocation(line: 842, column: 18, scope: !14320)
!14329 = !DILocation(line: 842, column: 2, scope: !14320)
!14330 = !DILocalVariable(name: "dev", arg: 1, scope: !4388, file: !209, line: 2748, type: !3350)
!14331 = !DILocation(line: 2748, column: 44, scope: !4388)
!14332 = !DILocalVariable(name: "s", arg: 2, scope: !4388, file: !209, line: 2749, type: !4119)
!14333 = !DILocation(line: 2749, column: 33, scope: !4388)
!14334 = !DILocalVariable(name: "devpriv", scope: !4388, file: !209, line: 2751, type: !4731)
!14335 = !DILocation(line: 2751, column: 21, scope: !4388)
!14336 = !DILocation(line: 2751, column: 31, scope: !4388)
!14337 = !DILocation(line: 2751, column: 36, scope: !4388)
!14338 = !DILocalVariable(name: "ret", scope: !4388, file: !209, line: 2752, type: !429)
!14339 = !DILocation(line: 2752, column: 6, scope: !4388)
!14340 = !DILocalVariable(name: "interrupt_b_bits", scope: !4388, file: !209, line: 2753, type: !429)
!14341 = !DILocation(line: 2753, column: 6, scope: !4388)
!14342 = !DILocalVariable(name: "i", scope: !4388, file: !209, line: 2754, type: !429)
!14343 = !DILocation(line: 2754, column: 6, scope: !4388)
!14344 = !DILocation(line: 2761, column: 7, scope: !14345)
!14345 = distinct !DILexicalBlock(scope: !4388, file: !209, line: 2761, column: 6)
!14346 = !DILocation(line: 2761, column: 16, scope: !14345)
!14347 = !DILocation(line: 2761, column: 6, scope: !4388)
!14348 = !DILocation(line: 2764, column: 3, scope: !14349)
!14349 = distinct !DILexicalBlock(scope: !14345, file: !209, line: 2761, column: 33)
!14350 = !DILocation(line: 2767, column: 2, scope: !4388)
!14351 = !DILocation(line: 2767, column: 11, scope: !4388)
!14352 = !DILocation(line: 2767, column: 27, scope: !4388)
!14353 = !DILocation(line: 2769, column: 14, scope: !4388)
!14354 = !DILocation(line: 2769, column: 2, scope: !4388)
!14355 = !DILocation(line: 2771, column: 19, scope: !4388)
!14356 = !DILocation(line: 2773, column: 16, scope: !4388)
!14357 = !DILocation(line: 2773, column: 2, scope: !4388)
!14358 = !DILocation(line: 2774, column: 6, scope: !14359)
!14359 = distinct !DILexicalBlock(scope: !4388, file: !209, line: 2774, column: 6)
!14360 = !DILocation(line: 2774, column: 15, scope: !14359)
!14361 = !DILocation(line: 2774, column: 6, scope: !4388)
!14362 = !DILocation(line: 2775, column: 18, scope: !14359)
!14363 = !DILocation(line: 2775, column: 3, scope: !14359)
!14364 = !DILocation(line: 2776, column: 29, scope: !4388)
!14365 = !DILocation(line: 2776, column: 8, scope: !4388)
!14366 = !DILocation(line: 2776, column: 6, scope: !4388)
!14367 = !DILocation(line: 2777, column: 6, scope: !14368)
!14368 = distinct !DILexicalBlock(scope: !4388, file: !209, line: 2777, column: 6)
!14369 = !DILocation(line: 2777, column: 6, scope: !4388)
!14370 = !DILocation(line: 2778, column: 10, scope: !14368)
!14371 = !DILocation(line: 2778, column: 3, scope: !14368)
!14372 = !DILocation(line: 2779, column: 32, scope: !4388)
!14373 = !DILocation(line: 2779, column: 8, scope: !4388)
!14374 = !DILocation(line: 2779, column: 6, scope: !4388)
!14375 = !DILocation(line: 2780, column: 6, scope: !14376)
!14376 = distinct !DILexicalBlock(scope: !4388, file: !209, line: 2780, column: 6)
!14377 = !DILocation(line: 2780, column: 10, scope: !14376)
!14378 = !DILocation(line: 2780, column: 6, scope: !4388)
!14379 = !DILocation(line: 2781, column: 10, scope: !14376)
!14380 = !DILocation(line: 2781, column: 3, scope: !14376)
!14381 = !DILocation(line: 2790, column: 16, scope: !4388)
!14382 = !DILocation(line: 2790, column: 21, scope: !4388)
!14383 = !DILocation(line: 2790, column: 30, scope: !4388)
!14384 = !DILocation(line: 2790, column: 39, scope: !4388)
!14385 = !DILocation(line: 2790, column: 2, scope: !4388)
!14386 = !DILocation(line: 2792, column: 16, scope: !4388)
!14387 = !DILocation(line: 2792, column: 21, scope: !4388)
!14388 = !DILocation(line: 2792, column: 30, scope: !4388)
!14389 = !DILocation(line: 2792, column: 2, scope: !4388)
!14390 = !DILocation(line: 2794, column: 9, scope: !14391)
!14391 = distinct !DILexicalBlock(scope: !4388, file: !209, line: 2794, column: 2)
!14392 = !DILocation(line: 2794, column: 7, scope: !14391)
!14393 = !DILocation(line: 2794, column: 14, scope: !14394)
!14394 = distinct !DILexicalBlock(scope: !14391, file: !209, line: 2794, column: 2)
!14395 = !DILocation(line: 2794, column: 16, scope: !14394)
!14396 = !DILocation(line: 2794, column: 2, scope: !14391)
!14397 = !DILocation(line: 2795, column: 3, scope: !14398)
!14398 = distinct !DILexicalBlock(scope: !14399, file: !209, line: 2795, column: 3)
!14399 = distinct !DILexicalBlock(scope: !14400, file: !209, line: 2795, column: 3)
!14400 = distinct !DILexicalBlock(scope: !14401, file: !209, line: 2795, column: 3)
!14401 = distinct !DILexicalBlock(scope: !14402, file: !209, line: 2795, column: 3)
!14402 = distinct !DILexicalBlock(scope: !14394, file: !209, line: 2794, column: 32)
!14403 = !DILocation(line: 2796, column: 21, scope: !14404)
!14404 = distinct !DILexicalBlock(scope: !14402, file: !209, line: 2796, column: 7)
!14405 = !DILocation(line: 2796, column: 8, scope: !14404)
!14406 = !DILocation(line: 2796, column: 45, scope: !14404)
!14407 = !DILocation(line: 2797, column: 48, scope: !14404)
!14408 = !DILocation(line: 2796, column: 7, scope: !14402)
!14409 = !DILocation(line: 2798, column: 4, scope: !14404)
!14410 = !DILocation(line: 2799, column: 2, scope: !14402)
!14411 = !DILocation(line: 2794, column: 28, scope: !14394)
!14412 = !DILocation(line: 2794, column: 2, scope: !14394)
!14413 = distinct !{!14413, !14396, !14414}
!14414 = !DILocation(line: 2799, column: 2, scope: !14391)
!14415 = !DILocation(line: 2800, column: 6, scope: !14416)
!14416 = distinct !DILexicalBlock(scope: !4388, file: !209, line: 2800, column: 6)
!14417 = !DILocation(line: 2800, column: 8, scope: !14416)
!14418 = !DILocation(line: 2800, column: 6, scope: !4388)
!14419 = !DILocation(line: 2801, column: 3, scope: !14420)
!14420 = distinct !DILexicalBlock(scope: !14416, file: !209, line: 2800, column: 20)
!14421 = !DILocation(line: 2803, column: 3, scope: !14420)
!14422 = !DILocation(line: 2809, column: 16, scope: !4388)
!14423 = !DILocation(line: 2809, column: 2, scope: !4388)
!14424 = !DILocation(line: 2811, column: 14, scope: !4388)
!14425 = !DILocation(line: 2811, column: 39, scope: !4388)
!14426 = !DILocation(line: 2811, column: 2, scope: !4388)
!14427 = !DILocation(line: 2813, column: 16, scope: !4388)
!14428 = !DILocation(line: 2816, column: 7, scope: !4388)
!14429 = !DILocation(line: 2816, column: 16, scope: !4388)
!14430 = !DILocation(line: 2815, column: 28, scope: !4388)
!14431 = !DILocation(line: 2813, column: 21, scope: !4388)
!14432 = !DILocation(line: 2813, column: 2, scope: !4388)
!14433 = !DILocation(line: 2819, column: 2, scope: !4388)
!14434 = !DILocation(line: 2820, column: 1, scope: !4388)
!14435 = distinct !DISubprogram(name: "ni_ao_win_outl", scope: !209, file: !209, line: 827, type: !6638, scopeLine: 829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!14436 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !14437)
!14437 = distinct !DILocation(line: 836, column: 2, scope: !14435)
!14438 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !14437)
!14439 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !14440)
!14440 = distinct !DILocation(line: 833, column: 2, scope: !14441)
!14441 = distinct !DILexicalBlock(scope: !14442, file: !209, line: 833, column: 2)
!14442 = distinct !DILexicalBlock(scope: !14443, file: !209, line: 833, column: 2)
!14443 = distinct !DILexicalBlock(scope: !14444, file: !209, line: 833, column: 2)
!14444 = distinct !DILexicalBlock(scope: !14445, file: !209, line: 833, column: 2)
!14445 = distinct !DILexicalBlock(scope: !14435, file: !209, line: 833, column: 2)
!14446 = !DILocalVariable(name: "dev", arg: 1, scope: !14435, file: !209, line: 827, type: !3350)
!14447 = !DILocation(line: 827, column: 57, scope: !14435)
!14448 = !DILocalVariable(name: "data", arg: 2, scope: !14435, file: !209, line: 828, type: !7)
!14449 = !DILocation(line: 828, column: 20, scope: !14435)
!14450 = !DILocalVariable(name: "addr", arg: 3, scope: !14435, file: !209, line: 828, type: !429)
!14451 = !DILocation(line: 828, column: 30, scope: !14435)
!14452 = !DILocalVariable(name: "devpriv", scope: !14435, file: !209, line: 830, type: !4731)
!14453 = !DILocation(line: 830, column: 21, scope: !14435)
!14454 = !DILocation(line: 830, column: 31, scope: !14435)
!14455 = !DILocation(line: 830, column: 36, scope: !14435)
!14456 = !DILocalVariable(name: "flags", scope: !14435, file: !209, line: 831, type: !435)
!14457 = !DILocation(line: 831, column: 16, scope: !14435)
!14458 = !DILocation(line: 833, column: 2, scope: !14435)
!14459 = !DILocation(line: 833, column: 2, scope: !14445)
!14460 = !DILocalVariable(name: "__dummy", scope: !14461, file: !209, line: 833, type: !435)
!14461 = distinct !DILexicalBlock(scope: !14444, file: !209, line: 833, column: 2)
!14462 = !DILocation(line: 833, column: 2, scope: !14461)
!14463 = !DILocalVariable(name: "__dummy2", scope: !14461, file: !209, line: 833, type: !435)
!14464 = !DILocation(line: 833, column: 2, scope: !14444)
!14465 = !DILocation(line: 833, column: 2, scope: !14443)
!14466 = !DILocation(line: 833, column: 2, scope: !14467)
!14467 = distinct !DILexicalBlock(scope: !14443, file: !209, line: 833, column: 2)
!14468 = !DILocalVariable(name: "__dummy", scope: !14469, file: !209, line: 833, type: !435)
!14469 = distinct !DILexicalBlock(scope: !14470, file: !209, line: 833, column: 2)
!14470 = distinct !DILexicalBlock(scope: !14467, file: !209, line: 833, column: 2)
!14471 = !DILocation(line: 833, column: 2, scope: !14469)
!14472 = !DILocalVariable(name: "__dummy2", scope: !14469, file: !209, line: 833, type: !435)
!14473 = !DILocation(line: 833, column: 2, scope: !14470)
!14474 = !DILocation(line: 833, column: 2, scope: !14442)
!14475 = !{i32 -2141338774}
!14476 = !DILocation(line: 833, column: 2, scope: !14441)
!14477 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !14440)
!14478 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !14440)
!14479 = !DILocation(line: 834, column: 12, scope: !14435)
!14480 = !DILocation(line: 834, column: 17, scope: !14435)
!14481 = !DILocation(line: 834, column: 2, scope: !14435)
!14482 = !DILocation(line: 835, column: 12, scope: !14435)
!14483 = !DILocation(line: 835, column: 17, scope: !14435)
!14484 = !DILocation(line: 835, column: 2, scope: !14435)
!14485 = !DILocation(line: 836, column: 26, scope: !14435)
!14486 = !DILocation(line: 836, column: 35, scope: !14435)
!14487 = !DILocation(line: 836, column: 48, scope: !14435)
!14488 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !14437)
!14489 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !14437)
!14490 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !14437)
!14491 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !14437)
!14492 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !14437)
!14493 = !DILocation(line: 837, column: 1, scope: !14435)
!14494 = distinct !DISubprogram(name: "ni_ao_setup_MITE_dma", scope: !209, file: !209, line: 1464, type: !4261, scopeLine: 1465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!14495 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !14496)
!14496 = distinct !DILocation(line: 1494, column: 2, scope: !14494)
!14497 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !14496)
!14498 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !14499)
!14499 = distinct !DILocation(line: 1478, column: 2, scope: !14500)
!14500 = distinct !DILexicalBlock(scope: !14501, file: !209, line: 1478, column: 2)
!14501 = distinct !DILexicalBlock(scope: !14502, file: !209, line: 1478, column: 2)
!14502 = distinct !DILexicalBlock(scope: !14503, file: !209, line: 1478, column: 2)
!14503 = distinct !DILexicalBlock(scope: !14504, file: !209, line: 1478, column: 2)
!14504 = distinct !DILexicalBlock(scope: !14494, file: !209, line: 1478, column: 2)
!14505 = !DILocalVariable(name: "dev", arg: 1, scope: !14494, file: !209, line: 1464, type: !3350)
!14506 = !DILocation(line: 1464, column: 55, scope: !14494)
!14507 = !DILocalVariable(name: "devpriv", scope: !14494, file: !209, line: 1466, type: !4731)
!14508 = !DILocation(line: 1466, column: 21, scope: !14494)
!14509 = !DILocation(line: 1466, column: 31, scope: !14494)
!14510 = !DILocation(line: 1466, column: 36, scope: !14494)
!14511 = !DILocalVariable(name: "s", scope: !14494, file: !209, line: 1467, type: !4119)
!14512 = !DILocation(line: 1467, column: 27, scope: !14494)
!14513 = !DILocation(line: 1467, column: 31, scope: !14494)
!14514 = !DILocation(line: 1467, column: 36, scope: !14494)
!14515 = !DILocalVariable(name: "retval", scope: !14494, file: !209, line: 1468, type: !429)
!14516 = !DILocation(line: 1468, column: 6, scope: !14494)
!14517 = !DILocalVariable(name: "flags", scope: !14494, file: !209, line: 1469, type: !435)
!14518 = !DILocation(line: 1469, column: 16, scope: !14494)
!14519 = !DILocation(line: 1471, column: 38, scope: !14494)
!14520 = !DILocation(line: 1471, column: 11, scope: !14494)
!14521 = !DILocation(line: 1471, column: 9, scope: !14494)
!14522 = !DILocation(line: 1472, column: 6, scope: !14523)
!14523 = distinct !DILexicalBlock(scope: !14494, file: !209, line: 1472, column: 6)
!14524 = !DILocation(line: 1472, column: 6, scope: !14494)
!14525 = !DILocation(line: 1473, column: 10, scope: !14523)
!14526 = !DILocation(line: 1473, column: 3, scope: !14523)
!14527 = !DILocation(line: 1476, column: 24, scope: !14494)
!14528 = !DILocation(line: 1476, column: 27, scope: !14494)
!14529 = !DILocation(line: 1476, column: 30, scope: !14494)
!14530 = !DILocation(line: 1476, column: 37, scope: !14494)
!14531 = !DILocation(line: 1476, column: 2, scope: !14494)
!14532 = !DILocation(line: 1478, column: 2, scope: !14494)
!14533 = !DILocation(line: 1478, column: 2, scope: !14504)
!14534 = !DILocalVariable(name: "__dummy", scope: !14535, file: !209, line: 1478, type: !435)
!14535 = distinct !DILexicalBlock(scope: !14503, file: !209, line: 1478, column: 2)
!14536 = !DILocation(line: 1478, column: 2, scope: !14535)
!14537 = !DILocalVariable(name: "__dummy2", scope: !14535, file: !209, line: 1478, type: !435)
!14538 = !DILocation(line: 1478, column: 2, scope: !14503)
!14539 = !DILocation(line: 1478, column: 2, scope: !14502)
!14540 = !DILocation(line: 1478, column: 2, scope: !14541)
!14541 = distinct !DILexicalBlock(scope: !14502, file: !209, line: 1478, column: 2)
!14542 = !DILocalVariable(name: "__dummy", scope: !14543, file: !209, line: 1478, type: !435)
!14543 = distinct !DILexicalBlock(scope: !14544, file: !209, line: 1478, column: 2)
!14544 = distinct !DILexicalBlock(scope: !14541, file: !209, line: 1478, column: 2)
!14545 = !DILocation(line: 1478, column: 2, scope: !14543)
!14546 = !DILocalVariable(name: "__dummy2", scope: !14543, file: !209, line: 1478, type: !435)
!14547 = !DILocation(line: 1478, column: 2, scope: !14544)
!14548 = !DILocation(line: 1478, column: 2, scope: !14501)
!14549 = !{i32 -2141326597}
!14550 = !DILocation(line: 1478, column: 2, scope: !14500)
!14551 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !14499)
!14552 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !14499)
!14553 = !DILocation(line: 1479, column: 6, scope: !14554)
!14554 = distinct !DILexicalBlock(scope: !14494, file: !209, line: 1479, column: 6)
!14555 = !DILocation(line: 1479, column: 15, scope: !14554)
!14556 = !DILocation(line: 1479, column: 6, scope: !14494)
!14557 = !DILocation(line: 1480, column: 7, scope: !14558)
!14558 = distinct !DILexicalBlock(scope: !14559, file: !209, line: 1480, column: 7)
!14559 = distinct !DILexicalBlock(scope: !14554, file: !209, line: 1479, column: 29)
!14560 = !DILocation(line: 1480, column: 16, scope: !14558)
!14561 = !DILocation(line: 1480, column: 24, scope: !14558)
!14562 = !DILocation(line: 1480, column: 27, scope: !14558)
!14563 = !DILocation(line: 1480, column: 36, scope: !14558)
!14564 = !DILocation(line: 1480, column: 7, scope: !14559)
!14565 = !DILocation(line: 1481, column: 18, scope: !14566)
!14566 = distinct !DILexicalBlock(scope: !14558, file: !209, line: 1480, column: 45)
!14567 = !DILocation(line: 1481, column: 27, scope: !14566)
!14568 = !DILocation(line: 1481, column: 4, scope: !14566)
!14569 = !DILocation(line: 1482, column: 3, scope: !14566)
!14570 = !DILocation(line: 1488, column: 18, scope: !14571)
!14571 = distinct !DILexicalBlock(scope: !14558, file: !209, line: 1482, column: 10)
!14572 = !DILocation(line: 1488, column: 27, scope: !14571)
!14573 = !DILocation(line: 1488, column: 4, scope: !14571)
!14574 = !DILocation(line: 1490, column: 16, scope: !14559)
!14575 = !DILocation(line: 1490, column: 25, scope: !14559)
!14576 = !DILocation(line: 1490, column: 3, scope: !14559)
!14577 = !DILocation(line: 1491, column: 2, scope: !14559)
!14578 = !DILocation(line: 1492, column: 10, scope: !14579)
!14579 = distinct !DILexicalBlock(scope: !14554, file: !209, line: 1491, column: 9)
!14580 = !DILocation(line: 1494, column: 26, scope: !14494)
!14581 = !DILocation(line: 1494, column: 35, scope: !14494)
!14582 = !DILocation(line: 1494, column: 54, scope: !14494)
!14583 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !14496)
!14584 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !14496)
!14585 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !14496)
!14586 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !14496)
!14587 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !14496)
!14588 = !DILocation(line: 1496, column: 9, scope: !14494)
!14589 = !DILocation(line: 1496, column: 2, scope: !14494)
!14590 = !DILocation(line: 1497, column: 1, scope: !14494)
!14591 = !DILocalVariable(name: "dev", arg: 1, scope: !4391, file: !209, line: 921, type: !3350)
!14592 = !DILocation(line: 921, column: 58, scope: !4391)
!14593 = !DILocalVariable(name: "i", scope: !4391, file: !209, line: 924, type: !429)
!14594 = !DILocation(line: 924, column: 6, scope: !4391)
!14595 = !DILocation(line: 926, column: 9, scope: !14596)
!14596 = distinct !DILexicalBlock(scope: !4391, file: !209, line: 926, column: 2)
!14597 = !DILocation(line: 926, column: 7, scope: !14596)
!14598 = !DILocation(line: 926, column: 14, scope: !14599)
!14599 = distinct !DILexicalBlock(scope: !14596, file: !209, line: 926, column: 2)
!14600 = !DILocation(line: 926, column: 16, scope: !14599)
!14601 = !DILocation(line: 926, column: 2, scope: !14596)
!14602 = !DILocalVariable(name: "b_status", scope: !14603, file: !209, line: 927, type: !438)
!14603 = distinct !DILexicalBlock(scope: !14599, file: !209, line: 926, column: 32)
!14604 = !DILocation(line: 927, column: 18, scope: !14603)
!14605 = !DILocation(line: 929, column: 27, scope: !14603)
!14606 = !DILocation(line: 929, column: 14, scope: !14603)
!14607 = !DILocation(line: 929, column: 12, scope: !14603)
!14608 = !DILocation(line: 930, column: 7, scope: !14609)
!14609 = distinct !DILexicalBlock(scope: !14603, file: !209, line: 930, column: 7)
!14610 = !DILocation(line: 930, column: 16, scope: !14609)
!14611 = !DILocation(line: 930, column: 7, scope: !14603)
!14612 = !DILocation(line: 931, column: 4, scope: !14609)
!14613 = !DILocation(line: 936, column: 3, scope: !14603)
!14614 = !DILocation(line: 937, column: 2, scope: !14603)
!14615 = !DILocation(line: 926, column: 28, scope: !14599)
!14616 = !DILocation(line: 926, column: 2, scope: !14599)
!14617 = distinct !{!14617, !14601, !14618}
!14618 = !DILocation(line: 937, column: 2, scope: !14596)
!14619 = !DILocation(line: 938, column: 6, scope: !14620)
!14620 = distinct !DILexicalBlock(scope: !4391, file: !209, line: 938, column: 6)
!14621 = !DILocation(line: 938, column: 8, scope: !14620)
!14622 = !DILocation(line: 938, column: 6, scope: !4391)
!14623 = !DILocation(line: 939, column: 3, scope: !14624)
!14624 = distinct !DILexicalBlock(scope: !14620, file: !209, line: 938, column: 20)
!14625 = !DILocation(line: 940, column: 3, scope: !14624)
!14626 = !DILocation(line: 942, column: 2, scope: !4391)
!14627 = !DILocation(line: 943, column: 1, scope: !4391)
!14628 = distinct !DISubprogram(name: "ni_request_ao_mite_channel", scope: !209, file: !209, line: 587, type: !4261, scopeLine: 588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!14629 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !14630)
!14630 = distinct !DILocation(line: 597, column: 3, scope: !14631)
!14631 = distinct !DILexicalBlock(scope: !14632, file: !209, line: 596, column: 18)
!14632 = distinct !DILexicalBlock(scope: !14628, file: !209, line: 596, column: 6)
!14633 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !14630)
!14634 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !14635)
!14635 = distinct !DILocation(line: 609, column: 2, scope: !14628)
!14636 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !14635)
!14637 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !14638)
!14638 = distinct !DILocation(line: 594, column: 2, scope: !14639)
!14639 = distinct !DILexicalBlock(scope: !14640, file: !209, line: 594, column: 2)
!14640 = distinct !DILexicalBlock(scope: !14641, file: !209, line: 594, column: 2)
!14641 = distinct !DILexicalBlock(scope: !14642, file: !209, line: 594, column: 2)
!14642 = distinct !DILexicalBlock(scope: !14643, file: !209, line: 594, column: 2)
!14643 = distinct !DILexicalBlock(scope: !14628, file: !209, line: 594, column: 2)
!14644 = !DILocalVariable(name: "dev", arg: 1, scope: !14628, file: !209, line: 587, type: !3350)
!14645 = !DILocation(line: 587, column: 61, scope: !14628)
!14646 = !DILocalVariable(name: "devpriv", scope: !14628, file: !209, line: 589, type: !4731)
!14647 = !DILocation(line: 589, column: 21, scope: !14628)
!14648 = !DILocation(line: 589, column: 31, scope: !14628)
!14649 = !DILocation(line: 589, column: 36, scope: !14628)
!14650 = !DILocalVariable(name: "mite_chan", scope: !14628, file: !209, line: 590, type: !4775)
!14651 = !DILocation(line: 590, column: 23, scope: !14628)
!14652 = !DILocalVariable(name: "flags", scope: !14628, file: !209, line: 591, type: !435)
!14653 = !DILocation(line: 591, column: 16, scope: !14628)
!14654 = !DILocalVariable(name: "bits", scope: !14628, file: !209, line: 592, type: !7)
!14655 = !DILocation(line: 592, column: 15, scope: !14628)
!14656 = !DILocation(line: 594, column: 2, scope: !14628)
!14657 = !DILocation(line: 594, column: 2, scope: !14643)
!14658 = !DILocalVariable(name: "__dummy", scope: !14659, file: !209, line: 594, type: !435)
!14659 = distinct !DILexicalBlock(scope: !14642, file: !209, line: 594, column: 2)
!14660 = !DILocation(line: 594, column: 2, scope: !14659)
!14661 = !DILocalVariable(name: "__dummy2", scope: !14659, file: !209, line: 594, type: !435)
!14662 = !DILocation(line: 594, column: 2, scope: !14642)
!14663 = !DILocation(line: 594, column: 2, scope: !14641)
!14664 = !DILocation(line: 594, column: 2, scope: !14665)
!14665 = distinct !DILexicalBlock(scope: !14641, file: !209, line: 594, column: 2)
!14666 = !DILocalVariable(name: "__dummy", scope: !14667, file: !209, line: 594, type: !435)
!14667 = distinct !DILexicalBlock(scope: !14668, file: !209, line: 594, column: 2)
!14668 = distinct !DILexicalBlock(scope: !14665, file: !209, line: 594, column: 2)
!14669 = !DILocation(line: 594, column: 2, scope: !14667)
!14670 = !DILocalVariable(name: "__dummy2", scope: !14667, file: !209, line: 594, type: !435)
!14671 = !DILocation(line: 594, column: 2, scope: !14668)
!14672 = !DILocation(line: 594, column: 2, scope: !14640)
!14673 = !{i32 -2141350557}
!14674 = !DILocation(line: 594, column: 2, scope: !14639)
!14675 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !14638)
!14676 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !14638)
!14677 = !DILocation(line: 595, column: 35, scope: !14628)
!14678 = !DILocation(line: 595, column: 44, scope: !14628)
!14679 = !DILocation(line: 595, column: 50, scope: !14628)
!14680 = !DILocation(line: 595, column: 59, scope: !14628)
!14681 = !DILocation(line: 595, column: 14, scope: !14628)
!14682 = !DILocation(line: 595, column: 12, scope: !14628)
!14683 = !DILocation(line: 596, column: 7, scope: !14632)
!14684 = !DILocation(line: 596, column: 6, scope: !14628)
!14685 = !DILocation(line: 597, column: 27, scope: !14631)
!14686 = !DILocation(line: 597, column: 36, scope: !14631)
!14687 = !DILocation(line: 597, column: 55, scope: !14631)
!14688 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !14630)
!14689 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !14630)
!14690 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !14630)
!14691 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !14630)
!14692 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !14630)
!14693 = !DILocation(line: 598, column: 3, scope: !14631)
!14694 = !DILocation(line: 600, column: 3, scope: !14631)
!14695 = !DILocation(line: 602, column: 2, scope: !14628)
!14696 = !DILocation(line: 602, column: 13, scope: !14628)
!14697 = !DILocation(line: 602, column: 17, scope: !14628)
!14698 = !DILocation(line: 603, column: 26, scope: !14628)
!14699 = !DILocation(line: 603, column: 2, scope: !14628)
!14700 = !DILocation(line: 603, column: 11, scope: !14628)
!14701 = !DILocation(line: 603, column: 24, scope: !14628)
!14702 = !DILocation(line: 605, column: 9, scope: !14628)
!14703 = !DILocation(line: 605, column: 7, scope: !14628)
!14704 = !DILocation(line: 606, column: 18, scope: !14628)
!14705 = !DILocation(line: 607, column: 26, scope: !14628)
!14706 = !DILocation(line: 606, column: 2, scope: !14628)
!14707 = !DILocation(line: 609, column: 26, scope: !14628)
!14708 = !DILocation(line: 609, column: 35, scope: !14628)
!14709 = !DILocation(line: 609, column: 54, scope: !14628)
!14710 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !14635)
!14711 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !14635)
!14712 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !14635)
!14713 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !14635)
!14714 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !14635)
!14715 = !DILocation(line: 610, column: 2, scope: !14628)
!14716 = !DILocation(line: 611, column: 1, scope: !14628)
!14717 = distinct !DISubprogram(name: "ni_ao_win_outw", scope: !209, file: !209, line: 815, type: !6638, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!14718 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !14719)
!14719 = distinct !DILocation(line: 824, column: 2, scope: !14717)
!14720 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !14719)
!14721 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !14722)
!14722 = distinct !DILocation(line: 821, column: 2, scope: !14723)
!14723 = distinct !DILexicalBlock(scope: !14724, file: !209, line: 821, column: 2)
!14724 = distinct !DILexicalBlock(scope: !14725, file: !209, line: 821, column: 2)
!14725 = distinct !DILexicalBlock(scope: !14726, file: !209, line: 821, column: 2)
!14726 = distinct !DILexicalBlock(scope: !14727, file: !209, line: 821, column: 2)
!14727 = distinct !DILexicalBlock(scope: !14717, file: !209, line: 821, column: 2)
!14728 = !DILocalVariable(name: "dev", arg: 1, scope: !14717, file: !209, line: 815, type: !3350)
!14729 = !DILocation(line: 815, column: 57, scope: !14717)
!14730 = !DILocalVariable(name: "data", arg: 2, scope: !14717, file: !209, line: 816, type: !7)
!14731 = !DILocation(line: 816, column: 20, scope: !14717)
!14732 = !DILocalVariable(name: "addr", arg: 3, scope: !14717, file: !209, line: 816, type: !429)
!14733 = !DILocation(line: 816, column: 30, scope: !14717)
!14734 = !DILocalVariable(name: "devpriv", scope: !14717, file: !209, line: 818, type: !4731)
!14735 = !DILocation(line: 818, column: 21, scope: !14717)
!14736 = !DILocation(line: 818, column: 31, scope: !14717)
!14737 = !DILocation(line: 818, column: 36, scope: !14717)
!14738 = !DILocalVariable(name: "flags", scope: !14717, file: !209, line: 819, type: !435)
!14739 = !DILocation(line: 819, column: 16, scope: !14717)
!14740 = !DILocation(line: 821, column: 2, scope: !14717)
!14741 = !DILocation(line: 821, column: 2, scope: !14727)
!14742 = !DILocalVariable(name: "__dummy", scope: !14743, file: !209, line: 821, type: !435)
!14743 = distinct !DILexicalBlock(scope: !14726, file: !209, line: 821, column: 2)
!14744 = !DILocation(line: 821, column: 2, scope: !14743)
!14745 = !DILocalVariable(name: "__dummy2", scope: !14743, file: !209, line: 821, type: !435)
!14746 = !DILocation(line: 821, column: 2, scope: !14726)
!14747 = !DILocation(line: 821, column: 2, scope: !14725)
!14748 = !DILocation(line: 821, column: 2, scope: !14749)
!14749 = distinct !DILexicalBlock(scope: !14725, file: !209, line: 821, column: 2)
!14750 = !DILocalVariable(name: "__dummy", scope: !14751, file: !209, line: 821, type: !435)
!14751 = distinct !DILexicalBlock(scope: !14752, file: !209, line: 821, column: 2)
!14752 = distinct !DILexicalBlock(scope: !14749, file: !209, line: 821, column: 2)
!14753 = !DILocation(line: 821, column: 2, scope: !14751)
!14754 = !DILocalVariable(name: "__dummy2", scope: !14751, file: !209, line: 821, type: !435)
!14755 = !DILocation(line: 821, column: 2, scope: !14752)
!14756 = !DILocation(line: 821, column: 2, scope: !14724)
!14757 = !{i32 -2141340038}
!14758 = !DILocation(line: 821, column: 2, scope: !14723)
!14759 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !14722)
!14760 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !14722)
!14761 = !DILocation(line: 822, column: 12, scope: !14717)
!14762 = !DILocation(line: 822, column: 17, scope: !14717)
!14763 = !DILocation(line: 822, column: 2, scope: !14717)
!14764 = !DILocation(line: 823, column: 12, scope: !14717)
!14765 = !DILocation(line: 823, column: 17, scope: !14717)
!14766 = !DILocation(line: 823, column: 2, scope: !14717)
!14767 = !DILocation(line: 824, column: 26, scope: !14717)
!14768 = !DILocation(line: 824, column: 35, scope: !14717)
!14769 = !DILocation(line: 824, column: 48, scope: !14717)
!14770 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !14719)
!14771 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !14719)
!14772 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !14719)
!14773 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !14719)
!14774 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !14719)
!14775 = !DILocation(line: 825, column: 1, scope: !14717)
!14776 = distinct !DISubprogram(name: "ni_ao_config_chanlist", scope: !209, file: !209, line: 2667, type: !14777, scopeLine: 2671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!14777 = !DISubroutineType(types: !14778)
!14778 = !{!429, !3350, !4119, !1365, !7, !429}
!14779 = !DILocalVariable(name: "dev", arg: 1, scope: !14776, file: !209, line: 2667, type: !3350)
!14780 = !DILocation(line: 2667, column: 56, scope: !14776)
!14781 = !DILocalVariable(name: "s", arg: 2, scope: !14776, file: !209, line: 2668, type: !4119)
!14782 = !DILocation(line: 2668, column: 31, scope: !14776)
!14783 = !DILocalVariable(name: "chanspec", arg: 3, scope: !14776, file: !209, line: 2669, type: !1365)
!14784 = !DILocation(line: 2669, column: 19, scope: !14776)
!14785 = !DILocalVariable(name: "n_chans", arg: 4, scope: !14776, file: !209, line: 2669, type: !7)
!14786 = !DILocation(line: 2669, column: 44, scope: !14776)
!14787 = !DILocalVariable(name: "timed", arg: 5, scope: !14776, file: !209, line: 2670, type: !429)
!14788 = !DILocation(line: 2670, column: 10, scope: !14776)
!14789 = !DILocalVariable(name: "devpriv", scope: !14776, file: !209, line: 2672, type: !4731)
!14790 = !DILocation(line: 2672, column: 21, scope: !14776)
!14791 = !DILocation(line: 2672, column: 31, scope: !14776)
!14792 = !DILocation(line: 2672, column: 36, scope: !14776)
!14793 = !DILocation(line: 2674, column: 6, scope: !14794)
!14794 = distinct !DILexicalBlock(scope: !14776, file: !209, line: 2674, column: 6)
!14795 = !DILocation(line: 2674, column: 15, scope: !14794)
!14796 = !DILocation(line: 2674, column: 6, scope: !14776)
!14797 = !DILocation(line: 2675, column: 41, scope: !14794)
!14798 = !DILocation(line: 2675, column: 46, scope: !14794)
!14799 = !DILocation(line: 2675, column: 49, scope: !14794)
!14800 = !DILocation(line: 2675, column: 59, scope: !14794)
!14801 = !DILocation(line: 2676, column: 13, scope: !14794)
!14802 = !DILocation(line: 2675, column: 10, scope: !14794)
!14803 = !DILocation(line: 2675, column: 3, scope: !14794)
!14804 = !DILocation(line: 2678, column: 36, scope: !14794)
!14805 = !DILocation(line: 2678, column: 41, scope: !14794)
!14806 = !DILocation(line: 2678, column: 44, scope: !14794)
!14807 = !DILocation(line: 2678, column: 54, scope: !14794)
!14808 = !DILocation(line: 2678, column: 10, scope: !14794)
!14809 = !DILocation(line: 2678, column: 3, scope: !14794)
!14810 = !DILocation(line: 2679, column: 1, scope: !14776)
!14811 = distinct !DISubprogram(name: "comedi_offset_munge", scope: !233, file: !233, line: 782, type: !14302, scopeLine: 784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!14812 = !DILocalVariable(name: "s", arg: 1, scope: !14811, file: !233, line: 782, type: !4119)
!14813 = !DILocation(line: 782, column: 73, scope: !14811)
!14814 = !DILocalVariable(name: "val", arg: 2, scope: !14811, file: !233, line: 783, type: !7)
!14815 = !DILocation(line: 783, column: 26, scope: !14811)
!14816 = !DILocation(line: 785, column: 9, scope: !14811)
!14817 = !DILocation(line: 785, column: 15, scope: !14811)
!14818 = !DILocation(line: 785, column: 18, scope: !14811)
!14819 = !DILocation(line: 785, column: 13, scope: !14811)
!14820 = !DILocation(line: 785, column: 29, scope: !14811)
!14821 = !DILocation(line: 785, column: 32, scope: !14811)
!14822 = !DILocation(line: 785, column: 40, scope: !14811)
!14823 = !DILocation(line: 785, column: 26, scope: !14811)
!14824 = !DILocation(line: 785, column: 2, scope: !14811)
!14825 = distinct !DISubprogram(name: "comedi_range_is_bipolar", scope: !233, file: !233, line: 655, type: !14826, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!14826 = !DISubroutineType(types: !14827)
!14827 = !{!918, !4119, !7}
!14828 = !DILocalVariable(name: "s", arg: 1, scope: !14825, file: !233, line: 655, type: !4119)
!14829 = !DILocation(line: 655, column: 69, scope: !14825)
!14830 = !DILocalVariable(name: "range", arg: 2, scope: !14825, file: !233, line: 656, type: !7)
!14831 = !DILocation(line: 656, column: 22, scope: !14825)
!14832 = !DILocation(line: 658, column: 9, scope: !14825)
!14833 = !DILocation(line: 658, column: 12, scope: !14825)
!14834 = !DILocation(line: 658, column: 25, scope: !14825)
!14835 = !DILocation(line: 658, column: 31, scope: !14825)
!14836 = !DILocation(line: 658, column: 38, scope: !14825)
!14837 = !DILocation(line: 658, column: 42, scope: !14825)
!14838 = !DILocation(line: 658, column: 2, scope: !14825)
!14839 = distinct !DISubprogram(name: "ni_m_series_ao_config_chanlist", scope: !209, file: !209, line: 2553, type: !14777, scopeLine: 2557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!14840 = !DILocalVariable(name: "dev", arg: 1, scope: !14839, file: !209, line: 2553, type: !3350)
!14841 = !DILocation(line: 2553, column: 65, scope: !14839)
!14842 = !DILocalVariable(name: "s", arg: 2, scope: !14839, file: !209, line: 2554, type: !4119)
!14843 = !DILocation(line: 2554, column: 33, scope: !14839)
!14844 = !DILocalVariable(name: "chanspec", arg: 3, scope: !14839, file: !209, line: 2555, type: !1365)
!14845 = !DILocation(line: 2555, column: 21, scope: !14839)
!14846 = !DILocalVariable(name: "n_chans", arg: 4, scope: !14839, file: !209, line: 2556, type: !7)
!14847 = !DILocation(line: 2556, column: 21, scope: !14839)
!14848 = !DILocalVariable(name: "timed", arg: 5, scope: !14839, file: !209, line: 2556, type: !429)
!14849 = !DILocation(line: 2556, column: 34, scope: !14839)
!14850 = !DILocalVariable(name: "devpriv", scope: !14839, file: !209, line: 2558, type: !4731)
!14851 = !DILocation(line: 2558, column: 21, scope: !14839)
!14852 = !DILocation(line: 2558, column: 31, scope: !14839)
!14853 = !DILocation(line: 2558, column: 36, scope: !14839)
!14854 = !DILocalVariable(name: "range", scope: !14839, file: !209, line: 2559, type: !7)
!14855 = !DILocation(line: 2559, column: 15, scope: !14839)
!14856 = !DILocalVariable(name: "chan", scope: !14839, file: !209, line: 2560, type: !7)
!14857 = !DILocation(line: 2560, column: 15, scope: !14839)
!14858 = !DILocalVariable(name: "conf", scope: !14839, file: !209, line: 2561, type: !7)
!14859 = !DILocation(line: 2561, column: 15, scope: !14839)
!14860 = !DILocalVariable(name: "i", scope: !14839, file: !209, line: 2562, type: !429)
!14861 = !DILocation(line: 2562, column: 6, scope: !14839)
!14862 = !DILocalVariable(name: "invert", scope: !14839, file: !209, line: 2563, type: !429)
!14863 = !DILocation(line: 2563, column: 6, scope: !14839)
!14864 = !DILocation(line: 2565, column: 6, scope: !14865)
!14865 = distinct !DILexicalBlock(scope: !14839, file: !209, line: 2565, column: 6)
!14866 = !DILocation(line: 2565, column: 6, scope: !14839)
!14867 = !DILocation(line: 2566, column: 10, scope: !14868)
!14868 = distinct !DILexicalBlock(scope: !14869, file: !209, line: 2566, column: 3)
!14869 = distinct !DILexicalBlock(scope: !14865, file: !209, line: 2565, column: 13)
!14870 = !DILocation(line: 2566, column: 8, scope: !14868)
!14871 = !DILocation(line: 2566, column: 15, scope: !14872)
!14872 = distinct !DILexicalBlock(scope: !14868, file: !209, line: 2566, column: 3)
!14873 = !DILocation(line: 2566, column: 19, scope: !14872)
!14874 = !DILocation(line: 2566, column: 22, scope: !14872)
!14875 = !DILocation(line: 2566, column: 17, scope: !14872)
!14876 = !DILocation(line: 2566, column: 3, scope: !14868)
!14877 = !DILocation(line: 2567, column: 4, scope: !14878)
!14878 = distinct !DILexicalBlock(scope: !14872, file: !209, line: 2566, column: 35)
!14879 = !DILocation(line: 2567, column: 13, scope: !14878)
!14880 = !DILocation(line: 2567, column: 21, scope: !14878)
!14881 = !DILocation(line: 2567, column: 24, scope: !14878)
!14882 = !DILocation(line: 2568, column: 14, scope: !14878)
!14883 = !DILocation(line: 2568, column: 19, scope: !14878)
!14884 = !DILocation(line: 2568, column: 28, scope: !14878)
!14885 = !DILocation(line: 2568, column: 36, scope: !14878)
!14886 = !DILocation(line: 2569, column: 7, scope: !14878)
!14887 = !DILocation(line: 2568, column: 4, scope: !14878)
!14888 = !DILocation(line: 2570, column: 14, scope: !14878)
!14889 = !DILocation(line: 2570, column: 24, scope: !14878)
!14890 = !DILocation(line: 2570, column: 4, scope: !14878)
!14891 = !DILocation(line: 2571, column: 3, scope: !14878)
!14892 = !DILocation(line: 2566, column: 30, scope: !14872)
!14893 = !DILocation(line: 2566, column: 3, scope: !14872)
!14894 = distinct !{!14894, !14876, !14895}
!14895 = !DILocation(line: 2571, column: 3, scope: !14868)
!14896 = !DILocation(line: 2572, column: 2, scope: !14869)
!14897 = !DILocation(line: 2573, column: 9, scope: !14898)
!14898 = distinct !DILexicalBlock(scope: !14839, file: !209, line: 2573, column: 2)
!14899 = !DILocation(line: 2573, column: 7, scope: !14898)
!14900 = !DILocation(line: 2573, column: 14, scope: !14901)
!14901 = distinct !DILexicalBlock(scope: !14898, file: !209, line: 2573, column: 2)
!14902 = !DILocation(line: 2573, column: 18, scope: !14901)
!14903 = !DILocation(line: 2573, column: 16, scope: !14901)
!14904 = !DILocation(line: 2573, column: 2, scope: !14898)
!14905 = !DILocalVariable(name: "krange", scope: !14906, file: !209, line: 2574, type: !14907)
!14906 = distinct !DILexicalBlock(scope: !14901, file: !209, line: 2573, column: 32)
!14907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14908, size: 64)
!14908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4205)
!14909 = !DILocation(line: 2574, column: 31, scope: !14906)
!14910 = !DILocation(line: 2576, column: 10, scope: !14906)
!14911 = !DILocation(line: 2576, column: 8, scope: !14906)
!14912 = !DILocation(line: 2577, column: 11, scope: !14906)
!14913 = !DILocation(line: 2577, column: 9, scope: !14906)
!14914 = !DILocation(line: 2578, column: 12, scope: !14906)
!14915 = !DILocation(line: 2578, column: 15, scope: !14906)
!14916 = !DILocation(line: 2578, column: 28, scope: !14906)
!14917 = !DILocation(line: 2578, column: 36, scope: !14906)
!14918 = !DILocation(line: 2578, column: 34, scope: !14906)
!14919 = !DILocation(line: 2578, column: 10, scope: !14906)
!14920 = !DILocation(line: 2579, column: 10, scope: !14906)
!14921 = !DILocation(line: 2580, column: 8, scope: !14906)
!14922 = !DILocation(line: 2581, column: 11, scope: !14906)
!14923 = !DILocation(line: 2581, column: 19, scope: !14906)
!14924 = !DILocation(line: 2581, column: 25, scope: !14906)
!14925 = !DILocation(line: 2581, column: 33, scope: !14906)
!14926 = !DILocation(line: 2581, column: 23, scope: !14906)
!14927 = !DILocation(line: 2581, column: 3, scope: !14906)
!14928 = !DILocation(line: 2583, column: 9, scope: !14929)
!14929 = distinct !DILexicalBlock(scope: !14906, file: !209, line: 2581, column: 38)
!14930 = !DILocation(line: 2584, column: 14, scope: !14929)
!14931 = !DILocation(line: 2584, column: 22, scope: !14929)
!14932 = !DILocation(line: 2584, column: 4, scope: !14929)
!14933 = !DILocation(line: 2585, column: 4, scope: !14929)
!14934 = !DILocation(line: 2587, column: 9, scope: !14929)
!14935 = !DILocation(line: 2588, column: 14, scope: !14929)
!14936 = !DILocation(line: 2588, column: 22, scope: !14929)
!14937 = !DILocation(line: 2588, column: 4, scope: !14929)
!14938 = !DILocation(line: 2589, column: 4, scope: !14929)
!14939 = !DILocation(line: 2591, column: 9, scope: !14929)
!14940 = !DILocation(line: 2592, column: 14, scope: !14929)
!14941 = !DILocation(line: 2593, column: 7, scope: !14929)
!14942 = !DILocation(line: 2592, column: 4, scope: !14929)
!14943 = !DILocation(line: 2594, column: 4, scope: !14929)
!14944 = !DILocation(line: 2596, column: 9, scope: !14929)
!14945 = !DILocation(line: 2597, column: 14, scope: !14929)
!14946 = !DILocation(line: 2598, column: 7, scope: !14929)
!14947 = !DILocation(line: 2597, column: 4, scope: !14929)
!14948 = !DILocation(line: 2599, column: 4, scope: !14929)
!14949 = !DILocation(line: 2601, column: 4, scope: !14929)
!14950 = !DILocation(line: 2603, column: 4, scope: !14929)
!14951 = !DILocation(line: 2605, column: 11, scope: !14906)
!14952 = !DILocation(line: 2605, column: 19, scope: !14906)
!14953 = !DILocation(line: 2605, column: 25, scope: !14906)
!14954 = !DILocation(line: 2605, column: 33, scope: !14906)
!14955 = !DILocation(line: 2605, column: 23, scope: !14906)
!14956 = !DILocation(line: 2605, column: 3, scope: !14906)
!14957 = !DILocation(line: 2607, column: 9, scope: !14958)
!14958 = distinct !DILexicalBlock(scope: !14906, file: !209, line: 2605, column: 38)
!14959 = !DILocation(line: 2608, column: 4, scope: !14958)
!14960 = !DILocation(line: 2610, column: 9, scope: !14958)
!14961 = !DILocation(line: 2611, column: 4, scope: !14958)
!14962 = !DILocation(line: 2613, column: 4, scope: !14958)
!14963 = !DILocation(line: 2615, column: 4, scope: !14958)
!14964 = !DILocation(line: 2617, column: 7, scope: !14965)
!14965 = distinct !DILexicalBlock(scope: !14906, file: !209, line: 2617, column: 7)
!14966 = !DILocation(line: 2617, column: 7, scope: !14906)
!14967 = !DILocation(line: 2618, column: 9, scope: !14965)
!14968 = !DILocation(line: 2618, column: 4, scope: !14965)
!14969 = !DILocation(line: 2619, column: 13, scope: !14906)
!14970 = !DILocation(line: 2619, column: 18, scope: !14906)
!14971 = !DILocation(line: 2619, column: 24, scope: !14906)
!14972 = !DILocation(line: 2619, column: 3, scope: !14906)
!14973 = !DILocation(line: 2620, column: 28, scope: !14906)
!14974 = !DILocation(line: 2620, column: 3, scope: !14906)
!14975 = !DILocation(line: 2620, column: 12, scope: !14906)
!14976 = !DILocation(line: 2620, column: 20, scope: !14906)
!14977 = !DILocation(line: 2620, column: 26, scope: !14906)
!14978 = !DILocation(line: 2621, column: 13, scope: !14906)
!14979 = !DILocation(line: 2621, column: 18, scope: !14906)
!14980 = !DILocation(line: 2621, column: 21, scope: !14906)
!14981 = !DILocation(line: 2621, column: 3, scope: !14906)
!14982 = !DILocation(line: 2622, column: 2, scope: !14906)
!14983 = !DILocation(line: 2573, column: 28, scope: !14901)
!14984 = !DILocation(line: 2573, column: 2, scope: !14901)
!14985 = distinct !{!14985, !14904, !14986}
!14986 = !DILocation(line: 2622, column: 2, scope: !14898)
!14987 = !DILocation(line: 2623, column: 9, scope: !14839)
!14988 = !DILocation(line: 2623, column: 2, scope: !14839)
!14989 = distinct !DISubprogram(name: "ni_old_ao_config_chanlist", scope: !209, file: !209, line: 2626, type: !14990, scopeLine: 2630, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!14990 = !DISubroutineType(types: !14991)
!14991 = !{!429, !3350, !4119, !1365, !7}
!14992 = !DILocalVariable(name: "dev", arg: 1, scope: !14989, file: !209, line: 2626, type: !3350)
!14993 = !DILocation(line: 2626, column: 60, scope: !14989)
!14994 = !DILocalVariable(name: "s", arg: 2, scope: !14989, file: !209, line: 2627, type: !4119)
!14995 = !DILocation(line: 2627, column: 35, scope: !14989)
!14996 = !DILocalVariable(name: "chanspec", arg: 3, scope: !14989, file: !209, line: 2628, type: !1365)
!14997 = !DILocation(line: 2628, column: 23, scope: !14989)
!14998 = !DILocalVariable(name: "n_chans", arg: 4, scope: !14989, file: !209, line: 2629, type: !7)
!14999 = !DILocation(line: 2629, column: 23, scope: !14989)
!15000 = !DILocalVariable(name: "devpriv", scope: !14989, file: !209, line: 2631, type: !4731)
!15001 = !DILocation(line: 2631, column: 21, scope: !14989)
!15002 = !DILocation(line: 2631, column: 31, scope: !14989)
!15003 = !DILocation(line: 2631, column: 36, scope: !14989)
!15004 = !DILocalVariable(name: "range", scope: !14989, file: !209, line: 2632, type: !7)
!15005 = !DILocation(line: 2632, column: 15, scope: !14989)
!15006 = !DILocalVariable(name: "chan", scope: !14989, file: !209, line: 2633, type: !7)
!15007 = !DILocation(line: 2633, column: 15, scope: !14989)
!15008 = !DILocalVariable(name: "conf", scope: !14989, file: !209, line: 2634, type: !7)
!15009 = !DILocation(line: 2634, column: 15, scope: !14989)
!15010 = !DILocalVariable(name: "i", scope: !14989, file: !209, line: 2635, type: !429)
!15011 = !DILocation(line: 2635, column: 6, scope: !14989)
!15012 = !DILocalVariable(name: "invert", scope: !14989, file: !209, line: 2636, type: !429)
!15013 = !DILocation(line: 2636, column: 6, scope: !14989)
!15014 = !DILocation(line: 2638, column: 9, scope: !15015)
!15015 = distinct !DILexicalBlock(scope: !14989, file: !209, line: 2638, column: 2)
!15016 = !DILocation(line: 2638, column: 7, scope: !15015)
!15017 = !DILocation(line: 2638, column: 14, scope: !15018)
!15018 = distinct !DILexicalBlock(scope: !15015, file: !209, line: 2638, column: 2)
!15019 = !DILocation(line: 2638, column: 18, scope: !15018)
!15020 = !DILocation(line: 2638, column: 16, scope: !15018)
!15021 = !DILocation(line: 2638, column: 2, scope: !15015)
!15022 = !DILocation(line: 2639, column: 10, scope: !15023)
!15023 = distinct !DILexicalBlock(scope: !15018, file: !209, line: 2638, column: 32)
!15024 = !DILocation(line: 2639, column: 8, scope: !15023)
!15025 = !DILocation(line: 2640, column: 11, scope: !15023)
!15026 = !DILocation(line: 2640, column: 9, scope: !15023)
!15027 = !DILocation(line: 2641, column: 10, scope: !15023)
!15028 = !DILocation(line: 2641, column: 8, scope: !15023)
!15029 = !DILocation(line: 2643, column: 31, scope: !15030)
!15030 = distinct !DILexicalBlock(scope: !15023, file: !209, line: 2643, column: 7)
!15031 = !DILocation(line: 2643, column: 34, scope: !15030)
!15032 = !DILocation(line: 2643, column: 7, scope: !15030)
!15033 = !DILocation(line: 2643, column: 7, scope: !15023)
!15034 = !DILocation(line: 2644, column: 9, scope: !15035)
!15035 = distinct !DILexicalBlock(scope: !15030, file: !209, line: 2643, column: 42)
!15036 = !DILocation(line: 2645, column: 14, scope: !15035)
!15037 = !DILocation(line: 2645, column: 17, scope: !15035)
!15038 = !DILocation(line: 2645, column: 25, scope: !15035)
!15039 = !DILocation(line: 2645, column: 30, scope: !15035)
!15040 = !DILocation(line: 2645, column: 11, scope: !15035)
!15041 = !DILocation(line: 2646, column: 3, scope: !15035)
!15042 = !DILocation(line: 2647, column: 11, scope: !15043)
!15043 = distinct !DILexicalBlock(scope: !15030, file: !209, line: 2646, column: 10)
!15044 = !DILocation(line: 2649, column: 32, scope: !15045)
!15045 = distinct !DILexicalBlock(scope: !15023, file: !209, line: 2649, column: 7)
!15046 = !DILocation(line: 2649, column: 35, scope: !15045)
!15047 = !DILocation(line: 2649, column: 7, scope: !15045)
!15048 = !DILocation(line: 2649, column: 7, scope: !15023)
!15049 = !DILocation(line: 2650, column: 9, scope: !15045)
!15050 = !DILocation(line: 2650, column: 4, scope: !15045)
!15051 = !DILocation(line: 2653, column: 7, scope: !15052)
!15052 = distinct !DILexicalBlock(scope: !15023, file: !209, line: 2653, column: 7)
!15053 = !DILocation(line: 2653, column: 16, scope: !15052)
!15054 = !DILocation(line: 2653, column: 19, scope: !15052)
!15055 = !DILocation(line: 2653, column: 7, scope: !15023)
!15056 = !DILocation(line: 2654, column: 9, scope: !15052)
!15057 = !DILocation(line: 2654, column: 4, scope: !15052)
!15058 = !DILocation(line: 2658, column: 7, scope: !15059)
!15059 = distinct !DILexicalBlock(scope: !15023, file: !209, line: 2658, column: 7)
!15060 = !DILocation(line: 2658, column: 28, scope: !15059)
!15061 = !DILocation(line: 2658, column: 7, scope: !15023)
!15062 = !DILocation(line: 2659, column: 9, scope: !15059)
!15063 = !DILocation(line: 2659, column: 4, scope: !15059)
!15064 = !DILocation(line: 2661, column: 13, scope: !15023)
!15065 = !DILocation(line: 2661, column: 18, scope: !15023)
!15066 = !DILocation(line: 2661, column: 3, scope: !15023)
!15067 = !DILocation(line: 2662, column: 28, scope: !15023)
!15068 = !DILocation(line: 2662, column: 3, scope: !15023)
!15069 = !DILocation(line: 2662, column: 12, scope: !15023)
!15070 = !DILocation(line: 2662, column: 20, scope: !15023)
!15071 = !DILocation(line: 2662, column: 26, scope: !15023)
!15072 = !DILocation(line: 2663, column: 2, scope: !15023)
!15073 = !DILocation(line: 2638, column: 28, scope: !15018)
!15074 = !DILocation(line: 2638, column: 2, scope: !15018)
!15075 = distinct !{!15075, !15021, !15076}
!15076 = !DILocation(line: 2663, column: 2, scope: !15015)
!15077 = !DILocation(line: 2664, column: 9, scope: !14989)
!15078 = !DILocation(line: 2664, column: 2, scope: !14989)
!15079 = distinct !DISubprogram(name: "comedi_range_is_external", scope: !233, file: !233, line: 697, type: !14826, scopeLine: 699, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!15080 = !DILocalVariable(name: "s", arg: 1, scope: !15079, file: !233, line: 697, type: !4119)
!15081 = !DILocation(line: 697, column: 70, scope: !15079)
!15082 = !DILocalVariable(name: "range", arg: 2, scope: !15079, file: !233, line: 698, type: !7)
!15083 = !DILocation(line: 698, column: 23, scope: !15079)
!15084 = !DILocation(line: 700, column: 12, scope: !15079)
!15085 = !DILocation(line: 700, column: 15, scope: !15079)
!15086 = !DILocation(line: 700, column: 28, scope: !15079)
!15087 = !DILocation(line: 700, column: 34, scope: !15079)
!15088 = !DILocation(line: 700, column: 41, scope: !15079)
!15089 = !DILocation(line: 700, column: 47, scope: !15079)
!15090 = !DILocation(line: 700, column: 10, scope: !15079)
!15091 = !DILocation(line: 700, column: 9, scope: !15079)
!15092 = !DILocation(line: 700, column: 2, scope: !15079)
!15093 = distinct !DISubprogram(name: "ni_check_trigger_arg", scope: !4827, file: !4827, line: 324, type: !15094, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!15094 = !DISubroutineType(types: !15095)
!15095 = !{!429, !4330, !4330, !4824}
!15096 = !DILocalVariable(name: "src", arg: 1, scope: !15093, file: !4827, line: 324, type: !4330)
!15097 = !DILocation(line: 324, column: 50, scope: !15093)
!15098 = !DILocalVariable(name: "dest", arg: 2, scope: !15093, file: !4827, line: 324, type: !4330)
!15099 = !DILocation(line: 324, column: 65, scope: !15093)
!15100 = !DILocalVariable(name: "tables", arg: 3, scope: !15093, file: !4827, line: 325, type: !4824)
!15101 = !DILocation(line: 325, column: 42, scope: !15093)
!15102 = !DILocation(line: 327, column: 36, scope: !15093)
!15103 = !DILocation(line: 327, column: 41, scope: !15093)
!15104 = !DILocation(line: 327, column: 47, scope: !15093)
!15105 = !DILocation(line: 327, column: 9, scope: !15093)
!15106 = !DILocation(line: 327, column: 2, scope: !15093)
!15107 = distinct !DISubprogram(name: "ni_ao_cmd_personalize", scope: !209, file: !209, line: 2906, type: !15108, scopeLine: 2908, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!15108 = !DISubroutineType(types: !15109)
!15109 = !{null, !3350, !8662}
!15110 = !DILocalVariable(name: "dev", arg: 1, scope: !15107, file: !209, line: 2906, type: !3350)
!15111 = !DILocation(line: 2906, column: 57, scope: !15107)
!15112 = !DILocalVariable(name: "cmd", arg: 2, scope: !15107, file: !209, line: 2907, type: !8662)
!15113 = !DILocation(line: 2907, column: 32, scope: !15107)
!15114 = !DILocalVariable(name: "board", scope: !15107, file: !209, line: 2909, type: !4959)
!15115 = !DILocation(line: 2909, column: 32, scope: !15107)
!15116 = !DILocation(line: 2909, column: 40, scope: !15107)
!15117 = !DILocation(line: 2909, column: 45, scope: !15107)
!15118 = !DILocalVariable(name: "bits", scope: !15107, file: !209, line: 2910, type: !7)
!15119 = !DILocation(line: 2910, column: 15, scope: !15107)
!15120 = !DILocation(line: 2912, column: 16, scope: !15107)
!15121 = !DILocation(line: 2912, column: 2, scope: !15107)
!15122 = !DILocation(line: 2931, column: 5, scope: !15107)
!15123 = !DILocation(line: 2931, column: 12, scope: !15107)
!15124 = !DILocation(line: 2930, column: 34, scope: !15107)
!15125 = !DILocation(line: 2917, column: 4, scope: !15107)
!15126 = !DILocation(line: 2914, column: 7, scope: !15107)
!15127 = !DILocation(line: 2949, column: 16, scope: !15107)
!15128 = !DILocation(line: 2949, column: 21, scope: !15107)
!15129 = !DILocation(line: 2949, column: 2, scope: !15107)
!15130 = !DILocation(line: 2951, column: 16, scope: !15107)
!15131 = !DILocation(line: 2951, column: 2, scope: !15107)
!15132 = !DILocation(line: 2952, column: 1, scope: !15107)
!15133 = distinct !DISubprogram(name: "ni_ao_cmd_set_trigger", scope: !209, file: !209, line: 2954, type: !15108, scopeLine: 2956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!15134 = !DILocalVariable(name: "dev", arg: 1, scope: !15133, file: !209, line: 2954, type: !3350)
!15135 = !DILocation(line: 2954, column: 57, scope: !15133)
!15136 = !DILocalVariable(name: "cmd", arg: 2, scope: !15133, file: !209, line: 2955, type: !8662)
!15137 = !DILocation(line: 2955, column: 32, scope: !15133)
!15138 = !DILocalVariable(name: "devpriv", scope: !15133, file: !209, line: 2957, type: !4731)
!15139 = !DILocation(line: 2957, column: 21, scope: !15133)
!15140 = !DILocation(line: 2957, column: 31, scope: !15133)
!15141 = !DILocation(line: 2957, column: 36, scope: !15133)
!15142 = !DILocalVariable(name: "trigsel", scope: !15133, file: !209, line: 2958, type: !7)
!15143 = !DILocation(line: 2958, column: 15, scope: !15133)
!15144 = !DILocation(line: 2960, column: 16, scope: !15133)
!15145 = !DILocation(line: 2960, column: 2, scope: !15133)
!15146 = !DILocation(line: 2963, column: 6, scope: !15147)
!15147 = distinct !DILexicalBlock(scope: !15133, file: !209, line: 2963, column: 6)
!15148 = !DILocation(line: 2963, column: 11, scope: !15147)
!15149 = !DILocation(line: 2963, column: 20, scope: !15147)
!15150 = !DILocation(line: 2963, column: 6, scope: !15133)
!15151 = !DILocation(line: 2964, column: 3, scope: !15152)
!15152 = distinct !DILexicalBlock(scope: !15147, file: !209, line: 2963, column: 34)
!15153 = !DILocation(line: 2964, column: 12, scope: !15152)
!15154 = !DILocation(line: 2964, column: 21, scope: !15152)
!15155 = !DILocation(line: 2965, column: 3, scope: !15152)
!15156 = !DILocation(line: 2965, column: 12, scope: !15152)
!15157 = !DILocation(line: 2965, column: 21, scope: !15152)
!15158 = !DILocation(line: 2966, column: 2, scope: !15152)
!15159 = !DILocation(line: 2967, column: 3, scope: !15160)
!15160 = distinct !DILexicalBlock(scope: !15147, file: !209, line: 2966, column: 9)
!15161 = !DILocation(line: 2967, column: 12, scope: !15160)
!15162 = !DILocation(line: 2967, column: 21, scope: !15160)
!15163 = !DILocation(line: 2968, column: 3, scope: !15160)
!15164 = !DILocation(line: 2968, column: 12, scope: !15160)
!15165 = !DILocation(line: 2968, column: 21, scope: !15160)
!15166 = !DILocation(line: 2970, column: 16, scope: !15133)
!15167 = !DILocation(line: 2970, column: 21, scope: !15133)
!15168 = !DILocation(line: 2970, column: 30, scope: !15133)
!15169 = !DILocation(line: 2970, column: 2, scope: !15133)
!15170 = !DILocation(line: 2972, column: 6, scope: !15171)
!15171 = distinct !DILexicalBlock(scope: !15133, file: !209, line: 2972, column: 6)
!15172 = !DILocation(line: 2972, column: 11, scope: !15171)
!15173 = !DILocation(line: 2972, column: 21, scope: !15171)
!15174 = !DILocation(line: 2972, column: 6, scope: !15133)
!15175 = !DILocation(line: 2973, column: 11, scope: !15176)
!15176 = distinct !DILexicalBlock(scope: !15171, file: !209, line: 2972, column: 34)
!15177 = !DILocation(line: 2975, column: 2, scope: !15176)
!15178 = !DILocation(line: 2976, column: 13, scope: !15179)
!15179 = distinct !DILexicalBlock(scope: !15171, file: !209, line: 2975, column: 9)
!15180 = !DILocation(line: 2976, column: 11, scope: !15179)
!15181 = !DILocation(line: 2983, column: 7, scope: !15182)
!15182 = distinct !DILexicalBlock(scope: !15179, file: !209, line: 2983, column: 7)
!15183 = !DILocation(line: 2983, column: 12, scope: !15182)
!15184 = !DILocation(line: 2983, column: 22, scope: !15182)
!15185 = !DILocation(line: 2983, column: 7, scope: !15179)
!15186 = !DILocation(line: 2984, column: 12, scope: !15182)
!15187 = !DILocation(line: 2984, column: 4, scope: !15182)
!15188 = !DILocation(line: 2986, column: 7, scope: !15189)
!15189 = distinct !DILexicalBlock(scope: !15179, file: !209, line: 2986, column: 7)
!15190 = !DILocation(line: 2986, column: 12, scope: !15189)
!15191 = !DILocation(line: 2986, column: 22, scope: !15189)
!15192 = !DILocation(line: 2986, column: 7, scope: !15179)
!15193 = !DILocation(line: 2987, column: 12, scope: !15189)
!15194 = !DILocation(line: 2987, column: 4, scope: !15189)
!15195 = !DILocation(line: 2989, column: 16, scope: !15133)
!15196 = !DILocation(line: 2989, column: 21, scope: !15133)
!15197 = !DILocation(line: 2989, column: 2, scope: !15133)
!15198 = !DILocation(line: 2995, column: 2, scope: !15133)
!15199 = !DILocation(line: 2995, column: 11, scope: !15133)
!15200 = !DILocation(line: 2995, column: 20, scope: !15133)
!15201 = !DILocation(line: 2996, column: 16, scope: !15133)
!15202 = !DILocation(line: 2996, column: 21, scope: !15133)
!15203 = !DILocation(line: 2996, column: 30, scope: !15133)
!15204 = !DILocation(line: 2996, column: 2, scope: !15133)
!15205 = !DILocation(line: 2998, column: 16, scope: !15133)
!15206 = !DILocation(line: 2998, column: 2, scope: !15133)
!15207 = !DILocation(line: 2999, column: 1, scope: !15133)
!15208 = distinct !DISubprogram(name: "ni_ao_cmd_set_counters", scope: !209, file: !209, line: 3001, type: !15108, scopeLine: 3003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!15209 = !DILocalVariable(name: "dev", arg: 1, scope: !15208, file: !209, line: 3001, type: !3350)
!15210 = !DILocation(line: 3001, column: 58, scope: !15208)
!15211 = !DILocalVariable(name: "cmd", arg: 2, scope: !15208, file: !209, line: 3002, type: !8662)
!15212 = !DILocation(line: 3002, column: 33, scope: !15208)
!15213 = !DILocalVariable(name: "devpriv", scope: !15208, file: !209, line: 3004, type: !4731)
!15214 = !DILocation(line: 3004, column: 21, scope: !15208)
!15215 = !DILocation(line: 3004, column: 31, scope: !15208)
!15216 = !DILocation(line: 3004, column: 36, scope: !15208)
!15217 = !DILocation(line: 3007, column: 16, scope: !15208)
!15218 = !DILocation(line: 3007, column: 2, scope: !15208)
!15219 = !DILocation(line: 3015, column: 16, scope: !15208)
!15220 = !DILocation(line: 3015, column: 21, scope: !15208)
!15221 = !DILocation(line: 3015, column: 30, scope: !15208)
!15222 = !DILocation(line: 3015, column: 2, scope: !15208)
!15223 = !DILocation(line: 3019, column: 2, scope: !15208)
!15224 = !DILocation(line: 3019, column: 11, scope: !15208)
!15225 = !DILocation(line: 3019, column: 20, scope: !15208)
!15226 = !DILocation(line: 3020, column: 16, scope: !15208)
!15227 = !DILocation(line: 3020, column: 21, scope: !15208)
!15228 = !DILocation(line: 3020, column: 30, scope: !15208)
!15229 = !DILocation(line: 3020, column: 2, scope: !15208)
!15230 = !DILocation(line: 3027, column: 16, scope: !15208)
!15231 = !DILocation(line: 3027, column: 2, scope: !15208)
!15232 = !DILocation(line: 3030, column: 16, scope: !15208)
!15233 = !DILocation(line: 3030, column: 2, scope: !15208)
!15234 = !DILocation(line: 3034, column: 2, scope: !15208)
!15235 = !DILocation(line: 3034, column: 11, scope: !15208)
!15236 = !DILocation(line: 3034, column: 20, scope: !15208)
!15237 = !DILocation(line: 3035, column: 16, scope: !15208)
!15238 = !DILocation(line: 3035, column: 21, scope: !15208)
!15239 = !DILocation(line: 3035, column: 30, scope: !15208)
!15240 = !DILocation(line: 3035, column: 2, scope: !15208)
!15241 = !DILocalVariable(name: "stop_arg", scope: !15242, file: !209, line: 3046, type: !7)
!15242 = distinct !DILexicalBlock(scope: !15208, file: !209, line: 3045, column: 2)
!15243 = !DILocation(line: 3046, column: 16, scope: !15242)
!15244 = !DILocation(line: 3046, column: 27, scope: !15242)
!15245 = !DILocation(line: 3046, column: 32, scope: !15242)
!15246 = !DILocation(line: 3046, column: 41, scope: !15242)
!15247 = !DILocation(line: 3047, column: 5, scope: !15242)
!15248 = !DILocation(line: 3047, column: 10, scope: !15242)
!15249 = !DILocation(line: 3047, column: 19, scope: !15242)
!15250 = !DILocation(line: 3049, column: 7, scope: !15251)
!15251 = distinct !DILexicalBlock(scope: !15242, file: !209, line: 3049, column: 7)
!15252 = !DILocation(line: 3049, column: 16, scope: !15251)
!15253 = !DILocation(line: 3049, column: 7, scope: !15242)
!15254 = !DILocation(line: 3054, column: 18, scope: !15255)
!15255 = distinct !DILexicalBlock(scope: !15251, file: !209, line: 3049, column: 29)
!15256 = !DILocation(line: 3054, column: 23, scope: !15255)
!15257 = !DILocation(line: 3054, column: 32, scope: !15255)
!15258 = !DILocation(line: 3054, column: 4, scope: !15255)
!15259 = !DILocation(line: 3057, column: 18, scope: !15255)
!15260 = !DILocation(line: 3057, column: 4, scope: !15255)
!15261 = !DILocation(line: 3059, column: 3, scope: !15255)
!15262 = !DILocation(line: 3060, column: 18, scope: !15263)
!15263 = distinct !DILexicalBlock(scope: !15251, file: !209, line: 3059, column: 10)
!15264 = !DILocation(line: 3060, column: 23, scope: !15263)
!15265 = !DILocation(line: 3060, column: 4, scope: !15263)
!15266 = !DILocation(line: 3063, column: 18, scope: !15263)
!15267 = !DILocation(line: 3063, column: 4, scope: !15263)
!15268 = !DILocation(line: 3070, column: 18, scope: !15263)
!15269 = !DILocation(line: 3070, column: 23, scope: !15263)
!15270 = !DILocation(line: 3070, column: 32, scope: !15263)
!15271 = !DILocation(line: 3070, column: 4, scope: !15263)
!15272 = !DILocation(line: 3074, column: 16, scope: !15208)
!15273 = !DILocation(line: 3074, column: 2, scope: !15208)
!15274 = !DILocation(line: 3075, column: 1, scope: !15208)
!15275 = distinct !DISubprogram(name: "ni_ao_cmd_set_update", scope: !209, file: !209, line: 3077, type: !15108, scopeLine: 3079, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!15276 = !DILocalVariable(name: "dev", arg: 1, scope: !15275, file: !209, line: 3077, type: !3350)
!15277 = !DILocation(line: 3077, column: 56, scope: !15275)
!15278 = !DILocalVariable(name: "cmd", arg: 2, scope: !15275, file: !209, line: 3078, type: !8662)
!15279 = !DILocation(line: 3078, column: 31, scope: !15275)
!15280 = !DILocalVariable(name: "devpriv", scope: !15275, file: !209, line: 3080, type: !4731)
!15281 = !DILocation(line: 3080, column: 21, scope: !15275)
!15282 = !DILocation(line: 3080, column: 31, scope: !15275)
!15283 = !DILocation(line: 3080, column: 36, scope: !15275)
!15284 = !DILocation(line: 3082, column: 16, scope: !15275)
!15285 = !DILocation(line: 3082, column: 2, scope: !15275)
!15286 = !DILocation(line: 3088, column: 2, scope: !15275)
!15287 = !DILocation(line: 3088, column: 11, scope: !15275)
!15288 = !DILocation(line: 3088, column: 20, scope: !15275)
!15289 = !DILocation(line: 3093, column: 6, scope: !15290)
!15290 = distinct !DILexicalBlock(scope: !15275, file: !209, line: 3093, column: 6)
!15291 = !DILocation(line: 3093, column: 11, scope: !15290)
!15292 = !DILocation(line: 3093, column: 26, scope: !15290)
!15293 = !DILocation(line: 3093, column: 6, scope: !15275)
!15294 = !DILocalVariable(name: "trigvar", scope: !15295, file: !209, line: 3094, type: !7)
!15295 = distinct !DILexicalBlock(scope: !15290, file: !209, line: 3093, column: 41)
!15296 = !DILocation(line: 3094, column: 16, scope: !15295)
!15297 = !DILocation(line: 3096, column: 3, scope: !15295)
!15298 = !DILocation(line: 3096, column: 12, scope: !15295)
!15299 = !DILocation(line: 3096, column: 21, scope: !15295)
!15300 = !DILocation(line: 3126, column: 28, scope: !15295)
!15301 = !DILocation(line: 3126, column: 33, scope: !15295)
!15302 = !DILocation(line: 3126, column: 38, scope: !15295)
!15303 = !DILocation(line: 3126, column: 13, scope: !15295)
!15304 = !DILocation(line: 3126, column: 11, scope: !15295)
!15305 = !DILocation(line: 3134, column: 17, scope: !15295)
!15306 = !DILocation(line: 3134, column: 3, scope: !15295)
!15307 = !DILocation(line: 3135, column: 17, scope: !15295)
!15308 = !DILocation(line: 3135, column: 3, scope: !15295)
!15309 = !DILocation(line: 3136, column: 17, scope: !15295)
!15310 = !DILocation(line: 3136, column: 22, scope: !15295)
!15311 = !DILocation(line: 3136, column: 3, scope: !15295)
!15312 = !DILocation(line: 3137, column: 2, scope: !15295)
!15313 = !DILocation(line: 3139, column: 3, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15290, file: !209, line: 3137, column: 9)
!15315 = !DILocation(line: 3139, column: 12, scope: !15314)
!15316 = !DILocation(line: 3139, column: 21, scope: !15314)
!15317 = !DILocation(line: 3140, column: 24, scope: !15314)
!15318 = !DILocation(line: 3140, column: 3, scope: !15314)
!15319 = !DILocation(line: 3140, column: 12, scope: !15314)
!15320 = !DILocation(line: 3140, column: 21, scope: !15314)
!15321 = !DILocation(line: 3145, column: 7, scope: !15322)
!15322 = distinct !DILexicalBlock(scope: !15314, file: !209, line: 3145, column: 7)
!15323 = !DILocation(line: 3145, column: 12, scope: !15322)
!15324 = !DILocation(line: 3145, column: 27, scope: !15322)
!15325 = !DILocation(line: 3145, column: 7, scope: !15314)
!15326 = !DILocation(line: 3146, column: 4, scope: !15322)
!15327 = !DILocation(line: 3146, column: 13, scope: !15322)
!15328 = !DILocation(line: 3146, column: 22, scope: !15322)
!15329 = !DILocation(line: 3149, column: 16, scope: !15275)
!15330 = !DILocation(line: 3149, column: 21, scope: !15275)
!15331 = !DILocation(line: 3149, column: 30, scope: !15275)
!15332 = !DILocation(line: 3149, column: 2, scope: !15275)
!15333 = !DILocation(line: 3150, column: 16, scope: !15275)
!15334 = !DILocation(line: 3150, column: 21, scope: !15275)
!15335 = !DILocation(line: 3150, column: 30, scope: !15275)
!15336 = !DILocation(line: 3150, column: 2, scope: !15275)
!15337 = !DILocation(line: 3151, column: 2, scope: !15275)
!15338 = !DILocation(line: 3151, column: 11, scope: !15275)
!15339 = !DILocation(line: 3151, column: 20, scope: !15275)
!15340 = !DILocation(line: 3153, column: 16, scope: !15275)
!15341 = !DILocation(line: 3153, column: 21, scope: !15275)
!15342 = !DILocation(line: 3153, column: 30, scope: !15275)
!15343 = !DILocation(line: 3153, column: 2, scope: !15275)
!15344 = !DILocation(line: 3156, column: 2, scope: !15275)
!15345 = !DILocation(line: 3156, column: 11, scope: !15275)
!15346 = !DILocation(line: 3156, column: 19, scope: !15275)
!15347 = !DILocation(line: 3159, column: 16, scope: !15275)
!15348 = !DILocation(line: 3159, column: 21, scope: !15275)
!15349 = !DILocation(line: 3159, column: 30, scope: !15275)
!15350 = !DILocation(line: 3159, column: 2, scope: !15275)
!15351 = !DILocation(line: 3161, column: 16, scope: !15275)
!15352 = !DILocation(line: 3161, column: 2, scope: !15275)
!15353 = !DILocation(line: 3162, column: 1, scope: !15275)
!15354 = distinct !DISubprogram(name: "ni_ao_cmd_set_channels", scope: !209, file: !209, line: 3164, type: !4354, scopeLine: 3166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!15355 = !DILocalVariable(name: "dev", arg: 1, scope: !15354, file: !209, line: 3164, type: !3350)
!15356 = !DILocation(line: 3164, column: 58, scope: !15354)
!15357 = !DILocalVariable(name: "s", arg: 2, scope: !15354, file: !209, line: 3165, type: !4119)
!15358 = !DILocation(line: 3165, column: 33, scope: !15354)
!15359 = !DILocalVariable(name: "devpriv", scope: !15354, file: !209, line: 3167, type: !4731)
!15360 = !DILocation(line: 3167, column: 21, scope: !15354)
!15361 = !DILocation(line: 3167, column: 31, scope: !15354)
!15362 = !DILocation(line: 3167, column: 36, scope: !15354)
!15363 = !DILocalVariable(name: "cmd", scope: !15354, file: !209, line: 3168, type: !8662)
!15364 = !DILocation(line: 3168, column: 27, scope: !15354)
!15365 = !DILocation(line: 3168, column: 34, scope: !15354)
!15366 = !DILocation(line: 3168, column: 37, scope: !15354)
!15367 = !DILocation(line: 3168, column: 44, scope: !15354)
!15368 = !DILocalVariable(name: "bits", scope: !15354, file: !209, line: 3169, type: !7)
!15369 = !DILocation(line: 3169, column: 15, scope: !15354)
!15370 = !DILocation(line: 3171, column: 16, scope: !15354)
!15371 = !DILocation(line: 3171, column: 2, scope: !15354)
!15372 = !DILocation(line: 3173, column: 6, scope: !15373)
!15373 = distinct !DILexicalBlock(scope: !15354, file: !209, line: 3173, column: 6)
!15374 = !DILocation(line: 3173, column: 15, scope: !15373)
!15375 = !DILocation(line: 3173, column: 6, scope: !15354)
!15376 = !DILocalVariable(name: "i", scope: !15377, file: !209, line: 3174, type: !7)
!15377 = distinct !DILexicalBlock(scope: !15373, file: !209, line: 3173, column: 24)
!15378 = !DILocation(line: 3174, column: 16, scope: !15377)
!15379 = !DILocation(line: 3176, column: 8, scope: !15377)
!15380 = !DILocation(line: 3177, column: 10, scope: !15381)
!15381 = distinct !DILexicalBlock(scope: !15377, file: !209, line: 3177, column: 3)
!15382 = !DILocation(line: 3177, column: 8, scope: !15381)
!15383 = !DILocation(line: 3177, column: 15, scope: !15384)
!15384 = distinct !DILexicalBlock(scope: !15381, file: !209, line: 3177, column: 3)
!15385 = !DILocation(line: 3177, column: 19, scope: !15384)
!15386 = !DILocation(line: 3177, column: 24, scope: !15384)
!15387 = !DILocation(line: 3177, column: 17, scope: !15384)
!15388 = !DILocation(line: 3177, column: 3, scope: !15381)
!15389 = !DILocalVariable(name: "chan", scope: !15390, file: !209, line: 3178, type: !429)
!15390 = distinct !DILexicalBlock(scope: !15384, file: !209, line: 3177, column: 43)
!15391 = !DILocation(line: 3178, column: 8, scope: !15390)
!15392 = !DILocation(line: 3178, column: 15, scope: !15390)
!15393 = !DILocation(line: 3180, column: 17, scope: !15390)
!15394 = !DILocation(line: 3180, column: 14, scope: !15390)
!15395 = !DILocation(line: 3180, column: 9, scope: !15390)
!15396 = !DILocation(line: 3181, column: 19, scope: !15390)
!15397 = !DILocation(line: 3181, column: 24, scope: !15390)
!15398 = !DILocation(line: 3181, column: 4, scope: !15390)
!15399 = !DILocation(line: 3182, column: 3, scope: !15390)
!15400 = !DILocation(line: 3177, column: 38, scope: !15384)
!15401 = !DILocation(line: 3177, column: 3, scope: !15384)
!15402 = distinct !{!15402, !15388, !15403}
!15403 = !DILocation(line: 3182, column: 3, scope: !15381)
!15404 = !DILocation(line: 3183, column: 18, scope: !15377)
!15405 = !DILocation(line: 3183, column: 23, scope: !15377)
!15406 = !DILocation(line: 3183, column: 3, scope: !15377)
!15407 = !DILocation(line: 3184, column: 2, scope: !15377)
!15408 = !DILocation(line: 3186, column: 24, scope: !15354)
!15409 = !DILocation(line: 3186, column: 29, scope: !15354)
!15410 = !DILocation(line: 3186, column: 32, scope: !15354)
!15411 = !DILocation(line: 3186, column: 37, scope: !15354)
!15412 = !DILocation(line: 3186, column: 47, scope: !15354)
!15413 = !DILocation(line: 3186, column: 52, scope: !15354)
!15414 = !DILocation(line: 3186, column: 2, scope: !15354)
!15415 = !DILocation(line: 3188, column: 6, scope: !15416)
!15416 = distinct !DILexicalBlock(scope: !15354, file: !209, line: 3188, column: 6)
!15417 = !DILocation(line: 3188, column: 11, scope: !15416)
!15418 = !DILocation(line: 3188, column: 24, scope: !15416)
!15419 = !DILocation(line: 3188, column: 6, scope: !15354)
!15420 = !DILocation(line: 3189, column: 3, scope: !15421)
!15421 = distinct !DILexicalBlock(scope: !15416, file: !209, line: 3188, column: 29)
!15422 = !DILocation(line: 3189, column: 12, scope: !15421)
!15423 = !DILocation(line: 3189, column: 21, scope: !15421)
!15424 = !DILocation(line: 3190, column: 10, scope: !15421)
!15425 = !DILocation(line: 3190, column: 8, scope: !15421)
!15426 = !DILocation(line: 3193, column: 2, scope: !15421)
!15427 = !DILocation(line: 3194, column: 3, scope: !15428)
!15428 = distinct !DILexicalBlock(scope: !15416, file: !209, line: 3193, column: 9)
!15429 = !DILocation(line: 3194, column: 12, scope: !15428)
!15430 = !DILocation(line: 3194, column: 21, scope: !15428)
!15431 = !DILocation(line: 3195, column: 8, scope: !15428)
!15432 = !DILocation(line: 3196, column: 7, scope: !15433)
!15433 = distinct !DILexicalBlock(scope: !15428, file: !209, line: 3196, column: 7)
!15434 = !DILocation(line: 3196, column: 16, scope: !15433)
!15435 = !DILocation(line: 3196, column: 30, scope: !15433)
!15436 = !DILocation(line: 3196, column: 39, scope: !15433)
!15437 = !DILocation(line: 3196, column: 28, scope: !15433)
!15438 = !DILocation(line: 3196, column: 7, scope: !15428)
!15439 = !DILocation(line: 3197, column: 9, scope: !15433)
!15440 = !DILocation(line: 3197, column: 4, scope: !15433)
!15441 = !DILocation(line: 3199, column: 12, scope: !15433)
!15442 = !DILocation(line: 3199, column: 9, scope: !15433)
!15443 = !DILocation(line: 3203, column: 16, scope: !15354)
!15444 = !DILocation(line: 3203, column: 21, scope: !15354)
!15445 = !DILocation(line: 3203, column: 30, scope: !15354)
!15446 = !DILocation(line: 3203, column: 2, scope: !15354)
!15447 = !DILocation(line: 3204, column: 16, scope: !15354)
!15448 = !DILocation(line: 3204, column: 21, scope: !15354)
!15449 = !DILocation(line: 3204, column: 2, scope: !15354)
!15450 = !DILocation(line: 3206, column: 16, scope: !15354)
!15451 = !DILocation(line: 3206, column: 2, scope: !15354)
!15452 = !DILocation(line: 3207, column: 1, scope: !15354)
!15453 = distinct !DISubprogram(name: "ni_ao_cmd_set_stop_conditions", scope: !209, file: !209, line: 3209, type: !15108, scopeLine: 3211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!15454 = !DILocalVariable(name: "dev", arg: 1, scope: !15453, file: !209, line: 3209, type: !3350)
!15455 = !DILocation(line: 3209, column: 65, scope: !15453)
!15456 = !DILocalVariable(name: "cmd", arg: 2, scope: !15453, file: !209, line: 3210, type: !8662)
!15457 = !DILocation(line: 3210, column: 33, scope: !15453)
!15458 = !DILocalVariable(name: "devpriv", scope: !15453, file: !209, line: 3212, type: !4731)
!15459 = !DILocation(line: 3212, column: 21, scope: !15453)
!15460 = !DILocation(line: 3212, column: 31, scope: !15453)
!15461 = !DILocation(line: 3212, column: 36, scope: !15453)
!15462 = !DILocation(line: 3214, column: 16, scope: !15453)
!15463 = !DILocation(line: 3214, column: 2, scope: !15453)
!15464 = !DILocation(line: 3216, column: 2, scope: !15453)
!15465 = !DILocation(line: 3216, column: 11, scope: !15453)
!15466 = !DILocation(line: 3216, column: 20, scope: !15453)
!15467 = !DILocation(line: 3217, column: 16, scope: !15453)
!15468 = !DILocation(line: 3217, column: 21, scope: !15453)
!15469 = !DILocation(line: 3217, column: 30, scope: !15453)
!15470 = !DILocation(line: 3217, column: 2, scope: !15453)
!15471 = !DILocation(line: 3225, column: 16, scope: !15453)
!15472 = !DILocation(line: 3225, column: 2, scope: !15453)
!15473 = !DILocation(line: 3226, column: 1, scope: !15453)
!15474 = distinct !DISubprogram(name: "ni_ao_cmd_set_fifo_mode", scope: !209, file: !209, line: 3228, type: !4265, scopeLine: 3229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!15475 = !DILocalVariable(name: "dev", arg: 1, scope: !15474, file: !209, line: 3228, type: !3350)
!15476 = !DILocation(line: 3228, column: 59, scope: !15474)
!15477 = !DILocalVariable(name: "devpriv", scope: !15474, file: !209, line: 3230, type: !4731)
!15478 = !DILocation(line: 3230, column: 21, scope: !15474)
!15479 = !DILocation(line: 3230, column: 31, scope: !15474)
!15480 = !DILocation(line: 3230, column: 36, scope: !15474)
!15481 = !DILocation(line: 3232, column: 16, scope: !15474)
!15482 = !DILocation(line: 3232, column: 2, scope: !15474)
!15483 = !DILocation(line: 3234, column: 2, scope: !15474)
!15484 = !DILocation(line: 3234, column: 11, scope: !15474)
!15485 = !DILocation(line: 3234, column: 20, scope: !15474)
!15486 = !DILocation(line: 3236, column: 2, scope: !15474)
!15487 = !DILocation(line: 3236, column: 11, scope: !15474)
!15488 = !DILocation(line: 3236, column: 20, scope: !15474)
!15489 = !DILocation(line: 3241, column: 2, scope: !15474)
!15490 = !DILocation(line: 3241, column: 11, scope: !15474)
!15491 = !DILocation(line: 3241, column: 20, scope: !15474)
!15492 = !DILocation(line: 3242, column: 16, scope: !15474)
!15493 = !DILocation(line: 3242, column: 21, scope: !15474)
!15494 = !DILocation(line: 3242, column: 30, scope: !15474)
!15495 = !DILocation(line: 3242, column: 2, scope: !15474)
!15496 = !DILocation(line: 3245, column: 16, scope: !15474)
!15497 = !DILocation(line: 3245, column: 2, scope: !15474)
!15498 = !DILocation(line: 3247, column: 16, scope: !15474)
!15499 = !DILocation(line: 3247, column: 2, scope: !15474)
!15500 = !DILocation(line: 3250, column: 1, scope: !15474)
!15501 = distinct !DISubprogram(name: "ni_cmd_set_mite_transfer", scope: !209, file: !209, line: 1955, type: !15502, scopeLine: 1959, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!15502 = !DISubroutineType(types: !15503)
!15503 = !{null, !4794, !4119, !8662, !7}
!15504 = !DILocalVariable(name: "ring", arg: 1, scope: !15501, file: !209, line: 1955, type: !4794)
!15505 = !DILocation(line: 1955, column: 56, scope: !15501)
!15506 = !DILocalVariable(name: "sdev", arg: 2, scope: !15501, file: !209, line: 1956, type: !4119)
!15507 = !DILocation(line: 1956, column: 35, scope: !15501)
!15508 = !DILocalVariable(name: "cmd", arg: 3, scope: !15501, file: !209, line: 1957, type: !8662)
!15509 = !DILocation(line: 1957, column: 35, scope: !15501)
!15510 = !DILocalVariable(name: "max_count", arg: 4, scope: !15501, file: !209, line: 1958, type: !7)
!15511 = !DILocation(line: 1958, column: 23, scope: !15501)
!15512 = !DILocalVariable(name: "nbytes", scope: !15501, file: !209, line: 1961, type: !7)
!15513 = !DILocation(line: 1961, column: 15, scope: !15501)
!15514 = !DILocation(line: 1961, column: 24, scope: !15501)
!15515 = !DILocation(line: 1963, column: 6, scope: !15516)
!15516 = distinct !DILexicalBlock(scope: !15501, file: !209, line: 1963, column: 6)
!15517 = !DILocation(line: 1963, column: 11, scope: !15516)
!15518 = !DILocation(line: 1963, column: 20, scope: !15516)
!15519 = !DILocation(line: 1963, column: 24, scope: !15516)
!15520 = !DILocation(line: 1963, column: 27, scope: !15516)
!15521 = !DILocation(line: 1963, column: 32, scope: !15516)
!15522 = !DILocation(line: 1963, column: 43, scope: !15516)
!15523 = !DILocation(line: 1963, column: 41, scope: !15516)
!15524 = !DILocation(line: 1963, column: 6, scope: !15501)
!15525 = !DILocation(line: 1964, column: 12, scope: !15516)
!15526 = !DILocation(line: 1964, column: 17, scope: !15516)
!15527 = !DILocation(line: 1964, column: 10, scope: !15516)
!15528 = !DILocation(line: 1964, column: 3, scope: !15516)
!15529 = !DILocation(line: 1965, column: 34, scope: !15501)
!15530 = !DILocation(line: 1965, column: 12, scope: !15501)
!15531 = !DILocation(line: 1965, column: 9, scope: !15501)
!15532 = !DILocation(line: 1967, column: 6, scope: !15533)
!15533 = distinct !DILexicalBlock(scope: !15501, file: !209, line: 1967, column: 6)
!15534 = !DILocation(line: 1967, column: 15, scope: !15533)
!15535 = !DILocation(line: 1967, column: 21, scope: !15533)
!15536 = !DILocation(line: 1967, column: 28, scope: !15533)
!15537 = !DILocation(line: 1967, column: 13, scope: !15533)
!15538 = !DILocation(line: 1967, column: 6, scope: !15501)
!15539 = !DILocation(line: 1968, column: 7, scope: !15540)
!15540 = distinct !DILexicalBlock(scope: !15541, file: !209, line: 1968, column: 7)
!15541 = distinct !DILexicalBlock(scope: !15533, file: !209, line: 1967, column: 44)
!15542 = !DILocation(line: 1968, column: 12, scope: !15540)
!15543 = !DILocation(line: 1968, column: 21, scope: !15540)
!15544 = !DILocation(line: 1968, column: 7, scope: !15541)
!15545 = !DILocation(line: 1969, column: 4, scope: !15540)
!15546 = !DILocation(line: 1978, column: 12, scope: !15541)
!15547 = !DILocation(line: 1978, column: 18, scope: !15541)
!15548 = !DILocation(line: 1978, column: 25, scope: !15541)
!15549 = !DILocation(line: 1978, column: 10, scope: !15541)
!15550 = !DILocation(line: 1979, column: 2, scope: !15541)
!15551 = !DILocation(line: 1981, column: 29, scope: !15501)
!15552 = !DILocation(line: 1981, column: 35, scope: !15501)
!15553 = !DILocation(line: 1981, column: 41, scope: !15501)
!15554 = !DILocation(line: 1981, column: 2, scope: !15501)
!15555 = !DILocation(line: 1987, column: 1, scope: !15501)
!15556 = distinct !DISubprogram(name: "ni_ao_cmd_set_interrupts", scope: !209, file: !209, line: 3252, type: !4354, scopeLine: 3254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!15557 = !DILocalVariable(name: "dev", arg: 1, scope: !15556, file: !209, line: 3252, type: !3350)
!15558 = !DILocation(line: 3252, column: 60, scope: !15556)
!15559 = !DILocalVariable(name: "s", arg: 2, scope: !15556, file: !209, line: 3253, type: !4119)
!15560 = !DILocation(line: 3253, column: 35, scope: !15556)
!15561 = !DILocation(line: 3255, column: 6, scope: !15562)
!15562 = distinct !DILexicalBlock(scope: !15556, file: !209, line: 3255, column: 6)
!15563 = !DILocation(line: 3255, column: 9, scope: !15562)
!15564 = !DILocation(line: 3255, column: 16, scope: !15562)
!15565 = !DILocation(line: 3255, column: 20, scope: !15562)
!15566 = !DILocation(line: 3255, column: 29, scope: !15562)
!15567 = !DILocation(line: 3255, column: 6, scope: !15556)
!15568 = !DILocation(line: 3256, column: 15, scope: !15562)
!15569 = !DILocation(line: 3256, column: 3, scope: !15562)
!15570 = !DILocation(line: 3259, column: 2, scope: !15556)
!15571 = !DILocation(line: 3259, column: 5, scope: !15556)
!15572 = !DILocation(line: 3259, column: 12, scope: !15556)
!15573 = !DILocation(line: 3259, column: 20, scope: !15556)
!15574 = !DILocation(line: 3260, column: 1, scope: !15556)
!15575 = distinct !DISubprogram(name: "ni_get_reg_value", scope: !4827, file: !4827, line: 288, type: !15094, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!15576 = !DILocalVariable(name: "src", arg: 1, scope: !15575, file: !4827, line: 288, type: !4330)
!15577 = !DILocation(line: 288, column: 46, scope: !15575)
!15578 = !DILocalVariable(name: "dest", arg: 2, scope: !15575, file: !4827, line: 288, type: !4330)
!15579 = !DILocation(line: 288, column: 61, scope: !15575)
!15580 = !DILocalVariable(name: "tables", arg: 3, scope: !15575, file: !4827, line: 289, type: !4824)
!15581 = !DILocation(line: 289, column: 38, scope: !15575)
!15582 = !DILocation(line: 291, column: 32, scope: !15575)
!15583 = !DILocation(line: 291, column: 37, scope: !15575)
!15584 = !DILocation(line: 291, column: 43, scope: !15575)
!15585 = !DILocation(line: 291, column: 9, scope: !15575)
!15586 = !DILocation(line: 291, column: 2, scope: !15575)
!15587 = distinct !DISubprogram(name: "ni_ao_inttrig", scope: !209, file: !209, line: 2862, type: !4187, scopeLine: 2865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!15588 = !DILocalVariable(name: "dev", arg: 1, scope: !15587, file: !209, line: 2862, type: !3350)
!15589 = !DILocation(line: 2862, column: 48, scope: !15587)
!15590 = !DILocalVariable(name: "s", arg: 2, scope: !15587, file: !209, line: 2863, type: !4119)
!15591 = !DILocation(line: 2863, column: 30, scope: !15587)
!15592 = !DILocalVariable(name: "trig_num", arg: 3, scope: !15587, file: !209, line: 2864, type: !7)
!15593 = !DILocation(line: 2864, column: 18, scope: !15587)
!15594 = !DILocalVariable(name: "devpriv", scope: !15587, file: !209, line: 2866, type: !4731)
!15595 = !DILocation(line: 2866, column: 21, scope: !15587)
!15596 = !DILocation(line: 2866, column: 31, scope: !15587)
!15597 = !DILocation(line: 2866, column: 36, scope: !15587)
!15598 = !DILocalVariable(name: "cmd", scope: !15587, file: !209, line: 2867, type: !4239)
!15599 = !DILocation(line: 2867, column: 21, scope: !15587)
!15600 = !DILocation(line: 2867, column: 28, scope: !15587)
!15601 = !DILocation(line: 2867, column: 31, scope: !15587)
!15602 = !DILocation(line: 2867, column: 38, scope: !15587)
!15603 = !DILocalVariable(name: "ret", scope: !15587, file: !209, line: 2868, type: !429)
!15604 = !DILocation(line: 2868, column: 6, scope: !15587)
!15605 = !DILocation(line: 2877, column: 8, scope: !15606)
!15606 = distinct !DILexicalBlock(scope: !15587, file: !209, line: 2877, column: 6)
!15607 = !DILocation(line: 2877, column: 20, scope: !15606)
!15608 = !DILocation(line: 2877, column: 25, scope: !15606)
!15609 = !DILocation(line: 2877, column: 17, scope: !15606)
!15610 = !DILocation(line: 2877, column: 35, scope: !15606)
!15611 = !DILocation(line: 2878, column: 9, scope: !15606)
!15612 = !DILocation(line: 2878, column: 18, scope: !15606)
!15613 = !DILocation(line: 2878, column: 23, scope: !15606)
!15614 = !DILocation(line: 2878, column: 26, scope: !15606)
!15615 = !DILocation(line: 2878, column: 31, scope: !15606)
!15616 = !DILocation(line: 2878, column: 41, scope: !15606)
!15617 = !DILocation(line: 2877, column: 6, scope: !15587)
!15618 = !DILocation(line: 2879, column: 3, scope: !15606)
!15619 = !DILocation(line: 2885, column: 2, scope: !15587)
!15620 = !DILocation(line: 2885, column: 5, scope: !15587)
!15621 = !DILocation(line: 2885, column: 12, scope: !15587)
!15622 = !DILocation(line: 2885, column: 20, scope: !15587)
!15623 = !DILocation(line: 2887, column: 6, scope: !15624)
!15624 = distinct !DILexicalBlock(scope: !15587, file: !209, line: 2887, column: 6)
!15625 = !DILocation(line: 2887, column: 15, scope: !15624)
!15626 = !DILocation(line: 2887, column: 6, scope: !15587)
!15627 = !DILocation(line: 2889, column: 19, scope: !15628)
!15628 = distinct !DILexicalBlock(scope: !15624, file: !209, line: 2887, column: 32)
!15629 = !DILocation(line: 2889, column: 24, scope: !15628)
!15630 = !DILocation(line: 2889, column: 9, scope: !15628)
!15631 = !DILocation(line: 2889, column: 7, scope: !15628)
!15632 = !DILocation(line: 2890, column: 7, scope: !15633)
!15633 = distinct !DILexicalBlock(scope: !15628, file: !209, line: 2890, column: 7)
!15634 = !DILocation(line: 2890, column: 7, scope: !15628)
!15635 = !DILocation(line: 2891, column: 11, scope: !15633)
!15636 = !DILocation(line: 2891, column: 4, scope: !15633)
!15637 = !DILocation(line: 2892, column: 2, scope: !15628)
!15638 = !DILocation(line: 2894, column: 16, scope: !15587)
!15639 = !DILocation(line: 2894, column: 50, scope: !15587)
!15640 = !DILocation(line: 2894, column: 59, scope: !15587)
!15641 = !DILocation(line: 2894, column: 48, scope: !15587)
!15642 = !DILocation(line: 2894, column: 21, scope: !15587)
!15643 = !DILocation(line: 2894, column: 2, scope: !15587)
!15644 = !DILocation(line: 2897, column: 2, scope: !15587)
!15645 = !DILocation(line: 2898, column: 1, scope: !15587)
!15646 = distinct !DISubprogram(name: "ni_release_ao_mite_channel", scope: !209, file: !209, line: 695, type: !4265, scopeLine: 696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!15647 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !15648)
!15648 = distinct !DILocation(line: 708, column: 2, scope: !15646)
!15649 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !15648)
!15650 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !15651)
!15651 = distinct !DILocation(line: 701, column: 2, scope: !15652)
!15652 = distinct !DILexicalBlock(scope: !15653, file: !209, line: 701, column: 2)
!15653 = distinct !DILexicalBlock(scope: !15654, file: !209, line: 701, column: 2)
!15654 = distinct !DILexicalBlock(scope: !15655, file: !209, line: 701, column: 2)
!15655 = distinct !DILexicalBlock(scope: !15656, file: !209, line: 701, column: 2)
!15656 = distinct !DILexicalBlock(scope: !15646, file: !209, line: 701, column: 2)
!15657 = !DILocalVariable(name: "dev", arg: 1, scope: !15646, file: !209, line: 695, type: !3350)
!15658 = !DILocation(line: 695, column: 62, scope: !15646)
!15659 = !DILocalVariable(name: "devpriv", scope: !15646, file: !209, line: 698, type: !4731)
!15660 = !DILocation(line: 698, column: 21, scope: !15646)
!15661 = !DILocation(line: 698, column: 31, scope: !15646)
!15662 = !DILocation(line: 698, column: 36, scope: !15646)
!15663 = !DILocalVariable(name: "flags", scope: !15646, file: !209, line: 699, type: !435)
!15664 = !DILocation(line: 699, column: 16, scope: !15646)
!15665 = !DILocation(line: 701, column: 2, scope: !15646)
!15666 = !DILocation(line: 701, column: 2, scope: !15656)
!15667 = !DILocalVariable(name: "__dummy", scope: !15668, file: !209, line: 701, type: !435)
!15668 = distinct !DILexicalBlock(scope: !15655, file: !209, line: 701, column: 2)
!15669 = !DILocation(line: 701, column: 2, scope: !15668)
!15670 = !DILocalVariable(name: "__dummy2", scope: !15668, file: !209, line: 701, type: !435)
!15671 = !DILocation(line: 701, column: 2, scope: !15655)
!15672 = !DILocation(line: 701, column: 2, scope: !15654)
!15673 = !DILocation(line: 701, column: 2, scope: !15674)
!15674 = distinct !DILexicalBlock(scope: !15654, file: !209, line: 701, column: 2)
!15675 = !DILocalVariable(name: "__dummy", scope: !15676, file: !209, line: 701, type: !435)
!15676 = distinct !DILexicalBlock(scope: !15677, file: !209, line: 701, column: 2)
!15677 = distinct !DILexicalBlock(scope: !15674, file: !209, line: 701, column: 2)
!15678 = !DILocation(line: 701, column: 2, scope: !15676)
!15679 = !DILocalVariable(name: "__dummy2", scope: !15676, file: !209, line: 701, type: !435)
!15680 = !DILocation(line: 701, column: 2, scope: !15677)
!15681 = !DILocation(line: 701, column: 2, scope: !15653)
!15682 = !{i32 -2141344390}
!15683 = !DILocation(line: 701, column: 2, scope: !15652)
!15684 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !15651)
!15685 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !15651)
!15686 = !DILocation(line: 702, column: 6, scope: !15687)
!15687 = distinct !DILexicalBlock(scope: !15646, file: !209, line: 702, column: 6)
!15688 = !DILocation(line: 702, column: 15, scope: !15687)
!15689 = !DILocation(line: 702, column: 6, scope: !15646)
!15690 = !DILocation(line: 703, column: 19, scope: !15691)
!15691 = distinct !DILexicalBlock(scope: !15687, file: !209, line: 702, column: 29)
!15692 = !DILocation(line: 703, column: 3, scope: !15691)
!15693 = !DILocation(line: 705, column: 24, scope: !15691)
!15694 = !DILocation(line: 705, column: 33, scope: !15691)
!15695 = !DILocation(line: 705, column: 3, scope: !15691)
!15696 = !DILocation(line: 706, column: 3, scope: !15691)
!15697 = !DILocation(line: 706, column: 12, scope: !15691)
!15698 = !DILocation(line: 706, column: 25, scope: !15691)
!15699 = !DILocation(line: 707, column: 2, scope: !15691)
!15700 = !DILocation(line: 708, column: 26, scope: !15646)
!15701 = !DILocation(line: 708, column: 35, scope: !15646)
!15702 = !DILocation(line: 708, column: 54, scope: !15646)
!15703 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !15648)
!15704 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !15648)
!15705 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !15648)
!15706 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !15648)
!15707 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !15648)
!15708 = !DILocation(line: 710, column: 1, scope: !15646)
!15709 = distinct !DISubprogram(name: "ni_cdio_check_chanlist", scope: !209, file: !209, line: 3534, type: !4237, scopeLine: 3537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!15710 = !DILocalVariable(name: "dev", arg: 1, scope: !15709, file: !209, line: 3534, type: !3350)
!15711 = !DILocation(line: 3534, column: 57, scope: !15709)
!15712 = !DILocalVariable(name: "s", arg: 2, scope: !15709, file: !209, line: 3535, type: !4119)
!15713 = !DILocation(line: 3535, column: 32, scope: !15709)
!15714 = !DILocalVariable(name: "cmd", arg: 3, scope: !15709, file: !209, line: 3536, type: !4239)
!15715 = !DILocation(line: 3536, column: 26, scope: !15709)
!15716 = !DILocalVariable(name: "i", scope: !15709, file: !209, line: 3538, type: !429)
!15717 = !DILocation(line: 3538, column: 6, scope: !15709)
!15718 = !DILocation(line: 3540, column: 9, scope: !15719)
!15719 = distinct !DILexicalBlock(scope: !15709, file: !209, line: 3540, column: 2)
!15720 = !DILocation(line: 3540, column: 7, scope: !15719)
!15721 = !DILocation(line: 3540, column: 14, scope: !15722)
!15722 = distinct !DILexicalBlock(scope: !15719, file: !209, line: 3540, column: 2)
!15723 = !DILocation(line: 3540, column: 18, scope: !15722)
!15724 = !DILocation(line: 3540, column: 23, scope: !15722)
!15725 = !DILocation(line: 3540, column: 16, scope: !15722)
!15726 = !DILocation(line: 3540, column: 2, scope: !15719)
!15727 = !DILocalVariable(name: "chan", scope: !15728, file: !209, line: 3541, type: !7)
!15728 = distinct !DILexicalBlock(scope: !15722, file: !209, line: 3540, column: 42)
!15729 = !DILocation(line: 3541, column: 16, scope: !15728)
!15730 = !DILocation(line: 3541, column: 23, scope: !15728)
!15731 = !DILocation(line: 3543, column: 7, scope: !15732)
!15732 = distinct !DILexicalBlock(scope: !15728, file: !209, line: 3543, column: 7)
!15733 = !DILocation(line: 3543, column: 15, scope: !15732)
!15734 = !DILocation(line: 3543, column: 12, scope: !15732)
!15735 = !DILocation(line: 3543, column: 7, scope: !15728)
!15736 = !DILocation(line: 3544, column: 4, scope: !15732)
!15737 = !DILocation(line: 3545, column: 2, scope: !15728)
!15738 = !DILocation(line: 3540, column: 37, scope: !15722)
!15739 = !DILocation(line: 3540, column: 2, scope: !15722)
!15740 = distinct !{!15740, !15726, !15741}
!15741 = !DILocation(line: 3545, column: 2, scope: !15719)
!15742 = !DILocation(line: 3547, column: 2, scope: !15709)
!15743 = !DILocation(line: 3548, column: 1, scope: !15709)
!15744 = distinct !DISubprogram(name: "ni_request_cdo_mite_channel", scope: !209, file: !209, line: 644, type: !4261, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!15745 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !15746)
!15746 = distinct !DILocation(line: 654, column: 3, scope: !15747)
!15747 = distinct !DILexicalBlock(scope: !15748, file: !209, line: 653, column: 18)
!15748 = distinct !DILexicalBlock(scope: !15744, file: !209, line: 653, column: 6)
!15749 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !15746)
!15750 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !15751)
!15751 = distinct !DILocation(line: 673, column: 2, scope: !15744)
!15752 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !15751)
!15753 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !15754)
!15754 = distinct !DILocation(line: 651, column: 2, scope: !15755)
!15755 = distinct !DILexicalBlock(scope: !15756, file: !209, line: 651, column: 2)
!15756 = distinct !DILexicalBlock(scope: !15757, file: !209, line: 651, column: 2)
!15757 = distinct !DILexicalBlock(scope: !15758, file: !209, line: 651, column: 2)
!15758 = distinct !DILexicalBlock(scope: !15759, file: !209, line: 651, column: 2)
!15759 = distinct !DILexicalBlock(scope: !15744, file: !209, line: 651, column: 2)
!15760 = !DILocalVariable(name: "dev", arg: 1, scope: !15744, file: !209, line: 644, type: !3350)
!15761 = !DILocation(line: 644, column: 62, scope: !15744)
!15762 = !DILocalVariable(name: "devpriv", scope: !15744, file: !209, line: 646, type: !4731)
!15763 = !DILocation(line: 646, column: 21, scope: !15744)
!15764 = !DILocation(line: 646, column: 31, scope: !15744)
!15765 = !DILocation(line: 646, column: 36, scope: !15744)
!15766 = !DILocalVariable(name: "mite_chan", scope: !15744, file: !209, line: 647, type: !4775)
!15767 = !DILocation(line: 647, column: 23, scope: !15744)
!15768 = !DILocalVariable(name: "flags", scope: !15744, file: !209, line: 648, type: !435)
!15769 = !DILocation(line: 648, column: 16, scope: !15744)
!15770 = !DILocalVariable(name: "bits", scope: !15744, file: !209, line: 649, type: !7)
!15771 = !DILocation(line: 649, column: 15, scope: !15744)
!15772 = !DILocation(line: 651, column: 2, scope: !15744)
!15773 = !DILocation(line: 651, column: 2, scope: !15759)
!15774 = !DILocalVariable(name: "__dummy", scope: !15775, file: !209, line: 651, type: !435)
!15775 = distinct !DILexicalBlock(scope: !15758, file: !209, line: 651, column: 2)
!15776 = !DILocation(line: 651, column: 2, scope: !15775)
!15777 = !DILocalVariable(name: "__dummy2", scope: !15775, file: !209, line: 651, type: !435)
!15778 = !DILocation(line: 651, column: 2, scope: !15758)
!15779 = !DILocation(line: 651, column: 2, scope: !15757)
!15780 = !DILocation(line: 651, column: 2, scope: !15781)
!15781 = distinct !DILexicalBlock(scope: !15757, file: !209, line: 651, column: 2)
!15782 = !DILocalVariable(name: "__dummy", scope: !15783, file: !209, line: 651, type: !435)
!15783 = distinct !DILexicalBlock(scope: !15784, file: !209, line: 651, column: 2)
!15784 = distinct !DILexicalBlock(scope: !15781, file: !209, line: 651, column: 2)
!15785 = !DILocation(line: 651, column: 2, scope: !15783)
!15786 = !DILocalVariable(name: "__dummy2", scope: !15783, file: !209, line: 651, type: !435)
!15787 = !DILocation(line: 651, column: 2, scope: !15784)
!15788 = !DILocation(line: 651, column: 2, scope: !15756)
!15789 = !{i32 -2141347243}
!15790 = !DILocation(line: 651, column: 2, scope: !15755)
!15791 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !15754)
!15792 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !15754)
!15793 = !DILocation(line: 652, column: 35, scope: !15744)
!15794 = !DILocation(line: 652, column: 44, scope: !15744)
!15795 = !DILocation(line: 652, column: 50, scope: !15744)
!15796 = !DILocation(line: 652, column: 59, scope: !15744)
!15797 = !DILocation(line: 652, column: 14, scope: !15744)
!15798 = !DILocation(line: 652, column: 12, scope: !15744)
!15799 = !DILocation(line: 653, column: 7, scope: !15748)
!15800 = !DILocation(line: 653, column: 6, scope: !15744)
!15801 = !DILocation(line: 654, column: 27, scope: !15747)
!15802 = !DILocation(line: 654, column: 36, scope: !15747)
!15803 = !DILocation(line: 654, column: 55, scope: !15747)
!15804 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !15746)
!15805 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !15746)
!15806 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !15746)
!15807 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !15746)
!15808 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !15746)
!15809 = !DILocation(line: 655, column: 3, scope: !15747)
!15810 = !DILocation(line: 657, column: 3, scope: !15747)
!15811 = !DILocation(line: 659, column: 2, scope: !15744)
!15812 = !DILocation(line: 659, column: 13, scope: !15744)
!15813 = !DILocation(line: 659, column: 17, scope: !15744)
!15814 = !DILocation(line: 660, column: 27, scope: !15744)
!15815 = !DILocation(line: 660, column: 2, scope: !15744)
!15816 = !DILocation(line: 660, column: 11, scope: !15744)
!15817 = !DILocation(line: 660, column: 25, scope: !15744)
!15818 = !DILocation(line: 668, column: 9, scope: !15744)
!15819 = !DILocation(line: 668, column: 7, scope: !15744)
!15820 = !DILocation(line: 669, column: 18, scope: !15744)
!15821 = !DILocation(line: 671, column: 4, scope: !15744)
!15822 = !DILocation(line: 669, column: 2, scope: !15744)
!15823 = !DILocation(line: 673, column: 26, scope: !15744)
!15824 = !DILocation(line: 673, column: 35, scope: !15744)
!15825 = !DILocation(line: 673, column: 54, scope: !15744)
!15826 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !15751)
!15827 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !15751)
!15828 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !15751)
!15829 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !15751)
!15830 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !15751)
!15831 = !DILocation(line: 674, column: 2, scope: !15744)
!15832 = !DILocation(line: 675, column: 1, scope: !15744)
!15833 = distinct !DISubprogram(name: "ni_cdo_inttrig", scope: !209, file: !209, line: 3612, type: !4187, scopeLine: 3615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!15834 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !15835)
!15835 = distinct !DILocation(line: 3639, column: 2, scope: !15833)
!15836 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !15835)
!15837 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !15838)
!15838 = distinct !DILocation(line: 3631, column: 2, scope: !15839)
!15839 = distinct !DILexicalBlock(scope: !15840, file: !209, line: 3631, column: 2)
!15840 = distinct !DILexicalBlock(scope: !15841, file: !209, line: 3631, column: 2)
!15841 = distinct !DILexicalBlock(scope: !15842, file: !209, line: 3631, column: 2)
!15842 = distinct !DILexicalBlock(scope: !15843, file: !209, line: 3631, column: 2)
!15843 = distinct !DILexicalBlock(scope: !15833, file: !209, line: 3631, column: 2)
!15844 = !DILocalVariable(name: "dev", arg: 1, scope: !15833, file: !209, line: 3612, type: !3350)
!15845 = !DILocation(line: 3612, column: 49, scope: !15833)
!15846 = !DILocalVariable(name: "s", arg: 2, scope: !15833, file: !209, line: 3613, type: !4119)
!15847 = !DILocation(line: 3613, column: 31, scope: !15833)
!15848 = !DILocalVariable(name: "trig_num", arg: 3, scope: !15833, file: !209, line: 3614, type: !7)
!15849 = !DILocation(line: 3614, column: 19, scope: !15833)
!15850 = !DILocalVariable(name: "cmd", scope: !15833, file: !209, line: 3616, type: !4239)
!15851 = !DILocation(line: 3616, column: 21, scope: !15833)
!15852 = !DILocation(line: 3616, column: 28, scope: !15833)
!15853 = !DILocation(line: 3616, column: 31, scope: !15833)
!15854 = !DILocation(line: 3616, column: 38, scope: !15833)
!15855 = !DILocalVariable(name: "timeout", scope: !15833, file: !209, line: 3617, type: !2125)
!15856 = !DILocation(line: 3617, column: 21, scope: !15833)
!15857 = !DILocalVariable(name: "retval", scope: !15833, file: !209, line: 3618, type: !429)
!15858 = !DILocation(line: 3618, column: 6, scope: !15833)
!15859 = !DILocalVariable(name: "i", scope: !15833, file: !209, line: 3619, type: !7)
!15860 = !DILocation(line: 3619, column: 15, scope: !15833)
!15861 = !DILocalVariable(name: "devpriv", scope: !15833, file: !209, line: 3620, type: !4731)
!15862 = !DILocation(line: 3620, column: 21, scope: !15833)
!15863 = !DILocation(line: 3620, column: 31, scope: !15833)
!15864 = !DILocation(line: 3620, column: 36, scope: !15833)
!15865 = !DILocalVariable(name: "flags", scope: !15833, file: !209, line: 3621, type: !435)
!15866 = !DILocation(line: 3621, column: 16, scope: !15833)
!15867 = !DILocation(line: 3623, column: 6, scope: !15868)
!15868 = distinct !DILexicalBlock(scope: !15833, file: !209, line: 3623, column: 6)
!15869 = !DILocation(line: 3623, column: 18, scope: !15868)
!15870 = !DILocation(line: 3623, column: 23, scope: !15868)
!15871 = !DILocation(line: 3623, column: 15, scope: !15868)
!15872 = !DILocation(line: 3623, column: 6, scope: !15833)
!15873 = !DILocation(line: 3624, column: 3, scope: !15868)
!15874 = !DILocation(line: 3626, column: 2, scope: !15833)
!15875 = !DILocation(line: 3626, column: 5, scope: !15833)
!15876 = !DILocation(line: 3626, column: 12, scope: !15833)
!15877 = !DILocation(line: 3626, column: 20, scope: !15833)
!15878 = !DILocation(line: 3629, column: 24, scope: !15833)
!15879 = !DILocation(line: 3629, column: 27, scope: !15833)
!15880 = !DILocation(line: 3629, column: 30, scope: !15833)
!15881 = !DILocation(line: 3629, column: 37, scope: !15833)
!15882 = !DILocation(line: 3629, column: 2, scope: !15833)
!15883 = !DILocation(line: 3631, column: 2, scope: !15833)
!15884 = !DILocation(line: 3631, column: 2, scope: !15843)
!15885 = !DILocalVariable(name: "__dummy", scope: !15886, file: !209, line: 3631, type: !435)
!15886 = distinct !DILexicalBlock(scope: !15842, file: !209, line: 3631, column: 2)
!15887 = !DILocation(line: 3631, column: 2, scope: !15886)
!15888 = !DILocalVariable(name: "__dummy2", scope: !15886, file: !209, line: 3631, type: !435)
!15889 = !DILocation(line: 3631, column: 2, scope: !15842)
!15890 = !DILocation(line: 3631, column: 2, scope: !15841)
!15891 = !DILocation(line: 3631, column: 2, scope: !15892)
!15892 = distinct !DILexicalBlock(scope: !15841, file: !209, line: 3631, column: 2)
!15893 = !DILocalVariable(name: "__dummy", scope: !15894, file: !209, line: 3631, type: !435)
!15894 = distinct !DILexicalBlock(scope: !15895, file: !209, line: 3631, column: 2)
!15895 = distinct !DILexicalBlock(scope: !15892, file: !209, line: 3631, column: 2)
!15896 = !DILocation(line: 3631, column: 2, scope: !15894)
!15897 = !DILocalVariable(name: "__dummy2", scope: !15894, file: !209, line: 3631, type: !435)
!15898 = !DILocation(line: 3631, column: 2, scope: !15895)
!15899 = !DILocation(line: 3631, column: 2, scope: !15840)
!15900 = !{i32 -2141295268}
!15901 = !DILocation(line: 3631, column: 2, scope: !15839)
!15902 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !15838)
!15903 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !15838)
!15904 = !DILocation(line: 3632, column: 6, scope: !15905)
!15905 = distinct !DILexicalBlock(scope: !15833, file: !209, line: 3632, column: 6)
!15906 = !DILocation(line: 3632, column: 15, scope: !15905)
!15907 = !DILocation(line: 3632, column: 6, scope: !15833)
!15908 = !DILocation(line: 3633, column: 17, scope: !15909)
!15909 = distinct !DILexicalBlock(scope: !15905, file: !209, line: 3632, column: 30)
!15910 = !DILocation(line: 3633, column: 26, scope: !15909)
!15911 = !DILocation(line: 3633, column: 3, scope: !15909)
!15912 = !DILocation(line: 3634, column: 16, scope: !15909)
!15913 = !DILocation(line: 3634, column: 25, scope: !15909)
!15914 = !DILocation(line: 3634, column: 3, scope: !15909)
!15915 = !DILocation(line: 3635, column: 2, scope: !15909)
!15916 = !DILocation(line: 3636, column: 3, scope: !15917)
!15917 = distinct !DILexicalBlock(scope: !15905, file: !209, line: 3635, column: 9)
!15918 = !DILocation(line: 3637, column: 10, scope: !15917)
!15919 = !DILocation(line: 3639, column: 26, scope: !15833)
!15920 = !DILocation(line: 3639, column: 35, scope: !15833)
!15921 = !DILocation(line: 3639, column: 54, scope: !15833)
!15922 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !15835)
!15923 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !15835)
!15924 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !15835)
!15925 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !15835)
!15926 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !15835)
!15927 = !DILocation(line: 3640, column: 6, scope: !15928)
!15928 = distinct !DILexicalBlock(scope: !15833, file: !209, line: 3640, column: 6)
!15929 = !DILocation(line: 3640, column: 13, scope: !15928)
!15930 = !DILocation(line: 3640, column: 6, scope: !15833)
!15931 = !DILocation(line: 3641, column: 10, scope: !15928)
!15932 = !DILocation(line: 3641, column: 3, scope: !15928)
!15933 = !DILocation(line: 3648, column: 9, scope: !15934)
!15934 = distinct !DILexicalBlock(scope: !15833, file: !209, line: 3648, column: 2)
!15935 = !DILocation(line: 3648, column: 7, scope: !15934)
!15936 = !DILocation(line: 3648, column: 14, scope: !15937)
!15937 = distinct !DILexicalBlock(scope: !15934, file: !209, line: 3648, column: 2)
!15938 = !DILocation(line: 3648, column: 16, scope: !15937)
!15939 = !DILocation(line: 3648, column: 2, scope: !15934)
!15940 = !DILocation(line: 3649, column: 16, scope: !15941)
!15941 = distinct !DILexicalBlock(scope: !15942, file: !209, line: 3649, column: 7)
!15942 = distinct !DILexicalBlock(scope: !15937, file: !209, line: 3648, column: 32)
!15943 = !DILocation(line: 3649, column: 7, scope: !15941)
!15944 = !DILocation(line: 3649, column: 43, scope: !15941)
!15945 = !DILocation(line: 3649, column: 7, scope: !15942)
!15946 = !DILocation(line: 3651, column: 4, scope: !15941)
!15947 = !DILocation(line: 3652, column: 3, scope: !15942)
!15948 = !DILocation(line: 3653, column: 2, scope: !15942)
!15949 = !DILocation(line: 3648, column: 27, scope: !15937)
!15950 = !DILocation(line: 3648, column: 2, scope: !15937)
!15951 = distinct !{!15951, !15939, !15952}
!15952 = !DILocation(line: 3653, column: 2, scope: !15934)
!15953 = !DILocation(line: 3654, column: 6, scope: !15954)
!15954 = distinct !DILexicalBlock(scope: !15833, file: !209, line: 3654, column: 6)
!15955 = !DILocation(line: 3654, column: 8, scope: !15954)
!15956 = !DILocation(line: 3654, column: 6, scope: !15833)
!15957 = !DILocation(line: 3655, column: 3, scope: !15958)
!15958 = distinct !DILexicalBlock(scope: !15954, file: !209, line: 3654, column: 20)
!15959 = !DILocation(line: 3656, column: 3, scope: !15958)
!15960 = !DILocation(line: 3656, column: 6, scope: !15958)
!15961 = !DILocation(line: 3656, column: 13, scope: !15958)
!15962 = !DILocation(line: 3656, column: 18, scope: !15958)
!15963 = !DILocation(line: 3657, column: 3, scope: !15958)
!15964 = !DILocation(line: 3659, column: 12, scope: !15833)
!15965 = !DILocation(line: 3659, column: 2, scope: !15833)
!15966 = !DILocation(line: 3663, column: 9, scope: !15833)
!15967 = !DILocation(line: 3663, column: 2, scope: !15833)
!15968 = !DILocation(line: 3664, column: 1, scope: !15833)
!15969 = distinct !DISubprogram(name: "ni_release_cdo_mite_channel", scope: !209, file: !209, line: 734, type: !4265, scopeLine: 735, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!15970 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !15971)
!15971 = distinct !DILocation(line: 746, column: 2, scope: !15969)
!15972 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !15971)
!15973 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !15974)
!15974 = distinct !DILocation(line: 739, column: 2, scope: !15975)
!15975 = distinct !DILexicalBlock(scope: !15976, file: !209, line: 739, column: 2)
!15976 = distinct !DILexicalBlock(scope: !15977, file: !209, line: 739, column: 2)
!15977 = distinct !DILexicalBlock(scope: !15978, file: !209, line: 739, column: 2)
!15978 = distinct !DILexicalBlock(scope: !15979, file: !209, line: 739, column: 2)
!15979 = distinct !DILexicalBlock(scope: !15969, file: !209, line: 739, column: 2)
!15980 = !DILocalVariable(name: "dev", arg: 1, scope: !15969, file: !209, line: 734, type: !3350)
!15981 = !DILocation(line: 734, column: 63, scope: !15969)
!15982 = !DILocalVariable(name: "devpriv", scope: !15969, file: !209, line: 736, type: !4731)
!15983 = !DILocation(line: 736, column: 21, scope: !15969)
!15984 = !DILocation(line: 736, column: 31, scope: !15969)
!15985 = !DILocation(line: 736, column: 36, scope: !15969)
!15986 = !DILocalVariable(name: "flags", scope: !15969, file: !209, line: 737, type: !435)
!15987 = !DILocation(line: 737, column: 16, scope: !15969)
!15988 = !DILocation(line: 739, column: 2, scope: !15969)
!15989 = !DILocation(line: 739, column: 2, scope: !15979)
!15990 = !DILocalVariable(name: "__dummy", scope: !15991, file: !209, line: 739, type: !435)
!15991 = distinct !DILexicalBlock(scope: !15978, file: !209, line: 739, column: 2)
!15992 = !DILocation(line: 739, column: 2, scope: !15991)
!15993 = !DILocalVariable(name: "__dummy2", scope: !15991, file: !209, line: 739, type: !435)
!15994 = !DILocation(line: 739, column: 2, scope: !15978)
!15995 = !DILocation(line: 739, column: 2, scope: !15977)
!15996 = !DILocation(line: 739, column: 2, scope: !15997)
!15997 = distinct !DILexicalBlock(scope: !15977, file: !209, line: 739, column: 2)
!15998 = !DILocalVariable(name: "__dummy", scope: !15999, file: !209, line: 739, type: !435)
!15999 = distinct !DILexicalBlock(scope: !16000, file: !209, line: 739, column: 2)
!16000 = distinct !DILexicalBlock(scope: !15997, file: !209, line: 739, column: 2)
!16001 = !DILocation(line: 739, column: 2, scope: !15999)
!16002 = !DILocalVariable(name: "__dummy2", scope: !15999, file: !209, line: 739, type: !435)
!16003 = !DILocation(line: 739, column: 2, scope: !16000)
!16004 = !DILocation(line: 739, column: 2, scope: !15976)
!16005 = !{i32 -2141341961}
!16006 = !DILocation(line: 739, column: 2, scope: !15975)
!16007 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !15974)
!16008 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !15974)
!16009 = !DILocation(line: 740, column: 6, scope: !16010)
!16010 = distinct !DILexicalBlock(scope: !15969, file: !209, line: 740, column: 6)
!16011 = !DILocation(line: 740, column: 15, scope: !16010)
!16012 = !DILocation(line: 740, column: 6, scope: !15969)
!16013 = !DILocation(line: 741, column: 19, scope: !16014)
!16014 = distinct !DILexicalBlock(scope: !16010, file: !209, line: 740, column: 30)
!16015 = !DILocation(line: 741, column: 3, scope: !16014)
!16016 = !DILocation(line: 743, column: 24, scope: !16014)
!16017 = !DILocation(line: 743, column: 33, scope: !16014)
!16018 = !DILocation(line: 743, column: 3, scope: !16014)
!16019 = !DILocation(line: 744, column: 3, scope: !16014)
!16020 = !DILocation(line: 744, column: 12, scope: !16014)
!16021 = !DILocation(line: 744, column: 26, scope: !16014)
!16022 = !DILocation(line: 745, column: 2, scope: !16014)
!16023 = !DILocation(line: 746, column: 26, scope: !15969)
!16024 = !DILocation(line: 746, column: 35, scope: !15969)
!16025 = !DILocation(line: 746, column: 54, scope: !15969)
!16026 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !15971)
!16027 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !15971)
!16028 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !15971)
!16029 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !15971)
!16030 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !15971)
!16031 = !DILocation(line: 747, column: 1, scope: !15969)
!16032 = distinct !DISubprogram(name: "ni_get_pwm_config", scope: !209, file: !209, line: 4170, type: !16033, scopeLine: 4171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!16033 = !DISubroutineType(types: !16034)
!16034 = !{!429, !3350, !1365}
!16035 = !DILocalVariable(name: "dev", arg: 1, scope: !16032, file: !209, line: 4170, type: !3350)
!16036 = !DILocation(line: 4170, column: 52, scope: !16032)
!16037 = !DILocalVariable(name: "data", arg: 2, scope: !16032, file: !209, line: 4170, type: !1365)
!16038 = !DILocation(line: 4170, column: 71, scope: !16032)
!16039 = !DILocalVariable(name: "devpriv", scope: !16032, file: !209, line: 4172, type: !4731)
!16040 = !DILocation(line: 4172, column: 21, scope: !16032)
!16041 = !DILocation(line: 4172, column: 31, scope: !16032)
!16042 = !DILocation(line: 4172, column: 36, scope: !16032)
!16043 = !DILocation(line: 4174, column: 12, scope: !16032)
!16044 = !DILocation(line: 4174, column: 21, scope: !16032)
!16045 = !DILocation(line: 4174, column: 36, scope: !16032)
!16046 = !DILocation(line: 4174, column: 45, scope: !16032)
!16047 = !DILocation(line: 4174, column: 34, scope: !16032)
!16048 = !DILocation(line: 4174, column: 2, scope: !16032)
!16049 = !DILocation(line: 4174, column: 10, scope: !16032)
!16050 = !DILocation(line: 4175, column: 12, scope: !16032)
!16051 = !DILocation(line: 4175, column: 21, scope: !16032)
!16052 = !DILocation(line: 4175, column: 38, scope: !16032)
!16053 = !DILocation(line: 4175, column: 47, scope: !16032)
!16054 = !DILocation(line: 4175, column: 36, scope: !16032)
!16055 = !DILocation(line: 4175, column: 2, scope: !16032)
!16056 = !DILocation(line: 4175, column: 10, scope: !16032)
!16057 = !DILocation(line: 4176, column: 2, scope: !16032)
!16058 = distinct !DISubprogram(name: "ni_write_caldac", scope: !209, file: !209, line: 4362, type: !16059, scopeLine: 4363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!16059 = !DISubroutineType(types: !16060)
!16060 = !{null, !3350, !429, !429}
!16061 = !DILocalVariable(name: "dev", arg: 1, scope: !16058, file: !209, line: 4362, type: !3350)
!16062 = !DILocation(line: 4362, column: 51, scope: !16058)
!16063 = !DILocalVariable(name: "addr", arg: 2, scope: !16058, file: !209, line: 4362, type: !429)
!16064 = !DILocation(line: 4362, column: 60, scope: !16058)
!16065 = !DILocalVariable(name: "val", arg: 3, scope: !16058, file: !209, line: 4362, type: !429)
!16066 = !DILocation(line: 4362, column: 70, scope: !16058)
!16067 = !DILocalVariable(name: "board", scope: !16058, file: !209, line: 4364, type: !4959)
!16068 = !DILocation(line: 4364, column: 32, scope: !16058)
!16069 = !DILocation(line: 4364, column: 40, scope: !16058)
!16070 = !DILocation(line: 4364, column: 45, scope: !16058)
!16071 = !DILocalVariable(name: "devpriv", scope: !16058, file: !209, line: 4365, type: !4731)
!16072 = !DILocation(line: 4365, column: 21, scope: !16058)
!16073 = !DILocation(line: 4365, column: 31, scope: !16058)
!16074 = !DILocation(line: 4365, column: 36, scope: !16058)
!16075 = !DILocalVariable(name: "loadbit", scope: !16058, file: !209, line: 4366, type: !7)
!16076 = !DILocation(line: 4366, column: 15, scope: !16058)
!16077 = !DILocalVariable(name: "bits", scope: !16058, file: !209, line: 4366, type: !7)
!16078 = !DILocation(line: 4366, column: 28, scope: !16058)
!16079 = !DILocalVariable(name: "bit", scope: !16058, file: !209, line: 4366, type: !7)
!16080 = !DILocation(line: 4366, column: 38, scope: !16058)
!16081 = !DILocalVariable(name: "bitstring", scope: !16058, file: !209, line: 4366, type: !7)
!16082 = !DILocation(line: 4366, column: 43, scope: !16058)
!16083 = !DILocalVariable(name: "cmd", scope: !16058, file: !209, line: 4367, type: !7)
!16084 = !DILocation(line: 4367, column: 15, scope: !16058)
!16085 = !DILocalVariable(name: "i", scope: !16058, file: !209, line: 4368, type: !429)
!16086 = !DILocation(line: 4368, column: 6, scope: !16058)
!16087 = !DILocalVariable(name: "type", scope: !16058, file: !209, line: 4369, type: !429)
!16088 = !DILocation(line: 4369, column: 6, scope: !16058)
!16089 = !DILocation(line: 4371, column: 6, scope: !16090)
!16090 = distinct !DILexicalBlock(scope: !16058, file: !209, line: 4371, column: 6)
!16091 = !DILocation(line: 4371, column: 15, scope: !16090)
!16092 = !DILocation(line: 4371, column: 23, scope: !16090)
!16093 = !DILocation(line: 4371, column: 32, scope: !16090)
!16094 = !DILocation(line: 4371, column: 29, scope: !16090)
!16095 = !DILocation(line: 4371, column: 6, scope: !16058)
!16096 = !DILocation(line: 4372, column: 3, scope: !16090)
!16097 = !DILocation(line: 4373, column: 27, scope: !16058)
!16098 = !DILocation(line: 4373, column: 2, scope: !16058)
!16099 = !DILocation(line: 4373, column: 11, scope: !16058)
!16100 = !DILocation(line: 4373, column: 19, scope: !16058)
!16101 = !DILocation(line: 4373, column: 25, scope: !16058)
!16102 = !DILocation(line: 4375, column: 9, scope: !16103)
!16103 = distinct !DILexicalBlock(scope: !16058, file: !209, line: 4375, column: 2)
!16104 = !DILocation(line: 4375, column: 7, scope: !16103)
!16105 = !DILocation(line: 4375, column: 14, scope: !16106)
!16106 = distinct !DILexicalBlock(scope: !16103, file: !209, line: 4375, column: 2)
!16107 = !DILocation(line: 4375, column: 16, scope: !16106)
!16108 = !DILocation(line: 4375, column: 2, scope: !16103)
!16109 = !DILocation(line: 4376, column: 10, scope: !16110)
!16110 = distinct !DILexicalBlock(scope: !16106, file: !209, line: 4375, column: 26)
!16111 = !DILocation(line: 4376, column: 17, scope: !16110)
!16112 = !DILocation(line: 4376, column: 24, scope: !16110)
!16113 = !DILocation(line: 4376, column: 8, scope: !16110)
!16114 = !DILocation(line: 4377, column: 7, scope: !16115)
!16115 = distinct !DILexicalBlock(scope: !16110, file: !209, line: 4377, column: 7)
!16116 = !DILocation(line: 4377, column: 12, scope: !16115)
!16117 = !DILocation(line: 4377, column: 7, scope: !16110)
!16118 = !DILocation(line: 4378, column: 4, scope: !16115)
!16119 = !DILocation(line: 4379, column: 7, scope: !16120)
!16120 = distinct !DILexicalBlock(scope: !16110, file: !209, line: 4379, column: 7)
!16121 = !DILocation(line: 4379, column: 22, scope: !16120)
!16122 = !DILocation(line: 4379, column: 14, scope: !16120)
!16123 = !DILocation(line: 4379, column: 28, scope: !16120)
!16124 = !DILocation(line: 4379, column: 12, scope: !16120)
!16125 = !DILocation(line: 4379, column: 7, scope: !16110)
!16126 = !DILocation(line: 4380, column: 19, scope: !16127)
!16127 = distinct !DILexicalBlock(scope: !16120, file: !209, line: 4379, column: 37)
!16128 = !DILocation(line: 4380, column: 11, scope: !16127)
!16129 = !DILocation(line: 4380, column: 25, scope: !16127)
!16130 = !DILocation(line: 4380, column: 34, scope: !16127)
!16131 = !DILocation(line: 4380, column: 40, scope: !16127)
!16132 = !DILocation(line: 4380, column: 9, scope: !16127)
!16133 = !DILocation(line: 4381, column: 14, scope: !16127)
!16134 = !DILocation(line: 4381, column: 12, scope: !16127)
!16135 = !DILocation(line: 4382, column: 4, scope: !16127)
!16136 = !DILocation(line: 4384, column: 19, scope: !16110)
!16137 = !DILocation(line: 4384, column: 11, scope: !16110)
!16138 = !DILocation(line: 4384, column: 25, scope: !16110)
!16139 = !DILocation(line: 4384, column: 8, scope: !16110)
!16140 = !DILocation(line: 4385, column: 2, scope: !16110)
!16141 = !DILocation(line: 4375, column: 22, scope: !16106)
!16142 = !DILocation(line: 4375, column: 2, scope: !16106)
!16143 = distinct !{!16143, !16108, !16144}
!16144 = !DILocation(line: 4385, column: 2, scope: !16103)
!16145 = !DILocation(line: 4388, column: 6, scope: !16146)
!16146 = distinct !DILexicalBlock(scope: !16058, file: !209, line: 4388, column: 6)
!16147 = !DILocation(line: 4388, column: 11, scope: !16146)
!16148 = !DILocation(line: 4388, column: 6, scope: !16058)
!16149 = !DILocation(line: 4389, column: 3, scope: !16146)
!16150 = !DILocation(line: 4391, column: 19, scope: !16151)
!16151 = distinct !DILexicalBlock(scope: !16058, file: !209, line: 4391, column: 2)
!16152 = !DILocation(line: 4391, column: 24, scope: !16151)
!16153 = !DILocation(line: 4391, column: 15, scope: !16151)
!16154 = !DILocation(line: 4391, column: 11, scope: !16151)
!16155 = !DILocation(line: 4391, column: 7, scope: !16151)
!16156 = !DILocation(line: 4391, column: 30, scope: !16157)
!16157 = distinct !DILexicalBlock(scope: !16151, file: !209, line: 4391, column: 2)
!16158 = !DILocation(line: 4391, column: 2, scope: !16151)
!16159 = !DILocation(line: 4392, column: 10, scope: !16160)
!16160 = distinct !DILexicalBlock(scope: !16157, file: !209, line: 4391, column: 46)
!16161 = !DILocation(line: 4392, column: 16, scope: !16160)
!16162 = !DILocation(line: 4392, column: 14, scope: !16160)
!16163 = !DILocation(line: 4392, column: 9, scope: !16160)
!16164 = !DILocation(line: 4392, column: 7, scope: !16160)
!16165 = !DILocation(line: 4393, column: 13, scope: !16160)
!16166 = !DILocation(line: 4393, column: 18, scope: !16160)
!16167 = !DILocation(line: 4393, column: 3, scope: !16160)
!16168 = !DILocation(line: 4394, column: 3, scope: !16169)
!16169 = distinct !DILexicalBlock(scope: !16170, file: !209, line: 4394, column: 3)
!16170 = distinct !DILexicalBlock(scope: !16171, file: !209, line: 4394, column: 3)
!16171 = distinct !DILexicalBlock(scope: !16172, file: !209, line: 4394, column: 3)
!16172 = distinct !DILexicalBlock(scope: !16160, file: !209, line: 4394, column: 3)
!16173 = !DILocation(line: 4395, column: 13, scope: !16160)
!16174 = !DILocation(line: 4395, column: 41, scope: !16160)
!16175 = !DILocation(line: 4395, column: 39, scope: !16160)
!16176 = !DILocation(line: 4395, column: 18, scope: !16160)
!16177 = !DILocation(line: 4395, column: 3, scope: !16160)
!16178 = !DILocation(line: 4396, column: 3, scope: !16179)
!16179 = distinct !DILexicalBlock(scope: !16180, file: !209, line: 4396, column: 3)
!16180 = distinct !DILexicalBlock(scope: !16181, file: !209, line: 4396, column: 3)
!16181 = distinct !DILexicalBlock(scope: !16182, file: !209, line: 4396, column: 3)
!16182 = distinct !DILexicalBlock(scope: !16160, file: !209, line: 4396, column: 3)
!16183 = !DILocation(line: 4397, column: 2, scope: !16160)
!16184 = !DILocation(line: 4391, column: 39, scope: !16157)
!16185 = !DILocation(line: 4391, column: 2, scope: !16157)
!16186 = distinct !{!16186, !16158, !16187}
!16187 = !DILocation(line: 4397, column: 2, scope: !16151)
!16188 = !DILocation(line: 4398, column: 12, scope: !16058)
!16189 = !DILocation(line: 4398, column: 17, scope: !16058)
!16190 = !DILocation(line: 4398, column: 2, scope: !16058)
!16191 = !DILocation(line: 4399, column: 2, scope: !16192)
!16192 = distinct !DILexicalBlock(scope: !16193, file: !209, line: 4399, column: 2)
!16193 = distinct !DILexicalBlock(scope: !16194, file: !209, line: 4399, column: 2)
!16194 = distinct !DILexicalBlock(scope: !16195, file: !209, line: 4399, column: 2)
!16195 = distinct !DILexicalBlock(scope: !16058, file: !209, line: 4399, column: 2)
!16196 = !DILocation(line: 4400, column: 12, scope: !16058)
!16197 = !DILocation(line: 4400, column: 2, scope: !16058)
!16198 = !DILocation(line: 4401, column: 1, scope: !16058)
!16199 = distinct !DISubprogram(name: "pack_mb88341", scope: !209, file: !209, line: 4298, type: !4401, scopeLine: 4299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!16200 = !DILocalVariable(name: "addr", arg: 1, scope: !16199, file: !209, line: 4298, type: !429)
!16201 = !DILocation(line: 4298, column: 29, scope: !16199)
!16202 = !DILocalVariable(name: "val", arg: 2, scope: !16199, file: !209, line: 4298, type: !429)
!16203 = !DILocation(line: 4298, column: 39, scope: !16199)
!16204 = !DILocalVariable(name: "bitstring", arg: 3, scope: !16199, file: !209, line: 4298, type: !1042)
!16205 = !DILocation(line: 4298, column: 49, scope: !16199)
!16206 = !DILocation(line: 4309, column: 6, scope: !16199)
!16207 = !DILocation(line: 4310, column: 17, scope: !16199)
!16208 = !DILocation(line: 4310, column: 22, scope: !16199)
!16209 = !DILocation(line: 4310, column: 29, scope: !16199)
!16210 = !DILocation(line: 4311, column: 8, scope: !16199)
!16211 = !DILocation(line: 4311, column: 13, scope: !16199)
!16212 = !DILocation(line: 4311, column: 20, scope: !16199)
!16213 = !DILocation(line: 4310, column: 36, scope: !16199)
!16214 = !DILocation(line: 4312, column: 8, scope: !16199)
!16215 = !DILocation(line: 4312, column: 13, scope: !16199)
!16216 = !DILocation(line: 4312, column: 20, scope: !16199)
!16217 = !DILocation(line: 4311, column: 26, scope: !16199)
!16218 = !DILocation(line: 4312, column: 30, scope: !16199)
!16219 = !DILocation(line: 4312, column: 35, scope: !16199)
!16220 = !DILocation(line: 4312, column: 42, scope: !16199)
!16221 = !DILocation(line: 4312, column: 26, scope: !16199)
!16222 = !DILocation(line: 4312, column: 51, scope: !16199)
!16223 = !DILocation(line: 4312, column: 55, scope: !16199)
!16224 = !DILocation(line: 4312, column: 48, scope: !16199)
!16225 = !DILocation(line: 4310, column: 3, scope: !16199)
!16226 = !DILocation(line: 4310, column: 13, scope: !16199)
!16227 = !DILocation(line: 4313, column: 2, scope: !16199)
!16228 = distinct !DISubprogram(name: "pack_dac8800", scope: !209, file: !209, line: 4316, type: !4401, scopeLine: 4317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!16229 = !DILocalVariable(name: "addr", arg: 1, scope: !16228, file: !209, line: 4316, type: !429)
!16230 = !DILocation(line: 4316, column: 29, scope: !16228)
!16231 = !DILocalVariable(name: "val", arg: 2, scope: !16228, file: !209, line: 4316, type: !429)
!16232 = !DILocation(line: 4316, column: 39, scope: !16228)
!16233 = !DILocalVariable(name: "bitstring", arg: 3, scope: !16228, file: !209, line: 4316, type: !1042)
!16234 = !DILocation(line: 4316, column: 49, scope: !16228)
!16235 = !DILocation(line: 4318, column: 17, scope: !16228)
!16236 = !DILocation(line: 4318, column: 22, scope: !16228)
!16237 = !DILocation(line: 4318, column: 29, scope: !16228)
!16238 = !DILocation(line: 4318, column: 38, scope: !16228)
!16239 = !DILocation(line: 4318, column: 42, scope: !16228)
!16240 = !DILocation(line: 4318, column: 35, scope: !16228)
!16241 = !DILocation(line: 4318, column: 3, scope: !16228)
!16242 = !DILocation(line: 4318, column: 13, scope: !16228)
!16243 = !DILocation(line: 4319, column: 2, scope: !16228)
!16244 = distinct !DISubprogram(name: "pack_dac8043", scope: !209, file: !209, line: 4322, type: !4401, scopeLine: 4323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!16245 = !DILocalVariable(name: "addr", arg: 1, scope: !16244, file: !209, line: 4322, type: !429)
!16246 = !DILocation(line: 4322, column: 29, scope: !16244)
!16247 = !DILocalVariable(name: "val", arg: 2, scope: !16244, file: !209, line: 4322, type: !429)
!16248 = !DILocation(line: 4322, column: 39, scope: !16244)
!16249 = !DILocalVariable(name: "bitstring", arg: 3, scope: !16244, file: !209, line: 4322, type: !1042)
!16250 = !DILocation(line: 4322, column: 49, scope: !16244)
!16251 = !DILocation(line: 4324, column: 15, scope: !16244)
!16252 = !DILocation(line: 4324, column: 19, scope: !16244)
!16253 = !DILocation(line: 4324, column: 3, scope: !16244)
!16254 = !DILocation(line: 4324, column: 13, scope: !16244)
!16255 = !DILocation(line: 4325, column: 2, scope: !16244)
!16256 = distinct !DISubprogram(name: "pack_ad8522", scope: !209, file: !209, line: 4328, type: !4401, scopeLine: 4329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!16257 = !DILocalVariable(name: "addr", arg: 1, scope: !16256, file: !209, line: 4328, type: !429)
!16258 = !DILocation(line: 4328, column: 28, scope: !16256)
!16259 = !DILocalVariable(name: "val", arg: 2, scope: !16256, file: !209, line: 4328, type: !429)
!16260 = !DILocation(line: 4328, column: 38, scope: !16256)
!16261 = !DILocalVariable(name: "bitstring", arg: 3, scope: !16256, file: !209, line: 4328, type: !1042)
!16262 = !DILocation(line: 4328, column: 48, scope: !16256)
!16263 = !DILocation(line: 4330, column: 16, scope: !16256)
!16264 = !DILocation(line: 4330, column: 20, scope: !16256)
!16265 = !DILocation(line: 4330, column: 32, scope: !16256)
!16266 = !DILocation(line: 4330, column: 29, scope: !16256)
!16267 = !DILocation(line: 4330, column: 3, scope: !16256)
!16268 = !DILocation(line: 4330, column: 13, scope: !16256)
!16269 = !DILocation(line: 4331, column: 2, scope: !16256)
!16270 = distinct !DISubprogram(name: "pack_ad8804", scope: !209, file: !209, line: 4334, type: !4401, scopeLine: 4335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!16271 = !DILocalVariable(name: "addr", arg: 1, scope: !16270, file: !209, line: 4334, type: !429)
!16272 = !DILocation(line: 4334, column: 28, scope: !16270)
!16273 = !DILocalVariable(name: "val", arg: 2, scope: !16270, file: !209, line: 4334, type: !429)
!16274 = !DILocation(line: 4334, column: 38, scope: !16270)
!16275 = !DILocalVariable(name: "bitstring", arg: 3, scope: !16270, file: !209, line: 4334, type: !1042)
!16276 = !DILocation(line: 4334, column: 48, scope: !16270)
!16277 = !DILocation(line: 4336, column: 17, scope: !16270)
!16278 = !DILocation(line: 4336, column: 22, scope: !16270)
!16279 = !DILocation(line: 4336, column: 29, scope: !16270)
!16280 = !DILocation(line: 4336, column: 38, scope: !16270)
!16281 = !DILocation(line: 4336, column: 42, scope: !16270)
!16282 = !DILocation(line: 4336, column: 35, scope: !16270)
!16283 = !DILocation(line: 4336, column: 3, scope: !16270)
!16284 = !DILocation(line: 4336, column: 13, scope: !16270)
!16285 = !DILocation(line: 4337, column: 2, scope: !16270)
!16286 = distinct !DISubprogram(name: "pack_ad8842", scope: !209, file: !209, line: 4340, type: !4401, scopeLine: 4341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!16287 = !DILocalVariable(name: "addr", arg: 1, scope: !16286, file: !209, line: 4340, type: !429)
!16288 = !DILocation(line: 4340, column: 28, scope: !16286)
!16289 = !DILocalVariable(name: "val", arg: 2, scope: !16286, file: !209, line: 4340, type: !429)
!16290 = !DILocation(line: 4340, column: 38, scope: !16286)
!16291 = !DILocalVariable(name: "bitstring", arg: 3, scope: !16286, file: !209, line: 4340, type: !1042)
!16292 = !DILocation(line: 4340, column: 48, scope: !16286)
!16293 = !DILocation(line: 4342, column: 17, scope: !16286)
!16294 = !DILocation(line: 4342, column: 22, scope: !16286)
!16295 = !DILocation(line: 4342, column: 27, scope: !16286)
!16296 = !DILocation(line: 4342, column: 36, scope: !16286)
!16297 = !DILocation(line: 4342, column: 40, scope: !16286)
!16298 = !DILocation(line: 4342, column: 33, scope: !16286)
!16299 = !DILocation(line: 4342, column: 3, scope: !16286)
!16300 = !DILocation(line: 4342, column: 13, scope: !16286)
!16301 = !DILocation(line: 4343, column: 2, scope: !16286)
!16302 = distinct !DISubprogram(name: "ni_read_eeprom", scope: !209, file: !209, line: 4486, type: !12089, scopeLine: 4487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!16303 = !DILocalVariable(name: "dev", arg: 1, scope: !16302, file: !209, line: 4486, type: !3350)
!16304 = !DILocation(line: 4486, column: 49, scope: !16302)
!16305 = !DILocalVariable(name: "addr", arg: 2, scope: !16302, file: !209, line: 4486, type: !429)
!16306 = !DILocation(line: 4486, column: 58, scope: !16302)
!16307 = !DILocalVariable(name: "cmd", scope: !16302, file: !209, line: 4488, type: !7)
!16308 = !DILocation(line: 4488, column: 15, scope: !16302)
!16309 = !DILocalVariable(name: "bit", scope: !16302, file: !209, line: 4489, type: !429)
!16310 = !DILocation(line: 4489, column: 6, scope: !16302)
!16311 = !DILocalVariable(name: "bitstring", scope: !16302, file: !209, line: 4490, type: !429)
!16312 = !DILocation(line: 4490, column: 6, scope: !16302)
!16313 = !DILocation(line: 4492, column: 25, scope: !16302)
!16314 = !DILocation(line: 4492, column: 30, scope: !16302)
!16315 = !DILocation(line: 4492, column: 39, scope: !16302)
!16316 = !DILocation(line: 4492, column: 21, scope: !16302)
!16317 = !DILocation(line: 4492, column: 48, scope: !16302)
!16318 = !DILocation(line: 4492, column: 53, scope: !16302)
!16319 = !DILocation(line: 4492, column: 45, scope: !16302)
!16320 = !DILocation(line: 4492, column: 12, scope: !16302)
!16321 = !DILocation(line: 4493, column: 12, scope: !16302)
!16322 = !DILocation(line: 4493, column: 17, scope: !16302)
!16323 = !DILocation(line: 4493, column: 2, scope: !16302)
!16324 = !DILocation(line: 4494, column: 11, scope: !16325)
!16325 = distinct !DILexicalBlock(scope: !16302, file: !209, line: 4494, column: 2)
!16326 = !DILocation(line: 4494, column: 7, scope: !16325)
!16327 = !DILocation(line: 4494, column: 21, scope: !16328)
!16328 = distinct !DILexicalBlock(scope: !16325, file: !209, line: 4494, column: 2)
!16329 = !DILocation(line: 4494, column: 2, scope: !16325)
!16330 = !DILocation(line: 4495, column: 7, scope: !16331)
!16331 = distinct !DILexicalBlock(scope: !16332, file: !209, line: 4495, column: 7)
!16332 = distinct !DILexicalBlock(scope: !16328, file: !209, line: 4494, column: 37)
!16333 = !DILocation(line: 4495, column: 13, scope: !16331)
!16334 = !DILocation(line: 4495, column: 11, scope: !16331)
!16335 = !DILocation(line: 4495, column: 7, scope: !16332)
!16336 = !DILocation(line: 4496, column: 8, scope: !16331)
!16337 = !DILocation(line: 4496, column: 4, scope: !16331)
!16338 = !DILocation(line: 4498, column: 8, scope: !16331)
!16339 = !DILocation(line: 4500, column: 13, scope: !16332)
!16340 = !DILocation(line: 4500, column: 18, scope: !16332)
!16341 = !DILocation(line: 4500, column: 3, scope: !16332)
!16342 = !DILocation(line: 4501, column: 13, scope: !16332)
!16343 = !DILocation(line: 4501, column: 41, scope: !16332)
!16344 = !DILocation(line: 4501, column: 39, scope: !16332)
!16345 = !DILocation(line: 4501, column: 18, scope: !16332)
!16346 = !DILocation(line: 4501, column: 3, scope: !16332)
!16347 = !DILocation(line: 4502, column: 2, scope: !16332)
!16348 = !DILocation(line: 4494, column: 30, scope: !16328)
!16349 = !DILocation(line: 4494, column: 2, scope: !16328)
!16350 = distinct !{!16350, !16329, !16351}
!16351 = !DILocation(line: 4502, column: 2, scope: !16325)
!16352 = !DILocation(line: 4503, column: 6, scope: !16302)
!16353 = !DILocation(line: 4504, column: 12, scope: !16302)
!16354 = !DILocation(line: 4505, column: 11, scope: !16355)
!16355 = distinct !DILexicalBlock(scope: !16302, file: !209, line: 4505, column: 2)
!16356 = !DILocation(line: 4505, column: 7, scope: !16355)
!16357 = !DILocation(line: 4505, column: 19, scope: !16358)
!16358 = distinct !DILexicalBlock(scope: !16355, file: !209, line: 4505, column: 2)
!16359 = !DILocation(line: 4505, column: 2, scope: !16355)
!16360 = !DILocation(line: 4506, column: 13, scope: !16361)
!16361 = distinct !DILexicalBlock(scope: !16358, file: !209, line: 4505, column: 35)
!16362 = !DILocation(line: 4506, column: 18, scope: !16361)
!16363 = !DILocation(line: 4506, column: 3, scope: !16361)
!16364 = !DILocation(line: 4507, column: 13, scope: !16361)
!16365 = !DILocation(line: 4507, column: 41, scope: !16361)
!16366 = !DILocation(line: 4507, column: 39, scope: !16361)
!16367 = !DILocation(line: 4507, column: 18, scope: !16361)
!16368 = !DILocation(line: 4507, column: 3, scope: !16361)
!16369 = !DILocation(line: 4508, column: 16, scope: !16370)
!16370 = distinct !DILexicalBlock(scope: !16361, file: !209, line: 4508, column: 7)
!16371 = !DILocation(line: 4508, column: 7, scope: !16370)
!16372 = !DILocation(line: 4508, column: 38, scope: !16370)
!16373 = !DILocation(line: 4508, column: 7, scope: !16361)
!16374 = !DILocation(line: 4509, column: 17, scope: !16370)
!16375 = !DILocation(line: 4509, column: 14, scope: !16370)
!16376 = !DILocation(line: 4509, column: 4, scope: !16370)
!16377 = !DILocation(line: 4510, column: 2, scope: !16361)
!16378 = !DILocation(line: 4505, column: 28, scope: !16358)
!16379 = !DILocation(line: 4505, column: 2, scope: !16358)
!16380 = distinct !{!16380, !16359, !16381}
!16381 = !DILocation(line: 4510, column: 2, scope: !16355)
!16382 = !DILocation(line: 4511, column: 12, scope: !16302)
!16383 = !DILocation(line: 4511, column: 2, scope: !16302)
!16384 = !DILocation(line: 4513, column: 9, scope: !16302)
!16385 = !DILocation(line: 4513, column: 2, scope: !16302)
!16386 = distinct !DISubprogram(name: "ni_config_pfi_filter", scope: !209, file: !209, line: 4644, type: !16387, scopeLine: 4647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!16387 = !DISubroutineType(types: !16388)
!16388 = !{!429, !3350, !7, !407}
!16389 = !DILocalVariable(name: "dev", arg: 1, scope: !16386, file: !209, line: 4644, type: !3350)
!16390 = !DILocation(line: 4644, column: 55, scope: !16386)
!16391 = !DILocalVariable(name: "chan", arg: 2, scope: !16386, file: !209, line: 4645, type: !7)
!16392 = !DILocation(line: 4645, column: 18, scope: !16386)
!16393 = !DILocalVariable(name: "filter", arg: 3, scope: !16386, file: !209, line: 4646, type: !407)
!16394 = !DILocation(line: 4646, column: 31, scope: !16386)
!16395 = !DILocalVariable(name: "devpriv", scope: !16386, file: !209, line: 4648, type: !4731)
!16396 = !DILocation(line: 4648, column: 21, scope: !16386)
!16397 = !DILocation(line: 4648, column: 31, scope: !16386)
!16398 = !DILocation(line: 4648, column: 36, scope: !16386)
!16399 = !DILocalVariable(name: "bits", scope: !16386, file: !209, line: 4649, type: !7)
!16400 = !DILocation(line: 4649, column: 15, scope: !16386)
!16401 = !DILocation(line: 4651, column: 7, scope: !16402)
!16402 = distinct !DILexicalBlock(scope: !16386, file: !209, line: 4651, column: 6)
!16403 = !DILocation(line: 4651, column: 16, scope: !16402)
!16404 = !DILocation(line: 4651, column: 6, scope: !16386)
!16405 = !DILocation(line: 4652, column: 3, scope: !16402)
!16406 = !DILocation(line: 4654, column: 6, scope: !16407)
!16407 = distinct !DILexicalBlock(scope: !16386, file: !209, line: 4654, column: 6)
!16408 = !DILocation(line: 4654, column: 11, scope: !16407)
!16409 = !DILocation(line: 4654, column: 6, scope: !16386)
!16410 = !DILocation(line: 4656, column: 8, scope: !16411)
!16411 = distinct !DILexicalBlock(scope: !16407, file: !209, line: 4654, column: 25)
!16412 = !DILocation(line: 4657, column: 2, scope: !16411)
!16413 = !DILocation(line: 4659, column: 18, scope: !16386)
!16414 = !DILocation(line: 4659, column: 9, scope: !16386)
!16415 = !DILocation(line: 4659, column: 7, scope: !16386)
!16416 = !DILocation(line: 4660, column: 11, scope: !16386)
!16417 = !DILocation(line: 4660, column: 10, scope: !16386)
!16418 = !DILocation(line: 4660, column: 7, scope: !16386)
!16419 = !DILocation(line: 4661, column: 10, scope: !16386)
!16420 = !DILocation(line: 4661, column: 7, scope: !16386)
!16421 = !DILocation(line: 4662, column: 12, scope: !16386)
!16422 = !DILocation(line: 4662, column: 17, scope: !16386)
!16423 = !DILocation(line: 4662, column: 2, scope: !16386)
!16424 = !DILocation(line: 4663, column: 2, scope: !16386)
!16425 = !DILocation(line: 4664, column: 1, scope: !16386)
!16426 = distinct !DISubprogram(name: "cs5529_do_conversion", scope: !209, file: !209, line: 4782, type: !16427, scopeLine: 4784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!16427 = !DISubroutineType(types: !16428)
!16428 = !{!429, !3350, !9191}
!16429 = !DILocalVariable(name: "dev", arg: 1, scope: !16426, file: !209, line: 4782, type: !3350)
!16430 = !DILocation(line: 4782, column: 55, scope: !16426)
!16431 = !DILocalVariable(name: "data", arg: 2, scope: !16426, file: !209, line: 4783, type: !9191)
!16432 = !DILocation(line: 4783, column: 21, scope: !16426)
!16433 = !DILocalVariable(name: "retval", scope: !16426, file: !209, line: 4785, type: !429)
!16434 = !DILocation(line: 4785, column: 6, scope: !16426)
!16435 = !DILocalVariable(name: "status", scope: !16426, file: !209, line: 4786, type: !438)
!16436 = !DILocation(line: 4786, column: 17, scope: !16426)
!16437 = !DILocation(line: 4788, column: 17, scope: !16426)
!16438 = !DILocation(line: 4788, column: 2, scope: !16426)
!16439 = !DILocation(line: 4789, column: 32, scope: !16426)
!16440 = !DILocation(line: 4789, column: 11, scope: !16426)
!16441 = !DILocation(line: 4789, column: 9, scope: !16426)
!16442 = !DILocation(line: 4790, column: 6, scope: !16443)
!16443 = distinct !DILexicalBlock(scope: !16426, file: !209, line: 4790, column: 6)
!16444 = !DILocation(line: 4790, column: 6, scope: !16426)
!16445 = !DILocation(line: 4791, column: 3, scope: !16446)
!16446 = distinct !DILexicalBlock(scope: !16443, file: !209, line: 4790, column: 14)
!16447 = !DILocation(line: 4793, column: 3, scope: !16446)
!16448 = !DILocation(line: 4795, column: 25, scope: !16426)
!16449 = !DILocation(line: 4795, column: 11, scope: !16426)
!16450 = !DILocation(line: 4795, column: 9, scope: !16426)
!16451 = !DILocation(line: 4796, column: 6, scope: !16452)
!16452 = distinct !DILexicalBlock(scope: !16426, file: !209, line: 4796, column: 6)
!16453 = !DILocation(line: 4796, column: 13, scope: !16452)
!16454 = !DILocation(line: 4796, column: 6, scope: !16426)
!16455 = !DILocation(line: 4797, column: 3, scope: !16456)
!16456 = distinct !DILexicalBlock(scope: !16452, file: !209, line: 4796, column: 45)
!16457 = !DILocation(line: 4799, column: 3, scope: !16456)
!16458 = !DILocation(line: 4801, column: 6, scope: !16459)
!16459 = distinct !DILexicalBlock(scope: !16426, file: !209, line: 4801, column: 6)
!16460 = !DILocation(line: 4801, column: 13, scope: !16459)
!16461 = !DILocation(line: 4801, column: 6, scope: !16426)
!16462 = !DILocation(line: 4802, column: 3, scope: !16463)
!16463 = distinct !DILexicalBlock(scope: !16459, file: !209, line: 4801, column: 44)
!16464 = !DILocation(line: 4804, column: 2, scope: !16463)
!16465 = !DILocation(line: 4805, column: 6, scope: !16466)
!16466 = distinct !DILexicalBlock(scope: !16426, file: !209, line: 4805, column: 6)
!16467 = !DILocation(line: 4805, column: 6, scope: !16426)
!16468 = !DILocation(line: 4806, column: 25, scope: !16469)
!16469 = distinct !DILexicalBlock(scope: !16466, file: !209, line: 4805, column: 12)
!16470 = !DILocation(line: 4806, column: 11, scope: !16469)
!16471 = !DILocation(line: 4806, column: 4, scope: !16469)
!16472 = !DILocation(line: 4806, column: 9, scope: !16469)
!16473 = !DILocation(line: 4808, column: 4, scope: !16469)
!16474 = !DILocation(line: 4808, column: 9, scope: !16469)
!16475 = !DILocation(line: 4809, column: 2, scope: !16469)
!16476 = !DILocation(line: 4810, column: 2, scope: !16426)
!16477 = !DILocation(line: 4811, column: 1, scope: !16426)
!16478 = !DILocalVariable(name: "dev", arg: 1, scope: !4405, file: !209, line: 4761, type: !3350)
!16479 = !DILocation(line: 4761, column: 50, scope: !4405)
!16480 = !DILocalVariable(name: "value", arg: 2, scope: !4405, file: !209, line: 4761, type: !438)
!16481 = !DILocation(line: 4761, column: 70, scope: !4405)
!16482 = !DILocalVariable(name: "i", scope: !4405, file: !209, line: 4764, type: !429)
!16483 = !DILocation(line: 4764, column: 6, scope: !4405)
!16484 = !DILocation(line: 4766, column: 17, scope: !4405)
!16485 = !DILocation(line: 4766, column: 22, scope: !4405)
!16486 = !DILocation(line: 4766, column: 2, scope: !4405)
!16487 = !DILocation(line: 4771, column: 9, scope: !16488)
!16488 = distinct !DILexicalBlock(scope: !4405, file: !209, line: 4771, column: 2)
!16489 = !DILocation(line: 4771, column: 7, scope: !16488)
!16490 = !DILocation(line: 4771, column: 14, scope: !16491)
!16491 = distinct !DILexicalBlock(scope: !16488, file: !209, line: 4771, column: 2)
!16492 = !DILocation(line: 4771, column: 16, scope: !16491)
!16493 = !DILocation(line: 4771, column: 2, scope: !16488)
!16494 = !DILocation(line: 4772, column: 21, scope: !16495)
!16495 = distinct !DILexicalBlock(scope: !16496, file: !209, line: 4772, column: 7)
!16496 = distinct !DILexicalBlock(scope: !16491, file: !209, line: 4771, column: 32)
!16497 = !DILocation(line: 4772, column: 7, scope: !16495)
!16498 = !DILocation(line: 4772, column: 49, scope: !16495)
!16499 = !DILocation(line: 4772, column: 7, scope: !16496)
!16500 = !DILocation(line: 4774, column: 4, scope: !16495)
!16501 = !DILocation(line: 4775, column: 3, scope: !16502)
!16502 = distinct !DILexicalBlock(scope: !16503, file: !209, line: 4775, column: 3)
!16503 = distinct !DILexicalBlock(scope: !16504, file: !209, line: 4775, column: 3)
!16504 = distinct !DILexicalBlock(scope: !16505, file: !209, line: 4775, column: 3)
!16505 = distinct !DILexicalBlock(scope: !16496, file: !209, line: 4775, column: 3)
!16506 = !DILocation(line: 4776, column: 2, scope: !16496)
!16507 = !DILocation(line: 4771, column: 28, scope: !16491)
!16508 = !DILocation(line: 4771, column: 2, scope: !16491)
!16509 = distinct !{!16509, !16493, !16510}
!16510 = !DILocation(line: 4776, column: 2, scope: !16488)
!16511 = !DILocation(line: 4777, column: 6, scope: !16512)
!16512 = distinct !DILexicalBlock(scope: !4405, file: !209, line: 4777, column: 6)
!16513 = !DILocation(line: 4777, column: 8, scope: !16512)
!16514 = !DILocation(line: 4777, column: 6, scope: !4405)
!16515 = !DILocation(line: 4778, column: 3, scope: !16512)
!16516 = !DILocation(line: 4780, column: 1, scope: !4405)
!16517 = distinct !DISubprogram(name: "cs5529_wait_for_idle", scope: !209, file: !209, line: 4740, type: !4261, scopeLine: 4741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!16518 = !DILocalVariable(name: "pscr_ret__", scope: !16519, file: !16520, line: 15, type: !449)
!16519 = distinct !DILexicalBlock(scope: !16521, file: !16520, line: 15, column: 9)
!16520 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!16521 = distinct !DISubprogram(name: "get_current", scope: !16520, file: !16520, line: 13, type: !16522, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!16522 = !DISubroutineType(types: !16523)
!16523 = !{!449}
!16524 = !DILocation(line: 15, column: 9, scope: !16519, inlinedAt: !16525)
!16525 = distinct !DILocation(line: 4750, column: 3, scope: !16526)
!16526 = distinct !DILexicalBlock(scope: !16527, file: !209, line: 4750, column: 3)
!16527 = distinct !DILexicalBlock(scope: !16528, file: !209, line: 4750, column: 3)
!16528 = distinct !DILexicalBlock(scope: !16529, file: !209, line: 4750, column: 3)
!16529 = distinct !DILexicalBlock(scope: !16530, file: !209, line: 4746, column: 32)
!16530 = distinct !DILexicalBlock(scope: !16531, file: !209, line: 4746, column: 2)
!16531 = distinct !DILexicalBlock(scope: !16517, file: !209, line: 4746, column: 2)
!16532 = !DILocalVariable(name: "__vpp_verify", scope: !16533, file: !16520, line: 15, type: !3131)
!16533 = distinct !DILexicalBlock(scope: !16519, file: !16520, line: 15, column: 9)
!16534 = !DILocation(line: 15, column: 9, scope: !16533, inlinedAt: !16525)
!16535 = !DILocalVariable(name: "pfo_val__", scope: !16536, file: !16520, line: 15, type: !510)
!16536 = distinct !DILexicalBlock(scope: !16519, file: !16520, line: 15, column: 9)
!16537 = !DILocation(line: 15, column: 9, scope: !16536, inlinedAt: !16525)
!16538 = !DILocalVariable(name: "dev", arg: 1, scope: !16517, file: !209, line: 4740, type: !3350)
!16539 = !DILocation(line: 4740, column: 55, scope: !16517)
!16540 = !DILocalVariable(name: "status", scope: !16517, file: !209, line: 4742, type: !438)
!16541 = !DILocation(line: 4742, column: 17, scope: !16517)
!16542 = !DILocalVariable(name: "timeout", scope: !16517, file: !209, line: 4743, type: !4330)
!16543 = !DILocation(line: 4743, column: 12, scope: !16517)
!16544 = !DILocalVariable(name: "i", scope: !16517, file: !209, line: 4744, type: !429)
!16545 = !DILocation(line: 4744, column: 6, scope: !16517)
!16546 = !DILocation(line: 4746, column: 9, scope: !16531)
!16547 = !DILocation(line: 4746, column: 7, scope: !16531)
!16548 = !DILocation(line: 4746, column: 14, scope: !16530)
!16549 = !DILocation(line: 4746, column: 16, scope: !16530)
!16550 = !DILocation(line: 4746, column: 2, scope: !16531)
!16551 = !DILocation(line: 4747, column: 26, scope: !16529)
!16552 = !DILocation(line: 4747, column: 12, scope: !16529)
!16553 = !DILocation(line: 4747, column: 10, scope: !16529)
!16554 = !DILocation(line: 4748, column: 8, scope: !16555)
!16555 = distinct !DILexicalBlock(scope: !16529, file: !209, line: 4748, column: 7)
!16556 = !DILocation(line: 4748, column: 15, scope: !16555)
!16557 = !DILocation(line: 4748, column: 41, scope: !16555)
!16558 = !DILocation(line: 4748, column: 7, scope: !16529)
!16559 = !DILocation(line: 4749, column: 4, scope: !16555)
!16560 = !DILocation(line: 4750, column: 3, scope: !16529)
!16561 = !DILocation(line: 4750, column: 3, scope: !16528)
!16562 = !DILocation(line: 4750, column: 3, scope: !16527)
!16563 = !DILocation(line: 4750, column: 3, scope: !16564)
!16564 = distinct !DILexicalBlock(scope: !16527, file: !209, line: 4750, column: 3)
!16565 = !{i32 -2146194683}
!16566 = !DILocation(line: 4750, column: 3, scope: !16526)
!16567 = !{i32 -2141278898}
!16568 = !DILocation(line: 4751, column: 7, scope: !16569)
!16569 = distinct !DILexicalBlock(scope: !16529, file: !209, line: 4751, column: 7)
!16570 = !DILocation(line: 4751, column: 7, scope: !16529)
!16571 = !DILocation(line: 4752, column: 4, scope: !16569)
!16572 = !DILocation(line: 4753, column: 2, scope: !16529)
!16573 = !DILocation(line: 4746, column: 28, scope: !16530)
!16574 = !DILocation(line: 4746, column: 2, scope: !16530)
!16575 = distinct !{!16575, !16550, !16576}
!16576 = !DILocation(line: 4753, column: 2, scope: !16531)
!16577 = !DILocation(line: 4754, column: 6, scope: !16578)
!16578 = distinct !DILexicalBlock(scope: !16517, file: !209, line: 4754, column: 6)
!16579 = !DILocation(line: 4754, column: 8, scope: !16578)
!16580 = !DILocation(line: 4754, column: 6, scope: !16517)
!16581 = !DILocation(line: 4755, column: 3, scope: !16582)
!16582 = distinct !DILexicalBlock(scope: !16578, file: !209, line: 4754, column: 20)
!16583 = !DILocation(line: 4756, column: 3, scope: !16582)
!16584 = !DILocation(line: 4758, column: 2, scope: !16517)
!16585 = !DILocation(line: 4759, column: 1, scope: !16517)
!16586 = distinct !DISubprogram(name: "ni_ao_win_inw", scope: !209, file: !209, line: 839, type: !16587, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!16587 = !DISubroutineType(types: !16588)
!16588 = !{!438, !3350, !429}
!16589 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !16590)
!16590 = distinct !DILocation(line: 848, column: 2, scope: !16586)
!16591 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !16590)
!16592 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !16593)
!16593 = distinct !DILocation(line: 845, column: 2, scope: !16594)
!16594 = distinct !DILexicalBlock(scope: !16595, file: !209, line: 845, column: 2)
!16595 = distinct !DILexicalBlock(scope: !16596, file: !209, line: 845, column: 2)
!16596 = distinct !DILexicalBlock(scope: !16597, file: !209, line: 845, column: 2)
!16597 = distinct !DILexicalBlock(scope: !16598, file: !209, line: 845, column: 2)
!16598 = distinct !DILexicalBlock(scope: !16586, file: !209, line: 845, column: 2)
!16599 = !DILocalVariable(name: "dev", arg: 1, scope: !16586, file: !209, line: 839, type: !3350)
!16600 = !DILocation(line: 839, column: 66, scope: !16586)
!16601 = !DILocalVariable(name: "addr", arg: 2, scope: !16586, file: !209, line: 839, type: !429)
!16602 = !DILocation(line: 839, column: 75, scope: !16586)
!16603 = !DILocalVariable(name: "devpriv", scope: !16586, file: !209, line: 841, type: !4731)
!16604 = !DILocation(line: 841, column: 21, scope: !16586)
!16605 = !DILocation(line: 841, column: 31, scope: !16586)
!16606 = !DILocation(line: 841, column: 36, scope: !16586)
!16607 = !DILocalVariable(name: "flags", scope: !16586, file: !209, line: 842, type: !435)
!16608 = !DILocation(line: 842, column: 16, scope: !16586)
!16609 = !DILocalVariable(name: "data", scope: !16586, file: !209, line: 843, type: !438)
!16610 = !DILocation(line: 843, column: 17, scope: !16586)
!16611 = !DILocation(line: 845, column: 2, scope: !16586)
!16612 = !DILocation(line: 845, column: 2, scope: !16598)
!16613 = !DILocalVariable(name: "__dummy", scope: !16614, file: !209, line: 845, type: !435)
!16614 = distinct !DILexicalBlock(scope: !16597, file: !209, line: 845, column: 2)
!16615 = !DILocation(line: 845, column: 2, scope: !16614)
!16616 = !DILocalVariable(name: "__dummy2", scope: !16614, file: !209, line: 845, type: !435)
!16617 = !DILocation(line: 845, column: 2, scope: !16597)
!16618 = !DILocation(line: 845, column: 2, scope: !16596)
!16619 = !DILocation(line: 845, column: 2, scope: !16620)
!16620 = distinct !DILexicalBlock(scope: !16596, file: !209, line: 845, column: 2)
!16621 = !DILocalVariable(name: "__dummy", scope: !16622, file: !209, line: 845, type: !435)
!16622 = distinct !DILexicalBlock(scope: !16623, file: !209, line: 845, column: 2)
!16623 = distinct !DILexicalBlock(scope: !16620, file: !209, line: 845, column: 2)
!16624 = !DILocation(line: 845, column: 2, scope: !16622)
!16625 = !DILocalVariable(name: "__dummy2", scope: !16622, file: !209, line: 845, type: !435)
!16626 = !DILocation(line: 845, column: 2, scope: !16623)
!16627 = !DILocation(line: 845, column: 2, scope: !16595)
!16628 = !{i32 -2141337510}
!16629 = !DILocation(line: 845, column: 2, scope: !16594)
!16630 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !16593)
!16631 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !16593)
!16632 = !DILocation(line: 846, column: 12, scope: !16586)
!16633 = !DILocation(line: 846, column: 17, scope: !16586)
!16634 = !DILocation(line: 846, column: 2, scope: !16586)
!16635 = !DILocation(line: 847, column: 18, scope: !16586)
!16636 = !DILocation(line: 847, column: 9, scope: !16586)
!16637 = !DILocation(line: 847, column: 7, scope: !16586)
!16638 = !DILocation(line: 848, column: 26, scope: !16586)
!16639 = !DILocation(line: 848, column: 35, scope: !16586)
!16640 = !DILocation(line: 848, column: 48, scope: !16586)
!16641 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !16590)
!16642 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !16590)
!16643 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !16590)
!16644 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !16590)
!16645 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !16590)
!16646 = !DILocation(line: 849, column: 9, scope: !16586)
!16647 = !DILocation(line: 849, column: 2, scope: !16586)
!16648 = distinct !DISubprogram(name: "cs5529_config_write", scope: !209, file: !209, line: 4844, type: !6797, scopeLine: 4846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!16649 = !DILocalVariable(name: "dev", arg: 1, scope: !16648, file: !209, line: 4844, type: !3350)
!16650 = !DILocation(line: 4844, column: 55, scope: !16648)
!16651 = !DILocalVariable(name: "value", arg: 2, scope: !16648, file: !209, line: 4844, type: !7)
!16652 = !DILocation(line: 4844, column: 73, scope: !16648)
!16653 = !DILocalVariable(name: "reg_select_bits", arg: 3, scope: !16648, file: !209, line: 4845, type: !7)
!16654 = !DILocation(line: 4845, column: 18, scope: !16648)
!16655 = !DILocation(line: 4847, column: 17, scope: !16648)
!16656 = !DILocation(line: 4847, column: 23, scope: !16648)
!16657 = !DILocation(line: 4847, column: 29, scope: !16648)
!16658 = !DILocation(line: 4847, column: 36, scope: !16648)
!16659 = !DILocation(line: 4847, column: 2, scope: !16648)
!16660 = !DILocation(line: 4848, column: 17, scope: !16648)
!16661 = !DILocation(line: 4848, column: 22, scope: !16648)
!16662 = !DILocation(line: 4848, column: 28, scope: !16648)
!16663 = !DILocation(line: 4848, column: 2, scope: !16648)
!16664 = !DILocation(line: 4849, column: 18, scope: !16648)
!16665 = !DILocation(line: 4850, column: 17, scope: !16648)
!16666 = !DILocation(line: 4850, column: 38, scope: !16648)
!16667 = !DILocation(line: 4850, column: 36, scope: !16648)
!16668 = !DILocation(line: 4850, column: 22, scope: !16648)
!16669 = !DILocation(line: 4850, column: 2, scope: !16648)
!16670 = !DILocation(line: 4851, column: 27, scope: !16671)
!16671 = distinct !DILexicalBlock(scope: !16648, file: !209, line: 4851, column: 6)
!16672 = !DILocation(line: 4851, column: 6, scope: !16671)
!16673 = !DILocation(line: 4851, column: 6, scope: !16648)
!16674 = !DILocation(line: 4852, column: 3, scope: !16671)
!16675 = !DILocation(line: 4854, column: 1, scope: !16648)
!16676 = distinct !DISubprogram(name: "ni_serial_hw_readwrite8", scope: !209, file: !209, line: 3754, type: !16677, scopeLine: 3758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!16677 = !DISubroutineType(types: !16678)
!16678 = !{!429, !3350, !4119, !434, !16679}
!16679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!16680 = !DILocalVariable(name: "dev", arg: 1, scope: !16676, file: !209, line: 3754, type: !3350)
!16681 = !DILocation(line: 3754, column: 58, scope: !16676)
!16682 = !DILocalVariable(name: "s", arg: 2, scope: !16676, file: !209, line: 3755, type: !4119)
!16683 = !DILocation(line: 3755, column: 33, scope: !16676)
!16684 = !DILocalVariable(name: "data_out", arg: 3, scope: !16676, file: !209, line: 3756, type: !434)
!16685 = !DILocation(line: 3756, column: 22, scope: !16676)
!16686 = !DILocalVariable(name: "data_in", arg: 4, scope: !16676, file: !209, line: 3757, type: !16679)
!16687 = !DILocation(line: 3757, column: 23, scope: !16676)
!16688 = !DILocalVariable(name: "devpriv", scope: !16676, file: !209, line: 3759, type: !4731)
!16689 = !DILocation(line: 3759, column: 21, scope: !16676)
!16690 = !DILocation(line: 3759, column: 31, scope: !16676)
!16691 = !DILocation(line: 3759, column: 36, scope: !16676)
!16692 = !DILocalVariable(name: "status1", scope: !16676, file: !209, line: 3760, type: !7)
!16693 = !DILocation(line: 3760, column: 15, scope: !16676)
!16694 = !DILocalVariable(name: "err", scope: !16676, file: !209, line: 3761, type: !429)
!16695 = !DILocation(line: 3761, column: 6, scope: !16676)
!16696 = !DILocalVariable(name: "count", scope: !16676, file: !209, line: 3761, type: !429)
!16697 = !DILocation(line: 3761, column: 15, scope: !16676)
!16698 = !DILocation(line: 3763, column: 2, scope: !16676)
!16699 = !DILocation(line: 3763, column: 11, scope: !16676)
!16700 = !DILocation(line: 3763, column: 22, scope: !16676)
!16701 = !DILocation(line: 3764, column: 25, scope: !16676)
!16702 = !DILocation(line: 3764, column: 2, scope: !16676)
!16703 = !DILocation(line: 3764, column: 11, scope: !16676)
!16704 = !DILocation(line: 3764, column: 22, scope: !16676)
!16705 = !DILocation(line: 3765, column: 16, scope: !16676)
!16706 = !DILocation(line: 3765, column: 21, scope: !16676)
!16707 = !DILocation(line: 3765, column: 30, scope: !16676)
!16708 = !DILocation(line: 3765, column: 2, scope: !16676)
!16709 = !DILocation(line: 3767, column: 25, scope: !16676)
!16710 = !DILocation(line: 3767, column: 12, scope: !16676)
!16711 = !DILocation(line: 3767, column: 10, scope: !16676)
!16712 = !DILocation(line: 3768, column: 6, scope: !16713)
!16713 = distinct !DILexicalBlock(scope: !16676, file: !209, line: 3768, column: 6)
!16714 = !DILocation(line: 3768, column: 14, scope: !16713)
!16715 = !DILocation(line: 3768, column: 6, scope: !16676)
!16716 = !DILocation(line: 3769, column: 7, scope: !16717)
!16717 = distinct !DILexicalBlock(scope: !16713, file: !209, line: 3768, column: 45)
!16718 = !DILocation(line: 3770, column: 3, scope: !16717)
!16719 = !DILocation(line: 3773, column: 2, scope: !16676)
!16720 = !DILocation(line: 3773, column: 11, scope: !16676)
!16721 = !DILocation(line: 3773, column: 23, scope: !16676)
!16722 = !DILocation(line: 3774, column: 16, scope: !16676)
!16723 = !DILocation(line: 3774, column: 21, scope: !16676)
!16724 = !DILocation(line: 3774, column: 30, scope: !16676)
!16725 = !DILocation(line: 3774, column: 2, scope: !16676)
!16726 = !DILocation(line: 3775, column: 2, scope: !16676)
!16727 = !DILocation(line: 3775, column: 11, scope: !16676)
!16728 = !DILocation(line: 3775, column: 23, scope: !16676)
!16729 = !DILocation(line: 3778, column: 2, scope: !16676)
!16730 = !DILocation(line: 3778, column: 33, scope: !16676)
!16731 = !DILocation(line: 3778, column: 20, scope: !16676)
!16732 = !DILocation(line: 3778, column: 18, scope: !16676)
!16733 = !DILocation(line: 3778, column: 9, scope: !16676)
!16734 = !DILocation(line: 3778, column: 58, scope: !16676)
!16735 = !DILocation(line: 3781, column: 3, scope: !16736)
!16736 = distinct !DILexicalBlock(scope: !16737, file: !209, line: 3781, column: 3)
!16737 = distinct !DILexicalBlock(scope: !16738, file: !209, line: 3781, column: 3)
!16738 = distinct !DILexicalBlock(scope: !16676, file: !209, line: 3779, column: 38)
!16739 = !DILocation(line: 3781, column: 3, scope: !16737)
!16740 = !DILocation(line: 3781, column: 3, scope: !16741)
!16741 = distinct !DILexicalBlock(scope: !16742, file: !209, line: 3781, column: 3)
!16742 = distinct !DILexicalBlock(scope: !16736, file: !209, line: 3781, column: 3)
!16743 = !DILocation(line: 3781, column: 3, scope: !16742)
!16744 = !DILocation(line: 3781, column: 3, scope: !16745)
!16745 = distinct !DILexicalBlock(scope: !16736, file: !209, line: 3781, column: 3)
!16746 = !DILocation(line: 3782, column: 7, scope: !16747)
!16747 = distinct !DILexicalBlock(scope: !16738, file: !209, line: 3782, column: 7)
!16748 = !DILocation(line: 3782, column: 15, scope: !16747)
!16749 = !DILocation(line: 3782, column: 7, scope: !16738)
!16750 = !DILocation(line: 3783, column: 4, scope: !16751)
!16751 = distinct !DILexicalBlock(scope: !16747, file: !209, line: 3782, column: 20)
!16752 = !DILocation(line: 3785, column: 8, scope: !16751)
!16753 = !DILocation(line: 3786, column: 4, scope: !16751)
!16754 = distinct !{!16754, !16729, !16755}
!16755 = !DILocation(line: 3788, column: 2, scope: !16676)
!16756 = !DILocation(line: 3794, column: 2, scope: !16757)
!16757 = distinct !DILexicalBlock(scope: !16758, file: !209, line: 3794, column: 2)
!16758 = distinct !DILexicalBlock(scope: !16676, file: !209, line: 3794, column: 2)
!16759 = !DILocation(line: 3794, column: 2, scope: !16758)
!16760 = !DILocation(line: 3794, column: 2, scope: !16761)
!16761 = distinct !DILexicalBlock(scope: !16762, file: !209, line: 3794, column: 2)
!16762 = distinct !DILexicalBlock(scope: !16757, file: !209, line: 3794, column: 2)
!16763 = !DILocation(line: 3794, column: 2, scope: !16762)
!16764 = !DILocation(line: 3794, column: 2, scope: !16765)
!16765 = distinct !DILexicalBlock(scope: !16757, file: !209, line: 3794, column: 2)
!16766 = !DILocation(line: 3796, column: 6, scope: !16767)
!16767 = distinct !DILexicalBlock(scope: !16676, file: !209, line: 3796, column: 6)
!16768 = !DILocation(line: 3796, column: 6, scope: !16676)
!16769 = !DILocation(line: 3797, column: 27, scope: !16767)
!16770 = !DILocation(line: 3797, column: 14, scope: !16767)
!16771 = !DILocation(line: 3797, column: 4, scope: !16767)
!16772 = !DILocation(line: 3797, column: 12, scope: !16767)
!16773 = !DILocation(line: 3797, column: 3, scope: !16767)
!16774 = !DILabel(scope: !16676, name: "error", file: !209, line: 3799)
!16775 = !DILocation(line: 3799, column: 1, scope: !16676)
!16776 = !DILocation(line: 3800, column: 16, scope: !16676)
!16777 = !DILocation(line: 3800, column: 21, scope: !16676)
!16778 = !DILocation(line: 3800, column: 30, scope: !16676)
!16779 = !DILocation(line: 3800, column: 2, scope: !16676)
!16780 = !DILocation(line: 3802, column: 9, scope: !16676)
!16781 = !DILocation(line: 3802, column: 2, scope: !16676)
!16782 = distinct !DISubprogram(name: "ni_serial_sw_readwrite8", scope: !209, file: !209, line: 3805, type: !16677, scopeLine: 3809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!16783 = !DILocalVariable(name: "dev", arg: 1, scope: !16782, file: !209, line: 3805, type: !3350)
!16784 = !DILocation(line: 3805, column: 58, scope: !16782)
!16785 = !DILocalVariable(name: "s", arg: 2, scope: !16782, file: !209, line: 3806, type: !4119)
!16786 = !DILocation(line: 3806, column: 33, scope: !16782)
!16787 = !DILocalVariable(name: "data_out", arg: 3, scope: !16782, file: !209, line: 3807, type: !434)
!16788 = !DILocation(line: 3807, column: 22, scope: !16782)
!16789 = !DILocalVariable(name: "data_in", arg: 4, scope: !16782, file: !209, line: 3808, type: !16679)
!16790 = !DILocation(line: 3808, column: 23, scope: !16782)
!16791 = !DILocalVariable(name: "devpriv", scope: !16782, file: !209, line: 3810, type: !4731)
!16792 = !DILocation(line: 3810, column: 21, scope: !16782)
!16793 = !DILocation(line: 3810, column: 31, scope: !16782)
!16794 = !DILocation(line: 3810, column: 36, scope: !16782)
!16795 = !DILocalVariable(name: "mask", scope: !16782, file: !209, line: 3811, type: !434)
!16796 = !DILocation(line: 3811, column: 16, scope: !16782)
!16797 = !DILocalVariable(name: "input", scope: !16782, file: !209, line: 3811, type: !434)
!16798 = !DILocation(line: 3811, column: 22, scope: !16782)
!16799 = !DILocation(line: 3814, column: 2, scope: !16800)
!16800 = distinct !DILexicalBlock(scope: !16801, file: !209, line: 3814, column: 2)
!16801 = distinct !DILexicalBlock(scope: !16782, file: !209, line: 3814, column: 2)
!16802 = !DILocation(line: 3814, column: 2, scope: !16801)
!16803 = !DILocation(line: 3814, column: 2, scope: !16804)
!16804 = distinct !DILexicalBlock(scope: !16805, file: !209, line: 3814, column: 2)
!16805 = distinct !DILexicalBlock(scope: !16800, file: !209, line: 3814, column: 2)
!16806 = !DILocation(line: 3814, column: 2, scope: !16805)
!16807 = !DILocation(line: 3814, column: 2, scope: !16808)
!16808 = distinct !DILexicalBlock(scope: !16800, file: !209, line: 3814, column: 2)
!16809 = !DILocation(line: 3816, column: 12, scope: !16810)
!16810 = distinct !DILexicalBlock(scope: !16782, file: !209, line: 3816, column: 2)
!16811 = !DILocation(line: 3816, column: 7, scope: !16810)
!16812 = !DILocation(line: 3816, column: 20, scope: !16813)
!16813 = distinct !DILexicalBlock(scope: !16810, file: !209, line: 3816, column: 2)
!16814 = !DILocation(line: 3816, column: 2, scope: !16810)
!16815 = !DILocation(line: 3822, column: 3, scope: !16816)
!16816 = distinct !DILexicalBlock(scope: !16813, file: !209, line: 3816, column: 38)
!16817 = !DILocation(line: 3822, column: 12, scope: !16816)
!16818 = !DILocation(line: 3822, column: 23, scope: !16816)
!16819 = !DILocation(line: 3823, column: 7, scope: !16820)
!16820 = distinct !DILexicalBlock(scope: !16816, file: !209, line: 3823, column: 7)
!16821 = !DILocation(line: 3823, column: 18, scope: !16820)
!16822 = !DILocation(line: 3823, column: 16, scope: !16820)
!16823 = !DILocation(line: 3823, column: 7, scope: !16816)
!16824 = !DILocation(line: 3824, column: 4, scope: !16820)
!16825 = !DILocation(line: 3824, column: 13, scope: !16820)
!16826 = !DILocation(line: 3824, column: 24, scope: !16820)
!16827 = !DILocation(line: 3825, column: 17, scope: !16816)
!16828 = !DILocation(line: 3825, column: 22, scope: !16816)
!16829 = !DILocation(line: 3825, column: 31, scope: !16816)
!16830 = !DILocation(line: 3825, column: 3, scope: !16816)
!16831 = !DILocation(line: 3831, column: 3, scope: !16816)
!16832 = !DILocation(line: 3831, column: 12, scope: !16816)
!16833 = !DILocation(line: 3831, column: 24, scope: !16816)
!16834 = !DILocation(line: 3832, column: 17, scope: !16816)
!16835 = !DILocation(line: 3832, column: 22, scope: !16816)
!16836 = !DILocation(line: 3832, column: 31, scope: !16816)
!16837 = !DILocation(line: 3832, column: 3, scope: !16816)
!16838 = !DILocation(line: 3834, column: 3, scope: !16839)
!16839 = distinct !DILexicalBlock(scope: !16840, file: !209, line: 3834, column: 3)
!16840 = distinct !DILexicalBlock(scope: !16816, file: !209, line: 3834, column: 3)
!16841 = !DILocation(line: 3834, column: 3, scope: !16840)
!16842 = !DILocation(line: 3834, column: 3, scope: !16843)
!16843 = distinct !DILexicalBlock(scope: !16844, file: !209, line: 3834, column: 3)
!16844 = distinct !DILexicalBlock(scope: !16839, file: !209, line: 3834, column: 3)
!16845 = !DILocation(line: 3834, column: 3, scope: !16844)
!16846 = !DILocation(line: 3834, column: 3, scope: !16847)
!16847 = distinct !DILexicalBlock(scope: !16839, file: !209, line: 3834, column: 3)
!16848 = !DILocation(line: 3836, column: 3, scope: !16816)
!16849 = !DILocation(line: 3836, column: 12, scope: !16816)
!16850 = !DILocation(line: 3836, column: 24, scope: !16816)
!16851 = !DILocation(line: 3837, column: 17, scope: !16816)
!16852 = !DILocation(line: 3837, column: 22, scope: !16816)
!16853 = !DILocation(line: 3837, column: 31, scope: !16816)
!16854 = !DILocation(line: 3837, column: 3, scope: !16816)
!16855 = !DILocation(line: 3839, column: 3, scope: !16856)
!16856 = distinct !DILexicalBlock(scope: !16857, file: !209, line: 3839, column: 3)
!16857 = distinct !DILexicalBlock(scope: !16816, file: !209, line: 3839, column: 3)
!16858 = !DILocation(line: 3839, column: 3, scope: !16857)
!16859 = !DILocation(line: 3839, column: 3, scope: !16860)
!16860 = distinct !DILexicalBlock(scope: !16861, file: !209, line: 3839, column: 3)
!16861 = distinct !DILexicalBlock(scope: !16856, file: !209, line: 3839, column: 3)
!16862 = !DILocation(line: 3839, column: 3, scope: !16861)
!16863 = !DILocation(line: 3839, column: 3, scope: !16864)
!16864 = distinct !DILexicalBlock(scope: !16856, file: !209, line: 3839, column: 3)
!16865 = !DILocation(line: 3842, column: 20, scope: !16866)
!16866 = distinct !DILexicalBlock(scope: !16816, file: !209, line: 3842, column: 7)
!16867 = !DILocation(line: 3842, column: 7, scope: !16866)
!16868 = !DILocation(line: 3842, column: 43, scope: !16866)
!16869 = !DILocation(line: 3842, column: 7, scope: !16816)
!16870 = !DILocation(line: 3843, column: 13, scope: !16866)
!16871 = !DILocation(line: 3843, column: 10, scope: !16866)
!16872 = !DILocation(line: 3843, column: 4, scope: !16866)
!16873 = !DILocation(line: 3844, column: 2, scope: !16816)
!16874 = !DILocation(line: 3816, column: 31, scope: !16813)
!16875 = !DILocation(line: 3816, column: 2, scope: !16813)
!16876 = distinct !{!16876, !16814, !16877}
!16877 = !DILocation(line: 3844, column: 2, scope: !16810)
!16878 = !DILocation(line: 3846, column: 6, scope: !16879)
!16879 = distinct !DILexicalBlock(scope: !16782, file: !209, line: 3846, column: 6)
!16880 = !DILocation(line: 3846, column: 6, scope: !16782)
!16881 = !DILocation(line: 3847, column: 14, scope: !16879)
!16882 = !DILocation(line: 3847, column: 4, scope: !16879)
!16883 = !DILocation(line: 3847, column: 12, scope: !16879)
!16884 = !DILocation(line: 3847, column: 3, scope: !16879)
!16885 = !DILocation(line: 3849, column: 2, scope: !16782)
!16886 = distinct !DISubprogram(name: "ni_set_master_clock", scope: !209, file: !209, line: 5010, type: !4411, scopeLine: 5012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!16887 = !DILocalVariable(name: "dev", arg: 1, scope: !16886, file: !209, line: 5010, type: !3350)
!16888 = !DILocation(line: 5010, column: 54, scope: !16886)
!16889 = !DILocalVariable(name: "source", arg: 2, scope: !16886, file: !209, line: 5011, type: !7)
!16890 = !DILocation(line: 5011, column: 24, scope: !16886)
!16891 = !DILocalVariable(name: "period_ns", arg: 3, scope: !16886, file: !209, line: 5011, type: !7)
!16892 = !DILocation(line: 5011, column: 45, scope: !16886)
!16893 = !DILocalVariable(name: "devpriv", scope: !16886, file: !209, line: 5013, type: !4731)
!16894 = !DILocation(line: 5013, column: 21, scope: !16886)
!16895 = !DILocation(line: 5013, column: 31, scope: !16886)
!16896 = !DILocation(line: 5013, column: 36, scope: !16886)
!16897 = !DILocation(line: 5015, column: 6, scope: !16898)
!16898 = distinct !DILexicalBlock(scope: !16886, file: !209, line: 5015, column: 6)
!16899 = !DILocation(line: 5015, column: 13, scope: !16898)
!16900 = !DILocation(line: 5015, column: 6, scope: !16886)
!16901 = !DILocation(line: 5016, column: 3, scope: !16902)
!16902 = distinct !DILexicalBlock(scope: !16898, file: !209, line: 5015, column: 39)
!16903 = !DILocation(line: 5016, column: 12, scope: !16902)
!16904 = !DILocation(line: 5016, column: 36, scope: !16902)
!16905 = !DILocation(line: 5017, column: 17, scope: !16902)
!16906 = !DILocation(line: 5017, column: 22, scope: !16902)
!16907 = !DILocation(line: 5017, column: 31, scope: !16902)
!16908 = !DILocation(line: 5017, column: 3, scope: !16902)
!16909 = !DILocation(line: 5019, column: 3, scope: !16902)
!16910 = !DILocation(line: 5019, column: 12, scope: !16902)
!16911 = !DILocation(line: 5019, column: 21, scope: !16902)
!16912 = !DILocation(line: 5020, column: 7, scope: !16913)
!16913 = distinct !DILexicalBlock(scope: !16902, file: !209, line: 5020, column: 7)
!16914 = !DILocation(line: 5020, column: 16, scope: !16913)
!16915 = !DILocation(line: 5020, column: 7, scope: !16902)
!16916 = !DILocation(line: 5021, column: 4, scope: !16917)
!16917 = distinct !DILexicalBlock(scope: !16913, file: !209, line: 5020, column: 29)
!16918 = !DILocation(line: 5021, column: 13, scope: !16917)
!16919 = !DILocation(line: 5021, column: 29, scope: !16917)
!16920 = !DILocation(line: 5024, column: 14, scope: !16917)
!16921 = !DILocation(line: 5024, column: 19, scope: !16917)
!16922 = !DILocation(line: 5024, column: 28, scope: !16917)
!16923 = !DILocation(line: 5024, column: 4, scope: !16917)
!16924 = !DILocation(line: 5026, column: 14, scope: !16917)
!16925 = !DILocation(line: 5026, column: 4, scope: !16917)
!16926 = !DILocation(line: 5027, column: 3, scope: !16917)
!16927 = !DILocation(line: 5028, column: 27, scope: !16902)
!16928 = !DILocation(line: 5028, column: 3, scope: !16902)
!16929 = !DILocation(line: 5028, column: 12, scope: !16902)
!16930 = !DILocation(line: 5028, column: 25, scope: !16902)
!16931 = !DILocation(line: 5029, column: 2, scope: !16902)
!16932 = !DILocation(line: 5030, column: 7, scope: !16933)
!16933 = distinct !DILexicalBlock(scope: !16934, file: !209, line: 5030, column: 7)
!16934 = distinct !DILexicalBlock(scope: !16898, file: !209, line: 5029, column: 9)
!16935 = !DILocation(line: 5030, column: 16, scope: !16933)
!16936 = !DILocation(line: 5030, column: 7, scope: !16934)
!16937 = !DILocation(line: 5031, column: 43, scope: !16938)
!16938 = distinct !DILexicalBlock(scope: !16933, file: !209, line: 5030, column: 29)
!16939 = !DILocation(line: 5031, column: 48, scope: !16938)
!16940 = !DILocation(line: 5032, column: 15, scope: !16938)
!16941 = !DILocation(line: 5031, column: 11, scope: !16938)
!16942 = !DILocation(line: 5031, column: 4, scope: !16938)
!16943 = !DILocation(line: 5034, column: 8, scope: !16944)
!16944 = distinct !DILexicalBlock(scope: !16945, file: !209, line: 5034, column: 8)
!16945 = distinct !DILexicalBlock(scope: !16933, file: !209, line: 5033, column: 10)
!16946 = !DILocation(line: 5034, column: 15, scope: !16944)
!16947 = !DILocation(line: 5034, column: 8, scope: !16945)
!16948 = !DILocation(line: 5035, column: 5, scope: !16949)
!16949 = distinct !DILexicalBlock(scope: !16944, file: !209, line: 5034, column: 37)
!16950 = !DILocation(line: 5035, column: 14, scope: !16949)
!16951 = !DILocation(line: 5035, column: 38, scope: !16949)
!16952 = !DILocation(line: 5037, column: 19, scope: !16949)
!16953 = !DILocation(line: 5038, column: 12, scope: !16949)
!16954 = !DILocation(line: 5038, column: 21, scope: !16949)
!16955 = !DILocation(line: 5037, column: 5, scope: !16949)
!16956 = !DILocation(line: 5040, column: 9, scope: !16957)
!16957 = distinct !DILexicalBlock(scope: !16949, file: !209, line: 5040, column: 9)
!16958 = !DILocation(line: 5040, column: 19, scope: !16957)
!16959 = !DILocation(line: 5040, column: 9, scope: !16949)
!16960 = !DILocation(line: 5041, column: 6, scope: !16961)
!16961 = distinct !DILexicalBlock(scope: !16957, file: !209, line: 5040, column: 25)
!16962 = !DILocation(line: 5043, column: 6, scope: !16961)
!16963 = !DILocation(line: 5045, column: 25, scope: !16949)
!16964 = !DILocation(line: 5045, column: 5, scope: !16949)
!16965 = !DILocation(line: 5045, column: 14, scope: !16949)
!16966 = !DILocation(line: 5045, column: 23, scope: !16949)
!16967 = !DILocation(line: 5046, column: 29, scope: !16949)
!16968 = !DILocation(line: 5046, column: 5, scope: !16949)
!16969 = !DILocation(line: 5046, column: 14, scope: !16949)
!16970 = !DILocation(line: 5046, column: 27, scope: !16949)
!16971 = !DILocation(line: 5047, column: 4, scope: !16949)
!16972 = !DILocation(line: 5048, column: 5, scope: !16973)
!16973 = distinct !DILexicalBlock(scope: !16944, file: !209, line: 5047, column: 11)
!16974 = !DILocation(line: 5052, column: 2, scope: !16886)
!16975 = !DILocation(line: 5053, column: 1, scope: !16886)
!16976 = !DILocalVariable(name: "dev", arg: 1, scope: !4410, file: !209, line: 4925, type: !3350)
!16977 = !DILocation(line: 4925, column: 66, scope: !4410)
!16978 = !DILocalVariable(name: "source", arg: 2, scope: !4410, file: !209, line: 4926, type: !7)
!16979 = !DILocation(line: 4926, column: 22, scope: !4410)
!16980 = !DILocalVariable(name: "period_ns", arg: 3, scope: !4410, file: !209, line: 4927, type: !7)
!16981 = !DILocation(line: 4927, column: 22, scope: !4410)
!16982 = !DILocalVariable(name: "devpriv", scope: !4410, file: !209, line: 4929, type: !4731)
!16983 = !DILocation(line: 4929, column: 21, scope: !4410)
!16984 = !DILocation(line: 4929, column: 31, scope: !4410)
!16985 = !DILocation(line: 4929, column: 36, scope: !4410)
!16986 = !DILocalVariable(name: "pll_control_bits", scope: !4410, file: !209, line: 4933, type: !7)
!16987 = !DILocation(line: 4933, column: 15, scope: !4410)
!16988 = !DILocalVariable(name: "freq_divider", scope: !4410, file: !209, line: 4934, type: !7)
!16989 = !DILocation(line: 4934, column: 15, scope: !4410)
!16990 = !DILocalVariable(name: "freq_multiplier", scope: !4410, file: !209, line: 4935, type: !7)
!16991 = !DILocation(line: 4935, column: 15, scope: !4410)
!16992 = !DILocalVariable(name: "rtsi", scope: !4410, file: !209, line: 4936, type: !7)
!16993 = !DILocation(line: 4936, column: 15, scope: !4410)
!16994 = !DILocalVariable(name: "i", scope: !4410, file: !209, line: 4937, type: !7)
!16995 = !DILocation(line: 4937, column: 15, scope: !4410)
!16996 = !DILocalVariable(name: "retval", scope: !4410, file: !209, line: 4938, type: !429)
!16997 = !DILocation(line: 4938, column: 6, scope: !4410)
!16998 = !DILocation(line: 4940, column: 6, scope: !16999)
!16999 = distinct !DILexicalBlock(scope: !4410, file: !209, line: 4940, column: 6)
!17000 = !DILocation(line: 4940, column: 13, scope: !16999)
!17001 = !DILocation(line: 4940, column: 6, scope: !4410)
!17002 = !DILocation(line: 4941, column: 13, scope: !16999)
!17003 = !DILocation(line: 4941, column: 3, scope: !16999)
!17004 = !DILocation(line: 4946, column: 6, scope: !17005)
!17005 = distinct !DILexicalBlock(scope: !4410, file: !209, line: 4946, column: 6)
!17006 = !DILocation(line: 4946, column: 16, scope: !17005)
!17007 = !DILocation(line: 4946, column: 32, scope: !17005)
!17008 = !DILocation(line: 4946, column: 35, scope: !17005)
!17009 = !DILocation(line: 4946, column: 45, scope: !17005)
!17010 = !DILocation(line: 4946, column: 6, scope: !4410)
!17011 = !DILocation(line: 4947, column: 3, scope: !17012)
!17012 = distinct !DILexicalBlock(scope: !17005, file: !209, line: 4946, column: 62)
!17013 = !DILocation(line: 4950, column: 3, scope: !17012)
!17014 = !DILocation(line: 4952, column: 2, scope: !4410)
!17015 = !DILocation(line: 4952, column: 11, scope: !4410)
!17016 = !DILocation(line: 4952, column: 35, scope: !4410)
!17017 = !DILocation(line: 4953, column: 16, scope: !4410)
!17018 = !DILocation(line: 4953, column: 21, scope: !4410)
!17019 = !DILocation(line: 4953, column: 30, scope: !4410)
!17020 = !DILocation(line: 4953, column: 2, scope: !4410)
!17021 = !DILocation(line: 4955, column: 19, scope: !4410)
!17022 = !DILocation(line: 4956, column: 2, scope: !4410)
!17023 = !DILocation(line: 4956, column: 11, scope: !4410)
!17024 = !DILocation(line: 4956, column: 27, scope: !4410)
!17025 = !DILocation(line: 4958, column: 2, scope: !4410)
!17026 = !DILocation(line: 4958, column: 11, scope: !4410)
!17027 = !DILocation(line: 4958, column: 27, scope: !4410)
!17028 = !DILocation(line: 4959, column: 10, scope: !4410)
!17029 = !DILocation(line: 4959, column: 2, scope: !4410)
!17030 = !DILocation(line: 4961, column: 3, scope: !17031)
!17031 = distinct !DILexicalBlock(scope: !4410, file: !209, line: 4959, column: 18)
!17032 = !DILocation(line: 4961, column: 12, scope: !17031)
!17033 = !DILocation(line: 4961, column: 28, scope: !17031)
!17034 = !DILocation(line: 4962, column: 3, scope: !17031)
!17035 = !DILocation(line: 4965, column: 3, scope: !17031)
!17036 = !DILocation(line: 4965, column: 12, scope: !17031)
!17037 = !DILocation(line: 4965, column: 28, scope: !17031)
!17038 = !DILocation(line: 4966, column: 3, scope: !17031)
!17039 = !DILocation(line: 4968, column: 13, scope: !17040)
!17040 = distinct !DILexicalBlock(scope: !17031, file: !209, line: 4968, column: 3)
!17041 = !DILocation(line: 4968, column: 8, scope: !17040)
!17042 = !DILocation(line: 4968, column: 18, scope: !17043)
!17043 = distinct !DILexicalBlock(scope: !17040, file: !209, line: 4968, column: 3)
!17044 = !DILocation(line: 4968, column: 23, scope: !17043)
!17045 = !DILocation(line: 4968, column: 3, scope: !17040)
!17046 = !DILocation(line: 4969, column: 8, scope: !17047)
!17047 = distinct !DILexicalBlock(scope: !17048, file: !209, line: 4969, column: 8)
!17048 = distinct !DILexicalBlock(scope: !17043, file: !209, line: 4968, column: 54)
!17049 = !DILocation(line: 4969, column: 18, scope: !17047)
!17050 = !DILocation(line: 4969, column: 15, scope: !17047)
!17051 = !DILocation(line: 4969, column: 8, scope: !17048)
!17052 = !DILocation(line: 4971, column: 6, scope: !17053)
!17053 = distinct !DILexicalBlock(scope: !17047, file: !209, line: 4969, column: 47)
!17054 = !DILocation(line: 4970, column: 5, scope: !17053)
!17055 = !DILocation(line: 4970, column: 14, scope: !17053)
!17056 = !DILocation(line: 4970, column: 30, scope: !17053)
!17057 = !DILocation(line: 4972, column: 5, scope: !17053)
!17058 = !DILocation(line: 4974, column: 3, scope: !17048)
!17059 = !DILocation(line: 4968, column: 46, scope: !17043)
!17060 = !DILocation(line: 4968, column: 3, scope: !17043)
!17061 = distinct !{!17061, !17045, !17062}
!17062 = !DILocation(line: 4974, column: 3, scope: !17040)
!17063 = !DILocation(line: 4975, column: 7, scope: !17064)
!17064 = distinct !DILexicalBlock(scope: !17031, file: !209, line: 4975, column: 7)
!17065 = !DILocation(line: 4975, column: 12, scope: !17064)
!17066 = !DILocation(line: 4975, column: 7, scope: !17031)
!17067 = !DILocation(line: 4976, column: 4, scope: !17064)
!17068 = !DILocation(line: 4977, column: 3, scope: !17031)
!17069 = !DILocation(line: 4979, column: 41, scope: !4410)
!17070 = !DILocation(line: 4982, column: 14, scope: !4410)
!17071 = !DILocation(line: 4982, column: 23, scope: !4410)
!17072 = !DILocation(line: 4979, column: 11, scope: !4410)
!17073 = !DILocation(line: 4979, column: 9, scope: !4410)
!17074 = !DILocation(line: 4983, column: 6, scope: !17075)
!17075 = distinct !DILexicalBlock(scope: !4410, file: !209, line: 4983, column: 6)
!17076 = !DILocation(line: 4983, column: 13, scope: !17075)
!17077 = !DILocation(line: 4983, column: 6, scope: !4410)
!17078 = !DILocation(line: 4984, column: 3, scope: !17079)
!17079 = distinct !DILexicalBlock(scope: !17075, file: !209, line: 4983, column: 18)
!17080 = !DILocation(line: 4986, column: 10, scope: !17079)
!17081 = !DILocation(line: 4986, column: 3, scope: !17079)
!17082 = !DILocation(line: 4989, column: 12, scope: !4410)
!17083 = !DILocation(line: 4989, column: 17, scope: !4410)
!17084 = !DILocation(line: 4989, column: 26, scope: !4410)
!17085 = !DILocation(line: 4989, column: 2, scope: !4410)
!17086 = !DILocation(line: 4990, column: 22, scope: !4410)
!17087 = !DILocation(line: 4991, column: 8, scope: !4410)
!17088 = !DILocation(line: 4990, column: 58, scope: !4410)
!17089 = !DILocation(line: 4990, column: 19, scope: !4410)
!17090 = !DILocation(line: 4993, column: 12, scope: !4410)
!17091 = !DILocation(line: 4993, column: 17, scope: !4410)
!17092 = !DILocation(line: 4993, column: 2, scope: !4410)
!17093 = !DILocation(line: 4994, column: 26, scope: !4410)
!17094 = !DILocation(line: 4994, column: 2, scope: !4410)
!17095 = !DILocation(line: 4994, column: 11, scope: !4410)
!17096 = !DILocation(line: 4994, column: 24, scope: !4410)
!17097 = !DILocation(line: 4996, column: 9, scope: !17098)
!17098 = distinct !DILexicalBlock(scope: !4410, file: !209, line: 4996, column: 2)
!17099 = !DILocation(line: 4996, column: 7, scope: !17098)
!17100 = !DILocation(line: 4996, column: 14, scope: !17101)
!17101 = distinct !DILexicalBlock(scope: !17098, file: !209, line: 4996, column: 2)
!17102 = !DILocation(line: 4996, column: 16, scope: !17101)
!17103 = !DILocation(line: 4996, column: 2, scope: !17098)
!17104 = !DILocation(line: 4997, column: 16, scope: !17105)
!17105 = distinct !DILexicalBlock(scope: !17106, file: !209, line: 4997, column: 7)
!17106 = distinct !DILexicalBlock(scope: !17101, file: !209, line: 4996, column: 32)
!17107 = !DILocation(line: 4997, column: 7, scope: !17105)
!17108 = !DILocation(line: 4997, column: 42, scope: !17105)
!17109 = !DILocation(line: 4997, column: 7, scope: !17106)
!17110 = !DILocation(line: 4998, column: 4, scope: !17105)
!17111 = !DILocation(line: 4999, column: 3, scope: !17112)
!17112 = distinct !DILexicalBlock(scope: !17113, file: !209, line: 4999, column: 3)
!17113 = distinct !DILexicalBlock(scope: !17114, file: !209, line: 4999, column: 3)
!17114 = distinct !DILexicalBlock(scope: !17115, file: !209, line: 4999, column: 3)
!17115 = distinct !DILexicalBlock(scope: !17106, file: !209, line: 4999, column: 3)
!17116 = !DILocation(line: 5000, column: 2, scope: !17106)
!17117 = !DILocation(line: 4996, column: 27, scope: !17101)
!17118 = !DILocation(line: 4996, column: 2, scope: !17101)
!17119 = distinct !{!17119, !17103, !17120}
!17120 = !DILocation(line: 5000, column: 2, scope: !17098)
!17121 = !DILocation(line: 5001, column: 6, scope: !17122)
!17122 = distinct !DILexicalBlock(scope: !4410, file: !209, line: 5001, column: 6)
!17123 = !DILocation(line: 5001, column: 8, scope: !17122)
!17124 = !DILocation(line: 5001, column: 6, scope: !4410)
!17125 = !DILocation(line: 5002, column: 3, scope: !17126)
!17126 = distinct !DILexicalBlock(scope: !17122, file: !209, line: 5001, column: 20)
!17127 = !DILocation(line: 5005, column: 3, scope: !17126)
!17128 = !DILocation(line: 5007, column: 2, scope: !4410)
!17129 = !DILocation(line: 5008, column: 1, scope: !4410)
!17130 = !DILocalVariable(name: "reference_period_ns", arg: 1, scope: !4419, file: !209, line: 4883, type: !7)
!17131 = !DILocation(line: 4883, column: 55, scope: !4419)
!17132 = !DILocalVariable(name: "freq_divider", arg: 2, scope: !4419, file: !209, line: 4884, type: !1365)
!17133 = !DILocation(line: 4884, column: 21, scope: !4419)
!17134 = !DILocalVariable(name: "freq_multiplier", arg: 3, scope: !4419, file: !209, line: 4885, type: !1365)
!17135 = !DILocation(line: 4885, column: 21, scope: !4419)
!17136 = !DILocalVariable(name: "actual_period_ns", arg: 4, scope: !4419, file: !209, line: 4886, type: !1365)
!17137 = !DILocation(line: 4886, column: 21, scope: !4419)
!17138 = !DILocalVariable(name: "div", scope: !4419, file: !209, line: 4888, type: !7)
!17139 = !DILocation(line: 4888, column: 15, scope: !4419)
!17140 = !DILocalVariable(name: "best_div", scope: !4419, file: !209, line: 4889, type: !7)
!17141 = !DILocation(line: 4889, column: 15, scope: !4419)
!17142 = !DILocalVariable(name: "mult", scope: !4419, file: !209, line: 4890, type: !7)
!17143 = !DILocation(line: 4890, column: 15, scope: !4419)
!17144 = !DILocalVariable(name: "best_mult", scope: !4419, file: !209, line: 4891, type: !7)
!17145 = !DILocation(line: 4891, column: 15, scope: !4419)
!17146 = !DILocalVariable(name: "reference_picosec", scope: !4419, file: !209, line: 4893, type: !2125)
!17147 = !DILocation(line: 4893, column: 21, scope: !4419)
!17148 = !DILocation(line: 4893, column: 41, scope: !4419)
!17149 = !DILocation(line: 4893, column: 61, scope: !4419)
!17150 = !DILocalVariable(name: "best_period_picosec", scope: !4419, file: !209, line: 4900, type: !429)
!17151 = !DILocation(line: 4900, column: 6, scope: !4419)
!17152 = !DILocation(line: 4902, column: 11, scope: !17153)
!17153 = distinct !DILexicalBlock(scope: !4419, file: !209, line: 4902, column: 2)
!17154 = !DILocation(line: 4902, column: 7, scope: !17153)
!17155 = !DILocation(line: 4902, column: 16, scope: !17156)
!17156 = distinct !DILexicalBlock(scope: !17153, file: !209, line: 4902, column: 2)
!17157 = !DILocation(line: 4902, column: 20, scope: !17156)
!17158 = !DILocation(line: 4902, column: 2, scope: !17153)
!17159 = !DILocation(line: 4903, column: 13, scope: !17160)
!17160 = distinct !DILexicalBlock(scope: !17161, file: !209, line: 4903, column: 3)
!17161 = distinct !DILexicalBlock(scope: !17156, file: !209, line: 4902, column: 52)
!17162 = !DILocation(line: 4903, column: 8, scope: !17160)
!17163 = !DILocation(line: 4903, column: 18, scope: !17164)
!17164 = distinct !DILexicalBlock(scope: !17160, file: !209, line: 4903, column: 3)
!17165 = !DILocation(line: 4903, column: 23, scope: !17164)
!17166 = !DILocation(line: 4903, column: 3, scope: !17160)
!17167 = !DILocalVariable(name: "new_period_ps", scope: !17168, file: !209, line: 4904, type: !7)
!17168 = distinct !DILexicalBlock(scope: !17164, file: !209, line: 4903, column: 59)
!17169 = !DILocation(line: 4904, column: 17, scope: !17168)
!17170 = !DILocation(line: 4905, column: 9, scope: !17168)
!17171 = !DILocation(line: 4905, column: 29, scope: !17168)
!17172 = !DILocation(line: 4905, column: 27, scope: !17168)
!17173 = !DILocation(line: 4905, column: 36, scope: !17168)
!17174 = !DILocation(line: 4905, column: 34, scope: !17168)
!17175 = !DILocalVariable(name: "__x", scope: !17176, file: !209, line: 4906, type: !429)
!17176 = distinct !DILexicalBlock(scope: !17177, file: !209, line: 4906, column: 8)
!17177 = distinct !DILexicalBlock(scope: !17168, file: !209, line: 4906, column: 8)
!17178 = !DILocation(line: 4906, column: 8, scope: !17176)
!17179 = !DILocalVariable(name: "__x", scope: !17180, file: !209, line: 4907, type: !429)
!17180 = distinct !DILexicalBlock(scope: !17177, file: !209, line: 4907, column: 8)
!17181 = !DILocation(line: 4907, column: 8, scope: !17180)
!17182 = !DILocation(line: 4906, column: 44, scope: !17177)
!17183 = !DILocation(line: 4906, column: 8, scope: !17168)
!17184 = !DILocation(line: 4908, column: 27, scope: !17185)
!17185 = distinct !DILexicalBlock(scope: !17177, file: !209, line: 4907, column: 51)
!17186 = !DILocation(line: 4908, column: 25, scope: !17185)
!17187 = !DILocation(line: 4909, column: 16, scope: !17185)
!17188 = !DILocation(line: 4909, column: 14, scope: !17185)
!17189 = !DILocation(line: 4910, column: 17, scope: !17185)
!17190 = !DILocation(line: 4910, column: 15, scope: !17185)
!17191 = !DILocation(line: 4911, column: 4, scope: !17185)
!17192 = !DILocation(line: 4912, column: 3, scope: !17168)
!17193 = !DILocation(line: 4903, column: 51, scope: !17164)
!17194 = !DILocation(line: 4903, column: 3, scope: !17164)
!17195 = distinct !{!17195, !17166, !17196}
!17196 = !DILocation(line: 4912, column: 3, scope: !17160)
!17197 = !DILocation(line: 4913, column: 2, scope: !17161)
!17198 = !DILocation(line: 4902, column: 45, scope: !17156)
!17199 = !DILocation(line: 4902, column: 2, scope: !17156)
!17200 = distinct !{!17200, !17158, !17201}
!17201 = !DILocation(line: 4913, column: 2, scope: !17153)
!17202 = !DILocation(line: 4914, column: 6, scope: !17203)
!17203 = distinct !DILexicalBlock(scope: !4419, file: !209, line: 4914, column: 6)
!17204 = !DILocation(line: 4914, column: 26, scope: !17203)
!17205 = !DILocation(line: 4914, column: 6, scope: !4419)
!17206 = !DILocation(line: 4915, column: 3, scope: !17203)
!17207 = !DILocation(line: 4917, column: 18, scope: !4419)
!17208 = !DILocation(line: 4917, column: 3, scope: !4419)
!17209 = !DILocation(line: 4917, column: 16, scope: !4419)
!17210 = !DILocation(line: 4918, column: 21, scope: !4419)
!17211 = !DILocation(line: 4918, column: 3, scope: !4419)
!17212 = !DILocation(line: 4918, column: 19, scope: !4419)
!17213 = !DILocalVariable(name: "__x", scope: !17214, file: !209, line: 4920, type: !429)
!17214 = distinct !DILexicalBlock(scope: !4419, file: !209, line: 4920, column: 22)
!17215 = !DILocation(line: 4920, column: 22, scope: !17214)
!17216 = !DILocalVariable(name: "__d", scope: !17214, file: !209, line: 4920, type: !2125)
!17217 = !DILocation(line: 4920, column: 3, scope: !4419)
!17218 = !DILocation(line: 4920, column: 20, scope: !4419)
!17219 = !DILocation(line: 4922, column: 2, scope: !4419)
!17220 = !DILocation(line: 4923, column: 1, scope: !4419)
!17221 = distinct !DISubprogram(name: "ni_gpct_to_stc_register", scope: !209, file: !209, line: 3995, type: !17222, scopeLine: 3997, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!17222 = !DISubroutineType(types: !17223)
!17223 = !{!7, !3350, !100}
!17224 = !DILocalVariable(name: "dev", arg: 1, scope: !17221, file: !209, line: 3995, type: !3350)
!17225 = !DILocation(line: 3995, column: 67, scope: !17221)
!17226 = !DILocalVariable(name: "reg", arg: 2, scope: !17221, file: !209, line: 3996, type: !100)
!17227 = !DILocation(line: 3996, column: 32, scope: !17221)
!17228 = !DILocalVariable(name: "regmap", scope: !17221, file: !209, line: 3998, type: !6806)
!17229 = !DILocation(line: 3998, column: 27, scope: !17221)
!17230 = !DILocation(line: 4000, column: 6, scope: !17231)
!17231 = distinct !DILexicalBlock(scope: !17221, file: !209, line: 4000, column: 6)
!17232 = !DILocation(line: 4000, column: 10, scope: !17231)
!17233 = !DILocation(line: 4000, column: 6, scope: !17221)
!17234 = !DILocation(line: 4001, column: 35, scope: !17235)
!17235 = distinct !DILexicalBlock(scope: !17231, file: !209, line: 4000, column: 47)
!17236 = !DILocation(line: 4001, column: 13, scope: !17235)
!17237 = !DILocation(line: 4001, column: 10, scope: !17235)
!17238 = !DILocation(line: 4002, column: 2, scope: !17235)
!17239 = !DILocation(line: 4003, column: 3, scope: !17240)
!17240 = distinct !DILexicalBlock(scope: !17231, file: !209, line: 4002, column: 9)
!17241 = !DILocation(line: 4005, column: 3, scope: !17240)
!17242 = !DILocation(line: 4008, column: 9, scope: !17221)
!17243 = !DILocation(line: 4008, column: 17, scope: !17221)
!17244 = !DILocation(line: 4008, column: 2, scope: !17221)
!17245 = !DILocation(line: 4009, column: 1, scope: !17221)
!17246 = distinct !DISubprogram(name: "ni_stc_readl", scope: !209, file: !209, line: 492, type: !6600, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!17247 = !DILocalVariable(name: "dev", arg: 1, scope: !17246, file: !209, line: 492, type: !3350)
!17248 = !DILocation(line: 492, column: 56, scope: !17246)
!17249 = !DILocalVariable(name: "reg", arg: 2, scope: !17246, file: !209, line: 492, type: !429)
!17250 = !DILocation(line: 492, column: 65, scope: !17246)
!17251 = !DILocalVariable(name: "devpriv", scope: !17246, file: !209, line: 494, type: !4731)
!17252 = !DILocation(line: 494, column: 21, scope: !17246)
!17253 = !DILocation(line: 494, column: 31, scope: !17246)
!17254 = !DILocation(line: 494, column: 36, scope: !17246)
!17255 = !DILocalVariable(name: "val", scope: !17246, file: !209, line: 495, type: !7)
!17256 = !DILocation(line: 495, column: 15, scope: !17246)
!17257 = !DILocation(line: 497, column: 6, scope: !17258)
!17258 = distinct !DILexicalBlock(scope: !17246, file: !209, line: 497, column: 6)
!17259 = !DILocation(line: 497, column: 15, scope: !17258)
!17260 = !DILocation(line: 497, column: 6, scope: !17246)
!17261 = !DILocation(line: 498, column: 27, scope: !17262)
!17262 = distinct !DILexicalBlock(scope: !17258, file: !209, line: 497, column: 28)
!17263 = !DILocation(line: 498, column: 32, scope: !17262)
!17264 = !DILocation(line: 498, column: 9, scope: !17262)
!17265 = !DILocation(line: 498, column: 7, scope: !17262)
!17266 = !DILocation(line: 499, column: 2, scope: !17262)
!17267 = !DILocation(line: 500, column: 22, scope: !17268)
!17268 = distinct !DILexicalBlock(scope: !17258, file: !209, line: 499, column: 9)
!17269 = !DILocation(line: 500, column: 27, scope: !17268)
!17270 = !DILocation(line: 500, column: 9, scope: !17268)
!17271 = !DILocation(line: 500, column: 32, scope: !17268)
!17272 = !DILocation(line: 500, column: 7, scope: !17268)
!17273 = !DILocation(line: 501, column: 23, scope: !17268)
!17274 = !DILocation(line: 501, column: 28, scope: !17268)
!17275 = !DILocation(line: 501, column: 32, scope: !17268)
!17276 = !DILocation(line: 501, column: 10, scope: !17268)
!17277 = !DILocation(line: 501, column: 7, scope: !17268)
!17278 = !DILocation(line: 503, column: 9, scope: !17246)
!17279 = !DILocation(line: 503, column: 2, scope: !17246)
!17280 = distinct !DISubprogram(name: "ni_request_gpct_mite_channel", scope: !209, file: !209, line: 613, type: !17281, scopeLine: 616, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!17281 = !DISubroutineType(types: !17282)
!17282 = !{!429, !3350, !7, !265}
!17283 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !17284)
!17284 = distinct !DILocation(line: 627, column: 3, scope: !17285)
!17285 = distinct !DILexicalBlock(scope: !17286, file: !209, line: 626, column: 18)
!17286 = distinct !DILexicalBlock(scope: !17280, file: !209, line: 626, column: 6)
!17287 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !17284)
!17288 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !17289)
!17289 = distinct !DILocation(line: 640, column: 2, scope: !17280)
!17290 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !17289)
!17291 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !17292)
!17292 = distinct !DILocation(line: 623, column: 2, scope: !17293)
!17293 = distinct !DILexicalBlock(scope: !17294, file: !209, line: 623, column: 2)
!17294 = distinct !DILexicalBlock(scope: !17295, file: !209, line: 623, column: 2)
!17295 = distinct !DILexicalBlock(scope: !17296, file: !209, line: 623, column: 2)
!17296 = distinct !DILexicalBlock(scope: !17297, file: !209, line: 623, column: 2)
!17297 = distinct !DILexicalBlock(scope: !17280, file: !209, line: 623, column: 2)
!17298 = !DILocalVariable(name: "dev", arg: 1, scope: !17280, file: !209, line: 613, type: !3350)
!17299 = !DILocation(line: 613, column: 63, scope: !17280)
!17300 = !DILocalVariable(name: "gpct_index", arg: 2, scope: !17280, file: !209, line: 614, type: !7)
!17301 = !DILocation(line: 614, column: 19, scope: !17280)
!17302 = !DILocalVariable(name: "direction", arg: 3, scope: !17280, file: !209, line: 615, type: !265)
!17303 = !DILocation(line: 615, column: 31, scope: !17280)
!17304 = !DILocalVariable(name: "devpriv", scope: !17280, file: !209, line: 617, type: !4731)
!17305 = !DILocation(line: 617, column: 21, scope: !17280)
!17306 = !DILocation(line: 617, column: 31, scope: !17280)
!17307 = !DILocation(line: 617, column: 36, scope: !17280)
!17308 = !DILocalVariable(name: "counter", scope: !17280, file: !209, line: 618, type: !4767)
!17309 = !DILocation(line: 618, column: 18, scope: !17280)
!17310 = !DILocation(line: 618, column: 29, scope: !17280)
!17311 = !DILocation(line: 618, column: 38, scope: !17280)
!17312 = !DILocation(line: 618, column: 51, scope: !17280)
!17313 = !DILocation(line: 618, column: 60, scope: !17280)
!17314 = !DILocalVariable(name: "mite_chan", scope: !17280, file: !209, line: 619, type: !4775)
!17315 = !DILocation(line: 619, column: 23, scope: !17280)
!17316 = !DILocalVariable(name: "flags", scope: !17280, file: !209, line: 620, type: !435)
!17317 = !DILocation(line: 620, column: 16, scope: !17280)
!17318 = !DILocalVariable(name: "bits", scope: !17280, file: !209, line: 621, type: !7)
!17319 = !DILocation(line: 621, column: 15, scope: !17280)
!17320 = !DILocation(line: 623, column: 2, scope: !17280)
!17321 = !DILocation(line: 623, column: 2, scope: !17297)
!17322 = !DILocalVariable(name: "__dummy", scope: !17323, file: !209, line: 623, type: !435)
!17323 = distinct !DILexicalBlock(scope: !17296, file: !209, line: 623, column: 2)
!17324 = !DILocation(line: 623, column: 2, scope: !17323)
!17325 = !DILocalVariable(name: "__dummy2", scope: !17323, file: !209, line: 623, type: !435)
!17326 = !DILocation(line: 623, column: 2, scope: !17296)
!17327 = !DILocation(line: 623, column: 2, scope: !17295)
!17328 = !DILocation(line: 623, column: 2, scope: !17329)
!17329 = distinct !DILexicalBlock(scope: !17295, file: !209, line: 623, column: 2)
!17330 = !DILocalVariable(name: "__dummy", scope: !17331, file: !209, line: 623, type: !435)
!17331 = distinct !DILexicalBlock(scope: !17332, file: !209, line: 623, column: 2)
!17332 = distinct !DILexicalBlock(scope: !17329, file: !209, line: 623, column: 2)
!17333 = !DILocation(line: 623, column: 2, scope: !17331)
!17334 = !DILocalVariable(name: "__dummy2", scope: !17331, file: !209, line: 623, type: !435)
!17335 = !DILocation(line: 623, column: 2, scope: !17332)
!17336 = !DILocation(line: 623, column: 2, scope: !17294)
!17337 = !{i32 -2141348927}
!17338 = !DILocation(line: 623, column: 2, scope: !17293)
!17339 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !17292)
!17340 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !17292)
!17341 = !DILocation(line: 624, column: 35, scope: !17280)
!17342 = !DILocation(line: 624, column: 44, scope: !17280)
!17343 = !DILocation(line: 625, column: 7, scope: !17280)
!17344 = !DILocation(line: 625, column: 16, scope: !17280)
!17345 = !DILocation(line: 625, column: 31, scope: !17280)
!17346 = !DILocation(line: 624, column: 14, scope: !17280)
!17347 = !DILocation(line: 624, column: 12, scope: !17280)
!17348 = !DILocation(line: 626, column: 7, scope: !17286)
!17349 = !DILocation(line: 626, column: 6, scope: !17280)
!17350 = !DILocation(line: 627, column: 27, scope: !17285)
!17351 = !DILocation(line: 627, column: 36, scope: !17285)
!17352 = !DILocation(line: 627, column: 55, scope: !17285)
!17353 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !17284)
!17354 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !17284)
!17355 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !17284)
!17356 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !17284)
!17357 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !17284)
!17358 = !DILocation(line: 628, column: 3, scope: !17285)
!17359 = !DILocation(line: 630, column: 3, scope: !17285)
!17360 = !DILocation(line: 632, column: 19, scope: !17280)
!17361 = !DILocation(line: 632, column: 2, scope: !17280)
!17362 = !DILocation(line: 632, column: 13, scope: !17280)
!17363 = !DILocation(line: 632, column: 17, scope: !17280)
!17364 = !DILocation(line: 633, column: 26, scope: !17280)
!17365 = !DILocation(line: 633, column: 35, scope: !17280)
!17366 = !DILocation(line: 633, column: 2, scope: !17280)
!17367 = !DILocation(line: 635, column: 9, scope: !17280)
!17368 = !DILocation(line: 635, column: 7, scope: !17280)
!17369 = !DILocation(line: 636, column: 18, scope: !17280)
!17370 = !DILocation(line: 637, column: 4, scope: !17280)
!17371 = !DILocation(line: 638, column: 4, scope: !17280)
!17372 = !DILocation(line: 636, column: 2, scope: !17280)
!17373 = !DILocation(line: 640, column: 26, scope: !17280)
!17374 = !DILocation(line: 640, column: 35, scope: !17280)
!17375 = !DILocation(line: 640, column: 54, scope: !17280)
!17376 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !17289)
!17377 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !17289)
!17378 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !17289)
!17379 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !17289)
!17380 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !17289)
!17381 = !DILocation(line: 641, column: 2, scope: !17280)
!17382 = !DILocation(line: 642, column: 1, scope: !17280)
!17383 = distinct !DISubprogram(name: "ni_e_series_enable_second_irq", scope: !209, file: !209, line: 749, type: !17384, scopeLine: 751, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!17384 = !DISubroutineType(types: !17385)
!17385 = !{null, !3350, !7, !1931}
!17386 = !DILocalVariable(name: "dev", arg: 1, scope: !17383, file: !209, line: 749, type: !3350)
!17387 = !DILocation(line: 749, column: 65, scope: !17383)
!17388 = !DILocalVariable(name: "gpct_index", arg: 2, scope: !17383, file: !209, line: 750, type: !7)
!17389 = !DILocation(line: 750, column: 21, scope: !17383)
!17390 = !DILocalVariable(name: "enable", arg: 3, scope: !17383, file: !209, line: 750, type: !1931)
!17391 = !DILocation(line: 750, column: 39, scope: !17383)
!17392 = !DILocalVariable(name: "devpriv", scope: !17383, file: !209, line: 752, type: !4731)
!17393 = !DILocation(line: 752, column: 21, scope: !17383)
!17394 = !DILocation(line: 752, column: 31, scope: !17383)
!17395 = !DILocation(line: 752, column: 36, scope: !17383)
!17396 = !DILocalVariable(name: "val", scope: !17383, file: !209, line: 753, type: !7)
!17397 = !DILocation(line: 753, column: 15, scope: !17383)
!17398 = !DILocalVariable(name: "reg", scope: !17383, file: !209, line: 754, type: !429)
!17399 = !DILocation(line: 754, column: 6, scope: !17383)
!17400 = !DILocation(line: 756, column: 6, scope: !17401)
!17401 = distinct !DILexicalBlock(scope: !17383, file: !209, line: 756, column: 6)
!17402 = !DILocation(line: 756, column: 15, scope: !17401)
!17403 = !DILocation(line: 756, column: 27, scope: !17401)
!17404 = !DILocation(line: 756, column: 30, scope: !17401)
!17405 = !DILocation(line: 756, column: 41, scope: !17401)
!17406 = !DILocation(line: 756, column: 6, scope: !17383)
!17407 = !DILocation(line: 757, column: 3, scope: !17401)
!17408 = !DILocation(line: 763, column: 6, scope: !17409)
!17409 = distinct !DILexicalBlock(scope: !17383, file: !209, line: 763, column: 6)
!17410 = !DILocation(line: 763, column: 17, scope: !17409)
!17411 = !DILocation(line: 763, column: 6, scope: !17383)
!17412 = !DILocation(line: 764, column: 7, scope: !17413)
!17413 = distinct !DILexicalBlock(scope: !17409, file: !209, line: 763, column: 23)
!17414 = !DILocation(line: 765, column: 7, scope: !17415)
!17415 = distinct !DILexicalBlock(scope: !17413, file: !209, line: 765, column: 7)
!17416 = !DILocation(line: 765, column: 7, scope: !17413)
!17417 = !DILocation(line: 766, column: 8, scope: !17415)
!17418 = !DILocation(line: 766, column: 4, scope: !17415)
!17419 = !DILocation(line: 767, column: 2, scope: !17413)
!17420 = !DILocation(line: 768, column: 7, scope: !17421)
!17421 = distinct !DILexicalBlock(scope: !17409, file: !209, line: 767, column: 9)
!17422 = !DILocation(line: 769, column: 7, scope: !17423)
!17423 = distinct !DILexicalBlock(scope: !17421, file: !209, line: 769, column: 7)
!17424 = !DILocation(line: 769, column: 7, scope: !17421)
!17425 = !DILocation(line: 770, column: 8, scope: !17423)
!17426 = !DILocation(line: 770, column: 4, scope: !17423)
!17427 = !DILocation(line: 772, column: 16, scope: !17383)
!17428 = !DILocation(line: 772, column: 21, scope: !17383)
!17429 = !DILocation(line: 772, column: 26, scope: !17383)
!17430 = !DILocation(line: 772, column: 2, scope: !17383)
!17431 = !DILocation(line: 773, column: 1, scope: !17383)
!17432 = distinct !DISubprogram(name: "ni_release_gpct_mite_channel", scope: !209, file: !209, line: 713, type: !17433, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!17433 = !DISubroutineType(types: !17434)
!17434 = !{null, !3350, !7}
!17435 = !DILocation(line: 407, column: 64, scope: !5433, inlinedAt: !17436)
!17436 = distinct !DILocation(line: 731, column: 2, scope: !17432)
!17437 = !DILocation(line: 407, column: 84, scope: !5433, inlinedAt: !17436)
!17438 = !DILocation(line: 327, column: 67, scope: !5233, inlinedAt: !17439)
!17439 = distinct !DILocation(line: 719, column: 2, scope: !17440)
!17440 = distinct !DILexicalBlock(scope: !17441, file: !209, line: 719, column: 2)
!17441 = distinct !DILexicalBlock(scope: !17442, file: !209, line: 719, column: 2)
!17442 = distinct !DILexicalBlock(scope: !17443, file: !209, line: 719, column: 2)
!17443 = distinct !DILexicalBlock(scope: !17444, file: !209, line: 719, column: 2)
!17444 = distinct !DILexicalBlock(scope: !17432, file: !209, line: 719, column: 2)
!17445 = !DILocalVariable(name: "dev", arg: 1, scope: !17432, file: !209, line: 713, type: !3350)
!17446 = !DILocation(line: 713, column: 64, scope: !17432)
!17447 = !DILocalVariable(name: "gpct_index", arg: 2, scope: !17432, file: !209, line: 714, type: !7)
!17448 = !DILocation(line: 714, column: 20, scope: !17432)
!17449 = !DILocalVariable(name: "devpriv", scope: !17432, file: !209, line: 716, type: !4731)
!17450 = !DILocation(line: 716, column: 21, scope: !17432)
!17451 = !DILocation(line: 716, column: 31, scope: !17432)
!17452 = !DILocation(line: 716, column: 36, scope: !17432)
!17453 = !DILocalVariable(name: "flags", scope: !17432, file: !209, line: 717, type: !435)
!17454 = !DILocation(line: 717, column: 16, scope: !17432)
!17455 = !DILocation(line: 719, column: 2, scope: !17432)
!17456 = !DILocation(line: 719, column: 2, scope: !17444)
!17457 = !DILocalVariable(name: "__dummy", scope: !17458, file: !209, line: 719, type: !435)
!17458 = distinct !DILexicalBlock(scope: !17443, file: !209, line: 719, column: 2)
!17459 = !DILocation(line: 719, column: 2, scope: !17458)
!17460 = !DILocalVariable(name: "__dummy2", scope: !17458, file: !209, line: 719, type: !435)
!17461 = !DILocation(line: 719, column: 2, scope: !17443)
!17462 = !DILocation(line: 719, column: 2, scope: !17442)
!17463 = !DILocation(line: 719, column: 2, scope: !17464)
!17464 = distinct !DILexicalBlock(scope: !17442, file: !209, line: 719, column: 2)
!17465 = !DILocalVariable(name: "__dummy", scope: !17466, file: !209, line: 719, type: !435)
!17466 = distinct !DILexicalBlock(scope: !17467, file: !209, line: 719, column: 2)
!17467 = distinct !DILexicalBlock(scope: !17464, file: !209, line: 719, column: 2)
!17468 = !DILocation(line: 719, column: 2, scope: !17466)
!17469 = !DILocalVariable(name: "__dummy2", scope: !17466, file: !209, line: 719, type: !435)
!17470 = !DILocation(line: 719, column: 2, scope: !17467)
!17471 = !DILocation(line: 719, column: 2, scope: !17441)
!17472 = !{i32 -2141343198}
!17473 = !DILocation(line: 719, column: 2, scope: !17440)
!17474 = !DILocation(line: 329, column: 10, scope: !5233, inlinedAt: !17439)
!17475 = !DILocation(line: 329, column: 16, scope: !5233, inlinedAt: !17439)
!17476 = !DILocation(line: 720, column: 6, scope: !17477)
!17477 = distinct !DILexicalBlock(scope: !17432, file: !209, line: 720, column: 6)
!17478 = !DILocation(line: 720, column: 15, scope: !17477)
!17479 = !DILocation(line: 720, column: 28, scope: !17477)
!17480 = !DILocation(line: 720, column: 37, scope: !17477)
!17481 = !DILocation(line: 720, column: 49, scope: !17477)
!17482 = !DILocation(line: 720, column: 6, scope: !17432)
!17483 = !DILocalVariable(name: "mite_chan", scope: !17484, file: !209, line: 721, type: !4775)
!17484 = distinct !DILexicalBlock(scope: !17477, file: !209, line: 720, column: 60)
!17485 = !DILocation(line: 721, column: 24, scope: !17484)
!17486 = !DILocation(line: 722, column: 7, scope: !17484)
!17487 = !DILocation(line: 722, column: 16, scope: !17484)
!17488 = !DILocation(line: 722, column: 29, scope: !17484)
!17489 = !DILocation(line: 722, column: 38, scope: !17484)
!17490 = !DILocation(line: 722, column: 50, scope: !17484)
!17491 = !DILocation(line: 724, column: 19, scope: !17484)
!17492 = !DILocation(line: 725, column: 5, scope: !17484)
!17493 = !DILocation(line: 724, column: 3, scope: !17484)
!17494 = !DILocation(line: 726, column: 28, scope: !17484)
!17495 = !DILocation(line: 727, column: 6, scope: !17484)
!17496 = !DILocation(line: 727, column: 19, scope: !17484)
!17497 = !DILocation(line: 727, column: 28, scope: !17484)
!17498 = !DILocation(line: 726, column: 3, scope: !17484)
!17499 = !DILocation(line: 729, column: 24, scope: !17484)
!17500 = !DILocation(line: 729, column: 3, scope: !17484)
!17501 = !DILocation(line: 730, column: 2, scope: !17484)
!17502 = !DILocation(line: 731, column: 26, scope: !17432)
!17503 = !DILocation(line: 731, column: 35, scope: !17432)
!17504 = !DILocation(line: 731, column: 54, scope: !17432)
!17505 = !DILocation(line: 409, column: 2, scope: !5568, inlinedAt: !17436)
!17506 = !DILocation(line: 409, column: 2, scope: !5573, inlinedAt: !17436)
!17507 = !DILocation(line: 409, column: 2, scope: !5574, inlinedAt: !17436)
!17508 = !DILocation(line: 409, column: 2, scope: !5581, inlinedAt: !17436)
!17509 = !DILocation(line: 409, column: 2, scope: !5584, inlinedAt: !17436)
!17510 = !DILocation(line: 732, column: 1, scope: !17432)
!17511 = distinct !DISubprogram(name: "ni_pcimio_pci_probe", scope: !3, file: !3, line: 1391, type: !4450, scopeLine: 1393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !519)
!17512 = !DILocalVariable(name: "dev", arg: 1, scope: !17511, file: !3, line: 1391, type: !4452)
!17513 = !DILocation(line: 1391, column: 48, scope: !17511)
!17514 = !DILocalVariable(name: "id", arg: 2, scope: !17511, file: !3, line: 1392, type: !4437)
!17515 = !DILocation(line: 1392, column: 39, scope: !17511)
!17516 = !DILocation(line: 1394, column: 32, scope: !17511)
!17517 = !DILocation(line: 1394, column: 56, scope: !17511)
!17518 = !DILocation(line: 1394, column: 60, scope: !17511)
!17519 = !DILocation(line: 1394, column: 9, scope: !17511)
!17520 = !DILocation(line: 1394, column: 2, scope: !17511)
