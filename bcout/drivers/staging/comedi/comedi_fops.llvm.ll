; ModuleID = '../bcout/drivers/staging/comedi/comedi_fops.llvm.bc'
source_filename = "drivers/staging/comedi/comedi_fops.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_comedi_init6:\09\09\09"
module asm ".long\09comedi_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.spinlock = type { %union.anon.4 }
%union.anon.4 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.comedi_device = type { i32, %struct.comedi_driver*, %struct.comedi_8254*, i8*, %struct.device*, i32, i32, %struct.device*, i8*, i8*, i8, %struct.spinlock, %struct.mutex, %struct.rw_semaphore, %struct.kref, i32, %struct.comedi_subdevice*, i8*, i64, i64, i32, %struct.comedi_subdevice*, %struct.comedi_subdevice*, %struct.fasync_struct*, {}*, void (%struct.comedi_device*)*, i32 (%struct.comedi_device*, %struct.comedi_insn*, i32*)*, i32 (%struct.comedi_device*, i32, i32*)* }
%struct.comedi_driver = type { %struct.comedi_driver*, i8*, %struct.module*, i32 (%struct.comedi_device*, %struct.comedi_devconfig*)*, void (%struct.comedi_device*)*, i32 (%struct.comedi_device*, i64)*, i32, i8**, i32 }
%struct.comedi_devconfig = type { [20 x i8], [32 x i32] }
%struct.comedi_8254 = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.68, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.68 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.66, %struct.list_head, %struct.list_head, %union.anon.67 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.64 }
%union.anon.64 = type { %struct.anon.65 }
%struct.anon.65 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.2, %union.anon.56, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.56 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.57, i32 }
%union.anon.57 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.49, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.19, [0 x i64] }
%struct.anon.19 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.20, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.20 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.21 }
%union.anon.21 = type { %struct.anon.22 }
%struct.anon.22 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.26, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.27, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.28, %union.anon.32, %struct.key_restriction* }
%union.anon.26 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.27 = type { i64 }
%union.anon.28 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.29, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.29 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.32 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.35, %union.anon.36, i32 }
%struct.request_queue = type opaque
%union.anon.35 = type { %struct.list_head }
%union.anon.36 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.37 }
%struct.anon.37 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.41 }
%struct.anon.41 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.48, i32, [12 x i8] }
%union.anon.48 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.49 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.50, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.53 }
%union.anon.50 = type { %struct.anon.51 }
%struct.anon.51 = type { i64, i64 }
%union.anon.53 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.66 = type { %struct.list_head }
%union.anon.67 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.58, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.59, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.60, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.63, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.58 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.59 = type { %struct.callback_head }
%union.anon.60 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type { i32, i64, i64, %union.anon.6, %union.anon.7 }
%union.anon.6 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.7 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.63 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.61 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.61 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.34 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.34 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type opaque
%struct.acpi_device_id = type opaque
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.kref = type { %struct.refcount_struct }
%struct.comedi_subdevice = type { %struct.comedi_device*, i32, i32, i32, i32, i32, i8*, %struct.comedi_async*, i8*, i8*, i32, %struct.spinlock, i32, i32, i32*, %struct.comedi_lrange*, %struct.comedi_lrange**, i32*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_cmd*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)*, void (%struct.comedi_device*, %struct.comedi_subdevice*, i8*, i32, i32)*, i32, i32, %struct.device*, i32, i32* }
%struct.comedi_async = type { i8*, i32, %struct.comedi_buf_map*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.comedi_cmd, %struct.wait_queue_head, i32, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)* }
%struct.comedi_buf_map = type { %struct.device*, %struct.comedi_buf_page*, i32, i32, %struct.kref }
%struct.comedi_buf_page = type { i8*, i64 }
%struct.comedi_cmd = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, i32, i16*, i32 }
%struct.comedi_lrange = type { i32, [0 x %struct.comedi_krange] }
%struct.comedi_krange = type { i32, i32, i32 }
%struct.comedi_insn = type { i32, i32, i32*, i32, i32, [3 x i32] }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.cdev = type { %struct.kobject, %struct.module*, %struct.file_operations*, %struct.list_head, i32, i32 }
%struct.kmem_cache = type opaque
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.comedi_file = type { %struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_subdevice*, i32, i8 }
%struct.comedi_chaninfo = type { i32, i32*, i32*, i32*, [4 x i32] }
%struct.comedi_rangeinfo = type { i32, i8* }
%struct.comedi_insnlist = type { i32, %struct.comedi_insn* }
%struct.comedi_bufconfig = type { i32, i32, i32, i32, [4 x i32] }
%struct.comedi_devinfo = type { i32, i32, [20 x i8], [20 x i8], i32, i32, [30 x i32] }
%struct.comedi_subdinfo = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32] }
%struct.comedi_bufinfo = type { i32, i32, i32, i32, i32, i32, i32, [4 x i32] }

@__param_str_comedi_num_legacy_minors = internal constant [32 x i8] c"comedi.comedi_num_legacy_minors\00", align 16, !dbg !0
@param_ops_ushort = external dso_local constant %struct.kernel_param_ops, align 8
@comedi_num_legacy_minors = internal global i16 0, align 2, !dbg !4197
@__param_comedi_num_legacy_minors = internal constant %struct.kernel_param { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__param_str_comedi_num_legacy_minors, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_ushort, i16 292, i8 -1, i8 0, %union.anon { i8* bitcast (i16* @comedi_num_legacy_minors to i8*) } }, section "__param", align 8, !dbg !4083
@__UNIQUE_ID_comedi_num_legacy_minorstype233 = internal constant [48 x i8] c"comedi.parmtype=comedi_num_legacy_minors:ushort\00", section ".modinfo", align 1, !dbg !4135
@__UNIQUE_ID_comedi_num_legacy_minors234 = internal constant [123 x i8] c"comedi.parm=comedi_num_legacy_minors:number of comedi minor devices to reserve for non-auto-configured devices (default 0)\00", section ".modinfo", align 1, !dbg !4140
@comedi_default_buf_size_kb = dso_local global i32 2048, align 4, !dbg !4145
@__param_str_comedi_default_buf_size_kb = internal constant [34 x i8] c"comedi.comedi_default_buf_size_kb\00", align 16, !dbg !4211
@param_ops_uint = external dso_local constant %struct.kernel_param_ops, align 8
@__param_comedi_default_buf_size_kb = internal constant %struct.kernel_param { i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__param_str_comedi_default_buf_size_kb, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @comedi_default_buf_size_kb to i8*) } }, section "__param", align 8, !dbg !4147
@__UNIQUE_ID_comedi_default_buf_size_kbtype235 = internal constant [48 x i8] c"comedi.parmtype=comedi_default_buf_size_kb:uint\00", section ".modinfo", align 1, !dbg !4149
@__UNIQUE_ID_comedi_default_buf_size_kb236 = internal constant [94 x i8] c"comedi.parm=comedi_default_buf_size_kb:default asynchronous buffer size in KiB (default 2048)\00", section ".modinfo", align 1, !dbg !4151
@comedi_default_buf_maxsize_kb = dso_local global i32 20480, align 4, !dbg !4156
@__param_str_comedi_default_buf_maxsize_kb = internal constant [37 x i8] c"comedi.comedi_default_buf_maxsize_kb\00", align 16, !dbg !4216
@__param_comedi_default_buf_maxsize_kb = internal constant %struct.kernel_param { i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__param_str_comedi_default_buf_maxsize_kb, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @comedi_default_buf_maxsize_kb to i8*) } }, section "__param", align 8, !dbg !4158
@__UNIQUE_ID_comedi_default_buf_maxsize_kbtype237 = internal constant [51 x i8] c"comedi.parmtype=comedi_default_buf_maxsize_kb:uint\00", section ".modinfo", align 1, !dbg !4160
@__UNIQUE_ID_comedi_default_buf_maxsize_kb238 = internal constant [109 x i8] c"comedi.parm=comedi_default_buf_maxsize_kb:default maximum size of asynchronous buffer in KiB (default 20480)\00", section ".modinfo", align 1, !dbg !4165
@comedi_board_minor_table_lock = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @comedi_board_minor_table_lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @comedi_board_minor_table_lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !4223
@comedi_board_minor_table = internal global [48 x %struct.comedi_device*] zeroinitializer, align 16, !dbg !4199
@.str = private unnamed_addr constant [49 x i8] c"ran out of minor numbers for board device files\0A\00", align 1
@comedi_class = internal global %struct.class* null, align 8, !dbg !4207
@.str.1 = private unnamed_addr constant [9 x i8] c"comedi%i\00", align 1
@comedi_subdevice_minor_table_lock = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @comedi_subdevice_minor_table_lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @comedi_subdevice_minor_table_lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !4225
@comedi_subdevice_minor_table = internal global [208 x %struct.comedi_subdevice*] zeroinitializer, align 16, !dbg !4202
@.str.2 = private unnamed_addr constant [46 x i8] c"ran out of minor numbers for subdevice files\0A\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"comedi%i_subd%i\00", align 1
@__UNIQUE_ID___addressable_comedi_init264 = internal global i8* bitcast (i32 ()* @comedi_init to i8*), section ".discard.addressable", align 8, !dbg !4170
@comedi_cdev = internal global %struct.cdev zeroinitializer, align 8, !dbg !4209
@__exitcall_comedi_cleanup = internal global void ()* @comedi_cleanup, section ".exitcall.exit", align 8, !dbg !4172
@__UNIQUE_ID_author265 = internal constant [37 x i8] c"comedi.author=https://www.comedi.org\00", section ".modinfo", align 1, !dbg !4177
@__UNIQUE_ID_description266 = internal constant [38 x i8] c"comedi.description=Comedi core module\00", section ".modinfo", align 1, !dbg !4182
@__UNIQUE_ID_file267 = internal constant [42 x i8] c"comedi.file=drivers/staging/comedi/comedi\00", section ".modinfo", align 1, !dbg !4187
@__UNIQUE_ID_license268 = internal constant [19 x i8] c"comedi.license=GPL\00", section ".modinfo", align 1, !dbg !4192
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.4 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"BUG: (?) %s called with async=NULL\0A\00", align 1
@__func__.do_become_nonbusy = private unnamed_addr constant [18 x i8] c"do_become_nonbusy\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@comedi_device_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4218
@.str.6 = private unnamed_addr constant [12 x i8] c"&dev->mutex\00", align 1
@comedi_device_init.__key.7 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4221
@.str.8 = private unnamed_addr constant [18 x i8] c"&dev->attach_lock\00", align 1
@.str.9 = private unnamed_addr constant [50 x i8] c"\016comedi: version 0.7.76 - http://www.comedi.org\0A\00", align 1
@.str.10 = private unnamed_addr constant [106 x i8] c"\013comedi: invalid value for module parameter \22comedi_num_legacy_minors\22.  Valid values are 0 through %i.\0A\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"comedi\00", align 1
@comedi_fops = internal constant %struct.file_operations { %struct.module* null, i64 (%struct.file*, i64, i32)* @noop_llseek, i64 (%struct.file*, i8*, i64, i64*)* @comedi_read, i64 (%struct.file*, i8*, i64, i64*)* @comedi_write, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i32 (%struct.kiocb*, i1)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.poll_table_struct*)* @comedi_poll, i64 (%struct.file*, i32, i64)* @comedi_unlocked_ioctl, i64 (%struct.file*, i32, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* @comedi_mmap, i64 0, i32 (%struct.inode*, %struct.file*)* @comedi_open, i32 (%struct.file*, i8*)* null, i32 (%struct.inode*, %struct.file*)* @comedi_close, i32 (%struct.file*, i64, i64, i32)* null, i32 (i32, %struct.file*, i32)* @comedi_fasync, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)* null, i64 (%struct.file*, i64, i64, i64, i64)* null, i32 (i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)* null, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)* null, i32 (%struct.file*, i64, %struct.file_lock**, i8**)* null, i64 (%struct.file*, i32, i64, i64)* null, void (%struct.seq_file*, %struct.file*)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i32 (%struct.file*, i64, i64, i32)* null }, align 8, !dbg !4232
@comedi_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4227
@.str.12 = private unnamed_addr constant [34 x i8] c"\013comedi: failed to create class\0A\00", align 1
@comedi_dev_groups = internal global [2 x %struct.attribute_group*] [%struct.attribute_group* @comedi_dev_group, %struct.attribute_group* null], align 16, !dbg !4236
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@.str.13 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.14 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@.str.15 = private unnamed_addr constant [41 x i8] c"comedi_config --init_data is deprecated\0A\00", align 1
@.str.16 = private unnamed_addr constant [72 x i8] c"\014comedi: No check for data length of config insn id %i is implemented\0A\00", align 1
@.str.17 = private unnamed_addr constant [35 x i8] c"\014comedi: Add a check to %s in %s\0A\00", align 1
@__func__.check_insn_config_length = private unnamed_addr constant [25 x i8] c"check_insn_config_length\00", align 1
@.str.18 = private unnamed_addr constant [37 x i8] c"drivers/staging/comedi/comedi_fops.c\00", align 1
@.str.19 = private unnamed_addr constant [36 x i8] c"\014comedi: Assuming n=%i is correct\0A\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@comedi_vm_ops = internal constant %struct.vm_operations_struct { void (%struct.vm_area_struct*)* @comedi_vm_open, void (%struct.vm_area_struct*)* @comedi_vm_close, i32 (%struct.vm_area_struct*, i64)* null, i32 (%struct.vm_area_struct*)* null, i32 (%struct.vm_fault*)* null, i32 (%struct.vm_fault*, i32)* null, void (%struct.vm_fault*, i64, i64)* null, i64 (%struct.vm_area_struct*)* null, i32 (%struct.vm_fault*)* null, i32 (%struct.vm_fault*)* null, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)* @comedi_vm_access, i8* (%struct.vm_area_struct*)* null, %struct.page* (%struct.vm_area_struct*, i64)* null }, align 8, !dbg !4234
@phys_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@comedi_dev_group = internal constant %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([5 x %struct.attribute*], [5 x %struct.attribute*]* @comedi_dev_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !4239
@comedi_dev_attrs = internal global [5 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_max_read_buffer_kb, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_read_buffer_kb, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_max_write_buffer_kb, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_write_buffer_kb, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !4241
@dev_attr_max_read_buffer_kb = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @max_read_buffer_kb_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @max_read_buffer_kb_store }, align 8, !dbg !4246
@dev_attr_read_buffer_kb = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @read_buffer_kb_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @read_buffer_kb_store }, align 8, !dbg !4260
@dev_attr_max_write_buffer_kb = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.23, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @max_write_buffer_kb_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @max_write_buffer_kb_store }, align 8, !dbg !4262
@dev_attr_write_buffer_kb = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.24, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @write_buffer_kb_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @write_buffer_kb_store }, align 8, !dbg !4264
@.str.20 = private unnamed_addr constant [19 x i8] c"max_read_buffer_kb\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"%u\0A\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"read_buffer_kb\00", align 1
@.str.23 = private unnamed_addr constant [20 x i8] c"max_write_buffer_kb\00", align 1
@.str.24 = private unnamed_addr constant [16 x i8] c"write_buffer_kb\00", align 1
@llvm.used = appending global [16 x i8*] [i8* bitcast (%struct.kernel_param* @__param_comedi_num_legacy_minors to i8*), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__UNIQUE_ID_comedi_num_legacy_minorstype233, i32 0, i32 0), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @__UNIQUE_ID_comedi_num_legacy_minors234, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_comedi_default_buf_size_kb to i8*), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__UNIQUE_ID_comedi_default_buf_size_kbtype235, i32 0, i32 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @__UNIQUE_ID_comedi_default_buf_size_kb236, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_comedi_default_buf_maxsize_kb to i8*), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__UNIQUE_ID_comedi_default_buf_maxsize_kbtype237, i32 0, i32 0), i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__UNIQUE_ID_comedi_default_buf_maxsize_kb238, i32 0, i32 0), i8* bitcast (i8** @__UNIQUE_ID___addressable_comedi_init264 to i8*), i8* bitcast (void ()* @comedi_cleanup to i8*), i8* bitcast (void ()** @__exitcall_comedi_cleanup to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_author265, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_description266, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__UNIQUE_ID_file267, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__UNIQUE_ID_license268, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @comedi_dev_put(%struct.comedi_device* %dev) #0 !dbg !4273 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !4274, metadata !DIExpression()), !dbg !4275
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4276
  %tobool = icmp ne %struct.comedi_device* %0, null, !dbg !4276
  br i1 %tobool, label %if.then, label %if.end, !dbg !4278

if.then:                                          ; preds = %entry
  %1 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4279
  %refcount = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %1, i32 0, i32 14, !dbg !4280
  %call = call i32 @kref_put(%struct.kref* %refcount, void (%struct.kref*)* @comedi_dev_kref_release) #11, !dbg !4281
  store i32 %call, i32* %retval, align 4, !dbg !4282
  br label %return, !dbg !4282

if.end:                                           ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !4283
  br label %return, !dbg !4283

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !4284
  ret i32 %2, !dbg !4284
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kref_put(%struct.kref* %kref, void (%struct.kref*)* %release) #0 !dbg !4285 {
entry:
  %retval = alloca i32, align 4
  %kref.addr = alloca %struct.kref*, align 8
  %release.addr = alloca void (%struct.kref*)*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !4292, metadata !DIExpression()), !dbg !4293
  store void (%struct.kref*)* %release, void (%struct.kref*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.kref*)** %release.addr, metadata !4294, metadata !DIExpression()), !dbg !4295
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !4296
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !4298
  %call = call zeroext i1 @refcount_dec_and_test(%struct.refcount_struct* %refcount) #11, !dbg !4299
  br i1 %call, label %if.then, label %if.end, !dbg !4300

if.then:                                          ; preds = %entry
  %1 = load void (%struct.kref*)*, void (%struct.kref*)** %release.addr, align 8, !dbg !4301
  %2 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !4303
  call void %1(%struct.kref* %2) #11, !dbg !4301
  store i32 1, i32* %retval, align 4, !dbg !4304
  br label %return, !dbg !4304

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4305
  br label %return, !dbg !4305

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !4306
  ret i32 %3, !dbg !4306
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @comedi_dev_kref_release(%struct.kref* %kref) #0 !dbg !4307 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  %dev = alloca %struct.comedi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.comedi_device*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !4308, metadata !DIExpression()), !dbg !4309
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !4310, metadata !DIExpression()), !dbg !4311
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !4312, metadata !DIExpression()), !dbg !4314
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !4314
  %1 = bitcast %struct.kref* %0 to i8*, !dbg !4314
  store i8* %1, i8** %__mptr, align 8, !dbg !4314
  br label %do.body, !dbg !4314

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4315

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !4314
  %add.ptr = getelementptr i8, i8* %2, i64 -136, !dbg !4314
  %3 = bitcast i8* %add.ptr to %struct.comedi_device*, !dbg !4314
  store %struct.comedi_device* %3, %struct.comedi_device** %tmp, align 8, !dbg !4315
  %4 = load %struct.comedi_device*, %struct.comedi_device** %tmp, align 8, !dbg !4314
  store %struct.comedi_device* %4, %struct.comedi_device** %dev, align 8, !dbg !4311
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !4317
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %5, i32 0, i32 12, !dbg !4318
  call void @mutex_destroy(%struct.mutex* %mutex) #11, !dbg !4319
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !4320
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %6, i32 0, i32 4, !dbg !4321
  %7 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !4321
  call void @put_device(%struct.device* %7) #11, !dbg !4322
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !4323
  %9 = bitcast %struct.comedi_device* %8 to i8*, !dbg !4323
  call void @kfree(i8* %9) #11, !dbg !4324
  ret void, !dbg !4325
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.comedi_device* @comedi_dev_get_from_minor(i32 %minor) #0 !dbg !4326 {
entry:
  %retval = alloca %struct.comedi_device*, align 8
  %minor.addr = alloca i32, align 4
  store i32 %minor, i32* %minor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %minor.addr, metadata !4329, metadata !DIExpression()), !dbg !4330
  %0 = load i32, i32* %minor.addr, align 4, !dbg !4331
  %cmp = icmp ult i32 %0, 48, !dbg !4333
  br i1 %cmp, label %if.then, label %if.end, !dbg !4334

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %minor.addr, align 4, !dbg !4335
  %call = call %struct.comedi_device* @comedi_dev_get_from_board_minor(i32 %1) #11, !dbg !4336
  store %struct.comedi_device* %call, %struct.comedi_device** %retval, align 8, !dbg !4337
  br label %return, !dbg !4337

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %minor.addr, align 4, !dbg !4338
  %call1 = call %struct.comedi_device* @comedi_dev_get_from_subdevice_minor(i32 %2) #11, !dbg !4339
  store %struct.comedi_device* %call1, %struct.comedi_device** %retval, align 8, !dbg !4340
  br label %return, !dbg !4340

return:                                           ; preds = %if.end, %if.then
  %3 = load %struct.comedi_device*, %struct.comedi_device** %retval, align 8, !dbg !4341
  ret %struct.comedi_device* %3, !dbg !4341
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.comedi_device* @comedi_dev_get_from_board_minor(i32 %minor) #0 !dbg !4342 {
entry:
  %minor.addr = alloca i32, align 4
  %dev = alloca %struct.comedi_device*, align 8
  store i32 %minor, i32* %minor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %minor.addr, metadata !4343, metadata !DIExpression()), !dbg !4344
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !4345, metadata !DIExpression()), !dbg !4346
  call void @mutex_lock(%struct.mutex* @comedi_board_minor_table_lock) #11, !dbg !4347
  %0 = load i32, i32* %minor.addr, align 4, !dbg !4348
  %idxprom = zext i32 %0 to i64, !dbg !4349
  %arrayidx = getelementptr [48 x %struct.comedi_device*], [48 x %struct.comedi_device*]* @comedi_board_minor_table, i64 0, i64 %idxprom, !dbg !4349
  %1 = load %struct.comedi_device*, %struct.comedi_device** %arrayidx, align 8, !dbg !4349
  %call = call %struct.comedi_device* @comedi_dev_get(%struct.comedi_device* %1) #11, !dbg !4350
  store %struct.comedi_device* %call, %struct.comedi_device** %dev, align 8, !dbg !4351
  call void @mutex_unlock(%struct.mutex* @comedi_board_minor_table_lock) #11, !dbg !4352
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !4353
  ret %struct.comedi_device* %2, !dbg !4354
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.comedi_device* @comedi_dev_get_from_subdevice_minor(i32 %minor) #0 !dbg !4355 {
entry:
  %minor.addr = alloca i32, align 4
  %dev = alloca %struct.comedi_device*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %i = alloca i32, align 4
  store i32 %minor, i32* %minor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %minor.addr, metadata !4356, metadata !DIExpression()), !dbg !4357
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !4358, metadata !DIExpression()), !dbg !4359
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !4360, metadata !DIExpression()), !dbg !4361
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4362, metadata !DIExpression()), !dbg !4363
  %0 = load i32, i32* %minor.addr, align 4, !dbg !4364
  %sub = sub i32 %0, 48, !dbg !4365
  store i32 %sub, i32* %i, align 4, !dbg !4363
  call void @mutex_lock(%struct.mutex* @comedi_subdevice_minor_table_lock) #11, !dbg !4366
  %1 = load i32, i32* %i, align 4, !dbg !4367
  %idxprom = zext i32 %1 to i64, !dbg !4368
  %arrayidx = getelementptr [208 x %struct.comedi_subdevice*], [208 x %struct.comedi_subdevice*]* @comedi_subdevice_minor_table, i64 0, i64 %idxprom, !dbg !4368
  %2 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %arrayidx, align 8, !dbg !4368
  store %struct.comedi_subdevice* %2, %struct.comedi_subdevice** %s, align 8, !dbg !4369
  %3 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !4370
  %tobool = icmp ne %struct.comedi_subdevice* %3, null, !dbg !4370
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4370

cond.true:                                        ; preds = %entry
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !4371
  %device = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %4, i32 0, i32 0, !dbg !4372
  %5 = load %struct.comedi_device*, %struct.comedi_device** %device, align 8, !dbg !4372
  br label %cond.end, !dbg !4370

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4370

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.comedi_device* [ %5, %cond.true ], [ null, %cond.false ], !dbg !4370
  %call = call %struct.comedi_device* @comedi_dev_get(%struct.comedi_device* %cond) #11, !dbg !4373
  store %struct.comedi_device* %call, %struct.comedi_device** %dev, align 8, !dbg !4374
  call void @mutex_unlock(%struct.mutex* @comedi_subdevice_minor_table_lock) #11, !dbg !4375
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !4376
  ret %struct.comedi_device* %6, !dbg !4377
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @comedi_is_subdevice_running(%struct.comedi_subdevice* %s) #0 !dbg !4378 {
entry:
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %runflags = alloca i32, align 4
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !4381, metadata !DIExpression()), !dbg !4382
  call void @llvm.dbg.declare(metadata i32* %runflags, metadata !4383, metadata !DIExpression()), !dbg !4384
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !4385
  %call = call i32 @comedi_get_subdevice_runflags(%struct.comedi_subdevice* %0) #11, !dbg !4386
  store i32 %call, i32* %runflags, align 4, !dbg !4384
  %1 = load i32, i32* %runflags, align 4, !dbg !4387
  %call1 = call zeroext i1 @comedi_is_runflags_running(i32 %1) #11, !dbg !4388
  ret i1 %call1, !dbg !4389
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_get_subdevice_runflags(%struct.comedi_subdevice* %s) #0 !dbg !4390 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !4393, metadata !DIExpression()), !dbg !4398
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4400, metadata !DIExpression()), !dbg !4401
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4402, metadata !DIExpression()), !dbg !4407
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %flags = alloca i64, align 8
  %runflags = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !4414, metadata !DIExpression()), !dbg !4415
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4416, metadata !DIExpression()), !dbg !4417
  call void @llvm.dbg.declare(metadata i32* %runflags, metadata !4418, metadata !DIExpression()), !dbg !4419
  br label %do.body, !dbg !4420

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !4421

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4422, metadata !DIExpression()), !dbg !4424
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4425, metadata !DIExpression()), !dbg !4424
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !4424
  %conv = zext i1 %cmp to i32, !dbg !4424
  store i32 1, i32* %tmp, align 4, !dbg !4424
  %0 = load i32, i32* %tmp, align 4, !dbg !4424
  br label %do.body2, !dbg !4426

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !4427

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !4428

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !4430, metadata !DIExpression()), !dbg !4433
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !4434, metadata !DIExpression()), !dbg !4433
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !4433
  %conv8 = zext i1 %cmp7 to i32, !dbg !4433
  store i32 1, i32* %tmp9, align 4, !dbg !4433
  %1 = load i32, i32* %tmp9, align 4, !dbg !4433
  %call = call i64 @arch_local_irq_save() #11, !dbg !4435
  store i64 %call, i64* %flags, align 8, !dbg !4435
  br label %do.end, !dbg !4435

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !4428

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !4427

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !4436, !srcloc !4437
  br label %do.body12, !dbg !4436

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !4438
  %spin_lock = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %2, i32 0, i32 11, !dbg !4438
  store %struct.spinlock* %spin_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4439
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !4440
  %rlock.i = bitcast %union.anon.4* %4 to %struct.raw_spinlock*, !dbg !4440
  br label %do.end14, !dbg !4438

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !4436

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !4427

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !4426

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !4421

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !4441
  %call19 = call i32 @__comedi_get_subdevice_runflags(%struct.comedi_subdevice* %5) #11, !dbg !4442
  store i32 %call19, i32* %runflags, align 4, !dbg !4443
  %6 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !4444
  %spin_lock20 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %6, i32 0, i32 11, !dbg !4445
  %7 = load i64, i64* %flags, align 8, !dbg !4446
  store %struct.spinlock* %spin_lock20, %struct.spinlock** %lock.addr.i21, align 8
  store i64 %7, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !250, metadata !4447, metadata !DIExpression()) #9, !dbg !4450
  call void @llvm.dbg.declare(metadata !250, metadata !4451, metadata !DIExpression()) #9, !dbg !4450
  store i32 1, i32* %tmp.i, align 4, !dbg !4450
  %8 = load i32, i32* %tmp.i, align 4, !dbg !4450
  call void @llvm.dbg.declare(metadata !250, metadata !4452, metadata !DIExpression()) #9, !dbg !4457
  call void @llvm.dbg.declare(metadata !250, metadata !4458, metadata !DIExpression()) #9, !dbg !4457
  store i32 1, i32* %tmp8.i, align 4, !dbg !4457
  %9 = load i32, i32* %tmp8.i, align 4, !dbg !4457
  %10 = load i64, i64* %flags.addr.i, align 8, !dbg !4459
  call void @arch_local_irq_restore(i64 %10) #12, !dbg !4459
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !4460, !srcloc !4462
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !4463
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !4463
  %rlock.i22 = bitcast %union.anon.4* %12 to %struct.raw_spinlock*, !dbg !4463
  %13 = load i32, i32* %runflags, align 4, !dbg !4465
  ret i32 %13, !dbg !4466
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @comedi_is_runflags_running(i32 %runflags) #0 !dbg !4467 {
entry:
  %runflags.addr = alloca i32, align 4
  store i32 %runflags, i32* %runflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %runflags.addr, metadata !4470, metadata !DIExpression()), !dbg !4471
  %0 = load i32, i32* %runflags.addr, align 4, !dbg !4472
  %conv = zext i32 %0 to i64, !dbg !4472
  %and = and i64 %conv, 134217728, !dbg !4473
  %tobool = icmp ne i64 %and, 0, !dbg !4472
  ret i1 %tobool, !dbg !4474
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @comedi_can_auto_free_spriv(%struct.comedi_subdevice* %s) #0 !dbg !4475 {
entry:
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %runflags = alloca i32, align 4
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !4476, metadata !DIExpression()), !dbg !4477
  call void @llvm.dbg.declare(metadata i32* %runflags, metadata !4478, metadata !DIExpression()), !dbg !4479
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !4480
  %call = call i32 @__comedi_get_subdevice_runflags(%struct.comedi_subdevice* %0) #11, !dbg !4481
  store i32 %call, i32* %runflags, align 4, !dbg !4479
  %1 = load i32, i32* %runflags, align 4, !dbg !4482
  %conv = zext i32 %1 to i64, !dbg !4482
  %and = and i64 %conv, 2147483648, !dbg !4483
  %tobool = icmp ne i64 %and, 0, !dbg !4482
  ret i1 %tobool, !dbg !4484
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__comedi_get_subdevice_runflags(%struct.comedi_subdevice* %s) #0 !dbg !4485 {
entry:
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !4486, metadata !DIExpression()), !dbg !4487
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !4488
  %runflags = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %0, i32 0, i32 10, !dbg !4489
  %1 = load i32, i32* %runflags, align 8, !dbg !4489
  ret i32 %1, !dbg !4490
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @comedi_set_spriv_auto_free(%struct.comedi_subdevice* %s) #0 !dbg !4491 {
entry:
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !4494, metadata !DIExpression()), !dbg !4495
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !4496
  call void @__comedi_set_subdevice_runflags(%struct.comedi_subdevice* %0, i32 -2147483648) #11, !dbg !4497
  ret void, !dbg !4498
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__comedi_set_subdevice_runflags(%struct.comedi_subdevice* %s, i32 %bits) #0 !dbg !4499 {
entry:
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %bits.addr = alloca i32, align 4
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !4502, metadata !DIExpression()), !dbg !4503
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !4504, metadata !DIExpression()), !dbg !4505
  %0 = load i32, i32* %bits.addr, align 4, !dbg !4506
  %1 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !4507
  %runflags = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %1, i32 0, i32 10, !dbg !4508
  %2 = load i32, i32* %runflags, align 8, !dbg !4509
  %or = or i32 %2, %0, !dbg !4509
  store i32 %or, i32* %runflags, align 8, !dbg !4509
  ret void, !dbg !4510
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @comedi_alloc_spriv(%struct.comedi_subdevice* %s, i64 %size) #0 !dbg !4511 {
entry:
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %size.addr = alloca i64, align 8
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !4514, metadata !DIExpression()), !dbg !4515
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !4516, metadata !DIExpression()), !dbg !4517
  %0 = load i64, i64* %size.addr, align 8, !dbg !4518
  %call = call i8* @kzalloc(i64 %0, i32 3264) #11, !dbg !4519
  %1 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !4520
  %private = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %1, i32 0, i32 6, !dbg !4521
  store i8* %call, i8** %private, align 8, !dbg !4522
  %2 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !4523
  %private1 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %2, i32 0, i32 6, !dbg !4525
  %3 = load i8*, i8** %private1, align 8, !dbg !4525
  %tobool = icmp ne i8* %3, null, !dbg !4523
  br i1 %tobool, label %if.then, label %if.end, !dbg !4526

if.then:                                          ; preds = %entry
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !4527
  call void @comedi_set_spriv_auto_free(%struct.comedi_subdevice* %4) #11, !dbg !4528
  br label %if.end, !dbg !4528

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !4529
  %private2 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %5, i32 0, i32 6, !dbg !4530
  %6 = load i8*, i8** %private2, align 8, !dbg !4530
  ret i8* %6, !dbg !4531
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !4532 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !4535, metadata !DIExpression()), !dbg !4539
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !4545, metadata !DIExpression()), !dbg !4546
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !4547, metadata !DIExpression()), !dbg !4548
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !4549, metadata !DIExpression()), !dbg !4550
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !4551, metadata !DIExpression()), !dbg !4555
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !4557, metadata !DIExpression()), !dbg !4561
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !4563, metadata !DIExpression()), !dbg !4567
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !4572, metadata !DIExpression()), !dbg !4573
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !4574, metadata !DIExpression()), !dbg !4575
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4576, metadata !DIExpression()), !dbg !4577
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !4578, metadata !DIExpression()), !dbg !4579
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !4580, metadata !DIExpression()), !dbg !4581
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4582, metadata !DIExpression()), !dbg !4583
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !4584, metadata !DIExpression()), !dbg !4585
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !4586, metadata !DIExpression()), !dbg !4587
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !4588, metadata !DIExpression()), !dbg !4589
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !4590, metadata !DIExpression()), !dbg !4591
  %0 = load i64, i64* %size.addr, align 8, !dbg !4592
  %1 = load i32, i32* %flags.addr, align 4, !dbg !4593
  %or = or i32 %1, 256, !dbg !4594
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !4595
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #9, !dbg !4596
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !4597

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !4598
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !4599
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !4600

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !4601
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !4602
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !4603
  %call.i.i = call i32 @get_order(i64 %7) #13, !dbg !4604
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !4581
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !4605
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !4606
  %10 = load i32, i32* %order.i.i, align 4, !dbg !4607
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !4608
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !4609
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !4610
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !4611
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !4611
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !4611
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !4611
  call void @llvm.assume(i1 %maskcond.i.i.i) #9, !dbg !4611
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !4612
  br label %kmalloc.exit, !dbg !4612

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !4613
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4614
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !4614
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !4616

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !4617
  br label %kmalloc_index.exit.i, !dbg !4617

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4618
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !4620
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !4621

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !4622
  br label %kmalloc_index.exit.i, !dbg !4622

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4623
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !4625
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !4626

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4627
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !4628
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !4629

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !4630
  br label %kmalloc_index.exit.i, !dbg !4630

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4631
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !4633
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !4634

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4635
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !4636
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !4637

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !4638
  br label %kmalloc_index.exit.i, !dbg !4638

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4639
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !4641
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !4642

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !4643
  br label %kmalloc_index.exit.i, !dbg !4643

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4644
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !4646
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !4647

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !4648
  br label %kmalloc_index.exit.i, !dbg !4648

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4649
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !4651
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !4652

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !4653
  br label %kmalloc_index.exit.i, !dbg !4653

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4654
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !4656
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !4657

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !4658
  br label %kmalloc_index.exit.i, !dbg !4658

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4659
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !4661
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !4662

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !4663
  br label %kmalloc_index.exit.i, !dbg !4663

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4664
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !4666
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !4667

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !4668
  br label %kmalloc_index.exit.i, !dbg !4668

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4669
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !4671
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !4672

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !4673
  br label %kmalloc_index.exit.i, !dbg !4673

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4674
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !4676
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !4677

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !4678
  br label %kmalloc_index.exit.i, !dbg !4678

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4679
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !4681
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !4682

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !4683
  br label %kmalloc_index.exit.i, !dbg !4683

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4684
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !4686
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !4687

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !4688
  br label %kmalloc_index.exit.i, !dbg !4688

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4689
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !4691
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !4692

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !4693
  br label %kmalloc_index.exit.i, !dbg !4693

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4694
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !4696
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !4697

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !4698
  br label %kmalloc_index.exit.i, !dbg !4698

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4699
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !4701
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !4702

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !4703
  br label %kmalloc_index.exit.i, !dbg !4703

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4704
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !4706
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !4707

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !4708
  br label %kmalloc_index.exit.i, !dbg !4708

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4709
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !4711
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !4712

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !4713
  br label %kmalloc_index.exit.i, !dbg !4713

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4714
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !4716
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !4717

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !4718
  br label %kmalloc_index.exit.i, !dbg !4718

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4719
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !4721
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !4722

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !4723
  br label %kmalloc_index.exit.i, !dbg !4723

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4724
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !4726
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !4727

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !4728
  br label %kmalloc_index.exit.i, !dbg !4728

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4729
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !4731
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !4732

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !4733
  br label %kmalloc_index.exit.i, !dbg !4733

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4734
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !4736
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !4737

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !4738
  br label %kmalloc_index.exit.i, !dbg !4738

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4739
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !4741
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !4742

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !4743
  br label %kmalloc_index.exit.i, !dbg !4743

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4744
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !4746
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !4747

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !4748
  br label %kmalloc_index.exit.i, !dbg !4748

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4749
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !4751
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !4752

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !4753
  br label %kmalloc_index.exit.i, !dbg !4753

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4754
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !4756
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !4757

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !4758
  br label %kmalloc_index.exit.i, !dbg !4758

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i32 382, i32 0, i64 12) #9, !dbg !4759, !srcloc !4762
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 225) #9, !dbg !4763, !srcloc !4766
  unreachable, !dbg !4767

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !4768
  store i32 %45, i32* %index.i, align 4, !dbg !4769
  %46 = load i32, i32* %index.i, align 4, !dbg !4770
  %tobool.i = icmp ne i32 %46, 0, !dbg !4770
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !4772

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !4773
  br label %kmalloc.exit, !dbg !4773

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !4774
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !4775
  %and.i.i = and i32 %48, 17, !dbg !4775
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !4775
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !4775
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !4775
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !4775
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !4777

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !4778
  br label %kmalloc_type.exit.i, !dbg !4778

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !4779
  %and2.i.i = and i32 %49, 1, !dbg !4780
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !4779
  %50 = zext i1 %tobool3.i.i to i64, !dbg !4779
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !4779
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !4781
  br label %kmalloc_type.exit.i, !dbg !4781

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !4782
  %idxprom.i = zext i32 %51 to i64, !dbg !4783
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !4783
  %52 = load i32, i32* %index.i, align 4, !dbg !4784
  %idxprom6.i = zext i32 %52 to i64, !dbg !4783
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !4783
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !4783
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !4785
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !4786
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !4787
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !4788
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !4789
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !4789
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !4789
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !4789
  call void @llvm.assume(i1 %maskcond.i.i) #9, !dbg !4789
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !4550
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !4790
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !4791
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !4792
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !4793
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !4794
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !4795
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !4796
  store i8* %62, i8** %retval.i, align 8, !dbg !4797
  br label %kmalloc.exit, !dbg !4797

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !4798
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !4799
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !4800
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !4800
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !4800
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !4800
  call void @llvm.assume(i1 %maskcond.i) #9, !dbg !4800
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !4801
  br label %kmalloc.exit, !dbg !4801

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !4802
  ret i8* %65, !dbg !4803
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @comedi_device_cancel_all(%struct.comedi_device* %dev) #0 !dbg !4804 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %i = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !4805, metadata !DIExpression()), !dbg !4806
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !4807, metadata !DIExpression()), !dbg !4808
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4809, metadata !DIExpression()), !dbg !4810
  br label %do.body, !dbg !4811

do.body:                                          ; preds = %entry
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4812
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 12, !dbg !4812
  br label %do.end, !dbg !4812

do.end:                                           ; preds = %do.body
  %1 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4814
  %attached = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %1, i32 0, i32 10, !dbg !4816
  %bf.load = load i8, i8* %attached, align 8, !dbg !4816
  %bf.clear = and i8 %bf.load, 1, !dbg !4816
  %bf.cast = zext i8 %bf.clear to i32, !dbg !4816
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !4814
  br i1 %tobool, label %if.end, label %if.then, !dbg !4817

if.then:                                          ; preds = %do.end
  br label %for.end, !dbg !4818

if.end:                                           ; preds = %do.end
  store i32 0, i32* %i, align 4, !dbg !4819
  br label %for.cond, !dbg !4821

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !4822
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4824
  %n_subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 15, !dbg !4825
  %4 = load i32, i32* %n_subdevices, align 4, !dbg !4825
  %cmp = icmp slt i32 %2, %4, !dbg !4826
  br i1 %cmp, label %for.body, label %for.end, !dbg !4827

for.body:                                         ; preds = %for.cond
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4828
  %subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %5, i32 0, i32 16, !dbg !4830
  %6 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices, align 8, !dbg !4830
  %7 = load i32, i32* %i, align 4, !dbg !4831
  %idxprom = sext i32 %7 to i64, !dbg !4828
  %arrayidx = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %6, i64 %idxprom, !dbg !4828
  store %struct.comedi_subdevice* %arrayidx, %struct.comedi_subdevice** %s, align 8, !dbg !4832
  %8 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !4833
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %8, i32 0, i32 7, !dbg !4835
  %9 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !4835
  %tobool1 = icmp ne %struct.comedi_async* %9, null, !dbg !4833
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !4836

if.then2:                                         ; preds = %for.body
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4837
  %11 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !4838
  %call = call i32 @do_cancel(%struct.comedi_device* %10, %struct.comedi_subdevice* %11) #11, !dbg !4839
  br label %if.end3, !dbg !4839

if.end3:                                          ; preds = %if.then2, %for.body
  br label %for.inc, !dbg !4840

for.inc:                                          ; preds = %if.end3
  %12 = load i32, i32* %i, align 4, !dbg !4841
  %inc = add i32 %12, 1, !dbg !4841
  store i32 %inc, i32* %i, align 4, !dbg !4841
  br label %for.cond, !dbg !4842, !llvm.loop !4843

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !4845
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_cancel(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #0 !dbg !4846 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %ret = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !4847, metadata !DIExpression()), !dbg !4848
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !4849, metadata !DIExpression()), !dbg !4850
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4851, metadata !DIExpression()), !dbg !4852
  store i32 0, i32* %ret, align 4, !dbg !4852
  br label %do.body, !dbg !4853

do.body:                                          ; preds = %entry
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4854
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 12, !dbg !4854
  br label %do.end, !dbg !4854

do.end:                                           ; preds = %do.body
  %1 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !4856
  %call = call zeroext i1 @comedi_is_subdevice_running(%struct.comedi_subdevice* %1) #11, !dbg !4858
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !4859

land.lhs.true:                                    ; preds = %do.end
  %2 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !4860
  %cancel = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %2, i32 0, i32 25, !dbg !4861
  %3 = load i32 (%struct.comedi_device*, %struct.comedi_subdevice*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %cancel, align 8, !dbg !4861
  %tobool = icmp ne i32 (%struct.comedi_device*, %struct.comedi_subdevice*)* %3, null, !dbg !4860
  br i1 %tobool, label %if.then, label %if.end, !dbg !4862

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !4863
  %cancel1 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %4, i32 0, i32 25, !dbg !4864
  %5 = load i32 (%struct.comedi_device*, %struct.comedi_subdevice*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %cancel1, align 8, !dbg !4864
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4865
  %7 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !4866
  %call2 = call i32 %5(%struct.comedi_device* %6, %struct.comedi_subdevice* %7) #11, !dbg !4863
  store i32 %call2, i32* %ret, align 4, !dbg !4867
  br label %if.end, !dbg !4868

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.end
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4869
  %9 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !4870
  call void @do_become_nonbusy(%struct.comedi_device* %8, %struct.comedi_subdevice* %9) #11, !dbg !4871
  %10 = load i32, i32* %ret, align 4, !dbg !4872
  ret i32 %10, !dbg !4873
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @comedi_event(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #0 !dbg !4874 {
entry:
  %lock.addr.i43 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i43, metadata !4393, metadata !DIExpression()), !dbg !4877
  %flags.addr.i44 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i44, metadata !4400, metadata !DIExpression()), !dbg !4881
  %tmp.i45 = alloca i32, align 4
  %tmp8.i46 = alloca i32, align 4
  %lock.addr.i41 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i41, metadata !4393, metadata !DIExpression()), !dbg !4882
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4400, metadata !DIExpression()), !dbg !4884
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4402, metadata !DIExpression()), !dbg !4885
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %async = alloca %struct.comedi_async*, align 8
  %events = alloca i32, align 4
  %si_code = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !4892, metadata !DIExpression()), !dbg !4893
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !4894, metadata !DIExpression()), !dbg !4895
  call void @llvm.dbg.declare(metadata %struct.comedi_async** %async, metadata !4896, metadata !DIExpression()), !dbg !4897
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !4898
  %async1 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %0, i32 0, i32 7, !dbg !4899
  %1 = load %struct.comedi_async*, %struct.comedi_async** %async1, align 8, !dbg !4899
  store %struct.comedi_async* %1, %struct.comedi_async** %async, align 8, !dbg !4897
  call void @llvm.dbg.declare(metadata i32* %events, metadata !4900, metadata !DIExpression()), !dbg !4901
  call void @llvm.dbg.declare(metadata i32* %si_code, metadata !4902, metadata !DIExpression()), !dbg !4903
  store i32 0, i32* %si_code, align 4, !dbg !4903
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4904, metadata !DIExpression()), !dbg !4905
  br label %do.body, !dbg !4906

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !4907

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4908, metadata !DIExpression()), !dbg !4910
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4911, metadata !DIExpression()), !dbg !4910
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !4910
  %conv = zext i1 %cmp to i32, !dbg !4910
  store i32 1, i32* %tmp, align 4, !dbg !4910
  %2 = load i32, i32* %tmp, align 4, !dbg !4910
  br label %do.body3, !dbg !4912

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !4913

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !4914

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !4916, metadata !DIExpression()), !dbg !4919
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !4920, metadata !DIExpression()), !dbg !4919
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !4919
  %conv9 = zext i1 %cmp8 to i32, !dbg !4919
  store i32 1, i32* %tmp10, align 4, !dbg !4919
  %3 = load i32, i32* %tmp10, align 4, !dbg !4919
  %call = call i64 @arch_local_irq_save() #11, !dbg !4921
  store i64 %call, i64* %flags, align 8, !dbg !4921
  br label %do.end, !dbg !4921

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !4914

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !4913

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !4922, !srcloc !4923
  br label %do.body13, !dbg !4922

do.body13:                                        ; preds = %do.body12
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !4924
  %spin_lock = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %4, i32 0, i32 11, !dbg !4924
  store %struct.spinlock* %spin_lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4925
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !4926
  %rlock.i = bitcast %union.anon.4* %6 to %struct.raw_spinlock*, !dbg !4926
  br label %do.end15, !dbg !4924

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !4922

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !4913

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !4912

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !4907

do.end19:                                         ; preds = %do.end18
  %7 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !4927
  %events20 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %7, i32 0, i32 16, !dbg !4928
  %8 = load i32, i32* %events20, align 4, !dbg !4928
  store i32 %8, i32* %events, align 4, !dbg !4929
  %9 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !4930
  %events21 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %9, i32 0, i32 16, !dbg !4931
  store i32 0, i32* %events21, align 4, !dbg !4932
  %10 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !4933
  %call22 = call zeroext i1 @__comedi_is_subdevice_running(%struct.comedi_subdevice* %10) #11, !dbg !4934
  br i1 %call22, label %if.end, label %if.then, !dbg !4935

if.then:                                          ; preds = %do.end19
  %11 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !4936
  %spin_lock23 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %11, i32 0, i32 11, !dbg !4937
  %12 = load i64, i64* %flags, align 8, !dbg !4938
  store %struct.spinlock* %spin_lock23, %struct.spinlock** %lock.addr.i43, align 8
  store i64 %12, i64* %flags.addr.i44, align 8
  call void @llvm.dbg.declare(metadata !250, metadata !4447, metadata !DIExpression()) #9, !dbg !4939
  call void @llvm.dbg.declare(metadata !250, metadata !4451, metadata !DIExpression()) #9, !dbg !4939
  store i32 1, i32* %tmp.i45, align 4, !dbg !4939
  %13 = load i32, i32* %tmp.i45, align 4, !dbg !4939
  call void @llvm.dbg.declare(metadata !250, metadata !4452, metadata !DIExpression()) #9, !dbg !4940
  call void @llvm.dbg.declare(metadata !250, metadata !4458, metadata !DIExpression()) #9, !dbg !4940
  store i32 1, i32* %tmp8.i46, align 4, !dbg !4940
  %14 = load i32, i32* %tmp8.i46, align 4, !dbg !4940
  %15 = load i64, i64* %flags.addr.i44, align 8, !dbg !4941
  call void @arch_local_irq_restore(i64 %15) #12, !dbg !4941
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !4942, !srcloc !4462
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i43, align 8, !dbg !4943
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !4943
  %rlock.i47 = bitcast %union.anon.4* %17 to %struct.raw_spinlock*, !dbg !4943
  br label %if.end40, !dbg !4944

if.end:                                           ; preds = %do.end19
  %18 = load i32, i32* %events, align 4, !dbg !4945
  %and = and i32 %18, 50, !dbg !4947
  %tobool = icmp ne i32 %and, 0, !dbg !4947
  br i1 %tobool, label %if.then24, label %if.end25, !dbg !4948

if.then24:                                        ; preds = %if.end
  %19 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !4949
  call void @__comedi_clear_subdevice_runflags(%struct.comedi_subdevice* %19, i32 134217728) #11, !dbg !4950
  br label %if.end25, !dbg !4950

if.end25:                                         ; preds = %if.then24, %if.end
  %20 = load i32, i32* %events, align 4, !dbg !4951
  %and26 = and i32 %20, 48, !dbg !4953
  %tobool27 = icmp ne i32 %and26, 0, !dbg !4953
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !4954

if.then28:                                        ; preds = %if.end25
  %21 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !4955
  call void @__comedi_set_subdevice_runflags(%struct.comedi_subdevice* %21, i32 4) #11, !dbg !4956
  br label %if.end29, !dbg !4956

if.end29:                                         ; preds = %if.then28, %if.end25
  %22 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !4957
  %cb_mask = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %22, i32 0, i32 19, !dbg !4959
  %23 = load i32, i32* %cb_mask, align 8, !dbg !4959
  %24 = load i32, i32* %events, align 4, !dbg !4960
  %and30 = and i32 %23, %24, !dbg !4961
  %tobool31 = icmp ne i32 %and30, 0, !dbg !4961
  br i1 %tobool31, label %if.then32, label %if.end36, !dbg !4962

if.then32:                                        ; preds = %if.end29
  %25 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !4963
  %wait_head = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %25, i32 0, i32 18, !dbg !4963
  call void @__wake_up(%struct.wait_queue_head* %wait_head, i32 1, i32 1, i8* null) #11, !dbg !4963
  %26 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !4965
  %cmd = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %26, i32 0, i32 17, !dbg !4966
  %flags33 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %cmd, i32 0, i32 1, !dbg !4967
  %27 = load i32, i32* %flags33, align 4, !dbg !4967
  %and34 = and i32 %27, 64, !dbg !4968
  %tobool35 = icmp ne i32 %and34, 0, !dbg !4965
  %28 = zext i1 %tobool35 to i64, !dbg !4965
  %cond = select i1 %tobool35, i32 2, i32 1, !dbg !4965
  store i32 %cond, i32* %si_code, align 4, !dbg !4969
  br label %if.end36, !dbg !4970

if.end36:                                         ; preds = %if.then32, %if.end29
  %29 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !4971
  %spin_lock37 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %29, i32 0, i32 11, !dbg !4972
  %30 = load i64, i64* %flags, align 8, !dbg !4973
  store %struct.spinlock* %spin_lock37, %struct.spinlock** %lock.addr.i41, align 8
  store i64 %30, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !250, metadata !4447, metadata !DIExpression()) #9, !dbg !4974
  call void @llvm.dbg.declare(metadata !250, metadata !4451, metadata !DIExpression()) #9, !dbg !4974
  store i32 1, i32* %tmp.i, align 4, !dbg !4974
  %31 = load i32, i32* %tmp.i, align 4, !dbg !4974
  call void @llvm.dbg.declare(metadata !250, metadata !4452, metadata !DIExpression()) #9, !dbg !4975
  call void @llvm.dbg.declare(metadata !250, metadata !4458, metadata !DIExpression()) #9, !dbg !4975
  store i32 1, i32* %tmp8.i, align 4, !dbg !4975
  %32 = load i32, i32* %tmp8.i, align 4, !dbg !4975
  %33 = load i64, i64* %flags.addr.i, align 8, !dbg !4976
  call void @arch_local_irq_restore(i64 %33) #12, !dbg !4976
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !4977, !srcloc !4462
  %34 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i41, align 8, !dbg !4978
  %35 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %34, i32 0, i32 0, !dbg !4978
  %rlock.i42 = bitcast %union.anon.4* %35 to %struct.raw_spinlock*, !dbg !4978
  %36 = load i32, i32* %si_code, align 4, !dbg !4979
  %tobool38 = icmp ne i32 %36, 0, !dbg !4979
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !4981

if.then39:                                        ; preds = %if.end36
  %37 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !4982
  %async_queue = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %37, i32 0, i32 23, !dbg !4983
  %38 = load i32, i32* %si_code, align 4, !dbg !4984
  call void @kill_fasync(%struct.fasync_struct** %async_queue, i32 29, i32 %38) #11, !dbg !4985
  br label %if.end40, !dbg !4985

if.end40:                                         ; preds = %if.then, %if.then39, %if.end36
  ret void, !dbg !4986
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !4987 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !4991, metadata !DIExpression()), !dbg !4992
  %call = call i64 @arch_local_save_flags() #11, !dbg !4993
  store i64 %call, i64* %f, align 8, !dbg !4994
  call void @arch_local_irq_disable() #11, !dbg !4995
  %0 = load i64, i64* %f, align 8, !dbg !4996
  ret i64 %0, !dbg !4997
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__comedi_is_subdevice_running(%struct.comedi_subdevice* %s) #0 !dbg !4998 {
entry:
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %runflags = alloca i32, align 4
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !4999, metadata !DIExpression()), !dbg !5000
  call void @llvm.dbg.declare(metadata i32* %runflags, metadata !5001, metadata !DIExpression()), !dbg !5002
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !5003
  %call = call i32 @__comedi_get_subdevice_runflags(%struct.comedi_subdevice* %0) #11, !dbg !5004
  store i32 %call, i32* %runflags, align 4, !dbg !5002
  %1 = load i32, i32* %runflags, align 4, !dbg !5005
  %call1 = call zeroext i1 @comedi_is_runflags_running(i32 %1) #11, !dbg !5006
  ret i1 %call1, !dbg !5007
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__comedi_clear_subdevice_runflags(%struct.comedi_subdevice* %s, i32 %bits) #0 !dbg !5008 {
entry:
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %bits.addr = alloca i32, align 4
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !5009, metadata !DIExpression()), !dbg !5010
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !5011, metadata !DIExpression()), !dbg !5012
  %0 = load i32, i32* %bits.addr, align 4, !dbg !5013
  %neg = xor i32 %0, -1, !dbg !5014
  %1 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !5015
  %runflags = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %1, i32 0, i32 10, !dbg !5016
  %2 = load i32, i32* %runflags, align 8, !dbg !5017
  %and = and i32 %2, %neg, !dbg !5017
  store i32 %and, i32* %runflags, align 8, !dbg !5017
  ret void, !dbg !5018
}

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #2

; Function Attrs: noredzone
declare dso_local void @kill_fasync(%struct.fasync_struct**, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.comedi_device* @comedi_alloc_board_minor(%struct.device* %hardware_device) #0 !dbg !5019 {
entry:
  %retval = alloca %struct.comedi_device*, align 8
  %hardware_device.addr = alloca %struct.device*, align 8
  %dev = alloca %struct.comedi_device*, align 8
  %csdev = alloca %struct.device*, align 8
  %i = alloca i32, align 4
  store %struct.device* %hardware_device, %struct.device** %hardware_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %hardware_device.addr, metadata !5022, metadata !DIExpression()), !dbg !5023
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !5024, metadata !DIExpression()), !dbg !5025
  call void @llvm.dbg.declare(metadata %struct.device** %csdev, metadata !5026, metadata !DIExpression()), !dbg !5027
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5028, metadata !DIExpression()), !dbg !5029
  %call = call i8* @kzalloc(i64 240, i32 3264) #11, !dbg !5030
  %0 = bitcast i8* %call to %struct.comedi_device*, !dbg !5030
  store %struct.comedi_device* %0, %struct.comedi_device** %dev, align 8, !dbg !5031
  %1 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5032
  %tobool = icmp ne %struct.comedi_device* %1, null, !dbg !5032
  br i1 %tobool, label %if.end, label %if.then, !dbg !5034

if.then:                                          ; preds = %entry
  %call1 = call i8* @ERR_PTR(i64 -12) #11, !dbg !5035
  %2 = bitcast i8* %call1 to %struct.comedi_device*, !dbg !5035
  store %struct.comedi_device* %2, %struct.comedi_device** %retval, align 8, !dbg !5036
  br label %return, !dbg !5036

if.end:                                           ; preds = %entry
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5037
  call void @comedi_device_init(%struct.comedi_device* %3) #11, !dbg !5038
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5039
  %5 = load %struct.device*, %struct.device** %hardware_device.addr, align 8, !dbg !5040
  %call2 = call i32 @comedi_set_hw_dev(%struct.comedi_device* %4, %struct.device* %5) #11, !dbg !5041
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5042
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %6, i32 0, i32 12, !dbg !5043
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !5044
  call void @mutex_lock(%struct.mutex* @comedi_board_minor_table_lock) #11, !dbg !5045
  %7 = load %struct.device*, %struct.device** %hardware_device.addr, align 8, !dbg !5046
  %tobool3 = icmp ne %struct.device* %7, null, !dbg !5046
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !5046

cond.true:                                        ; preds = %if.end
  %8 = load i16, i16* @comedi_num_legacy_minors, align 2, !dbg !5048
  %conv = zext i16 %8 to i32, !dbg !5048
  br label %cond.end, !dbg !5046

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !5046

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 0, %cond.false ], !dbg !5046
  store i32 %cond, i32* %i, align 4, !dbg !5049
  br label %for.cond, !dbg !5050

for.cond:                                         ; preds = %for.inc, %cond.end
  %9 = load i32, i32* %i, align 4, !dbg !5051
  %cmp = icmp ult i32 %9, 48, !dbg !5053
  br i1 %cmp, label %for.body, label %for.end, !dbg !5054

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %i, align 4, !dbg !5055
  %idxprom = zext i32 %10 to i64, !dbg !5058
  %arrayidx = getelementptr [48 x %struct.comedi_device*], [48 x %struct.comedi_device*]* @comedi_board_minor_table, i64 0, i64 %idxprom, !dbg !5058
  %11 = load %struct.comedi_device*, %struct.comedi_device** %arrayidx, align 8, !dbg !5058
  %tobool5 = icmp ne %struct.comedi_device* %11, null, !dbg !5058
  br i1 %tobool5, label %if.end9, label %if.then6, !dbg !5059

if.then6:                                         ; preds = %for.body
  %12 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5060
  %13 = load i32, i32* %i, align 4, !dbg !5062
  %idxprom7 = zext i32 %13 to i64, !dbg !5063
  %arrayidx8 = getelementptr [48 x %struct.comedi_device*], [48 x %struct.comedi_device*]* @comedi_board_minor_table, i64 0, i64 %idxprom7, !dbg !5063
  store %struct.comedi_device* %12, %struct.comedi_device** %arrayidx8, align 8, !dbg !5064
  br label %for.end, !dbg !5065

if.end9:                                          ; preds = %for.body
  br label %for.inc, !dbg !5066

for.inc:                                          ; preds = %if.end9
  %14 = load i32, i32* %i, align 4, !dbg !5067
  %inc = add i32 %14, 1, !dbg !5067
  store i32 %inc, i32* %i, align 4, !dbg !5067
  br label %for.cond, !dbg !5068, !llvm.loop !5069

for.end:                                          ; preds = %if.then6, %for.cond
  call void @mutex_unlock(%struct.mutex* @comedi_board_minor_table_lock) #11, !dbg !5071
  %15 = load i32, i32* %i, align 4, !dbg !5072
  %cmp10 = icmp eq i32 %15, 48, !dbg !5074
  br i1 %cmp10, label %if.then12, label %if.end16, !dbg !5075

if.then12:                                        ; preds = %for.end
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5076
  %mutex13 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %16, i32 0, i32 12, !dbg !5078
  call void @mutex_unlock(%struct.mutex* %mutex13) #11, !dbg !5079
  %17 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5080
  call void @comedi_device_cleanup(%struct.comedi_device* %17) #11, !dbg !5081
  %18 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5082
  %call14 = call i32 @comedi_dev_put(%struct.comedi_device* %18) #11, !dbg !5083
  %19 = load %struct.device*, %struct.device** %hardware_device.addr, align 8, !dbg !5084
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %19, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0)) #14, !dbg !5084
  %call15 = call i8* @ERR_PTR(i64 -16) #11, !dbg !5085
  %20 = bitcast i8* %call15 to %struct.comedi_device*, !dbg !5085
  store %struct.comedi_device* %20, %struct.comedi_device** %retval, align 8, !dbg !5086
  br label %return, !dbg !5086

if.end16:                                         ; preds = %for.end
  %21 = load i32, i32* %i, align 4, !dbg !5087
  %22 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5088
  %minor = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %22, i32 0, i32 5, !dbg !5089
  store i32 %21, i32* %minor, align 8, !dbg !5090
  %23 = load %struct.class*, %struct.class** @comedi_class, align 8, !dbg !5091
  %24 = load %struct.device*, %struct.device** %hardware_device.addr, align 8, !dbg !5092
  %25 = load i32, i32* %i, align 4, !dbg !5093
  %or = or i32 102760448, %25, !dbg !5093
  %26 = load i32, i32* %i, align 4, !dbg !5094
  %call17 = call %struct.device* (%struct.class*, %struct.device*, i32, i8*, i8*, ...) @device_create(%struct.class* %23, %struct.device* %24, i32 %or, i8* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 %26) #11, !dbg !5095
  store %struct.device* %call17, %struct.device** %csdev, align 8, !dbg !5096
  %27 = load %struct.device*, %struct.device** %csdev, align 8, !dbg !5097
  %28 = bitcast %struct.device* %27 to i8*, !dbg !5097
  %call18 = call zeroext i1 @IS_ERR(i8* %28) #11, !dbg !5099
  br i1 %call18, label %if.end21, label %if.then19, !dbg !5100

if.then19:                                        ; preds = %if.end16
  %29 = load %struct.device*, %struct.device** %csdev, align 8, !dbg !5101
  %call20 = call %struct.device* @get_device(%struct.device* %29) #11, !dbg !5102
  %30 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5103
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %30, i32 0, i32 4, !dbg !5104
  store %struct.device* %call20, %struct.device** %class_dev, align 8, !dbg !5105
  br label %if.end21, !dbg !5103

if.end21:                                         ; preds = %if.then19, %if.end16
  %31 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5106
  store %struct.comedi_device* %31, %struct.comedi_device** %retval, align 8, !dbg !5107
  br label %return, !dbg !5107

return:                                           ; preds = %if.end21, %if.then12, %if.then
  %32 = load %struct.comedi_device*, %struct.comedi_device** %retval, align 8, !dbg !5108
  ret %struct.comedi_device* %32, !dbg !5108
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !5109 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !5113, metadata !DIExpression()), !dbg !5114
  %0 = load i64, i64* %error.addr, align 8, !dbg !5115
  %1 = inttoptr i64 %0 to i8*, !dbg !5116
  ret i8* %1, !dbg !5117
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @comedi_device_init(%struct.comedi_device* %dev) #0 !dbg !4220 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4402, metadata !DIExpression()), !dbg !5118
  %dev.addr = alloca %struct.comedi_device*, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !5121, metadata !DIExpression()), !dbg !5122
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5123
  %refcount = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 14, !dbg !5124
  call void @kref_init(%struct.kref* %refcount) #11, !dbg !5125
  br label %do.body, !dbg !5126

do.body:                                          ; preds = %entry
  %1 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5127
  %spinlock = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %1, i32 0, i32 11, !dbg !5127
  store %struct.spinlock* %spinlock, %struct.spinlock** %lock.addr.i, align 8
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5128
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !5129
  %rlock.i = bitcast %union.anon.4* %3 to %struct.raw_spinlock*, !dbg !5129
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5127
  %spinlock1 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %4, i32 0, i32 11, !dbg !5127
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !5127
  %rlock = bitcast %union.anon.4* %5 to %struct.raw_spinlock*, !dbg !5127
  %6 = bitcast %struct.spinlock* %spinlock1 to i8*, !dbg !5127
  %7 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !5127
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 0, i1 false), !dbg !5127
  br label %do.end, !dbg !5127

do.end:                                           ; preds = %do.body
  br label %do.body2, !dbg !5130

do.body2:                                         ; preds = %do.end
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5131
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %8, i32 0, i32 12, !dbg !5131
  call void @__mutex_init(%struct.mutex* %mutex, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), %struct.lock_class_key* @comedi_device_init.__key) #11, !dbg !5131
  br label %do.end3, !dbg !5131

do.end3:                                          ; preds = %do.body2
  br label %do.body4, !dbg !5133

do.body4:                                         ; preds = %do.end3
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5134
  %attach_lock = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %9, i32 0, i32 13, !dbg !5134
  call void @__init_rwsem(%struct.rw_semaphore* %attach_lock, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), %struct.lock_class_key* @comedi_device_init.__key.7) #11, !dbg !5134
  br label %do.end5, !dbg !5134

do.end5:                                          ; preds = %do.body4
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5136
  %minor = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %10, i32 0, i32 5, !dbg !5137
  store i32 -1, i32* %minor, align 8, !dbg !5138
  ret void, !dbg !5139
}

; Function Attrs: noredzone
declare dso_local i32 @comedi_set_hw_dev(%struct.comedi_device*, %struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @comedi_device_cleanup(%struct.comedi_device* %dev) #0 !dbg !5140 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %driver_module = alloca %struct.module*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !5141, metadata !DIExpression()), !dbg !5142
  call void @llvm.dbg.declare(metadata %struct.module** %driver_module, metadata !5143, metadata !DIExpression()), !dbg !5144
  store %struct.module* null, %struct.module** %driver_module, align 8, !dbg !5144
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5145
  %tobool = icmp ne %struct.comedi_device* %0, null, !dbg !5145
  br i1 %tobool, label %if.end, label %if.then, !dbg !5147

if.then:                                          ; preds = %entry
  br label %return, !dbg !5148

if.end:                                           ; preds = %entry
  %1 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5149
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %1, i32 0, i32 12, !dbg !5150
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !5151
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5152
  %attached = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %2, i32 0, i32 10, !dbg !5154
  %bf.load = load i8, i8* %attached, align 8, !dbg !5154
  %bf.clear = and i8 %bf.load, 1, !dbg !5154
  %bf.cast = zext i8 %bf.clear to i32, !dbg !5154
  %tobool1 = icmp ne i32 %bf.cast, 0, !dbg !5152
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !5155

if.then2:                                         ; preds = %if.end
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5156
  %driver = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 1, !dbg !5157
  %4 = load %struct.comedi_driver*, %struct.comedi_driver** %driver, align 8, !dbg !5157
  %module = getelementptr inbounds %struct.comedi_driver, %struct.comedi_driver* %4, i32 0, i32 2, !dbg !5158
  %5 = load %struct.module*, %struct.module** %module, align 8, !dbg !5158
  store %struct.module* %5, %struct.module** %driver_module, align 8, !dbg !5159
  br label %if.end3, !dbg !5160

if.end3:                                          ; preds = %if.then2, %if.end
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5161
  call void @comedi_device_detach(%struct.comedi_device* %6) #11, !dbg !5162
  %7 = load %struct.module*, %struct.module** %driver_module, align 8, !dbg !5163
  %tobool4 = icmp ne %struct.module* %7, null, !dbg !5163
  br i1 %tobool4, label %land.lhs.true, label %if.end7, !dbg !5165

land.lhs.true:                                    ; preds = %if.end3
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5166
  %use_count = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %8, i32 0, i32 0, !dbg !5167
  %9 = load i32, i32* %use_count, align 8, !dbg !5167
  %tobool5 = icmp ne i32 %9, 0, !dbg !5166
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !5168

if.then6:                                         ; preds = %land.lhs.true
  %10 = load %struct.module*, %struct.module** %driver_module, align 8, !dbg !5169
  call void @module_put(%struct.module* %10) #11, !dbg !5170
  br label %if.end7, !dbg !5170

if.end7:                                          ; preds = %if.then6, %land.lhs.true, %if.end3
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5171
  %mutex8 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %11, i32 0, i32 12, !dbg !5172
  call void @mutex_unlock(%struct.mutex* %mutex8) #11, !dbg !5173
  br label %return, !dbg !5174

return:                                           ; preds = %if.end7, %if.then
  ret void, !dbg !5174
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local %struct.device* @device_create(%struct.class*, %struct.device*, i32, i8*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !5175 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5178, metadata !DIExpression()), !dbg !5179
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5180
  %1 = ptrtoint i8* %0 to i64, !dbg !5180
  %2 = inttoptr i64 %1 to i8*, !dbg !5180
  %3 = ptrtoint i8* %2 to i64, !dbg !5180
  %cmp = icmp uge i64 %3, -4095, !dbg !5180
  %lnot = xor i1 %cmp, true, !dbg !5180
  %lnot1 = xor i1 %lnot, true, !dbg !5180
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5180
  %conv = sext i32 %lnot.ext to i64, !dbg !5180
  %tobool = icmp ne i64 %conv, 0, !dbg !5180
  ret i1 %tobool, !dbg !5181
}

; Function Attrs: noredzone
declare dso_local %struct.device* @get_device(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @comedi_release_hardware_device(%struct.device* %hardware_device) #0 !dbg !5182 {
entry:
  %hardware_device.addr = alloca %struct.device*, align 8
  %minor = alloca i32, align 4
  %dev = alloca %struct.comedi_device*, align 8
  store %struct.device* %hardware_device, %struct.device** %hardware_device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %hardware_device.addr, metadata !5183, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.declare(metadata i32* %minor, metadata !5185, metadata !DIExpression()), !dbg !5186
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !5187, metadata !DIExpression()), !dbg !5188
  %0 = load i16, i16* @comedi_num_legacy_minors, align 2, !dbg !5189
  %conv = zext i16 %0 to i32, !dbg !5189
  store i32 %conv, i32* %minor, align 4, !dbg !5191
  br label %for.cond, !dbg !5192

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %minor, align 4, !dbg !5193
  %cmp = icmp slt i32 %1, 48, !dbg !5195
  br i1 %cmp, label %for.body, label %for.end, !dbg !5196

for.body:                                         ; preds = %for.cond
  call void @mutex_lock(%struct.mutex* @comedi_board_minor_table_lock) #11, !dbg !5197
  %2 = load i32, i32* %minor, align 4, !dbg !5199
  %idxprom = sext i32 %2 to i64, !dbg !5200
  %arrayidx = getelementptr [48 x %struct.comedi_device*], [48 x %struct.comedi_device*]* @comedi_board_minor_table, i64 0, i64 %idxprom, !dbg !5200
  %3 = load %struct.comedi_device*, %struct.comedi_device** %arrayidx, align 8, !dbg !5200
  store %struct.comedi_device* %3, %struct.comedi_device** %dev, align 8, !dbg !5201
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5202
  %tobool = icmp ne %struct.comedi_device* %4, null, !dbg !5202
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5204

land.lhs.true:                                    ; preds = %for.body
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5205
  %hw_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %5, i32 0, i32 7, !dbg !5206
  %6 = load %struct.device*, %struct.device** %hw_dev, align 8, !dbg !5206
  %7 = load %struct.device*, %struct.device** %hardware_device.addr, align 8, !dbg !5207
  %cmp2 = icmp eq %struct.device* %6, %7, !dbg !5208
  br i1 %cmp2, label %if.then, label %if.end, !dbg !5209

if.then:                                          ; preds = %land.lhs.true
  %8 = load i32, i32* %minor, align 4, !dbg !5210
  %idxprom4 = sext i32 %8 to i64, !dbg !5212
  %arrayidx5 = getelementptr [48 x %struct.comedi_device*], [48 x %struct.comedi_device*]* @comedi_board_minor_table, i64 0, i64 %idxprom4, !dbg !5212
  store %struct.comedi_device* null, %struct.comedi_device** %arrayidx5, align 8, !dbg !5213
  call void @mutex_unlock(%struct.mutex* @comedi_board_minor_table_lock) #11, !dbg !5214
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5215
  call void @comedi_free_board_dev(%struct.comedi_device* %9) #11, !dbg !5216
  br label %for.end, !dbg !5217

if.end:                                           ; preds = %land.lhs.true, %for.body
  call void @mutex_unlock(%struct.mutex* @comedi_board_minor_table_lock) #11, !dbg !5218
  br label %for.inc, !dbg !5219

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %minor, align 4, !dbg !5220
  %inc = add i32 %10, 1, !dbg !5220
  store i32 %inc, i32* %minor, align 4, !dbg !5220
  br label %for.cond, !dbg !5221, !llvm.loop !5222

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !5224
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @comedi_free_board_dev(%struct.comedi_device* %dev) #0 !dbg !5225 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !5226, metadata !DIExpression()), !dbg !5227
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5228
  %tobool = icmp ne %struct.comedi_device* %0, null, !dbg !5228
  br i1 %tobool, label %if.then, label %if.end3, !dbg !5230

if.then:                                          ; preds = %entry
  %1 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5231
  call void @comedi_device_cleanup(%struct.comedi_device* %1) #11, !dbg !5233
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5234
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %2, i32 0, i32 4, !dbg !5236
  %3 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !5236
  %tobool1 = icmp ne %struct.device* %3, null, !dbg !5234
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !5237

if.then2:                                         ; preds = %if.then
  %4 = load %struct.class*, %struct.class** @comedi_class, align 8, !dbg !5238
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5240
  %minor = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %5, i32 0, i32 5, !dbg !5240
  %6 = load i32, i32* %minor, align 8, !dbg !5240
  %or = or i32 102760448, %6, !dbg !5240
  call void @device_destroy(%struct.class* %4, i32 %or) #11, !dbg !5241
  br label %if.end, !dbg !5242

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5243
  %call = call i32 @comedi_dev_put(%struct.comedi_device* %7) #11, !dbg !5244
  br label %if.end3, !dbg !5245

if.end3:                                          ; preds = %if.end, %entry
  ret void, !dbg !5246
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @comedi_alloc_subdevice_minor(%struct.comedi_subdevice* %s) #0 !dbg !5247 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %dev = alloca %struct.comedi_device*, align 8
  %csdev = alloca %struct.device*, align 8
  %i = alloca i32, align 4
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !5250, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !5252, metadata !DIExpression()), !dbg !5253
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !5254
  %device = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %0, i32 0, i32 0, !dbg !5255
  %1 = load %struct.comedi_device*, %struct.comedi_device** %device, align 8, !dbg !5255
  store %struct.comedi_device* %1, %struct.comedi_device** %dev, align 8, !dbg !5253
  call void @llvm.dbg.declare(metadata %struct.device** %csdev, metadata !5256, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5258, metadata !DIExpression()), !dbg !5259
  call void @mutex_lock(%struct.mutex* @comedi_subdevice_minor_table_lock) #11, !dbg !5260
  store i32 0, i32* %i, align 4, !dbg !5261
  br label %for.cond, !dbg !5263

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !5264
  %cmp = icmp ult i32 %2, 208, !dbg !5266
  br i1 %cmp, label %for.body, label %for.end, !dbg !5267

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !5268
  %idxprom = zext i32 %3 to i64, !dbg !5271
  %arrayidx = getelementptr [208 x %struct.comedi_subdevice*], [208 x %struct.comedi_subdevice*]* @comedi_subdevice_minor_table, i64 0, i64 %idxprom, !dbg !5271
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %arrayidx, align 8, !dbg !5271
  %tobool = icmp ne %struct.comedi_subdevice* %4, null, !dbg !5271
  br i1 %tobool, label %if.end, label %if.then, !dbg !5272

if.then:                                          ; preds = %for.body
  %5 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !5273
  %6 = load i32, i32* %i, align 4, !dbg !5275
  %idxprom1 = zext i32 %6 to i64, !dbg !5276
  %arrayidx2 = getelementptr [208 x %struct.comedi_subdevice*], [208 x %struct.comedi_subdevice*]* @comedi_subdevice_minor_table, i64 0, i64 %idxprom1, !dbg !5276
  store %struct.comedi_subdevice* %5, %struct.comedi_subdevice** %arrayidx2, align 8, !dbg !5277
  br label %for.end, !dbg !5278

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5279

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !5280
  %inc = add i32 %7, 1, !dbg !5280
  store i32 %inc, i32* %i, align 4, !dbg !5280
  br label %for.cond, !dbg !5281, !llvm.loop !5282

for.end:                                          ; preds = %if.then, %for.cond
  call void @mutex_unlock(%struct.mutex* @comedi_subdevice_minor_table_lock) #11, !dbg !5284
  %8 = load i32, i32* %i, align 4, !dbg !5285
  %cmp3 = icmp eq i32 %8, 208, !dbg !5287
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !5288

if.then4:                                         ; preds = %for.end
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5289
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %9, i32 0, i32 4, !dbg !5289
  %10 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !5289
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %10, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0)) #14, !dbg !5289
  store i32 -16, i32* %retval, align 4, !dbg !5291
  br label %return, !dbg !5291

if.end5:                                          ; preds = %for.end
  %11 = load i32, i32* %i, align 4, !dbg !5292
  %add = add i32 %11, 48, !dbg !5292
  store i32 %add, i32* %i, align 4, !dbg !5292
  %12 = load i32, i32* %i, align 4, !dbg !5293
  %13 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !5294
  %minor = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %13, i32 0, i32 31, !dbg !5295
  store i32 %12, i32* %minor, align 8, !dbg !5296
  %14 = load %struct.class*, %struct.class** @comedi_class, align 8, !dbg !5297
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5298
  %class_dev6 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %15, i32 0, i32 4, !dbg !5299
  %16 = load %struct.device*, %struct.device** %class_dev6, align 8, !dbg !5299
  %17 = load i32, i32* %i, align 4, !dbg !5300
  %or = or i32 102760448, %17, !dbg !5300
  %18 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5301
  %minor7 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %18, i32 0, i32 5, !dbg !5302
  %19 = load i32, i32* %minor7, align 8, !dbg !5302
  %20 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !5303
  %index = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %20, i32 0, i32 1, !dbg !5304
  %21 = load i32, i32* %index, align 8, !dbg !5304
  %call = call %struct.device* (%struct.class*, %struct.device*, i32, i8*, i8*, ...) @device_create(%struct.class* %14, %struct.device* %16, i32 %or, i8* null, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i32 %19, i32 %21) #11, !dbg !5305
  store %struct.device* %call, %struct.device** %csdev, align 8, !dbg !5306
  %22 = load %struct.device*, %struct.device** %csdev, align 8, !dbg !5307
  %23 = bitcast %struct.device* %22 to i8*, !dbg !5307
  %call8 = call zeroext i1 @IS_ERR(i8* %23) #11, !dbg !5309
  br i1 %call8, label %if.end11, label %if.then9, !dbg !5310

if.then9:                                         ; preds = %if.end5
  %24 = load %struct.device*, %struct.device** %csdev, align 8, !dbg !5311
  %25 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !5312
  %class_dev10 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %25, i32 0, i32 30, !dbg !5313
  store %struct.device* %24, %struct.device** %class_dev10, align 8, !dbg !5314
  br label %if.end11, !dbg !5312

if.end11:                                         ; preds = %if.then9, %if.end5
  store i32 0, i32* %retval, align 4, !dbg !5315
  br label %return, !dbg !5315

return:                                           ; preds = %if.end11, %if.then4
  %26 = load i32, i32* %retval, align 4, !dbg !5316
  ret i32 %26, !dbg !5316
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @comedi_free_subdevice_minor(%struct.comedi_subdevice* %s) #0 !dbg !5317 {
entry:
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %i = alloca i32, align 4
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !5318, metadata !DIExpression()), !dbg !5319
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5320, metadata !DIExpression()), !dbg !5321
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !5322
  %tobool = icmp ne %struct.comedi_subdevice* %0, null, !dbg !5322
  br i1 %tobool, label %if.end, label %if.then, !dbg !5324

if.then:                                          ; preds = %entry
  br label %if.end15, !dbg !5325

if.end:                                           ; preds = %entry
  %1 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !5326
  %minor = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %1, i32 0, i32 31, !dbg !5328
  %2 = load i32, i32* %minor, align 8, !dbg !5328
  %cmp = icmp slt i32 %2, 48, !dbg !5329
  br i1 %cmp, label %if.then3, label %lor.lhs.false, !dbg !5330

lor.lhs.false:                                    ; preds = %if.end
  %3 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !5331
  %minor1 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %3, i32 0, i32 31, !dbg !5332
  %4 = load i32, i32* %minor1, align 8, !dbg !5332
  %cmp2 = icmp sge i32 %4, 256, !dbg !5333
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !5334

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  br label %if.end15, !dbg !5335

if.end4:                                          ; preds = %lor.lhs.false
  %5 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !5336
  %minor5 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %5, i32 0, i32 31, !dbg !5337
  %6 = load i32, i32* %minor5, align 8, !dbg !5337
  %sub = sub i32 %6, 48, !dbg !5338
  store i32 %sub, i32* %i, align 4, !dbg !5339
  call void @mutex_lock(%struct.mutex* @comedi_subdevice_minor_table_lock) #11, !dbg !5340
  %7 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !5341
  %8 = load i32, i32* %i, align 4, !dbg !5343
  %idxprom = zext i32 %8 to i64, !dbg !5344
  %arrayidx = getelementptr [208 x %struct.comedi_subdevice*], [208 x %struct.comedi_subdevice*]* @comedi_subdevice_minor_table, i64 0, i64 %idxprom, !dbg !5344
  %9 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %arrayidx, align 8, !dbg !5344
  %cmp6 = icmp eq %struct.comedi_subdevice* %7, %9, !dbg !5345
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !5346

if.then7:                                         ; preds = %if.end4
  %10 = load i32, i32* %i, align 4, !dbg !5347
  %idxprom8 = zext i32 %10 to i64, !dbg !5348
  %arrayidx9 = getelementptr [208 x %struct.comedi_subdevice*], [208 x %struct.comedi_subdevice*]* @comedi_subdevice_minor_table, i64 0, i64 %idxprom8, !dbg !5348
  store %struct.comedi_subdevice* null, %struct.comedi_subdevice** %arrayidx9, align 8, !dbg !5349
  br label %if.end10, !dbg !5348

if.end10:                                         ; preds = %if.then7, %if.end4
  call void @mutex_unlock(%struct.mutex* @comedi_subdevice_minor_table_lock) #11, !dbg !5350
  %11 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !5351
  %class_dev = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %11, i32 0, i32 30, !dbg !5353
  %12 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !5353
  %tobool11 = icmp ne %struct.device* %12, null, !dbg !5351
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !5354

if.then12:                                        ; preds = %if.end10
  %13 = load %struct.class*, %struct.class** @comedi_class, align 8, !dbg !5355
  %14 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !5357
  %minor13 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %14, i32 0, i32 31, !dbg !5357
  %15 = load i32, i32* %minor13, align 8, !dbg !5357
  %or = or i32 102760448, %15, !dbg !5357
  call void @device_destroy(%struct.class* %13, i32 %or) #11, !dbg !5358
  %16 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !5359
  %class_dev14 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %16, i32 0, i32 30, !dbg !5360
  store %struct.device* null, %struct.device** %class_dev14, align 8, !dbg !5361
  br label %if.end15, !dbg !5362

if.end15:                                         ; preds = %if.then, %if.then3, %if.then12, %if.end10
  ret void, !dbg !5363
}

; Function Attrs: noredzone
declare dso_local void @device_destroy(%struct.class*, i32) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_init() #4 section ".init.text" !dbg !4229 {
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %tmp = alloca %struct.class*, align 8
  %dev = alloca %struct.comedi_device*, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5364, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !5366, metadata !DIExpression()), !dbg !5367
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.9, i64 0, i64 0)) #14, !dbg !5368
  %0 = load i16, i16* @comedi_num_legacy_minors, align 2, !dbg !5369
  %conv = zext i16 %0 to i32, !dbg !5369
  %cmp = icmp sgt i32 %conv, 48, !dbg !5371
  br i1 %cmp, label %if.then, label %if.end, !dbg !5372

if.then:                                          ; preds = %entry
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([106 x i8], [106 x i8]* @.str.10, i64 0, i64 0), i32 48) #14, !dbg !5373
  store i32 -22, i32* %retval, align 4, !dbg !5375
  br label %return, !dbg !5375

if.end:                                           ; preds = %entry
  %call4 = call i32 @register_chrdev_region(i32 102760448, i32 256, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0)) #11, !dbg !5376
  store i32 %call4, i32* %retval1, align 4, !dbg !5377
  %1 = load i32, i32* %retval1, align 4, !dbg !5378
  %tobool = icmp ne i32 %1, 0, !dbg !5378
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !5380

if.then5:                                         ; preds = %if.end
  %2 = load i32, i32* %retval1, align 4, !dbg !5381
  store i32 %2, i32* %retval, align 4, !dbg !5382
  br label %return, !dbg !5382

if.end6:                                          ; preds = %if.end
  call void @cdev_init(%struct.cdev* @comedi_cdev, %struct.file_operations* @comedi_fops) #11, !dbg !5383
  store %struct.module* null, %struct.module** getelementptr inbounds (%struct.cdev, %struct.cdev* @comedi_cdev, i32 0, i32 1), align 8, !dbg !5384
  %call7 = call i32 (%struct.kobject*, i8*, ...) @kobject_set_name(%struct.kobject* getelementptr inbounds (%struct.cdev, %struct.cdev* @comedi_cdev, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0)) #11, !dbg !5385
  store i32 %call7, i32* %retval1, align 4, !dbg !5386
  %3 = load i32, i32* %retval1, align 4, !dbg !5387
  %tobool8 = icmp ne i32 %3, 0, !dbg !5387
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !5389

if.then9:                                         ; preds = %if.end6
  br label %out_unregister_chrdev_region, !dbg !5390

if.end10:                                         ; preds = %if.end6
  %call11 = call i32 @cdev_add(%struct.cdev* @comedi_cdev, i32 102760448, i32 256) #11, !dbg !5391
  store i32 %call11, i32* %retval1, align 4, !dbg !5392
  %4 = load i32, i32* %retval1, align 4, !dbg !5393
  %tobool12 = icmp ne i32 %4, 0, !dbg !5393
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !5395

if.then13:                                        ; preds = %if.end10
  br label %out_unregister_chrdev_region, !dbg !5396

if.end14:                                         ; preds = %if.end10
  %call15 = call %struct.class* @__class_create(%struct.module* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), %struct.lock_class_key* @comedi_init.__key) #11, !dbg !5397
  store %struct.class* %call15, %struct.class** %tmp, align 8, !dbg !5397
  %5 = load %struct.class*, %struct.class** %tmp, align 8, !dbg !5397
  store %struct.class* %5, %struct.class** @comedi_class, align 8, !dbg !5399
  %6 = load %struct.class*, %struct.class** @comedi_class, align 8, !dbg !5400
  %7 = bitcast %struct.class* %6 to i8*, !dbg !5400
  %call16 = call zeroext i1 @IS_ERR(i8* %7) #11, !dbg !5402
  br i1 %call16, label %if.then17, label %if.end21, !dbg !5403

if.then17:                                        ; preds = %if.end14
  %8 = load %struct.class*, %struct.class** @comedi_class, align 8, !dbg !5404
  %9 = bitcast %struct.class* %8 to i8*, !dbg !5404
  %call18 = call i64 @PTR_ERR(i8* %9) #11, !dbg !5406
  %conv19 = trunc i64 %call18 to i32, !dbg !5406
  store i32 %conv19, i32* %retval1, align 4, !dbg !5407
  %call20 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12, i64 0, i64 0)) #14, !dbg !5408
  br label %out_cdev_del, !dbg !5409

if.end21:                                         ; preds = %if.end14
  %10 = load %struct.class*, %struct.class** @comedi_class, align 8, !dbg !5410
  %dev_groups = getelementptr inbounds %struct.class, %struct.class* %10, i32 0, i32 3, !dbg !5411
  store %struct.attribute_group** getelementptr inbounds ([2 x %struct.attribute_group*], [2 x %struct.attribute_group*]* @comedi_dev_groups, i64 0, i64 0), %struct.attribute_group*** %dev_groups, align 8, !dbg !5412
  store i32 0, i32* %i, align 4, !dbg !5413
  br label %for.cond, !dbg !5415

for.cond:                                         ; preds = %for.inc, %if.end21
  %11 = load i32, i32* %i, align 4, !dbg !5416
  %12 = load i16, i16* @comedi_num_legacy_minors, align 2, !dbg !5418
  %conv22 = zext i16 %12 to i32, !dbg !5418
  %cmp23 = icmp slt i32 %11, %conv22, !dbg !5419
  br i1 %cmp23, label %for.body, label %for.end, !dbg !5420

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !5421, metadata !DIExpression()), !dbg !5423
  %call25 = call %struct.comedi_device* @comedi_alloc_board_minor(%struct.device* null) #11, !dbg !5424
  store %struct.comedi_device* %call25, %struct.comedi_device** %dev, align 8, !dbg !5425
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5426
  %14 = bitcast %struct.comedi_device* %13 to i8*, !dbg !5426
  %call26 = call zeroext i1 @IS_ERR(i8* %14) #11, !dbg !5428
  br i1 %call26, label %if.then27, label %if.end30, !dbg !5429

if.then27:                                        ; preds = %for.body
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5430
  %16 = bitcast %struct.comedi_device* %15 to i8*, !dbg !5430
  %call28 = call i64 @PTR_ERR(i8* %16) #11, !dbg !5432
  %conv29 = trunc i64 %call28 to i32, !dbg !5432
  store i32 %conv29, i32* %retval1, align 4, !dbg !5433
  br label %out_cleanup_board_minors, !dbg !5434

if.end30:                                         ; preds = %for.body
  br label %do.body, !dbg !5435

do.body:                                          ; preds = %if.end30
  %17 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5436
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %17, i32 0, i32 12, !dbg !5436
  br label %do.end, !dbg !5436

do.end:                                           ; preds = %do.body
  %18 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5438
  %mutex31 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %18, i32 0, i32 12, !dbg !5439
  call void @mutex_unlock(%struct.mutex* %mutex31) #11, !dbg !5440
  br label %for.inc, !dbg !5441

for.inc:                                          ; preds = %do.end
  %19 = load i32, i32* %i, align 4, !dbg !5442
  %inc = add i32 %19, 1, !dbg !5442
  store i32 %inc, i32* %i, align 4, !dbg !5442
  br label %for.cond, !dbg !5443, !llvm.loop !5444

for.end:                                          ; preds = %for.cond
  call void @comedi_proc_init() #11, !dbg !5446
  store i32 0, i32* %retval, align 4, !dbg !5447
  br label %return, !dbg !5447

out_cleanup_board_minors:                         ; preds = %if.then27
  call void @llvm.dbg.label(metadata !5448), !dbg !5449
  call void @comedi_cleanup_board_minors() #11, !dbg !5450
  %20 = load %struct.class*, %struct.class** @comedi_class, align 8, !dbg !5451
  call void @class_destroy(%struct.class* %20) #11, !dbg !5452
  br label %out_cdev_del, !dbg !5452

out_cdev_del:                                     ; preds = %out_cleanup_board_minors, %if.then17
  call void @llvm.dbg.label(metadata !5453), !dbg !5454
  call void @cdev_del(%struct.cdev* @comedi_cdev) #11, !dbg !5455
  br label %out_unregister_chrdev_region, !dbg !5455

out_unregister_chrdev_region:                     ; preds = %out_cdev_del, %if.then13, %if.then9
  call void @llvm.dbg.label(metadata !5456), !dbg !5457
  call void @unregister_chrdev_region(i32 102760448, i32 256) #11, !dbg !5458
  %21 = load i32, i32* %retval1, align 4, !dbg !5459
  store i32 %21, i32* %retval, align 4, !dbg !5460
  br label %return, !dbg !5460

return:                                           ; preds = %out_unregister_chrdev_region, %for.end, %if.then5, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !5461
  ret i32 %22, !dbg !5461
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @comedi_cleanup() #4 section ".exit.text" !dbg !5462 {
entry:
  call void @comedi_cleanup_board_minors() #11, !dbg !5463
  %0 = load %struct.class*, %struct.class** @comedi_class, align 8, !dbg !5464
  call void @class_destroy(%struct.class* %0) #11, !dbg !5465
  call void @cdev_del(%struct.cdev* @comedi_cdev) #11, !dbg !5466
  call void @unregister_chrdev_region(i32 102760448, i32 256) #11, !dbg !5467
  call void @comedi_proc_cleanup() #11, !dbg !5468
  ret void, !dbg !5469
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @comedi_cleanup_board_minors() #0 !dbg !5470 {
entry:
  %dev = alloca %struct.comedi_device*, align 8
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !5471, metadata !DIExpression()), !dbg !5472
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5473, metadata !DIExpression()), !dbg !5474
  store i32 0, i32* %i, align 4, !dbg !5475
  br label %for.cond, !dbg !5477

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5478
  %cmp = icmp ult i32 %0, 48, !dbg !5480
  br i1 %cmp, label %for.body, label %for.end, !dbg !5481

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !5482
  %call = call %struct.comedi_device* @comedi_clear_board_minor(i32 %1) #11, !dbg !5484
  store %struct.comedi_device* %call, %struct.comedi_device** %dev, align 8, !dbg !5485
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !5486
  call void @comedi_free_board_dev(%struct.comedi_device* %2) #11, !dbg !5487
  br label %for.inc, !dbg !5488

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !5489
  %inc = add i32 %3, 1, !dbg !5489
  store i32 %inc, i32* %i, align 4, !dbg !5489
  br label %for.cond, !dbg !5490, !llvm.loop !5491

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5493
}

; Function Attrs: noredzone
declare dso_local void @class_destroy(%struct.class*) #2

; Function Attrs: noredzone
declare dso_local void @cdev_del(%struct.cdev*) #2

; Function Attrs: noredzone
declare dso_local void @unregister_chrdev_region(i32, i32) #2

; Function Attrs: noredzone
declare dso_local void @comedi_proc_cleanup() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @refcount_dec_and_test(%struct.refcount_struct* %r) #0 !dbg !5494 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !5498, metadata !DIExpression()), !dbg !5499
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !5500
  %call = call zeroext i1 @__refcount_dec_and_test(%struct.refcount_struct* %0, i32* null) #11, !dbg !5501
  ret i1 %call, !dbg !5502
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_dec_and_test(%struct.refcount_struct* %r, i32* %oldp) #0 !dbg !5503 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !5506, metadata !DIExpression()), !dbg !5507
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !5508, metadata !DIExpression()), !dbg !5509
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !5510
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !5511
  %call = call zeroext i1 @__refcount_sub_and_test(i32 1, %struct.refcount_struct* %0, i32* %1) #11, !dbg !5512
  ret i1 %call, !dbg !5513
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_sub_and_test(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #0 !dbg !5514 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !5517, metadata !DIExpression()), !dbg !5523
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5528, metadata !DIExpression()), !dbg !5529
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !5530, metadata !DIExpression()), !dbg !5532
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5533, metadata !DIExpression()), !dbg !5541
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5543, metadata !DIExpression()), !dbg !5544
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !5545, metadata !DIExpression()), !dbg !5546
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5547, metadata !DIExpression()), !dbg !5548
  %retval = alloca i1, align 1
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !5549, metadata !DIExpression()), !dbg !5550
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !5551, metadata !DIExpression()), !dbg !5552
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !5553, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.declare(metadata i32* %old, metadata !5555, metadata !DIExpression()), !dbg !5556
  %0 = load i32, i32* %i.addr, align 4, !dbg !5557
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !5558
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !5559
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5560
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !5560
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5561
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !5562
  %conv.i.i = trunc i64 %5 to i32, !dbg !5562
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #12, !dbg !5563
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5564
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5564
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #12, !dbg !5564
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !5565
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5566
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !5532
  %sub.i.i = sub i32 0, %10, !dbg !5532
  store i32 %sub.i.i, i32* %__ret.i.i, align 4, !dbg !5532
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !5532
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !5532
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !5532
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #9, !dbg !5532, !srcloc !5567
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !5532
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !5532
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !5532
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !5532
  store i32 %15, i32* %old, align 4, !dbg !5556
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !5568
  %tobool = icmp ne i32* %16, null, !dbg !5568
  br i1 %tobool, label %if.then, label %if.end, !dbg !5570

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !5571
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !5572
  store i32 %17, i32* %18, align 4, !dbg !5573
  br label %if.end, !dbg !5574

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !5575
  %20 = load i32, i32* %i.addr, align 4, !dbg !5577
  %cmp = icmp eq i32 %19, %20, !dbg !5578
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !5579

if.then1:                                         ; preds = %if.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !5580, !srcloc !5582
  store i1 true, i1* %retval, align 1, !dbg !5583
  br label %return, !dbg !5583

if.end2:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !5584
  %cmp3 = icmp slt i32 %21, 0, !dbg !5584
  br i1 %cmp3, label %lor.end, label %lor.rhs, !dbg !5584

lor.rhs:                                          ; preds = %if.end2
  %22 = load i32, i32* %old, align 4, !dbg !5584
  %23 = load i32, i32* %i.addr, align 4, !dbg !5584
  %sub = sub i32 %22, %23, !dbg !5584
  %cmp4 = icmp slt i32 %sub, 0, !dbg !5584
  br label %lor.end, !dbg !5584

lor.end:                                          ; preds = %lor.rhs, %if.end2
  %24 = phi i1 [ true, %if.end2 ], [ %cmp4, %lor.rhs ]
  %lnot = xor i1 %24, true, !dbg !5584
  %lnot5 = xor i1 %lnot, true, !dbg !5584
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !5584
  %conv = sext i32 %lnot.ext to i64, !dbg !5584
  %tobool6 = icmp ne i64 %conv, 0, !dbg !5584
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !5586

if.then7:                                         ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !5587
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 3) #11, !dbg !5588
  br label %if.end8, !dbg !5588

if.end8:                                          ; preds = %if.then7, %lor.end
  store i1 false, i1* %retval, align 1, !dbg !5589
  br label %return, !dbg !5589

return:                                           ; preds = %if.end8, %if.then1
  %26 = load i1, i1* %retval, align 1, !dbg !5590
  ret i1 %26, !dbg !5590
}

; Function Attrs: noredzone
declare dso_local void @refcount_warn_saturate(%struct.refcount_struct*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !5591 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5595, metadata !DIExpression()), !dbg !5596
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !5597, metadata !DIExpression()), !dbg !5598
  ret i1 true, !dbg !5599
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !5600 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5604, metadata !DIExpression()), !dbg !5605
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5606, metadata !DIExpression()), !dbg !5607
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !5608, metadata !DIExpression()), !dbg !5609
  ret void, !dbg !5610
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mutex_destroy(%struct.mutex* %lock) #0 !dbg !5611 {
entry:
  %lock.addr = alloca %struct.mutex*, align 8
  store %struct.mutex* %lock, %struct.mutex** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mutex** %lock.addr, metadata !5615, metadata !DIExpression()), !dbg !5616
  ret void, !dbg !5617
}

; Function Attrs: noredzone
declare dso_local void @put_device(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.comedi_device* @comedi_dev_get(%struct.comedi_device* %dev) #0 !dbg !5618 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !5621, metadata !DIExpression()), !dbg !5622
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5623
  %tobool = icmp ne %struct.comedi_device* %0, null, !dbg !5623
  br i1 %tobool, label %if.then, label %if.end, !dbg !5625

if.then:                                          ; preds = %entry
  %1 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5626
  %refcount = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %1, i32 0, i32 14, !dbg !5627
  call void @kref_get(%struct.kref* %refcount) #11, !dbg !5628
  br label %if.end, !dbg !5628

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5629
  ret %struct.comedi_device* %2, !dbg !5630
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kref_get(%struct.kref* %kref) #0 !dbg !5631 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !5632, metadata !DIExpression()), !dbg !5633
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !5634
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !5635
  call void @refcount_inc(%struct.refcount_struct* %refcount) #11, !dbg !5636
  ret void, !dbg !5637
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_inc(%struct.refcount_struct* %r) #0 !dbg !5638 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !5641, metadata !DIExpression()), !dbg !5642
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !5643
  call void @__refcount_inc(%struct.refcount_struct* %0, i32* null) #11, !dbg !5644
  ret void, !dbg !5645
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_inc(%struct.refcount_struct* %r, i32* %oldp) #0 !dbg !5646 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !5649, metadata !DIExpression()), !dbg !5650
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !5651, metadata !DIExpression()), !dbg !5652
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !5653
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !5654
  call void @__refcount_add(i32 1, %struct.refcount_struct* %0, i32* %1) #11, !dbg !5655
  ret void, !dbg !5656
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_add(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #0 !dbg !5657 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !5660, metadata !DIExpression()), !dbg !5662
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5666, metadata !DIExpression()), !dbg !5667
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !5668, metadata !DIExpression()), !dbg !5670
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5533, metadata !DIExpression()), !dbg !5671
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5543, metadata !DIExpression()), !dbg !5673
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !5674, metadata !DIExpression()), !dbg !5675
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5676, metadata !DIExpression()), !dbg !5677
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !5678, metadata !DIExpression()), !dbg !5679
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !5680, metadata !DIExpression()), !dbg !5681
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !5682, metadata !DIExpression()), !dbg !5683
  call void @llvm.dbg.declare(metadata i32* %old, metadata !5684, metadata !DIExpression()), !dbg !5685
  %0 = load i32, i32* %i.addr, align 4, !dbg !5686
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !5687
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !5688
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5689
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !5689
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5690
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !5691
  %conv.i.i = trunc i64 %5 to i32, !dbg !5691
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #12, !dbg !5692
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5693
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5693
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #12, !dbg !5693
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !5694
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5695
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !5670
  store i32 %10, i32* %__ret.i.i, align 4, !dbg !5670
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !5670
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !5670
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !5670
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #9, !dbg !5670, !srcloc !5696
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !5670
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !5670
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !5670
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !5670
  store i32 %15, i32* %old, align 4, !dbg !5685
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !5697
  %tobool = icmp ne i32* %16, null, !dbg !5697
  br i1 %tobool, label %if.then, label %if.end, !dbg !5699

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !5700
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !5701
  store i32 %17, i32* %18, align 4, !dbg !5702
  br label %if.end, !dbg !5703

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !5704
  %tobool1 = icmp ne i32 %19, 0, !dbg !5704
  %lnot = xor i1 %tobool1, true, !dbg !5704
  %lnot2 = xor i1 %lnot, true, !dbg !5704
  %lnot3 = xor i1 %lnot2, true, !dbg !5704
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !5704
  %conv = sext i32 %lnot.ext to i64, !dbg !5704
  %tobool4 = icmp ne i64 %conv, 0, !dbg !5704
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !5706

if.then5:                                         ; preds = %if.end
  %20 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !5707
  call void @refcount_warn_saturate(%struct.refcount_struct* %20, i32 2) #11, !dbg !5708
  br label %if.end17, !dbg !5708

if.else:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !5709
  %cmp = icmp slt i32 %21, 0, !dbg !5709
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !5709

lor.rhs:                                          ; preds = %if.else
  %22 = load i32, i32* %old, align 4, !dbg !5709
  %23 = load i32, i32* %i.addr, align 4, !dbg !5709
  %add = add i32 %22, %23, !dbg !5709
  %cmp7 = icmp slt i32 %add, 0, !dbg !5709
  br label %lor.end, !dbg !5709

lor.end:                                          ; preds = %lor.rhs, %if.else
  %24 = phi i1 [ true, %if.else ], [ %cmp7, %lor.rhs ]
  %lnot9 = xor i1 %24, true, !dbg !5709
  %lnot11 = xor i1 %lnot9, true, !dbg !5709
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !5709
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !5709
  %tobool14 = icmp ne i64 %conv13, 0, !dbg !5709
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !5711

if.then15:                                        ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !5712
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 1) #11, !dbg !5713
  br label %if.end16, !dbg !5713

if.end16:                                         ; preds = %if.then15, %lor.end
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then5
  ret void, !dbg !5714
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #5

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #7 !dbg !5715 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !5719, metadata !DIExpression()), !dbg !5724
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !5726, metadata !DIExpression()), !dbg !5727
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5728, metadata !DIExpression()), !dbg !5729
  %0 = load i64, i64* %size.addr, align 8, !dbg !5730
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !5732
  br i1 %1, label %if.then, label %if.end447, !dbg !5733

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !5734
  %tobool = icmp ne i64 %2, 0, !dbg !5734
  br i1 %tobool, label %if.end, label %if.then1, !dbg !5737

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !5738
  br label %return, !dbg !5738

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !5739
  %cmp = icmp ult i64 %3, 4096, !dbg !5741
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !5742

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5743
  br label %return, !dbg !5743

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub = sub i64 %4, 1, !dbg !5744
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !5744
  br i1 %5, label %cond.true, label %cond.false442, !dbg !5744

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub4 = sub i64 %6, 1, !dbg !5744
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !5744
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !5744

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub6 = sub i64 %8, 1, !dbg !5744
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !5744
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !5744

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !5744

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub9 = sub i64 %9, 1, !dbg !5744
  %and = and i64 %sub9, -9223372036854775808, !dbg !5744
  %tobool10 = icmp ne i64 %and, 0, !dbg !5744
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !5744

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !5744

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub13 = sub i64 %10, 1, !dbg !5744
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !5744
  %tobool15 = icmp ne i64 %and14, 0, !dbg !5744
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !5744

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !5744

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub18 = sub i64 %11, 1, !dbg !5744
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !5744
  %tobool20 = icmp ne i64 %and19, 0, !dbg !5744
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !5744

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !5744

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub23 = sub i64 %12, 1, !dbg !5744
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !5744
  %tobool25 = icmp ne i64 %and24, 0, !dbg !5744
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !5744

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !5744

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub28 = sub i64 %13, 1, !dbg !5744
  %and29 = and i64 %sub28, 576460752303423488, !dbg !5744
  %tobool30 = icmp ne i64 %and29, 0, !dbg !5744
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !5744

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !5744

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub33 = sub i64 %14, 1, !dbg !5744
  %and34 = and i64 %sub33, 288230376151711744, !dbg !5744
  %tobool35 = icmp ne i64 %and34, 0, !dbg !5744
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !5744

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !5744

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub38 = sub i64 %15, 1, !dbg !5744
  %and39 = and i64 %sub38, 144115188075855872, !dbg !5744
  %tobool40 = icmp ne i64 %and39, 0, !dbg !5744
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !5744

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !5744

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub43 = sub i64 %16, 1, !dbg !5744
  %and44 = and i64 %sub43, 72057594037927936, !dbg !5744
  %tobool45 = icmp ne i64 %and44, 0, !dbg !5744
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !5744

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !5744

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub48 = sub i64 %17, 1, !dbg !5744
  %and49 = and i64 %sub48, 36028797018963968, !dbg !5744
  %tobool50 = icmp ne i64 %and49, 0, !dbg !5744
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !5744

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !5744

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub53 = sub i64 %18, 1, !dbg !5744
  %and54 = and i64 %sub53, 18014398509481984, !dbg !5744
  %tobool55 = icmp ne i64 %and54, 0, !dbg !5744
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !5744

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !5744

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub58 = sub i64 %19, 1, !dbg !5744
  %and59 = and i64 %sub58, 9007199254740992, !dbg !5744
  %tobool60 = icmp ne i64 %and59, 0, !dbg !5744
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !5744

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !5744

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub63 = sub i64 %20, 1, !dbg !5744
  %and64 = and i64 %sub63, 4503599627370496, !dbg !5744
  %tobool65 = icmp ne i64 %and64, 0, !dbg !5744
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !5744

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !5744

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub68 = sub i64 %21, 1, !dbg !5744
  %and69 = and i64 %sub68, 2251799813685248, !dbg !5744
  %tobool70 = icmp ne i64 %and69, 0, !dbg !5744
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !5744

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !5744

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub73 = sub i64 %22, 1, !dbg !5744
  %and74 = and i64 %sub73, 1125899906842624, !dbg !5744
  %tobool75 = icmp ne i64 %and74, 0, !dbg !5744
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !5744

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !5744

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub78 = sub i64 %23, 1, !dbg !5744
  %and79 = and i64 %sub78, 562949953421312, !dbg !5744
  %tobool80 = icmp ne i64 %and79, 0, !dbg !5744
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !5744

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !5744

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub83 = sub i64 %24, 1, !dbg !5744
  %and84 = and i64 %sub83, 281474976710656, !dbg !5744
  %tobool85 = icmp ne i64 %and84, 0, !dbg !5744
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !5744

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !5744

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub88 = sub i64 %25, 1, !dbg !5744
  %and89 = and i64 %sub88, 140737488355328, !dbg !5744
  %tobool90 = icmp ne i64 %and89, 0, !dbg !5744
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !5744

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !5744

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub93 = sub i64 %26, 1, !dbg !5744
  %and94 = and i64 %sub93, 70368744177664, !dbg !5744
  %tobool95 = icmp ne i64 %and94, 0, !dbg !5744
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !5744

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !5744

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub98 = sub i64 %27, 1, !dbg !5744
  %and99 = and i64 %sub98, 35184372088832, !dbg !5744
  %tobool100 = icmp ne i64 %and99, 0, !dbg !5744
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !5744

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !5744

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub103 = sub i64 %28, 1, !dbg !5744
  %and104 = and i64 %sub103, 17592186044416, !dbg !5744
  %tobool105 = icmp ne i64 %and104, 0, !dbg !5744
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !5744

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !5744

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub108 = sub i64 %29, 1, !dbg !5744
  %and109 = and i64 %sub108, 8796093022208, !dbg !5744
  %tobool110 = icmp ne i64 %and109, 0, !dbg !5744
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !5744

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !5744

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub113 = sub i64 %30, 1, !dbg !5744
  %and114 = and i64 %sub113, 4398046511104, !dbg !5744
  %tobool115 = icmp ne i64 %and114, 0, !dbg !5744
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !5744

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !5744

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub118 = sub i64 %31, 1, !dbg !5744
  %and119 = and i64 %sub118, 2199023255552, !dbg !5744
  %tobool120 = icmp ne i64 %and119, 0, !dbg !5744
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !5744

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !5744

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub123 = sub i64 %32, 1, !dbg !5744
  %and124 = and i64 %sub123, 1099511627776, !dbg !5744
  %tobool125 = icmp ne i64 %and124, 0, !dbg !5744
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !5744

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !5744

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub128 = sub i64 %33, 1, !dbg !5744
  %and129 = and i64 %sub128, 549755813888, !dbg !5744
  %tobool130 = icmp ne i64 %and129, 0, !dbg !5744
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !5744

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !5744

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub133 = sub i64 %34, 1, !dbg !5744
  %and134 = and i64 %sub133, 274877906944, !dbg !5744
  %tobool135 = icmp ne i64 %and134, 0, !dbg !5744
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !5744

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !5744

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub138 = sub i64 %35, 1, !dbg !5744
  %and139 = and i64 %sub138, 137438953472, !dbg !5744
  %tobool140 = icmp ne i64 %and139, 0, !dbg !5744
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !5744

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !5744

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub143 = sub i64 %36, 1, !dbg !5744
  %and144 = and i64 %sub143, 68719476736, !dbg !5744
  %tobool145 = icmp ne i64 %and144, 0, !dbg !5744
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !5744

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !5744

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub148 = sub i64 %37, 1, !dbg !5744
  %and149 = and i64 %sub148, 34359738368, !dbg !5744
  %tobool150 = icmp ne i64 %and149, 0, !dbg !5744
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !5744

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !5744

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub153 = sub i64 %38, 1, !dbg !5744
  %and154 = and i64 %sub153, 17179869184, !dbg !5744
  %tobool155 = icmp ne i64 %and154, 0, !dbg !5744
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !5744

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !5744

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub158 = sub i64 %39, 1, !dbg !5744
  %and159 = and i64 %sub158, 8589934592, !dbg !5744
  %tobool160 = icmp ne i64 %and159, 0, !dbg !5744
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !5744

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !5744

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub163 = sub i64 %40, 1, !dbg !5744
  %and164 = and i64 %sub163, 4294967296, !dbg !5744
  %tobool165 = icmp ne i64 %and164, 0, !dbg !5744
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !5744

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !5744

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub168 = sub i64 %41, 1, !dbg !5744
  %and169 = and i64 %sub168, 2147483648, !dbg !5744
  %tobool170 = icmp ne i64 %and169, 0, !dbg !5744
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !5744

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !5744

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub173 = sub i64 %42, 1, !dbg !5744
  %and174 = and i64 %sub173, 1073741824, !dbg !5744
  %tobool175 = icmp ne i64 %and174, 0, !dbg !5744
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !5744

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !5744

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub178 = sub i64 %43, 1, !dbg !5744
  %and179 = and i64 %sub178, 536870912, !dbg !5744
  %tobool180 = icmp ne i64 %and179, 0, !dbg !5744
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !5744

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !5744

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub183 = sub i64 %44, 1, !dbg !5744
  %and184 = and i64 %sub183, 268435456, !dbg !5744
  %tobool185 = icmp ne i64 %and184, 0, !dbg !5744
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !5744

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !5744

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub188 = sub i64 %45, 1, !dbg !5744
  %and189 = and i64 %sub188, 134217728, !dbg !5744
  %tobool190 = icmp ne i64 %and189, 0, !dbg !5744
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !5744

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !5744

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub193 = sub i64 %46, 1, !dbg !5744
  %and194 = and i64 %sub193, 67108864, !dbg !5744
  %tobool195 = icmp ne i64 %and194, 0, !dbg !5744
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !5744

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !5744

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub198 = sub i64 %47, 1, !dbg !5744
  %and199 = and i64 %sub198, 33554432, !dbg !5744
  %tobool200 = icmp ne i64 %and199, 0, !dbg !5744
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !5744

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !5744

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub203 = sub i64 %48, 1, !dbg !5744
  %and204 = and i64 %sub203, 16777216, !dbg !5744
  %tobool205 = icmp ne i64 %and204, 0, !dbg !5744
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !5744

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !5744

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub208 = sub i64 %49, 1, !dbg !5744
  %and209 = and i64 %sub208, 8388608, !dbg !5744
  %tobool210 = icmp ne i64 %and209, 0, !dbg !5744
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !5744

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !5744

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub213 = sub i64 %50, 1, !dbg !5744
  %and214 = and i64 %sub213, 4194304, !dbg !5744
  %tobool215 = icmp ne i64 %and214, 0, !dbg !5744
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !5744

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !5744

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub218 = sub i64 %51, 1, !dbg !5744
  %and219 = and i64 %sub218, 2097152, !dbg !5744
  %tobool220 = icmp ne i64 %and219, 0, !dbg !5744
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !5744

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !5744

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub223 = sub i64 %52, 1, !dbg !5744
  %and224 = and i64 %sub223, 1048576, !dbg !5744
  %tobool225 = icmp ne i64 %and224, 0, !dbg !5744
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !5744

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !5744

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub228 = sub i64 %53, 1, !dbg !5744
  %and229 = and i64 %sub228, 524288, !dbg !5744
  %tobool230 = icmp ne i64 %and229, 0, !dbg !5744
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !5744

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !5744

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub233 = sub i64 %54, 1, !dbg !5744
  %and234 = and i64 %sub233, 262144, !dbg !5744
  %tobool235 = icmp ne i64 %and234, 0, !dbg !5744
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !5744

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !5744

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub238 = sub i64 %55, 1, !dbg !5744
  %and239 = and i64 %sub238, 131072, !dbg !5744
  %tobool240 = icmp ne i64 %and239, 0, !dbg !5744
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !5744

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !5744

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub243 = sub i64 %56, 1, !dbg !5744
  %and244 = and i64 %sub243, 65536, !dbg !5744
  %tobool245 = icmp ne i64 %and244, 0, !dbg !5744
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !5744

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !5744

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub248 = sub i64 %57, 1, !dbg !5744
  %and249 = and i64 %sub248, 32768, !dbg !5744
  %tobool250 = icmp ne i64 %and249, 0, !dbg !5744
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !5744

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !5744

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub253 = sub i64 %58, 1, !dbg !5744
  %and254 = and i64 %sub253, 16384, !dbg !5744
  %tobool255 = icmp ne i64 %and254, 0, !dbg !5744
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !5744

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !5744

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub258 = sub i64 %59, 1, !dbg !5744
  %and259 = and i64 %sub258, 8192, !dbg !5744
  %tobool260 = icmp ne i64 %and259, 0, !dbg !5744
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !5744

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !5744

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub263 = sub i64 %60, 1, !dbg !5744
  %and264 = and i64 %sub263, 4096, !dbg !5744
  %tobool265 = icmp ne i64 %and264, 0, !dbg !5744
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !5744

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !5744

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub268 = sub i64 %61, 1, !dbg !5744
  %and269 = and i64 %sub268, 2048, !dbg !5744
  %tobool270 = icmp ne i64 %and269, 0, !dbg !5744
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !5744

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !5744

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub273 = sub i64 %62, 1, !dbg !5744
  %and274 = and i64 %sub273, 1024, !dbg !5744
  %tobool275 = icmp ne i64 %and274, 0, !dbg !5744
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !5744

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !5744

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub278 = sub i64 %63, 1, !dbg !5744
  %and279 = and i64 %sub278, 512, !dbg !5744
  %tobool280 = icmp ne i64 %and279, 0, !dbg !5744
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !5744

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !5744

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub283 = sub i64 %64, 1, !dbg !5744
  %and284 = and i64 %sub283, 256, !dbg !5744
  %tobool285 = icmp ne i64 %and284, 0, !dbg !5744
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !5744

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !5744

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub288 = sub i64 %65, 1, !dbg !5744
  %and289 = and i64 %sub288, 128, !dbg !5744
  %tobool290 = icmp ne i64 %and289, 0, !dbg !5744
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !5744

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !5744

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub293 = sub i64 %66, 1, !dbg !5744
  %and294 = and i64 %sub293, 64, !dbg !5744
  %tobool295 = icmp ne i64 %and294, 0, !dbg !5744
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !5744

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !5744

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub298 = sub i64 %67, 1, !dbg !5744
  %and299 = and i64 %sub298, 32, !dbg !5744
  %tobool300 = icmp ne i64 %and299, 0, !dbg !5744
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !5744

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !5744

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub303 = sub i64 %68, 1, !dbg !5744
  %and304 = and i64 %sub303, 16, !dbg !5744
  %tobool305 = icmp ne i64 %and304, 0, !dbg !5744
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !5744

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !5744

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub308 = sub i64 %69, 1, !dbg !5744
  %and309 = and i64 %sub308, 8, !dbg !5744
  %tobool310 = icmp ne i64 %and309, 0, !dbg !5744
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !5744

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !5744

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub313 = sub i64 %70, 1, !dbg !5744
  %and314 = and i64 %sub313, 4, !dbg !5744
  %tobool315 = icmp ne i64 %and314, 0, !dbg !5744
  %71 = zext i1 %tobool315 to i64, !dbg !5744
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !5744
  br label %cond.end, !dbg !5744

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !5744
  br label %cond.end317, !dbg !5744

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !5744
  br label %cond.end319, !dbg !5744

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !5744
  br label %cond.end321, !dbg !5744

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !5744
  br label %cond.end323, !dbg !5744

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !5744
  br label %cond.end325, !dbg !5744

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !5744
  br label %cond.end327, !dbg !5744

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !5744
  br label %cond.end329, !dbg !5744

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !5744
  br label %cond.end331, !dbg !5744

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !5744
  br label %cond.end333, !dbg !5744

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !5744
  br label %cond.end335, !dbg !5744

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !5744
  br label %cond.end337, !dbg !5744

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !5744
  br label %cond.end339, !dbg !5744

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !5744
  br label %cond.end341, !dbg !5744

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !5744
  br label %cond.end343, !dbg !5744

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !5744
  br label %cond.end345, !dbg !5744

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !5744
  br label %cond.end347, !dbg !5744

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !5744
  br label %cond.end349, !dbg !5744

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !5744
  br label %cond.end351, !dbg !5744

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !5744
  br label %cond.end353, !dbg !5744

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !5744
  br label %cond.end355, !dbg !5744

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !5744
  br label %cond.end357, !dbg !5744

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !5744
  br label %cond.end359, !dbg !5744

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !5744
  br label %cond.end361, !dbg !5744

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !5744
  br label %cond.end363, !dbg !5744

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !5744
  br label %cond.end365, !dbg !5744

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !5744
  br label %cond.end367, !dbg !5744

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !5744
  br label %cond.end369, !dbg !5744

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !5744
  br label %cond.end371, !dbg !5744

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !5744
  br label %cond.end373, !dbg !5744

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !5744
  br label %cond.end375, !dbg !5744

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !5744
  br label %cond.end377, !dbg !5744

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !5744
  br label %cond.end379, !dbg !5744

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !5744
  br label %cond.end381, !dbg !5744

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !5744
  br label %cond.end383, !dbg !5744

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !5744
  br label %cond.end385, !dbg !5744

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !5744
  br label %cond.end387, !dbg !5744

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !5744
  br label %cond.end389, !dbg !5744

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !5744
  br label %cond.end391, !dbg !5744

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !5744
  br label %cond.end393, !dbg !5744

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !5744
  br label %cond.end395, !dbg !5744

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !5744
  br label %cond.end397, !dbg !5744

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !5744
  br label %cond.end399, !dbg !5744

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !5744
  br label %cond.end401, !dbg !5744

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !5744
  br label %cond.end403, !dbg !5744

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !5744
  br label %cond.end405, !dbg !5744

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !5744
  br label %cond.end407, !dbg !5744

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !5744
  br label %cond.end409, !dbg !5744

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !5744
  br label %cond.end411, !dbg !5744

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !5744
  br label %cond.end413, !dbg !5744

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !5744
  br label %cond.end415, !dbg !5744

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !5744
  br label %cond.end417, !dbg !5744

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !5744
  br label %cond.end419, !dbg !5744

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !5744
  br label %cond.end421, !dbg !5744

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !5744
  br label %cond.end423, !dbg !5744

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !5744
  br label %cond.end425, !dbg !5744

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !5744
  br label %cond.end427, !dbg !5744

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !5744
  br label %cond.end429, !dbg !5744

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !5744
  br label %cond.end431, !dbg !5744

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !5744
  br label %cond.end433, !dbg !5744

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !5744
  br label %cond.end435, !dbg !5744

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !5744
  br label %cond.end437, !dbg !5744

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !5744
  br label %cond.end440, !dbg !5744

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !5744

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !5744
  br label %cond.end444, !dbg !5744

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !5744
  %sub443 = sub i64 %72, 1, !dbg !5744
  %call = call i32 @__ilog2_u64(i64 %sub443) #13, !dbg !5744
  br label %cond.end444, !dbg !5744

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !5744
  %sub446 = sub i32 %cond445, 12, !dbg !5745
  %add = add i32 %sub446, 1, !dbg !5746
  store i32 %add, i32* %retval, align 4, !dbg !5747
  br label %return, !dbg !5747

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !5748
  %dec = add i64 %73, -1, !dbg !5748
  store i64 %dec, i64* %size.addr, align 8, !dbg !5748
  %74 = load i64, i64* %size.addr, align 8, !dbg !5749
  %shr = lshr i64 %74, 12, !dbg !5749
  store i64 %shr, i64* %size.addr, align 8, !dbg !5749
  %75 = load i64, i64* %size.addr, align 8, !dbg !5750
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !5727
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !5751
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !5752
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #8, !dbg !5751, !srcloc !5753
  store i32 %78, i32* %bitpos.i, align 4, !dbg !5751
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !5754
  %add.i = add i32 %79, 1, !dbg !5755
  store i32 %add.i, i32* %retval, align 4, !dbg !5756
  br label %return, !dbg !5756

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !5757
  ret i32 %80, !dbg !5757
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #7 !dbg !5758 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !5719, metadata !DIExpression()), !dbg !5762
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !5726, metadata !DIExpression()), !dbg !5764
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !5765, metadata !DIExpression()), !dbg !5766
  %0 = load i64, i64* %n.addr, align 8, !dbg !5767
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !5764
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !5768
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !5769
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #8, !dbg !5768, !srcloc !5753
  store i32 %3, i32* %bitpos.i, align 4, !dbg !5768
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !5770
  %add.i = add i32 %4, 1, !dbg !5771
  %sub = sub i32 %add.i, 1, !dbg !5772
  ret i32 %sub, !dbg !5773
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !5774 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !5778, metadata !DIExpression()), !dbg !5779
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !5780, metadata !DIExpression()), !dbg !5781
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5782, metadata !DIExpression()), !dbg !5783
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5784, metadata !DIExpression()), !dbg !5785
  %0 = load i8*, i8** %object.addr, align 8, !dbg !5786
  ret i8* %0, !dbg !5787
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @do_become_nonbusy(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s) #0 !dbg !5788 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %async = alloca %struct.comedi_async*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !5789, metadata !DIExpression()), !dbg !5790
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !5791, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.declare(metadata %struct.comedi_async** %async, metadata !5793, metadata !DIExpression()), !dbg !5794
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !5795
  %async1 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %0, i32 0, i32 7, !dbg !5796
  %1 = load %struct.comedi_async*, %struct.comedi_async** %async1, align 8, !dbg !5796
  store %struct.comedi_async* %1, %struct.comedi_async** %async, align 8, !dbg !5794
  br label %do.body, !dbg !5797

do.body:                                          ; preds = %entry
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5798
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %2, i32 0, i32 12, !dbg !5798
  br label %do.end, !dbg !5798

do.end:                                           ; preds = %do.body
  %3 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !5800
  call void @comedi_update_subdevice_runflags(%struct.comedi_subdevice* %3, i32 134217728, i32 0) #11, !dbg !5801
  %4 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !5802
  %tobool = icmp ne %struct.comedi_async* %4, null, !dbg !5802
  br i1 %tobool, label %if.then, label %if.else, !dbg !5804

if.then:                                          ; preds = %do.end
  %5 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !5805
  call void @comedi_buf_reset(%struct.comedi_subdevice* %5) #11, !dbg !5807
  %6 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !5808
  %inttrig = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %6, i32 0, i32 20, !dbg !5809
  store i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)* null, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)** %inttrig, align 8, !dbg !5810
  %7 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !5811
  %cmd = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %7, i32 0, i32 17, !dbg !5812
  %chanlist = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %cmd, i32 0, i32 12, !dbg !5813
  %8 = load i32*, i32** %chanlist, align 8, !dbg !5813
  %9 = bitcast i32* %8 to i8*, !dbg !5811
  call void @kfree(i8* %9) #11, !dbg !5814
  %10 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !5815
  %cmd2 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %10, i32 0, i32 17, !dbg !5816
  %chanlist3 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %cmd2, i32 0, i32 12, !dbg !5817
  store i32* null, i32** %chanlist3, align 8, !dbg !5818
  %11 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !5819
  %busy = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %11, i32 0, i32 9, !dbg !5820
  store i8* null, i8** %busy, align 8, !dbg !5821
  %12 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !5822
  %wait_head = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %12, i32 0, i32 18, !dbg !5822
  call void @__wake_up(%struct.wait_queue_head* %wait_head, i32 1, i32 0, i8* null) #11, !dbg !5822
  br label %if.end, !dbg !5823

if.else:                                          ; preds = %do.end
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !5824
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %13, i32 0, i32 4, !dbg !5824
  %14 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !5824
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %14, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.do_become_nonbusy, i64 0, i64 0)) #14, !dbg !5824
  %15 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !5826
  %busy4 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %15, i32 0, i32 9, !dbg !5827
  store i8* null, i8** %busy4, align 8, !dbg !5828
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5829
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @comedi_update_subdevice_runflags(%struct.comedi_subdevice* %s, i32 %mask, i32 %bits) #0 !dbg !5830 {
entry:
  %lock.addr.i20 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i20, metadata !4393, metadata !DIExpression()), !dbg !5833
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4400, metadata !DIExpression()), !dbg !5835
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4402, metadata !DIExpression()), !dbg !5836
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %mask.addr = alloca i32, align 4
  %bits.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !5843, metadata !DIExpression()), !dbg !5844
  store i32 %mask, i32* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mask.addr, metadata !5845, metadata !DIExpression()), !dbg !5846
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !5847, metadata !DIExpression()), !dbg !5848
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5849, metadata !DIExpression()), !dbg !5850
  br label %do.body, !dbg !5851

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5852

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5853, metadata !DIExpression()), !dbg !5855
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5856, metadata !DIExpression()), !dbg !5855
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5855
  %conv = zext i1 %cmp to i32, !dbg !5855
  store i32 1, i32* %tmp, align 4, !dbg !5855
  %0 = load i32, i32* %tmp, align 4, !dbg !5855
  br label %do.body2, !dbg !5857

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !5858

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !5859

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !5861, metadata !DIExpression()), !dbg !5864
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !5865, metadata !DIExpression()), !dbg !5864
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !5864
  %conv8 = zext i1 %cmp7 to i32, !dbg !5864
  store i32 1, i32* %tmp9, align 4, !dbg !5864
  %1 = load i32, i32* %tmp9, align 4, !dbg !5864
  %call = call i64 @arch_local_irq_save() #11, !dbg !5866
  store i64 %call, i64* %flags, align 8, !dbg !5866
  br label %do.end, !dbg !5866

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !5859

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !5858

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !5867, !srcloc !5868
  br label %do.body12, !dbg !5867

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !5869
  %spin_lock = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %2, i32 0, i32 11, !dbg !5869
  store %struct.spinlock* %spin_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5870
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !5871
  %rlock.i = bitcast %union.anon.4* %4 to %struct.raw_spinlock*, !dbg !5871
  br label %do.end14, !dbg !5869

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !5867

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !5858

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !5857

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !5852

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !5872
  %6 = load i32, i32* %mask.addr, align 4, !dbg !5873
  call void @__comedi_clear_subdevice_runflags(%struct.comedi_subdevice* %5, i32 %6) #11, !dbg !5874
  %7 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !5875
  %8 = load i32, i32* %bits.addr, align 4, !dbg !5876
  %9 = load i32, i32* %mask.addr, align 4, !dbg !5877
  %and = and i32 %8, %9, !dbg !5878
  call void @__comedi_set_subdevice_runflags(%struct.comedi_subdevice* %7, i32 %and) #11, !dbg !5879
  %10 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !5880
  %spin_lock19 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %10, i32 0, i32 11, !dbg !5881
  %11 = load i64, i64* %flags, align 8, !dbg !5882
  store %struct.spinlock* %spin_lock19, %struct.spinlock** %lock.addr.i20, align 8
  store i64 %11, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !250, metadata !4447, metadata !DIExpression()) #9, !dbg !5883
  call void @llvm.dbg.declare(metadata !250, metadata !4451, metadata !DIExpression()) #9, !dbg !5883
  store i32 1, i32* %tmp.i, align 4, !dbg !5883
  %12 = load i32, i32* %tmp.i, align 4, !dbg !5883
  call void @llvm.dbg.declare(metadata !250, metadata !4452, metadata !DIExpression()) #9, !dbg !5884
  call void @llvm.dbg.declare(metadata !250, metadata !4458, metadata !DIExpression()) #9, !dbg !5884
  store i32 1, i32* %tmp8.i, align 4, !dbg !5884
  %13 = load i32, i32* %tmp8.i, align 4, !dbg !5884
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !5885
  call void @arch_local_irq_restore(i64 %14) #12, !dbg !5885
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !5886, !srcloc !4462
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i20, align 8, !dbg !5887
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !5887
  %rlock.i21 = bitcast %union.anon.4* %16 to %struct.raw_spinlock*, !dbg !5887
  ret void, !dbg !5888
}

; Function Attrs: noredzone
declare dso_local void @comedi_buf_reset(%struct.comedi_subdevice*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !5889 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !5890, metadata !DIExpression()), !dbg !5892
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !5893, metadata !DIExpression()), !dbg !5892
  %0 = load i64, i64* %__edi, align 8, !dbg !5892
  store i64 %0, i64* %__edi, align 8, !dbg !5892
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !5894, metadata !DIExpression()), !dbg !5892
  %1 = load i64, i64* %__esi, align 8, !dbg !5892
  store i64 %1, i64* %__esi, align 8, !dbg !5892
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !5895, metadata !DIExpression()), !dbg !5892
  %2 = load i64, i64* %__edx, align 8, !dbg !5892
  store i64 %2, i64* %__edx, align 8, !dbg !5892
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !5896, metadata !DIExpression()), !dbg !5892
  %3 = load i64, i64* %__ecx, align 8, !dbg !5892
  store i64 %3, i64* %__ecx, align 8, !dbg !5892
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !5897, metadata !DIExpression()), !dbg !5892
  %4 = load i64, i64* %__eax, align 8, !dbg !5892
  store i64 %4, i64* %__eax, align 8, !dbg !5892
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !5892
  %6 = call i64 @llvm.read_register.i64(metadata !4267), !dbg !5898
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #9, !dbg !5898, !srcloc !5901
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !5898
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !5898
  store i64 %asmresult, i64* %__eax, align 8, !dbg !5898
  call void @llvm.write_register.i64(metadata !4267, i64 %asmresult1), !dbg !5898
  %8 = load i64, i64* %__eax, align 8, !dbg !5898
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !5902, metadata !DIExpression()), !dbg !5904
  store i64 -1, i64* %__mask, align 8, !dbg !5904
  %9 = load i64, i64* %__mask, align 8, !dbg !5904
  store i64 %9, i64* %tmp, align 8, !dbg !5904
  %10 = load i64, i64* %tmp, align 8, !dbg !5904
  %and = and i64 %8, %10, !dbg !5898
  store i64 %and, i64* %__ret, align 8, !dbg !5898
  %11 = load i64, i64* %__ret, align 8, !dbg !5892
  store i64 %11, i64* %tmp2, align 8, !dbg !5905
  %12 = load i64, i64* %tmp2, align 8, !dbg !5892
  ret i64 %12, !dbg !5906
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !5907 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !5908, metadata !DIExpression()), !dbg !5910
  %0 = load i64, i64* %__edi, align 8, !dbg !5910
  store i64 %0, i64* %__edi, align 8, !dbg !5910
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !5911, metadata !DIExpression()), !dbg !5910
  %1 = load i64, i64* %__esi, align 8, !dbg !5910
  store i64 %1, i64* %__esi, align 8, !dbg !5910
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !5912, metadata !DIExpression()), !dbg !5910
  %2 = load i64, i64* %__edx, align 8, !dbg !5910
  store i64 %2, i64* %__edx, align 8, !dbg !5910
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !5913, metadata !DIExpression()), !dbg !5910
  %3 = load i64, i64* %__ecx, align 8, !dbg !5910
  store i64 %3, i64* %__ecx, align 8, !dbg !5910
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !5914, metadata !DIExpression()), !dbg !5910
  %4 = load i64, i64* %__eax, align 8, !dbg !5910
  store i64 %4, i64* %__eax, align 8, !dbg !5910
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !5910
  %6 = call i64 @llvm.read_register.i64(metadata !4267), !dbg !5910
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #9, !dbg !5910, !srcloc !5915
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !5910
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !5910
  store i64 %asmresult, i64* %__eax, align 8, !dbg !5910
  call void @llvm.write_register.i64(metadata !4267, i64 %asmresult1), !dbg !5910
  ret void, !dbg !5916
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #8

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #9

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !5917 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !5920, metadata !DIExpression()), !dbg !5921
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !5922, metadata !DIExpression()), !dbg !5924
  %0 = load i64, i64* %__edi, align 8, !dbg !5924
  store i64 %0, i64* %__edi, align 8, !dbg !5924
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !5925, metadata !DIExpression()), !dbg !5924
  %1 = load i64, i64* %__esi, align 8, !dbg !5924
  store i64 %1, i64* %__esi, align 8, !dbg !5924
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !5926, metadata !DIExpression()), !dbg !5924
  %2 = load i64, i64* %__edx, align 8, !dbg !5924
  store i64 %2, i64* %__edx, align 8, !dbg !5924
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !5927, metadata !DIExpression()), !dbg !5924
  %3 = load i64, i64* %__ecx, align 8, !dbg !5924
  store i64 %3, i64* %__ecx, align 8, !dbg !5924
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !5928, metadata !DIExpression()), !dbg !5924
  %4 = load i64, i64* %__eax, align 8, !dbg !5924
  store i64 %4, i64* %__eax, align 8, !dbg !5924
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !5924
  %6 = call i64 @llvm.read_register.i64(metadata !4267), !dbg !5924
  %7 = load i64, i64* %f.addr, align 8, !dbg !5924
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #9, !dbg !5924, !srcloc !5929
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !5924
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !5924
  store i64 %asmresult, i64* %__eax, align 8, !dbg !5924
  call void @llvm.write_register.i64(metadata !4267, i64 %asmresult1), !dbg !5924
  ret void, !dbg !5930
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kref_init(%struct.kref* %kref) #0 !dbg !5931 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !5932, metadata !DIExpression()), !dbg !5933
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !5934
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !5935
  call void @refcount_set(%struct.refcount_struct* %refcount, i32 1) #11, !dbg !5936
  ret void, !dbg !5937
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #10

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noredzone
declare dso_local void @__init_rwsem(%struct.rw_semaphore*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_set(%struct.refcount_struct* %r, i32 %n) #0 !dbg !5938 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5941, metadata !DIExpression()), !dbg !5945
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !5949, metadata !DIExpression()), !dbg !5950
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5951, metadata !DIExpression()), !dbg !5953
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5955, metadata !DIExpression()), !dbg !5956
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5957, metadata !DIExpression()), !dbg !5958
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !5959, metadata !DIExpression()), !dbg !5960
  %r.addr = alloca %struct.refcount_struct*, align 8
  %n.addr = alloca i32, align 4
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !5961, metadata !DIExpression()), !dbg !5962
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !5963, metadata !DIExpression()), !dbg !5964
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !5965
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %0, i32 0, i32 0, !dbg !5966
  %1 = load i32, i32* %n.addr, align 4, !dbg !5967
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  store i32 %1, i32* %i.addr.i, align 4
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5968
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !5968
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5969
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !5970
  %conv.i.i = trunc i64 %5 to i32, !dbg !5970
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #12, !dbg !5971
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5972
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5972
  call void @kcsan_check_access(i8* %6, i64 %7, i32 5) #12, !dbg !5972
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5973
  %9 = load i32, i32* %i.addr.i, align 4, !dbg !5974
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %9, i32* %i.addr.i.i, align 4
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !5975
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !5975
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %11, i32 0, i32 0, !dbg !5975
  store volatile i32 %10, i32* %counter.i.i, align 4, !dbg !5975
  ret void, !dbg !5977
}

; Function Attrs: noredzone
declare dso_local void @comedi_device_detach(%struct.comedi_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @module_put(%struct.module* %module) #0 !dbg !5978 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !5982, metadata !DIExpression()), !dbg !5983
  ret void, !dbg !5984
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #3

; Function Attrs: noredzone
declare dso_local i32 @register_chrdev_region(i32, i32, i8*) #2

; Function Attrs: noredzone
declare dso_local void @cdev_init(%struct.cdev*, %struct.file_operations*) #2

; Function Attrs: noredzone
declare dso_local i32 @kobject_set_name(%struct.kobject*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i32 @cdev_add(%struct.cdev*, i32, i32) #2

; Function Attrs: noredzone
declare dso_local %struct.class* @__class_create(%struct.module*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !5985 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5988, metadata !DIExpression()), !dbg !5989
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5990
  %1 = ptrtoint i8* %0 to i64, !dbg !5991
  ret i64 %1, !dbg !5992
}

; Function Attrs: noredzone
declare dso_local void @comedi_proc_init() #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local i64 @noop_llseek(%struct.file*, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @comedi_read(%struct.file* %file, i8* %buf, i64 %nbytes, i64* %offset) #0 !dbg !5993 {
entry:
  %pscr_ret__.i242 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i242, metadata !5994, metadata !DIExpression()), !dbg !6000
  %__vpp_verify.i243 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i243, metadata !6005, metadata !DIExpression()), !dbg !6007
  %pfo_val__.i244 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i244, metadata !6008, metadata !DIExpression()), !dbg !6010
  %tmp.i245 = alloca %struct.task_struct*, align 8
  %tmp1.i246 = alloca %struct.task_struct*, align 8
  %retval.i.i191 = alloca i1, align 1
  %addr.addr.i.i192 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i192, metadata !6011, metadata !DIExpression()), !dbg !6016
  %bytes.addr.i.i193 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i193, metadata !6027, metadata !DIExpression()), !dbg !6028
  %is_source.addr.i.i194 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i194, metadata !6029, metadata !DIExpression()), !dbg !6030
  %sz.i.i195 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i195, metadata !6031, metadata !DIExpression()), !dbg !6032
  %__ret_warn_on.i.i196 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i196, metadata !6033, metadata !DIExpression()), !dbg !6036
  %tmp.i.i197 = alloca i64, align 8
  %to.addr.i198 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i198, metadata !6037, metadata !DIExpression()), !dbg !6038
  %from.addr.i199 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i199, metadata !6039, metadata !DIExpression()), !dbg !6040
  %n.addr.i200 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i200, metadata !6041, metadata !DIExpression()), !dbg !6042
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !6011, metadata !DIExpression()), !dbg !6043
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !6027, metadata !DIExpression()), !dbg !6046
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !6029, metadata !DIExpression()), !dbg !6047
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !6031, metadata !DIExpression()), !dbg !6048
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !6033, metadata !DIExpression()), !dbg !6049
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6037, metadata !DIExpression()), !dbg !6050
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6039, metadata !DIExpression()), !dbg !6051
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6041, metadata !DIExpression()), !dbg !6052
  %pscr_ret__.i186 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i186, metadata !5994, metadata !DIExpression()), !dbg !6053
  %__vpp_verify.i187 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i187, metadata !6005, metadata !DIExpression()), !dbg !6058
  %pfo_val__.i188 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i188, metadata !6008, metadata !DIExpression()), !dbg !6059
  %tmp.i189 = alloca %struct.task_struct*, align 8
  %tmp1.i190 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i181 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i181, metadata !5994, metadata !DIExpression()), !dbg !6060
  %__vpp_verify.i182 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i182, metadata !6005, metadata !DIExpression()), !dbg !6065
  %pfo_val__.i183 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i183, metadata !6008, metadata !DIExpression()), !dbg !6066
  %tmp.i184 = alloca %struct.task_struct*, align 8
  %tmp1.i185 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i176 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i176, metadata !5994, metadata !DIExpression()), !dbg !6067
  %__vpp_verify.i177 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i177, metadata !6005, metadata !DIExpression()), !dbg !6072
  %pfo_val__.i178 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i178, metadata !6008, metadata !DIExpression()), !dbg !6073
  %tmp.i179 = alloca %struct.task_struct*, align 8
  %tmp1.i180 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !5994, metadata !DIExpression()), !dbg !6074
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !6005, metadata !DIExpression()), !dbg !6076
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !6008, metadata !DIExpression()), !dbg !6077
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %file.addr = alloca %struct.file*, align 8
  %buf.addr = alloca i8*, align 8
  %nbytes.addr = alloca i64, align 8
  %offset.addr = alloca i64*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %async = alloca %struct.comedi_async*, align 8
  %n = alloca i32, align 4
  %m = alloca i32, align 4
  %count = alloca i64, align 8
  %retval1 = alloca i32, align 4
  %wait = alloca %struct.wait_queue_entry, align 8
  %cfp = alloca %struct.comedi_file*, align 8
  %dev = alloca %struct.comedi_device*, align 8
  %old_detach_count = alloca i32, align 4
  %become_nonbusy = alloca i8, align 1
  %attach_locked = alloca i8, align 1
  %rp = alloca i32, align 4
  %n1 = alloca i32, align 4
  %n2 = alloca i32, align 4
  %__UNIQUE_ID___x258 = alloca i64, align 8
  %__UNIQUE_ID___y259 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %runflags = alloca i32, align 4
  %__UNIQUE_ID___x261 = alloca i32, align 4
  %__UNIQUE_ID___y262 = alloca i32, align 4
  %tmp78 = alloca i32, align 4
  %new_s = alloca %struct.comedi_subdevice*, align 8
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !6078, metadata !DIExpression()), !dbg !6079
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6080, metadata !DIExpression()), !dbg !6081
  store i64 %nbytes, i64* %nbytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nbytes.addr, metadata !6082, metadata !DIExpression()), !dbg !6083
  store i64* %offset, i64** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %offset.addr, metadata !6084, metadata !DIExpression()), !dbg !6085
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !6086, metadata !DIExpression()), !dbg !6087
  call void @llvm.dbg.declare(metadata %struct.comedi_async** %async, metadata !6088, metadata !DIExpression()), !dbg !6089
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6090, metadata !DIExpression()), !dbg !6091
  call void @llvm.dbg.declare(metadata i32* %m, metadata !6092, metadata !DIExpression()), !dbg !6093
  call void @llvm.dbg.declare(metadata i64* %count, metadata !6094, metadata !DIExpression()), !dbg !6095
  store i64 0, i64* %count, align 8, !dbg !6095
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !6096, metadata !DIExpression()), !dbg !6097
  store i32 0, i32* %retval1, align 4, !dbg !6097
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %wait, metadata !6098, metadata !DIExpression()), !dbg !6110
  %flags = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 0, !dbg !6110
  store i32 0, i32* %flags, align 8, !dbg !6110
  %private = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 1, !dbg !6110
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !6076
  %0 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !6076
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !6077, !srcloc !6111
  store i64 %1, i64* %pfo_val__.i, align 8, !dbg !6077
  %2 = load i64, i64* %pfo_val__.i, align 8, !dbg !6077
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !6077
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i, align 8, !dbg !6077
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !6077
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !6074
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !6074
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i, align 8, !dbg !6074
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !6074
  %7 = bitcast %struct.task_struct* %6 to i8*, !dbg !6110
  store i8* %7, i8** %private, align 8, !dbg !6110
  %func = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 2, !dbg !6110
  store i32 (%struct.wait_queue_entry*, i32, i32, i8*)* @default_wake_function, i32 (%struct.wait_queue_entry*, i32, i32, i8*)** %func, align 8, !dbg !6110
  %entry2 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 3, !dbg !6110
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry2, i32 0, i32 0, !dbg !6110
  store %struct.list_head* null, %struct.list_head** %next, align 8, !dbg !6110
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %entry2, i32 0, i32 1, !dbg !6110
  store %struct.list_head* null, %struct.list_head** %prev, align 8, !dbg !6110
  call void @llvm.dbg.declare(metadata %struct.comedi_file** %cfp, metadata !6112, metadata !DIExpression()), !dbg !6121
  %8 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6122
  %private_data = getelementptr inbounds %struct.file, %struct.file* %8, i32 0, i32 15, !dbg !6123
  %9 = load i8*, i8** %private_data, align 8, !dbg !6123
  %10 = bitcast i8* %9 to %struct.comedi_file*, !dbg !6122
  store %struct.comedi_file* %10, %struct.comedi_file** %cfp, align 8, !dbg !6121
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !6124, metadata !DIExpression()), !dbg !6125
  %11 = load %struct.comedi_file*, %struct.comedi_file** %cfp, align 8, !dbg !6126
  %dev3 = getelementptr inbounds %struct.comedi_file, %struct.comedi_file* %11, i32 0, i32 0, !dbg !6127
  %12 = load %struct.comedi_device*, %struct.comedi_device** %dev3, align 8, !dbg !6127
  store %struct.comedi_device* %12, %struct.comedi_device** %dev, align 8, !dbg !6125
  call void @llvm.dbg.declare(metadata i32* %old_detach_count, metadata !6128, metadata !DIExpression()), !dbg !6129
  call void @llvm.dbg.declare(metadata i8* %become_nonbusy, metadata !6130, metadata !DIExpression()), !dbg !6131
  store i8 0, i8* %become_nonbusy, align 1, !dbg !6131
  call void @llvm.dbg.declare(metadata i8* %attach_locked, metadata !6132, metadata !DIExpression()), !dbg !6133
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !6134
  %attach_lock = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %13, i32 0, i32 13, !dbg !6135
  call void @down_read(%struct.rw_semaphore* %attach_lock) #11, !dbg !6136
  store i8 1, i8* %attach_locked, align 1, !dbg !6137
  %14 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !6138
  %detach_count = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %14, i32 0, i32 6, !dbg !6139
  %15 = load i32, i32* %detach_count, align 4, !dbg !6139
  store i32 %15, i32* %old_detach_count, align 4, !dbg !6140
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !6141
  %attached = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %16, i32 0, i32 10, !dbg !6143
  %bf.load = load i8, i8* %attached, align 8, !dbg !6143
  %bf.clear = and i8 %bf.load, 1, !dbg !6143
  %bf.cast = zext i8 %bf.clear to i32, !dbg !6143
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6141
  br i1 %tobool, label %if.end, label %if.then, !dbg !6144

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval1, align 4, !dbg !6145
  br label %out, !dbg !6147

if.end:                                           ; preds = %entry
  %17 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6148
  %call4 = call %struct.comedi_subdevice* @comedi_file_read_subdevice(%struct.file* %17) #11, !dbg !6149
  store %struct.comedi_subdevice* %call4, %struct.comedi_subdevice** %s, align 8, !dbg !6150
  %18 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6151
  %tobool5 = icmp ne %struct.comedi_subdevice* %18, null, !dbg !6151
  br i1 %tobool5, label %lor.lhs.false, label %if.then8, !dbg !6153

lor.lhs.false:                                    ; preds = %if.end
  %19 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6154
  %async6 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %19, i32 0, i32 7, !dbg !6155
  %20 = load %struct.comedi_async*, %struct.comedi_async** %async6, align 8, !dbg !6155
  %tobool7 = icmp ne %struct.comedi_async* %20, null, !dbg !6154
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !6156

if.then8:                                         ; preds = %lor.lhs.false, %if.end
  store i32 -5, i32* %retval1, align 4, !dbg !6157
  br label %out, !dbg !6159

if.end9:                                          ; preds = %lor.lhs.false
  %21 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6160
  %async10 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %21, i32 0, i32 7, !dbg !6161
  %22 = load %struct.comedi_async*, %struct.comedi_async** %async10, align 8, !dbg !6161
  store %struct.comedi_async* %22, %struct.comedi_async** %async, align 8, !dbg !6162
  %23 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6163
  %busy = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %23, i32 0, i32 9, !dbg !6165
  %24 = load i8*, i8** %busy, align 8, !dbg !6165
  %25 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6166
  %26 = bitcast %struct.file* %25 to i8*, !dbg !6166
  %cmp = icmp ne i8* %24, %26, !dbg !6167
  br i1 %cmp, label %if.then14, label %lor.lhs.false11, !dbg !6168

lor.lhs.false11:                                  ; preds = %if.end9
  %27 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6169
  %cmd = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %27, i32 0, i32 17, !dbg !6170
  %flags12 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %cmd, i32 0, i32 1, !dbg !6171
  %28 = load i32, i32* %flags12, align 4, !dbg !6171
  %and = and i32 %28, 64, !dbg !6172
  %tobool13 = icmp ne i32 %and, 0, !dbg !6172
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !6173

if.then14:                                        ; preds = %lor.lhs.false11, %if.end9
  store i32 -22, i32* %retval1, align 4, !dbg !6174
  br label %out, !dbg !6176

if.end15:                                         ; preds = %lor.lhs.false11
  %29 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6177
  %wait_head = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %29, i32 0, i32 18, !dbg !6178
  call void @add_wait_queue(%struct.wait_queue_head* %wait_head, %struct.wait_queue_entry* %wait) #11, !dbg !6179
  br label %while.cond, !dbg !6180

while.cond:                                       ; preds = %if.end104, %if.end66, %if.end15
  %30 = load i64, i64* %count, align 8, !dbg !6181
  %cmp16 = icmp eq i64 %30, 0, !dbg !6182
  br i1 %cmp16, label %land.rhs, label %land.end, !dbg !6183

land.rhs:                                         ; preds = %while.cond
  %31 = load i32, i32* %retval1, align 4, !dbg !6184
  %tobool17 = icmp ne i32 %31, 0, !dbg !6185
  %lnot = xor i1 %tobool17, true, !dbg !6185
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %32 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !6186
  br i1 %32, label %while.body, label %while.end, !dbg !6180

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %rp, metadata !6187, metadata !DIExpression()), !dbg !6188
  call void @llvm.dbg.declare(metadata i32* %n1, metadata !6189, metadata !DIExpression()), !dbg !6190
  call void @llvm.dbg.declare(metadata i32* %n2, metadata !6191, metadata !DIExpression()), !dbg !6192
  br label %do.body, !dbg !6193

do.body:                                          ; preds = %while.body
  br label %do.body18, !dbg !6194

do.body18:                                        ; preds = %do.body
  br label %do.body19, !dbg !6195

do.body19:                                        ; preds = %do.body18
  br label %do.end, !dbg !6196

do.end:                                           ; preds = %do.body19
  br label %do.body20, !dbg !6195

do.body20:                                        ; preds = %do.end
  store i8* null, i8** %__vpp_verify.i177, align 8, !dbg !6072
  %33 = load i8*, i8** %__vpp_verify.i177, align 8, !dbg !6072
  %34 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !6073, !srcloc !6111
  store i64 %34, i64* %pfo_val__.i178, align 8, !dbg !6073
  %35 = load i64, i64* %pfo_val__.i178, align 8, !dbg !6073
  %36 = inttoptr i64 %35 to %struct.task_struct*, !dbg !6073
  store %struct.task_struct* %36, %struct.task_struct** %tmp.i179, align 8, !dbg !6073
  %37 = load %struct.task_struct*, %struct.task_struct** %tmp.i179, align 8, !dbg !6073
  store %struct.task_struct* %37, %struct.task_struct** %pscr_ret__.i176, align 8, !dbg !6067
  %38 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i176, align 8, !dbg !6067
  store %struct.task_struct* %38, %struct.task_struct** %tmp1.i180, align 8, !dbg !6067
  %39 = load %struct.task_struct*, %struct.task_struct** %tmp1.i180, align 8, !dbg !6067
  %state = getelementptr inbounds %struct.task_struct, %struct.task_struct* %39, i32 0, i32 1, !dbg !6198
  store volatile i64 1, i64* %state, align 16, !dbg !6198
  br label %do.end22, !dbg !6198

do.end22:                                         ; preds = %do.body20
  br label %do.end23, !dbg !6195

do.end23:                                         ; preds = %do.end22
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6194, !srcloc !6199
  br label %do.end24, !dbg !6194

do.end24:                                         ; preds = %do.end23
  %40 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6200
  %call25 = call i32 @comedi_buf_read_n_available(%struct.comedi_subdevice* %40) #11, !dbg !6201
  store i32 %call25, i32* %m, align 4, !dbg !6202
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x258, metadata !6203, metadata !DIExpression()), !dbg !6205
  %41 = load i32, i32* %m, align 4, !dbg !6205
  %conv = zext i32 %41 to i64, !dbg !6205
  store i64 %conv, i64* %__UNIQUE_ID___x258, align 8, !dbg !6205
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y259, metadata !6206, metadata !DIExpression()), !dbg !6205
  %42 = load i64, i64* %nbytes.addr, align 8, !dbg !6205
  store i64 %42, i64* %__UNIQUE_ID___y259, align 8, !dbg !6205
  %43 = load i64, i64* %__UNIQUE_ID___x258, align 8, !dbg !6205
  %44 = load i64, i64* %__UNIQUE_ID___y259, align 8, !dbg !6205
  %cmp26 = icmp ult i64 %43, %44, !dbg !6205
  br i1 %cmp26, label %cond.true, label %cond.false, !dbg !6205

cond.true:                                        ; preds = %do.end24
  %45 = load i64, i64* %__UNIQUE_ID___x258, align 8, !dbg !6205
  br label %cond.end, !dbg !6205

cond.false:                                       ; preds = %do.end24
  %46 = load i64, i64* %__UNIQUE_ID___y259, align 8, !dbg !6205
  br label %cond.end, !dbg !6205

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %45, %cond.true ], [ %46, %cond.false ], !dbg !6205
  store i64 %cond, i64* %tmp, align 8, !dbg !6205
  %47 = load i64, i64* %tmp, align 8, !dbg !6205
  %conv28 = trunc i64 %47 to i32, !dbg !6207
  store i32 %conv28, i32* %n, align 4, !dbg !6208
  %48 = load i32, i32* %n, align 4, !dbg !6209
  %cmp29 = icmp eq i32 %48, 0, !dbg !6210
  br i1 %cmp29, label %if.then31, label %if.end67, !dbg !6211

if.then31:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %runflags, metadata !6212, metadata !DIExpression()), !dbg !6213
  %49 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6214
  %call32 = call i32 @comedi_get_subdevice_runflags(%struct.comedi_subdevice* %49) #11, !dbg !6215
  store i32 %call32, i32* %runflags, align 4, !dbg !6213
  %50 = load i32, i32* %runflags, align 4, !dbg !6216
  %call33 = call zeroext i1 @comedi_is_runflags_running(i32 %50) #11, !dbg !6218
  br i1 %call33, label %if.end43, label %if.then34, !dbg !6219

if.then34:                                        ; preds = %if.then31
  %51 = load i32, i32* %runflags, align 4, !dbg !6220
  %call35 = call zeroext i1 @comedi_is_runflags_in_error(i32 %51) #11, !dbg !6223
  br i1 %call35, label %if.then36, label %if.end37, !dbg !6224

if.then36:                                        ; preds = %if.then34
  store i32 -32, i32* %retval1, align 4, !dbg !6225
  br label %if.end37, !dbg !6226

if.end37:                                         ; preds = %if.then36, %if.then34
  %52 = load i32, i32* %retval1, align 4, !dbg !6227
  %tobool38 = icmp ne i32 %52, 0, !dbg !6227
  br i1 %tobool38, label %if.then41, label %lor.lhs.false39, !dbg !6229

lor.lhs.false39:                                  ; preds = %if.end37
  %53 = load i64, i64* %nbytes.addr, align 8, !dbg !6230
  %tobool40 = icmp ne i64 %53, 0, !dbg !6230
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !6231

if.then41:                                        ; preds = %lor.lhs.false39, %if.end37
  store i8 1, i8* %become_nonbusy, align 1, !dbg !6232
  br label %if.end42, !dbg !6233

if.end42:                                         ; preds = %if.then41, %lor.lhs.false39
  br label %while.end, !dbg !6234

if.end43:                                         ; preds = %if.then31
  %54 = load i64, i64* %nbytes.addr, align 8, !dbg !6235
  %cmp44 = icmp eq i64 %54, 0, !dbg !6237
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !6238

if.then46:                                        ; preds = %if.end43
  br label %while.end, !dbg !6239

if.end47:                                         ; preds = %if.end43
  %55 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6240
  %f_flags = getelementptr inbounds %struct.file, %struct.file* %55, i32 0, i32 7, !dbg !6242
  %56 = load i32, i32* %f_flags, align 8, !dbg !6242
  %and48 = and i32 %56, 2048, !dbg !6243
  %tobool49 = icmp ne i32 %and48, 0, !dbg !6243
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !6244

if.then50:                                        ; preds = %if.end47
  store i32 -11, i32* %retval1, align 4, !dbg !6245
  br label %while.end, !dbg !6247

if.end51:                                         ; preds = %if.end47
  call void @schedule() #11, !dbg !6248
  store i8* null, i8** %__vpp_verify.i182, align 8, !dbg !6065
  %57 = load i8*, i8** %__vpp_verify.i182, align 8, !dbg !6065
  %58 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !6066, !srcloc !6111
  store i64 %58, i64* %pfo_val__.i183, align 8, !dbg !6066
  %59 = load i64, i64* %pfo_val__.i183, align 8, !dbg !6066
  %60 = inttoptr i64 %59 to %struct.task_struct*, !dbg !6066
  store %struct.task_struct* %60, %struct.task_struct** %tmp.i184, align 8, !dbg !6066
  %61 = load %struct.task_struct*, %struct.task_struct** %tmp.i184, align 8, !dbg !6066
  store %struct.task_struct* %61, %struct.task_struct** %pscr_ret__.i181, align 8, !dbg !6060
  %62 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i181, align 8, !dbg !6060
  store %struct.task_struct* %62, %struct.task_struct** %tmp1.i185, align 8, !dbg !6060
  %63 = load %struct.task_struct*, %struct.task_struct** %tmp1.i185, align 8, !dbg !6060
  %call53 = call i32 @signal_pending(%struct.task_struct* %63) #11, !dbg !6249
  %tobool54 = icmp ne i32 %call53, 0, !dbg !6249
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !6250

if.then55:                                        ; preds = %if.end51
  store i32 -512, i32* %retval1, align 4, !dbg !6251
  br label %while.end, !dbg !6253

if.end56:                                         ; preds = %if.end51
  %64 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6254
  %busy57 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %64, i32 0, i32 9, !dbg !6256
  %65 = load i8*, i8** %busy57, align 8, !dbg !6256
  %66 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6257
  %67 = bitcast %struct.file* %66 to i8*, !dbg !6257
  %cmp58 = icmp ne i8* %65, %67, !dbg !6258
  br i1 %cmp58, label %if.then65, label %lor.lhs.false60, !dbg !6259

lor.lhs.false60:                                  ; preds = %if.end56
  %68 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6260
  %cmd61 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %68, i32 0, i32 17, !dbg !6261
  %flags62 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %cmd61, i32 0, i32 1, !dbg !6262
  %69 = load i32, i32* %flags62, align 4, !dbg !6262
  %and63 = and i32 %69, 64, !dbg !6263
  %tobool64 = icmp ne i32 %and63, 0, !dbg !6263
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !6264

if.then65:                                        ; preds = %lor.lhs.false60, %if.end56
  store i32 -22, i32* %retval1, align 4, !dbg !6265
  br label %while.end, !dbg !6267

if.end66:                                         ; preds = %lor.lhs.false60
  br label %while.cond, !dbg !6268, !llvm.loop !6269

if.end67:                                         ; preds = %cond.end
  br label %do.body68, !dbg !6271

do.body68:                                        ; preds = %if.end67
  br label %do.body69, !dbg !6272

do.body69:                                        ; preds = %do.body68
  br label %do.body70, !dbg !6273

do.body70:                                        ; preds = %do.body69
  br label %do.end71, !dbg !6274

do.end71:                                         ; preds = %do.body70
  br label %do.body72, !dbg !6273

do.body72:                                        ; preds = %do.end71
  store i8* null, i8** %__vpp_verify.i187, align 8, !dbg !6058
  %70 = load i8*, i8** %__vpp_verify.i187, align 8, !dbg !6058
  %71 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !6059, !srcloc !6111
  store i64 %71, i64* %pfo_val__.i188, align 8, !dbg !6059
  %72 = load i64, i64* %pfo_val__.i188, align 8, !dbg !6059
  %73 = inttoptr i64 %72 to %struct.task_struct*, !dbg !6059
  store %struct.task_struct* %73, %struct.task_struct** %tmp.i189, align 8, !dbg !6059
  %74 = load %struct.task_struct*, %struct.task_struct** %tmp.i189, align 8, !dbg !6059
  store %struct.task_struct* %74, %struct.task_struct** %pscr_ret__.i186, align 8, !dbg !6053
  %75 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i186, align 8, !dbg !6053
  store %struct.task_struct* %75, %struct.task_struct** %tmp1.i190, align 8, !dbg !6053
  %76 = load %struct.task_struct*, %struct.task_struct** %tmp1.i190, align 8, !dbg !6053
  %state74 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %76, i32 0, i32 1, !dbg !6276
  store volatile i64 0, i64* %state74, align 16, !dbg !6276
  br label %do.end75, !dbg !6276

do.end75:                                         ; preds = %do.body72
  br label %do.end76, !dbg !6273

do.end76:                                         ; preds = %do.end75
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6272, !srcloc !6277
  br label %do.end77, !dbg !6272

do.end77:                                         ; preds = %do.end76
  %77 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6278
  %buf_read_ptr = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %77, i32 0, i32 9, !dbg !6279
  %78 = load i32, i32* %buf_read_ptr, align 8, !dbg !6279
  store i32 %78, i32* %rp, align 4, !dbg !6280
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x261, metadata !6281, metadata !DIExpression()), !dbg !6283
  %79 = load i32, i32* %n, align 4, !dbg !6283
  store i32 %79, i32* %__UNIQUE_ID___x261, align 4, !dbg !6283
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y262, metadata !6284, metadata !DIExpression()), !dbg !6283
  %80 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6283
  %prealloc_bufsz = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %80, i32 0, i32 1, !dbg !6283
  %81 = load i32, i32* %prealloc_bufsz, align 8, !dbg !6283
  %82 = load i32, i32* %rp, align 4, !dbg !6283
  %sub = sub i32 %81, %82, !dbg !6283
  store i32 %sub, i32* %__UNIQUE_ID___y262, align 4, !dbg !6283
  %83 = load i32, i32* %__UNIQUE_ID___x261, align 4, !dbg !6283
  %84 = load i32, i32* %__UNIQUE_ID___y262, align 4, !dbg !6283
  %cmp79 = icmp ult i32 %83, %84, !dbg !6283
  br i1 %cmp79, label %cond.true81, label %cond.false82, !dbg !6283

cond.true81:                                      ; preds = %do.end77
  %85 = load i32, i32* %__UNIQUE_ID___x261, align 4, !dbg !6283
  br label %cond.end83, !dbg !6283

cond.false82:                                     ; preds = %do.end77
  %86 = load i32, i32* %__UNIQUE_ID___y262, align 4, !dbg !6283
  br label %cond.end83, !dbg !6283

cond.end83:                                       ; preds = %cond.false82, %cond.true81
  %cond84 = phi i32 [ %85, %cond.true81 ], [ %86, %cond.false82 ], !dbg !6283
  store i32 %cond84, i32* %tmp78, align 4, !dbg !6283
  %87 = load i32, i32* %tmp78, align 4, !dbg !6283
  store i32 %87, i32* %n1, align 4, !dbg !6285
  %88 = load i32, i32* %n, align 4, !dbg !6286
  %89 = load i32, i32* %n1, align 4, !dbg !6287
  %sub85 = sub i32 %88, %89, !dbg !6288
  store i32 %sub85, i32* %n2, align 4, !dbg !6289
  %90 = load i8*, i8** %buf.addr, align 8, !dbg !6290
  %91 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6291
  %prealloc_buf = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %91, i32 0, i32 0, !dbg !6292
  %92 = load i8*, i8** %prealloc_buf, align 8, !dbg !6292
  %93 = load i32, i32* %rp, align 4, !dbg !6293
  %idx.ext = zext i32 %93 to i64, !dbg !6294
  %add.ptr = getelementptr i8, i8* %92, i64 %idx.ext, !dbg !6294
  %94 = load i32, i32* %n1, align 4, !dbg !6295
  %conv86 = zext i32 %94 to i64, !dbg !6295
  store i8* %90, i8** %to.addr.i, align 8
  store i8* %add.ptr, i8** %from.addr.i, align 8
  store i64 %conv86, i64* %n.addr.i, align 8
  %95 = load i8*, i8** %from.addr.i, align 8, !dbg !6296
  %96 = load i64, i64* %n.addr.i, align 8, !dbg !6296
  store i8* %95, i8** %addr.addr.i.i, align 8
  store i64 %96, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !6048
  %97 = load i32, i32* %sz.i.i, align 4, !dbg !6297
  %cmp.i.i = icmp sge i32 %97, 0, !dbg !6297
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !6297

land.rhs.i.i:                                     ; preds = %cond.end83
  %98 = load i32, i32* %sz.i.i, align 4, !dbg !6297
  %conv.i.i = sext i32 %98 to i64, !dbg !6297
  %99 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6297
  %cmp1.i.i = icmp ult i64 %conv.i.i, %99, !dbg !6297
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %cond.end83
  %100 = phi i1 [ false, %cond.end83 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !6299
  %lnot.i.i = xor i1 %100, true, !dbg !6297
  %lnot.ext.i.i = zext i1 %100 to i32, !dbg !6297
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !6297
  br i1 %100, label %if.then.i.i, label %if.end10.i.i, !dbg !6300

if.then.i.i:                                      ; preds = %land.end.i.i
  %101 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6301
  %102 = call i1 @llvm.is.constant.i64(i64 %101) #9, !dbg !6304
  br i1 %102, label %if.else.i.i, label %if.then5.i.i, !dbg !6305

if.then5.i.i:                                     ; preds = %if.then.i.i
  %103 = load i32, i32* %sz.i.i, align 4, !dbg !6306
  %104 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6307
  call void @copy_overflow(i32 %103, i64 %104) #12, !dbg !6308
  br label %if.end9.i.i, !dbg !6308

if.else.i.i:                                      ; preds = %if.then.i.i
  %105 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !6309
  %tobool6.i.i = trunc i8 %105 to i1, !dbg !6309
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !6311

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #12, !dbg !6312
  br label %if.end.i.i, !dbg !6312

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #12, !dbg !6313
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !6314
  br label %check_copy_size.exit.i, !dbg !6314

if.end10.i.i:                                     ; preds = %land.end.i.i
  %106 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6049
  %cmp11.i.i = icmp ugt i64 %106, 2147483647, !dbg !6049
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !6049
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !6049
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !6049
  %107 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !6315
  %tobool17.i.i = icmp ne i32 %107, 0, !dbg !6315
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !6315
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !6315
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !6315
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !6049

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !6317, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !6321, !srcloc !6323
  br label %if.end31.i.i, !dbg !6324

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %108 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !6049
  %tobool32.i.i = icmp ne i32 %108, 0, !dbg !6049
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !6049
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !6049
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !6049
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !6315
  %109 = load i64, i64* %tmp.i.i, align 8, !dbg !6049
  %tobool38.i.i = icmp ne i64 %109, 0, !dbg !6325
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !6326

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !6327
  br label %check_copy_size.exit.i, !dbg !6327

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %110 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !6328
  %111 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6329
  %112 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !6330
  %tobool41.i.i = trunc i8 %112 to i1, !dbg !6330
  call void @check_object_size(i8* %110, i64 %111, i1 zeroext %tobool41.i.i) #12, !dbg !6331
  store i1 true, i1* %retval.i.i, align 1, !dbg !6332
  br label %check_copy_size.exit.i, !dbg !6332

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %113 = load i1, i1* %retval.i.i, align 1, !dbg !6333
  %lnot.i = xor i1 %113, true, !dbg !6296
  %lnot.ext.i = zext i1 %113 to i32, !dbg !6296
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !6296
  br i1 %113, label %if.then.i, label %copy_to_user.exit, !dbg !6334

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %114 = load i8*, i8** %to.addr.i, align 8, !dbg !6335
  %115 = load i8*, i8** %from.addr.i, align 8, !dbg !6336
  %116 = load i64, i64* %n.addr.i, align 8, !dbg !6337
  %call2.i = call i64 @_copy_to_user(i8* %114, i8* %115, i64 %116) #12, !dbg !6338
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !6339
  br label %copy_to_user.exit, !dbg !6340

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %117 = load i64, i64* %n.addr.i, align 8, !dbg !6341
  %conv88 = trunc i64 %117 to i32, !dbg !6342
  store i32 %conv88, i32* %m, align 4, !dbg !6343
  %118 = load i32, i32* %m, align 4, !dbg !6344
  %tobool89 = icmp ne i32 %118, 0, !dbg !6344
  br i1 %tobool89, label %if.then90, label %if.else, !dbg !6345

if.then90:                                        ; preds = %copy_to_user.exit
  %119 = load i32, i32* %n2, align 4, !dbg !6346
  %120 = load i32, i32* %m, align 4, !dbg !6347
  %add = add i32 %120, %119, !dbg !6347
  store i32 %add, i32* %m, align 4, !dbg !6347
  br label %if.end100, !dbg !6348

if.else:                                          ; preds = %copy_to_user.exit
  %121 = load i32, i32* %n2, align 4, !dbg !6349
  %tobool91 = icmp ne i32 %121, 0, !dbg !6349
  br i1 %tobool91, label %if.then92, label %if.end99, !dbg !6350

if.then92:                                        ; preds = %if.else
  %122 = load i8*, i8** %buf.addr, align 8, !dbg !6351
  %123 = load i32, i32* %n1, align 4, !dbg !6352
  %idx.ext93 = zext i32 %123 to i64, !dbg !6353
  %add.ptr94 = getelementptr i8, i8* %122, i64 %idx.ext93, !dbg !6353
  %124 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6354
  %prealloc_buf95 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %124, i32 0, i32 0, !dbg !6355
  %125 = load i8*, i8** %prealloc_buf95, align 8, !dbg !6355
  %126 = load i32, i32* %n2, align 4, !dbg !6356
  %conv96 = zext i32 %126 to i64, !dbg !6356
  store i8* %add.ptr94, i8** %to.addr.i198, align 8
  store i8* %125, i8** %from.addr.i199, align 8
  store i64 %conv96, i64* %n.addr.i200, align 8
  %127 = load i8*, i8** %from.addr.i199, align 8, !dbg !6357
  %128 = load i64, i64* %n.addr.i200, align 8, !dbg !6357
  store i8* %127, i8** %addr.addr.i.i192, align 8
  store i64 %128, i64* %bytes.addr.i.i193, align 8
  store i8 1, i8* %is_source.addr.i.i194, align 1
  store i32 -1, i32* %sz.i.i195, align 4, !dbg !6032
  %129 = load i32, i32* %sz.i.i195, align 4, !dbg !6358
  %cmp.i.i201 = icmp sge i32 %129, 0, !dbg !6358
  br i1 %cmp.i.i201, label %land.rhs.i.i204, label %land.end.i.i208, !dbg !6358

land.rhs.i.i204:                                  ; preds = %if.then92
  %130 = load i32, i32* %sz.i.i195, align 4, !dbg !6358
  %conv.i.i202 = sext i32 %130 to i64, !dbg !6358
  %131 = load i64, i64* %bytes.addr.i.i193, align 8, !dbg !6358
  %cmp1.i.i203 = icmp ult i64 %conv.i.i202, %131, !dbg !6358
  br label %land.end.i.i208

land.end.i.i208:                                  ; preds = %land.rhs.i.i204, %if.then92
  %132 = phi i1 [ false, %if.then92 ], [ %cmp1.i.i203, %land.rhs.i.i204 ], !dbg !6359
  %lnot.i.i205 = xor i1 %132, true, !dbg !6358
  %lnot.ext.i.i206 = zext i1 %132 to i32, !dbg !6358
  %conv4.i.i207 = sext i32 %lnot.ext.i.i206 to i64, !dbg !6358
  br i1 %132, label %if.then.i.i209, label %if.end10.i.i224, !dbg !6360

if.then.i.i209:                                   ; preds = %land.end.i.i208
  %133 = load i64, i64* %bytes.addr.i.i193, align 8, !dbg !6361
  %134 = call i1 @llvm.is.constant.i64(i64 %133) #9, !dbg !6362
  br i1 %134, label %if.else.i.i212, label %if.then5.i.i210, !dbg !6363

if.then5.i.i210:                                  ; preds = %if.then.i.i209
  %135 = load i32, i32* %sz.i.i195, align 4, !dbg !6364
  %136 = load i64, i64* %bytes.addr.i.i193, align 8, !dbg !6365
  call void @copy_overflow(i32 %135, i64 %136) #12, !dbg !6366
  br label %if.end9.i.i216, !dbg !6366

if.else.i.i212:                                   ; preds = %if.then.i.i209
  %137 = load i8, i8* %is_source.addr.i.i194, align 1, !dbg !6367
  %tobool6.i.i211 = trunc i8 %137 to i1, !dbg !6367
  br i1 %tobool6.i.i211, label %if.then7.i.i213, label %if.else8.i.i214, !dbg !6368

if.then7.i.i213:                                  ; preds = %if.else.i.i212
  call void @__bad_copy_from() #12, !dbg !6369
  br label %if.end.i.i215, !dbg !6369

if.else8.i.i214:                                  ; preds = %if.else.i.i212
  call void @__bad_copy_to() #12, !dbg !6370
  br label %if.end.i.i215

if.end.i.i215:                                    ; preds = %if.else8.i.i214, %if.then7.i.i213
  br label %if.end9.i.i216

if.end9.i.i216:                                   ; preds = %if.end.i.i215, %if.then5.i.i210
  store i1 false, i1* %retval.i.i191, align 1, !dbg !6371
  br label %check_copy_size.exit.i238, !dbg !6371

if.end10.i.i224:                                  ; preds = %land.end.i.i208
  %138 = load i64, i64* %bytes.addr.i.i193, align 8, !dbg !6036
  %cmp11.i.i217 = icmp ugt i64 %138, 2147483647, !dbg !6036
  %lnot13.i.i218 = xor i1 %cmp11.i.i217, true, !dbg !6036
  %lnot.ext16.i.i219 = zext i1 %cmp11.i.i217 to i32, !dbg !6036
  store i32 %lnot.ext16.i.i219, i32* %__ret_warn_on.i.i196, align 4, !dbg !6036
  %139 = load i32, i32* %__ret_warn_on.i.i196, align 4, !dbg !6372
  %tobool17.i.i220 = icmp ne i32 %139, 0, !dbg !6372
  %lnot18.i.i221 = xor i1 %tobool17.i.i220, true, !dbg !6372
  %lnot.ext21.i.i222 = zext i1 %tobool17.i.i220 to i32, !dbg !6372
  %conv22.i.i223 = sext i32 %lnot.ext21.i.i222 to i64, !dbg !6372
  br i1 %tobool17.i.i220, label %if.then24.i.i225, label %if.end31.i.i231, !dbg !6036

if.then24.i.i225:                                 ; preds = %if.end10.i.i224
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !6373, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !6374, !srcloc !6323
  br label %if.end31.i.i231, !dbg !6375

if.end31.i.i231:                                  ; preds = %if.then24.i.i225, %if.end10.i.i224
  %140 = load i32, i32* %__ret_warn_on.i.i196, align 4, !dbg !6036
  %tobool32.i.i226 = icmp ne i32 %140, 0, !dbg !6036
  %lnot33.i.i227 = xor i1 %tobool32.i.i226, true, !dbg !6036
  %lnot.ext36.i.i228 = zext i1 %tobool32.i.i226 to i32, !dbg !6036
  %conv37.i.i229 = sext i32 %lnot.ext36.i.i228 to i64, !dbg !6036
  store i64 %conv37.i.i229, i64* %tmp.i.i197, align 8, !dbg !6372
  %141 = load i64, i64* %tmp.i.i197, align 8, !dbg !6036
  %tobool38.i.i230 = icmp ne i64 %141, 0, !dbg !6376
  br i1 %tobool38.i.i230, label %if.then39.i.i232, label %if.end40.i.i234, !dbg !6377

if.then39.i.i232:                                 ; preds = %if.end31.i.i231
  store i1 false, i1* %retval.i.i191, align 1, !dbg !6378
  br label %check_copy_size.exit.i238, !dbg !6378

if.end40.i.i234:                                  ; preds = %if.end31.i.i231
  %142 = load i8*, i8** %addr.addr.i.i192, align 8, !dbg !6379
  %143 = load i64, i64* %bytes.addr.i.i193, align 8, !dbg !6380
  %144 = load i8, i8* %is_source.addr.i.i194, align 1, !dbg !6381
  %tobool41.i.i233 = trunc i8 %144 to i1, !dbg !6381
  call void @check_object_size(i8* %142, i64 %143, i1 zeroext %tobool41.i.i233) #12, !dbg !6382
  store i1 true, i1* %retval.i.i191, align 1, !dbg !6383
  br label %check_copy_size.exit.i238, !dbg !6383

check_copy_size.exit.i238:                        ; preds = %if.end40.i.i234, %if.then39.i.i232, %if.end9.i.i216
  %145 = load i1, i1* %retval.i.i191, align 1, !dbg !6384
  %lnot.i235 = xor i1 %145, true, !dbg !6357
  %lnot.ext.i236 = zext i1 %145 to i32, !dbg !6357
  %conv.i237 = sext i32 %lnot.ext.i236 to i64, !dbg !6357
  br i1 %145, label %if.then.i240, label %copy_to_user.exit241, !dbg !6385

if.then.i240:                                     ; preds = %check_copy_size.exit.i238
  %146 = load i8*, i8** %to.addr.i198, align 8, !dbg !6386
  %147 = load i8*, i8** %from.addr.i199, align 8, !dbg !6387
  %148 = load i64, i64* %n.addr.i200, align 8, !dbg !6388
  %call2.i239 = call i64 @_copy_to_user(i8* %146, i8* %147, i64 %148) #12, !dbg !6389
  store i64 %call2.i239, i64* %n.addr.i200, align 8, !dbg !6390
  br label %copy_to_user.exit241, !dbg !6391

copy_to_user.exit241:                             ; preds = %check_copy_size.exit.i238, %if.then.i240
  %149 = load i64, i64* %n.addr.i200, align 8, !dbg !6392
  %conv98 = trunc i64 %149 to i32, !dbg !6393
  store i32 %conv98, i32* %m, align 4, !dbg !6394
  br label %if.end99, !dbg !6395

if.end99:                                         ; preds = %copy_to_user.exit241, %if.else
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.then90
  %150 = load i32, i32* %m, align 4, !dbg !6396
  %tobool101 = icmp ne i32 %150, 0, !dbg !6396
  br i1 %tobool101, label %if.then102, label %if.end104, !dbg !6398

if.then102:                                       ; preds = %if.end100
  %151 = load i32, i32* %m, align 4, !dbg !6399
  %152 = load i32, i32* %n, align 4, !dbg !6401
  %sub103 = sub i32 %152, %151, !dbg !6401
  store i32 %sub103, i32* %n, align 4, !dbg !6401
  store i32 -14, i32* %retval1, align 4, !dbg !6402
  br label %if.end104, !dbg !6403

if.end104:                                        ; preds = %if.then102, %if.end100
  %153 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6404
  %154 = load i32, i32* %n, align 4, !dbg !6405
  %call105 = call i32 @comedi_buf_read_alloc(%struct.comedi_subdevice* %153, i32 %154) #11, !dbg !6406
  %155 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6407
  %156 = load i32, i32* %n, align 4, !dbg !6408
  %call106 = call i32 @comedi_buf_read_free(%struct.comedi_subdevice* %155, i32 %156) #11, !dbg !6409
  %157 = load i32, i32* %n, align 4, !dbg !6410
  %conv107 = zext i32 %157 to i64, !dbg !6410
  %158 = load i64, i64* %count, align 8, !dbg !6411
  %add108 = add i64 %158, %conv107, !dbg !6411
  store i64 %add108, i64* %count, align 8, !dbg !6411
  %159 = load i32, i32* %n, align 4, !dbg !6412
  %conv109 = zext i32 %159 to i64, !dbg !6412
  %160 = load i64, i64* %nbytes.addr, align 8, !dbg !6413
  %sub110 = sub i64 %160, %conv109, !dbg !6413
  store i64 %sub110, i64* %nbytes.addr, align 8, !dbg !6413
  %161 = load i32, i32* %n, align 4, !dbg !6414
  %162 = load i8*, i8** %buf.addr, align 8, !dbg !6415
  %idx.ext111 = zext i32 %161 to i64, !dbg !6415
  %add.ptr112 = getelementptr i8, i8* %162, i64 %idx.ext111, !dbg !6415
  store i8* %add.ptr112, i8** %buf.addr, align 8, !dbg !6415
  br label %while.cond, !dbg !6180, !llvm.loop !6269

while.end:                                        ; preds = %if.then65, %if.then55, %if.then50, %if.then46, %if.end42, %land.end
  %163 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6416
  %wait_head113 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %163, i32 0, i32 18, !dbg !6417
  call void @remove_wait_queue(%struct.wait_queue_head* %wait_head113, %struct.wait_queue_entry* %wait) #11, !dbg !6418
  br label %do.body114, !dbg !6419

do.body114:                                       ; preds = %while.end
  br label %do.body115, !dbg !6420

do.body115:                                       ; preds = %do.body114
  br label %do.body116, !dbg !6421

do.body116:                                       ; preds = %do.body115
  br label %do.end117, !dbg !6422

do.end117:                                        ; preds = %do.body116
  br label %do.body118, !dbg !6421

do.body118:                                       ; preds = %do.end117
  store i8* null, i8** %__vpp_verify.i243, align 8, !dbg !6007
  %164 = load i8*, i8** %__vpp_verify.i243, align 8, !dbg !6007
  %165 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !6010, !srcloc !6111
  store i64 %165, i64* %pfo_val__.i244, align 8, !dbg !6010
  %166 = load i64, i64* %pfo_val__.i244, align 8, !dbg !6010
  %167 = inttoptr i64 %166 to %struct.task_struct*, !dbg !6010
  store %struct.task_struct* %167, %struct.task_struct** %tmp.i245, align 8, !dbg !6010
  %168 = load %struct.task_struct*, %struct.task_struct** %tmp.i245, align 8, !dbg !6010
  store %struct.task_struct* %168, %struct.task_struct** %pscr_ret__.i242, align 8, !dbg !6000
  %169 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i242, align 8, !dbg !6000
  store %struct.task_struct* %169, %struct.task_struct** %tmp1.i246, align 8, !dbg !6000
  %170 = load %struct.task_struct*, %struct.task_struct** %tmp1.i246, align 8, !dbg !6000
  %state120 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %170, i32 0, i32 1, !dbg !6424
  store volatile i64 0, i64* %state120, align 16, !dbg !6424
  br label %do.end121, !dbg !6424

do.end121:                                        ; preds = %do.body118
  br label %do.end122, !dbg !6421

do.end122:                                        ; preds = %do.end121
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6420, !srcloc !6425
  br label %do.end123, !dbg !6420

do.end123:                                        ; preds = %do.end122
  %171 = load i8, i8* %become_nonbusy, align 1, !dbg !6426
  %tobool124 = trunc i8 %171 to i1, !dbg !6426
  br i1 %tobool124, label %land.lhs.true, label %if.end165, !dbg !6428

land.lhs.true:                                    ; preds = %do.end123
  %172 = load i64, i64* %count, align 8, !dbg !6429
  %cmp126 = icmp eq i64 %172, 0, !dbg !6430
  br i1 %cmp126, label %if.then128, label %if.end165, !dbg !6431

if.then128:                                       ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %new_s, metadata !6432, metadata !DIExpression()), !dbg !6434
  %173 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !6435
  %attach_lock129 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %173, i32 0, i32 13, !dbg !6436
  call void @up_read(%struct.rw_semaphore* %attach_lock129) #11, !dbg !6437
  store i8 0, i8* %attach_locked, align 1, !dbg !6438
  %174 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !6439
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %174, i32 0, i32 12, !dbg !6440
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !6441
  %175 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6442
  %call130 = call %struct.comedi_subdevice* @comedi_file_read_subdevice(%struct.file* %175) #11, !dbg !6443
  store %struct.comedi_subdevice* %call130, %struct.comedi_subdevice** %new_s, align 8, !dbg !6444
  %176 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !6445
  %attached131 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %176, i32 0, i32 10, !dbg !6447
  %bf.load132 = load i8, i8* %attached131, align 8, !dbg !6447
  %bf.clear133 = and i8 %bf.load132, 1, !dbg !6447
  %bf.cast134 = zext i8 %bf.clear133 to i32, !dbg !6447
  %tobool135 = icmp ne i32 %bf.cast134, 0, !dbg !6445
  br i1 %tobool135, label %land.lhs.true136, label %if.end163, !dbg !6448

land.lhs.true136:                                 ; preds = %if.then128
  %177 = load i32, i32* %old_detach_count, align 4, !dbg !6449
  %178 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !6450
  %detach_count137 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %178, i32 0, i32 6, !dbg !6451
  %179 = load i32, i32* %detach_count137, align 4, !dbg !6451
  %cmp138 = icmp eq i32 %177, %179, !dbg !6452
  br i1 %cmp138, label %land.lhs.true140, label %if.end163, !dbg !6453

land.lhs.true140:                                 ; preds = %land.lhs.true136
  %180 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6454
  %181 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %new_s, align 8, !dbg !6455
  %cmp141 = icmp eq %struct.comedi_subdevice* %180, %181, !dbg !6456
  br i1 %cmp141, label %land.lhs.true143, label %if.end163, !dbg !6457

land.lhs.true143:                                 ; preds = %land.lhs.true140
  %182 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %new_s, align 8, !dbg !6458
  %async144 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %182, i32 0, i32 7, !dbg !6459
  %183 = load %struct.comedi_async*, %struct.comedi_async** %async144, align 8, !dbg !6459
  %184 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6460
  %cmp145 = icmp eq %struct.comedi_async* %183, %184, !dbg !6461
  br i1 %cmp145, label %land.lhs.true147, label %if.end163, !dbg !6462

land.lhs.true147:                                 ; preds = %land.lhs.true143
  %185 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6463
  %busy148 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %185, i32 0, i32 9, !dbg !6464
  %186 = load i8*, i8** %busy148, align 8, !dbg !6464
  %187 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6465
  %188 = bitcast %struct.file* %187 to i8*, !dbg !6465
  %cmp149 = icmp eq i8* %186, %188, !dbg !6466
  br i1 %cmp149, label %land.lhs.true151, label %if.end163, !dbg !6467

land.lhs.true151:                                 ; preds = %land.lhs.true147
  %189 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6468
  %cmd152 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %189, i32 0, i32 17, !dbg !6469
  %flags153 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %cmd152, i32 0, i32 1, !dbg !6470
  %190 = load i32, i32* %flags153, align 4, !dbg !6470
  %and154 = and i32 %190, 64, !dbg !6471
  %tobool155 = icmp ne i32 %and154, 0, !dbg !6471
  br i1 %tobool155, label %if.end163, label %land.lhs.true156, !dbg !6472

land.lhs.true156:                                 ; preds = %land.lhs.true151
  %191 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6473
  %call157 = call zeroext i1 @comedi_is_subdevice_running(%struct.comedi_subdevice* %191) #11, !dbg !6474
  br i1 %call157, label %if.end163, label %land.lhs.true158, !dbg !6475

land.lhs.true158:                                 ; preds = %land.lhs.true156
  %192 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6476
  %call159 = call i32 @comedi_buf_read_n_available(%struct.comedi_subdevice* %192) #11, !dbg !6477
  %cmp160 = icmp eq i32 %call159, 0, !dbg !6478
  br i1 %cmp160, label %if.then162, label %if.end163, !dbg !6479

if.then162:                                       ; preds = %land.lhs.true158
  %193 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !6480
  %194 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6481
  call void @do_become_nonbusy(%struct.comedi_device* %193, %struct.comedi_subdevice* %194) #11, !dbg !6482
  br label %if.end163, !dbg !6482

if.end163:                                        ; preds = %if.then162, %land.lhs.true158, %land.lhs.true156, %land.lhs.true151, %land.lhs.true147, %land.lhs.true143, %land.lhs.true140, %land.lhs.true136, %if.then128
  %195 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !6483
  %mutex164 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %195, i32 0, i32 12, !dbg !6484
  call void @mutex_unlock(%struct.mutex* %mutex164) #11, !dbg !6485
  br label %if.end165, !dbg !6486

if.end165:                                        ; preds = %if.end163, %land.lhs.true, %do.end123
  br label %out, !dbg !6487

out:                                              ; preds = %if.end165, %if.then14, %if.then8, %if.then
  call void @llvm.dbg.label(metadata !6488), !dbg !6489
  %196 = load i8, i8* %attach_locked, align 1, !dbg !6490
  %tobool166 = trunc i8 %196 to i1, !dbg !6490
  br i1 %tobool166, label %if.then167, label %if.end169, !dbg !6492

if.then167:                                       ; preds = %out
  %197 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !6493
  %attach_lock168 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %197, i32 0, i32 13, !dbg !6494
  call void @up_read(%struct.rw_semaphore* %attach_lock168) #11, !dbg !6495
  br label %if.end169, !dbg !6495

if.end169:                                        ; preds = %if.then167, %out
  %198 = load i64, i64* %count, align 8, !dbg !6496
  %tobool170 = icmp ne i64 %198, 0, !dbg !6496
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !6496

cond.true171:                                     ; preds = %if.end169
  %199 = load i64, i64* %count, align 8, !dbg !6497
  br label %cond.end174, !dbg !6496

cond.false172:                                    ; preds = %if.end169
  %200 = load i32, i32* %retval1, align 4, !dbg !6498
  %conv173 = sext i32 %200 to i64, !dbg !6498
  br label %cond.end174, !dbg !6496

cond.end174:                                      ; preds = %cond.false172, %cond.true171
  %cond175 = phi i64 [ %199, %cond.true171 ], [ %conv173, %cond.false172 ], !dbg !6496
  ret i64 %cond175, !dbg !6499
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @comedi_write(%struct.file* %file, i8* %buf, i64 %nbytes, i64* %offset) #0 !dbg !6500 {
entry:
  %pscr_ret__.i238 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i238, metadata !5994, metadata !DIExpression()), !dbg !6501
  %__vpp_verify.i239 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i239, metadata !6005, metadata !DIExpression()), !dbg !6506
  %pfo_val__.i240 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i240, metadata !6008, metadata !DIExpression()), !dbg !6507
  %tmp.i241 = alloca %struct.task_struct*, align 8
  %tmp1.i242 = alloca %struct.task_struct*, align 8
  %retval.i.i187 = alloca i1, align 1
  %addr.addr.i.i188 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i188, metadata !6011, metadata !DIExpression()), !dbg !6508
  %bytes.addr.i.i189 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i189, metadata !6027, metadata !DIExpression()), !dbg !6516
  %is_source.addr.i.i190 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i190, metadata !6029, metadata !DIExpression()), !dbg !6517
  %sz.i.i191 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i191, metadata !6031, metadata !DIExpression()), !dbg !6518
  %__ret_warn_on.i.i192 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i192, metadata !6033, metadata !DIExpression()), !dbg !6519
  %tmp.i.i193 = alloca i64, align 8
  %to.addr.i194 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i194, metadata !6520, metadata !DIExpression()), !dbg !6521
  %from.addr.i195 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i195, metadata !6522, metadata !DIExpression()), !dbg !6523
  %n.addr.i196 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i196, metadata !6524, metadata !DIExpression()), !dbg !6525
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !6011, metadata !DIExpression()), !dbg !6526
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !6027, metadata !DIExpression()), !dbg !6529
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !6029, metadata !DIExpression()), !dbg !6530
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !6031, metadata !DIExpression()), !dbg !6531
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !6033, metadata !DIExpression()), !dbg !6532
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6520, metadata !DIExpression()), !dbg !6533
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6522, metadata !DIExpression()), !dbg !6534
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6524, metadata !DIExpression()), !dbg !6535
  %pscr_ret__.i182 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i182, metadata !5994, metadata !DIExpression()), !dbg !6536
  %__vpp_verify.i183 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i183, metadata !6005, metadata !DIExpression()), !dbg !6541
  %pfo_val__.i184 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i184, metadata !6008, metadata !DIExpression()), !dbg !6542
  %tmp.i185 = alloca %struct.task_struct*, align 8
  %tmp1.i186 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i177 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i177, metadata !5994, metadata !DIExpression()), !dbg !6543
  %__vpp_verify.i178 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i178, metadata !6005, metadata !DIExpression()), !dbg !6548
  %pfo_val__.i179 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i179, metadata !6008, metadata !DIExpression()), !dbg !6549
  %tmp.i180 = alloca %struct.task_struct*, align 8
  %tmp1.i181 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i172 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i172, metadata !5994, metadata !DIExpression()), !dbg !6550
  %__vpp_verify.i173 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i173, metadata !6005, metadata !DIExpression()), !dbg !6555
  %pfo_val__.i174 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i174, metadata !6008, metadata !DIExpression()), !dbg !6556
  %tmp.i175 = alloca %struct.task_struct*, align 8
  %tmp1.i176 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !5994, metadata !DIExpression()), !dbg !6557
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !6005, metadata !DIExpression()), !dbg !6559
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !6008, metadata !DIExpression()), !dbg !6560
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %file.addr = alloca %struct.file*, align 8
  %buf.addr = alloca i8*, align 8
  %nbytes.addr = alloca i64, align 8
  %offset.addr = alloca i64*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %async = alloca %struct.comedi_async*, align 8
  %n = alloca i32, align 4
  %m = alloca i32, align 4
  %count = alloca i64, align 8
  %retval1 = alloca i32, align 4
  %wait = alloca %struct.wait_queue_entry, align 8
  %cfp = alloca %struct.comedi_file*, align 8
  %dev = alloca %struct.comedi_device*, align 8
  %become_nonbusy = alloca i8, align 1
  %attach_locked = alloca i8, align 1
  %old_detach_count = alloca i32, align 4
  %runflags = alloca i32, align 4
  %wp = alloca i32, align 4
  %n1 = alloca i32, align 4
  %n2 = alloca i32, align 4
  %__UNIQUE_ID___x251 = alloca i64, align 8
  %__UNIQUE_ID___y252 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %__UNIQUE_ID___x254 = alloca i32, align 4
  %__UNIQUE_ID___y255 = alloca i32, align 4
  %tmp79 = alloca i32, align 4
  %new_s = alloca %struct.comedi_subdevice*, align 8
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !6561, metadata !DIExpression()), !dbg !6562
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6563, metadata !DIExpression()), !dbg !6564
  store i64 %nbytes, i64* %nbytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nbytes.addr, metadata !6565, metadata !DIExpression()), !dbg !6566
  store i64* %offset, i64** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %offset.addr, metadata !6567, metadata !DIExpression()), !dbg !6568
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !6569, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.declare(metadata %struct.comedi_async** %async, metadata !6571, metadata !DIExpression()), !dbg !6572
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6573, metadata !DIExpression()), !dbg !6574
  call void @llvm.dbg.declare(metadata i32* %m, metadata !6575, metadata !DIExpression()), !dbg !6576
  call void @llvm.dbg.declare(metadata i64* %count, metadata !6577, metadata !DIExpression()), !dbg !6578
  store i64 0, i64* %count, align 8, !dbg !6578
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !6579, metadata !DIExpression()), !dbg !6580
  store i32 0, i32* %retval1, align 4, !dbg !6580
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %wait, metadata !6581, metadata !DIExpression()), !dbg !6582
  %flags = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 0, !dbg !6582
  store i32 0, i32* %flags, align 8, !dbg !6582
  %private = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 1, !dbg !6582
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !6559
  %0 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !6559
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !6560, !srcloc !6111
  store i64 %1, i64* %pfo_val__.i, align 8, !dbg !6560
  %2 = load i64, i64* %pfo_val__.i, align 8, !dbg !6560
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !6560
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i, align 8, !dbg !6560
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !6560
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !6557
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !6557
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i, align 8, !dbg !6557
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !6557
  %7 = bitcast %struct.task_struct* %6 to i8*, !dbg !6582
  store i8* %7, i8** %private, align 8, !dbg !6582
  %func = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 2, !dbg !6582
  store i32 (%struct.wait_queue_entry*, i32, i32, i8*)* @default_wake_function, i32 (%struct.wait_queue_entry*, i32, i32, i8*)** %func, align 8, !dbg !6582
  %entry2 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 3, !dbg !6582
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry2, i32 0, i32 0, !dbg !6582
  store %struct.list_head* null, %struct.list_head** %next, align 8, !dbg !6582
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %entry2, i32 0, i32 1, !dbg !6582
  store %struct.list_head* null, %struct.list_head** %prev, align 8, !dbg !6582
  call void @llvm.dbg.declare(metadata %struct.comedi_file** %cfp, metadata !6583, metadata !DIExpression()), !dbg !6584
  %8 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6585
  %private_data = getelementptr inbounds %struct.file, %struct.file* %8, i32 0, i32 15, !dbg !6586
  %9 = load i8*, i8** %private_data, align 8, !dbg !6586
  %10 = bitcast i8* %9 to %struct.comedi_file*, !dbg !6585
  store %struct.comedi_file* %10, %struct.comedi_file** %cfp, align 8, !dbg !6584
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !6587, metadata !DIExpression()), !dbg !6588
  %11 = load %struct.comedi_file*, %struct.comedi_file** %cfp, align 8, !dbg !6589
  %dev3 = getelementptr inbounds %struct.comedi_file, %struct.comedi_file* %11, i32 0, i32 0, !dbg !6590
  %12 = load %struct.comedi_device*, %struct.comedi_device** %dev3, align 8, !dbg !6590
  store %struct.comedi_device* %12, %struct.comedi_device** %dev, align 8, !dbg !6588
  call void @llvm.dbg.declare(metadata i8* %become_nonbusy, metadata !6591, metadata !DIExpression()), !dbg !6592
  store i8 0, i8* %become_nonbusy, align 1, !dbg !6592
  call void @llvm.dbg.declare(metadata i8* %attach_locked, metadata !6593, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.declare(metadata i32* %old_detach_count, metadata !6595, metadata !DIExpression()), !dbg !6596
  %13 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !6597
  %attach_lock = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %13, i32 0, i32 13, !dbg !6598
  call void @down_read(%struct.rw_semaphore* %attach_lock) #11, !dbg !6599
  store i8 1, i8* %attach_locked, align 1, !dbg !6600
  %14 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !6601
  %detach_count = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %14, i32 0, i32 6, !dbg !6602
  %15 = load i32, i32* %detach_count, align 4, !dbg !6602
  store i32 %15, i32* %old_detach_count, align 4, !dbg !6603
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !6604
  %attached = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %16, i32 0, i32 10, !dbg !6606
  %bf.load = load i8, i8* %attached, align 8, !dbg !6606
  %bf.clear = and i8 %bf.load, 1, !dbg !6606
  %bf.cast = zext i8 %bf.clear to i32, !dbg !6606
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6604
  br i1 %tobool, label %if.end, label %if.then, !dbg !6607

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval1, align 4, !dbg !6608
  br label %out, !dbg !6610

if.end:                                           ; preds = %entry
  %17 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6611
  %call4 = call %struct.comedi_subdevice* @comedi_file_write_subdevice(%struct.file* %17) #11, !dbg !6612
  store %struct.comedi_subdevice* %call4, %struct.comedi_subdevice** %s, align 8, !dbg !6613
  %18 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6614
  %tobool5 = icmp ne %struct.comedi_subdevice* %18, null, !dbg !6614
  br i1 %tobool5, label %lor.lhs.false, label %if.then8, !dbg !6616

lor.lhs.false:                                    ; preds = %if.end
  %19 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6617
  %async6 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %19, i32 0, i32 7, !dbg !6618
  %20 = load %struct.comedi_async*, %struct.comedi_async** %async6, align 8, !dbg !6618
  %tobool7 = icmp ne %struct.comedi_async* %20, null, !dbg !6617
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !6619

if.then8:                                         ; preds = %lor.lhs.false, %if.end
  store i32 -5, i32* %retval1, align 4, !dbg !6620
  br label %out, !dbg !6622

if.end9:                                          ; preds = %lor.lhs.false
  %21 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6623
  %async10 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %21, i32 0, i32 7, !dbg !6624
  %22 = load %struct.comedi_async*, %struct.comedi_async** %async10, align 8, !dbg !6624
  store %struct.comedi_async* %22, %struct.comedi_async** %async, align 8, !dbg !6625
  %23 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6626
  %busy = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %23, i32 0, i32 9, !dbg !6628
  %24 = load i8*, i8** %busy, align 8, !dbg !6628
  %25 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6629
  %26 = bitcast %struct.file* %25 to i8*, !dbg !6629
  %cmp = icmp ne i8* %24, %26, !dbg !6630
  br i1 %cmp, label %if.then14, label %lor.lhs.false11, !dbg !6631

lor.lhs.false11:                                  ; preds = %if.end9
  %27 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6632
  %cmd = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %27, i32 0, i32 17, !dbg !6633
  %flags12 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %cmd, i32 0, i32 1, !dbg !6634
  %28 = load i32, i32* %flags12, align 4, !dbg !6634
  %and = and i32 %28, 64, !dbg !6635
  %tobool13 = icmp ne i32 %and, 0, !dbg !6635
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !6636

if.then14:                                        ; preds = %lor.lhs.false11, %if.end9
  store i32 -22, i32* %retval1, align 4, !dbg !6637
  br label %out, !dbg !6639

if.end15:                                         ; preds = %lor.lhs.false11
  %29 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6640
  %wait_head = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %29, i32 0, i32 18, !dbg !6641
  call void @add_wait_queue(%struct.wait_queue_head* %wait_head, %struct.wait_queue_entry* %wait) #11, !dbg !6642
  br label %while.cond, !dbg !6643

while.cond:                                       ; preds = %if.end105, %if.end66, %if.end15
  %30 = load i64, i64* %count, align 8, !dbg !6644
  %cmp16 = icmp eq i64 %30, 0, !dbg !6645
  br i1 %cmp16, label %land.rhs, label %land.end, !dbg !6646

land.rhs:                                         ; preds = %while.cond
  %31 = load i32, i32* %retval1, align 4, !dbg !6647
  %tobool17 = icmp ne i32 %31, 0, !dbg !6648
  %lnot = xor i1 %tobool17, true, !dbg !6648
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %32 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !6649
  br i1 %32, label %while.body, label %while.end, !dbg !6643

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %runflags, metadata !6650, metadata !DIExpression()), !dbg !6651
  call void @llvm.dbg.declare(metadata i32* %wp, metadata !6652, metadata !DIExpression()), !dbg !6653
  call void @llvm.dbg.declare(metadata i32* %n1, metadata !6654, metadata !DIExpression()), !dbg !6655
  call void @llvm.dbg.declare(metadata i32* %n2, metadata !6656, metadata !DIExpression()), !dbg !6657
  br label %do.body, !dbg !6658

do.body:                                          ; preds = %while.body
  br label %do.body18, !dbg !6659

do.body18:                                        ; preds = %do.body
  br label %do.body19, !dbg !6660

do.body19:                                        ; preds = %do.body18
  br label %do.end, !dbg !6661

do.end:                                           ; preds = %do.body19
  br label %do.body20, !dbg !6660

do.body20:                                        ; preds = %do.end
  store i8* null, i8** %__vpp_verify.i173, align 8, !dbg !6555
  %33 = load i8*, i8** %__vpp_verify.i173, align 8, !dbg !6555
  %34 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !6556, !srcloc !6111
  store i64 %34, i64* %pfo_val__.i174, align 8, !dbg !6556
  %35 = load i64, i64* %pfo_val__.i174, align 8, !dbg !6556
  %36 = inttoptr i64 %35 to %struct.task_struct*, !dbg !6556
  store %struct.task_struct* %36, %struct.task_struct** %tmp.i175, align 8, !dbg !6556
  %37 = load %struct.task_struct*, %struct.task_struct** %tmp.i175, align 8, !dbg !6556
  store %struct.task_struct* %37, %struct.task_struct** %pscr_ret__.i172, align 8, !dbg !6550
  %38 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i172, align 8, !dbg !6550
  store %struct.task_struct* %38, %struct.task_struct** %tmp1.i176, align 8, !dbg !6550
  %39 = load %struct.task_struct*, %struct.task_struct** %tmp1.i176, align 8, !dbg !6550
  %state = getelementptr inbounds %struct.task_struct, %struct.task_struct* %39, i32 0, i32 1, !dbg !6663
  store volatile i64 1, i64* %state, align 16, !dbg !6663
  br label %do.end22, !dbg !6663

do.end22:                                         ; preds = %do.body20
  br label %do.end23, !dbg !6660

do.end23:                                         ; preds = %do.end22
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6659, !srcloc !6664
  br label %do.end24, !dbg !6659

do.end24:                                         ; preds = %do.end23
  %40 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6665
  %call25 = call i32 @comedi_get_subdevice_runflags(%struct.comedi_subdevice* %40) #11, !dbg !6666
  store i32 %call25, i32* %runflags, align 4, !dbg !6667
  %41 = load i32, i32* %runflags, align 4, !dbg !6668
  %call26 = call zeroext i1 @comedi_is_runflags_running(i32 %41) #11, !dbg !6670
  br i1 %call26, label %if.end36, label %if.then27, !dbg !6671

if.then27:                                        ; preds = %do.end24
  %42 = load i32, i32* %runflags, align 4, !dbg !6672
  %call28 = call zeroext i1 @comedi_is_runflags_in_error(i32 %42) #11, !dbg !6675
  br i1 %call28, label %if.then29, label %if.end30, !dbg !6676

if.then29:                                        ; preds = %if.then27
  store i32 -32, i32* %retval1, align 4, !dbg !6677
  br label %if.end30, !dbg !6678

if.end30:                                         ; preds = %if.then29, %if.then27
  %43 = load i32, i32* %retval1, align 4, !dbg !6679
  %tobool31 = icmp ne i32 %43, 0, !dbg !6679
  br i1 %tobool31, label %if.then34, label %lor.lhs.false32, !dbg !6681

lor.lhs.false32:                                  ; preds = %if.end30
  %44 = load i64, i64* %nbytes.addr, align 8, !dbg !6682
  %tobool33 = icmp ne i64 %44, 0, !dbg !6682
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !6683

if.then34:                                        ; preds = %lor.lhs.false32, %if.end30
  store i8 1, i8* %become_nonbusy, align 1, !dbg !6684
  br label %if.end35, !dbg !6685

if.end35:                                         ; preds = %if.then34, %lor.lhs.false32
  br label %while.end, !dbg !6686

if.end36:                                         ; preds = %do.end24
  %45 = load i64, i64* %nbytes.addr, align 8, !dbg !6687
  %cmp37 = icmp eq i64 %45, 0, !dbg !6689
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !6690

if.then38:                                        ; preds = %if.end36
  br label %while.end, !dbg !6691

if.end39:                                         ; preds = %if.end36
  %46 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6692
  %47 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6693
  %prealloc_bufsz = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %47, i32 0, i32 1, !dbg !6694
  %48 = load i32, i32* %prealloc_bufsz, align 8, !dbg !6694
  %call40 = call i32 @comedi_buf_write_alloc(%struct.comedi_subdevice* %46, i32 %48) #11, !dbg !6695
  %49 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6696
  %call41 = call i32 @comedi_buf_write_n_allocated(%struct.comedi_subdevice* %49) #11, !dbg !6697
  store i32 %call41, i32* %m, align 4, !dbg !6698
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x251, metadata !6699, metadata !DIExpression()), !dbg !6701
  %50 = load i32, i32* %m, align 4, !dbg !6701
  %conv = zext i32 %50 to i64, !dbg !6701
  store i64 %conv, i64* %__UNIQUE_ID___x251, align 8, !dbg !6701
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y252, metadata !6702, metadata !DIExpression()), !dbg !6701
  %51 = load i64, i64* %nbytes.addr, align 8, !dbg !6701
  store i64 %51, i64* %__UNIQUE_ID___y252, align 8, !dbg !6701
  %52 = load i64, i64* %__UNIQUE_ID___x251, align 8, !dbg !6701
  %53 = load i64, i64* %__UNIQUE_ID___y252, align 8, !dbg !6701
  %cmp42 = icmp ult i64 %52, %53, !dbg !6701
  br i1 %cmp42, label %cond.true, label %cond.false, !dbg !6701

cond.true:                                        ; preds = %if.end39
  %54 = load i64, i64* %__UNIQUE_ID___x251, align 8, !dbg !6701
  br label %cond.end, !dbg !6701

cond.false:                                       ; preds = %if.end39
  %55 = load i64, i64* %__UNIQUE_ID___y252, align 8, !dbg !6701
  br label %cond.end, !dbg !6701

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %54, %cond.true ], [ %55, %cond.false ], !dbg !6701
  store i64 %cond, i64* %tmp, align 8, !dbg !6701
  %56 = load i64, i64* %tmp, align 8, !dbg !6701
  %conv44 = trunc i64 %56 to i32, !dbg !6703
  store i32 %conv44, i32* %n, align 4, !dbg !6704
  %57 = load i32, i32* %n, align 4, !dbg !6705
  %cmp45 = icmp eq i32 %57, 0, !dbg !6706
  br i1 %cmp45, label %if.then47, label %if.end67, !dbg !6707

if.then47:                                        ; preds = %cond.end
  %58 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6708
  %f_flags = getelementptr inbounds %struct.file, %struct.file* %58, i32 0, i32 7, !dbg !6710
  %59 = load i32, i32* %f_flags, align 8, !dbg !6710
  %and48 = and i32 %59, 2048, !dbg !6711
  %tobool49 = icmp ne i32 %and48, 0, !dbg !6711
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !6712

if.then50:                                        ; preds = %if.then47
  store i32 -11, i32* %retval1, align 4, !dbg !6713
  br label %while.end, !dbg !6715

if.end51:                                         ; preds = %if.then47
  call void @schedule() #11, !dbg !6716
  store i8* null, i8** %__vpp_verify.i178, align 8, !dbg !6548
  %60 = load i8*, i8** %__vpp_verify.i178, align 8, !dbg !6548
  %61 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !6549, !srcloc !6111
  store i64 %61, i64* %pfo_val__.i179, align 8, !dbg !6549
  %62 = load i64, i64* %pfo_val__.i179, align 8, !dbg !6549
  %63 = inttoptr i64 %62 to %struct.task_struct*, !dbg !6549
  store %struct.task_struct* %63, %struct.task_struct** %tmp.i180, align 8, !dbg !6549
  %64 = load %struct.task_struct*, %struct.task_struct** %tmp.i180, align 8, !dbg !6549
  store %struct.task_struct* %64, %struct.task_struct** %pscr_ret__.i177, align 8, !dbg !6543
  %65 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i177, align 8, !dbg !6543
  store %struct.task_struct* %65, %struct.task_struct** %tmp1.i181, align 8, !dbg !6543
  %66 = load %struct.task_struct*, %struct.task_struct** %tmp1.i181, align 8, !dbg !6543
  %call53 = call i32 @signal_pending(%struct.task_struct* %66) #11, !dbg !6717
  %tobool54 = icmp ne i32 %call53, 0, !dbg !6717
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !6718

if.then55:                                        ; preds = %if.end51
  store i32 -512, i32* %retval1, align 4, !dbg !6719
  br label %while.end, !dbg !6721

if.end56:                                         ; preds = %if.end51
  %67 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6722
  %busy57 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %67, i32 0, i32 9, !dbg !6724
  %68 = load i8*, i8** %busy57, align 8, !dbg !6724
  %69 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6725
  %70 = bitcast %struct.file* %69 to i8*, !dbg !6725
  %cmp58 = icmp ne i8* %68, %70, !dbg !6726
  br i1 %cmp58, label %if.then65, label %lor.lhs.false60, !dbg !6727

lor.lhs.false60:                                  ; preds = %if.end56
  %71 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6728
  %cmd61 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %71, i32 0, i32 17, !dbg !6729
  %flags62 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %cmd61, i32 0, i32 1, !dbg !6730
  %72 = load i32, i32* %flags62, align 4, !dbg !6730
  %and63 = and i32 %72, 64, !dbg !6731
  %tobool64 = icmp ne i32 %and63, 0, !dbg !6731
  br i1 %tobool64, label %if.end66, label %if.then65, !dbg !6732

if.then65:                                        ; preds = %lor.lhs.false60, %if.end56
  store i32 -22, i32* %retval1, align 4, !dbg !6733
  br label %while.end, !dbg !6735

if.end66:                                         ; preds = %lor.lhs.false60
  br label %while.cond, !dbg !6736, !llvm.loop !6737

if.end67:                                         ; preds = %cond.end
  br label %do.body68, !dbg !6739

do.body68:                                        ; preds = %if.end67
  br label %do.body69, !dbg !6740

do.body69:                                        ; preds = %do.body68
  br label %do.body70, !dbg !6741

do.body70:                                        ; preds = %do.body69
  br label %do.end71, !dbg !6742

do.end71:                                         ; preds = %do.body70
  br label %do.body72, !dbg !6741

do.body72:                                        ; preds = %do.end71
  store i8* null, i8** %__vpp_verify.i183, align 8, !dbg !6541
  %73 = load i8*, i8** %__vpp_verify.i183, align 8, !dbg !6541
  %74 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !6542, !srcloc !6111
  store i64 %74, i64* %pfo_val__.i184, align 8, !dbg !6542
  %75 = load i64, i64* %pfo_val__.i184, align 8, !dbg !6542
  %76 = inttoptr i64 %75 to %struct.task_struct*, !dbg !6542
  store %struct.task_struct* %76, %struct.task_struct** %tmp.i185, align 8, !dbg !6542
  %77 = load %struct.task_struct*, %struct.task_struct** %tmp.i185, align 8, !dbg !6542
  store %struct.task_struct* %77, %struct.task_struct** %pscr_ret__.i182, align 8, !dbg !6536
  %78 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i182, align 8, !dbg !6536
  store %struct.task_struct* %78, %struct.task_struct** %tmp1.i186, align 8, !dbg !6536
  %79 = load %struct.task_struct*, %struct.task_struct** %tmp1.i186, align 8, !dbg !6536
  %state74 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %79, i32 0, i32 1, !dbg !6744
  store volatile i64 0, i64* %state74, align 16, !dbg !6744
  br label %do.end75, !dbg !6744

do.end75:                                         ; preds = %do.body72
  br label %do.end76, !dbg !6741

do.end76:                                         ; preds = %do.end75
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6740, !srcloc !6745
  br label %do.end77, !dbg !6740

do.end77:                                         ; preds = %do.end76
  %80 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6746
  %buf_write_ptr = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %80, i32 0, i32 8, !dbg !6747
  %81 = load i32, i32* %buf_write_ptr, align 4, !dbg !6747
  store i32 %81, i32* %wp, align 4, !dbg !6748
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x254, metadata !6749, metadata !DIExpression()), !dbg !6751
  %82 = load i32, i32* %n, align 4, !dbg !6751
  store i32 %82, i32* %__UNIQUE_ID___x254, align 4, !dbg !6751
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y255, metadata !6752, metadata !DIExpression()), !dbg !6751
  %83 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6751
  %prealloc_bufsz78 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %83, i32 0, i32 1, !dbg !6751
  %84 = load i32, i32* %prealloc_bufsz78, align 8, !dbg !6751
  %85 = load i32, i32* %wp, align 4, !dbg !6751
  %sub = sub i32 %84, %85, !dbg !6751
  store i32 %sub, i32* %__UNIQUE_ID___y255, align 4, !dbg !6751
  %86 = load i32, i32* %__UNIQUE_ID___x254, align 4, !dbg !6751
  %87 = load i32, i32* %__UNIQUE_ID___y255, align 4, !dbg !6751
  %cmp80 = icmp ult i32 %86, %87, !dbg !6751
  br i1 %cmp80, label %cond.true82, label %cond.false83, !dbg !6751

cond.true82:                                      ; preds = %do.end77
  %88 = load i32, i32* %__UNIQUE_ID___x254, align 4, !dbg !6751
  br label %cond.end84, !dbg !6751

cond.false83:                                     ; preds = %do.end77
  %89 = load i32, i32* %__UNIQUE_ID___y255, align 4, !dbg !6751
  br label %cond.end84, !dbg !6751

cond.end84:                                       ; preds = %cond.false83, %cond.true82
  %cond85 = phi i32 [ %88, %cond.true82 ], [ %89, %cond.false83 ], !dbg !6751
  store i32 %cond85, i32* %tmp79, align 4, !dbg !6751
  %90 = load i32, i32* %tmp79, align 4, !dbg !6751
  store i32 %90, i32* %n1, align 4, !dbg !6753
  %91 = load i32, i32* %n, align 4, !dbg !6754
  %92 = load i32, i32* %n1, align 4, !dbg !6755
  %sub86 = sub i32 %91, %92, !dbg !6756
  store i32 %sub86, i32* %n2, align 4, !dbg !6757
  %93 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6758
  %prealloc_buf = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %93, i32 0, i32 0, !dbg !6759
  %94 = load i8*, i8** %prealloc_buf, align 8, !dbg !6759
  %95 = load i32, i32* %wp, align 4, !dbg !6760
  %idx.ext = zext i32 %95 to i64, !dbg !6761
  %add.ptr = getelementptr i8, i8* %94, i64 %idx.ext, !dbg !6761
  %96 = load i8*, i8** %buf.addr, align 8, !dbg !6762
  %97 = load i32, i32* %n1, align 4, !dbg !6763
  %conv87 = zext i32 %97 to i64, !dbg !6763
  store i8* %add.ptr, i8** %to.addr.i, align 8
  store i8* %96, i8** %from.addr.i, align 8
  store i64 %conv87, i64* %n.addr.i, align 8
  %98 = load i8*, i8** %to.addr.i, align 8, !dbg !6764
  %99 = load i64, i64* %n.addr.i, align 8, !dbg !6764
  store i8* %98, i8** %addr.addr.i.i, align 8
  store i64 %99, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !6531
  %100 = load i32, i32* %sz.i.i, align 4, !dbg !6765
  %cmp.i.i = icmp sge i32 %100, 0, !dbg !6765
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !6765

land.rhs.i.i:                                     ; preds = %cond.end84
  %101 = load i32, i32* %sz.i.i, align 4, !dbg !6765
  %conv.i.i = sext i32 %101 to i64, !dbg !6765
  %102 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6765
  %cmp1.i.i = icmp ult i64 %conv.i.i, %102, !dbg !6765
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %cond.end84
  %103 = phi i1 [ false, %cond.end84 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !6766
  %lnot.i.i = xor i1 %103, true, !dbg !6765
  %lnot.ext.i.i = zext i1 %103 to i32, !dbg !6765
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !6765
  br i1 %103, label %if.then.i.i, label %if.end10.i.i, !dbg !6767

if.then.i.i:                                      ; preds = %land.end.i.i
  %104 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6768
  %105 = call i1 @llvm.is.constant.i64(i64 %104) #9, !dbg !6769
  br i1 %105, label %if.else.i.i, label %if.then5.i.i, !dbg !6770

if.then5.i.i:                                     ; preds = %if.then.i.i
  %106 = load i32, i32* %sz.i.i, align 4, !dbg !6771
  %107 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6772
  call void @copy_overflow(i32 %106, i64 %107) #12, !dbg !6773
  br label %if.end9.i.i, !dbg !6773

if.else.i.i:                                      ; preds = %if.then.i.i
  %108 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !6774
  %tobool6.i.i = trunc i8 %108 to i1, !dbg !6774
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !6775

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #12, !dbg !6776
  br label %if.end.i.i, !dbg !6776

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #12, !dbg !6777
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !6778
  br label %check_copy_size.exit.i, !dbg !6778

if.end10.i.i:                                     ; preds = %land.end.i.i
  %109 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6532
  %cmp11.i.i = icmp ugt i64 %109, 2147483647, !dbg !6532
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !6532
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !6532
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !6532
  %110 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !6779
  %tobool17.i.i = icmp ne i32 %110, 0, !dbg !6779
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !6779
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !6779
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !6779
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !6532

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !6780, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !6781, !srcloc !6323
  br label %if.end31.i.i, !dbg !6782

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %111 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !6532
  %tobool32.i.i = icmp ne i32 %111, 0, !dbg !6532
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !6532
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !6532
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !6532
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !6779
  %112 = load i64, i64* %tmp.i.i, align 8, !dbg !6532
  %tobool38.i.i = icmp ne i64 %112, 0, !dbg !6783
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !6784

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !6785
  br label %check_copy_size.exit.i, !dbg !6785

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %113 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !6786
  %114 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6787
  %115 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !6788
  %tobool41.i.i = trunc i8 %115 to i1, !dbg !6788
  call void @check_object_size(i8* %113, i64 %114, i1 zeroext %tobool41.i.i) #12, !dbg !6789
  store i1 true, i1* %retval.i.i, align 1, !dbg !6790
  br label %check_copy_size.exit.i, !dbg !6790

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %116 = load i1, i1* %retval.i.i, align 1, !dbg !6791
  %lnot.i = xor i1 %116, true, !dbg !6764
  %lnot.ext.i = zext i1 %116 to i32, !dbg !6764
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !6764
  br i1 %116, label %if.then.i, label %copy_from_user.exit, !dbg !6792

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %117 = load i8*, i8** %to.addr.i, align 8, !dbg !6793
  %118 = load i8*, i8** %from.addr.i, align 8, !dbg !6794
  %119 = load i64, i64* %n.addr.i, align 8, !dbg !6795
  %call2.i = call i64 @_copy_from_user(i8* %117, i8* %118, i64 %119) #12, !dbg !6796
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !6797
  br label %copy_from_user.exit, !dbg !6798

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %120 = load i64, i64* %n.addr.i, align 8, !dbg !6799
  %conv89 = trunc i64 %120 to i32, !dbg !6800
  store i32 %conv89, i32* %m, align 4, !dbg !6801
  %121 = load i32, i32* %m, align 4, !dbg !6802
  %tobool90 = icmp ne i32 %121, 0, !dbg !6802
  br i1 %tobool90, label %if.then91, label %if.else, !dbg !6803

if.then91:                                        ; preds = %copy_from_user.exit
  %122 = load i32, i32* %n2, align 4, !dbg !6804
  %123 = load i32, i32* %m, align 4, !dbg !6805
  %add = add i32 %123, %122, !dbg !6805
  store i32 %add, i32* %m, align 4, !dbg !6805
  br label %if.end101, !dbg !6806

if.else:                                          ; preds = %copy_from_user.exit
  %124 = load i32, i32* %n2, align 4, !dbg !6807
  %tobool92 = icmp ne i32 %124, 0, !dbg !6807
  br i1 %tobool92, label %if.then93, label %if.end100, !dbg !6808

if.then93:                                        ; preds = %if.else
  %125 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6809
  %prealloc_buf94 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %125, i32 0, i32 0, !dbg !6810
  %126 = load i8*, i8** %prealloc_buf94, align 8, !dbg !6810
  %127 = load i8*, i8** %buf.addr, align 8, !dbg !6811
  %128 = load i32, i32* %n1, align 4, !dbg !6812
  %idx.ext95 = zext i32 %128 to i64, !dbg !6813
  %add.ptr96 = getelementptr i8, i8* %127, i64 %idx.ext95, !dbg !6813
  %129 = load i32, i32* %n2, align 4, !dbg !6814
  %conv97 = zext i32 %129 to i64, !dbg !6814
  store i8* %126, i8** %to.addr.i194, align 8
  store i8* %add.ptr96, i8** %from.addr.i195, align 8
  store i64 %conv97, i64* %n.addr.i196, align 8
  %130 = load i8*, i8** %to.addr.i194, align 8, !dbg !6815
  %131 = load i64, i64* %n.addr.i196, align 8, !dbg !6815
  store i8* %130, i8** %addr.addr.i.i188, align 8
  store i64 %131, i64* %bytes.addr.i.i189, align 8
  store i8 0, i8* %is_source.addr.i.i190, align 1
  store i32 -1, i32* %sz.i.i191, align 4, !dbg !6518
  %132 = load i32, i32* %sz.i.i191, align 4, !dbg !6816
  %cmp.i.i197 = icmp sge i32 %132, 0, !dbg !6816
  br i1 %cmp.i.i197, label %land.rhs.i.i200, label %land.end.i.i204, !dbg !6816

land.rhs.i.i200:                                  ; preds = %if.then93
  %133 = load i32, i32* %sz.i.i191, align 4, !dbg !6816
  %conv.i.i198 = sext i32 %133 to i64, !dbg !6816
  %134 = load i64, i64* %bytes.addr.i.i189, align 8, !dbg !6816
  %cmp1.i.i199 = icmp ult i64 %conv.i.i198, %134, !dbg !6816
  br label %land.end.i.i204

land.end.i.i204:                                  ; preds = %land.rhs.i.i200, %if.then93
  %135 = phi i1 [ false, %if.then93 ], [ %cmp1.i.i199, %land.rhs.i.i200 ], !dbg !6817
  %lnot.i.i201 = xor i1 %135, true, !dbg !6816
  %lnot.ext.i.i202 = zext i1 %135 to i32, !dbg !6816
  %conv4.i.i203 = sext i32 %lnot.ext.i.i202 to i64, !dbg !6816
  br i1 %135, label %if.then.i.i205, label %if.end10.i.i220, !dbg !6818

if.then.i.i205:                                   ; preds = %land.end.i.i204
  %136 = load i64, i64* %bytes.addr.i.i189, align 8, !dbg !6819
  %137 = call i1 @llvm.is.constant.i64(i64 %136) #9, !dbg !6820
  br i1 %137, label %if.else.i.i208, label %if.then5.i.i206, !dbg !6821

if.then5.i.i206:                                  ; preds = %if.then.i.i205
  %138 = load i32, i32* %sz.i.i191, align 4, !dbg !6822
  %139 = load i64, i64* %bytes.addr.i.i189, align 8, !dbg !6823
  call void @copy_overflow(i32 %138, i64 %139) #12, !dbg !6824
  br label %if.end9.i.i212, !dbg !6824

if.else.i.i208:                                   ; preds = %if.then.i.i205
  %140 = load i8, i8* %is_source.addr.i.i190, align 1, !dbg !6825
  %tobool6.i.i207 = trunc i8 %140 to i1, !dbg !6825
  br i1 %tobool6.i.i207, label %if.then7.i.i209, label %if.else8.i.i210, !dbg !6826

if.then7.i.i209:                                  ; preds = %if.else.i.i208
  call void @__bad_copy_from() #12, !dbg !6827
  br label %if.end.i.i211, !dbg !6827

if.else8.i.i210:                                  ; preds = %if.else.i.i208
  call void @__bad_copy_to() #12, !dbg !6828
  br label %if.end.i.i211

if.end.i.i211:                                    ; preds = %if.else8.i.i210, %if.then7.i.i209
  br label %if.end9.i.i212

if.end9.i.i212:                                   ; preds = %if.end.i.i211, %if.then5.i.i206
  store i1 false, i1* %retval.i.i187, align 1, !dbg !6829
  br label %check_copy_size.exit.i234, !dbg !6829

if.end10.i.i220:                                  ; preds = %land.end.i.i204
  %141 = load i64, i64* %bytes.addr.i.i189, align 8, !dbg !6519
  %cmp11.i.i213 = icmp ugt i64 %141, 2147483647, !dbg !6519
  %lnot13.i.i214 = xor i1 %cmp11.i.i213, true, !dbg !6519
  %lnot.ext16.i.i215 = zext i1 %cmp11.i.i213 to i32, !dbg !6519
  store i32 %lnot.ext16.i.i215, i32* %__ret_warn_on.i.i192, align 4, !dbg !6519
  %142 = load i32, i32* %__ret_warn_on.i.i192, align 4, !dbg !6830
  %tobool17.i.i216 = icmp ne i32 %142, 0, !dbg !6830
  %lnot18.i.i217 = xor i1 %tobool17.i.i216, true, !dbg !6830
  %lnot.ext21.i.i218 = zext i1 %tobool17.i.i216 to i32, !dbg !6830
  %conv22.i.i219 = sext i32 %lnot.ext21.i.i218 to i64, !dbg !6830
  br i1 %tobool17.i.i216, label %if.then24.i.i221, label %if.end31.i.i227, !dbg !6519

if.then24.i.i221:                                 ; preds = %if.end10.i.i220
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !6831, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !6832, !srcloc !6323
  br label %if.end31.i.i227, !dbg !6833

if.end31.i.i227:                                  ; preds = %if.then24.i.i221, %if.end10.i.i220
  %143 = load i32, i32* %__ret_warn_on.i.i192, align 4, !dbg !6519
  %tobool32.i.i222 = icmp ne i32 %143, 0, !dbg !6519
  %lnot33.i.i223 = xor i1 %tobool32.i.i222, true, !dbg !6519
  %lnot.ext36.i.i224 = zext i1 %tobool32.i.i222 to i32, !dbg !6519
  %conv37.i.i225 = sext i32 %lnot.ext36.i.i224 to i64, !dbg !6519
  store i64 %conv37.i.i225, i64* %tmp.i.i193, align 8, !dbg !6830
  %144 = load i64, i64* %tmp.i.i193, align 8, !dbg !6519
  %tobool38.i.i226 = icmp ne i64 %144, 0, !dbg !6834
  br i1 %tobool38.i.i226, label %if.then39.i.i228, label %if.end40.i.i230, !dbg !6835

if.then39.i.i228:                                 ; preds = %if.end31.i.i227
  store i1 false, i1* %retval.i.i187, align 1, !dbg !6836
  br label %check_copy_size.exit.i234, !dbg !6836

if.end40.i.i230:                                  ; preds = %if.end31.i.i227
  %145 = load i8*, i8** %addr.addr.i.i188, align 8, !dbg !6837
  %146 = load i64, i64* %bytes.addr.i.i189, align 8, !dbg !6838
  %147 = load i8, i8* %is_source.addr.i.i190, align 1, !dbg !6839
  %tobool41.i.i229 = trunc i8 %147 to i1, !dbg !6839
  call void @check_object_size(i8* %145, i64 %146, i1 zeroext %tobool41.i.i229) #12, !dbg !6840
  store i1 true, i1* %retval.i.i187, align 1, !dbg !6841
  br label %check_copy_size.exit.i234, !dbg !6841

check_copy_size.exit.i234:                        ; preds = %if.end40.i.i230, %if.then39.i.i228, %if.end9.i.i212
  %148 = load i1, i1* %retval.i.i187, align 1, !dbg !6842
  %lnot.i231 = xor i1 %148, true, !dbg !6815
  %lnot.ext.i232 = zext i1 %148 to i32, !dbg !6815
  %conv.i233 = sext i32 %lnot.ext.i232 to i64, !dbg !6815
  br i1 %148, label %if.then.i236, label %copy_from_user.exit237, !dbg !6843

if.then.i236:                                     ; preds = %check_copy_size.exit.i234
  %149 = load i8*, i8** %to.addr.i194, align 8, !dbg !6844
  %150 = load i8*, i8** %from.addr.i195, align 8, !dbg !6845
  %151 = load i64, i64* %n.addr.i196, align 8, !dbg !6846
  %call2.i235 = call i64 @_copy_from_user(i8* %149, i8* %150, i64 %151) #12, !dbg !6847
  store i64 %call2.i235, i64* %n.addr.i196, align 8, !dbg !6848
  br label %copy_from_user.exit237, !dbg !6849

copy_from_user.exit237:                           ; preds = %check_copy_size.exit.i234, %if.then.i236
  %152 = load i64, i64* %n.addr.i196, align 8, !dbg !6850
  %conv99 = trunc i64 %152 to i32, !dbg !6851
  store i32 %conv99, i32* %m, align 4, !dbg !6852
  br label %if.end100, !dbg !6853

if.end100:                                        ; preds = %copy_from_user.exit237, %if.else
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.then91
  %153 = load i32, i32* %m, align 4, !dbg !6854
  %tobool102 = icmp ne i32 %153, 0, !dbg !6854
  br i1 %tobool102, label %if.then103, label %if.end105, !dbg !6856

if.then103:                                       ; preds = %if.end101
  %154 = load i32, i32* %m, align 4, !dbg !6857
  %155 = load i32, i32* %n, align 4, !dbg !6859
  %sub104 = sub i32 %155, %154, !dbg !6859
  store i32 %sub104, i32* %n, align 4, !dbg !6859
  store i32 -14, i32* %retval1, align 4, !dbg !6860
  br label %if.end105, !dbg !6861

if.end105:                                        ; preds = %if.then103, %if.end101
  %156 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6862
  %157 = load i32, i32* %n, align 4, !dbg !6863
  %call106 = call i32 @comedi_buf_write_free(%struct.comedi_subdevice* %156, i32 %157) #11, !dbg !6864
  %158 = load i32, i32* %n, align 4, !dbg !6865
  %conv107 = zext i32 %158 to i64, !dbg !6865
  %159 = load i64, i64* %count, align 8, !dbg !6866
  %add108 = add i64 %159, %conv107, !dbg !6866
  store i64 %add108, i64* %count, align 8, !dbg !6866
  %160 = load i32, i32* %n, align 4, !dbg !6867
  %conv109 = zext i32 %160 to i64, !dbg !6867
  %161 = load i64, i64* %nbytes.addr, align 8, !dbg !6868
  %sub110 = sub i64 %161, %conv109, !dbg !6868
  store i64 %sub110, i64* %nbytes.addr, align 8, !dbg !6868
  %162 = load i32, i32* %n, align 4, !dbg !6869
  %163 = load i8*, i8** %buf.addr, align 8, !dbg !6870
  %idx.ext111 = zext i32 %162 to i64, !dbg !6870
  %add.ptr112 = getelementptr i8, i8* %163, i64 %idx.ext111, !dbg !6870
  store i8* %add.ptr112, i8** %buf.addr, align 8, !dbg !6870
  br label %while.cond, !dbg !6643, !llvm.loop !6737

while.end:                                        ; preds = %if.then65, %if.then55, %if.then50, %if.then38, %if.end35, %land.end
  %164 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6871
  %wait_head113 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %164, i32 0, i32 18, !dbg !6872
  call void @remove_wait_queue(%struct.wait_queue_head* %wait_head113, %struct.wait_queue_entry* %wait) #11, !dbg !6873
  br label %do.body114, !dbg !6874

do.body114:                                       ; preds = %while.end
  br label %do.body115, !dbg !6875

do.body115:                                       ; preds = %do.body114
  br label %do.body116, !dbg !6876

do.body116:                                       ; preds = %do.body115
  br label %do.end117, !dbg !6877

do.end117:                                        ; preds = %do.body116
  br label %do.body118, !dbg !6876

do.body118:                                       ; preds = %do.end117
  store i8* null, i8** %__vpp_verify.i239, align 8, !dbg !6506
  %165 = load i8*, i8** %__vpp_verify.i239, align 8, !dbg !6506
  %166 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !6507, !srcloc !6111
  store i64 %166, i64* %pfo_val__.i240, align 8, !dbg !6507
  %167 = load i64, i64* %pfo_val__.i240, align 8, !dbg !6507
  %168 = inttoptr i64 %167 to %struct.task_struct*, !dbg !6507
  store %struct.task_struct* %168, %struct.task_struct** %tmp.i241, align 8, !dbg !6507
  %169 = load %struct.task_struct*, %struct.task_struct** %tmp.i241, align 8, !dbg !6507
  store %struct.task_struct* %169, %struct.task_struct** %pscr_ret__.i238, align 8, !dbg !6501
  %170 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i238, align 8, !dbg !6501
  store %struct.task_struct* %170, %struct.task_struct** %tmp1.i242, align 8, !dbg !6501
  %171 = load %struct.task_struct*, %struct.task_struct** %tmp1.i242, align 8, !dbg !6501
  %state120 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %171, i32 0, i32 1, !dbg !6879
  store volatile i64 0, i64* %state120, align 16, !dbg !6879
  br label %do.end121, !dbg !6879

do.end121:                                        ; preds = %do.body118
  br label %do.end122, !dbg !6876

do.end122:                                        ; preds = %do.end121
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6875, !srcloc !6880
  br label %do.end123, !dbg !6875

do.end123:                                        ; preds = %do.end122
  %172 = load i8, i8* %become_nonbusy, align 1, !dbg !6881
  %tobool124 = trunc i8 %172 to i1, !dbg !6881
  br i1 %tobool124, label %land.lhs.true, label %if.end161, !dbg !6883

land.lhs.true:                                    ; preds = %do.end123
  %173 = load i64, i64* %count, align 8, !dbg !6884
  %cmp126 = icmp eq i64 %173, 0, !dbg !6885
  br i1 %cmp126, label %if.then128, label %if.end161, !dbg !6886

if.then128:                                       ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %new_s, metadata !6887, metadata !DIExpression()), !dbg !6889
  %174 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !6890
  %attach_lock129 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %174, i32 0, i32 13, !dbg !6891
  call void @up_read(%struct.rw_semaphore* %attach_lock129) #11, !dbg !6892
  store i8 0, i8* %attach_locked, align 1, !dbg !6893
  %175 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !6894
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %175, i32 0, i32 12, !dbg !6895
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !6896
  %176 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6897
  %call130 = call %struct.comedi_subdevice* @comedi_file_write_subdevice(%struct.file* %176) #11, !dbg !6898
  store %struct.comedi_subdevice* %call130, %struct.comedi_subdevice** %new_s, align 8, !dbg !6899
  %177 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !6900
  %attached131 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %177, i32 0, i32 10, !dbg !6902
  %bf.load132 = load i8, i8* %attached131, align 8, !dbg !6902
  %bf.clear133 = and i8 %bf.load132, 1, !dbg !6902
  %bf.cast134 = zext i8 %bf.clear133 to i32, !dbg !6902
  %tobool135 = icmp ne i32 %bf.cast134, 0, !dbg !6900
  br i1 %tobool135, label %land.lhs.true136, label %if.end159, !dbg !6903

land.lhs.true136:                                 ; preds = %if.then128
  %178 = load i32, i32* %old_detach_count, align 4, !dbg !6904
  %179 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !6905
  %detach_count137 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %179, i32 0, i32 6, !dbg !6906
  %180 = load i32, i32* %detach_count137, align 4, !dbg !6906
  %cmp138 = icmp eq i32 %178, %180, !dbg !6907
  br i1 %cmp138, label %land.lhs.true140, label %if.end159, !dbg !6908

land.lhs.true140:                                 ; preds = %land.lhs.true136
  %181 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6909
  %182 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %new_s, align 8, !dbg !6910
  %cmp141 = icmp eq %struct.comedi_subdevice* %181, %182, !dbg !6911
  br i1 %cmp141, label %land.lhs.true143, label %if.end159, !dbg !6912

land.lhs.true143:                                 ; preds = %land.lhs.true140
  %183 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %new_s, align 8, !dbg !6913
  %async144 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %183, i32 0, i32 7, !dbg !6914
  %184 = load %struct.comedi_async*, %struct.comedi_async** %async144, align 8, !dbg !6914
  %185 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6915
  %cmp145 = icmp eq %struct.comedi_async* %184, %185, !dbg !6916
  br i1 %cmp145, label %land.lhs.true147, label %if.end159, !dbg !6917

land.lhs.true147:                                 ; preds = %land.lhs.true143
  %186 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6918
  %busy148 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %186, i32 0, i32 9, !dbg !6919
  %187 = load i8*, i8** %busy148, align 8, !dbg !6919
  %188 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6920
  %189 = bitcast %struct.file* %188 to i8*, !dbg !6920
  %cmp149 = icmp eq i8* %187, %189, !dbg !6921
  br i1 %cmp149, label %land.lhs.true151, label %if.end159, !dbg !6922

land.lhs.true151:                                 ; preds = %land.lhs.true147
  %190 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6923
  %cmd152 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %190, i32 0, i32 17, !dbg !6924
  %flags153 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %cmd152, i32 0, i32 1, !dbg !6925
  %191 = load i32, i32* %flags153, align 4, !dbg !6925
  %and154 = and i32 %191, 64, !dbg !6926
  %tobool155 = icmp ne i32 %and154, 0, !dbg !6926
  br i1 %tobool155, label %land.lhs.true156, label %if.end159, !dbg !6927

land.lhs.true156:                                 ; preds = %land.lhs.true151
  %192 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6928
  %call157 = call zeroext i1 @comedi_is_subdevice_running(%struct.comedi_subdevice* %192) #11, !dbg !6929
  br i1 %call157, label %if.end159, label %if.then158, !dbg !6930

if.then158:                                       ; preds = %land.lhs.true156
  %193 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !6931
  %194 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6932
  call void @do_become_nonbusy(%struct.comedi_device* %193, %struct.comedi_subdevice* %194) #11, !dbg !6933
  br label %if.end159, !dbg !6933

if.end159:                                        ; preds = %if.then158, %land.lhs.true156, %land.lhs.true151, %land.lhs.true147, %land.lhs.true143, %land.lhs.true140, %land.lhs.true136, %if.then128
  %195 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !6934
  %mutex160 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %195, i32 0, i32 12, !dbg !6935
  call void @mutex_unlock(%struct.mutex* %mutex160) #11, !dbg !6936
  br label %if.end161, !dbg !6937

if.end161:                                        ; preds = %if.end159, %land.lhs.true, %do.end123
  br label %out, !dbg !6938

out:                                              ; preds = %if.end161, %if.then14, %if.then8, %if.then
  call void @llvm.dbg.label(metadata !6939), !dbg !6940
  %196 = load i8, i8* %attach_locked, align 1, !dbg !6941
  %tobool162 = trunc i8 %196 to i1, !dbg !6941
  br i1 %tobool162, label %if.then163, label %if.end165, !dbg !6943

if.then163:                                       ; preds = %out
  %197 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !6944
  %attach_lock164 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %197, i32 0, i32 13, !dbg !6945
  call void @up_read(%struct.rw_semaphore* %attach_lock164) #11, !dbg !6946
  br label %if.end165, !dbg !6946

if.end165:                                        ; preds = %if.then163, %out
  %198 = load i64, i64* %count, align 8, !dbg !6947
  %tobool166 = icmp ne i64 %198, 0, !dbg !6947
  br i1 %tobool166, label %cond.true167, label %cond.false168, !dbg !6947

cond.true167:                                     ; preds = %if.end165
  %199 = load i64, i64* %count, align 8, !dbg !6948
  br label %cond.end170, !dbg !6947

cond.false168:                                    ; preds = %if.end165
  %200 = load i32, i32* %retval1, align 4, !dbg !6949
  %conv169 = sext i32 %200 to i64, !dbg !6949
  br label %cond.end170, !dbg !6947

cond.end170:                                      ; preds = %cond.false168, %cond.true167
  %cond171 = phi i64 [ %199, %cond.true167 ], [ %conv169, %cond.false168 ], !dbg !6947
  ret i64 %cond171, !dbg !6950
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_poll(%struct.file* %file, %struct.poll_table_struct* %wait) #0 !dbg !6951 {
entry:
  %file.addr = alloca %struct.file*, align 8
  %wait.addr = alloca %struct.poll_table_struct*, align 8
  %mask = alloca i32, align 4
  %cfp = alloca %struct.comedi_file*, align 8
  %dev = alloca %struct.comedi_device*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %s_read = alloca %struct.comedi_subdevice*, align 8
  %bps = alloca i32, align 4
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !6956, metadata !DIExpression()), !dbg !6957
  store %struct.poll_table_struct* %wait, %struct.poll_table_struct** %wait.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.poll_table_struct** %wait.addr, metadata !6958, metadata !DIExpression()), !dbg !6959
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !6960, metadata !DIExpression()), !dbg !6961
  store i32 0, i32* %mask, align 4, !dbg !6961
  call void @llvm.dbg.declare(metadata %struct.comedi_file** %cfp, metadata !6962, metadata !DIExpression()), !dbg !6963
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6964
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !6965
  %1 = load i8*, i8** %private_data, align 8, !dbg !6965
  %2 = bitcast i8* %1 to %struct.comedi_file*, !dbg !6964
  store %struct.comedi_file* %2, %struct.comedi_file** %cfp, align 8, !dbg !6963
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !6966, metadata !DIExpression()), !dbg !6967
  %3 = load %struct.comedi_file*, %struct.comedi_file** %cfp, align 8, !dbg !6968
  %dev1 = getelementptr inbounds %struct.comedi_file, %struct.comedi_file* %3, i32 0, i32 0, !dbg !6969
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev1, align 8, !dbg !6969
  store %struct.comedi_device* %4, %struct.comedi_device** %dev, align 8, !dbg !6967
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !6970, metadata !DIExpression()), !dbg !6971
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s_read, metadata !6972, metadata !DIExpression()), !dbg !6973
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !6974
  %attach_lock = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %5, i32 0, i32 13, !dbg !6975
  call void @down_read(%struct.rw_semaphore* %attach_lock) #11, !dbg !6976
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !6977
  %attached = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %6, i32 0, i32 10, !dbg !6979
  %bf.load = load i8, i8* %attached, align 8, !dbg !6979
  %bf.clear = and i8 %bf.load, 1, !dbg !6979
  %bf.cast = zext i8 %bf.clear to i32, !dbg !6979
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6977
  br i1 %tobool, label %if.end, label %if.then, !dbg !6980

if.then:                                          ; preds = %entry
  br label %done, !dbg !6981

if.end:                                           ; preds = %entry
  %7 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6983
  %call = call %struct.comedi_subdevice* @comedi_file_read_subdevice(%struct.file* %7) #11, !dbg !6984
  store %struct.comedi_subdevice* %call, %struct.comedi_subdevice** %s, align 8, !dbg !6985
  %8 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6986
  store %struct.comedi_subdevice* %8, %struct.comedi_subdevice** %s_read, align 8, !dbg !6987
  %9 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6988
  %tobool2 = icmp ne %struct.comedi_subdevice* %9, null, !dbg !6988
  br i1 %tobool2, label %land.lhs.true, label %if.end15, !dbg !6990

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6991
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %10, i32 0, i32 7, !dbg !6992
  %11 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !6992
  %tobool3 = icmp ne %struct.comedi_async* %11, null, !dbg !6991
  br i1 %tobool3, label %if.then4, label %if.end15, !dbg !6993

if.then4:                                         ; preds = %land.lhs.true
  %12 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6994
  %13 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !6996
  %async5 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %13, i32 0, i32 7, !dbg !6997
  %14 = load %struct.comedi_async*, %struct.comedi_async** %async5, align 8, !dbg !6997
  %wait_head = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %14, i32 0, i32 18, !dbg !6998
  %15 = load %struct.poll_table_struct*, %struct.poll_table_struct** %wait.addr, align 8, !dbg !6999
  call void @poll_wait(%struct.file* %12, %struct.wait_queue_head* %wait_head, %struct.poll_table_struct* %15) #11, !dbg !7000
  %16 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7001
  %busy = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %16, i32 0, i32 9, !dbg !7003
  %17 = load i8*, i8** %busy, align 8, !dbg !7003
  %18 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7004
  %19 = bitcast %struct.file* %18 to i8*, !dbg !7004
  %cmp = icmp ne i8* %17, %19, !dbg !7005
  br i1 %cmp, label %if.then13, label %lor.lhs.false, !dbg !7006

lor.lhs.false:                                    ; preds = %if.then4
  %20 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7007
  %call6 = call zeroext i1 @comedi_is_subdevice_running(%struct.comedi_subdevice* %20) #11, !dbg !7008
  br i1 %call6, label %lor.lhs.false7, label %if.then13, !dbg !7009

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %21 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7010
  %async8 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %21, i32 0, i32 7, !dbg !7011
  %22 = load %struct.comedi_async*, %struct.comedi_async** %async8, align 8, !dbg !7011
  %cmd = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %22, i32 0, i32 17, !dbg !7012
  %flags = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %cmd, i32 0, i32 1, !dbg !7013
  %23 = load i32, i32* %flags, align 4, !dbg !7013
  %and = and i32 %23, 64, !dbg !7014
  %tobool9 = icmp ne i32 %and, 0, !dbg !7014
  br i1 %tobool9, label %if.then13, label %lor.lhs.false10, !dbg !7015

lor.lhs.false10:                                  ; preds = %lor.lhs.false7
  %24 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7016
  %call11 = call i32 @comedi_buf_read_n_available(%struct.comedi_subdevice* %24) #11, !dbg !7017
  %cmp12 = icmp ugt i32 %call11, 0, !dbg !7018
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !7019

if.then13:                                        ; preds = %lor.lhs.false10, %lor.lhs.false7, %lor.lhs.false, %if.then4
  %25 = load i32, i32* %mask, align 4, !dbg !7020
  %or = or i32 %25, 65, !dbg !7020
  store i32 %or, i32* %mask, align 4, !dbg !7020
  br label %if.end14, !dbg !7021

if.end14:                                         ; preds = %if.then13, %lor.lhs.false10
  br label %if.end15, !dbg !7022

if.end15:                                         ; preds = %if.end14, %land.lhs.true, %if.end
  %26 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7023
  %call16 = call %struct.comedi_subdevice* @comedi_file_write_subdevice(%struct.file* %26) #11, !dbg !7024
  store %struct.comedi_subdevice* %call16, %struct.comedi_subdevice** %s, align 8, !dbg !7025
  %27 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7026
  %tobool17 = icmp ne %struct.comedi_subdevice* %27, null, !dbg !7026
  br i1 %tobool17, label %land.lhs.true18, label %if.end44, !dbg !7028

land.lhs.true18:                                  ; preds = %if.end15
  %28 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7029
  %async19 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %28, i32 0, i32 7, !dbg !7030
  %29 = load %struct.comedi_async*, %struct.comedi_async** %async19, align 8, !dbg !7030
  %tobool20 = icmp ne %struct.comedi_async* %29, null, !dbg !7029
  br i1 %tobool20, label %if.then21, label %if.end44, !dbg !7031

if.then21:                                        ; preds = %land.lhs.true18
  call void @llvm.dbg.declare(metadata i32* %bps, metadata !7032, metadata !DIExpression()), !dbg !7034
  %30 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7035
  %call22 = call i32 @comedi_bytes_per_sample(%struct.comedi_subdevice* %30) #11, !dbg !7036
  store i32 %call22, i32* %bps, align 4, !dbg !7034
  %31 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7037
  %32 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_read, align 8, !dbg !7039
  %cmp23 = icmp ne %struct.comedi_subdevice* %31, %32, !dbg !7040
  br i1 %cmp23, label %if.then24, label %if.end27, !dbg !7041

if.then24:                                        ; preds = %if.then21
  %33 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7042
  %34 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7043
  %async25 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %34, i32 0, i32 7, !dbg !7044
  %35 = load %struct.comedi_async*, %struct.comedi_async** %async25, align 8, !dbg !7044
  %wait_head26 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %35, i32 0, i32 18, !dbg !7045
  %36 = load %struct.poll_table_struct*, %struct.poll_table_struct** %wait.addr, align 8, !dbg !7046
  call void @poll_wait(%struct.file* %33, %struct.wait_queue_head* %wait_head26, %struct.poll_table_struct* %36) #11, !dbg !7047
  br label %if.end27, !dbg !7047

if.end27:                                         ; preds = %if.then24, %if.then21
  %37 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7048
  %busy28 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %37, i32 0, i32 9, !dbg !7050
  %38 = load i8*, i8** %busy28, align 8, !dbg !7050
  %39 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7051
  %40 = bitcast %struct.file* %39 to i8*, !dbg !7051
  %cmp29 = icmp ne i8* %38, %40, !dbg !7052
  br i1 %cmp29, label %if.then41, label %lor.lhs.false30, !dbg !7053

lor.lhs.false30:                                  ; preds = %if.end27
  %41 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7054
  %call31 = call zeroext i1 @comedi_is_subdevice_running(%struct.comedi_subdevice* %41) #11, !dbg !7055
  br i1 %call31, label %lor.lhs.false32, label %if.then41, !dbg !7056

lor.lhs.false32:                                  ; preds = %lor.lhs.false30
  %42 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7057
  %async33 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %42, i32 0, i32 7, !dbg !7058
  %43 = load %struct.comedi_async*, %struct.comedi_async** %async33, align 8, !dbg !7058
  %cmd34 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %43, i32 0, i32 17, !dbg !7059
  %flags35 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %cmd34, i32 0, i32 1, !dbg !7060
  %44 = load i32, i32* %flags35, align 4, !dbg !7060
  %and36 = and i32 %44, 64, !dbg !7061
  %tobool37 = icmp ne i32 %and36, 0, !dbg !7061
  br i1 %tobool37, label %lor.lhs.false38, label %if.then41, !dbg !7062

lor.lhs.false38:                                  ; preds = %lor.lhs.false32
  %45 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7063
  %call39 = call i32 @comedi_buf_write_n_available(%struct.comedi_subdevice* %45) #11, !dbg !7064
  %46 = load i32, i32* %bps, align 4, !dbg !7065
  %cmp40 = icmp uge i32 %call39, %46, !dbg !7066
  br i1 %cmp40, label %if.then41, label %if.end43, !dbg !7067

if.then41:                                        ; preds = %lor.lhs.false38, %lor.lhs.false32, %lor.lhs.false30, %if.end27
  %47 = load i32, i32* %mask, align 4, !dbg !7068
  %or42 = or i32 %47, 260, !dbg !7068
  store i32 %or42, i32* %mask, align 4, !dbg !7068
  br label %if.end43, !dbg !7069

if.end43:                                         ; preds = %if.then41, %lor.lhs.false38
  br label %if.end44, !dbg !7070

if.end44:                                         ; preds = %if.end43, %land.lhs.true18, %if.end15
  br label %done, !dbg !7030

done:                                             ; preds = %if.end44, %if.then
  call void @llvm.dbg.label(metadata !7071), !dbg !7072
  %48 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7073
  %attach_lock45 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %48, i32 0, i32 13, !dbg !7074
  call void @up_read(%struct.rw_semaphore* %attach_lock45) #11, !dbg !7075
  %49 = load i32, i32* %mask, align 4, !dbg !7076
  ret i32 %49, !dbg !7077
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @comedi_unlocked_ioctl(%struct.file* %file, i32 %cmd, i64 %arg) #0 !dbg !7078 {
entry:
  %retval.i.i474 = alloca i1, align 1
  %addr.addr.i.i475 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i475, metadata !6011, metadata !DIExpression()), !dbg !7079
  %bytes.addr.i.i476 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i476, metadata !6027, metadata !DIExpression()), !dbg !7085
  %is_source.addr.i.i477 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i477, metadata !6029, metadata !DIExpression()), !dbg !7086
  %sz.i.i478 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i478, metadata !6031, metadata !DIExpression()), !dbg !7087
  %__ret_warn_on.i.i479 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i479, metadata !6033, metadata !DIExpression()), !dbg !7088
  %tmp.i.i480 = alloca i64, align 8
  %to.addr.i481 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i481, metadata !6520, metadata !DIExpression()), !dbg !7089
  %from.addr.i482 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i482, metadata !6522, metadata !DIExpression()), !dbg !7090
  %n.addr.i483 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i483, metadata !6524, metadata !DIExpression()), !dbg !7091
  %retval.i.i423 = alloca i1, align 1
  %addr.addr.i.i424 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i424, metadata !6011, metadata !DIExpression()), !dbg !7092
  %bytes.addr.i.i425 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i425, metadata !6027, metadata !DIExpression()), !dbg !7097
  %is_source.addr.i.i426 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i426, metadata !6029, metadata !DIExpression()), !dbg !7098
  %sz.i.i427 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i427, metadata !6031, metadata !DIExpression()), !dbg !7099
  %__ret_warn_on.i.i428 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i428, metadata !6033, metadata !DIExpression()), !dbg !7100
  %tmp.i.i429 = alloca i64, align 8
  %to.addr.i430 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i430, metadata !6520, metadata !DIExpression()), !dbg !7101
  %from.addr.i431 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i431, metadata !6522, metadata !DIExpression()), !dbg !7102
  %n.addr.i432 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i432, metadata !6524, metadata !DIExpression()), !dbg !7103
  %retval.i.i372 = alloca i1, align 1
  %addr.addr.i.i373 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i373, metadata !6011, metadata !DIExpression()), !dbg !7104
  %bytes.addr.i.i374 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i374, metadata !6027, metadata !DIExpression()), !dbg !7108
  %is_source.addr.i.i375 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i375, metadata !6029, metadata !DIExpression()), !dbg !7109
  %sz.i.i376 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i376, metadata !6031, metadata !DIExpression()), !dbg !7110
  %__ret_warn_on.i.i377 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i377, metadata !6033, metadata !DIExpression()), !dbg !7111
  %tmp.i.i378 = alloca i64, align 8
  %to.addr.i379 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i379, metadata !6520, metadata !DIExpression()), !dbg !7112
  %from.addr.i380 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i380, metadata !6522, metadata !DIExpression()), !dbg !7113
  %n.addr.i381 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i381, metadata !6524, metadata !DIExpression()), !dbg !7114
  %retval.i.i321 = alloca i1, align 1
  %addr.addr.i.i322 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i322, metadata !6011, metadata !DIExpression()), !dbg !7115
  %bytes.addr.i.i323 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i323, metadata !6027, metadata !DIExpression()), !dbg !7120
  %is_source.addr.i.i324 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i324, metadata !6029, metadata !DIExpression()), !dbg !7121
  %sz.i.i325 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i325, metadata !6031, metadata !DIExpression()), !dbg !7122
  %__ret_warn_on.i.i326 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i326, metadata !6033, metadata !DIExpression()), !dbg !7123
  %tmp.i.i327 = alloca i64, align 8
  %to.addr.i328 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i328, metadata !6037, metadata !DIExpression()), !dbg !7124
  %from.addr.i329 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i329, metadata !6039, metadata !DIExpression()), !dbg !7125
  %n.addr.i330 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i330, metadata !6041, metadata !DIExpression()), !dbg !7126
  %retval.i.i270 = alloca i1, align 1
  %addr.addr.i.i271 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i271, metadata !6011, metadata !DIExpression()), !dbg !7127
  %bytes.addr.i.i272 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i272, metadata !6027, metadata !DIExpression()), !dbg !7131
  %is_source.addr.i.i273 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i273, metadata !6029, metadata !DIExpression()), !dbg !7132
  %sz.i.i274 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i274, metadata !6031, metadata !DIExpression()), !dbg !7133
  %__ret_warn_on.i.i275 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i275, metadata !6033, metadata !DIExpression()), !dbg !7134
  %tmp.i.i276 = alloca i64, align 8
  %to.addr.i277 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i277, metadata !6520, metadata !DIExpression()), !dbg !7135
  %from.addr.i278 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i278, metadata !6522, metadata !DIExpression()), !dbg !7136
  %n.addr.i279 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i279, metadata !6524, metadata !DIExpression()), !dbg !7137
  %retval.i.i220 = alloca i1, align 1
  %addr.addr.i.i221 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i221, metadata !6011, metadata !DIExpression()), !dbg !7138
  %bytes.addr.i.i222 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i222, metadata !6027, metadata !DIExpression()), !dbg !7143
  %is_source.addr.i.i223 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i223, metadata !6029, metadata !DIExpression()), !dbg !7144
  %sz.i.i224 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i224, metadata !6031, metadata !DIExpression()), !dbg !7145
  %__ret_warn_on.i.i225 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i225, metadata !6033, metadata !DIExpression()), !dbg !7146
  %tmp.i.i226 = alloca i64, align 8
  %to.addr.i227 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i227, metadata !6037, metadata !DIExpression()), !dbg !7147
  %from.addr.i228 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i228, metadata !6039, metadata !DIExpression()), !dbg !7148
  %n.addr.i229 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i229, metadata !6041, metadata !DIExpression()), !dbg !7149
  %retval.i.i169 = alloca i1, align 1
  %addr.addr.i.i170 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i170, metadata !6011, metadata !DIExpression()), !dbg !7150
  %bytes.addr.i.i171 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i171, metadata !6027, metadata !DIExpression()), !dbg !7154
  %is_source.addr.i.i172 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i172, metadata !6029, metadata !DIExpression()), !dbg !7155
  %sz.i.i173 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i173, metadata !6031, metadata !DIExpression()), !dbg !7156
  %__ret_warn_on.i.i174 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i174, metadata !6033, metadata !DIExpression()), !dbg !7157
  %tmp.i.i175 = alloca i64, align 8
  %to.addr.i176 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i176, metadata !6520, metadata !DIExpression()), !dbg !7158
  %from.addr.i177 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i177, metadata !6522, metadata !DIExpression()), !dbg !7159
  %n.addr.i178 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i178, metadata !6524, metadata !DIExpression()), !dbg !7160
  %retval.i.i118 = alloca i1, align 1
  %addr.addr.i.i119 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i119, metadata !6011, metadata !DIExpression()), !dbg !7161
  %bytes.addr.i.i120 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i120, metadata !6027, metadata !DIExpression()), !dbg !7166
  %is_source.addr.i.i121 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i121, metadata !6029, metadata !DIExpression()), !dbg !7167
  %sz.i.i122 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i122, metadata !6031, metadata !DIExpression()), !dbg !7168
  %__ret_warn_on.i.i123 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i123, metadata !6033, metadata !DIExpression()), !dbg !7169
  %tmp.i.i124 = alloca i64, align 8
  %to.addr.i125 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i125, metadata !6520, metadata !DIExpression()), !dbg !7170
  %from.addr.i126 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i126, metadata !6522, metadata !DIExpression()), !dbg !7171
  %n.addr.i127 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i127, metadata !6524, metadata !DIExpression()), !dbg !7172
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !6011, metadata !DIExpression()), !dbg !7173
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !6027, metadata !DIExpression()), !dbg !7178
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !6029, metadata !DIExpression()), !dbg !7179
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !6031, metadata !DIExpression()), !dbg !7180
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !6033, metadata !DIExpression()), !dbg !7181
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6520, metadata !DIExpression()), !dbg !7182
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6522, metadata !DIExpression()), !dbg !7183
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6524, metadata !DIExpression()), !dbg !7184
  %retval = alloca i64, align 8
  %file.addr = alloca %struct.file*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i64, align 8
  %minor = alloca i32, align 4
  %cfp = alloca %struct.comedi_file*, align 8
  %dev = alloca %struct.comedi_device*, align 8
  %rc = alloca i32, align 4
  %it = alloca %struct.comedi_chaninfo, align 8
  %it40 = alloca %struct.comedi_rangeinfo, align 8
  %cmd56 = alloca %struct.comedi_cmd, align 8
  %copy = alloca i8, align 1
  %cmd70 = alloca %struct.comedi_cmd, align 8
  %copy71 = alloca i8, align 1
  %insnlist = alloca %struct.comedi_insnlist, align 8
  %insns = alloca %struct.comedi_insn*, align 8
  %insn = alloca %struct.comedi_insn, align 8
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !7185, metadata !DIExpression()), !dbg !7186
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !7187, metadata !DIExpression()), !dbg !7188
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !7189, metadata !DIExpression()), !dbg !7190
  call void @llvm.dbg.declare(metadata i32* %minor, metadata !7191, metadata !DIExpression()), !dbg !7192
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7193
  %call = call %struct.inode* @file_inode(%struct.file* %0) #11, !dbg !7194
  %call1 = call i32 @iminor(%struct.inode* %call) #11, !dbg !7195
  store i32 %call1, i32* %minor, align 4, !dbg !7192
  call void @llvm.dbg.declare(metadata %struct.comedi_file** %cfp, metadata !7196, metadata !DIExpression()), !dbg !7197
  %1 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7198
  %private_data = getelementptr inbounds %struct.file, %struct.file* %1, i32 0, i32 15, !dbg !7199
  %2 = load i8*, i8** %private_data, align 8, !dbg !7199
  %3 = bitcast i8* %2 to %struct.comedi_file*, !dbg !7198
  store %struct.comedi_file* %3, %struct.comedi_file** %cfp, align 8, !dbg !7197
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !7200, metadata !DIExpression()), !dbg !7201
  %4 = load %struct.comedi_file*, %struct.comedi_file** %cfp, align 8, !dbg !7202
  %dev2 = getelementptr inbounds %struct.comedi_file, %struct.comedi_file* %4, i32 0, i32 0, !dbg !7203
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev2, align 8, !dbg !7203
  store %struct.comedi_device* %5, %struct.comedi_device** %dev, align 8, !dbg !7201
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !7204, metadata !DIExpression()), !dbg !7205
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7206
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %6, i32 0, i32 12, !dbg !7207
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !7208
  %7 = load i32, i32* %cmd.addr, align 4, !dbg !7209
  %conv = zext i32 %7 to i64, !dbg !7209
  %cmp = icmp eq i64 %conv, 1083466752, !dbg !7211
  br i1 %cmp, label %if.then, label %if.end25, !dbg !7212

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %minor, align 4, !dbg !7213
  %cmp4 = icmp uge i32 %8, 48, !dbg !7216
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !7217

if.then6:                                         ; preds = %if.then
  store i32 -25, i32* %rc, align 4, !dbg !7218
  br label %done, !dbg !7220

if.end:                                           ; preds = %if.then
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7221
  %10 = load i64, i64* %arg.addr, align 8, !dbg !7222
  %11 = inttoptr i64 %10 to %struct.comedi_devconfig*, !dbg !7223
  %call7 = call i32 @do_devconfig_ioctl(%struct.comedi_device* %9, %struct.comedi_devconfig* %11) #11, !dbg !7224
  store i32 %call7, i32* %rc, align 4, !dbg !7225
  %12 = load i32, i32* %rc, align 4, !dbg !7226
  %cmp8 = icmp eq i32 %12, 0, !dbg !7228
  br i1 %cmp8, label %if.then10, label %if.end24, !dbg !7229

if.then10:                                        ; preds = %if.end
  %13 = load i64, i64* %arg.addr, align 8, !dbg !7230
  %cmp11 = icmp eq i64 %13, 0, !dbg !7233
  br i1 %cmp11, label %land.lhs.true, label %if.end23, !dbg !7234

land.lhs.true:                                    ; preds = %if.then10
  %14 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7235
  %minor13 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %14, i32 0, i32 5, !dbg !7236
  %15 = load i32, i32* %minor13, align 8, !dbg !7236
  %16 = load i16, i16* @comedi_num_legacy_minors, align 2, !dbg !7237
  %conv14 = zext i16 %16 to i32, !dbg !7237
  %cmp15 = icmp sge i32 %15, %conv14, !dbg !7238
  br i1 %cmp15, label %if.then17, label %if.end23, !dbg !7239

if.then17:                                        ; preds = %land.lhs.true
  %17 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7240
  %call18 = call zeroext i1 @comedi_clear_board_dev(%struct.comedi_device* %17) #11, !dbg !7243
  br i1 %call18, label %if.then19, label %if.end22, !dbg !7244

if.then19:                                        ; preds = %if.then17
  %18 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7245
  %mutex20 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %18, i32 0, i32 12, !dbg !7247
  call void @mutex_unlock(%struct.mutex* %mutex20) #11, !dbg !7248
  %19 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7249
  call void @comedi_free_board_dev(%struct.comedi_device* %19) #11, !dbg !7250
  %20 = load i32, i32* %rc, align 4, !dbg !7251
  %conv21 = sext i32 %20 to i64, !dbg !7251
  store i64 %conv21, i64* %retval, align 8, !dbg !7252
  br label %return, !dbg !7252

if.end22:                                         ; preds = %if.then17
  br label %if.end23, !dbg !7253

if.end23:                                         ; preds = %if.end22, %land.lhs.true, %if.then10
  br label %if.end24, !dbg !7254

if.end24:                                         ; preds = %if.end23, %if.end
  br label %done, !dbg !7255

if.end25:                                         ; preds = %entry
  %21 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7256
  %attached = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %21, i32 0, i32 10, !dbg !7258
  %bf.load = load i8, i8* %attached, align 8, !dbg !7258
  %bf.clear = and i8 %bf.load, 1, !dbg !7258
  %bf.cast = zext i8 %bf.clear to i32, !dbg !7258
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !7256
  br i1 %tobool, label %if.end27, label %if.then26, !dbg !7259

if.then26:                                        ; preds = %if.end25
  store i32 -19, i32* %rc, align 4, !dbg !7260
  br label %done, !dbg !7262

if.end27:                                         ; preds = %if.end25
  %22 = load i32, i32* %cmd.addr, align 4, !dbg !7263
  switch i32 %22, label %sw.default [
    i32 -2145360883, label %sw.bb
    i32 -2135923711, label %sw.bb29
    i32 -2142739454, label %sw.bb31
    i32 -2144312317, label %sw.bb33
    i32 -2146409464, label %sw.bb39
    i32 -1070832626, label %sw.bb47
    i32 25605, label %sw.bb49
    i32 25606, label %sw.bb51
    i32 25607, label %sw.bb53
    i32 -2142215159, label %sw.bb55
    i32 -2142215158, label %sw.bb69
    i32 -2146409461, label %sw.bb84
    i32 -2144836596, label %sw.bb103
    i32 25615, label %sw.bb110
    i32 25616, label %sw.bb112
    i32 25617, label %sw.bb114
  ], !dbg !7264

sw.bb:                                            ; preds = %if.end27
  %23 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7265
  %24 = load i64, i64* %arg.addr, align 8, !dbg !7266
  %25 = inttoptr i64 %24 to %struct.comedi_bufconfig*, !dbg !7267
  %call28 = call i32 @do_bufconfig_ioctl(%struct.comedi_device* %23, %struct.comedi_bufconfig* %25) #11, !dbg !7268
  store i32 %call28, i32* %rc, align 4, !dbg !7269
  br label %sw.epilog, !dbg !7270

sw.bb29:                                          ; preds = %if.end27
  %26 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7271
  %27 = load i64, i64* %arg.addr, align 8, !dbg !7272
  %28 = inttoptr i64 %27 to %struct.comedi_devinfo*, !dbg !7273
  %29 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7274
  %call30 = call i32 @do_devinfo_ioctl(%struct.comedi_device* %26, %struct.comedi_devinfo* %28, %struct.file* %29) #11, !dbg !7275
  store i32 %call30, i32* %rc, align 4, !dbg !7276
  br label %sw.epilog, !dbg !7277

sw.bb31:                                          ; preds = %if.end27
  %30 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7278
  %31 = load i64, i64* %arg.addr, align 8, !dbg !7279
  %32 = inttoptr i64 %31 to %struct.comedi_subdinfo*, !dbg !7280
  %33 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7281
  %34 = bitcast %struct.file* %33 to i8*, !dbg !7281
  %call32 = call i32 @do_subdinfo_ioctl(%struct.comedi_device* %30, %struct.comedi_subdinfo* %32, i8* %34) #11, !dbg !7282
  store i32 %call32, i32* %rc, align 4, !dbg !7283
  br label %sw.epilog, !dbg !7284

sw.bb33:                                          ; preds = %if.end27
  call void @llvm.dbg.declare(metadata %struct.comedi_chaninfo* %it, metadata !7285, metadata !DIExpression()), !dbg !7293
  %35 = bitcast %struct.comedi_chaninfo* %it to i8*, !dbg !7294
  %36 = load i64, i64* %arg.addr, align 8, !dbg !7295
  %37 = inttoptr i64 %36 to i8*, !dbg !7296
  store i8* %35, i8** %to.addr.i, align 8
  store i8* %37, i8** %from.addr.i, align 8
  store i64 48, i64* %n.addr.i, align 8
  %38 = load i8*, i8** %to.addr.i, align 8, !dbg !7297
  %39 = load i64, i64* %n.addr.i, align 8, !dbg !7297
  store i8* %38, i8** %addr.addr.i.i, align 8
  store i64 %39, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !7180
  %40 = load i32, i32* %sz.i.i, align 4, !dbg !7298
  %cmp.i.i = icmp sge i32 %40, 0, !dbg !7298
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !7298

land.rhs.i.i:                                     ; preds = %sw.bb33
  %41 = load i32, i32* %sz.i.i, align 4, !dbg !7298
  %conv.i.i = sext i32 %41 to i64, !dbg !7298
  %42 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7298
  %cmp1.i.i = icmp ult i64 %conv.i.i, %42, !dbg !7298
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %sw.bb33
  %43 = phi i1 [ false, %sw.bb33 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !7299
  %lnot.i.i = xor i1 %43, true, !dbg !7298
  %lnot.ext.i.i = zext i1 %43 to i32, !dbg !7298
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7298
  br i1 %43, label %if.then.i.i, label %if.end10.i.i, !dbg !7300

if.then.i.i:                                      ; preds = %land.end.i.i
  %44 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7301
  %45 = call i1 @llvm.is.constant.i64(i64 %44) #9, !dbg !7302
  br i1 %45, label %if.else.i.i, label %if.then5.i.i, !dbg !7303

if.then5.i.i:                                     ; preds = %if.then.i.i
  %46 = load i32, i32* %sz.i.i, align 4, !dbg !7304
  %47 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7305
  call void @copy_overflow(i32 %46, i64 %47) #12, !dbg !7306
  br label %if.end9.i.i, !dbg !7306

if.else.i.i:                                      ; preds = %if.then.i.i
  %48 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7307
  %tobool6.i.i = trunc i8 %48 to i1, !dbg !7307
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !7308

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #12, !dbg !7309
  br label %if.end.i.i, !dbg !7309

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #12, !dbg !7310
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7311
  br label %check_copy_size.exit.i, !dbg !7311

if.end10.i.i:                                     ; preds = %land.end.i.i
  %49 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7181
  %cmp11.i.i = icmp ugt i64 %49, 2147483647, !dbg !7181
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !7181
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !7181
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !7181
  %50 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7312
  %tobool17.i.i = icmp ne i32 %50, 0, !dbg !7312
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !7312
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !7312
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !7312
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !7181

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !7313, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !7314, !srcloc !6323
  br label %if.end31.i.i, !dbg !7315

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %51 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7181
  %tobool32.i.i = icmp ne i32 %51, 0, !dbg !7181
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !7181
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !7181
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !7181
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !7312
  %52 = load i64, i64* %tmp.i.i, align 8, !dbg !7181
  %tobool38.i.i = icmp ne i64 %52, 0, !dbg !7316
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !7317

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7318
  br label %check_copy_size.exit.i, !dbg !7318

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %53 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !7319
  %54 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7320
  %55 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7321
  %tobool41.i.i = trunc i8 %55 to i1, !dbg !7321
  call void @check_object_size(i8* %53, i64 %54, i1 zeroext %tobool41.i.i) #12, !dbg !7322
  store i1 true, i1* %retval.i.i, align 1, !dbg !7323
  br label %check_copy_size.exit.i, !dbg !7323

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %56 = load i1, i1* %retval.i.i, align 1, !dbg !7324
  %lnot.i = xor i1 %56, true, !dbg !7297
  %lnot.ext.i = zext i1 %56 to i32, !dbg !7297
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !7297
  br i1 %56, label %if.then.i, label %copy_from_user.exit, !dbg !7325

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %57 = load i8*, i8** %to.addr.i, align 8, !dbg !7326
  %58 = load i8*, i8** %from.addr.i, align 8, !dbg !7327
  %59 = load i64, i64* %n.addr.i, align 8, !dbg !7328
  %call2.i = call i64 @_copy_from_user(i8* %57, i8* %58, i64 %59) #12, !dbg !7329
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !7330
  br label %copy_from_user.exit, !dbg !7331

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %60 = load i64, i64* %n.addr.i, align 8, !dbg !7332
  %tobool35 = icmp ne i64 %60, 0, !dbg !7333
  br i1 %tobool35, label %if.then36, label %if.else, !dbg !7334

if.then36:                                        ; preds = %copy_from_user.exit
  store i32 -14, i32* %rc, align 4, !dbg !7335
  br label %if.end38, !dbg !7336

if.else:                                          ; preds = %copy_from_user.exit
  %61 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7337
  %call37 = call i32 @do_chaninfo_ioctl(%struct.comedi_device* %61, %struct.comedi_chaninfo* %it) #11, !dbg !7338
  store i32 %call37, i32* %rc, align 4, !dbg !7339
  br label %if.end38

if.end38:                                         ; preds = %if.else, %if.then36
  br label %sw.epilog, !dbg !7340

sw.bb39:                                          ; preds = %if.end27
  call void @llvm.dbg.declare(metadata %struct.comedi_rangeinfo* %it40, metadata !7341, metadata !DIExpression()), !dbg !7346
  %62 = bitcast %struct.comedi_rangeinfo* %it40 to i8*, !dbg !7347
  %63 = load i64, i64* %arg.addr, align 8, !dbg !7348
  %64 = inttoptr i64 %63 to i8*, !dbg !7349
  store i8* %62, i8** %to.addr.i125, align 8
  store i8* %64, i8** %from.addr.i126, align 8
  store i64 16, i64* %n.addr.i127, align 8
  %65 = load i8*, i8** %to.addr.i125, align 8, !dbg !7350
  %66 = load i64, i64* %n.addr.i127, align 8, !dbg !7350
  store i8* %65, i8** %addr.addr.i.i119, align 8
  store i64 %66, i64* %bytes.addr.i.i120, align 8
  store i8 0, i8* %is_source.addr.i.i121, align 1
  store i32 -1, i32* %sz.i.i122, align 4, !dbg !7168
  %67 = load i32, i32* %sz.i.i122, align 4, !dbg !7351
  %cmp.i.i128 = icmp sge i32 %67, 0, !dbg !7351
  br i1 %cmp.i.i128, label %land.rhs.i.i131, label %land.end.i.i135, !dbg !7351

land.rhs.i.i131:                                  ; preds = %sw.bb39
  %68 = load i32, i32* %sz.i.i122, align 4, !dbg !7351
  %conv.i.i129 = sext i32 %68 to i64, !dbg !7351
  %69 = load i64, i64* %bytes.addr.i.i120, align 8, !dbg !7351
  %cmp1.i.i130 = icmp ult i64 %conv.i.i129, %69, !dbg !7351
  br label %land.end.i.i135

land.end.i.i135:                                  ; preds = %land.rhs.i.i131, %sw.bb39
  %70 = phi i1 [ false, %sw.bb39 ], [ %cmp1.i.i130, %land.rhs.i.i131 ], !dbg !7352
  %lnot.i.i132 = xor i1 %70, true, !dbg !7351
  %lnot.ext.i.i133 = zext i1 %70 to i32, !dbg !7351
  %conv4.i.i134 = sext i32 %lnot.ext.i.i133 to i64, !dbg !7351
  br i1 %70, label %if.then.i.i136, label %if.end10.i.i151, !dbg !7353

if.then.i.i136:                                   ; preds = %land.end.i.i135
  %71 = load i64, i64* %bytes.addr.i.i120, align 8, !dbg !7354
  %72 = call i1 @llvm.is.constant.i64(i64 %71) #9, !dbg !7355
  br i1 %72, label %if.else.i.i139, label %if.then5.i.i137, !dbg !7356

if.then5.i.i137:                                  ; preds = %if.then.i.i136
  %73 = load i32, i32* %sz.i.i122, align 4, !dbg !7357
  %74 = load i64, i64* %bytes.addr.i.i120, align 8, !dbg !7358
  call void @copy_overflow(i32 %73, i64 %74) #12, !dbg !7359
  br label %if.end9.i.i143, !dbg !7359

if.else.i.i139:                                   ; preds = %if.then.i.i136
  %75 = load i8, i8* %is_source.addr.i.i121, align 1, !dbg !7360
  %tobool6.i.i138 = trunc i8 %75 to i1, !dbg !7360
  br i1 %tobool6.i.i138, label %if.then7.i.i140, label %if.else8.i.i141, !dbg !7361

if.then7.i.i140:                                  ; preds = %if.else.i.i139
  call void @__bad_copy_from() #12, !dbg !7362
  br label %if.end.i.i142, !dbg !7362

if.else8.i.i141:                                  ; preds = %if.else.i.i139
  call void @__bad_copy_to() #12, !dbg !7363
  br label %if.end.i.i142

if.end.i.i142:                                    ; preds = %if.else8.i.i141, %if.then7.i.i140
  br label %if.end9.i.i143

if.end9.i.i143:                                   ; preds = %if.end.i.i142, %if.then5.i.i137
  store i1 false, i1* %retval.i.i118, align 1, !dbg !7364
  br label %check_copy_size.exit.i165, !dbg !7364

if.end10.i.i151:                                  ; preds = %land.end.i.i135
  %76 = load i64, i64* %bytes.addr.i.i120, align 8, !dbg !7169
  %cmp11.i.i144 = icmp ugt i64 %76, 2147483647, !dbg !7169
  %lnot13.i.i145 = xor i1 %cmp11.i.i144, true, !dbg !7169
  %lnot.ext16.i.i146 = zext i1 %cmp11.i.i144 to i32, !dbg !7169
  store i32 %lnot.ext16.i.i146, i32* %__ret_warn_on.i.i123, align 4, !dbg !7169
  %77 = load i32, i32* %__ret_warn_on.i.i123, align 4, !dbg !7365
  %tobool17.i.i147 = icmp ne i32 %77, 0, !dbg !7365
  %lnot18.i.i148 = xor i1 %tobool17.i.i147, true, !dbg !7365
  %lnot.ext21.i.i149 = zext i1 %tobool17.i.i147 to i32, !dbg !7365
  %conv22.i.i150 = sext i32 %lnot.ext21.i.i149 to i64, !dbg !7365
  br i1 %tobool17.i.i147, label %if.then24.i.i152, label %if.end31.i.i158, !dbg !7169

if.then24.i.i152:                                 ; preds = %if.end10.i.i151
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !7366, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !7367, !srcloc !6323
  br label %if.end31.i.i158, !dbg !7368

if.end31.i.i158:                                  ; preds = %if.then24.i.i152, %if.end10.i.i151
  %78 = load i32, i32* %__ret_warn_on.i.i123, align 4, !dbg !7169
  %tobool32.i.i153 = icmp ne i32 %78, 0, !dbg !7169
  %lnot33.i.i154 = xor i1 %tobool32.i.i153, true, !dbg !7169
  %lnot.ext36.i.i155 = zext i1 %tobool32.i.i153 to i32, !dbg !7169
  %conv37.i.i156 = sext i32 %lnot.ext36.i.i155 to i64, !dbg !7169
  store i64 %conv37.i.i156, i64* %tmp.i.i124, align 8, !dbg !7365
  %79 = load i64, i64* %tmp.i.i124, align 8, !dbg !7169
  %tobool38.i.i157 = icmp ne i64 %79, 0, !dbg !7369
  br i1 %tobool38.i.i157, label %if.then39.i.i159, label %if.end40.i.i161, !dbg !7370

if.then39.i.i159:                                 ; preds = %if.end31.i.i158
  store i1 false, i1* %retval.i.i118, align 1, !dbg !7371
  br label %check_copy_size.exit.i165, !dbg !7371

if.end40.i.i161:                                  ; preds = %if.end31.i.i158
  %80 = load i8*, i8** %addr.addr.i.i119, align 8, !dbg !7372
  %81 = load i64, i64* %bytes.addr.i.i120, align 8, !dbg !7373
  %82 = load i8, i8* %is_source.addr.i.i121, align 1, !dbg !7374
  %tobool41.i.i160 = trunc i8 %82 to i1, !dbg !7374
  call void @check_object_size(i8* %80, i64 %81, i1 zeroext %tobool41.i.i160) #12, !dbg !7375
  store i1 true, i1* %retval.i.i118, align 1, !dbg !7376
  br label %check_copy_size.exit.i165, !dbg !7376

check_copy_size.exit.i165:                        ; preds = %if.end40.i.i161, %if.then39.i.i159, %if.end9.i.i143
  %83 = load i1, i1* %retval.i.i118, align 1, !dbg !7377
  %lnot.i162 = xor i1 %83, true, !dbg !7350
  %lnot.ext.i163 = zext i1 %83 to i32, !dbg !7350
  %conv.i164 = sext i32 %lnot.ext.i163 to i64, !dbg !7350
  br i1 %83, label %if.then.i167, label %copy_from_user.exit168, !dbg !7378

if.then.i167:                                     ; preds = %check_copy_size.exit.i165
  %84 = load i8*, i8** %to.addr.i125, align 8, !dbg !7379
  %85 = load i8*, i8** %from.addr.i126, align 8, !dbg !7380
  %86 = load i64, i64* %n.addr.i127, align 8, !dbg !7381
  %call2.i166 = call i64 @_copy_from_user(i8* %84, i8* %85, i64 %86) #12, !dbg !7382
  store i64 %call2.i166, i64* %n.addr.i127, align 8, !dbg !7383
  br label %copy_from_user.exit168, !dbg !7384

copy_from_user.exit168:                           ; preds = %check_copy_size.exit.i165, %if.then.i167
  %87 = load i64, i64* %n.addr.i127, align 8, !dbg !7385
  %tobool42 = icmp ne i64 %87, 0, !dbg !7386
  br i1 %tobool42, label %if.then43, label %if.else44, !dbg !7387

if.then43:                                        ; preds = %copy_from_user.exit168
  store i32 -14, i32* %rc, align 4, !dbg !7388
  br label %if.end46, !dbg !7389

if.else44:                                        ; preds = %copy_from_user.exit168
  %88 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7390
  %call45 = call i32 @do_rangeinfo_ioctl(%struct.comedi_device* %88, %struct.comedi_rangeinfo* %it40) #11, !dbg !7391
  store i32 %call45, i32* %rc, align 4, !dbg !7392
  br label %if.end46

if.end46:                                         ; preds = %if.else44, %if.then43
  br label %sw.epilog, !dbg !7393

sw.bb47:                                          ; preds = %if.end27
  %89 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7394
  %90 = load i64, i64* %arg.addr, align 8, !dbg !7395
  %91 = inttoptr i64 %90 to %struct.comedi_bufinfo*, !dbg !7396
  %92 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7397
  %93 = bitcast %struct.file* %92 to i8*, !dbg !7397
  %call48 = call i32 @do_bufinfo_ioctl(%struct.comedi_device* %89, %struct.comedi_bufinfo* %91, i8* %93) #11, !dbg !7398
  store i32 %call48, i32* %rc, align 4, !dbg !7399
  br label %sw.epilog, !dbg !7400

sw.bb49:                                          ; preds = %if.end27
  %94 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7401
  %95 = load i64, i64* %arg.addr, align 8, !dbg !7402
  %96 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7403
  %97 = bitcast %struct.file* %96 to i8*, !dbg !7403
  %call50 = call i32 @do_lock_ioctl(%struct.comedi_device* %94, i64 %95, i8* %97) #11, !dbg !7404
  store i32 %call50, i32* %rc, align 4, !dbg !7405
  br label %sw.epilog, !dbg !7406

sw.bb51:                                          ; preds = %if.end27
  %98 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7407
  %99 = load i64, i64* %arg.addr, align 8, !dbg !7408
  %100 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7409
  %101 = bitcast %struct.file* %100 to i8*, !dbg !7409
  %call52 = call i32 @do_unlock_ioctl(%struct.comedi_device* %98, i64 %99, i8* %101) #11, !dbg !7410
  store i32 %call52, i32* %rc, align 4, !dbg !7411
  br label %sw.epilog, !dbg !7412

sw.bb53:                                          ; preds = %if.end27
  %102 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7413
  %103 = load i64, i64* %arg.addr, align 8, !dbg !7414
  %104 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7415
  %105 = bitcast %struct.file* %104 to i8*, !dbg !7415
  %call54 = call i32 @do_cancel_ioctl(%struct.comedi_device* %102, i64 %103, i8* %105) #11, !dbg !7416
  store i32 %call54, i32* %rc, align 4, !dbg !7417
  br label %sw.epilog, !dbg !7418

sw.bb55:                                          ; preds = %if.end27
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd* %cmd56, metadata !7419, metadata !DIExpression()), !dbg !7420
  call void @llvm.dbg.declare(metadata i8* %copy, metadata !7421, metadata !DIExpression()), !dbg !7422
  store i8 0, i8* %copy, align 1, !dbg !7422
  %106 = bitcast %struct.comedi_cmd* %cmd56 to i8*, !dbg !7423
  %107 = load i64, i64* %arg.addr, align 8, !dbg !7424
  %108 = inttoptr i64 %107 to i8*, !dbg !7425
  store i8* %106, i8** %to.addr.i176, align 8
  store i8* %108, i8** %from.addr.i177, align 8
  store i64 80, i64* %n.addr.i178, align 8
  %109 = load i8*, i8** %to.addr.i176, align 8, !dbg !7426
  %110 = load i64, i64* %n.addr.i178, align 8, !dbg !7426
  store i8* %109, i8** %addr.addr.i.i170, align 8
  store i64 %110, i64* %bytes.addr.i.i171, align 8
  store i8 0, i8* %is_source.addr.i.i172, align 1
  store i32 -1, i32* %sz.i.i173, align 4, !dbg !7156
  %111 = load i32, i32* %sz.i.i173, align 4, !dbg !7427
  %cmp.i.i179 = icmp sge i32 %111, 0, !dbg !7427
  br i1 %cmp.i.i179, label %land.rhs.i.i182, label %land.end.i.i186, !dbg !7427

land.rhs.i.i182:                                  ; preds = %sw.bb55
  %112 = load i32, i32* %sz.i.i173, align 4, !dbg !7427
  %conv.i.i180 = sext i32 %112 to i64, !dbg !7427
  %113 = load i64, i64* %bytes.addr.i.i171, align 8, !dbg !7427
  %cmp1.i.i181 = icmp ult i64 %conv.i.i180, %113, !dbg !7427
  br label %land.end.i.i186

land.end.i.i186:                                  ; preds = %land.rhs.i.i182, %sw.bb55
  %114 = phi i1 [ false, %sw.bb55 ], [ %cmp1.i.i181, %land.rhs.i.i182 ], !dbg !7428
  %lnot.i.i183 = xor i1 %114, true, !dbg !7427
  %lnot.ext.i.i184 = zext i1 %114 to i32, !dbg !7427
  %conv4.i.i185 = sext i32 %lnot.ext.i.i184 to i64, !dbg !7427
  br i1 %114, label %if.then.i.i187, label %if.end10.i.i202, !dbg !7429

if.then.i.i187:                                   ; preds = %land.end.i.i186
  %115 = load i64, i64* %bytes.addr.i.i171, align 8, !dbg !7430
  %116 = call i1 @llvm.is.constant.i64(i64 %115) #9, !dbg !7431
  br i1 %116, label %if.else.i.i190, label %if.then5.i.i188, !dbg !7432

if.then5.i.i188:                                  ; preds = %if.then.i.i187
  %117 = load i32, i32* %sz.i.i173, align 4, !dbg !7433
  %118 = load i64, i64* %bytes.addr.i.i171, align 8, !dbg !7434
  call void @copy_overflow(i32 %117, i64 %118) #12, !dbg !7435
  br label %if.end9.i.i194, !dbg !7435

if.else.i.i190:                                   ; preds = %if.then.i.i187
  %119 = load i8, i8* %is_source.addr.i.i172, align 1, !dbg !7436
  %tobool6.i.i189 = trunc i8 %119 to i1, !dbg !7436
  br i1 %tobool6.i.i189, label %if.then7.i.i191, label %if.else8.i.i192, !dbg !7437

if.then7.i.i191:                                  ; preds = %if.else.i.i190
  call void @__bad_copy_from() #12, !dbg !7438
  br label %if.end.i.i193, !dbg !7438

if.else8.i.i192:                                  ; preds = %if.else.i.i190
  call void @__bad_copy_to() #12, !dbg !7439
  br label %if.end.i.i193

if.end.i.i193:                                    ; preds = %if.else8.i.i192, %if.then7.i.i191
  br label %if.end9.i.i194

if.end9.i.i194:                                   ; preds = %if.end.i.i193, %if.then5.i.i188
  store i1 false, i1* %retval.i.i169, align 1, !dbg !7440
  br label %check_copy_size.exit.i216, !dbg !7440

if.end10.i.i202:                                  ; preds = %land.end.i.i186
  %120 = load i64, i64* %bytes.addr.i.i171, align 8, !dbg !7157
  %cmp11.i.i195 = icmp ugt i64 %120, 2147483647, !dbg !7157
  %lnot13.i.i196 = xor i1 %cmp11.i.i195, true, !dbg !7157
  %lnot.ext16.i.i197 = zext i1 %cmp11.i.i195 to i32, !dbg !7157
  store i32 %lnot.ext16.i.i197, i32* %__ret_warn_on.i.i174, align 4, !dbg !7157
  %121 = load i32, i32* %__ret_warn_on.i.i174, align 4, !dbg !7441
  %tobool17.i.i198 = icmp ne i32 %121, 0, !dbg !7441
  %lnot18.i.i199 = xor i1 %tobool17.i.i198, true, !dbg !7441
  %lnot.ext21.i.i200 = zext i1 %tobool17.i.i198 to i32, !dbg !7441
  %conv22.i.i201 = sext i32 %lnot.ext21.i.i200 to i64, !dbg !7441
  br i1 %tobool17.i.i198, label %if.then24.i.i203, label %if.end31.i.i209, !dbg !7157

if.then24.i.i203:                                 ; preds = %if.end10.i.i202
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !7442, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !7443, !srcloc !6323
  br label %if.end31.i.i209, !dbg !7444

if.end31.i.i209:                                  ; preds = %if.then24.i.i203, %if.end10.i.i202
  %122 = load i32, i32* %__ret_warn_on.i.i174, align 4, !dbg !7157
  %tobool32.i.i204 = icmp ne i32 %122, 0, !dbg !7157
  %lnot33.i.i205 = xor i1 %tobool32.i.i204, true, !dbg !7157
  %lnot.ext36.i.i206 = zext i1 %tobool32.i.i204 to i32, !dbg !7157
  %conv37.i.i207 = sext i32 %lnot.ext36.i.i206 to i64, !dbg !7157
  store i64 %conv37.i.i207, i64* %tmp.i.i175, align 8, !dbg !7441
  %123 = load i64, i64* %tmp.i.i175, align 8, !dbg !7157
  %tobool38.i.i208 = icmp ne i64 %123, 0, !dbg !7445
  br i1 %tobool38.i.i208, label %if.then39.i.i210, label %if.end40.i.i212, !dbg !7446

if.then39.i.i210:                                 ; preds = %if.end31.i.i209
  store i1 false, i1* %retval.i.i169, align 1, !dbg !7447
  br label %check_copy_size.exit.i216, !dbg !7447

if.end40.i.i212:                                  ; preds = %if.end31.i.i209
  %124 = load i8*, i8** %addr.addr.i.i170, align 8, !dbg !7448
  %125 = load i64, i64* %bytes.addr.i.i171, align 8, !dbg !7449
  %126 = load i8, i8* %is_source.addr.i.i172, align 1, !dbg !7450
  %tobool41.i.i211 = trunc i8 %126 to i1, !dbg !7450
  call void @check_object_size(i8* %124, i64 %125, i1 zeroext %tobool41.i.i211) #12, !dbg !7451
  store i1 true, i1* %retval.i.i169, align 1, !dbg !7452
  br label %check_copy_size.exit.i216, !dbg !7452

check_copy_size.exit.i216:                        ; preds = %if.end40.i.i212, %if.then39.i.i210, %if.end9.i.i194
  %127 = load i1, i1* %retval.i.i169, align 1, !dbg !7453
  %lnot.i213 = xor i1 %127, true, !dbg !7426
  %lnot.ext.i214 = zext i1 %127 to i32, !dbg !7426
  %conv.i215 = sext i32 %lnot.ext.i214 to i64, !dbg !7426
  br i1 %127, label %if.then.i218, label %copy_from_user.exit219, !dbg !7454

if.then.i218:                                     ; preds = %check_copy_size.exit.i216
  %128 = load i8*, i8** %to.addr.i176, align 8, !dbg !7455
  %129 = load i8*, i8** %from.addr.i177, align 8, !dbg !7456
  %130 = load i64, i64* %n.addr.i178, align 8, !dbg !7457
  %call2.i217 = call i64 @_copy_from_user(i8* %128, i8* %129, i64 %130) #12, !dbg !7458
  store i64 %call2.i217, i64* %n.addr.i178, align 8, !dbg !7459
  br label %copy_from_user.exit219, !dbg !7460

copy_from_user.exit219:                           ; preds = %check_copy_size.exit.i216, %if.then.i218
  %131 = load i64, i64* %n.addr.i178, align 8, !dbg !7461
  %tobool58 = icmp ne i64 %131, 0, !dbg !7462
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !7463

if.then59:                                        ; preds = %copy_from_user.exit219
  store i32 -14, i32* %rc, align 4, !dbg !7464
  br label %sw.epilog, !dbg !7466

if.end60:                                         ; preds = %copy_from_user.exit219
  %132 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7467
  %133 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7468
  %134 = bitcast %struct.file* %133 to i8*, !dbg !7468
  %call61 = call i32 @do_cmd_ioctl(%struct.comedi_device* %132, %struct.comedi_cmd* %cmd56, i8* %copy, i8* %134) #11, !dbg !7469
  store i32 %call61, i32* %rc, align 4, !dbg !7470
  %135 = load i8, i8* %copy, align 1, !dbg !7471
  %tobool62 = trunc i8 %135 to i1, !dbg !7471
  br i1 %tobool62, label %land.lhs.true64, label %if.end68, !dbg !7472

land.lhs.true64:                                  ; preds = %if.end60
  %136 = load i64, i64* %arg.addr, align 8, !dbg !7473
  %137 = inttoptr i64 %136 to i8*, !dbg !7474
  %138 = bitcast %struct.comedi_cmd* %cmd56 to i8*, !dbg !7475
  store i8* %137, i8** %to.addr.i227, align 8
  store i8* %138, i8** %from.addr.i228, align 8
  store i64 80, i64* %n.addr.i229, align 8
  %139 = load i8*, i8** %from.addr.i228, align 8, !dbg !7476
  %140 = load i64, i64* %n.addr.i229, align 8, !dbg !7476
  store i8* %139, i8** %addr.addr.i.i221, align 8
  store i64 %140, i64* %bytes.addr.i.i222, align 8
  store i8 1, i8* %is_source.addr.i.i223, align 1
  store i32 -1, i32* %sz.i.i224, align 4, !dbg !7145
  %141 = load i32, i32* %sz.i.i224, align 4, !dbg !7477
  %cmp.i.i230 = icmp sge i32 %141, 0, !dbg !7477
  br i1 %cmp.i.i230, label %land.rhs.i.i233, label %land.end.i.i237, !dbg !7477

land.rhs.i.i233:                                  ; preds = %land.lhs.true64
  %142 = load i32, i32* %sz.i.i224, align 4, !dbg !7477
  %conv.i.i231 = sext i32 %142 to i64, !dbg !7477
  %143 = load i64, i64* %bytes.addr.i.i222, align 8, !dbg !7477
  %cmp1.i.i232 = icmp ult i64 %conv.i.i231, %143, !dbg !7477
  br label %land.end.i.i237

land.end.i.i237:                                  ; preds = %land.rhs.i.i233, %land.lhs.true64
  %144 = phi i1 [ false, %land.lhs.true64 ], [ %cmp1.i.i232, %land.rhs.i.i233 ], !dbg !7478
  %lnot.i.i234 = xor i1 %144, true, !dbg !7477
  %lnot.ext.i.i235 = zext i1 %144 to i32, !dbg !7477
  %conv4.i.i236 = sext i32 %lnot.ext.i.i235 to i64, !dbg !7477
  br i1 %144, label %if.then.i.i238, label %if.end10.i.i253, !dbg !7479

if.then.i.i238:                                   ; preds = %land.end.i.i237
  %145 = load i64, i64* %bytes.addr.i.i222, align 8, !dbg !7480
  %146 = call i1 @llvm.is.constant.i64(i64 %145) #9, !dbg !7481
  br i1 %146, label %if.else.i.i241, label %if.then5.i.i239, !dbg !7482

if.then5.i.i239:                                  ; preds = %if.then.i.i238
  %147 = load i32, i32* %sz.i.i224, align 4, !dbg !7483
  %148 = load i64, i64* %bytes.addr.i.i222, align 8, !dbg !7484
  call void @copy_overflow(i32 %147, i64 %148) #12, !dbg !7485
  br label %if.end9.i.i245, !dbg !7485

if.else.i.i241:                                   ; preds = %if.then.i.i238
  %149 = load i8, i8* %is_source.addr.i.i223, align 1, !dbg !7486
  %tobool6.i.i240 = trunc i8 %149 to i1, !dbg !7486
  br i1 %tobool6.i.i240, label %if.then7.i.i242, label %if.else8.i.i243, !dbg !7487

if.then7.i.i242:                                  ; preds = %if.else.i.i241
  call void @__bad_copy_from() #12, !dbg !7488
  br label %if.end.i.i244, !dbg !7488

if.else8.i.i243:                                  ; preds = %if.else.i.i241
  call void @__bad_copy_to() #12, !dbg !7489
  br label %if.end.i.i244

if.end.i.i244:                                    ; preds = %if.else8.i.i243, %if.then7.i.i242
  br label %if.end9.i.i245

if.end9.i.i245:                                   ; preds = %if.end.i.i244, %if.then5.i.i239
  store i1 false, i1* %retval.i.i220, align 1, !dbg !7490
  br label %check_copy_size.exit.i267, !dbg !7490

if.end10.i.i253:                                  ; preds = %land.end.i.i237
  %150 = load i64, i64* %bytes.addr.i.i222, align 8, !dbg !7146
  %cmp11.i.i246 = icmp ugt i64 %150, 2147483647, !dbg !7146
  %lnot13.i.i247 = xor i1 %cmp11.i.i246, true, !dbg !7146
  %lnot.ext16.i.i248 = zext i1 %cmp11.i.i246 to i32, !dbg !7146
  store i32 %lnot.ext16.i.i248, i32* %__ret_warn_on.i.i225, align 4, !dbg !7146
  %151 = load i32, i32* %__ret_warn_on.i.i225, align 4, !dbg !7491
  %tobool17.i.i249 = icmp ne i32 %151, 0, !dbg !7491
  %lnot18.i.i250 = xor i1 %tobool17.i.i249, true, !dbg !7491
  %lnot.ext21.i.i251 = zext i1 %tobool17.i.i249 to i32, !dbg !7491
  %conv22.i.i252 = sext i32 %lnot.ext21.i.i251 to i64, !dbg !7491
  br i1 %tobool17.i.i249, label %if.then24.i.i254, label %if.end31.i.i260, !dbg !7146

if.then24.i.i254:                                 ; preds = %if.end10.i.i253
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !7492, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !7493, !srcloc !6323
  br label %if.end31.i.i260, !dbg !7494

if.end31.i.i260:                                  ; preds = %if.then24.i.i254, %if.end10.i.i253
  %152 = load i32, i32* %__ret_warn_on.i.i225, align 4, !dbg !7146
  %tobool32.i.i255 = icmp ne i32 %152, 0, !dbg !7146
  %lnot33.i.i256 = xor i1 %tobool32.i.i255, true, !dbg !7146
  %lnot.ext36.i.i257 = zext i1 %tobool32.i.i255 to i32, !dbg !7146
  %conv37.i.i258 = sext i32 %lnot.ext36.i.i257 to i64, !dbg !7146
  store i64 %conv37.i.i258, i64* %tmp.i.i226, align 8, !dbg !7491
  %153 = load i64, i64* %tmp.i.i226, align 8, !dbg !7146
  %tobool38.i.i259 = icmp ne i64 %153, 0, !dbg !7495
  br i1 %tobool38.i.i259, label %if.then39.i.i261, label %if.end40.i.i263, !dbg !7496

if.then39.i.i261:                                 ; preds = %if.end31.i.i260
  store i1 false, i1* %retval.i.i220, align 1, !dbg !7497
  br label %check_copy_size.exit.i267, !dbg !7497

if.end40.i.i263:                                  ; preds = %if.end31.i.i260
  %154 = load i8*, i8** %addr.addr.i.i221, align 8, !dbg !7498
  %155 = load i64, i64* %bytes.addr.i.i222, align 8, !dbg !7499
  %156 = load i8, i8* %is_source.addr.i.i223, align 1, !dbg !7500
  %tobool41.i.i262 = trunc i8 %156 to i1, !dbg !7500
  call void @check_object_size(i8* %154, i64 %155, i1 zeroext %tobool41.i.i262) #12, !dbg !7501
  store i1 true, i1* %retval.i.i220, align 1, !dbg !7502
  br label %check_copy_size.exit.i267, !dbg !7502

check_copy_size.exit.i267:                        ; preds = %if.end40.i.i263, %if.then39.i.i261, %if.end9.i.i245
  %157 = load i1, i1* %retval.i.i220, align 1, !dbg !7503
  %lnot.i264 = xor i1 %157, true, !dbg !7476
  %lnot.ext.i265 = zext i1 %157 to i32, !dbg !7476
  %conv.i266 = sext i32 %lnot.ext.i265 to i64, !dbg !7476
  br i1 %157, label %if.then.i269, label %copy_to_user.exit, !dbg !7504

if.then.i269:                                     ; preds = %check_copy_size.exit.i267
  %158 = load i8*, i8** %to.addr.i227, align 8, !dbg !7505
  %159 = load i8*, i8** %from.addr.i228, align 8, !dbg !7506
  %160 = load i64, i64* %n.addr.i229, align 8, !dbg !7507
  %call2.i268 = call i64 @_copy_to_user(i8* %158, i8* %159, i64 %160) #12, !dbg !7508
  store i64 %call2.i268, i64* %n.addr.i229, align 8, !dbg !7509
  br label %copy_to_user.exit, !dbg !7510

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i267, %if.then.i269
  %161 = load i64, i64* %n.addr.i229, align 8, !dbg !7511
  %tobool66 = icmp ne i64 %161, 0, !dbg !7512
  br i1 %tobool66, label %if.then67, label %if.end68, !dbg !7513

if.then67:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %rc, align 4, !dbg !7514
  br label %if.end68, !dbg !7515

if.end68:                                         ; preds = %if.then67, %copy_to_user.exit, %if.end60
  br label %sw.epilog, !dbg !7516

sw.bb69:                                          ; preds = %if.end27
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd* %cmd70, metadata !7517, metadata !DIExpression()), !dbg !7518
  call void @llvm.dbg.declare(metadata i8* %copy71, metadata !7519, metadata !DIExpression()), !dbg !7520
  store i8 0, i8* %copy71, align 1, !dbg !7520
  %162 = bitcast %struct.comedi_cmd* %cmd70 to i8*, !dbg !7521
  %163 = load i64, i64* %arg.addr, align 8, !dbg !7522
  %164 = inttoptr i64 %163 to i8*, !dbg !7523
  store i8* %162, i8** %to.addr.i277, align 8
  store i8* %164, i8** %from.addr.i278, align 8
  store i64 80, i64* %n.addr.i279, align 8
  %165 = load i8*, i8** %to.addr.i277, align 8, !dbg !7524
  %166 = load i64, i64* %n.addr.i279, align 8, !dbg !7524
  store i8* %165, i8** %addr.addr.i.i271, align 8
  store i64 %166, i64* %bytes.addr.i.i272, align 8
  store i8 0, i8* %is_source.addr.i.i273, align 1
  store i32 -1, i32* %sz.i.i274, align 4, !dbg !7133
  %167 = load i32, i32* %sz.i.i274, align 4, !dbg !7525
  %cmp.i.i280 = icmp sge i32 %167, 0, !dbg !7525
  br i1 %cmp.i.i280, label %land.rhs.i.i283, label %land.end.i.i287, !dbg !7525

land.rhs.i.i283:                                  ; preds = %sw.bb69
  %168 = load i32, i32* %sz.i.i274, align 4, !dbg !7525
  %conv.i.i281 = sext i32 %168 to i64, !dbg !7525
  %169 = load i64, i64* %bytes.addr.i.i272, align 8, !dbg !7525
  %cmp1.i.i282 = icmp ult i64 %conv.i.i281, %169, !dbg !7525
  br label %land.end.i.i287

land.end.i.i287:                                  ; preds = %land.rhs.i.i283, %sw.bb69
  %170 = phi i1 [ false, %sw.bb69 ], [ %cmp1.i.i282, %land.rhs.i.i283 ], !dbg !7526
  %lnot.i.i284 = xor i1 %170, true, !dbg !7525
  %lnot.ext.i.i285 = zext i1 %170 to i32, !dbg !7525
  %conv4.i.i286 = sext i32 %lnot.ext.i.i285 to i64, !dbg !7525
  br i1 %170, label %if.then.i.i288, label %if.end10.i.i303, !dbg !7527

if.then.i.i288:                                   ; preds = %land.end.i.i287
  %171 = load i64, i64* %bytes.addr.i.i272, align 8, !dbg !7528
  %172 = call i1 @llvm.is.constant.i64(i64 %171) #9, !dbg !7529
  br i1 %172, label %if.else.i.i291, label %if.then5.i.i289, !dbg !7530

if.then5.i.i289:                                  ; preds = %if.then.i.i288
  %173 = load i32, i32* %sz.i.i274, align 4, !dbg !7531
  %174 = load i64, i64* %bytes.addr.i.i272, align 8, !dbg !7532
  call void @copy_overflow(i32 %173, i64 %174) #12, !dbg !7533
  br label %if.end9.i.i295, !dbg !7533

if.else.i.i291:                                   ; preds = %if.then.i.i288
  %175 = load i8, i8* %is_source.addr.i.i273, align 1, !dbg !7534
  %tobool6.i.i290 = trunc i8 %175 to i1, !dbg !7534
  br i1 %tobool6.i.i290, label %if.then7.i.i292, label %if.else8.i.i293, !dbg !7535

if.then7.i.i292:                                  ; preds = %if.else.i.i291
  call void @__bad_copy_from() #12, !dbg !7536
  br label %if.end.i.i294, !dbg !7536

if.else8.i.i293:                                  ; preds = %if.else.i.i291
  call void @__bad_copy_to() #12, !dbg !7537
  br label %if.end.i.i294

if.end.i.i294:                                    ; preds = %if.else8.i.i293, %if.then7.i.i292
  br label %if.end9.i.i295

if.end9.i.i295:                                   ; preds = %if.end.i.i294, %if.then5.i.i289
  store i1 false, i1* %retval.i.i270, align 1, !dbg !7538
  br label %check_copy_size.exit.i317, !dbg !7538

if.end10.i.i303:                                  ; preds = %land.end.i.i287
  %176 = load i64, i64* %bytes.addr.i.i272, align 8, !dbg !7134
  %cmp11.i.i296 = icmp ugt i64 %176, 2147483647, !dbg !7134
  %lnot13.i.i297 = xor i1 %cmp11.i.i296, true, !dbg !7134
  %lnot.ext16.i.i298 = zext i1 %cmp11.i.i296 to i32, !dbg !7134
  store i32 %lnot.ext16.i.i298, i32* %__ret_warn_on.i.i275, align 4, !dbg !7134
  %177 = load i32, i32* %__ret_warn_on.i.i275, align 4, !dbg !7539
  %tobool17.i.i299 = icmp ne i32 %177, 0, !dbg !7539
  %lnot18.i.i300 = xor i1 %tobool17.i.i299, true, !dbg !7539
  %lnot.ext21.i.i301 = zext i1 %tobool17.i.i299 to i32, !dbg !7539
  %conv22.i.i302 = sext i32 %lnot.ext21.i.i301 to i64, !dbg !7539
  br i1 %tobool17.i.i299, label %if.then24.i.i304, label %if.end31.i.i310, !dbg !7134

if.then24.i.i304:                                 ; preds = %if.end10.i.i303
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !7540, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !7541, !srcloc !6323
  br label %if.end31.i.i310, !dbg !7542

if.end31.i.i310:                                  ; preds = %if.then24.i.i304, %if.end10.i.i303
  %178 = load i32, i32* %__ret_warn_on.i.i275, align 4, !dbg !7134
  %tobool32.i.i305 = icmp ne i32 %178, 0, !dbg !7134
  %lnot33.i.i306 = xor i1 %tobool32.i.i305, true, !dbg !7134
  %lnot.ext36.i.i307 = zext i1 %tobool32.i.i305 to i32, !dbg !7134
  %conv37.i.i308 = sext i32 %lnot.ext36.i.i307 to i64, !dbg !7134
  store i64 %conv37.i.i308, i64* %tmp.i.i276, align 8, !dbg !7539
  %179 = load i64, i64* %tmp.i.i276, align 8, !dbg !7134
  %tobool38.i.i309 = icmp ne i64 %179, 0, !dbg !7543
  br i1 %tobool38.i.i309, label %if.then39.i.i311, label %if.end40.i.i313, !dbg !7544

if.then39.i.i311:                                 ; preds = %if.end31.i.i310
  store i1 false, i1* %retval.i.i270, align 1, !dbg !7545
  br label %check_copy_size.exit.i317, !dbg !7545

if.end40.i.i313:                                  ; preds = %if.end31.i.i310
  %180 = load i8*, i8** %addr.addr.i.i271, align 8, !dbg !7546
  %181 = load i64, i64* %bytes.addr.i.i272, align 8, !dbg !7547
  %182 = load i8, i8* %is_source.addr.i.i273, align 1, !dbg !7548
  %tobool41.i.i312 = trunc i8 %182 to i1, !dbg !7548
  call void @check_object_size(i8* %180, i64 %181, i1 zeroext %tobool41.i.i312) #12, !dbg !7549
  store i1 true, i1* %retval.i.i270, align 1, !dbg !7550
  br label %check_copy_size.exit.i317, !dbg !7550

check_copy_size.exit.i317:                        ; preds = %if.end40.i.i313, %if.then39.i.i311, %if.end9.i.i295
  %183 = load i1, i1* %retval.i.i270, align 1, !dbg !7551
  %lnot.i314 = xor i1 %183, true, !dbg !7524
  %lnot.ext.i315 = zext i1 %183 to i32, !dbg !7524
  %conv.i316 = sext i32 %lnot.ext.i315 to i64, !dbg !7524
  br i1 %183, label %if.then.i319, label %copy_from_user.exit320, !dbg !7552

if.then.i319:                                     ; preds = %check_copy_size.exit.i317
  %184 = load i8*, i8** %to.addr.i277, align 8, !dbg !7553
  %185 = load i8*, i8** %from.addr.i278, align 8, !dbg !7554
  %186 = load i64, i64* %n.addr.i279, align 8, !dbg !7555
  %call2.i318 = call i64 @_copy_from_user(i8* %184, i8* %185, i64 %186) #12, !dbg !7556
  store i64 %call2.i318, i64* %n.addr.i279, align 8, !dbg !7557
  br label %copy_from_user.exit320, !dbg !7558

copy_from_user.exit320:                           ; preds = %check_copy_size.exit.i317, %if.then.i319
  %187 = load i64, i64* %n.addr.i279, align 8, !dbg !7559
  %tobool73 = icmp ne i64 %187, 0, !dbg !7560
  br i1 %tobool73, label %if.then74, label %if.end75, !dbg !7561

if.then74:                                        ; preds = %copy_from_user.exit320
  store i32 -14, i32* %rc, align 4, !dbg !7562
  br label %sw.epilog, !dbg !7564

if.end75:                                         ; preds = %copy_from_user.exit320
  %188 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7565
  %189 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7566
  %190 = bitcast %struct.file* %189 to i8*, !dbg !7566
  %call76 = call i32 @do_cmdtest_ioctl(%struct.comedi_device* %188, %struct.comedi_cmd* %cmd70, i8* %copy71, i8* %190) #11, !dbg !7567
  store i32 %call76, i32* %rc, align 4, !dbg !7568
  %191 = load i8, i8* %copy71, align 1, !dbg !7569
  %tobool77 = trunc i8 %191 to i1, !dbg !7569
  br i1 %tobool77, label %land.lhs.true79, label %if.end83, !dbg !7570

land.lhs.true79:                                  ; preds = %if.end75
  %192 = load i64, i64* %arg.addr, align 8, !dbg !7571
  %193 = inttoptr i64 %192 to i8*, !dbg !7572
  %194 = bitcast %struct.comedi_cmd* %cmd70 to i8*, !dbg !7573
  store i8* %193, i8** %to.addr.i328, align 8
  store i8* %194, i8** %from.addr.i329, align 8
  store i64 80, i64* %n.addr.i330, align 8
  %195 = load i8*, i8** %from.addr.i329, align 8, !dbg !7574
  %196 = load i64, i64* %n.addr.i330, align 8, !dbg !7574
  store i8* %195, i8** %addr.addr.i.i322, align 8
  store i64 %196, i64* %bytes.addr.i.i323, align 8
  store i8 1, i8* %is_source.addr.i.i324, align 1
  store i32 -1, i32* %sz.i.i325, align 4, !dbg !7122
  %197 = load i32, i32* %sz.i.i325, align 4, !dbg !7575
  %cmp.i.i331 = icmp sge i32 %197, 0, !dbg !7575
  br i1 %cmp.i.i331, label %land.rhs.i.i334, label %land.end.i.i338, !dbg !7575

land.rhs.i.i334:                                  ; preds = %land.lhs.true79
  %198 = load i32, i32* %sz.i.i325, align 4, !dbg !7575
  %conv.i.i332 = sext i32 %198 to i64, !dbg !7575
  %199 = load i64, i64* %bytes.addr.i.i323, align 8, !dbg !7575
  %cmp1.i.i333 = icmp ult i64 %conv.i.i332, %199, !dbg !7575
  br label %land.end.i.i338

land.end.i.i338:                                  ; preds = %land.rhs.i.i334, %land.lhs.true79
  %200 = phi i1 [ false, %land.lhs.true79 ], [ %cmp1.i.i333, %land.rhs.i.i334 ], !dbg !7576
  %lnot.i.i335 = xor i1 %200, true, !dbg !7575
  %lnot.ext.i.i336 = zext i1 %200 to i32, !dbg !7575
  %conv4.i.i337 = sext i32 %lnot.ext.i.i336 to i64, !dbg !7575
  br i1 %200, label %if.then.i.i339, label %if.end10.i.i354, !dbg !7577

if.then.i.i339:                                   ; preds = %land.end.i.i338
  %201 = load i64, i64* %bytes.addr.i.i323, align 8, !dbg !7578
  %202 = call i1 @llvm.is.constant.i64(i64 %201) #9, !dbg !7579
  br i1 %202, label %if.else.i.i342, label %if.then5.i.i340, !dbg !7580

if.then5.i.i340:                                  ; preds = %if.then.i.i339
  %203 = load i32, i32* %sz.i.i325, align 4, !dbg !7581
  %204 = load i64, i64* %bytes.addr.i.i323, align 8, !dbg !7582
  call void @copy_overflow(i32 %203, i64 %204) #12, !dbg !7583
  br label %if.end9.i.i346, !dbg !7583

if.else.i.i342:                                   ; preds = %if.then.i.i339
  %205 = load i8, i8* %is_source.addr.i.i324, align 1, !dbg !7584
  %tobool6.i.i341 = trunc i8 %205 to i1, !dbg !7584
  br i1 %tobool6.i.i341, label %if.then7.i.i343, label %if.else8.i.i344, !dbg !7585

if.then7.i.i343:                                  ; preds = %if.else.i.i342
  call void @__bad_copy_from() #12, !dbg !7586
  br label %if.end.i.i345, !dbg !7586

if.else8.i.i344:                                  ; preds = %if.else.i.i342
  call void @__bad_copy_to() #12, !dbg !7587
  br label %if.end.i.i345

if.end.i.i345:                                    ; preds = %if.else8.i.i344, %if.then7.i.i343
  br label %if.end9.i.i346

if.end9.i.i346:                                   ; preds = %if.end.i.i345, %if.then5.i.i340
  store i1 false, i1* %retval.i.i321, align 1, !dbg !7588
  br label %check_copy_size.exit.i368, !dbg !7588

if.end10.i.i354:                                  ; preds = %land.end.i.i338
  %206 = load i64, i64* %bytes.addr.i.i323, align 8, !dbg !7123
  %cmp11.i.i347 = icmp ugt i64 %206, 2147483647, !dbg !7123
  %lnot13.i.i348 = xor i1 %cmp11.i.i347, true, !dbg !7123
  %lnot.ext16.i.i349 = zext i1 %cmp11.i.i347 to i32, !dbg !7123
  store i32 %lnot.ext16.i.i349, i32* %__ret_warn_on.i.i326, align 4, !dbg !7123
  %207 = load i32, i32* %__ret_warn_on.i.i326, align 4, !dbg !7589
  %tobool17.i.i350 = icmp ne i32 %207, 0, !dbg !7589
  %lnot18.i.i351 = xor i1 %tobool17.i.i350, true, !dbg !7589
  %lnot.ext21.i.i352 = zext i1 %tobool17.i.i350 to i32, !dbg !7589
  %conv22.i.i353 = sext i32 %lnot.ext21.i.i352 to i64, !dbg !7589
  br i1 %tobool17.i.i350, label %if.then24.i.i355, label %if.end31.i.i361, !dbg !7123

if.then24.i.i355:                                 ; preds = %if.end10.i.i354
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !7590, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !7591, !srcloc !6323
  br label %if.end31.i.i361, !dbg !7592

if.end31.i.i361:                                  ; preds = %if.then24.i.i355, %if.end10.i.i354
  %208 = load i32, i32* %__ret_warn_on.i.i326, align 4, !dbg !7123
  %tobool32.i.i356 = icmp ne i32 %208, 0, !dbg !7123
  %lnot33.i.i357 = xor i1 %tobool32.i.i356, true, !dbg !7123
  %lnot.ext36.i.i358 = zext i1 %tobool32.i.i356 to i32, !dbg !7123
  %conv37.i.i359 = sext i32 %lnot.ext36.i.i358 to i64, !dbg !7123
  store i64 %conv37.i.i359, i64* %tmp.i.i327, align 8, !dbg !7589
  %209 = load i64, i64* %tmp.i.i327, align 8, !dbg !7123
  %tobool38.i.i360 = icmp ne i64 %209, 0, !dbg !7593
  br i1 %tobool38.i.i360, label %if.then39.i.i362, label %if.end40.i.i364, !dbg !7594

if.then39.i.i362:                                 ; preds = %if.end31.i.i361
  store i1 false, i1* %retval.i.i321, align 1, !dbg !7595
  br label %check_copy_size.exit.i368, !dbg !7595

if.end40.i.i364:                                  ; preds = %if.end31.i.i361
  %210 = load i8*, i8** %addr.addr.i.i322, align 8, !dbg !7596
  %211 = load i64, i64* %bytes.addr.i.i323, align 8, !dbg !7597
  %212 = load i8, i8* %is_source.addr.i.i324, align 1, !dbg !7598
  %tobool41.i.i363 = trunc i8 %212 to i1, !dbg !7598
  call void @check_object_size(i8* %210, i64 %211, i1 zeroext %tobool41.i.i363) #12, !dbg !7599
  store i1 true, i1* %retval.i.i321, align 1, !dbg !7600
  br label %check_copy_size.exit.i368, !dbg !7600

check_copy_size.exit.i368:                        ; preds = %if.end40.i.i364, %if.then39.i.i362, %if.end9.i.i346
  %213 = load i1, i1* %retval.i.i321, align 1, !dbg !7601
  %lnot.i365 = xor i1 %213, true, !dbg !7574
  %lnot.ext.i366 = zext i1 %213 to i32, !dbg !7574
  %conv.i367 = sext i32 %lnot.ext.i366 to i64, !dbg !7574
  br i1 %213, label %if.then.i370, label %copy_to_user.exit371, !dbg !7602

if.then.i370:                                     ; preds = %check_copy_size.exit.i368
  %214 = load i8*, i8** %to.addr.i328, align 8, !dbg !7603
  %215 = load i8*, i8** %from.addr.i329, align 8, !dbg !7604
  %216 = load i64, i64* %n.addr.i330, align 8, !dbg !7605
  %call2.i369 = call i64 @_copy_to_user(i8* %214, i8* %215, i64 %216) #12, !dbg !7606
  store i64 %call2.i369, i64* %n.addr.i330, align 8, !dbg !7607
  br label %copy_to_user.exit371, !dbg !7608

copy_to_user.exit371:                             ; preds = %check_copy_size.exit.i368, %if.then.i370
  %217 = load i64, i64* %n.addr.i330, align 8, !dbg !7609
  %tobool81 = icmp ne i64 %217, 0, !dbg !7610
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !7611

if.then82:                                        ; preds = %copy_to_user.exit371
  store i32 -14, i32* %rc, align 4, !dbg !7612
  br label %if.end83, !dbg !7613

if.end83:                                         ; preds = %if.then82, %copy_to_user.exit371, %if.end75
  br label %sw.epilog, !dbg !7614

sw.bb84:                                          ; preds = %if.end27
  call void @llvm.dbg.declare(metadata %struct.comedi_insnlist* %insnlist, metadata !7615, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insns, metadata !7621, metadata !DIExpression()), !dbg !7622
  store %struct.comedi_insn* null, %struct.comedi_insn** %insns, align 8, !dbg !7622
  %218 = bitcast %struct.comedi_insnlist* %insnlist to i8*, !dbg !7623
  %219 = load i64, i64* %arg.addr, align 8, !dbg !7624
  %220 = inttoptr i64 %219 to i8*, !dbg !7625
  store i8* %218, i8** %to.addr.i379, align 8
  store i8* %220, i8** %from.addr.i380, align 8
  store i64 16, i64* %n.addr.i381, align 8
  %221 = load i8*, i8** %to.addr.i379, align 8, !dbg !7626
  %222 = load i64, i64* %n.addr.i381, align 8, !dbg !7626
  store i8* %221, i8** %addr.addr.i.i373, align 8
  store i64 %222, i64* %bytes.addr.i.i374, align 8
  store i8 0, i8* %is_source.addr.i.i375, align 1
  store i32 -1, i32* %sz.i.i376, align 4, !dbg !7110
  %223 = load i32, i32* %sz.i.i376, align 4, !dbg !7627
  %cmp.i.i382 = icmp sge i32 %223, 0, !dbg !7627
  br i1 %cmp.i.i382, label %land.rhs.i.i385, label %land.end.i.i389, !dbg !7627

land.rhs.i.i385:                                  ; preds = %sw.bb84
  %224 = load i32, i32* %sz.i.i376, align 4, !dbg !7627
  %conv.i.i383 = sext i32 %224 to i64, !dbg !7627
  %225 = load i64, i64* %bytes.addr.i.i374, align 8, !dbg !7627
  %cmp1.i.i384 = icmp ult i64 %conv.i.i383, %225, !dbg !7627
  br label %land.end.i.i389

land.end.i.i389:                                  ; preds = %land.rhs.i.i385, %sw.bb84
  %226 = phi i1 [ false, %sw.bb84 ], [ %cmp1.i.i384, %land.rhs.i.i385 ], !dbg !7628
  %lnot.i.i386 = xor i1 %226, true, !dbg !7627
  %lnot.ext.i.i387 = zext i1 %226 to i32, !dbg !7627
  %conv4.i.i388 = sext i32 %lnot.ext.i.i387 to i64, !dbg !7627
  br i1 %226, label %if.then.i.i390, label %if.end10.i.i405, !dbg !7629

if.then.i.i390:                                   ; preds = %land.end.i.i389
  %227 = load i64, i64* %bytes.addr.i.i374, align 8, !dbg !7630
  %228 = call i1 @llvm.is.constant.i64(i64 %227) #9, !dbg !7631
  br i1 %228, label %if.else.i.i393, label %if.then5.i.i391, !dbg !7632

if.then5.i.i391:                                  ; preds = %if.then.i.i390
  %229 = load i32, i32* %sz.i.i376, align 4, !dbg !7633
  %230 = load i64, i64* %bytes.addr.i.i374, align 8, !dbg !7634
  call void @copy_overflow(i32 %229, i64 %230) #12, !dbg !7635
  br label %if.end9.i.i397, !dbg !7635

if.else.i.i393:                                   ; preds = %if.then.i.i390
  %231 = load i8, i8* %is_source.addr.i.i375, align 1, !dbg !7636
  %tobool6.i.i392 = trunc i8 %231 to i1, !dbg !7636
  br i1 %tobool6.i.i392, label %if.then7.i.i394, label %if.else8.i.i395, !dbg !7637

if.then7.i.i394:                                  ; preds = %if.else.i.i393
  call void @__bad_copy_from() #12, !dbg !7638
  br label %if.end.i.i396, !dbg !7638

if.else8.i.i395:                                  ; preds = %if.else.i.i393
  call void @__bad_copy_to() #12, !dbg !7639
  br label %if.end.i.i396

if.end.i.i396:                                    ; preds = %if.else8.i.i395, %if.then7.i.i394
  br label %if.end9.i.i397

if.end9.i.i397:                                   ; preds = %if.end.i.i396, %if.then5.i.i391
  store i1 false, i1* %retval.i.i372, align 1, !dbg !7640
  br label %check_copy_size.exit.i419, !dbg !7640

if.end10.i.i405:                                  ; preds = %land.end.i.i389
  %232 = load i64, i64* %bytes.addr.i.i374, align 8, !dbg !7111
  %cmp11.i.i398 = icmp ugt i64 %232, 2147483647, !dbg !7111
  %lnot13.i.i399 = xor i1 %cmp11.i.i398, true, !dbg !7111
  %lnot.ext16.i.i400 = zext i1 %cmp11.i.i398 to i32, !dbg !7111
  store i32 %lnot.ext16.i.i400, i32* %__ret_warn_on.i.i377, align 4, !dbg !7111
  %233 = load i32, i32* %__ret_warn_on.i.i377, align 4, !dbg !7641
  %tobool17.i.i401 = icmp ne i32 %233, 0, !dbg !7641
  %lnot18.i.i402 = xor i1 %tobool17.i.i401, true, !dbg !7641
  %lnot.ext21.i.i403 = zext i1 %tobool17.i.i401 to i32, !dbg !7641
  %conv22.i.i404 = sext i32 %lnot.ext21.i.i403 to i64, !dbg !7641
  br i1 %tobool17.i.i401, label %if.then24.i.i406, label %if.end31.i.i412, !dbg !7111

if.then24.i.i406:                                 ; preds = %if.end10.i.i405
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !7642, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !7643, !srcloc !6323
  br label %if.end31.i.i412, !dbg !7644

if.end31.i.i412:                                  ; preds = %if.then24.i.i406, %if.end10.i.i405
  %234 = load i32, i32* %__ret_warn_on.i.i377, align 4, !dbg !7111
  %tobool32.i.i407 = icmp ne i32 %234, 0, !dbg !7111
  %lnot33.i.i408 = xor i1 %tobool32.i.i407, true, !dbg !7111
  %lnot.ext36.i.i409 = zext i1 %tobool32.i.i407 to i32, !dbg !7111
  %conv37.i.i410 = sext i32 %lnot.ext36.i.i409 to i64, !dbg !7111
  store i64 %conv37.i.i410, i64* %tmp.i.i378, align 8, !dbg !7641
  %235 = load i64, i64* %tmp.i.i378, align 8, !dbg !7111
  %tobool38.i.i411 = icmp ne i64 %235, 0, !dbg !7645
  br i1 %tobool38.i.i411, label %if.then39.i.i413, label %if.end40.i.i415, !dbg !7646

if.then39.i.i413:                                 ; preds = %if.end31.i.i412
  store i1 false, i1* %retval.i.i372, align 1, !dbg !7647
  br label %check_copy_size.exit.i419, !dbg !7647

if.end40.i.i415:                                  ; preds = %if.end31.i.i412
  %236 = load i8*, i8** %addr.addr.i.i373, align 8, !dbg !7648
  %237 = load i64, i64* %bytes.addr.i.i374, align 8, !dbg !7649
  %238 = load i8, i8* %is_source.addr.i.i375, align 1, !dbg !7650
  %tobool41.i.i414 = trunc i8 %238 to i1, !dbg !7650
  call void @check_object_size(i8* %236, i64 %237, i1 zeroext %tobool41.i.i414) #12, !dbg !7651
  store i1 true, i1* %retval.i.i372, align 1, !dbg !7652
  br label %check_copy_size.exit.i419, !dbg !7652

check_copy_size.exit.i419:                        ; preds = %if.end40.i.i415, %if.then39.i.i413, %if.end9.i.i397
  %239 = load i1, i1* %retval.i.i372, align 1, !dbg !7653
  %lnot.i416 = xor i1 %239, true, !dbg !7626
  %lnot.ext.i417 = zext i1 %239 to i32, !dbg !7626
  %conv.i418 = sext i32 %lnot.ext.i417 to i64, !dbg !7626
  br i1 %239, label %if.then.i421, label %copy_from_user.exit422, !dbg !7654

if.then.i421:                                     ; preds = %check_copy_size.exit.i419
  %240 = load i8*, i8** %to.addr.i379, align 8, !dbg !7655
  %241 = load i8*, i8** %from.addr.i380, align 8, !dbg !7656
  %242 = load i64, i64* %n.addr.i381, align 8, !dbg !7657
  %call2.i420 = call i64 @_copy_from_user(i8* %240, i8* %241, i64 %242) #12, !dbg !7658
  store i64 %call2.i420, i64* %n.addr.i381, align 8, !dbg !7659
  br label %copy_from_user.exit422, !dbg !7660

copy_from_user.exit422:                           ; preds = %check_copy_size.exit.i419, %if.then.i421
  %243 = load i64, i64* %n.addr.i381, align 8, !dbg !7661
  %tobool86 = icmp ne i64 %243, 0, !dbg !7662
  br i1 %tobool86, label %if.then87, label %if.end88, !dbg !7663

if.then87:                                        ; preds = %copy_from_user.exit422
  store i32 -14, i32* %rc, align 4, !dbg !7664
  br label %sw.epilog, !dbg !7666

if.end88:                                         ; preds = %copy_from_user.exit422
  %n_insns = getelementptr inbounds %struct.comedi_insnlist, %struct.comedi_insnlist* %insnlist, i32 0, i32 0, !dbg !7667
  %244 = load i32, i32* %n_insns, align 8, !dbg !7667
  %conv89 = zext i32 %244 to i64, !dbg !7668
  %call90 = call i8* @kcalloc(i64 %conv89, i64 40, i32 3264) #11, !dbg !7669
  %245 = bitcast i8* %call90 to %struct.comedi_insn*, !dbg !7669
  store %struct.comedi_insn* %245, %struct.comedi_insn** %insns, align 8, !dbg !7670
  %246 = load %struct.comedi_insn*, %struct.comedi_insn** %insns, align 8, !dbg !7671
  %tobool91 = icmp ne %struct.comedi_insn* %246, null, !dbg !7671
  br i1 %tobool91, label %if.end93, label %if.then92, !dbg !7673

if.then92:                                        ; preds = %if.end88
  store i32 -12, i32* %rc, align 4, !dbg !7674
  br label %sw.epilog, !dbg !7676

if.end93:                                         ; preds = %if.end88
  %247 = load %struct.comedi_insn*, %struct.comedi_insn** %insns, align 8, !dbg !7677
  %248 = bitcast %struct.comedi_insn* %247 to i8*, !dbg !7677
  %insns94 = getelementptr inbounds %struct.comedi_insnlist, %struct.comedi_insnlist* %insnlist, i32 0, i32 1, !dbg !7678
  %249 = load %struct.comedi_insn*, %struct.comedi_insn** %insns94, align 8, !dbg !7678
  %250 = bitcast %struct.comedi_insn* %249 to i8*, !dbg !7679
  %n_insns95 = getelementptr inbounds %struct.comedi_insnlist, %struct.comedi_insnlist* %insnlist, i32 0, i32 0, !dbg !7680
  %251 = load i32, i32* %n_insns95, align 8, !dbg !7680
  %conv96 = zext i32 %251 to i64, !dbg !7681
  %mul = mul i64 40, %conv96, !dbg !7682
  store i8* %248, i8** %to.addr.i430, align 8
  store i8* %250, i8** %from.addr.i431, align 8
  store i64 %mul, i64* %n.addr.i432, align 8
  %252 = load i8*, i8** %to.addr.i430, align 8, !dbg !7683
  %253 = load i64, i64* %n.addr.i432, align 8, !dbg !7683
  store i8* %252, i8** %addr.addr.i.i424, align 8
  store i64 %253, i64* %bytes.addr.i.i425, align 8
  store i8 0, i8* %is_source.addr.i.i426, align 1
  store i32 -1, i32* %sz.i.i427, align 4, !dbg !7099
  %254 = load i32, i32* %sz.i.i427, align 4, !dbg !7684
  %cmp.i.i433 = icmp sge i32 %254, 0, !dbg !7684
  br i1 %cmp.i.i433, label %land.rhs.i.i436, label %land.end.i.i440, !dbg !7684

land.rhs.i.i436:                                  ; preds = %if.end93
  %255 = load i32, i32* %sz.i.i427, align 4, !dbg !7684
  %conv.i.i434 = sext i32 %255 to i64, !dbg !7684
  %256 = load i64, i64* %bytes.addr.i.i425, align 8, !dbg !7684
  %cmp1.i.i435 = icmp ult i64 %conv.i.i434, %256, !dbg !7684
  br label %land.end.i.i440

land.end.i.i440:                                  ; preds = %land.rhs.i.i436, %if.end93
  %257 = phi i1 [ false, %if.end93 ], [ %cmp1.i.i435, %land.rhs.i.i436 ], !dbg !7685
  %lnot.i.i437 = xor i1 %257, true, !dbg !7684
  %lnot.ext.i.i438 = zext i1 %257 to i32, !dbg !7684
  %conv4.i.i439 = sext i32 %lnot.ext.i.i438 to i64, !dbg !7684
  br i1 %257, label %if.then.i.i441, label %if.end10.i.i456, !dbg !7686

if.then.i.i441:                                   ; preds = %land.end.i.i440
  %258 = load i64, i64* %bytes.addr.i.i425, align 8, !dbg !7687
  %259 = call i1 @llvm.is.constant.i64(i64 %258) #9, !dbg !7688
  br i1 %259, label %if.else.i.i444, label %if.then5.i.i442, !dbg !7689

if.then5.i.i442:                                  ; preds = %if.then.i.i441
  %260 = load i32, i32* %sz.i.i427, align 4, !dbg !7690
  %261 = load i64, i64* %bytes.addr.i.i425, align 8, !dbg !7691
  call void @copy_overflow(i32 %260, i64 %261) #12, !dbg !7692
  br label %if.end9.i.i448, !dbg !7692

if.else.i.i444:                                   ; preds = %if.then.i.i441
  %262 = load i8, i8* %is_source.addr.i.i426, align 1, !dbg !7693
  %tobool6.i.i443 = trunc i8 %262 to i1, !dbg !7693
  br i1 %tobool6.i.i443, label %if.then7.i.i445, label %if.else8.i.i446, !dbg !7694

if.then7.i.i445:                                  ; preds = %if.else.i.i444
  call void @__bad_copy_from() #12, !dbg !7695
  br label %if.end.i.i447, !dbg !7695

if.else8.i.i446:                                  ; preds = %if.else.i.i444
  call void @__bad_copy_to() #12, !dbg !7696
  br label %if.end.i.i447

if.end.i.i447:                                    ; preds = %if.else8.i.i446, %if.then7.i.i445
  br label %if.end9.i.i448

if.end9.i.i448:                                   ; preds = %if.end.i.i447, %if.then5.i.i442
  store i1 false, i1* %retval.i.i423, align 1, !dbg !7697
  br label %check_copy_size.exit.i470, !dbg !7697

if.end10.i.i456:                                  ; preds = %land.end.i.i440
  %263 = load i64, i64* %bytes.addr.i.i425, align 8, !dbg !7100
  %cmp11.i.i449 = icmp ugt i64 %263, 2147483647, !dbg !7100
  %lnot13.i.i450 = xor i1 %cmp11.i.i449, true, !dbg !7100
  %lnot.ext16.i.i451 = zext i1 %cmp11.i.i449 to i32, !dbg !7100
  store i32 %lnot.ext16.i.i451, i32* %__ret_warn_on.i.i428, align 4, !dbg !7100
  %264 = load i32, i32* %__ret_warn_on.i.i428, align 4, !dbg !7698
  %tobool17.i.i452 = icmp ne i32 %264, 0, !dbg !7698
  %lnot18.i.i453 = xor i1 %tobool17.i.i452, true, !dbg !7698
  %lnot.ext21.i.i454 = zext i1 %tobool17.i.i452 to i32, !dbg !7698
  %conv22.i.i455 = sext i32 %lnot.ext21.i.i454 to i64, !dbg !7698
  br i1 %tobool17.i.i452, label %if.then24.i.i457, label %if.end31.i.i463, !dbg !7100

if.then24.i.i457:                                 ; preds = %if.end10.i.i456
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !7699, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !7700, !srcloc !6323
  br label %if.end31.i.i463, !dbg !7701

if.end31.i.i463:                                  ; preds = %if.then24.i.i457, %if.end10.i.i456
  %265 = load i32, i32* %__ret_warn_on.i.i428, align 4, !dbg !7100
  %tobool32.i.i458 = icmp ne i32 %265, 0, !dbg !7100
  %lnot33.i.i459 = xor i1 %tobool32.i.i458, true, !dbg !7100
  %lnot.ext36.i.i460 = zext i1 %tobool32.i.i458 to i32, !dbg !7100
  %conv37.i.i461 = sext i32 %lnot.ext36.i.i460 to i64, !dbg !7100
  store i64 %conv37.i.i461, i64* %tmp.i.i429, align 8, !dbg !7698
  %266 = load i64, i64* %tmp.i.i429, align 8, !dbg !7100
  %tobool38.i.i462 = icmp ne i64 %266, 0, !dbg !7702
  br i1 %tobool38.i.i462, label %if.then39.i.i464, label %if.end40.i.i466, !dbg !7703

if.then39.i.i464:                                 ; preds = %if.end31.i.i463
  store i1 false, i1* %retval.i.i423, align 1, !dbg !7704
  br label %check_copy_size.exit.i470, !dbg !7704

if.end40.i.i466:                                  ; preds = %if.end31.i.i463
  %267 = load i8*, i8** %addr.addr.i.i424, align 8, !dbg !7705
  %268 = load i64, i64* %bytes.addr.i.i425, align 8, !dbg !7706
  %269 = load i8, i8* %is_source.addr.i.i426, align 1, !dbg !7707
  %tobool41.i.i465 = trunc i8 %269 to i1, !dbg !7707
  call void @check_object_size(i8* %267, i64 %268, i1 zeroext %tobool41.i.i465) #12, !dbg !7708
  store i1 true, i1* %retval.i.i423, align 1, !dbg !7709
  br label %check_copy_size.exit.i470, !dbg !7709

check_copy_size.exit.i470:                        ; preds = %if.end40.i.i466, %if.then39.i.i464, %if.end9.i.i448
  %270 = load i1, i1* %retval.i.i423, align 1, !dbg !7710
  %lnot.i467 = xor i1 %270, true, !dbg !7683
  %lnot.ext.i468 = zext i1 %270 to i32, !dbg !7683
  %conv.i469 = sext i32 %lnot.ext.i468 to i64, !dbg !7683
  br i1 %270, label %if.then.i472, label %copy_from_user.exit473, !dbg !7711

if.then.i472:                                     ; preds = %check_copy_size.exit.i470
  %271 = load i8*, i8** %to.addr.i430, align 8, !dbg !7712
  %272 = load i8*, i8** %from.addr.i431, align 8, !dbg !7713
  %273 = load i64, i64* %n.addr.i432, align 8, !dbg !7714
  %call2.i471 = call i64 @_copy_from_user(i8* %271, i8* %272, i64 %273) #12, !dbg !7715
  store i64 %call2.i471, i64* %n.addr.i432, align 8, !dbg !7716
  br label %copy_from_user.exit473, !dbg !7717

copy_from_user.exit473:                           ; preds = %check_copy_size.exit.i470, %if.then.i472
  %274 = load i64, i64* %n.addr.i432, align 8, !dbg !7718
  %tobool98 = icmp ne i64 %274, 0, !dbg !7719
  br i1 %tobool98, label %if.then99, label %if.end100, !dbg !7720

if.then99:                                        ; preds = %copy_from_user.exit473
  store i32 -14, i32* %rc, align 4, !dbg !7721
  %275 = load %struct.comedi_insn*, %struct.comedi_insn** %insns, align 8, !dbg !7723
  %276 = bitcast %struct.comedi_insn* %275 to i8*, !dbg !7723
  call void @kfree(i8* %276) #11, !dbg !7724
  br label %sw.epilog, !dbg !7725

if.end100:                                        ; preds = %copy_from_user.exit473
  %277 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7726
  %278 = load %struct.comedi_insn*, %struct.comedi_insn** %insns, align 8, !dbg !7727
  %n_insns101 = getelementptr inbounds %struct.comedi_insnlist, %struct.comedi_insnlist* %insnlist, i32 0, i32 0, !dbg !7728
  %279 = load i32, i32* %n_insns101, align 8, !dbg !7728
  %280 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7729
  %281 = bitcast %struct.file* %280 to i8*, !dbg !7729
  %call102 = call i32 @do_insnlist_ioctl(%struct.comedi_device* %277, %struct.comedi_insn* %278, i32 %279, i8* %281) #11, !dbg !7730
  store i32 %call102, i32* %rc, align 4, !dbg !7731
  %282 = load %struct.comedi_insn*, %struct.comedi_insn** %insns, align 8, !dbg !7732
  %283 = bitcast %struct.comedi_insn* %282 to i8*, !dbg !7732
  call void @kfree(i8* %283) #11, !dbg !7733
  br label %sw.epilog, !dbg !7734

sw.bb103:                                         ; preds = %if.end27
  call void @llvm.dbg.declare(metadata %struct.comedi_insn* %insn, metadata !7735, metadata !DIExpression()), !dbg !7736
  %284 = bitcast %struct.comedi_insn* %insn to i8*, !dbg !7737
  %285 = load i64, i64* %arg.addr, align 8, !dbg !7738
  %286 = inttoptr i64 %285 to i8*, !dbg !7739
  store i8* %284, i8** %to.addr.i481, align 8
  store i8* %286, i8** %from.addr.i482, align 8
  store i64 40, i64* %n.addr.i483, align 8
  %287 = load i8*, i8** %to.addr.i481, align 8, !dbg !7740
  %288 = load i64, i64* %n.addr.i483, align 8, !dbg !7740
  store i8* %287, i8** %addr.addr.i.i475, align 8
  store i64 %288, i64* %bytes.addr.i.i476, align 8
  store i8 0, i8* %is_source.addr.i.i477, align 1
  store i32 -1, i32* %sz.i.i478, align 4, !dbg !7087
  %289 = load i32, i32* %sz.i.i478, align 4, !dbg !7741
  %cmp.i.i484 = icmp sge i32 %289, 0, !dbg !7741
  br i1 %cmp.i.i484, label %land.rhs.i.i487, label %land.end.i.i491, !dbg !7741

land.rhs.i.i487:                                  ; preds = %sw.bb103
  %290 = load i32, i32* %sz.i.i478, align 4, !dbg !7741
  %conv.i.i485 = sext i32 %290 to i64, !dbg !7741
  %291 = load i64, i64* %bytes.addr.i.i476, align 8, !dbg !7741
  %cmp1.i.i486 = icmp ult i64 %conv.i.i485, %291, !dbg !7741
  br label %land.end.i.i491

land.end.i.i491:                                  ; preds = %land.rhs.i.i487, %sw.bb103
  %292 = phi i1 [ false, %sw.bb103 ], [ %cmp1.i.i486, %land.rhs.i.i487 ], !dbg !7742
  %lnot.i.i488 = xor i1 %292, true, !dbg !7741
  %lnot.ext.i.i489 = zext i1 %292 to i32, !dbg !7741
  %conv4.i.i490 = sext i32 %lnot.ext.i.i489 to i64, !dbg !7741
  br i1 %292, label %if.then.i.i492, label %if.end10.i.i507, !dbg !7743

if.then.i.i492:                                   ; preds = %land.end.i.i491
  %293 = load i64, i64* %bytes.addr.i.i476, align 8, !dbg !7744
  %294 = call i1 @llvm.is.constant.i64(i64 %293) #9, !dbg !7745
  br i1 %294, label %if.else.i.i495, label %if.then5.i.i493, !dbg !7746

if.then5.i.i493:                                  ; preds = %if.then.i.i492
  %295 = load i32, i32* %sz.i.i478, align 4, !dbg !7747
  %296 = load i64, i64* %bytes.addr.i.i476, align 8, !dbg !7748
  call void @copy_overflow(i32 %295, i64 %296) #12, !dbg !7749
  br label %if.end9.i.i499, !dbg !7749

if.else.i.i495:                                   ; preds = %if.then.i.i492
  %297 = load i8, i8* %is_source.addr.i.i477, align 1, !dbg !7750
  %tobool6.i.i494 = trunc i8 %297 to i1, !dbg !7750
  br i1 %tobool6.i.i494, label %if.then7.i.i496, label %if.else8.i.i497, !dbg !7751

if.then7.i.i496:                                  ; preds = %if.else.i.i495
  call void @__bad_copy_from() #12, !dbg !7752
  br label %if.end.i.i498, !dbg !7752

if.else8.i.i497:                                  ; preds = %if.else.i.i495
  call void @__bad_copy_to() #12, !dbg !7753
  br label %if.end.i.i498

if.end.i.i498:                                    ; preds = %if.else8.i.i497, %if.then7.i.i496
  br label %if.end9.i.i499

if.end9.i.i499:                                   ; preds = %if.end.i.i498, %if.then5.i.i493
  store i1 false, i1* %retval.i.i474, align 1, !dbg !7754
  br label %check_copy_size.exit.i521, !dbg !7754

if.end10.i.i507:                                  ; preds = %land.end.i.i491
  %298 = load i64, i64* %bytes.addr.i.i476, align 8, !dbg !7088
  %cmp11.i.i500 = icmp ugt i64 %298, 2147483647, !dbg !7088
  %lnot13.i.i501 = xor i1 %cmp11.i.i500, true, !dbg !7088
  %lnot.ext16.i.i502 = zext i1 %cmp11.i.i500 to i32, !dbg !7088
  store i32 %lnot.ext16.i.i502, i32* %__ret_warn_on.i.i479, align 4, !dbg !7088
  %299 = load i32, i32* %__ret_warn_on.i.i479, align 4, !dbg !7755
  %tobool17.i.i503 = icmp ne i32 %299, 0, !dbg !7755
  %lnot18.i.i504 = xor i1 %tobool17.i.i503, true, !dbg !7755
  %lnot.ext21.i.i505 = zext i1 %tobool17.i.i503 to i32, !dbg !7755
  %conv22.i.i506 = sext i32 %lnot.ext21.i.i505 to i64, !dbg !7755
  br i1 %tobool17.i.i503, label %if.then24.i.i508, label %if.end31.i.i514, !dbg !7088

if.then24.i.i508:                                 ; preds = %if.end10.i.i507
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !7756, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !7757, !srcloc !6323
  br label %if.end31.i.i514, !dbg !7758

if.end31.i.i514:                                  ; preds = %if.then24.i.i508, %if.end10.i.i507
  %300 = load i32, i32* %__ret_warn_on.i.i479, align 4, !dbg !7088
  %tobool32.i.i509 = icmp ne i32 %300, 0, !dbg !7088
  %lnot33.i.i510 = xor i1 %tobool32.i.i509, true, !dbg !7088
  %lnot.ext36.i.i511 = zext i1 %tobool32.i.i509 to i32, !dbg !7088
  %conv37.i.i512 = sext i32 %lnot.ext36.i.i511 to i64, !dbg !7088
  store i64 %conv37.i.i512, i64* %tmp.i.i480, align 8, !dbg !7755
  %301 = load i64, i64* %tmp.i.i480, align 8, !dbg !7088
  %tobool38.i.i513 = icmp ne i64 %301, 0, !dbg !7759
  br i1 %tobool38.i.i513, label %if.then39.i.i515, label %if.end40.i.i517, !dbg !7760

if.then39.i.i515:                                 ; preds = %if.end31.i.i514
  store i1 false, i1* %retval.i.i474, align 1, !dbg !7761
  br label %check_copy_size.exit.i521, !dbg !7761

if.end40.i.i517:                                  ; preds = %if.end31.i.i514
  %302 = load i8*, i8** %addr.addr.i.i475, align 8, !dbg !7762
  %303 = load i64, i64* %bytes.addr.i.i476, align 8, !dbg !7763
  %304 = load i8, i8* %is_source.addr.i.i477, align 1, !dbg !7764
  %tobool41.i.i516 = trunc i8 %304 to i1, !dbg !7764
  call void @check_object_size(i8* %302, i64 %303, i1 zeroext %tobool41.i.i516) #12, !dbg !7765
  store i1 true, i1* %retval.i.i474, align 1, !dbg !7766
  br label %check_copy_size.exit.i521, !dbg !7766

check_copy_size.exit.i521:                        ; preds = %if.end40.i.i517, %if.then39.i.i515, %if.end9.i.i499
  %305 = load i1, i1* %retval.i.i474, align 1, !dbg !7767
  %lnot.i518 = xor i1 %305, true, !dbg !7740
  %lnot.ext.i519 = zext i1 %305 to i32, !dbg !7740
  %conv.i520 = sext i32 %lnot.ext.i519 to i64, !dbg !7740
  br i1 %305, label %if.then.i523, label %copy_from_user.exit524, !dbg !7768

if.then.i523:                                     ; preds = %check_copy_size.exit.i521
  %306 = load i8*, i8** %to.addr.i481, align 8, !dbg !7769
  %307 = load i8*, i8** %from.addr.i482, align 8, !dbg !7770
  %308 = load i64, i64* %n.addr.i483, align 8, !dbg !7771
  %call2.i522 = call i64 @_copy_from_user(i8* %306, i8* %307, i64 %308) #12, !dbg !7772
  store i64 %call2.i522, i64* %n.addr.i483, align 8, !dbg !7773
  br label %copy_from_user.exit524, !dbg !7774

copy_from_user.exit524:                           ; preds = %check_copy_size.exit.i521, %if.then.i523
  %309 = load i64, i64* %n.addr.i483, align 8, !dbg !7775
  %tobool105 = icmp ne i64 %309, 0, !dbg !7776
  br i1 %tobool105, label %if.then106, label %if.else107, !dbg !7777

if.then106:                                       ; preds = %copy_from_user.exit524
  store i32 -14, i32* %rc, align 4, !dbg !7778
  br label %if.end109, !dbg !7779

if.else107:                                       ; preds = %copy_from_user.exit524
  %310 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7780
  %311 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7781
  %312 = bitcast %struct.file* %311 to i8*, !dbg !7781
  %call108 = call i32 @do_insn_ioctl(%struct.comedi_device* %310, %struct.comedi_insn* %insn, i8* %312) #11, !dbg !7782
  store i32 %call108, i32* %rc, align 4, !dbg !7783
  br label %if.end109

if.end109:                                        ; preds = %if.else107, %if.then106
  br label %sw.epilog, !dbg !7784

sw.bb110:                                         ; preds = %if.end27
  %313 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7785
  %314 = load i64, i64* %arg.addr, align 8, !dbg !7786
  %315 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7787
  %316 = bitcast %struct.file* %315 to i8*, !dbg !7787
  %call111 = call i32 @do_poll_ioctl(%struct.comedi_device* %313, i64 %314, i8* %316) #11, !dbg !7788
  store i32 %call111, i32* %rc, align 4, !dbg !7789
  br label %sw.epilog, !dbg !7790

sw.bb112:                                         ; preds = %if.end27
  %317 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7791
  %318 = load i64, i64* %arg.addr, align 8, !dbg !7792
  %319 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7793
  %call113 = call i32 @do_setrsubd_ioctl(%struct.comedi_device* %317, i64 %318, %struct.file* %319) #11, !dbg !7794
  store i32 %call113, i32* %rc, align 4, !dbg !7795
  br label %sw.epilog, !dbg !7796

sw.bb114:                                         ; preds = %if.end27
  %320 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7797
  %321 = load i64, i64* %arg.addr, align 8, !dbg !7798
  %322 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7799
  %call115 = call i32 @do_setwsubd_ioctl(%struct.comedi_device* %320, i64 %321, %struct.file* %322) #11, !dbg !7800
  store i32 %call115, i32* %rc, align 4, !dbg !7801
  br label %sw.epilog, !dbg !7802

sw.default:                                       ; preds = %if.end27
  store i32 -25, i32* %rc, align 4, !dbg !7803
  br label %sw.epilog, !dbg !7804

sw.epilog:                                        ; preds = %sw.default, %sw.bb114, %sw.bb112, %sw.bb110, %if.end109, %if.end100, %if.then99, %if.then92, %if.then87, %if.end83, %if.then74, %if.end68, %if.then59, %sw.bb53, %sw.bb51, %sw.bb49, %sw.bb47, %if.end46, %if.end38, %sw.bb31, %sw.bb29, %sw.bb
  br label %done, !dbg !7805

done:                                             ; preds = %sw.epilog, %if.then26, %if.end24, %if.then6
  call void @llvm.dbg.label(metadata !7806), !dbg !7807
  %323 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7808
  %mutex116 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %323, i32 0, i32 12, !dbg !7809
  call void @mutex_unlock(%struct.mutex* %mutex116) #11, !dbg !7810
  %324 = load i32, i32* %rc, align 4, !dbg !7811
  %conv117 = sext i32 %324 to i64, !dbg !7811
  store i64 %conv117, i64* %retval, align 8, !dbg !7812
  br label %return, !dbg !7812

return:                                           ; preds = %done, %if.then19
  %325 = load i64, i64* %retval, align 8, !dbg !7813
  ret i64 %325, !dbg !7813
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_mmap(%struct.file* %file, %struct.vm_area_struct* %vma) #0 !dbg !7814 {
entry:
  %retval = alloca i32, align 4
  %file.addr = alloca %struct.file*, align 8
  %vma.addr = alloca %struct.vm_area_struct*, align 8
  %cfp = alloca %struct.comedi_file*, align 8
  %dev = alloca %struct.comedi_device*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %async = alloca %struct.comedi_async*, align 8
  %bm = alloca %struct.comedi_buf_map*, align 8
  %buf = alloca %struct.comedi_buf_page*, align 8
  %start = alloca i64, align 8
  %size = alloca i64, align 8
  %n_pages = alloca i32, align 4
  %i = alloca i32, align 4
  %retval2 = alloca i32, align 4
  %pfn = alloca i64, align 8
  %.compoundliteral = alloca %struct.pgprot, align 8
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !7815, metadata !DIExpression()), !dbg !7816
  store %struct.vm_area_struct* %vma, %struct.vm_area_struct** %vma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vm_area_struct** %vma.addr, metadata !7817, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.declare(metadata %struct.comedi_file** %cfp, metadata !7819, metadata !DIExpression()), !dbg !7820
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7821
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !7822
  %1 = load i8*, i8** %private_data, align 8, !dbg !7822
  %2 = bitcast i8* %1 to %struct.comedi_file*, !dbg !7821
  store %struct.comedi_file* %2, %struct.comedi_file** %cfp, align 8, !dbg !7820
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !7823, metadata !DIExpression()), !dbg !7824
  %3 = load %struct.comedi_file*, %struct.comedi_file** %cfp, align 8, !dbg !7825
  %dev1 = getelementptr inbounds %struct.comedi_file, %struct.comedi_file* %3, i32 0, i32 0, !dbg !7826
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev1, align 8, !dbg !7826
  store %struct.comedi_device* %4, %struct.comedi_device** %dev, align 8, !dbg !7824
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !7827, metadata !DIExpression()), !dbg !7828
  call void @llvm.dbg.declare(metadata %struct.comedi_async** %async, metadata !7829, metadata !DIExpression()), !dbg !7830
  call void @llvm.dbg.declare(metadata %struct.comedi_buf_map** %bm, metadata !7831, metadata !DIExpression()), !dbg !7832
  store %struct.comedi_buf_map* null, %struct.comedi_buf_map** %bm, align 8, !dbg !7832
  call void @llvm.dbg.declare(metadata %struct.comedi_buf_page** %buf, metadata !7833, metadata !DIExpression()), !dbg !7834
  call void @llvm.dbg.declare(metadata i64* %start, metadata !7835, metadata !DIExpression()), !dbg !7836
  %5 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !7837
  %vm_start = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %5, i32 0, i32 0, !dbg !7838
  %6 = load i64, i64* %vm_start, align 8, !dbg !7838
  store i64 %6, i64* %start, align 8, !dbg !7836
  call void @llvm.dbg.declare(metadata i64* %size, metadata !7839, metadata !DIExpression()), !dbg !7840
  call void @llvm.dbg.declare(metadata i32* %n_pages, metadata !7841, metadata !DIExpression()), !dbg !7842
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7843, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !7845, metadata !DIExpression()), !dbg !7846
  store i32 0, i32* %retval2, align 4, !dbg !7846
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7847
  %attach_lock = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %7, i32 0, i32 13, !dbg !7849
  %call = call i32 @down_read_trylock(%struct.rw_semaphore* %attach_lock) #11, !dbg !7850
  %tobool = icmp ne i32 %call, 0, !dbg !7850
  br i1 %tobool, label %if.end, label %if.then, !dbg !7851

if.then:                                          ; preds = %entry
  store i32 -11, i32* %retval, align 4, !dbg !7852
  br label %return, !dbg !7852

if.end:                                           ; preds = %entry
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7853
  %attached = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %8, i32 0, i32 10, !dbg !7855
  %bf.load = load i8, i8* %attached, align 8, !dbg !7855
  %bf.clear = and i8 %bf.load, 1, !dbg !7855
  %bf.cast = zext i8 %bf.clear to i32, !dbg !7855
  %tobool3 = icmp ne i32 %bf.cast, 0, !dbg !7853
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !7856

if.then4:                                         ; preds = %if.end
  store i32 -19, i32* %retval2, align 4, !dbg !7857
  br label %done, !dbg !7859

if.end5:                                          ; preds = %if.end
  %9 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !7860
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %9, i32 0, i32 8, !dbg !7862
  %10 = load i64, i64* %vm_flags, align 8, !dbg !7862
  %and = and i64 %10, 2, !dbg !7863
  %tobool6 = icmp ne i64 %and, 0, !dbg !7863
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !7864

if.then7:                                         ; preds = %if.end5
  %11 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7865
  %call8 = call %struct.comedi_subdevice* @comedi_file_write_subdevice(%struct.file* %11) #11, !dbg !7866
  store %struct.comedi_subdevice* %call8, %struct.comedi_subdevice** %s, align 8, !dbg !7867
  br label %if.end10, !dbg !7868

if.else:                                          ; preds = %if.end5
  %12 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7869
  %call9 = call %struct.comedi_subdevice* @comedi_file_read_subdevice(%struct.file* %12) #11, !dbg !7870
  store %struct.comedi_subdevice* %call9, %struct.comedi_subdevice** %s, align 8, !dbg !7871
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then7
  %13 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7872
  %tobool11 = icmp ne %struct.comedi_subdevice* %13, null, !dbg !7872
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !7874

if.then12:                                        ; preds = %if.end10
  store i32 -22, i32* %retval2, align 4, !dbg !7875
  br label %done, !dbg !7877

if.end13:                                         ; preds = %if.end10
  %14 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7878
  %async14 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %14, i32 0, i32 7, !dbg !7879
  %15 = load %struct.comedi_async*, %struct.comedi_async** %async14, align 8, !dbg !7879
  store %struct.comedi_async* %15, %struct.comedi_async** %async, align 8, !dbg !7880
  %16 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !7881
  %tobool15 = icmp ne %struct.comedi_async* %16, null, !dbg !7881
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !7883

if.then16:                                        ; preds = %if.end13
  store i32 -22, i32* %retval2, align 4, !dbg !7884
  br label %done, !dbg !7886

if.end17:                                         ; preds = %if.end13
  %17 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !7887
  %vm_pgoff = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %17, i32 0, i32 13, !dbg !7889
  %18 = load i64, i64* %vm_pgoff, align 8, !dbg !7889
  %cmp = icmp ne i64 %18, 0, !dbg !7890
  br i1 %cmp, label %if.then18, label %if.end19, !dbg !7891

if.then18:                                        ; preds = %if.end17
  store i32 -22, i32* %retval2, align 4, !dbg !7892
  br label %done, !dbg !7894

if.end19:                                         ; preds = %if.end17
  %19 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !7895
  %vm_end = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %19, i32 0, i32 1, !dbg !7896
  %20 = load i64, i64* %vm_end, align 8, !dbg !7896
  %21 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !7897
  %vm_start20 = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %21, i32 0, i32 0, !dbg !7898
  %22 = load i64, i64* %vm_start20, align 8, !dbg !7898
  %sub = sub i64 %20, %22, !dbg !7899
  store i64 %sub, i64* %size, align 8, !dbg !7900
  %23 = load i64, i64* %size, align 8, !dbg !7901
  %24 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !7903
  %prealloc_bufsz = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %24, i32 0, i32 1, !dbg !7904
  %25 = load i32, i32* %prealloc_bufsz, align 8, !dbg !7904
  %conv = zext i32 %25 to i64, !dbg !7903
  %cmp21 = icmp ugt i64 %23, %conv, !dbg !7905
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !7906

if.then23:                                        ; preds = %if.end19
  store i32 -14, i32* %retval2, align 4, !dbg !7907
  br label %done, !dbg !7909

if.end24:                                         ; preds = %if.end19
  %26 = load i64, i64* %size, align 8, !dbg !7910
  %and25 = and i64 %26, 4095, !dbg !7910
  %tobool26 = icmp ne i64 %and25, 0, !dbg !7910
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !7912

if.then27:                                        ; preds = %if.end24
  store i32 -14, i32* %retval2, align 4, !dbg !7913
  br label %done, !dbg !7915

if.end28:                                         ; preds = %if.end24
  %27 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !7916
  %call29 = call i64 @vma_pages(%struct.vm_area_struct* %27) #11, !dbg !7917
  %conv30 = trunc i64 %call29 to i32, !dbg !7917
  store i32 %conv30, i32* %n_pages, align 4, !dbg !7918
  %28 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !7919
  %call31 = call %struct.comedi_buf_map* @comedi_buf_map_from_subdev_get(%struct.comedi_subdevice* %28) #11, !dbg !7920
  store %struct.comedi_buf_map* %call31, %struct.comedi_buf_map** %bm, align 8, !dbg !7921
  %29 = load %struct.comedi_buf_map*, %struct.comedi_buf_map** %bm, align 8, !dbg !7922
  %tobool32 = icmp ne %struct.comedi_buf_map* %29, null, !dbg !7922
  br i1 %tobool32, label %lor.lhs.false, label %if.then36, !dbg !7924

lor.lhs.false:                                    ; preds = %if.end28
  %30 = load i32, i32* %n_pages, align 4, !dbg !7925
  %31 = load %struct.comedi_buf_map*, %struct.comedi_buf_map** %bm, align 8, !dbg !7926
  %n_pages33 = getelementptr inbounds %struct.comedi_buf_map, %struct.comedi_buf_map* %31, i32 0, i32 2, !dbg !7927
  %32 = load i32, i32* %n_pages33, align 8, !dbg !7927
  %cmp34 = icmp ugt i32 %30, %32, !dbg !7928
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !7929

if.then36:                                        ; preds = %lor.lhs.false, %if.end28
  store i32 -22, i32* %retval2, align 4, !dbg !7930
  br label %done, !dbg !7932

if.end37:                                         ; preds = %lor.lhs.false
  %33 = load %struct.comedi_buf_map*, %struct.comedi_buf_map** %bm, align 8, !dbg !7933
  %dma_dir = getelementptr inbounds %struct.comedi_buf_map, %struct.comedi_buf_map* %33, i32 0, i32 3, !dbg !7935
  %34 = load i32, i32* %dma_dir, align 4, !dbg !7935
  %cmp38 = icmp ne i32 %34, 3, !dbg !7936
  br i1 %cmp38, label %if.then40, label %if.else43, !dbg !7937

if.then40:                                        ; preds = %if.end37
  %35 = load %struct.comedi_buf_map*, %struct.comedi_buf_map** %bm, align 8, !dbg !7938
  %page_list = getelementptr inbounds %struct.comedi_buf_map, %struct.comedi_buf_map* %35, i32 0, i32 1, !dbg !7940
  %36 = load %struct.comedi_buf_page*, %struct.comedi_buf_page** %page_list, align 8, !dbg !7940
  %arrayidx = getelementptr %struct.comedi_buf_page, %struct.comedi_buf_page* %36, i64 0, !dbg !7938
  store %struct.comedi_buf_page* %arrayidx, %struct.comedi_buf_page** %buf, align 8, !dbg !7941
  %37 = load %struct.comedi_buf_map*, %struct.comedi_buf_map** %bm, align 8, !dbg !7942
  %dma_hw_dev = getelementptr inbounds %struct.comedi_buf_map, %struct.comedi_buf_map* %37, i32 0, i32 0, !dbg !7942
  %38 = load %struct.device*, %struct.device** %dma_hw_dev, align 8, !dbg !7942
  %39 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !7942
  %40 = load %struct.comedi_buf_page*, %struct.comedi_buf_page** %buf, align 8, !dbg !7942
  %virt_addr = getelementptr inbounds %struct.comedi_buf_page, %struct.comedi_buf_page* %40, i32 0, i32 0, !dbg !7942
  %41 = load i8*, i8** %virt_addr, align 8, !dbg !7942
  %42 = load %struct.comedi_buf_page*, %struct.comedi_buf_page** %buf, align 8, !dbg !7942
  %dma_addr = getelementptr inbounds %struct.comedi_buf_page, %struct.comedi_buf_page* %42, i32 0, i32 1, !dbg !7942
  %43 = load i64, i64* %dma_addr, align 8, !dbg !7942
  %44 = load i32, i32* %n_pages, align 4, !dbg !7942
  %conv41 = sext i32 %44 to i64, !dbg !7942
  %mul = mul i64 %conv41, 4096, !dbg !7942
  %call42 = call i32 @dma_mmap_attrs(%struct.device* %38, %struct.vm_area_struct* %39, i8* %41, i64 %43, i64 %mul, i64 0) #11, !dbg !7942
  store i32 %call42, i32* %retval2, align 4, !dbg !7943
  br label %if.end54, !dbg !7944

if.else43:                                        ; preds = %if.end37
  store i32 0, i32* %i, align 4, !dbg !7945
  br label %for.cond, !dbg !7948

for.cond:                                         ; preds = %for.inc, %if.else43
  %45 = load i32, i32* %i, align 4, !dbg !7949
  %46 = load i32, i32* %n_pages, align 4, !dbg !7951
  %cmp44 = icmp slt i32 %45, %46, !dbg !7952
  br i1 %cmp44, label %for.body, label %for.end, !dbg !7953

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %pfn, metadata !7954, metadata !DIExpression()), !dbg !7956
  %47 = load %struct.comedi_buf_map*, %struct.comedi_buf_map** %bm, align 8, !dbg !7957
  %page_list46 = getelementptr inbounds %struct.comedi_buf_map, %struct.comedi_buf_map* %47, i32 0, i32 1, !dbg !7958
  %48 = load %struct.comedi_buf_page*, %struct.comedi_buf_page** %page_list46, align 8, !dbg !7958
  %49 = load i32, i32* %i, align 4, !dbg !7959
  %idxprom = sext i32 %49 to i64, !dbg !7957
  %arrayidx47 = getelementptr %struct.comedi_buf_page, %struct.comedi_buf_page* %48, i64 %idxprom, !dbg !7957
  store %struct.comedi_buf_page* %arrayidx47, %struct.comedi_buf_page** %buf, align 8, !dbg !7960
  %50 = load i64, i64* @vmemmap_base, align 8, !dbg !7961
  %51 = inttoptr i64 %50 to %struct.page*, !dbg !7961
  %52 = load %struct.comedi_buf_page*, %struct.comedi_buf_page** %buf, align 8, !dbg !7961
  %virt_addr48 = getelementptr inbounds %struct.comedi_buf_page, %struct.comedi_buf_page* %52, i32 0, i32 0, !dbg !7961
  %53 = load i8*, i8** %virt_addr48, align 8, !dbg !7961
  %54 = ptrtoint i8* %53 to i64, !dbg !7961
  %call49 = call i64 @__phys_addr_nodebug(i64 %54) #11, !dbg !7961
  %shr = lshr i64 %call49, 12, !dbg !7961
  %add.ptr = getelementptr %struct.page, %struct.page* %51, i64 %shr, !dbg !7961
  %55 = load i64, i64* @vmemmap_base, align 8, !dbg !7961
  %56 = inttoptr i64 %55 to %struct.page*, !dbg !7961
  %sub.ptr.lhs.cast = ptrtoint %struct.page* %add.ptr to i64, !dbg !7961
  %sub.ptr.rhs.cast = ptrtoint %struct.page* %56 to i64, !dbg !7961
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7961
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 64, !dbg !7961
  store i64 %sub.ptr.div, i64* %pfn, align 8, !dbg !7962
  %57 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !7963
  %58 = load i64, i64* %start, align 8, !dbg !7964
  %59 = load i64, i64* %pfn, align 8, !dbg !7965
  %pgprot = getelementptr inbounds %struct.pgprot, %struct.pgprot* %.compoundliteral, i32 0, i32 0, !dbg !7966
  store i64 -9223372036854775769, i64* %pgprot, align 8, !dbg !7966
  %coerce.dive = getelementptr inbounds %struct.pgprot, %struct.pgprot* %.compoundliteral, i32 0, i32 0, !dbg !7967
  %60 = load i64, i64* %coerce.dive, align 8, !dbg !7967
  %call50 = call i32 @remap_pfn_range(%struct.vm_area_struct* %57, i64 %58, i64 %59, i64 4096, i64 %60) #11, !dbg !7967
  store i32 %call50, i32* %retval2, align 4, !dbg !7968
  %61 = load i32, i32* %retval2, align 4, !dbg !7969
  %tobool51 = icmp ne i32 %61, 0, !dbg !7969
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !7971

if.then52:                                        ; preds = %for.body
  br label %for.end, !dbg !7972

if.end53:                                         ; preds = %for.body
  %62 = load i64, i64* %start, align 8, !dbg !7973
  %add = add i64 %62, 4096, !dbg !7973
  store i64 %add, i64* %start, align 8, !dbg !7973
  br label %for.inc, !dbg !7974

for.inc:                                          ; preds = %if.end53
  %63 = load i32, i32* %i, align 4, !dbg !7975
  %inc = add i32 %63, 1, !dbg !7975
  store i32 %inc, i32* %i, align 4, !dbg !7975
  br label %for.cond, !dbg !7976, !llvm.loop !7977

for.end:                                          ; preds = %if.then52, %for.cond
  br label %if.end54

if.end54:                                         ; preds = %for.end, %if.then40
  %64 = load i32, i32* %retval2, align 4, !dbg !7979
  %cmp55 = icmp eq i32 %64, 0, !dbg !7981
  br i1 %cmp55, label %if.then57, label %if.end59, !dbg !7982

if.then57:                                        ; preds = %if.end54
  %65 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !7983
  %vm_ops = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %65, i32 0, i32 12, !dbg !7985
  store %struct.vm_operations_struct* @comedi_vm_ops, %struct.vm_operations_struct** %vm_ops, align 8, !dbg !7986
  %66 = load %struct.comedi_buf_map*, %struct.comedi_buf_map** %bm, align 8, !dbg !7987
  %67 = bitcast %struct.comedi_buf_map* %66 to i8*, !dbg !7987
  %68 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !7988
  %vm_private_data = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %68, i32 0, i32 15, !dbg !7989
  store i8* %67, i8** %vm_private_data, align 8, !dbg !7990
  %69 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !7991
  %vm_ops58 = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %69, i32 0, i32 12, !dbg !7992
  %70 = load %struct.vm_operations_struct*, %struct.vm_operations_struct** %vm_ops58, align 8, !dbg !7992
  %open = getelementptr inbounds %struct.vm_operations_struct, %struct.vm_operations_struct* %70, i32 0, i32 0, !dbg !7993
  %71 = load void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)** %open, align 8, !dbg !7993
  %72 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !7994
  call void %71(%struct.vm_area_struct* %72) #11, !dbg !7991
  br label %if.end59, !dbg !7995

if.end59:                                         ; preds = %if.then57, %if.end54
  br label %done, !dbg !7996

done:                                             ; preds = %if.end59, %if.then36, %if.then27, %if.then23, %if.then18, %if.then16, %if.then12, %if.then4
  call void @llvm.dbg.label(metadata !7997), !dbg !7998
  %73 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !7999
  %attach_lock60 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %73, i32 0, i32 13, !dbg !8000
  call void @up_read(%struct.rw_semaphore* %attach_lock60) #11, !dbg !8001
  %74 = load %struct.comedi_buf_map*, %struct.comedi_buf_map** %bm, align 8, !dbg !8002
  %call61 = call i32 @comedi_buf_map_put(%struct.comedi_buf_map* %74) #11, !dbg !8003
  %75 = load i32, i32* %retval2, align 4, !dbg !8004
  store i32 %75, i32* %retval, align 4, !dbg !8005
  br label %return, !dbg !8005

return:                                           ; preds = %done, %if.then
  %76 = load i32, i32* %retval, align 4, !dbg !8006
  ret i32 %76, !dbg !8006
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_open(%struct.inode* %inode, %struct.file* %file) #0 !dbg !8007 {
entry:
  %retval = alloca i32, align 4
  %inode.addr = alloca %struct.inode*, align 8
  %file.addr = alloca %struct.file*, align 8
  %minor = alloca i32, align 4
  %cfp = alloca %struct.comedi_file*, align 8
  %dev = alloca %struct.comedi_device*, align 8
  %rc = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.inode* %inode, %struct.inode** %inode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.inode** %inode.addr, metadata !8008, metadata !DIExpression()), !dbg !8009
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !8010, metadata !DIExpression()), !dbg !8011
  call void @llvm.dbg.declare(metadata i32* %minor, metadata !8012, metadata !DIExpression()), !dbg !8013
  %0 = load %struct.inode*, %struct.inode** %inode.addr, align 8, !dbg !8014
  %call = call i32 @iminor(%struct.inode* %0) #11, !dbg !8015
  store i32 %call, i32* %minor, align 4, !dbg !8013
  call void @llvm.dbg.declare(metadata %struct.comedi_file** %cfp, metadata !8016, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !8018, metadata !DIExpression()), !dbg !8019
  %1 = load i32, i32* %minor, align 4, !dbg !8020
  %call1 = call %struct.comedi_device* @comedi_dev_get_from_minor(i32 %1) #11, !dbg !8021
  store %struct.comedi_device* %call1, %struct.comedi_device** %dev, align 8, !dbg !8019
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !8022, metadata !DIExpression()), !dbg !8023
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8024
  %tobool = icmp ne %struct.comedi_device* %2, null, !dbg !8024
  br i1 %tobool, label %if.end, label %if.then, !dbg !8026

if.then:                                          ; preds = %entry
  store i32 0, i32* %tmp, align 4, !dbg !8027
  %3 = load i32, i32* %tmp, align 4, !dbg !8031
  store i32 -19, i32* %retval, align 4, !dbg !8032
  br label %return, !dbg !8032

if.end:                                           ; preds = %entry
  %call2 = call i8* @kzalloc(i64 32, i32 3264) #11, !dbg !8033
  %4 = bitcast i8* %call2 to %struct.comedi_file*, !dbg !8033
  store %struct.comedi_file* %4, %struct.comedi_file** %cfp, align 8, !dbg !8034
  %5 = load %struct.comedi_file*, %struct.comedi_file** %cfp, align 8, !dbg !8035
  %tobool3 = icmp ne %struct.comedi_file* %5, null, !dbg !8035
  br i1 %tobool3, label %if.end6, label %if.then4, !dbg !8037

if.then4:                                         ; preds = %if.end
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8038
  %call5 = call i32 @comedi_dev_put(%struct.comedi_device* %6) #11, !dbg !8040
  store i32 -12, i32* %retval, align 4, !dbg !8041
  br label %return, !dbg !8041

if.end6:                                          ; preds = %if.end
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8042
  %8 = load %struct.comedi_file*, %struct.comedi_file** %cfp, align 8, !dbg !8043
  %dev7 = getelementptr inbounds %struct.comedi_file, %struct.comedi_file* %8, i32 0, i32 0, !dbg !8044
  store %struct.comedi_device* %7, %struct.comedi_device** %dev7, align 8, !dbg !8045
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8046
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %9, i32 0, i32 12, !dbg !8047
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !8048
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8049
  %attached = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %10, i32 0, i32 10, !dbg !8051
  %bf.load = load i8, i8* %attached, align 8, !dbg !8051
  %bf.clear = and i8 %bf.load, 1, !dbg !8051
  %bf.cast = zext i8 %bf.clear to i32, !dbg !8051
  %tobool8 = icmp ne i32 %bf.cast, 0, !dbg !8049
  br i1 %tobool8, label %if.end11, label %land.lhs.true, !dbg !8052

land.lhs.true:                                    ; preds = %if.end6
  %call9 = call zeroext i1 @capable(i32 21) #11, !dbg !8053
  br i1 %call9, label %if.end11, label %if.then10, !dbg !8054

if.then10:                                        ; preds = %land.lhs.true
  store i32 -19, i32* %rc, align 4, !dbg !8055
  br label %out, !dbg !8057

if.end11:                                         ; preds = %land.lhs.true, %if.end6
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8058
  %attached12 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %11, i32 0, i32 10, !dbg !8060
  %bf.load13 = load i8, i8* %attached12, align 8, !dbg !8060
  %bf.clear14 = and i8 %bf.load13, 1, !dbg !8060
  %bf.cast15 = zext i8 %bf.clear14 to i32, !dbg !8060
  %tobool16 = icmp ne i32 %bf.cast15, 0, !dbg !8058
  br i1 %tobool16, label %land.lhs.true17, label %if.end34, !dbg !8061

land.lhs.true17:                                  ; preds = %if.end11
  %12 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8062
  %use_count = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %12, i32 0, i32 0, !dbg !8063
  %13 = load i32, i32* %use_count, align 8, !dbg !8063
  %cmp = icmp eq i32 %13, 0, !dbg !8064
  br i1 %cmp, label %if.then18, label %if.end34, !dbg !8065

if.then18:                                        ; preds = %land.lhs.true17
  %14 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8066
  %driver = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %14, i32 0, i32 1, !dbg !8069
  %15 = load %struct.comedi_driver*, %struct.comedi_driver** %driver, align 8, !dbg !8069
  %module = getelementptr inbounds %struct.comedi_driver, %struct.comedi_driver* %15, i32 0, i32 2, !dbg !8070
  %16 = load %struct.module*, %struct.module** %module, align 8, !dbg !8070
  %call19 = call zeroext i1 @try_module_get(%struct.module* %16) #11, !dbg !8071
  br i1 %call19, label %if.end21, label %if.then20, !dbg !8072

if.then20:                                        ; preds = %if.then18
  store i32 -6, i32* %rc, align 4, !dbg !8073
  br label %out, !dbg !8075

if.end21:                                         ; preds = %if.then18
  %17 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8076
  %open = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %17, i32 0, i32 24, !dbg !8078
  %open22 = bitcast {}** %open to i32 (%struct.comedi_device*)**, !dbg !8078
  %18 = load i32 (%struct.comedi_device*)*, i32 (%struct.comedi_device*)** %open22, align 8, !dbg !8078
  %tobool23 = icmp ne i32 (%struct.comedi_device*)* %18, null, !dbg !8076
  br i1 %tobool23, label %if.then24, label %if.end33, !dbg !8079

if.then24:                                        ; preds = %if.end21
  %19 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8080
  %open25 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %19, i32 0, i32 24, !dbg !8082
  %open26 = bitcast {}** %open25 to i32 (%struct.comedi_device*)**, !dbg !8082
  %20 = load i32 (%struct.comedi_device*)*, i32 (%struct.comedi_device*)** %open26, align 8, !dbg !8082
  %21 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8083
  %call27 = call i32 %20(%struct.comedi_device* %21) #11, !dbg !8080
  store i32 %call27, i32* %rc, align 4, !dbg !8084
  %22 = load i32, i32* %rc, align 4, !dbg !8085
  %cmp28 = icmp slt i32 %22, 0, !dbg !8087
  br i1 %cmp28, label %if.then29, label %if.end32, !dbg !8088

if.then29:                                        ; preds = %if.then24
  %23 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8089
  %driver30 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %23, i32 0, i32 1, !dbg !8091
  %24 = load %struct.comedi_driver*, %struct.comedi_driver** %driver30, align 8, !dbg !8091
  %module31 = getelementptr inbounds %struct.comedi_driver, %struct.comedi_driver* %24, i32 0, i32 2, !dbg !8092
  %25 = load %struct.module*, %struct.module** %module31, align 8, !dbg !8092
  call void @module_put(%struct.module* %25) #11, !dbg !8093
  br label %out, !dbg !8094

if.end32:                                         ; preds = %if.then24
  br label %if.end33, !dbg !8095

if.end33:                                         ; preds = %if.end32, %if.end21
  br label %if.end34, !dbg !8096

if.end34:                                         ; preds = %if.end33, %land.lhs.true17, %if.end11
  %26 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8097
  %use_count35 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %26, i32 0, i32 0, !dbg !8098
  %27 = load i32, i32* %use_count35, align 8, !dbg !8099
  %inc = add i32 %27, 1, !dbg !8099
  store i32 %inc, i32* %use_count35, align 8, !dbg !8099
  %28 = load %struct.comedi_file*, %struct.comedi_file** %cfp, align 8, !dbg !8100
  %29 = bitcast %struct.comedi_file* %28 to i8*, !dbg !8100
  %30 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !8101
  %private_data = getelementptr inbounds %struct.file, %struct.file* %30, i32 0, i32 15, !dbg !8102
  store i8* %29, i8** %private_data, align 8, !dbg !8103
  %31 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !8104
  call void @comedi_file_reset(%struct.file* %31) #11, !dbg !8105
  store i32 0, i32* %rc, align 4, !dbg !8106
  br label %out, !dbg !8107

out:                                              ; preds = %if.end34, %if.then29, %if.then20, %if.then10
  call void @llvm.dbg.label(metadata !8108), !dbg !8109
  %32 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8110
  %mutex36 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %32, i32 0, i32 12, !dbg !8111
  call void @mutex_unlock(%struct.mutex* %mutex36) #11, !dbg !8112
  %33 = load i32, i32* %rc, align 4, !dbg !8113
  %tobool37 = icmp ne i32 %33, 0, !dbg !8113
  br i1 %tobool37, label %if.then38, label %if.end40, !dbg !8115

if.then38:                                        ; preds = %out
  %34 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8116
  %call39 = call i32 @comedi_dev_put(%struct.comedi_device* %34) #11, !dbg !8118
  %35 = load %struct.comedi_file*, %struct.comedi_file** %cfp, align 8, !dbg !8119
  %36 = bitcast %struct.comedi_file* %35 to i8*, !dbg !8119
  call void @kfree(i8* %36) #11, !dbg !8120
  br label %if.end40, !dbg !8121

if.end40:                                         ; preds = %if.then38, %out
  %37 = load i32, i32* %rc, align 4, !dbg !8122
  store i32 %37, i32* %retval, align 4, !dbg !8123
  br label %return, !dbg !8123

return:                                           ; preds = %if.end40, %if.then4, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !8124
  ret i32 %38, !dbg !8124
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_close(%struct.inode* %inode, %struct.file* %file) #0 !dbg !8125 {
entry:
  %inode.addr = alloca %struct.inode*, align 8
  %file.addr = alloca %struct.file*, align 8
  %cfp = alloca %struct.comedi_file*, align 8
  %dev = alloca %struct.comedi_device*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %i = alloca i32, align 4
  store %struct.inode* %inode, %struct.inode** %inode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.inode** %inode.addr, metadata !8126, metadata !DIExpression()), !dbg !8127
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !8128, metadata !DIExpression()), !dbg !8129
  call void @llvm.dbg.declare(metadata %struct.comedi_file** %cfp, metadata !8130, metadata !DIExpression()), !dbg !8131
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !8132
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !8133
  %1 = load i8*, i8** %private_data, align 8, !dbg !8133
  %2 = bitcast i8* %1 to %struct.comedi_file*, !dbg !8132
  store %struct.comedi_file* %2, %struct.comedi_file** %cfp, align 8, !dbg !8131
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !8134, metadata !DIExpression()), !dbg !8135
  %3 = load %struct.comedi_file*, %struct.comedi_file** %cfp, align 8, !dbg !8136
  %dev1 = getelementptr inbounds %struct.comedi_file, %struct.comedi_file* %3, i32 0, i32 0, !dbg !8137
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev1, align 8, !dbg !8137
  store %struct.comedi_device* %4, %struct.comedi_device** %dev, align 8, !dbg !8135
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !8138, metadata !DIExpression()), !dbg !8139
  store %struct.comedi_subdevice* null, %struct.comedi_subdevice** %s, align 8, !dbg !8139
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8140, metadata !DIExpression()), !dbg !8141
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8142
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %5, i32 0, i32 12, !dbg !8143
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !8144
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8145
  %subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %6, i32 0, i32 16, !dbg !8147
  %7 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices, align 8, !dbg !8147
  %tobool = icmp ne %struct.comedi_subdevice* %7, null, !dbg !8145
  br i1 %tobool, label %if.then, label %if.end9, !dbg !8148

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !8149
  br label %for.cond, !dbg !8152

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load i32, i32* %i, align 4, !dbg !8153
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8155
  %n_subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %9, i32 0, i32 15, !dbg !8156
  %10 = load i32, i32* %n_subdevices, align 4, !dbg !8156
  %cmp = icmp slt i32 %8, %10, !dbg !8157
  br i1 %cmp, label %for.body, label %for.end, !dbg !8158

for.body:                                         ; preds = %for.cond
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8159
  %subdevices2 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %11, i32 0, i32 16, !dbg !8161
  %12 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices2, align 8, !dbg !8161
  %13 = load i32, i32* %i, align 4, !dbg !8162
  %idxprom = sext i32 %13 to i64, !dbg !8159
  %arrayidx = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %12, i64 %idxprom, !dbg !8159
  store %struct.comedi_subdevice* %arrayidx, %struct.comedi_subdevice** %s, align 8, !dbg !8163
  %14 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !8164
  %busy = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %14, i32 0, i32 9, !dbg !8166
  %15 = load i8*, i8** %busy, align 8, !dbg !8166
  %16 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !8167
  %17 = bitcast %struct.file* %16 to i8*, !dbg !8167
  %cmp3 = icmp eq i8* %15, %17, !dbg !8168
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !8169

if.then4:                                         ; preds = %for.body
  %18 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8170
  %19 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !8171
  %call = call i32 @do_cancel(%struct.comedi_device* %18, %struct.comedi_subdevice* %19) #11, !dbg !8172
  br label %if.end, !dbg !8172

if.end:                                           ; preds = %if.then4, %for.body
  %20 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !8173
  %lock = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %20, i32 0, i32 8, !dbg !8175
  %21 = load i8*, i8** %lock, align 8, !dbg !8175
  %22 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !8176
  %23 = bitcast %struct.file* %22 to i8*, !dbg !8176
  %cmp5 = icmp eq i8* %21, %23, !dbg !8177
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !8178

if.then6:                                         ; preds = %if.end
  %24 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !8179
  %lock7 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %24, i32 0, i32 8, !dbg !8180
  store i8* null, i8** %lock7, align 8, !dbg !8181
  br label %if.end8, !dbg !8179

if.end8:                                          ; preds = %if.then6, %if.end
  br label %for.inc, !dbg !8182

for.inc:                                          ; preds = %if.end8
  %25 = load i32, i32* %i, align 4, !dbg !8183
  %inc = add i32 %25, 1, !dbg !8183
  store i32 %inc, i32* %i, align 4, !dbg !8183
  br label %for.cond, !dbg !8184, !llvm.loop !8185

for.end:                                          ; preds = %for.cond
  br label %if.end9, !dbg !8187

if.end9:                                          ; preds = %for.end, %entry
  %26 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8188
  %attached = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %26, i32 0, i32 10, !dbg !8190
  %bf.load = load i8, i8* %attached, align 8, !dbg !8190
  %bf.clear = and i8 %bf.load, 1, !dbg !8190
  %bf.cast = zext i8 %bf.clear to i32, !dbg !8190
  %tobool10 = icmp ne i32 %bf.cast, 0, !dbg !8188
  br i1 %tobool10, label %land.lhs.true, label %if.end17, !dbg !8191

land.lhs.true:                                    ; preds = %if.end9
  %27 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8192
  %use_count = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %27, i32 0, i32 0, !dbg !8193
  %28 = load i32, i32* %use_count, align 8, !dbg !8193
  %cmp11 = icmp eq i32 %28, 1, !dbg !8194
  br i1 %cmp11, label %if.then12, label %if.end17, !dbg !8195

if.then12:                                        ; preds = %land.lhs.true
  %29 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8196
  %close = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %29, i32 0, i32 25, !dbg !8199
  %30 = load void (%struct.comedi_device*)*, void (%struct.comedi_device*)** %close, align 8, !dbg !8199
  %tobool13 = icmp ne void (%struct.comedi_device*)* %30, null, !dbg !8196
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !8200

if.then14:                                        ; preds = %if.then12
  %31 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8201
  %close15 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %31, i32 0, i32 25, !dbg !8202
  %32 = load void (%struct.comedi_device*)*, void (%struct.comedi_device*)** %close15, align 8, !dbg !8202
  %33 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8203
  call void %32(%struct.comedi_device* %33) #11, !dbg !8201
  br label %if.end16, !dbg !8201

if.end16:                                         ; preds = %if.then14, %if.then12
  %34 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8204
  %driver = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %34, i32 0, i32 1, !dbg !8205
  %35 = load %struct.comedi_driver*, %struct.comedi_driver** %driver, align 8, !dbg !8205
  %module = getelementptr inbounds %struct.comedi_driver, %struct.comedi_driver* %35, i32 0, i32 2, !dbg !8206
  %36 = load %struct.module*, %struct.module** %module, align 8, !dbg !8206
  call void @module_put(%struct.module* %36) #11, !dbg !8207
  br label %if.end17, !dbg !8208

if.end17:                                         ; preds = %if.end16, %land.lhs.true, %if.end9
  %37 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8209
  %use_count18 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %37, i32 0, i32 0, !dbg !8210
  %38 = load i32, i32* %use_count18, align 8, !dbg !8211
  %dec = add i32 %38, -1, !dbg !8211
  store i32 %dec, i32* %use_count18, align 8, !dbg !8211
  %39 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8212
  %mutex19 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %39, i32 0, i32 12, !dbg !8213
  call void @mutex_unlock(%struct.mutex* %mutex19) #11, !dbg !8214
  %40 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8215
  %call20 = call i32 @comedi_dev_put(%struct.comedi_device* %40) #11, !dbg !8216
  %41 = load %struct.comedi_file*, %struct.comedi_file** %cfp, align 8, !dbg !8217
  %42 = bitcast %struct.comedi_file* %41 to i8*, !dbg !8217
  call void @kfree(i8* %42) #11, !dbg !8218
  ret i32 0, !dbg !8219
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_fasync(i32 %fd, %struct.file* %file, i32 %on) #0 !dbg !8220 {
entry:
  %fd.addr = alloca i32, align 4
  %file.addr = alloca %struct.file*, align 8
  %on.addr = alloca i32, align 4
  %cfp = alloca %struct.comedi_file*, align 8
  %dev = alloca %struct.comedi_device*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !8221, metadata !DIExpression()), !dbg !8222
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !8223, metadata !DIExpression()), !dbg !8224
  store i32 %on, i32* %on.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %on.addr, metadata !8225, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.declare(metadata %struct.comedi_file** %cfp, metadata !8227, metadata !DIExpression()), !dbg !8228
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !8229
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !8230
  %1 = load i8*, i8** %private_data, align 8, !dbg !8230
  %2 = bitcast i8* %1 to %struct.comedi_file*, !dbg !8229
  store %struct.comedi_file* %2, %struct.comedi_file** %cfp, align 8, !dbg !8228
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !8231, metadata !DIExpression()), !dbg !8232
  %3 = load %struct.comedi_file*, %struct.comedi_file** %cfp, align 8, !dbg !8233
  %dev1 = getelementptr inbounds %struct.comedi_file, %struct.comedi_file* %3, i32 0, i32 0, !dbg !8234
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev1, align 8, !dbg !8234
  store %struct.comedi_device* %4, %struct.comedi_device** %dev, align 8, !dbg !8232
  %5 = load i32, i32* %fd.addr, align 4, !dbg !8235
  %6 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !8236
  %7 = load i32, i32* %on.addr, align 4, !dbg !8237
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8238
  %async_queue = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %8, i32 0, i32 23, !dbg !8239
  %call = call i32 @fasync_helper(i32 %5, %struct.file* %6, i32 %7, %struct.fasync_struct** %async_queue) #11, !dbg !8240
  ret i32 %call, !dbg !8241
}

; Function Attrs: noredzone
declare dso_local i32 @default_wake_function(%struct.wait_queue_entry*, i32, i32, i8*) #2

; Function Attrs: noredzone
declare dso_local void @down_read(%struct.rw_semaphore*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.comedi_subdevice* @comedi_file_read_subdevice(%struct.file* %file) #0 !dbg !8242 {
entry:
  %file.addr = alloca %struct.file*, align 8
  %cfp = alloca %struct.comedi_file*, align 8
  %tmp = alloca %struct.comedi_subdevice*, align 8
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !8245, metadata !DIExpression()), !dbg !8246
  call void @llvm.dbg.declare(metadata %struct.comedi_file** %cfp, metadata !8247, metadata !DIExpression()), !dbg !8248
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !8249
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !8250
  %1 = load i8*, i8** %private_data, align 8, !dbg !8250
  %2 = bitcast i8* %1 to %struct.comedi_file*, !dbg !8249
  store %struct.comedi_file* %2, %struct.comedi_file** %cfp, align 8, !dbg !8248
  %3 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !8251
  call void @comedi_file_check(%struct.file* %3) #11, !dbg !8252
  br label %do.body, !dbg !8253

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8255

do.end:                                           ; preds = %do.body
  %4 = load %struct.comedi_file*, %struct.comedi_file** %cfp, align 8, !dbg !8253
  %read_subdev = getelementptr inbounds %struct.comedi_file, %struct.comedi_file* %4, i32 0, i32 1, !dbg !8253
  %5 = load volatile %struct.comedi_subdevice*, %struct.comedi_subdevice** %read_subdev, align 8, !dbg !8253
  store %struct.comedi_subdevice* %5, %struct.comedi_subdevice** %tmp, align 8, !dbg !8255
  %6 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %tmp, align 8, !dbg !8253
  ret %struct.comedi_subdevice* %6, !dbg !8257
}

; Function Attrs: noredzone
declare dso_local void @add_wait_queue(%struct.wait_queue_head*, %struct.wait_queue_entry*) #2

; Function Attrs: noredzone
declare dso_local i32 @comedi_buf_read_n_available(%struct.comedi_subdevice*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @comedi_is_runflags_in_error(i32 %runflags) #0 !dbg !8258 {
entry:
  %runflags.addr = alloca i32, align 4
  store i32 %runflags, i32* %runflags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %runflags.addr, metadata !8259, metadata !DIExpression()), !dbg !8260
  %0 = load i32, i32* %runflags.addr, align 4, !dbg !8261
  %conv = zext i32 %0 to i64, !dbg !8261
  %and = and i64 %conv, 4, !dbg !8262
  %tobool = icmp ne i64 %and, 0, !dbg !8261
  ret i1 %tobool, !dbg !8263
}

; Function Attrs: noredzone
declare dso_local void @schedule() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @signal_pending(%struct.task_struct* %p) #0 !dbg !8264 {
entry:
  %p.addr = alloca %struct.task_struct*, align 8
  store %struct.task_struct* %p, %struct.task_struct** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %p.addr, metadata !8267, metadata !DIExpression()), !dbg !8268
  %0 = load %struct.task_struct*, %struct.task_struct** %p.addr, align 8, !dbg !8269
  %call = call i32 @test_tsk_thread_flag(%struct.task_struct* %0, i32 2) #11, !dbg !8269
  %tobool = icmp ne i32 %call, 0, !dbg !8269
  %lnot = xor i1 %tobool, true, !dbg !8269
  %lnot1 = xor i1 %lnot, true, !dbg !8269
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8269
  %conv = sext i32 %lnot.ext to i64, !dbg !8269
  %conv2 = trunc i64 %conv to i32, !dbg !8269
  ret i32 %conv2, !dbg !8270
}

; Function Attrs: noredzone
declare dso_local i32 @comedi_buf_read_alloc(%struct.comedi_subdevice*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @comedi_buf_read_free(%struct.comedi_subdevice*, i32) #2

; Function Attrs: noredzone
declare dso_local void @remove_wait_queue(%struct.wait_queue_head*, %struct.wait_queue_entry*) #2

; Function Attrs: noredzone
declare dso_local void @up_read(%struct.rw_semaphore*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @comedi_file_check(%struct.file* %file) #0 !dbg !8271 {
entry:
  %file.addr = alloca %struct.file*, align 8
  %cfp = alloca %struct.comedi_file*, align 8
  %dev = alloca %struct.comedi_device*, align 8
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !8272, metadata !DIExpression()), !dbg !8273
  call void @llvm.dbg.declare(metadata %struct.comedi_file** %cfp, metadata !8274, metadata !DIExpression()), !dbg !8275
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !8276
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !8277
  %1 = load i8*, i8** %private_data, align 8, !dbg !8277
  %2 = bitcast i8* %1 to %struct.comedi_file*, !dbg !8276
  store %struct.comedi_file* %2, %struct.comedi_file** %cfp, align 8, !dbg !8275
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !8278, metadata !DIExpression()), !dbg !8279
  %3 = load %struct.comedi_file*, %struct.comedi_file** %cfp, align 8, !dbg !8280
  %dev1 = getelementptr inbounds %struct.comedi_file, %struct.comedi_file* %3, i32 0, i32 0, !dbg !8281
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev1, align 8, !dbg !8281
  store %struct.comedi_device* %4, %struct.comedi_device** %dev, align 8, !dbg !8279
  %5 = load %struct.comedi_file*, %struct.comedi_file** %cfp, align 8, !dbg !8282
  %last_attached = getelementptr inbounds %struct.comedi_file, %struct.comedi_file* %5, i32 0, i32 4, !dbg !8284
  %bf.load = load i8, i8* %last_attached, align 4, !dbg !8284
  %bf.clear = and i8 %bf.load, 1, !dbg !8284
  %bf.cast = zext i8 %bf.clear to i32, !dbg !8284
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8285
  %attached = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %6, i32 0, i32 10, !dbg !8286
  %bf.load2 = load i8, i8* %attached, align 8, !dbg !8286
  %bf.clear3 = and i8 %bf.load2, 1, !dbg !8286
  %bf.cast4 = zext i8 %bf.clear3 to i32, !dbg !8286
  %cmp = icmp ne i32 %bf.cast, %bf.cast4, !dbg !8287
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8288

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.comedi_file*, %struct.comedi_file** %cfp, align 8, !dbg !8289
  %last_detach_count = getelementptr inbounds %struct.comedi_file, %struct.comedi_file* %7, i32 0, i32 3, !dbg !8290
  %8 = load i32, i32* %last_detach_count, align 8, !dbg !8290
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8291
  %detach_count = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %9, i32 0, i32 6, !dbg !8292
  %10 = load i32, i32* %detach_count, align 4, !dbg !8292
  %cmp5 = icmp ne i32 %8, %10, !dbg !8293
  br i1 %cmp5, label %if.then, label %if.end, !dbg !8294

if.then:                                          ; preds = %lor.lhs.false, %entry
  %11 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !8295
  call void @comedi_file_reset(%struct.file* %11) #11, !dbg !8296
  br label %if.end, !dbg !8296

if.end:                                           ; preds = %if.then, %lor.lhs.false
  ret void, !dbg !8297
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @comedi_file_reset(%struct.file* %file) #0 !dbg !8298 {
entry:
  %file.addr = alloca %struct.file*, align 8
  %cfp = alloca %struct.comedi_file*, align 8
  %dev = alloca %struct.comedi_device*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %read_s = alloca %struct.comedi_subdevice*, align 8
  %write_s = alloca %struct.comedi_subdevice*, align 8
  %minor = alloca i32, align 4
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !8299, metadata !DIExpression()), !dbg !8300
  call void @llvm.dbg.declare(metadata %struct.comedi_file** %cfp, metadata !8301, metadata !DIExpression()), !dbg !8302
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !8303
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !8304
  %1 = load i8*, i8** %private_data, align 8, !dbg !8304
  %2 = bitcast i8* %1 to %struct.comedi_file*, !dbg !8303
  store %struct.comedi_file* %2, %struct.comedi_file** %cfp, align 8, !dbg !8302
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !8305, metadata !DIExpression()), !dbg !8306
  %3 = load %struct.comedi_file*, %struct.comedi_file** %cfp, align 8, !dbg !8307
  %dev1 = getelementptr inbounds %struct.comedi_file, %struct.comedi_file* %3, i32 0, i32 0, !dbg !8308
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev1, align 8, !dbg !8308
  store %struct.comedi_device* %4, %struct.comedi_device** %dev, align 8, !dbg !8306
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !8309, metadata !DIExpression()), !dbg !8310
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %read_s, metadata !8311, metadata !DIExpression()), !dbg !8312
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %write_s, metadata !8313, metadata !DIExpression()), !dbg !8314
  call void @llvm.dbg.declare(metadata i32* %minor, metadata !8315, metadata !DIExpression()), !dbg !8316
  %5 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !8317
  %call = call %struct.inode* @file_inode(%struct.file* %5) #11, !dbg !8318
  %call2 = call i32 @iminor(%struct.inode* %call) #11, !dbg !8319
  store i32 %call2, i32* %minor, align 4, !dbg !8316
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8320
  %read_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %6, i32 0, i32 21, !dbg !8321
  %7 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %read_subdev, align 8, !dbg !8321
  store %struct.comedi_subdevice* %7, %struct.comedi_subdevice** %read_s, align 8, !dbg !8322
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8323
  %write_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %8, i32 0, i32 22, !dbg !8324
  %9 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %write_subdev, align 8, !dbg !8324
  store %struct.comedi_subdevice* %9, %struct.comedi_subdevice** %write_s, align 8, !dbg !8325
  %10 = load i32, i32* %minor, align 4, !dbg !8326
  %cmp = icmp uge i32 %10, 48, !dbg !8328
  br i1 %cmp, label %if.then, label %if.end13, !dbg !8329

if.then:                                          ; preds = %entry
  %11 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8330
  %12 = load i32, i32* %minor, align 4, !dbg !8332
  %call3 = call %struct.comedi_subdevice* @comedi_subdevice_from_minor(%struct.comedi_device* %11, i32 %12) #11, !dbg !8333
  store %struct.comedi_subdevice* %call3, %struct.comedi_subdevice** %s, align 8, !dbg !8334
  %13 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !8335
  %tobool = icmp ne %struct.comedi_subdevice* %13, null, !dbg !8335
  br i1 %tobool, label %lor.lhs.false, label %if.then5, !dbg !8337

lor.lhs.false:                                    ; preds = %if.then
  %14 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !8338
  %subdev_flags = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %14, i32 0, i32 4, !dbg !8339
  %15 = load i32, i32* %subdev_flags, align 4, !dbg !8339
  %and = and i32 %15, 32768, !dbg !8340
  %tobool4 = icmp ne i32 %and, 0, !dbg !8340
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !8341

if.then5:                                         ; preds = %lor.lhs.false, %if.then
  %16 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !8342
  store %struct.comedi_subdevice* %16, %struct.comedi_subdevice** %read_s, align 8, !dbg !8343
  br label %if.end, !dbg !8344

if.end:                                           ; preds = %if.then5, %lor.lhs.false
  %17 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !8345
  %tobool6 = icmp ne %struct.comedi_subdevice* %17, null, !dbg !8345
  br i1 %tobool6, label %lor.lhs.false7, label %if.then11, !dbg !8347

lor.lhs.false7:                                   ; preds = %if.end
  %18 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !8348
  %subdev_flags8 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %18, i32 0, i32 4, !dbg !8349
  %19 = load i32, i32* %subdev_flags8, align 4, !dbg !8349
  %and9 = and i32 %19, 16384, !dbg !8350
  %tobool10 = icmp ne i32 %and9, 0, !dbg !8350
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !8351

if.then11:                                        ; preds = %lor.lhs.false7, %if.end
  %20 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !8352
  store %struct.comedi_subdevice* %20, %struct.comedi_subdevice** %write_s, align 8, !dbg !8353
  br label %if.end12, !dbg !8354

if.end12:                                         ; preds = %if.then11, %lor.lhs.false7
  br label %if.end13, !dbg !8355

if.end13:                                         ; preds = %if.end12, %entry
  %21 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8356
  %attached = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %21, i32 0, i32 10, !dbg !8357
  %bf.load = load i8, i8* %attached, align 8, !dbg !8357
  %bf.clear = and i8 %bf.load, 1, !dbg !8357
  %bf.cast = zext i8 %bf.clear to i32, !dbg !8357
  %22 = load %struct.comedi_file*, %struct.comedi_file** %cfp, align 8, !dbg !8358
  %last_attached = getelementptr inbounds %struct.comedi_file, %struct.comedi_file* %22, i32 0, i32 4, !dbg !8359
  %23 = trunc i32 %bf.cast to i8, !dbg !8360
  %bf.load14 = load i8, i8* %last_attached, align 4, !dbg !8360
  %bf.value = and i8 %23, 1, !dbg !8360
  %bf.clear15 = and i8 %bf.load14, -2, !dbg !8360
  %bf.set = or i8 %bf.clear15, %bf.value, !dbg !8360
  store i8 %bf.set, i8* %last_attached, align 4, !dbg !8360
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !8360
  %24 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !8361
  %detach_count = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %24, i32 0, i32 6, !dbg !8362
  %25 = load i32, i32* %detach_count, align 4, !dbg !8362
  %26 = load %struct.comedi_file*, %struct.comedi_file** %cfp, align 8, !dbg !8363
  %last_detach_count = getelementptr inbounds %struct.comedi_file, %struct.comedi_file* %26, i32 0, i32 3, !dbg !8364
  store i32 %25, i32* %last_detach_count, align 8, !dbg !8365
  br label %do.body, !dbg !8366

do.body:                                          ; preds = %if.end13
  br label %do.body16, !dbg !8367

do.body16:                                        ; preds = %do.body
  br label %do.end, !dbg !8369

do.end:                                           ; preds = %do.body16
  br label %do.body17, !dbg !8367

do.body17:                                        ; preds = %do.end
  %27 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %read_s, align 8, !dbg !8371
  %28 = load %struct.comedi_file*, %struct.comedi_file** %cfp, align 8, !dbg !8371
  %read_subdev18 = getelementptr inbounds %struct.comedi_file, %struct.comedi_file* %28, i32 0, i32 1, !dbg !8371
  store volatile %struct.comedi_subdevice* %27, %struct.comedi_subdevice** %read_subdev18, align 8, !dbg !8371
  br label %do.end19, !dbg !8371

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !8367

do.end20:                                         ; preds = %do.end19
  br label %do.body21, !dbg !8373

do.body21:                                        ; preds = %do.end20
  br label %do.body22, !dbg !8374

do.body22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !8376

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !8374

do.body24:                                        ; preds = %do.end23
  %29 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %write_s, align 8, !dbg !8378
  %30 = load %struct.comedi_file*, %struct.comedi_file** %cfp, align 8, !dbg !8378
  %write_subdev25 = getelementptr inbounds %struct.comedi_file, %struct.comedi_file* %30, i32 0, i32 2, !dbg !8378
  store volatile %struct.comedi_subdevice* %29, %struct.comedi_subdevice** %write_subdev25, align 8, !dbg !8378
  br label %do.end26, !dbg !8378

do.end26:                                         ; preds = %do.body24
  br label %do.end27, !dbg !8374

do.end27:                                         ; preds = %do.end26
  ret void, !dbg !8380
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @iminor(%struct.inode* %inode) #0 !dbg !8381 {
entry:
  %inode.addr = alloca %struct.inode*, align 8
  store %struct.inode* %inode, %struct.inode** %inode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.inode** %inode.addr, metadata !8384, metadata !DIExpression()), !dbg !8385
  %0 = load %struct.inode*, %struct.inode** %inode.addr, align 8, !dbg !8386
  %i_rdev = getelementptr inbounds %struct.inode, %struct.inode* %0, i32 0, i32 10, !dbg !8386
  %1 = load i32, i32* %i_rdev, align 4, !dbg !8386
  %and = and i32 %1, 1048575, !dbg !8386
  ret i32 %and, !dbg !8387
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.inode* @file_inode(%struct.file* %f) #0 !dbg !8388 {
entry:
  %f.addr = alloca %struct.file*, align 8
  store %struct.file* %f, %struct.file** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %f.addr, metadata !8393, metadata !DIExpression()), !dbg !8394
  %0 = load %struct.file*, %struct.file** %f.addr, align 8, !dbg !8395
  %f_inode = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 2, !dbg !8396
  %1 = load %struct.inode*, %struct.inode** %f_inode, align 8, !dbg !8396
  ret %struct.inode* %1, !dbg !8397
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.comedi_subdevice* @comedi_subdevice_from_minor(%struct.comedi_device* %dev, i32 %minor) #0 !dbg !8398 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %minor.addr = alloca i32, align 4
  %s = alloca %struct.comedi_subdevice*, align 8
  %i = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !8403, metadata !DIExpression()), !dbg !8404
  store i32 %minor, i32* %minor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %minor.addr, metadata !8405, metadata !DIExpression()), !dbg !8406
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !8407, metadata !DIExpression()), !dbg !8408
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8409, metadata !DIExpression()), !dbg !8410
  %0 = load i32, i32* %minor.addr, align 4, !dbg !8411
  %sub = sub i32 %0, 48, !dbg !8412
  store i32 %sub, i32* %i, align 4, !dbg !8410
  call void @mutex_lock(%struct.mutex* @comedi_subdevice_minor_table_lock) #11, !dbg !8413
  %1 = load i32, i32* %i, align 4, !dbg !8414
  %idxprom = zext i32 %1 to i64, !dbg !8415
  %arrayidx = getelementptr [208 x %struct.comedi_subdevice*], [208 x %struct.comedi_subdevice*]* @comedi_subdevice_minor_table, i64 0, i64 %idxprom, !dbg !8415
  %2 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %arrayidx, align 8, !dbg !8415
  store %struct.comedi_subdevice* %2, %struct.comedi_subdevice** %s, align 8, !dbg !8416
  %3 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !8417
  %tobool = icmp ne %struct.comedi_subdevice* %3, null, !dbg !8417
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8419

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !8420
  %device = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %4, i32 0, i32 0, !dbg !8421
  %5 = load %struct.comedi_device*, %struct.comedi_device** %device, align 8, !dbg !8421
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8422
  %cmp = icmp ne %struct.comedi_device* %5, %6, !dbg !8423
  br i1 %cmp, label %if.then, label %if.end, !dbg !8424

if.then:                                          ; preds = %land.lhs.true
  store %struct.comedi_subdevice* null, %struct.comedi_subdevice** %s, align 8, !dbg !8425
  br label %if.end, !dbg !8426

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  call void @mutex_unlock(%struct.mutex* @comedi_subdevice_minor_table_lock) #11, !dbg !8427
  %7 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !8428
  ret %struct.comedi_subdevice* %7, !dbg !8429
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @test_tsk_thread_flag(%struct.task_struct* %tsk, i32 %flag) #0 !dbg !8430 {
entry:
  %tsk.addr = alloca %struct.task_struct*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.task_struct* %tsk, %struct.task_struct** %tsk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %tsk.addr, metadata !8433, metadata !DIExpression()), !dbg !8434
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !8435, metadata !DIExpression()), !dbg !8436
  %0 = load %struct.task_struct*, %struct.task_struct** %tsk.addr, align 8, !dbg !8437
  %call = call %struct.thread_info* @task_thread_info(%struct.task_struct* %0) #11, !dbg !8438
  %1 = load i32, i32* %flag.addr, align 4, !dbg !8439
  %call1 = call i32 @test_ti_thread_flag(%struct.thread_info* %call, i32 %1) #11, !dbg !8440
  ret i32 %call1, !dbg !8441
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @test_ti_thread_flag(%struct.thread_info* %ti, i32 %flag) #0 !dbg !8442 {
entry:
  %ti.addr = alloca %struct.thread_info*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.thread_info* %ti, %struct.thread_info** %ti.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.thread_info** %ti.addr, metadata !8445, metadata !DIExpression()), !dbg !8446
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !8447, metadata !DIExpression()), !dbg !8448
  %0 = load i32, i32* %flag.addr, align 4, !dbg !8449
  %conv = sext i32 %0 to i64, !dbg !8449
  %1 = load %struct.thread_info*, %struct.thread_info** %ti.addr, align 8, !dbg !8450
  %flags = getelementptr inbounds %struct.thread_info, %struct.thread_info* %1, i32 0, i32 0, !dbg !8451
  %call = call zeroext i1 @test_bit(i64 %conv, i64* %flags) #11, !dbg !8452
  %conv1 = zext i1 %call to i32, !dbg !8452
  ret i32 %conv1, !dbg !8453
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.thread_info* @task_thread_info(%struct.task_struct* %task) #0 !dbg !8454 {
entry:
  %task.addr = alloca %struct.task_struct*, align 8
  store %struct.task_struct* %task, %struct.task_struct** %task.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %task.addr, metadata !8457, metadata !DIExpression()), !dbg !8458
  %0 = load %struct.task_struct*, %struct.task_struct** %task.addr, align 8, !dbg !8459
  %thread_info = getelementptr inbounds %struct.task_struct, %struct.task_struct* %0, i32 0, i32 0, !dbg !8460
  ret %struct.thread_info* %thread_info, !dbg !8461
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #0 !dbg !8462 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !8469, metadata !DIExpression()), !dbg !8471
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !8473, metadata !DIExpression()), !dbg !8474
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !8475, metadata !DIExpression()), !dbg !8476
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !8477, metadata !DIExpression()), !dbg !8479
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !8481, metadata !DIExpression()), !dbg !8482
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !8483, metadata !DIExpression()), !dbg !8485
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8487, metadata !DIExpression()), !dbg !8488
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !8489, metadata !DIExpression()), !dbg !8490
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !8491, metadata !DIExpression()), !dbg !8492
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !8493
  %1 = load i64, i64* %nr.addr, align 8, !dbg !8494
  %div = sdiv i64 %1, 64, !dbg !8494
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !8495
  %2 = bitcast i64* %add.ptr to i8*, !dbg !8493
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !8496
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8497
  %conv.i = trunc i64 %4 to i32, !dbg !8497
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #12, !dbg !8498
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !8499
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !8499
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #12, !dbg !8499
  %7 = load i64, i64* %nr.addr, align 8, !dbg !8500
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !8500
  br i1 %8, label %cond.true, label %cond.false, !dbg !8500

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !8500
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !8500
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !8501
  %and.i = and i64 %11, 63, !dbg !8502
  %shl.i = shl i64 1, %and.i, !dbg !8503
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !8504
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !8505
  %shr.i = ashr i64 %13, 6, !dbg !8506
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !8504
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !8504
  %and1.i = and i64 %shl.i, %14, !dbg !8507
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !8508
  %conv = zext i1 %cmp.i to i32, !dbg !8500
  br label %cond.end, !dbg !8500

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !8500
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !8500
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !8509
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !8510
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #9, !dbg !8511, !srcloc !8512
  store i8 %19, i8* %oldbit.i, align 1, !dbg !8511
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !8513
  %tobool.i = trunc i8 %20 to i1, !dbg !8513
  %conv2 = zext i1 %tobool.i to i32, !dbg !8500
  br label %cond.end, !dbg !8500

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !8500
  %tobool = icmp ne i32 %cond, 0, !dbg !8500
  ret i1 %tobool, !dbg !8514
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !8515 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8516, metadata !DIExpression()), !dbg !8517
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8518, metadata !DIExpression()), !dbg !8519
  ret i1 true, !dbg !8520
}

; Function Attrs: noredzone
declare dso_local i64 @_copy_to_user(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #0 !dbg !8521 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8524, metadata !DIExpression()), !dbg !8525
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !8526, metadata !DIExpression()), !dbg !8527
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8528, metadata !DIExpression()), !dbg !8530
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !8530
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !8531
  %tobool = icmp ne i32 %0, 0, !dbg !8531
  %lnot = xor i1 %tobool, true, !dbg !8531
  %lnot1 = xor i1 %lnot, true, !dbg !8531
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8531
  %conv = sext i32 %lnot.ext to i64, !dbg !8531
  %tobool2 = icmp ne i64 %conv, 0, !dbg !8531
  br i1 %tobool2, label %if.then, label %if.end, !dbg !8530

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8531

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !8533

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !8535

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !8533
  %2 = load i64, i64* %count.addr, align 8, !dbg !8533
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0), i32 %1, i64 %2) #11, !dbg !8533
  br label %do.body4, !dbg !8533

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !8537

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !8539

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !8537

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 134, i32 2313, i64 12) #9, !dbg !8541, !srcloc !8543
  br label %do.end8, !dbg !8541

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 38) #9, !dbg !8544, !srcloc !8546
  br label %do.body9, !dbg !8537

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !8547

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !8537

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !8533

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !8549

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !8533

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !8533

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !8530
  %tobool15 = icmp ne i32 %3, 0, !dbg !8530
  %lnot16 = xor i1 %tobool15, true, !dbg !8530
  %lnot18 = xor i1 %lnot16, true, !dbg !8530
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !8530
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !8530
  store i64 %conv20, i64* %tmp, align 8, !dbg !8531
  %4 = load i64, i64* %tmp, align 8, !dbg !8530
  ret void, !dbg !8551
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #2

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #0 !dbg !8552 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8555, metadata !DIExpression()), !dbg !8556
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !8557, metadata !DIExpression()), !dbg !8558
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !8559, metadata !DIExpression()), !dbg !8560
  ret void, !dbg !8561
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.comedi_subdevice* @comedi_file_write_subdevice(%struct.file* %file) #0 !dbg !8562 {
entry:
  %file.addr = alloca %struct.file*, align 8
  %cfp = alloca %struct.comedi_file*, align 8
  %tmp = alloca %struct.comedi_subdevice*, align 8
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !8563, metadata !DIExpression()), !dbg !8564
  call void @llvm.dbg.declare(metadata %struct.comedi_file** %cfp, metadata !8565, metadata !DIExpression()), !dbg !8566
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !8567
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !8568
  %1 = load i8*, i8** %private_data, align 8, !dbg !8568
  %2 = bitcast i8* %1 to %struct.comedi_file*, !dbg !8567
  store %struct.comedi_file* %2, %struct.comedi_file** %cfp, align 8, !dbg !8566
  %3 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !8569
  call void @comedi_file_check(%struct.file* %3) #11, !dbg !8570
  br label %do.body, !dbg !8571

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8573

do.end:                                           ; preds = %do.body
  %4 = load %struct.comedi_file*, %struct.comedi_file** %cfp, align 8, !dbg !8571
  %write_subdev = getelementptr inbounds %struct.comedi_file, %struct.comedi_file* %4, i32 0, i32 2, !dbg !8571
  %5 = load volatile %struct.comedi_subdevice*, %struct.comedi_subdevice** %write_subdev, align 8, !dbg !8571
  store %struct.comedi_subdevice* %5, %struct.comedi_subdevice** %tmp, align 8, !dbg !8573
  %6 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %tmp, align 8, !dbg !8571
  ret %struct.comedi_subdevice* %6, !dbg !8575
}

; Function Attrs: noredzone
declare dso_local i32 @comedi_buf_write_alloc(%struct.comedi_subdevice*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @comedi_buf_write_n_allocated(%struct.comedi_subdevice*) #2

; Function Attrs: noredzone
declare dso_local i32 @comedi_buf_write_free(%struct.comedi_subdevice*, i32) #2

; Function Attrs: noredzone
declare dso_local i64 @_copy_from_user(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @poll_wait(%struct.file* %filp, %struct.wait_queue_head* %wait_address, %struct.poll_table_struct* %p) #0 !dbg !8576 {
entry:
  %filp.addr = alloca %struct.file*, align 8
  %wait_address.addr = alloca %struct.wait_queue_head*, align 8
  %p.addr = alloca %struct.poll_table_struct*, align 8
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !8579, metadata !DIExpression()), !dbg !8580
  store %struct.wait_queue_head* %wait_address, %struct.wait_queue_head** %wait_address.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wait_queue_head** %wait_address.addr, metadata !8581, metadata !DIExpression()), !dbg !8582
  store %struct.poll_table_struct* %p, %struct.poll_table_struct** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.poll_table_struct** %p.addr, metadata !8583, metadata !DIExpression()), !dbg !8584
  %0 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !8585
  %tobool = icmp ne %struct.poll_table_struct* %0, null, !dbg !8585
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8587

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !8588
  %_qproc = getelementptr inbounds %struct.poll_table_struct, %struct.poll_table_struct* %1, i32 0, i32 0, !dbg !8589
  %2 = load void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)** %_qproc, align 8, !dbg !8589
  %tobool1 = icmp ne void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)* %2, null, !dbg !8588
  br i1 %tobool1, label %land.lhs.true2, label %if.end, !dbg !8590

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load %struct.wait_queue_head*, %struct.wait_queue_head** %wait_address.addr, align 8, !dbg !8591
  %tobool3 = icmp ne %struct.wait_queue_head* %3, null, !dbg !8591
  br i1 %tobool3, label %if.then, label %if.end, !dbg !8592

if.then:                                          ; preds = %land.lhs.true2
  %4 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !8593
  %_qproc4 = getelementptr inbounds %struct.poll_table_struct, %struct.poll_table_struct* %4, i32 0, i32 0, !dbg !8594
  %5 = load void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)** %_qproc4, align 8, !dbg !8594
  %6 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !8595
  %7 = load %struct.wait_queue_head*, %struct.wait_queue_head** %wait_address.addr, align 8, !dbg !8596
  %8 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !8597
  call void %5(%struct.file* %6, %struct.wait_queue_head* %7, %struct.poll_table_struct* %8) #11, !dbg !8593
  br label %if.end, !dbg !8593

if.end:                                           ; preds = %if.then, %land.lhs.true2, %land.lhs.true, %entry
  ret void, !dbg !8598
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_bytes_per_sample(%struct.comedi_subdevice* %s) #0 !dbg !8599 {
entry:
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !8600, metadata !DIExpression()), !dbg !8601
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !8602
  %subdev_flags = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %0, i32 0, i32 4, !dbg !8603
  %1 = load i32, i32* %subdev_flags, align 4, !dbg !8603
  %and = and i32 %1, 268435456, !dbg !8604
  %tobool = icmp ne i32 %and, 0, !dbg !8602
  %2 = zext i1 %tobool to i64, !dbg !8602
  %cond = select i1 %tobool, i64 4, i64 2, !dbg !8602
  %conv = trunc i64 %cond to i32, !dbg !8602
  ret i32 %conv, !dbg !8605
}

; Function Attrs: noredzone
declare dso_local i32 @comedi_buf_write_n_available(%struct.comedi_subdevice*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_devconfig_ioctl(%struct.comedi_device* %dev, %struct.comedi_devconfig* %arg) #0 !dbg !8606 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !6011, metadata !DIExpression()), !dbg !8607
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !6027, metadata !DIExpression()), !dbg !8611
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !6029, metadata !DIExpression()), !dbg !8612
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !6031, metadata !DIExpression()), !dbg !8613
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !6033, metadata !DIExpression()), !dbg !8614
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6520, metadata !DIExpression()), !dbg !8615
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6522, metadata !DIExpression()), !dbg !8616
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6524, metadata !DIExpression()), !dbg !8617
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %arg.addr = alloca %struct.comedi_devconfig*, align 8
  %it = alloca %struct.comedi_devconfig, align 4
  %driver_module = alloca %struct.module*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !8618, metadata !DIExpression()), !dbg !8619
  store %struct.comedi_devconfig* %arg, %struct.comedi_devconfig** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_devconfig** %arg.addr, metadata !8620, metadata !DIExpression()), !dbg !8621
  call void @llvm.dbg.declare(metadata %struct.comedi_devconfig* %it, metadata !8622, metadata !DIExpression()), !dbg !8623
  br label %do.body, !dbg !8624

do.body:                                          ; preds = %entry
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8625
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 12, !dbg !8625
  br label %do.end, !dbg !8625

do.end:                                           ; preds = %do.body
  %call = call zeroext i1 @capable(i32 21) #11, !dbg !8627
  br i1 %call, label %if.end, label %if.then, !dbg !8629

if.then:                                          ; preds = %do.end
  store i32 -1, i32* %retval, align 4, !dbg !8630
  br label %return, !dbg !8630

if.end:                                           ; preds = %do.end
  %1 = load %struct.comedi_devconfig*, %struct.comedi_devconfig** %arg.addr, align 8, !dbg !8631
  %tobool = icmp ne %struct.comedi_devconfig* %1, null, !dbg !8631
  br i1 %tobool, label %if.end9, label %if.then1, !dbg !8633

if.then1:                                         ; preds = %if.end
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8634
  %call2 = call i32 @is_device_busy(%struct.comedi_device* %2) #11, !dbg !8637
  %tobool3 = icmp ne i32 %call2, 0, !dbg !8637
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !8638

if.then4:                                         ; preds = %if.then1
  store i32 -16, i32* %retval, align 4, !dbg !8639
  br label %return, !dbg !8639

if.end5:                                          ; preds = %if.then1
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8640
  %attached = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 10, !dbg !8642
  %bf.load = load i8, i8* %attached, align 8, !dbg !8642
  %bf.clear = and i8 %bf.load, 1, !dbg !8642
  %bf.cast = zext i8 %bf.clear to i32, !dbg !8642
  %tobool6 = icmp ne i32 %bf.cast, 0, !dbg !8640
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8643

if.then7:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.module** %driver_module, metadata !8644, metadata !DIExpression()), !dbg !8646
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8647
  %driver = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %4, i32 0, i32 1, !dbg !8648
  %5 = load %struct.comedi_driver*, %struct.comedi_driver** %driver, align 8, !dbg !8648
  %module = getelementptr inbounds %struct.comedi_driver, %struct.comedi_driver* %5, i32 0, i32 2, !dbg !8649
  %6 = load %struct.module*, %struct.module** %module, align 8, !dbg !8649
  store %struct.module* %6, %struct.module** %driver_module, align 8, !dbg !8646
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8650
  call void @comedi_device_detach(%struct.comedi_device* %7) #11, !dbg !8651
  %8 = load %struct.module*, %struct.module** %driver_module, align 8, !dbg !8652
  call void @module_put(%struct.module* %8) #11, !dbg !8653
  br label %if.end8, !dbg !8654

if.end8:                                          ; preds = %if.then7, %if.end5
  store i32 0, i32* %retval, align 4, !dbg !8655
  br label %return, !dbg !8655

if.end9:                                          ; preds = %if.end
  %9 = bitcast %struct.comedi_devconfig* %it to i8*, !dbg !8656
  %10 = load %struct.comedi_devconfig*, %struct.comedi_devconfig** %arg.addr, align 8, !dbg !8657
  %11 = bitcast %struct.comedi_devconfig* %10 to i8*, !dbg !8657
  store i8* %9, i8** %to.addr.i, align 8
  store i8* %11, i8** %from.addr.i, align 8
  store i64 148, i64* %n.addr.i, align 8
  %12 = load i8*, i8** %to.addr.i, align 8, !dbg !8658
  %13 = load i64, i64* %n.addr.i, align 8, !dbg !8658
  store i8* %12, i8** %addr.addr.i.i, align 8
  store i64 %13, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !8613
  %14 = load i32, i32* %sz.i.i, align 4, !dbg !8659
  %cmp.i.i = icmp sge i32 %14, 0, !dbg !8659
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !8659

land.rhs.i.i:                                     ; preds = %if.end9
  %15 = load i32, i32* %sz.i.i, align 4, !dbg !8659
  %conv.i.i = sext i32 %15 to i64, !dbg !8659
  %16 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8659
  %cmp1.i.i = icmp ult i64 %conv.i.i, %16, !dbg !8659
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end9
  %17 = phi i1 [ false, %if.end9 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !8660
  %lnot.i.i = xor i1 %17, true, !dbg !8659
  %lnot.ext.i.i = zext i1 %17 to i32, !dbg !8659
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8659
  br i1 %17, label %if.then.i.i, label %if.end10.i.i, !dbg !8661

if.then.i.i:                                      ; preds = %land.end.i.i
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8662
  %19 = call i1 @llvm.is.constant.i64(i64 %18) #9, !dbg !8663
  br i1 %19, label %if.else.i.i, label %if.then5.i.i, !dbg !8664

if.then5.i.i:                                     ; preds = %if.then.i.i
  %20 = load i32, i32* %sz.i.i, align 4, !dbg !8665
  %21 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8666
  call void @copy_overflow(i32 %20, i64 %21) #12, !dbg !8667
  br label %if.end9.i.i, !dbg !8667

if.else.i.i:                                      ; preds = %if.then.i.i
  %22 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8668
  %tobool6.i.i = trunc i8 %22 to i1, !dbg !8668
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !8669

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #12, !dbg !8670
  br label %if.end.i.i, !dbg !8670

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #12, !dbg !8671
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8672
  br label %check_copy_size.exit.i, !dbg !8672

if.end10.i.i:                                     ; preds = %land.end.i.i
  %23 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8614
  %cmp11.i.i = icmp ugt i64 %23, 2147483647, !dbg !8614
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !8614
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !8614
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !8614
  %24 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8673
  %tobool17.i.i = icmp ne i32 %24, 0, !dbg !8673
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !8673
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !8673
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !8673
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !8614

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !8674, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !8675, !srcloc !6323
  br label %if.end31.i.i, !dbg !8676

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %25 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8614
  %tobool32.i.i = icmp ne i32 %25, 0, !dbg !8614
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !8614
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !8614
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !8614
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !8673
  %26 = load i64, i64* %tmp.i.i, align 8, !dbg !8614
  %tobool38.i.i = icmp ne i64 %26, 0, !dbg !8677
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !8678

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8679
  br label %check_copy_size.exit.i, !dbg !8679

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %27 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !8680
  %28 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8681
  %29 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8682
  %tobool41.i.i = trunc i8 %29 to i1, !dbg !8682
  call void @check_object_size(i8* %27, i64 %28, i1 zeroext %tobool41.i.i) #12, !dbg !8683
  store i1 true, i1* %retval.i.i, align 1, !dbg !8684
  br label %check_copy_size.exit.i, !dbg !8684

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %30 = load i1, i1* %retval.i.i, align 1, !dbg !8685
  %lnot.i = xor i1 %30, true, !dbg !8658
  %lnot.ext.i = zext i1 %30 to i32, !dbg !8658
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !8658
  br i1 %30, label %if.then.i, label %copy_from_user.exit, !dbg !8686

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %31 = load i8*, i8** %to.addr.i, align 8, !dbg !8687
  %32 = load i8*, i8** %from.addr.i, align 8, !dbg !8688
  %33 = load i64, i64* %n.addr.i, align 8, !dbg !8689
  %call2.i = call i64 @_copy_from_user(i8* %31, i8* %32, i64 %33) #12, !dbg !8690
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !8691
  br label %copy_from_user.exit, !dbg !8692

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %34 = load i64, i64* %n.addr.i, align 8, !dbg !8693
  %tobool11 = icmp ne i64 %34, 0, !dbg !8694
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !8695

if.then12:                                        ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !8696
  br label %return, !dbg !8696

if.end13:                                         ; preds = %copy_from_user.exit
  %board_name = getelementptr inbounds %struct.comedi_devconfig, %struct.comedi_devconfig* %it, i32 0, i32 0, !dbg !8697
  %arrayidx = getelementptr [20 x i8], [20 x i8]* %board_name, i64 0, i64 19, !dbg !8698
  store i8 0, i8* %arrayidx, align 1, !dbg !8699
  %options = getelementptr inbounds %struct.comedi_devconfig, %struct.comedi_devconfig* %it, i32 0, i32 1, !dbg !8700
  %arrayidx14 = getelementptr [32 x i32], [32 x i32]* %options, i64 0, i64 31, !dbg !8702
  %35 = load i32, i32* %arrayidx14, align 4, !dbg !8702
  %tobool15 = icmp ne i32 %35, 0, !dbg !8702
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !8703

if.then16:                                        ; preds = %if.end13
  %36 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8704
  %class_dev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %36, i32 0, i32 4, !dbg !8704
  %37 = load %struct.device*, %struct.device** %class_dev, align 8, !dbg !8704
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %37, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.15, i64 0, i64 0)) #14, !dbg !8704
  store i32 -22, i32* %retval, align 4, !dbg !8706
  br label %return, !dbg !8706

if.end17:                                         ; preds = %if.end13
  %38 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8707
  %minor = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %38, i32 0, i32 5, !dbg !8709
  %39 = load i32, i32* %minor, align 8, !dbg !8709
  %40 = load i16, i16* @comedi_num_legacy_minors, align 2, !dbg !8710
  %conv = zext i16 %40 to i32, !dbg !8710
  %cmp = icmp sge i32 %39, %conv, !dbg !8711
  br i1 %cmp, label %if.then19, label %if.end20, !dbg !8712

if.then19:                                        ; preds = %if.end17
  store i32 -16, i32* %retval, align 4, !dbg !8713
  br label %return, !dbg !8713

if.end20:                                         ; preds = %if.end17
  %41 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8714
  %call21 = call i32 @comedi_device_attach(%struct.comedi_device* %41, %struct.comedi_devconfig* %it) #11, !dbg !8715
  store i32 %call21, i32* %retval, align 4, !dbg !8716
  br label %return, !dbg !8716

return:                                           ; preds = %if.end20, %if.then19, %if.then16, %if.then12, %if.end8, %if.then4, %if.then
  %42 = load i32, i32* %retval, align 4, !dbg !8717
  ret i32 %42, !dbg !8717
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @comedi_clear_board_dev(%struct.comedi_device* %dev) #0 !dbg !8718 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %i = alloca i32, align 4
  %cleared = alloca i8, align 1
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !8721, metadata !DIExpression()), !dbg !8722
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8723, metadata !DIExpression()), !dbg !8724
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8725
  %minor = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 5, !dbg !8726
  %1 = load i32, i32* %minor, align 8, !dbg !8726
  store i32 %1, i32* %i, align 4, !dbg !8724
  call void @llvm.dbg.declare(metadata i8* %cleared, metadata !8727, metadata !DIExpression()), !dbg !8728
  store i8 0, i8* %cleared, align 1, !dbg !8728
  br label %do.body, !dbg !8729

do.body:                                          ; preds = %entry
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8730
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %2, i32 0, i32 12, !dbg !8730
  br label %do.end, !dbg !8730

do.end:                                           ; preds = %do.body
  call void @mutex_lock(%struct.mutex* @comedi_board_minor_table_lock) #11, !dbg !8732
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8733
  %4 = load i32, i32* %i, align 4, !dbg !8735
  %idxprom = zext i32 %4 to i64, !dbg !8736
  %arrayidx = getelementptr [48 x %struct.comedi_device*], [48 x %struct.comedi_device*]* @comedi_board_minor_table, i64 0, i64 %idxprom, !dbg !8736
  %5 = load %struct.comedi_device*, %struct.comedi_device** %arrayidx, align 8, !dbg !8736
  %cmp = icmp eq %struct.comedi_device* %3, %5, !dbg !8737
  br i1 %cmp, label %if.then, label %if.end, !dbg !8738

if.then:                                          ; preds = %do.end
  %6 = load i32, i32* %i, align 4, !dbg !8739
  %idxprom1 = zext i32 %6 to i64, !dbg !8741
  %arrayidx2 = getelementptr [48 x %struct.comedi_device*], [48 x %struct.comedi_device*]* @comedi_board_minor_table, i64 0, i64 %idxprom1, !dbg !8741
  store %struct.comedi_device* null, %struct.comedi_device** %arrayidx2, align 8, !dbg !8742
  store i8 1, i8* %cleared, align 1, !dbg !8743
  br label %if.end, !dbg !8744

if.end:                                           ; preds = %if.then, %do.end
  call void @mutex_unlock(%struct.mutex* @comedi_board_minor_table_lock) #11, !dbg !8745
  %7 = load i8, i8* %cleared, align 1, !dbg !8746
  %tobool = trunc i8 %7 to i1, !dbg !8746
  ret i1 %tobool, !dbg !8747
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_bufconfig_ioctl(%struct.comedi_device* %dev, %struct.comedi_bufconfig* %arg) #0 !dbg !8748 {
entry:
  %retval.i.i33 = alloca i1, align 1
  %addr.addr.i.i34 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i34, metadata !6011, metadata !DIExpression()), !dbg !8751
  %bytes.addr.i.i35 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i35, metadata !6027, metadata !DIExpression()), !dbg !8755
  %is_source.addr.i.i36 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i36, metadata !6029, metadata !DIExpression()), !dbg !8756
  %sz.i.i37 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i37, metadata !6031, metadata !DIExpression()), !dbg !8757
  %__ret_warn_on.i.i38 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i38, metadata !6033, metadata !DIExpression()), !dbg !8758
  %tmp.i.i39 = alloca i64, align 8
  %to.addr.i40 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i40, metadata !6037, metadata !DIExpression()), !dbg !8759
  %from.addr.i41 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i41, metadata !6039, metadata !DIExpression()), !dbg !8760
  %n.addr.i42 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i42, metadata !6041, metadata !DIExpression()), !dbg !8761
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !6011, metadata !DIExpression()), !dbg !8762
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !6027, metadata !DIExpression()), !dbg !8766
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !6029, metadata !DIExpression()), !dbg !8767
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !6031, metadata !DIExpression()), !dbg !8768
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !6033, metadata !DIExpression()), !dbg !8769
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6520, metadata !DIExpression()), !dbg !8770
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6522, metadata !DIExpression()), !dbg !8771
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6524, metadata !DIExpression()), !dbg !8772
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %arg.addr = alloca %struct.comedi_bufconfig*, align 8
  %bc = alloca %struct.comedi_bufconfig, align 4
  %async = alloca %struct.comedi_async*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %retval1 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !8773, metadata !DIExpression()), !dbg !8774
  store %struct.comedi_bufconfig* %arg, %struct.comedi_bufconfig** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_bufconfig** %arg.addr, metadata !8775, metadata !DIExpression()), !dbg !8776
  call void @llvm.dbg.declare(metadata %struct.comedi_bufconfig* %bc, metadata !8777, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.declare(metadata %struct.comedi_async** %async, metadata !8779, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !8781, metadata !DIExpression()), !dbg !8782
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !8783, metadata !DIExpression()), !dbg !8784
  store i32 0, i32* %retval1, align 4, !dbg !8784
  br label %do.body, !dbg !8785

do.body:                                          ; preds = %entry
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8786
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 12, !dbg !8786
  br label %do.end, !dbg !8786

do.end:                                           ; preds = %do.body
  %1 = bitcast %struct.comedi_bufconfig* %bc to i8*, !dbg !8788
  %2 = load %struct.comedi_bufconfig*, %struct.comedi_bufconfig** %arg.addr, align 8, !dbg !8789
  %3 = bitcast %struct.comedi_bufconfig* %2 to i8*, !dbg !8789
  store i8* %1, i8** %to.addr.i, align 8
  store i8* %3, i8** %from.addr.i, align 8
  store i64 32, i64* %n.addr.i, align 8
  %4 = load i8*, i8** %to.addr.i, align 8, !dbg !8790
  %5 = load i64, i64* %n.addr.i, align 8, !dbg !8790
  store i8* %4, i8** %addr.addr.i.i, align 8
  store i64 %5, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !8768
  %6 = load i32, i32* %sz.i.i, align 4, !dbg !8791
  %cmp.i.i = icmp sge i32 %6, 0, !dbg !8791
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !8791

land.rhs.i.i:                                     ; preds = %do.end
  %7 = load i32, i32* %sz.i.i, align 4, !dbg !8791
  %conv.i.i = sext i32 %7 to i64, !dbg !8791
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8791
  %cmp1.i.i = icmp ult i64 %conv.i.i, %8, !dbg !8791
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %do.end
  %9 = phi i1 [ false, %do.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !8792
  %lnot.i.i = xor i1 %9, true, !dbg !8791
  %lnot.ext.i.i = zext i1 %9 to i32, !dbg !8791
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8791
  br i1 %9, label %if.then.i.i, label %if.end10.i.i, !dbg !8793

if.then.i.i:                                      ; preds = %land.end.i.i
  %10 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8794
  %11 = call i1 @llvm.is.constant.i64(i64 %10) #9, !dbg !8795
  br i1 %11, label %if.else.i.i, label %if.then5.i.i, !dbg !8796

if.then5.i.i:                                     ; preds = %if.then.i.i
  %12 = load i32, i32* %sz.i.i, align 4, !dbg !8797
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8798
  call void @copy_overflow(i32 %12, i64 %13) #12, !dbg !8799
  br label %if.end9.i.i, !dbg !8799

if.else.i.i:                                      ; preds = %if.then.i.i
  %14 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8800
  %tobool6.i.i = trunc i8 %14 to i1, !dbg !8800
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !8801

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #12, !dbg !8802
  br label %if.end.i.i, !dbg !8802

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #12, !dbg !8803
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8804
  br label %check_copy_size.exit.i, !dbg !8804

if.end10.i.i:                                     ; preds = %land.end.i.i
  %15 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8769
  %cmp11.i.i = icmp ugt i64 %15, 2147483647, !dbg !8769
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !8769
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !8769
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !8769
  %16 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8805
  %tobool17.i.i = icmp ne i32 %16, 0, !dbg !8805
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !8805
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !8805
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !8805
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !8769

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !8806, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !8807, !srcloc !6323
  br label %if.end31.i.i, !dbg !8808

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %17 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8769
  %tobool32.i.i = icmp ne i32 %17, 0, !dbg !8769
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !8769
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !8769
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !8769
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !8805
  %18 = load i64, i64* %tmp.i.i, align 8, !dbg !8769
  %tobool38.i.i = icmp ne i64 %18, 0, !dbg !8809
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !8810

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8811
  br label %check_copy_size.exit.i, !dbg !8811

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %19 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !8812
  %20 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8813
  %21 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8814
  %tobool41.i.i = trunc i8 %21 to i1, !dbg !8814
  call void @check_object_size(i8* %19, i64 %20, i1 zeroext %tobool41.i.i) #12, !dbg !8815
  store i1 true, i1* %retval.i.i, align 1, !dbg !8816
  br label %check_copy_size.exit.i, !dbg !8816

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %22 = load i1, i1* %retval.i.i, align 1, !dbg !8817
  %lnot.i = xor i1 %22, true, !dbg !8790
  %lnot.ext.i = zext i1 %22 to i32, !dbg !8790
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !8790
  br i1 %22, label %if.then.i, label %copy_from_user.exit, !dbg !8818

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %23 = load i8*, i8** %to.addr.i, align 8, !dbg !8819
  %24 = load i8*, i8** %from.addr.i, align 8, !dbg !8820
  %25 = load i64, i64* %n.addr.i, align 8, !dbg !8821
  %call2.i = call i64 @_copy_from_user(i8* %23, i8* %24, i64 %25) #12, !dbg !8822
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !8823
  br label %copy_from_user.exit, !dbg !8824

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %26 = load i64, i64* %n.addr.i, align 8, !dbg !8825
  %tobool = icmp ne i64 %26, 0, !dbg !8826
  br i1 %tobool, label %if.then, label %if.end, !dbg !8827

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !8828
  br label %return, !dbg !8828

if.end:                                           ; preds = %copy_from_user.exit
  %subdevice = getelementptr inbounds %struct.comedi_bufconfig, %struct.comedi_bufconfig* %bc, i32 0, i32 0, !dbg !8829
  %27 = load i32, i32* %subdevice, align 4, !dbg !8829
  %28 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8831
  %n_subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %28, i32 0, i32 15, !dbg !8832
  %29 = load i32, i32* %n_subdevices, align 4, !dbg !8832
  %cmp = icmp uge i32 %27, %29, !dbg !8833
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8834

if.then2:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !8835
  br label %return, !dbg !8835

if.end3:                                          ; preds = %if.end
  %30 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8836
  %subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %30, i32 0, i32 16, !dbg !8837
  %31 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices, align 8, !dbg !8837
  %subdevice4 = getelementptr inbounds %struct.comedi_bufconfig, %struct.comedi_bufconfig* %bc, i32 0, i32 0, !dbg !8838
  %32 = load i32, i32* %subdevice4, align 4, !dbg !8838
  %idxprom = zext i32 %32 to i64, !dbg !8836
  %arrayidx = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %31, i64 %idxprom, !dbg !8836
  store %struct.comedi_subdevice* %arrayidx, %struct.comedi_subdevice** %s, align 8, !dbg !8839
  %33 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !8840
  %async5 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %33, i32 0, i32 7, !dbg !8841
  %34 = load %struct.comedi_async*, %struct.comedi_async** %async5, align 8, !dbg !8841
  store %struct.comedi_async* %34, %struct.comedi_async** %async, align 8, !dbg !8842
  %35 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !8843
  %tobool6 = icmp ne %struct.comedi_async* %35, null, !dbg !8843
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !8845

if.then7:                                         ; preds = %if.end3
  %size = getelementptr inbounds %struct.comedi_bufconfig, %struct.comedi_bufconfig* %bc, i32 0, i32 3, !dbg !8846
  store i32 0, i32* %size, align 4, !dbg !8848
  %maximum_size = getelementptr inbounds %struct.comedi_bufconfig, %struct.comedi_bufconfig* %bc, i32 0, i32 2, !dbg !8849
  store i32 0, i32* %maximum_size, align 4, !dbg !8850
  br label %copyback, !dbg !8851

if.end8:                                          ; preds = %if.end3
  %maximum_size9 = getelementptr inbounds %struct.comedi_bufconfig, %struct.comedi_bufconfig* %bc, i32 0, i32 2, !dbg !8852
  %36 = load i32, i32* %maximum_size9, align 4, !dbg !8852
  %tobool10 = icmp ne i32 %36, 0, !dbg !8854
  br i1 %tobool10, label %if.then11, label %if.end16, !dbg !8855

if.then11:                                        ; preds = %if.end8
  %call12 = call zeroext i1 @capable(i32 21) #11, !dbg !8856
  br i1 %call12, label %if.end14, label %if.then13, !dbg !8859

if.then13:                                        ; preds = %if.then11
  store i32 -1, i32* %retval, align 4, !dbg !8860
  br label %return, !dbg !8860

if.end14:                                         ; preds = %if.then11
  %maximum_size15 = getelementptr inbounds %struct.comedi_bufconfig, %struct.comedi_bufconfig* %bc, i32 0, i32 2, !dbg !8861
  %37 = load i32, i32* %maximum_size15, align 4, !dbg !8861
  %38 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !8862
  %max_bufsize = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %38, i32 0, i32 3, !dbg !8863
  store i32 %37, i32* %max_bufsize, align 8, !dbg !8864
  br label %if.end16, !dbg !8865

if.end16:                                         ; preds = %if.end14, %if.end8
  %size17 = getelementptr inbounds %struct.comedi_bufconfig, %struct.comedi_bufconfig* %bc, i32 0, i32 3, !dbg !8866
  %39 = load i32, i32* %size17, align 4, !dbg !8866
  %tobool18 = icmp ne i32 %39, 0, !dbg !8868
  br i1 %tobool18, label %if.then19, label %if.end25, !dbg !8869

if.then19:                                        ; preds = %if.end16
  %40 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8870
  %41 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !8872
  %size20 = getelementptr inbounds %struct.comedi_bufconfig, %struct.comedi_bufconfig* %bc, i32 0, i32 3, !dbg !8873
  %42 = load i32, i32* %size20, align 4, !dbg !8873
  %call21 = call i32 @resize_async_buffer(%struct.comedi_device* %40, %struct.comedi_subdevice* %41, i32 %42) #11, !dbg !8874
  store i32 %call21, i32* %retval1, align 4, !dbg !8875
  %43 = load i32, i32* %retval1, align 4, !dbg !8876
  %cmp22 = icmp slt i32 %43, 0, !dbg !8878
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !8879

if.then23:                                        ; preds = %if.then19
  %44 = load i32, i32* %retval1, align 4, !dbg !8880
  store i32 %44, i32* %retval, align 4, !dbg !8881
  br label %return, !dbg !8881

if.end24:                                         ; preds = %if.then19
  br label %if.end25, !dbg !8882

if.end25:                                         ; preds = %if.end24, %if.end16
  %45 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !8883
  %prealloc_bufsz = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %45, i32 0, i32 1, !dbg !8884
  %46 = load i32, i32* %prealloc_bufsz, align 8, !dbg !8884
  %size26 = getelementptr inbounds %struct.comedi_bufconfig, %struct.comedi_bufconfig* %bc, i32 0, i32 3, !dbg !8885
  store i32 %46, i32* %size26, align 4, !dbg !8886
  %47 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !8887
  %max_bufsize27 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %47, i32 0, i32 3, !dbg !8888
  %48 = load i32, i32* %max_bufsize27, align 8, !dbg !8888
  %maximum_size28 = getelementptr inbounds %struct.comedi_bufconfig, %struct.comedi_bufconfig* %bc, i32 0, i32 2, !dbg !8889
  store i32 %48, i32* %maximum_size28, align 4, !dbg !8890
  br label %copyback, !dbg !8891

copyback:                                         ; preds = %if.end25, %if.then7
  call void @llvm.dbg.label(metadata !8892), !dbg !8893
  %49 = load %struct.comedi_bufconfig*, %struct.comedi_bufconfig** %arg.addr, align 8, !dbg !8894
  %50 = bitcast %struct.comedi_bufconfig* %49 to i8*, !dbg !8894
  %51 = bitcast %struct.comedi_bufconfig* %bc to i8*, !dbg !8895
  store i8* %50, i8** %to.addr.i40, align 8
  store i8* %51, i8** %from.addr.i41, align 8
  store i64 32, i64* %n.addr.i42, align 8
  %52 = load i8*, i8** %from.addr.i41, align 8, !dbg !8896
  %53 = load i64, i64* %n.addr.i42, align 8, !dbg !8896
  store i8* %52, i8** %addr.addr.i.i34, align 8
  store i64 %53, i64* %bytes.addr.i.i35, align 8
  store i8 1, i8* %is_source.addr.i.i36, align 1
  store i32 -1, i32* %sz.i.i37, align 4, !dbg !8757
  %54 = load i32, i32* %sz.i.i37, align 4, !dbg !8897
  %cmp.i.i43 = icmp sge i32 %54, 0, !dbg !8897
  br i1 %cmp.i.i43, label %land.rhs.i.i46, label %land.end.i.i50, !dbg !8897

land.rhs.i.i46:                                   ; preds = %copyback
  %55 = load i32, i32* %sz.i.i37, align 4, !dbg !8897
  %conv.i.i44 = sext i32 %55 to i64, !dbg !8897
  %56 = load i64, i64* %bytes.addr.i.i35, align 8, !dbg !8897
  %cmp1.i.i45 = icmp ult i64 %conv.i.i44, %56, !dbg !8897
  br label %land.end.i.i50

land.end.i.i50:                                   ; preds = %land.rhs.i.i46, %copyback
  %57 = phi i1 [ false, %copyback ], [ %cmp1.i.i45, %land.rhs.i.i46 ], !dbg !8898
  %lnot.i.i47 = xor i1 %57, true, !dbg !8897
  %lnot.ext.i.i48 = zext i1 %57 to i32, !dbg !8897
  %conv4.i.i49 = sext i32 %lnot.ext.i.i48 to i64, !dbg !8897
  br i1 %57, label %if.then.i.i51, label %if.end10.i.i66, !dbg !8899

if.then.i.i51:                                    ; preds = %land.end.i.i50
  %58 = load i64, i64* %bytes.addr.i.i35, align 8, !dbg !8900
  %59 = call i1 @llvm.is.constant.i64(i64 %58) #9, !dbg !8901
  br i1 %59, label %if.else.i.i54, label %if.then5.i.i52, !dbg !8902

if.then5.i.i52:                                   ; preds = %if.then.i.i51
  %60 = load i32, i32* %sz.i.i37, align 4, !dbg !8903
  %61 = load i64, i64* %bytes.addr.i.i35, align 8, !dbg !8904
  call void @copy_overflow(i32 %60, i64 %61) #12, !dbg !8905
  br label %if.end9.i.i58, !dbg !8905

if.else.i.i54:                                    ; preds = %if.then.i.i51
  %62 = load i8, i8* %is_source.addr.i.i36, align 1, !dbg !8906
  %tobool6.i.i53 = trunc i8 %62 to i1, !dbg !8906
  br i1 %tobool6.i.i53, label %if.then7.i.i55, label %if.else8.i.i56, !dbg !8907

if.then7.i.i55:                                   ; preds = %if.else.i.i54
  call void @__bad_copy_from() #12, !dbg !8908
  br label %if.end.i.i57, !dbg !8908

if.else8.i.i56:                                   ; preds = %if.else.i.i54
  call void @__bad_copy_to() #12, !dbg !8909
  br label %if.end.i.i57

if.end.i.i57:                                     ; preds = %if.else8.i.i56, %if.then7.i.i55
  br label %if.end9.i.i58

if.end9.i.i58:                                    ; preds = %if.end.i.i57, %if.then5.i.i52
  store i1 false, i1* %retval.i.i33, align 1, !dbg !8910
  br label %check_copy_size.exit.i80, !dbg !8910

if.end10.i.i66:                                   ; preds = %land.end.i.i50
  %63 = load i64, i64* %bytes.addr.i.i35, align 8, !dbg !8758
  %cmp11.i.i59 = icmp ugt i64 %63, 2147483647, !dbg !8758
  %lnot13.i.i60 = xor i1 %cmp11.i.i59, true, !dbg !8758
  %lnot.ext16.i.i61 = zext i1 %cmp11.i.i59 to i32, !dbg !8758
  store i32 %lnot.ext16.i.i61, i32* %__ret_warn_on.i.i38, align 4, !dbg !8758
  %64 = load i32, i32* %__ret_warn_on.i.i38, align 4, !dbg !8911
  %tobool17.i.i62 = icmp ne i32 %64, 0, !dbg !8911
  %lnot18.i.i63 = xor i1 %tobool17.i.i62, true, !dbg !8911
  %lnot.ext21.i.i64 = zext i1 %tobool17.i.i62 to i32, !dbg !8911
  %conv22.i.i65 = sext i32 %lnot.ext21.i.i64 to i64, !dbg !8911
  br i1 %tobool17.i.i62, label %if.then24.i.i67, label %if.end31.i.i73, !dbg !8758

if.then24.i.i67:                                  ; preds = %if.end10.i.i66
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !8912, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !8913, !srcloc !6323
  br label %if.end31.i.i73, !dbg !8914

if.end31.i.i73:                                   ; preds = %if.then24.i.i67, %if.end10.i.i66
  %65 = load i32, i32* %__ret_warn_on.i.i38, align 4, !dbg !8758
  %tobool32.i.i68 = icmp ne i32 %65, 0, !dbg !8758
  %lnot33.i.i69 = xor i1 %tobool32.i.i68, true, !dbg !8758
  %lnot.ext36.i.i70 = zext i1 %tobool32.i.i68 to i32, !dbg !8758
  %conv37.i.i71 = sext i32 %lnot.ext36.i.i70 to i64, !dbg !8758
  store i64 %conv37.i.i71, i64* %tmp.i.i39, align 8, !dbg !8911
  %66 = load i64, i64* %tmp.i.i39, align 8, !dbg !8758
  %tobool38.i.i72 = icmp ne i64 %66, 0, !dbg !8915
  br i1 %tobool38.i.i72, label %if.then39.i.i74, label %if.end40.i.i76, !dbg !8916

if.then39.i.i74:                                  ; preds = %if.end31.i.i73
  store i1 false, i1* %retval.i.i33, align 1, !dbg !8917
  br label %check_copy_size.exit.i80, !dbg !8917

if.end40.i.i76:                                   ; preds = %if.end31.i.i73
  %67 = load i8*, i8** %addr.addr.i.i34, align 8, !dbg !8918
  %68 = load i64, i64* %bytes.addr.i.i35, align 8, !dbg !8919
  %69 = load i8, i8* %is_source.addr.i.i36, align 1, !dbg !8920
  %tobool41.i.i75 = trunc i8 %69 to i1, !dbg !8920
  call void @check_object_size(i8* %67, i64 %68, i1 zeroext %tobool41.i.i75) #12, !dbg !8921
  store i1 true, i1* %retval.i.i33, align 1, !dbg !8922
  br label %check_copy_size.exit.i80, !dbg !8922

check_copy_size.exit.i80:                         ; preds = %if.end40.i.i76, %if.then39.i.i74, %if.end9.i.i58
  %70 = load i1, i1* %retval.i.i33, align 1, !dbg !8923
  %lnot.i77 = xor i1 %70, true, !dbg !8896
  %lnot.ext.i78 = zext i1 %70 to i32, !dbg !8896
  %conv.i79 = sext i32 %lnot.ext.i78 to i64, !dbg !8896
  br i1 %70, label %if.then.i82, label %copy_to_user.exit, !dbg !8924

if.then.i82:                                      ; preds = %check_copy_size.exit.i80
  %71 = load i8*, i8** %to.addr.i40, align 8, !dbg !8925
  %72 = load i8*, i8** %from.addr.i41, align 8, !dbg !8926
  %73 = load i64, i64* %n.addr.i42, align 8, !dbg !8927
  %call2.i81 = call i64 @_copy_to_user(i8* %71, i8* %72, i64 %73) #12, !dbg !8928
  store i64 %call2.i81, i64* %n.addr.i42, align 8, !dbg !8929
  br label %copy_to_user.exit, !dbg !8930

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i80, %if.then.i82
  %74 = load i64, i64* %n.addr.i42, align 8, !dbg !8931
  %tobool30 = icmp ne i64 %74, 0, !dbg !8932
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !8933

if.then31:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !8934
  br label %return, !dbg !8934

if.end32:                                         ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !8935
  br label %return, !dbg !8935

return:                                           ; preds = %if.end32, %if.then31, %if.then23, %if.then13, %if.then2, %if.then
  %75 = load i32, i32* %retval, align 4, !dbg !8936
  ret i32 %75, !dbg !8936
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_devinfo_ioctl(%struct.comedi_device* %dev, %struct.comedi_devinfo* %arg, %struct.file* %file) #0 !dbg !8937 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !6011, metadata !DIExpression()), !dbg !8940
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !6027, metadata !DIExpression()), !dbg !8944
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !6029, metadata !DIExpression()), !dbg !8945
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !6031, metadata !DIExpression()), !dbg !8946
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !6033, metadata !DIExpression()), !dbg !8947
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6037, metadata !DIExpression()), !dbg !8948
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6039, metadata !DIExpression()), !dbg !8949
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6041, metadata !DIExpression()), !dbg !8950
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %arg.addr = alloca %struct.comedi_devinfo*, align 8
  %file.addr = alloca %struct.file*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %devinfo = alloca %struct.comedi_devinfo, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !8951, metadata !DIExpression()), !dbg !8952
  store %struct.comedi_devinfo* %arg, %struct.comedi_devinfo** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_devinfo** %arg.addr, metadata !8953, metadata !DIExpression()), !dbg !8954
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !8955, metadata !DIExpression()), !dbg !8956
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !8957, metadata !DIExpression()), !dbg !8958
  call void @llvm.dbg.declare(metadata %struct.comedi_devinfo* %devinfo, metadata !8959, metadata !DIExpression()), !dbg !8960
  br label %do.body, !dbg !8961

do.body:                                          ; preds = %entry
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8962
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 12, !dbg !8962
  br label %do.end, !dbg !8962

do.end:                                           ; preds = %do.body
  %1 = bitcast %struct.comedi_devinfo* %devinfo to i8*, !dbg !8964
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 176, i1 false), !dbg !8964
  %version_code = getelementptr inbounds %struct.comedi_devinfo, %struct.comedi_devinfo* %devinfo, i32 0, i32 0, !dbg !8965
  store i32 1868, i32* %version_code, align 4, !dbg !8966
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8967
  %n_subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %2, i32 0, i32 15, !dbg !8968
  %3 = load i32, i32* %n_subdevices, align 4, !dbg !8968
  %n_subdevs = getelementptr inbounds %struct.comedi_devinfo, %struct.comedi_devinfo* %devinfo, i32 0, i32 1, !dbg !8969
  store i32 %3, i32* %n_subdevs, align 4, !dbg !8970
  %driver_name = getelementptr inbounds %struct.comedi_devinfo, %struct.comedi_devinfo* %devinfo, i32 0, i32 2, !dbg !8971
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %driver_name, i64 0, i64 0, !dbg !8972
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8973
  %driver = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %4, i32 0, i32 1, !dbg !8974
  %5 = load %struct.comedi_driver*, %struct.comedi_driver** %driver, align 8, !dbg !8974
  %driver_name1 = getelementptr inbounds %struct.comedi_driver, %struct.comedi_driver* %5, i32 0, i32 1, !dbg !8975
  %6 = load i8*, i8** %driver_name1, align 8, !dbg !8975
  %call = call i64 @strlcpy(i8* %arraydecay, i8* %6, i64 20) #11, !dbg !8976
  %board_name = getelementptr inbounds %struct.comedi_devinfo, %struct.comedi_devinfo* %devinfo, i32 0, i32 3, !dbg !8977
  %arraydecay2 = getelementptr inbounds [20 x i8], [20 x i8]* %board_name, i64 0, i64 0, !dbg !8978
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !8979
  %board_name3 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %7, i32 0, i32 8, !dbg !8980
  %8 = load i8*, i8** %board_name3, align 8, !dbg !8980
  %call4 = call i64 @strlcpy(i8* %arraydecay2, i8* %8, i64 20) #11, !dbg !8981
  %9 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !8982
  %call5 = call %struct.comedi_subdevice* @comedi_file_read_subdevice(%struct.file* %9) #11, !dbg !8983
  store %struct.comedi_subdevice* %call5, %struct.comedi_subdevice** %s, align 8, !dbg !8984
  %10 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !8985
  %tobool = icmp ne %struct.comedi_subdevice* %10, null, !dbg !8985
  br i1 %tobool, label %if.then, label %if.else, !dbg !8987

if.then:                                          ; preds = %do.end
  %11 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !8988
  %index = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %11, i32 0, i32 1, !dbg !8989
  %12 = load i32, i32* %index, align 8, !dbg !8989
  %read_subdevice = getelementptr inbounds %struct.comedi_devinfo, %struct.comedi_devinfo* %devinfo, i32 0, i32 4, !dbg !8990
  store i32 %12, i32* %read_subdevice, align 4, !dbg !8991
  br label %if.end, !dbg !8992

if.else:                                          ; preds = %do.end
  %read_subdevice6 = getelementptr inbounds %struct.comedi_devinfo, %struct.comedi_devinfo* %devinfo, i32 0, i32 4, !dbg !8993
  store i32 -1, i32* %read_subdevice6, align 4, !dbg !8994
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !8995
  %call7 = call %struct.comedi_subdevice* @comedi_file_write_subdevice(%struct.file* %13) #11, !dbg !8996
  store %struct.comedi_subdevice* %call7, %struct.comedi_subdevice** %s, align 8, !dbg !8997
  %14 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !8998
  %tobool8 = icmp ne %struct.comedi_subdevice* %14, null, !dbg !8998
  br i1 %tobool8, label %if.then9, label %if.else11, !dbg !9000

if.then9:                                         ; preds = %if.end
  %15 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9001
  %index10 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %15, i32 0, i32 1, !dbg !9002
  %16 = load i32, i32* %index10, align 8, !dbg !9002
  %write_subdevice = getelementptr inbounds %struct.comedi_devinfo, %struct.comedi_devinfo* %devinfo, i32 0, i32 5, !dbg !9003
  store i32 %16, i32* %write_subdevice, align 4, !dbg !9004
  br label %if.end13, !dbg !9005

if.else11:                                        ; preds = %if.end
  %write_subdevice12 = getelementptr inbounds %struct.comedi_devinfo, %struct.comedi_devinfo* %devinfo, i32 0, i32 5, !dbg !9006
  store i32 -1, i32* %write_subdevice12, align 4, !dbg !9007
  br label %if.end13

if.end13:                                         ; preds = %if.else11, %if.then9
  %17 = load %struct.comedi_devinfo*, %struct.comedi_devinfo** %arg.addr, align 8, !dbg !9008
  %18 = bitcast %struct.comedi_devinfo* %17 to i8*, !dbg !9008
  %19 = bitcast %struct.comedi_devinfo* %devinfo to i8*, !dbg !9009
  store i8* %18, i8** %to.addr.i, align 8
  store i8* %19, i8** %from.addr.i, align 8
  store i64 176, i64* %n.addr.i, align 8
  %20 = load i8*, i8** %from.addr.i, align 8, !dbg !9010
  %21 = load i64, i64* %n.addr.i, align 8, !dbg !9010
  store i8* %20, i8** %addr.addr.i.i, align 8
  store i64 %21, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !8946
  %22 = load i32, i32* %sz.i.i, align 4, !dbg !9011
  %cmp.i.i = icmp sge i32 %22, 0, !dbg !9011
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !9011

land.rhs.i.i:                                     ; preds = %if.end13
  %23 = load i32, i32* %sz.i.i, align 4, !dbg !9011
  %conv.i.i = sext i32 %23 to i64, !dbg !9011
  %24 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9011
  %cmp1.i.i = icmp ult i64 %conv.i.i, %24, !dbg !9011
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end13
  %25 = phi i1 [ false, %if.end13 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !9012
  %lnot.i.i = xor i1 %25, true, !dbg !9011
  %lnot.ext.i.i = zext i1 %25 to i32, !dbg !9011
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9011
  br i1 %25, label %if.then.i.i, label %if.end10.i.i, !dbg !9013

if.then.i.i:                                      ; preds = %land.end.i.i
  %26 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9014
  %27 = call i1 @llvm.is.constant.i64(i64 %26) #9, !dbg !9015
  br i1 %27, label %if.else.i.i, label %if.then5.i.i, !dbg !9016

if.then5.i.i:                                     ; preds = %if.then.i.i
  %28 = load i32, i32* %sz.i.i, align 4, !dbg !9017
  %29 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9018
  call void @copy_overflow(i32 %28, i64 %29) #12, !dbg !9019
  br label %if.end9.i.i, !dbg !9019

if.else.i.i:                                      ; preds = %if.then.i.i
  %30 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !9020
  %tobool6.i.i = trunc i8 %30 to i1, !dbg !9020
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !9021

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #12, !dbg !9022
  br label %if.end.i.i, !dbg !9022

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #12, !dbg !9023
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !9024
  br label %check_copy_size.exit.i, !dbg !9024

if.end10.i.i:                                     ; preds = %land.end.i.i
  %31 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8947
  %cmp11.i.i = icmp ugt i64 %31, 2147483647, !dbg !8947
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !8947
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !8947
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !8947
  %32 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !9025
  %tobool17.i.i = icmp ne i32 %32, 0, !dbg !9025
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !9025
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !9025
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !9025
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !8947

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !9026, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !9027, !srcloc !6323
  br label %if.end31.i.i, !dbg !9028

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %33 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8947
  %tobool32.i.i = icmp ne i32 %33, 0, !dbg !8947
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !8947
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !8947
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !8947
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !9025
  %34 = load i64, i64* %tmp.i.i, align 8, !dbg !8947
  %tobool38.i.i = icmp ne i64 %34, 0, !dbg !9029
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !9030

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !9031
  br label %check_copy_size.exit.i, !dbg !9031

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %35 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !9032
  %36 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9033
  %37 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !9034
  %tobool41.i.i = trunc i8 %37 to i1, !dbg !9034
  call void @check_object_size(i8* %35, i64 %36, i1 zeroext %tobool41.i.i) #12, !dbg !9035
  store i1 true, i1* %retval.i.i, align 1, !dbg !9036
  br label %check_copy_size.exit.i, !dbg !9036

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %38 = load i1, i1* %retval.i.i, align 1, !dbg !9037
  %lnot.i = xor i1 %38, true, !dbg !9010
  %lnot.ext.i = zext i1 %38 to i32, !dbg !9010
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !9010
  br i1 %38, label %if.then.i, label %copy_to_user.exit, !dbg !9038

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %39 = load i8*, i8** %to.addr.i, align 8, !dbg !9039
  %40 = load i8*, i8** %from.addr.i, align 8, !dbg !9040
  %41 = load i64, i64* %n.addr.i, align 8, !dbg !9041
  %call2.i = call i64 @_copy_to_user(i8* %39, i8* %40, i64 %41) #12, !dbg !9042
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !9043
  br label %copy_to_user.exit, !dbg !9044

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %42 = load i64, i64* %n.addr.i, align 8, !dbg !9045
  %tobool15 = icmp ne i64 %42, 0, !dbg !9046
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !9047

if.then16:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !9048
  br label %return, !dbg !9048

if.end17:                                         ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !9049
  br label %return, !dbg !9049

return:                                           ; preds = %if.end17, %if.then16
  %43 = load i32, i32* %retval, align 4, !dbg !9050
  ret i32 %43, !dbg !9050
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_subdinfo_ioctl(%struct.comedi_device* %dev, %struct.comedi_subdinfo* %arg, i8* %file) #0 !dbg !9051 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !6011, metadata !DIExpression()), !dbg !9054
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !6027, metadata !DIExpression()), !dbg !9057
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !6029, metadata !DIExpression()), !dbg !9058
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !6031, metadata !DIExpression()), !dbg !9059
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !6033, metadata !DIExpression()), !dbg !9060
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6037, metadata !DIExpression()), !dbg !9061
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6039, metadata !DIExpression()), !dbg !9062
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6041, metadata !DIExpression()), !dbg !9063
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %arg.addr = alloca %struct.comedi_subdinfo*, align 8
  %file.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %tmp = alloca %struct.comedi_subdinfo*, align 8
  %us = alloca %struct.comedi_subdinfo*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9064, metadata !DIExpression()), !dbg !9065
  store %struct.comedi_subdinfo* %arg, %struct.comedi_subdinfo** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdinfo** %arg.addr, metadata !9066, metadata !DIExpression()), !dbg !9067
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9068, metadata !DIExpression()), !dbg !9069
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9070, metadata !DIExpression()), !dbg !9071
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9072, metadata !DIExpression()), !dbg !9073
  call void @llvm.dbg.declare(metadata %struct.comedi_subdinfo** %tmp, metadata !9074, metadata !DIExpression()), !dbg !9075
  call void @llvm.dbg.declare(metadata %struct.comedi_subdinfo** %us, metadata !9076, metadata !DIExpression()), !dbg !9077
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !9078, metadata !DIExpression()), !dbg !9079
  br label %do.body, !dbg !9080

do.body:                                          ; preds = %entry
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9081
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 12, !dbg !9081
  br label %do.end, !dbg !9081

do.end:                                           ; preds = %do.body
  %1 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9083
  %n_subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %1, i32 0, i32 15, !dbg !9084
  %2 = load i32, i32* %n_subdevices, align 4, !dbg !9084
  %conv = sext i32 %2 to i64, !dbg !9083
  %call = call i8* @kcalloc(i64 %conv, i64 72, i32 3264) #11, !dbg !9085
  %3 = bitcast i8* %call to %struct.comedi_subdinfo*, !dbg !9085
  store %struct.comedi_subdinfo* %3, %struct.comedi_subdinfo** %tmp, align 8, !dbg !9086
  %4 = load %struct.comedi_subdinfo*, %struct.comedi_subdinfo** %tmp, align 8, !dbg !9087
  %tobool = icmp ne %struct.comedi_subdinfo* %4, null, !dbg !9087
  br i1 %tobool, label %if.end, label %if.then, !dbg !9089

if.then:                                          ; preds = %do.end
  store i32 -12, i32* %retval, align 4, !dbg !9090
  br label %return, !dbg !9090

if.end:                                           ; preds = %do.end
  store i32 0, i32* %i, align 4, !dbg !9091
  br label %for.cond, !dbg !9093

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !9094
  %6 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9096
  %n_subdevices1 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %6, i32 0, i32 15, !dbg !9097
  %7 = load i32, i32* %n_subdevices1, align 4, !dbg !9097
  %cmp = icmp slt i32 %5, %7, !dbg !9098
  br i1 %cmp, label %for.body, label %for.end, !dbg !9099

for.body:                                         ; preds = %for.cond
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9100
  %subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %8, i32 0, i32 16, !dbg !9102
  %9 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices, align 8, !dbg !9102
  %10 = load i32, i32* %i, align 4, !dbg !9103
  %idxprom = sext i32 %10 to i64, !dbg !9100
  %arrayidx = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %9, i64 %idxprom, !dbg !9100
  store %struct.comedi_subdevice* %arrayidx, %struct.comedi_subdevice** %s, align 8, !dbg !9104
  %11 = load %struct.comedi_subdinfo*, %struct.comedi_subdinfo** %tmp, align 8, !dbg !9105
  %12 = load i32, i32* %i, align 4, !dbg !9106
  %idx.ext = sext i32 %12 to i64, !dbg !9107
  %add.ptr = getelementptr %struct.comedi_subdinfo, %struct.comedi_subdinfo* %11, i64 %idx.ext, !dbg !9107
  store %struct.comedi_subdinfo* %add.ptr, %struct.comedi_subdinfo** %us, align 8, !dbg !9108
  %13 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9109
  %type = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %13, i32 0, i32 2, !dbg !9110
  %14 = load i32, i32* %type, align 4, !dbg !9110
  %15 = load %struct.comedi_subdinfo*, %struct.comedi_subdinfo** %us, align 8, !dbg !9111
  %type3 = getelementptr inbounds %struct.comedi_subdinfo, %struct.comedi_subdinfo* %15, i32 0, i32 0, !dbg !9112
  store i32 %14, i32* %type3, align 4, !dbg !9113
  %16 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9114
  %n_chan = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %16, i32 0, i32 3, !dbg !9115
  %17 = load i32, i32* %n_chan, align 8, !dbg !9115
  %18 = load %struct.comedi_subdinfo*, %struct.comedi_subdinfo** %us, align 8, !dbg !9116
  %n_chan4 = getelementptr inbounds %struct.comedi_subdinfo, %struct.comedi_subdinfo* %18, i32 0, i32 1, !dbg !9117
  store i32 %17, i32* %n_chan4, align 4, !dbg !9118
  %19 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9119
  %subdev_flags = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %19, i32 0, i32 4, !dbg !9120
  %20 = load i32, i32* %subdev_flags, align 4, !dbg !9120
  %21 = load %struct.comedi_subdinfo*, %struct.comedi_subdinfo** %us, align 8, !dbg !9121
  %subd_flags = getelementptr inbounds %struct.comedi_subdinfo, %struct.comedi_subdinfo* %21, i32 0, i32 2, !dbg !9122
  store i32 %20, i32* %subd_flags, align 4, !dbg !9123
  %22 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9124
  %call5 = call zeroext i1 @comedi_is_subdevice_running(%struct.comedi_subdevice* %22) #11, !dbg !9126
  br i1 %call5, label %if.then6, label %if.end8, !dbg !9127

if.then6:                                         ; preds = %for.body
  %23 = load %struct.comedi_subdinfo*, %struct.comedi_subdinfo** %us, align 8, !dbg !9128
  %subd_flags7 = getelementptr inbounds %struct.comedi_subdinfo, %struct.comedi_subdinfo* %23, i32 0, i32 2, !dbg !9129
  %24 = load i32, i32* %subd_flags7, align 4, !dbg !9130
  %or = or i32 %24, 134217728, !dbg !9130
  store i32 %or, i32* %subd_flags7, align 4, !dbg !9130
  br label %if.end8, !dbg !9128

if.end8:                                          ; preds = %if.then6, %for.body
  %25 = load %struct.comedi_subdinfo*, %struct.comedi_subdinfo** %us, align 8, !dbg !9131
  %timer_type = getelementptr inbounds %struct.comedi_subdinfo, %struct.comedi_subdinfo* %25, i32 0, i32 3, !dbg !9132
  store i32 5, i32* %timer_type, align 4, !dbg !9133
  %26 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9134
  %len_chanlist = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %26, i32 0, i32 5, !dbg !9135
  %27 = load i32, i32* %len_chanlist, align 8, !dbg !9135
  %28 = load %struct.comedi_subdinfo*, %struct.comedi_subdinfo** %us, align 8, !dbg !9136
  %len_chanlist9 = getelementptr inbounds %struct.comedi_subdinfo, %struct.comedi_subdinfo* %28, i32 0, i32 4, !dbg !9137
  store i32 %27, i32* %len_chanlist9, align 4, !dbg !9138
  %29 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9139
  %maxdata = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %29, i32 0, i32 13, !dbg !9140
  %30 = load i32, i32* %maxdata, align 8, !dbg !9140
  %31 = load %struct.comedi_subdinfo*, %struct.comedi_subdinfo** %us, align 8, !dbg !9141
  %maxdata10 = getelementptr inbounds %struct.comedi_subdinfo, %struct.comedi_subdinfo* %31, i32 0, i32 5, !dbg !9142
  store i32 %30, i32* %maxdata10, align 4, !dbg !9143
  %32 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9144
  %range_table = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %32, i32 0, i32 15, !dbg !9146
  %33 = load %struct.comedi_lrange*, %struct.comedi_lrange** %range_table, align 8, !dbg !9146
  %tobool11 = icmp ne %struct.comedi_lrange* %33, null, !dbg !9144
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !9147

if.then12:                                        ; preds = %if.end8
  %34 = load i32, i32* %i, align 4, !dbg !9148
  %shl = shl i32 %34, 24, !dbg !9150
  %35 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9151
  %range_table13 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %35, i32 0, i32 15, !dbg !9152
  %36 = load %struct.comedi_lrange*, %struct.comedi_lrange** %range_table13, align 8, !dbg !9152
  %length = getelementptr inbounds %struct.comedi_lrange, %struct.comedi_lrange* %36, i32 0, i32 0, !dbg !9153
  %37 = load i32, i32* %length, align 4, !dbg !9153
  %or14 = or i32 %shl, %37, !dbg !9154
  %38 = load %struct.comedi_subdinfo*, %struct.comedi_subdinfo** %us, align 8, !dbg !9155
  %range_type = getelementptr inbounds %struct.comedi_subdinfo, %struct.comedi_subdinfo* %38, i32 0, i32 7, !dbg !9156
  store i32 %or14, i32* %range_type, align 4, !dbg !9157
  br label %if.end16, !dbg !9158

if.else:                                          ; preds = %if.end8
  %39 = load %struct.comedi_subdinfo*, %struct.comedi_subdinfo** %us, align 8, !dbg !9159
  %range_type15 = getelementptr inbounds %struct.comedi_subdinfo, %struct.comedi_subdinfo* %39, i32 0, i32 7, !dbg !9161
  store i32 0, i32* %range_type15, align 4, !dbg !9162
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then12
  %40 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9163
  %busy = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %40, i32 0, i32 9, !dbg !9165
  %41 = load i8*, i8** %busy, align 8, !dbg !9165
  %tobool17 = icmp ne i8* %41, null, !dbg !9163
  br i1 %tobool17, label %if.then18, label %if.end21, !dbg !9166

if.then18:                                        ; preds = %if.end16
  %42 = load %struct.comedi_subdinfo*, %struct.comedi_subdinfo** %us, align 8, !dbg !9167
  %subd_flags19 = getelementptr inbounds %struct.comedi_subdinfo, %struct.comedi_subdinfo* %42, i32 0, i32 2, !dbg !9168
  %43 = load i32, i32* %subd_flags19, align 4, !dbg !9169
  %or20 = or i32 %43, 1, !dbg !9169
  store i32 %or20, i32* %subd_flags19, align 4, !dbg !9169
  br label %if.end21, !dbg !9167

if.end21:                                         ; preds = %if.then18, %if.end16
  %44 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9170
  %busy22 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %44, i32 0, i32 9, !dbg !9172
  %45 = load i8*, i8** %busy22, align 8, !dbg !9172
  %46 = load i8*, i8** %file.addr, align 8, !dbg !9173
  %cmp23 = icmp eq i8* %45, %46, !dbg !9174
  br i1 %cmp23, label %if.then25, label %if.end28, !dbg !9175

if.then25:                                        ; preds = %if.end21
  %47 = load %struct.comedi_subdinfo*, %struct.comedi_subdinfo** %us, align 8, !dbg !9176
  %subd_flags26 = getelementptr inbounds %struct.comedi_subdinfo, %struct.comedi_subdinfo* %47, i32 0, i32 2, !dbg !9177
  %48 = load i32, i32* %subd_flags26, align 4, !dbg !9178
  %or27 = or i32 %48, 2, !dbg !9178
  store i32 %or27, i32* %subd_flags26, align 4, !dbg !9178
  br label %if.end28, !dbg !9176

if.end28:                                         ; preds = %if.then25, %if.end21
  %49 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9179
  %lock = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %49, i32 0, i32 8, !dbg !9181
  %50 = load i8*, i8** %lock, align 8, !dbg !9181
  %tobool29 = icmp ne i8* %50, null, !dbg !9179
  br i1 %tobool29, label %if.then30, label %if.end33, !dbg !9182

if.then30:                                        ; preds = %if.end28
  %51 = load %struct.comedi_subdinfo*, %struct.comedi_subdinfo** %us, align 8, !dbg !9183
  %subd_flags31 = getelementptr inbounds %struct.comedi_subdinfo, %struct.comedi_subdinfo* %51, i32 0, i32 2, !dbg !9184
  %52 = load i32, i32* %subd_flags31, align 4, !dbg !9185
  %or32 = or i32 %52, 4, !dbg !9185
  store i32 %or32, i32* %subd_flags31, align 4, !dbg !9185
  br label %if.end33, !dbg !9183

if.end33:                                         ; preds = %if.then30, %if.end28
  %53 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9186
  %lock34 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %53, i32 0, i32 8, !dbg !9188
  %54 = load i8*, i8** %lock34, align 8, !dbg !9188
  %55 = load i8*, i8** %file.addr, align 8, !dbg !9189
  %cmp35 = icmp eq i8* %54, %55, !dbg !9190
  br i1 %cmp35, label %if.then37, label %if.end40, !dbg !9191

if.then37:                                        ; preds = %if.end33
  %56 = load %struct.comedi_subdinfo*, %struct.comedi_subdinfo** %us, align 8, !dbg !9192
  %subd_flags38 = getelementptr inbounds %struct.comedi_subdinfo, %struct.comedi_subdinfo* %56, i32 0, i32 2, !dbg !9193
  %57 = load i32, i32* %subd_flags38, align 4, !dbg !9194
  %or39 = or i32 %57, 8, !dbg !9194
  store i32 %or39, i32* %subd_flags38, align 4, !dbg !9194
  br label %if.end40, !dbg !9192

if.end40:                                         ; preds = %if.then37, %if.end33
  %58 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9195
  %maxdata41 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %58, i32 0, i32 13, !dbg !9197
  %59 = load i32, i32* %maxdata41, align 8, !dbg !9197
  %tobool42 = icmp ne i32 %59, 0, !dbg !9195
  br i1 %tobool42, label %if.end47, label %land.lhs.true, !dbg !9198

land.lhs.true:                                    ; preds = %if.end40
  %60 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9199
  %maxdata_list = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %60, i32 0, i32 14, !dbg !9200
  %61 = load i32*, i32** %maxdata_list, align 8, !dbg !9200
  %tobool43 = icmp ne i32* %61, null, !dbg !9199
  br i1 %tobool43, label %if.then44, label %if.end47, !dbg !9201

if.then44:                                        ; preds = %land.lhs.true
  %62 = load %struct.comedi_subdinfo*, %struct.comedi_subdinfo** %us, align 8, !dbg !9202
  %subd_flags45 = getelementptr inbounds %struct.comedi_subdinfo, %struct.comedi_subdinfo* %62, i32 0, i32 2, !dbg !9203
  %63 = load i32, i32* %subd_flags45, align 4, !dbg !9204
  %or46 = or i32 %63, 16, !dbg !9204
  store i32 %or46, i32* %subd_flags45, align 4, !dbg !9204
  br label %if.end47, !dbg !9202

if.end47:                                         ; preds = %if.then44, %land.lhs.true, %if.end40
  %64 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9205
  %range_table_list = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %64, i32 0, i32 16, !dbg !9207
  %65 = load %struct.comedi_lrange**, %struct.comedi_lrange*** %range_table_list, align 8, !dbg !9207
  %tobool48 = icmp ne %struct.comedi_lrange** %65, null, !dbg !9205
  br i1 %tobool48, label %if.then49, label %if.end52, !dbg !9208

if.then49:                                        ; preds = %if.end47
  %66 = load %struct.comedi_subdinfo*, %struct.comedi_subdinfo** %us, align 8, !dbg !9209
  %subd_flags50 = getelementptr inbounds %struct.comedi_subdinfo, %struct.comedi_subdinfo* %66, i32 0, i32 2, !dbg !9210
  %67 = load i32, i32* %subd_flags50, align 4, !dbg !9211
  %or51 = or i32 %67, 64, !dbg !9211
  store i32 %or51, i32* %subd_flags50, align 4, !dbg !9211
  br label %if.end52, !dbg !9209

if.end52:                                         ; preds = %if.then49, %if.end47
  %68 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9212
  %do_cmd = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %68, i32 0, i32 22, !dbg !9214
  %69 = load i32 (%struct.comedi_device*, %struct.comedi_subdevice*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %do_cmd, align 8, !dbg !9214
  %tobool53 = icmp ne i32 (%struct.comedi_device*, %struct.comedi_subdevice*)* %69, null, !dbg !9212
  br i1 %tobool53, label %if.then54, label %if.end57, !dbg !9215

if.then54:                                        ; preds = %if.end52
  %70 = load %struct.comedi_subdinfo*, %struct.comedi_subdinfo** %us, align 8, !dbg !9216
  %subd_flags55 = getelementptr inbounds %struct.comedi_subdinfo, %struct.comedi_subdinfo* %70, i32 0, i32 2, !dbg !9217
  %71 = load i32, i32* %subd_flags55, align 4, !dbg !9218
  %or56 = or i32 %71, 4096, !dbg !9218
  store i32 %or56, i32* %subd_flags55, align 4, !dbg !9218
  br label %if.end57, !dbg !9216

if.end57:                                         ; preds = %if.then54, %if.end52
  %72 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9219
  %insn_bits = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %72, i32 0, i32 20, !dbg !9221
  %73 = load i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_bits, align 8, !dbg !9221
  %cmp58 = icmp ne i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)* %73, @insn_inval, !dbg !9222
  br i1 %cmp58, label %if.then60, label %if.else61, !dbg !9223

if.then60:                                        ; preds = %if.end57
  %74 = load %struct.comedi_subdinfo*, %struct.comedi_subdinfo** %us, align 8, !dbg !9224
  %insn_bits_support = getelementptr inbounds %struct.comedi_subdinfo, %struct.comedi_subdinfo* %74, i32 0, i32 9, !dbg !9225
  store i32 1, i32* %insn_bits_support, align 4, !dbg !9226
  br label %if.end63, !dbg !9224

if.else61:                                        ; preds = %if.end57
  %75 = load %struct.comedi_subdinfo*, %struct.comedi_subdinfo** %us, align 8, !dbg !9227
  %insn_bits_support62 = getelementptr inbounds %struct.comedi_subdinfo, %struct.comedi_subdinfo* %75, i32 0, i32 9, !dbg !9228
  store i32 2, i32* %insn_bits_support62, align 4, !dbg !9229
  br label %if.end63

if.end63:                                         ; preds = %if.else61, %if.then60
  br label %for.inc, !dbg !9230

for.inc:                                          ; preds = %if.end63
  %76 = load i32, i32* %i, align 4, !dbg !9231
  %inc = add i32 %76, 1, !dbg !9231
  store i32 %inc, i32* %i, align 4, !dbg !9231
  br label %for.cond, !dbg !9232, !llvm.loop !9233

for.end:                                          ; preds = %for.cond
  %77 = load %struct.comedi_subdinfo*, %struct.comedi_subdinfo** %arg.addr, align 8, !dbg !9235
  %78 = bitcast %struct.comedi_subdinfo* %77 to i8*, !dbg !9235
  %79 = load %struct.comedi_subdinfo*, %struct.comedi_subdinfo** %tmp, align 8, !dbg !9236
  %80 = bitcast %struct.comedi_subdinfo* %79 to i8*, !dbg !9236
  %81 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9237
  %n_subdevices64 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %81, i32 0, i32 15, !dbg !9238
  %82 = load i32, i32* %n_subdevices64, align 4, !dbg !9238
  %conv65 = sext i32 %82 to i64, !dbg !9237
  %mul = mul i64 %conv65, 72, !dbg !9239
  store i8* %78, i8** %to.addr.i, align 8
  store i8* %80, i8** %from.addr.i, align 8
  store i64 %mul, i64* %n.addr.i, align 8
  %83 = load i8*, i8** %from.addr.i, align 8, !dbg !9240
  %84 = load i64, i64* %n.addr.i, align 8, !dbg !9240
  store i8* %83, i8** %addr.addr.i.i, align 8
  store i64 %84, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !9059
  %85 = load i32, i32* %sz.i.i, align 4, !dbg !9241
  %cmp.i.i = icmp sge i32 %85, 0, !dbg !9241
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !9241

land.rhs.i.i:                                     ; preds = %for.end
  %86 = load i32, i32* %sz.i.i, align 4, !dbg !9241
  %conv.i.i = sext i32 %86 to i64, !dbg !9241
  %87 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9241
  %cmp1.i.i = icmp ult i64 %conv.i.i, %87, !dbg !9241
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %for.end
  %88 = phi i1 [ false, %for.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !9242
  %lnot.i.i = xor i1 %88, true, !dbg !9241
  %lnot.ext.i.i = zext i1 %88 to i32, !dbg !9241
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9241
  br i1 %88, label %if.then.i.i, label %if.end10.i.i, !dbg !9243

if.then.i.i:                                      ; preds = %land.end.i.i
  %89 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9244
  %90 = call i1 @llvm.is.constant.i64(i64 %89) #9, !dbg !9245
  br i1 %90, label %if.else.i.i, label %if.then5.i.i, !dbg !9246

if.then5.i.i:                                     ; preds = %if.then.i.i
  %91 = load i32, i32* %sz.i.i, align 4, !dbg !9247
  %92 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9248
  call void @copy_overflow(i32 %91, i64 %92) #12, !dbg !9249
  br label %if.end9.i.i, !dbg !9249

if.else.i.i:                                      ; preds = %if.then.i.i
  %93 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !9250
  %tobool6.i.i = trunc i8 %93 to i1, !dbg !9250
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !9251

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #12, !dbg !9252
  br label %if.end.i.i, !dbg !9252

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #12, !dbg !9253
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !9254
  br label %check_copy_size.exit.i, !dbg !9254

if.end10.i.i:                                     ; preds = %land.end.i.i
  %94 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9060
  %cmp11.i.i = icmp ugt i64 %94, 2147483647, !dbg !9060
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !9060
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !9060
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !9060
  %95 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !9255
  %tobool17.i.i = icmp ne i32 %95, 0, !dbg !9255
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !9255
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !9255
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !9255
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !9060

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !9256, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !9257, !srcloc !6323
  br label %if.end31.i.i, !dbg !9258

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %96 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !9060
  %tobool32.i.i = icmp ne i32 %96, 0, !dbg !9060
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !9060
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !9060
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !9060
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !9255
  %97 = load i64, i64* %tmp.i.i, align 8, !dbg !9060
  %tobool38.i.i = icmp ne i64 %97, 0, !dbg !9259
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !9260

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !9261
  br label %check_copy_size.exit.i, !dbg !9261

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %98 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !9262
  %99 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9263
  %100 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !9264
  %tobool41.i.i = trunc i8 %100 to i1, !dbg !9264
  call void @check_object_size(i8* %98, i64 %99, i1 zeroext %tobool41.i.i) #12, !dbg !9265
  store i1 true, i1* %retval.i.i, align 1, !dbg !9266
  br label %check_copy_size.exit.i, !dbg !9266

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %101 = load i1, i1* %retval.i.i, align 1, !dbg !9267
  %lnot.i = xor i1 %101, true, !dbg !9240
  %lnot.ext.i = zext i1 %101 to i32, !dbg !9240
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !9240
  br i1 %101, label %if.then.i, label %copy_to_user.exit, !dbg !9268

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %102 = load i8*, i8** %to.addr.i, align 8, !dbg !9269
  %103 = load i8*, i8** %from.addr.i, align 8, !dbg !9270
  %104 = load i64, i64* %n.addr.i, align 8, !dbg !9271
  %call2.i = call i64 @_copy_to_user(i8* %102, i8* %103, i64 %104) #12, !dbg !9272
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !9273
  br label %copy_to_user.exit, !dbg !9274

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %105 = load i64, i64* %n.addr.i, align 8, !dbg !9275
  %conv67 = trunc i64 %105 to i32, !dbg !9276
  store i32 %conv67, i32* %ret, align 4, !dbg !9277
  %106 = load %struct.comedi_subdinfo*, %struct.comedi_subdinfo** %tmp, align 8, !dbg !9278
  %107 = bitcast %struct.comedi_subdinfo* %106 to i8*, !dbg !9278
  call void @kfree(i8* %107) #11, !dbg !9279
  %108 = load i32, i32* %ret, align 4, !dbg !9280
  %tobool68 = icmp ne i32 %108, 0, !dbg !9280
  %109 = zext i1 %tobool68 to i64, !dbg !9280
  %cond = select i1 %tobool68, i32 -14, i32 0, !dbg !9280
  store i32 %cond, i32* %retval, align 4, !dbg !9281
  br label %return, !dbg !9281

return:                                           ; preds = %copy_to_user.exit, %if.then
  %110 = load i32, i32* %retval, align 4, !dbg !9282
  ret i32 %110, !dbg !9282
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_chaninfo_ioctl(%struct.comedi_device* %dev, %struct.comedi_chaninfo* %it) #0 !dbg !9283 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !6011, metadata !DIExpression()), !dbg !9287
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !6027, metadata !DIExpression()), !dbg !9293
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !6029, metadata !DIExpression()), !dbg !9294
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !6031, metadata !DIExpression()), !dbg !9295
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !6033, metadata !DIExpression()), !dbg !9296
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6037, metadata !DIExpression()), !dbg !9297
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6039, metadata !DIExpression()), !dbg !9298
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6041, metadata !DIExpression()), !dbg !9299
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %it.addr = alloca %struct.comedi_chaninfo*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %i = alloca i32, align 4
  %x = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i32, align 4
  %tmp35 = alloca i64, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9300, metadata !DIExpression()), !dbg !9301
  store %struct.comedi_chaninfo* %it, %struct.comedi_chaninfo** %it.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_chaninfo** %it.addr, metadata !9302, metadata !DIExpression()), !dbg !9303
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !9304, metadata !DIExpression()), !dbg !9305
  br label %do.body, !dbg !9306

do.body:                                          ; preds = %entry
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9307
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 12, !dbg !9307
  br label %do.end, !dbg !9307

do.end:                                           ; preds = %do.body
  %1 = load %struct.comedi_chaninfo*, %struct.comedi_chaninfo** %it.addr, align 8, !dbg !9309
  %subdev = getelementptr inbounds %struct.comedi_chaninfo, %struct.comedi_chaninfo* %1, i32 0, i32 0, !dbg !9311
  %2 = load i32, i32* %subdev, align 8, !dbg !9311
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9312
  %n_subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 15, !dbg !9313
  %4 = load i32, i32* %n_subdevices, align 4, !dbg !9313
  %cmp = icmp uge i32 %2, %4, !dbg !9314
  br i1 %cmp, label %if.then, label %if.end, !dbg !9315

if.then:                                          ; preds = %do.end
  store i32 -22, i32* %retval, align 4, !dbg !9316
  br label %return, !dbg !9316

if.end:                                           ; preds = %do.end
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9317
  %subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %5, i32 0, i32 16, !dbg !9318
  %6 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices, align 8, !dbg !9318
  %7 = load %struct.comedi_chaninfo*, %struct.comedi_chaninfo** %it.addr, align 8, !dbg !9319
  %subdev1 = getelementptr inbounds %struct.comedi_chaninfo, %struct.comedi_chaninfo* %7, i32 0, i32 0, !dbg !9320
  %8 = load i32, i32* %subdev1, align 8, !dbg !9320
  %idxprom = zext i32 %8 to i64, !dbg !9317
  %arrayidx = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %6, i64 %idxprom, !dbg !9317
  store %struct.comedi_subdevice* %arrayidx, %struct.comedi_subdevice** %s, align 8, !dbg !9321
  %9 = load %struct.comedi_chaninfo*, %struct.comedi_chaninfo** %it.addr, align 8, !dbg !9322
  %maxdata_list = getelementptr inbounds %struct.comedi_chaninfo, %struct.comedi_chaninfo* %9, i32 0, i32 1, !dbg !9323
  %10 = load i32*, i32** %maxdata_list, align 8, !dbg !9323
  %tobool = icmp ne i32* %10, null, !dbg !9322
  br i1 %tobool, label %if.then2, label %if.end13, !dbg !9324

if.then2:                                         ; preds = %if.end
  %11 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9325
  %maxdata = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %11, i32 0, i32 13, !dbg !9327
  %12 = load i32, i32* %maxdata, align 8, !dbg !9327
  %tobool3 = icmp ne i32 %12, 0, !dbg !9325
  br i1 %tobool3, label %if.then6, label %lor.lhs.false, !dbg !9328

lor.lhs.false:                                    ; preds = %if.then2
  %13 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9329
  %maxdata_list4 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %13, i32 0, i32 14, !dbg !9330
  %14 = load i32*, i32** %maxdata_list4, align 8, !dbg !9330
  %tobool5 = icmp ne i32* %14, null, !dbg !9329
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !9331

if.then6:                                         ; preds = %lor.lhs.false, %if.then2
  store i32 -22, i32* %retval, align 4, !dbg !9332
  br label %return, !dbg !9332

if.end7:                                          ; preds = %lor.lhs.false
  %15 = load %struct.comedi_chaninfo*, %struct.comedi_chaninfo** %it.addr, align 8, !dbg !9333
  %maxdata_list8 = getelementptr inbounds %struct.comedi_chaninfo, %struct.comedi_chaninfo* %15, i32 0, i32 1, !dbg !9334
  %16 = load i32*, i32** %maxdata_list8, align 8, !dbg !9334
  %17 = bitcast i32* %16 to i8*, !dbg !9333
  %18 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9335
  %maxdata_list9 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %18, i32 0, i32 14, !dbg !9336
  %19 = load i32*, i32** %maxdata_list9, align 8, !dbg !9336
  %20 = bitcast i32* %19 to i8*, !dbg !9335
  %21 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9337
  %n_chan = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %21, i32 0, i32 3, !dbg !9338
  %22 = load i32, i32* %n_chan, align 8, !dbg !9338
  %conv = sext i32 %22 to i64, !dbg !9337
  %mul = mul i64 %conv, 4, !dbg !9339
  store i8* %17, i8** %to.addr.i, align 8
  store i8* %20, i8** %from.addr.i, align 8
  store i64 %mul, i64* %n.addr.i, align 8
  %23 = load i8*, i8** %from.addr.i, align 8, !dbg !9340
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !9340
  store i8* %23, i8** %addr.addr.i.i, align 8
  store i64 %24, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !9295
  %25 = load i32, i32* %sz.i.i, align 4, !dbg !9341
  %cmp.i.i = icmp sge i32 %25, 0, !dbg !9341
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !9341

land.rhs.i.i:                                     ; preds = %if.end7
  %26 = load i32, i32* %sz.i.i, align 4, !dbg !9341
  %conv.i.i = sext i32 %26 to i64, !dbg !9341
  %27 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9341
  %cmp1.i.i = icmp ult i64 %conv.i.i, %27, !dbg !9341
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end7
  %28 = phi i1 [ false, %if.end7 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !9342
  %lnot.i.i = xor i1 %28, true, !dbg !9341
  %lnot.ext.i.i = zext i1 %28 to i32, !dbg !9341
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9341
  br i1 %28, label %if.then.i.i, label %if.end10.i.i, !dbg !9343

if.then.i.i:                                      ; preds = %land.end.i.i
  %29 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9344
  %30 = call i1 @llvm.is.constant.i64(i64 %29) #9, !dbg !9345
  br i1 %30, label %if.else.i.i, label %if.then5.i.i, !dbg !9346

if.then5.i.i:                                     ; preds = %if.then.i.i
  %31 = load i32, i32* %sz.i.i, align 4, !dbg !9347
  %32 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9348
  call void @copy_overflow(i32 %31, i64 %32) #12, !dbg !9349
  br label %if.end9.i.i, !dbg !9349

if.else.i.i:                                      ; preds = %if.then.i.i
  %33 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !9350
  %tobool6.i.i = trunc i8 %33 to i1, !dbg !9350
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !9351

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #12, !dbg !9352
  br label %if.end.i.i, !dbg !9352

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #12, !dbg !9353
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !9354
  br label %check_copy_size.exit.i, !dbg !9354

if.end10.i.i:                                     ; preds = %land.end.i.i
  %34 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9296
  %cmp11.i.i = icmp ugt i64 %34, 2147483647, !dbg !9296
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !9296
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !9296
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !9296
  %35 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !9355
  %tobool17.i.i = icmp ne i32 %35, 0, !dbg !9355
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !9355
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !9355
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !9355
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !9296

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !9356, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !9357, !srcloc !6323
  br label %if.end31.i.i, !dbg !9358

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %36 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !9296
  %tobool32.i.i = icmp ne i32 %36, 0, !dbg !9296
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !9296
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !9296
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !9296
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !9355
  %37 = load i64, i64* %tmp.i.i, align 8, !dbg !9296
  %tobool38.i.i = icmp ne i64 %37, 0, !dbg !9359
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !9360

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !9361
  br label %check_copy_size.exit.i, !dbg !9361

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %38 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !9362
  %39 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9363
  %40 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !9364
  %tobool41.i.i = trunc i8 %40 to i1, !dbg !9364
  call void @check_object_size(i8* %38, i64 %39, i1 zeroext %tobool41.i.i) #12, !dbg !9365
  store i1 true, i1* %retval.i.i, align 1, !dbg !9366
  br label %check_copy_size.exit.i, !dbg !9366

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %41 = load i1, i1* %retval.i.i, align 1, !dbg !9367
  %lnot.i = xor i1 %41, true, !dbg !9340
  %lnot.ext.i = zext i1 %41 to i32, !dbg !9340
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !9340
  br i1 %41, label %if.then.i, label %copy_to_user.exit, !dbg !9368

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %42 = load i8*, i8** %to.addr.i, align 8, !dbg !9369
  %43 = load i8*, i8** %from.addr.i, align 8, !dbg !9370
  %44 = load i64, i64* %n.addr.i, align 8, !dbg !9371
  %call2.i = call i64 @_copy_to_user(i8* %42, i8* %43, i64 %44) #12, !dbg !9372
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !9373
  br label %copy_to_user.exit, !dbg !9374

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %45 = load i64, i64* %n.addr.i, align 8, !dbg !9375
  %tobool10 = icmp ne i64 %45, 0, !dbg !9376
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !9377

if.then11:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !9378
  br label %return, !dbg !9378

if.end12:                                         ; preds = %copy_to_user.exit
  br label %if.end13, !dbg !9379

if.end13:                                         ; preds = %if.end12, %if.end
  %46 = load %struct.comedi_chaninfo*, %struct.comedi_chaninfo** %it.addr, align 8, !dbg !9380
  %flaglist = getelementptr inbounds %struct.comedi_chaninfo, %struct.comedi_chaninfo* %46, i32 0, i32 2, !dbg !9382
  %47 = load i32*, i32** %flaglist, align 8, !dbg !9382
  %tobool14 = icmp ne i32* %47, null, !dbg !9380
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !9383

if.then15:                                        ; preds = %if.end13
  store i32 -22, i32* %retval, align 4, !dbg !9384
  br label %return, !dbg !9384

if.end16:                                         ; preds = %if.end13
  %48 = load %struct.comedi_chaninfo*, %struct.comedi_chaninfo** %it.addr, align 8, !dbg !9385
  %rangelist = getelementptr inbounds %struct.comedi_chaninfo, %struct.comedi_chaninfo* %48, i32 0, i32 3, !dbg !9387
  %49 = load i32*, i32** %rangelist, align 8, !dbg !9387
  %tobool17 = icmp ne i32* %49, null, !dbg !9385
  br i1 %tobool17, label %if.then18, label %if.end40, !dbg !9388

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9389, metadata !DIExpression()), !dbg !9391
  %50 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9392
  %range_table_list = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %50, i32 0, i32 16, !dbg !9394
  %51 = load %struct.comedi_lrange**, %struct.comedi_lrange*** %range_table_list, align 8, !dbg !9394
  %tobool19 = icmp ne %struct.comedi_lrange** %51, null, !dbg !9392
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !9395

if.then20:                                        ; preds = %if.then18
  store i32 -22, i32* %retval, align 4, !dbg !9396
  br label %return, !dbg !9396

if.end21:                                         ; preds = %if.then18
  store i32 0, i32* %i, align 4, !dbg !9397
  br label %for.cond, !dbg !9399

for.cond:                                         ; preds = %for.inc, %if.end21
  %52 = load i32, i32* %i, align 4, !dbg !9400
  %53 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9402
  %n_chan22 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %53, i32 0, i32 3, !dbg !9403
  %54 = load i32, i32* %n_chan22, align 8, !dbg !9403
  %cmp23 = icmp slt i32 %52, %54, !dbg !9404
  br i1 %cmp23, label %for.body, label %for.end, !dbg !9405

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9406, metadata !DIExpression()), !dbg !9408
  %55 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9409
  %minor = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %55, i32 0, i32 5, !dbg !9410
  %56 = load i32, i32* %minor, align 8, !dbg !9410
  %shl = shl i32 %56, 28, !dbg !9411
  %57 = load %struct.comedi_chaninfo*, %struct.comedi_chaninfo** %it.addr, align 8, !dbg !9412
  %subdev25 = getelementptr inbounds %struct.comedi_chaninfo, %struct.comedi_chaninfo* %57, i32 0, i32 0, !dbg !9413
  %58 = load i32, i32* %subdev25, align 8, !dbg !9413
  %shl26 = shl i32 %58, 24, !dbg !9414
  %or = or i32 %shl, %shl26, !dbg !9415
  %59 = load i32, i32* %i, align 4, !dbg !9416
  %shl27 = shl i32 %59, 16, !dbg !9417
  %or28 = or i32 %or, %shl27, !dbg !9418
  %60 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9419
  %range_table_list29 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %60, i32 0, i32 16, !dbg !9420
  %61 = load %struct.comedi_lrange**, %struct.comedi_lrange*** %range_table_list29, align 8, !dbg !9420
  %62 = load i32, i32* %i, align 4, !dbg !9421
  %idxprom30 = sext i32 %62 to i64, !dbg !9419
  %arrayidx31 = getelementptr %struct.comedi_lrange*, %struct.comedi_lrange** %61, i64 %idxprom30, !dbg !9419
  %63 = load %struct.comedi_lrange*, %struct.comedi_lrange** %arrayidx31, align 8, !dbg !9419
  %length = getelementptr inbounds %struct.comedi_lrange, %struct.comedi_lrange* %63, i32 0, i32 0, !dbg !9422
  %64 = load i32, i32* %length, align 4, !dbg !9422
  %or32 = or i32 %or28, %64, !dbg !9423
  store i32 %or32, i32* %x, align 4, !dbg !9424
  call void @might_fault() #11, !dbg !9425
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !9428, metadata !DIExpression()), !dbg !9430
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !9431, metadata !DIExpression()), !dbg !9430
  call void @llvm.dbg.declare(metadata i32* %__val_pu, metadata !9432, metadata !DIExpression()), !dbg !9430
  %65 = load %struct.comedi_chaninfo*, %struct.comedi_chaninfo** %it.addr, align 8, !dbg !9430
  %rangelist33 = getelementptr inbounds %struct.comedi_chaninfo, %struct.comedi_chaninfo* %65, i32 0, i32 3, !dbg !9430
  %66 = load i32*, i32** %rangelist33, align 8, !dbg !9430
  %67 = load i32, i32* %i, align 4, !dbg !9430
  %idx.ext = sext i32 %67 to i64, !dbg !9430
  %add.ptr = getelementptr i32, i32* %66, i64 %idx.ext, !dbg !9430
  %68 = bitcast i32* %add.ptr to i8*, !dbg !9430
  store i8* %68, i8** %__ptr_pu, align 8, !dbg !9430
  %69 = load i32, i32* %x, align 4, !dbg !9430
  store i32 %69, i32* %__val_pu, align 4, !dbg !9430
  %70 = call i64 @llvm.read_register.i64(metadata !4267), !dbg !9430
  %71 = load i8*, i8** %__ptr_pu, align 8, !dbg !9430
  %72 = load i32, i32* %__val_pu, align 4, !dbg !9430
  %73 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %71, i32 %72, i64 4, i64 %70) #9, !dbg !9430, !srcloc !9433
  %asmresult = extractvalue { i8*, i64 } %73, 0, !dbg !9430
  %asmresult34 = extractvalue { i8*, i64 } %73, 1, !dbg !9430
  %74 = ptrtoint i8* %asmresult to i64, !dbg !9430
  %75 = trunc i64 %74 to i32, !dbg !9430
  store i32 %75, i32* %__ret_pu, align 4, !dbg !9430
  call void @llvm.write_register.i64(metadata !4267, i64 %asmresult34), !dbg !9430
  %76 = load i32, i32* %__ret_pu, align 4, !dbg !9430
  %conv36 = sext i32 %76 to i64, !dbg !9430
  store i64 %conv36, i64* %tmp35, align 8, !dbg !9430
  %77 = load i64, i64* %tmp35, align 8, !dbg !9430
  store i64 %77, i64* %tmp, align 8, !dbg !9425
  %78 = load i64, i64* %tmp, align 8, !dbg !9425
  %tobool37 = icmp ne i64 %78, 0, !dbg !9434
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !9435

if.then38:                                        ; preds = %for.body
  store i32 -14, i32* %retval, align 4, !dbg !9436
  br label %return, !dbg !9436

if.end39:                                         ; preds = %for.body
  br label %for.inc, !dbg !9437

for.inc:                                          ; preds = %if.end39
  %79 = load i32, i32* %i, align 4, !dbg !9438
  %inc = add i32 %79, 1, !dbg !9438
  store i32 %inc, i32* %i, align 4, !dbg !9438
  br label %for.cond, !dbg !9439, !llvm.loop !9440

for.end:                                          ; preds = %for.cond
  br label %if.end40, !dbg !9442

if.end40:                                         ; preds = %for.end, %if.end16
  store i32 0, i32* %retval, align 4, !dbg !9443
  br label %return, !dbg !9443

return:                                           ; preds = %if.end40, %if.then38, %if.then20, %if.then15, %if.then11, %if.then6, %if.then
  %80 = load i32, i32* %retval, align 4, !dbg !9444
  ret i32 %80, !dbg !9444
}

; Function Attrs: noredzone
declare dso_local i32 @do_rangeinfo_ioctl(%struct.comedi_device*, %struct.comedi_rangeinfo*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_bufinfo_ioctl(%struct.comedi_device* %dev, %struct.comedi_bufinfo* %arg, i8* %file) #0 !dbg !9445 {
entry:
  %retval.i.i67 = alloca i1, align 1
  %addr.addr.i.i68 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i68, metadata !6011, metadata !DIExpression()), !dbg !9448
  %bytes.addr.i.i69 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i69, metadata !6027, metadata !DIExpression()), !dbg !9452
  %is_source.addr.i.i70 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i70, metadata !6029, metadata !DIExpression()), !dbg !9453
  %sz.i.i71 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i71, metadata !6031, metadata !DIExpression()), !dbg !9454
  %__ret_warn_on.i.i72 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i72, metadata !6033, metadata !DIExpression()), !dbg !9455
  %tmp.i.i73 = alloca i64, align 8
  %to.addr.i74 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i74, metadata !6037, metadata !DIExpression()), !dbg !9456
  %from.addr.i75 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i75, metadata !6039, metadata !DIExpression()), !dbg !9457
  %n.addr.i76 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i76, metadata !6041, metadata !DIExpression()), !dbg !9458
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !6011, metadata !DIExpression()), !dbg !9459
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !6027, metadata !DIExpression()), !dbg !9463
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !6029, metadata !DIExpression()), !dbg !9464
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !6031, metadata !DIExpression()), !dbg !9465
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !6033, metadata !DIExpression()), !dbg !9466
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6520, metadata !DIExpression()), !dbg !9467
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6522, metadata !DIExpression()), !dbg !9468
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6524, metadata !DIExpression()), !dbg !9469
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %arg.addr = alloca %struct.comedi_bufinfo*, align 8
  %file.addr = alloca i8*, align 8
  %bi = alloca %struct.comedi_bufinfo, align 4
  %s = alloca %struct.comedi_subdevice*, align 8
  %async = alloca %struct.comedi_async*, align 8
  %runflags = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %become_nonbusy = alloca i8, align 1
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9470, metadata !DIExpression()), !dbg !9471
  store %struct.comedi_bufinfo* %arg, %struct.comedi_bufinfo** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_bufinfo** %arg.addr, metadata !9472, metadata !DIExpression()), !dbg !9473
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9474, metadata !DIExpression()), !dbg !9475
  call void @llvm.dbg.declare(metadata %struct.comedi_bufinfo* %bi, metadata !9476, metadata !DIExpression()), !dbg !9477
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !9478, metadata !DIExpression()), !dbg !9479
  call void @llvm.dbg.declare(metadata %struct.comedi_async** %async, metadata !9480, metadata !DIExpression()), !dbg !9481
  call void @llvm.dbg.declare(metadata i32* %runflags, metadata !9482, metadata !DIExpression()), !dbg !9483
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !9484, metadata !DIExpression()), !dbg !9485
  store i32 0, i32* %retval1, align 4, !dbg !9485
  call void @llvm.dbg.declare(metadata i8* %become_nonbusy, metadata !9486, metadata !DIExpression()), !dbg !9487
  store i8 0, i8* %become_nonbusy, align 1, !dbg !9487
  br label %do.body, !dbg !9488

do.body:                                          ; preds = %entry
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9489
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 12, !dbg !9489
  br label %do.end, !dbg !9489

do.end:                                           ; preds = %do.body
  %1 = bitcast %struct.comedi_bufinfo* %bi to i8*, !dbg !9491
  %2 = load %struct.comedi_bufinfo*, %struct.comedi_bufinfo** %arg.addr, align 8, !dbg !9492
  %3 = bitcast %struct.comedi_bufinfo* %2 to i8*, !dbg !9492
  store i8* %1, i8** %to.addr.i, align 8
  store i8* %3, i8** %from.addr.i, align 8
  store i64 44, i64* %n.addr.i, align 8
  %4 = load i8*, i8** %to.addr.i, align 8, !dbg !9493
  %5 = load i64, i64* %n.addr.i, align 8, !dbg !9493
  store i8* %4, i8** %addr.addr.i.i, align 8
  store i64 %5, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !9465
  %6 = load i32, i32* %sz.i.i, align 4, !dbg !9494
  %cmp.i.i = icmp sge i32 %6, 0, !dbg !9494
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !9494

land.rhs.i.i:                                     ; preds = %do.end
  %7 = load i32, i32* %sz.i.i, align 4, !dbg !9494
  %conv.i.i = sext i32 %7 to i64, !dbg !9494
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9494
  %cmp1.i.i = icmp ult i64 %conv.i.i, %8, !dbg !9494
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %do.end
  %9 = phi i1 [ false, %do.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !9495
  %lnot.i.i = xor i1 %9, true, !dbg !9494
  %lnot.ext.i.i = zext i1 %9 to i32, !dbg !9494
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9494
  br i1 %9, label %if.then.i.i, label %if.end10.i.i, !dbg !9496

if.then.i.i:                                      ; preds = %land.end.i.i
  %10 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9497
  %11 = call i1 @llvm.is.constant.i64(i64 %10) #9, !dbg !9498
  br i1 %11, label %if.else.i.i, label %if.then5.i.i, !dbg !9499

if.then5.i.i:                                     ; preds = %if.then.i.i
  %12 = load i32, i32* %sz.i.i, align 4, !dbg !9500
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9501
  call void @copy_overflow(i32 %12, i64 %13) #12, !dbg !9502
  br label %if.end9.i.i, !dbg !9502

if.else.i.i:                                      ; preds = %if.then.i.i
  %14 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !9503
  %tobool6.i.i = trunc i8 %14 to i1, !dbg !9503
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !9504

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #12, !dbg !9505
  br label %if.end.i.i, !dbg !9505

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #12, !dbg !9506
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !9507
  br label %check_copy_size.exit.i, !dbg !9507

if.end10.i.i:                                     ; preds = %land.end.i.i
  %15 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9466
  %cmp11.i.i = icmp ugt i64 %15, 2147483647, !dbg !9466
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !9466
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !9466
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !9466
  %16 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !9508
  %tobool17.i.i = icmp ne i32 %16, 0, !dbg !9508
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !9508
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !9508
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !9508
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !9466

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !9509, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !9510, !srcloc !6323
  br label %if.end31.i.i, !dbg !9511

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %17 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !9466
  %tobool32.i.i = icmp ne i32 %17, 0, !dbg !9466
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !9466
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !9466
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !9466
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !9508
  %18 = load i64, i64* %tmp.i.i, align 8, !dbg !9466
  %tobool38.i.i = icmp ne i64 %18, 0, !dbg !9512
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !9513

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !9514
  br label %check_copy_size.exit.i, !dbg !9514

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %19 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !9515
  %20 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9516
  %21 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !9517
  %tobool41.i.i = trunc i8 %21 to i1, !dbg !9517
  call void @check_object_size(i8* %19, i64 %20, i1 zeroext %tobool41.i.i) #12, !dbg !9518
  store i1 true, i1* %retval.i.i, align 1, !dbg !9519
  br label %check_copy_size.exit.i, !dbg !9519

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %22 = load i1, i1* %retval.i.i, align 1, !dbg !9520
  %lnot.i = xor i1 %22, true, !dbg !9493
  %lnot.ext.i = zext i1 %22 to i32, !dbg !9493
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !9493
  br i1 %22, label %if.then.i, label %copy_from_user.exit, !dbg !9521

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %23 = load i8*, i8** %to.addr.i, align 8, !dbg !9522
  %24 = load i8*, i8** %from.addr.i, align 8, !dbg !9523
  %25 = load i64, i64* %n.addr.i, align 8, !dbg !9524
  %call2.i = call i64 @_copy_from_user(i8* %23, i8* %24, i64 %25) #12, !dbg !9525
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !9526
  br label %copy_from_user.exit, !dbg !9527

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %26 = load i64, i64* %n.addr.i, align 8, !dbg !9528
  %tobool = icmp ne i64 %26, 0, !dbg !9529
  br i1 %tobool, label %if.then, label %if.end, !dbg !9530

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !9531
  br label %return, !dbg !9531

if.end:                                           ; preds = %copy_from_user.exit
  %subdevice = getelementptr inbounds %struct.comedi_bufinfo, %struct.comedi_bufinfo* %bi, i32 0, i32 0, !dbg !9532
  %27 = load i32, i32* %subdevice, align 4, !dbg !9532
  %28 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9534
  %n_subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %28, i32 0, i32 15, !dbg !9535
  %29 = load i32, i32* %n_subdevices, align 4, !dbg !9535
  %cmp = icmp uge i32 %27, %29, !dbg !9536
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !9537

if.then2:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !9538
  br label %return, !dbg !9538

if.end3:                                          ; preds = %if.end
  %30 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9539
  %subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %30, i32 0, i32 16, !dbg !9540
  %31 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices, align 8, !dbg !9540
  %subdevice4 = getelementptr inbounds %struct.comedi_bufinfo, %struct.comedi_bufinfo* %bi, i32 0, i32 0, !dbg !9541
  %32 = load i32, i32* %subdevice4, align 4, !dbg !9541
  %idxprom = zext i32 %32 to i64, !dbg !9539
  %arrayidx = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %31, i64 %idxprom, !dbg !9539
  store %struct.comedi_subdevice* %arrayidx, %struct.comedi_subdevice** %s, align 8, !dbg !9542
  %33 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9543
  %async5 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %33, i32 0, i32 7, !dbg !9544
  %34 = load %struct.comedi_async*, %struct.comedi_async** %async5, align 8, !dbg !9544
  store %struct.comedi_async* %34, %struct.comedi_async** %async, align 8, !dbg !9545
  %35 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !9546
  %tobool6 = icmp ne %struct.comedi_async* %35, null, !dbg !9546
  br i1 %tobool6, label %lor.lhs.false, label %if.then8, !dbg !9548

lor.lhs.false:                                    ; preds = %if.end3
  %36 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9549
  %busy = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %36, i32 0, i32 9, !dbg !9550
  %37 = load i8*, i8** %busy, align 8, !dbg !9550
  %38 = load i8*, i8** %file.addr, align 8, !dbg !9551
  %cmp7 = icmp ne i8* %37, %38, !dbg !9552
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !9553

if.then8:                                         ; preds = %lor.lhs.false, %if.end3
  store i32 -22, i32* %retval, align 4, !dbg !9554
  br label %return, !dbg !9554

if.end9:                                          ; preds = %lor.lhs.false
  %39 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9555
  %call10 = call i32 @comedi_get_subdevice_runflags(%struct.comedi_subdevice* %39) #11, !dbg !9556
  store i32 %call10, i32* %runflags, align 4, !dbg !9557
  %40 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !9558
  %cmd = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %40, i32 0, i32 17, !dbg !9560
  %flags = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %cmd, i32 0, i32 1, !dbg !9561
  %41 = load i32, i32* %flags, align 4, !dbg !9561
  %and = and i32 %41, 64, !dbg !9562
  %tobool11 = icmp ne i32 %and, 0, !dbg !9562
  br i1 %tobool11, label %if.else, label %if.then12, !dbg !9563

if.then12:                                        ; preds = %if.end9
  %bytes_read = getelementptr inbounds %struct.comedi_bufinfo, %struct.comedi_bufinfo* %bi, i32 0, i32 1, !dbg !9564
  %42 = load i32, i32* %bytes_read, align 4, !dbg !9564
  %tobool13 = icmp ne i32 %42, 0, !dbg !9567
  br i1 %tobool13, label %if.then14, label %if.end20, !dbg !9568

if.then14:                                        ; preds = %if.then12
  %43 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9569
  %bytes_read15 = getelementptr inbounds %struct.comedi_bufinfo, %struct.comedi_bufinfo* %bi, i32 0, i32 1, !dbg !9571
  %44 = load i32, i32* %bytes_read15, align 4, !dbg !9571
  %call16 = call i32 @comedi_buf_read_alloc(%struct.comedi_subdevice* %43, i32 %44) #11, !dbg !9572
  %45 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9573
  %bytes_read17 = getelementptr inbounds %struct.comedi_bufinfo, %struct.comedi_bufinfo* %bi, i32 0, i32 1, !dbg !9574
  %46 = load i32, i32* %bytes_read17, align 4, !dbg !9574
  %call18 = call i32 @comedi_buf_read_free(%struct.comedi_subdevice* %45, i32 %46) #11, !dbg !9575
  %bytes_read19 = getelementptr inbounds %struct.comedi_bufinfo, %struct.comedi_bufinfo* %bi, i32 0, i32 1, !dbg !9576
  store i32 %call18, i32* %bytes_read19, align 4, !dbg !9577
  br label %if.end20, !dbg !9578

if.end20:                                         ; preds = %if.then14, %if.then12
  %47 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9579
  %call21 = call i32 @comedi_buf_read_n_available(%struct.comedi_subdevice* %47) #11, !dbg !9581
  %cmp22 = icmp eq i32 %call21, 0, !dbg !9582
  br i1 %cmp22, label %land.lhs.true, label %if.end33, !dbg !9583

land.lhs.true:                                    ; preds = %if.end20
  %48 = load i32, i32* %runflags, align 4, !dbg !9584
  %call23 = call zeroext i1 @comedi_is_runflags_running(i32 %48) #11, !dbg !9585
  br i1 %call23, label %if.end33, label %land.lhs.true24, !dbg !9586

land.lhs.true24:                                  ; preds = %land.lhs.true
  %bytes_read25 = getelementptr inbounds %struct.comedi_bufinfo, %struct.comedi_bufinfo* %bi, i32 0, i32 1, !dbg !9587
  %49 = load i32, i32* %bytes_read25, align 4, !dbg !9587
  %cmp26 = icmp eq i32 %49, 0, !dbg !9588
  br i1 %cmp26, label %if.then29, label %lor.lhs.false27, !dbg !9589

lor.lhs.false27:                                  ; preds = %land.lhs.true24
  %50 = load i32, i32* %runflags, align 4, !dbg !9590
  %call28 = call zeroext i1 @comedi_is_runflags_in_error(i32 %50) #11, !dbg !9591
  br i1 %call28, label %if.end33, label %if.then29, !dbg !9592

if.then29:                                        ; preds = %lor.lhs.false27, %land.lhs.true24
  store i8 1, i8* %become_nonbusy, align 1, !dbg !9593
  %51 = load i32, i32* %runflags, align 4, !dbg !9595
  %call30 = call zeroext i1 @comedi_is_runflags_in_error(i32 %51) #11, !dbg !9597
  br i1 %call30, label %if.then31, label %if.end32, !dbg !9598

if.then31:                                        ; preds = %if.then29
  store i32 -32, i32* %retval1, align 4, !dbg !9599
  br label %if.end32, !dbg !9600

if.end32:                                         ; preds = %if.then31, %if.then29
  br label %if.end33, !dbg !9601

if.end33:                                         ; preds = %if.end32, %lor.lhs.false27, %land.lhs.true, %if.end20
  %bytes_written = getelementptr inbounds %struct.comedi_bufinfo, %struct.comedi_bufinfo* %bi, i32 0, i32 6, !dbg !9602
  store i32 0, i32* %bytes_written, align 4, !dbg !9603
  br label %if.end52, !dbg !9604

if.else:                                          ; preds = %if.end9
  %52 = load i32, i32* %runflags, align 4, !dbg !9605
  %call34 = call zeroext i1 @comedi_is_runflags_running(i32 %52) #11, !dbg !9608
  br i1 %call34, label %if.else40, label %if.then35, !dbg !9609

if.then35:                                        ; preds = %if.else
  %bytes_written36 = getelementptr inbounds %struct.comedi_bufinfo, %struct.comedi_bufinfo* %bi, i32 0, i32 6, !dbg !9610
  store i32 0, i32* %bytes_written36, align 4, !dbg !9612
  store i8 1, i8* %become_nonbusy, align 1, !dbg !9613
  %53 = load i32, i32* %runflags, align 4, !dbg !9614
  %call37 = call zeroext i1 @comedi_is_runflags_in_error(i32 %53) #11, !dbg !9616
  br i1 %call37, label %if.then38, label %if.end39, !dbg !9617

if.then38:                                        ; preds = %if.then35
  store i32 -32, i32* %retval1, align 4, !dbg !9618
  br label %if.end39, !dbg !9619

if.end39:                                         ; preds = %if.then38, %if.then35
  br label %if.end50, !dbg !9620

if.else40:                                        ; preds = %if.else
  %bytes_written41 = getelementptr inbounds %struct.comedi_bufinfo, %struct.comedi_bufinfo* %bi, i32 0, i32 6, !dbg !9621
  %54 = load i32, i32* %bytes_written41, align 4, !dbg !9621
  %tobool42 = icmp ne i32 %54, 0, !dbg !9623
  br i1 %tobool42, label %if.then43, label %if.end49, !dbg !9624

if.then43:                                        ; preds = %if.else40
  %55 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9625
  %bytes_written44 = getelementptr inbounds %struct.comedi_bufinfo, %struct.comedi_bufinfo* %bi, i32 0, i32 6, !dbg !9627
  %56 = load i32, i32* %bytes_written44, align 4, !dbg !9627
  %call45 = call i32 @comedi_buf_write_alloc(%struct.comedi_subdevice* %55, i32 %56) #11, !dbg !9628
  %57 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9629
  %bytes_written46 = getelementptr inbounds %struct.comedi_bufinfo, %struct.comedi_bufinfo* %bi, i32 0, i32 6, !dbg !9630
  %58 = load i32, i32* %bytes_written46, align 4, !dbg !9630
  %call47 = call i32 @comedi_buf_write_free(%struct.comedi_subdevice* %57, i32 %58) #11, !dbg !9631
  %bytes_written48 = getelementptr inbounds %struct.comedi_bufinfo, %struct.comedi_bufinfo* %bi, i32 0, i32 6, !dbg !9632
  store i32 %call47, i32* %bytes_written48, align 4, !dbg !9633
  br label %if.end49, !dbg !9634

if.end49:                                         ; preds = %if.then43, %if.else40
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.end39
  %bytes_read51 = getelementptr inbounds %struct.comedi_bufinfo, %struct.comedi_bufinfo* %bi, i32 0, i32 1, !dbg !9635
  store i32 0, i32* %bytes_read51, align 4, !dbg !9636
  br label %if.end52

if.end52:                                         ; preds = %if.end50, %if.end33
  %59 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !9637
  %buf_write_count = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %59, i32 0, i32 4, !dbg !9638
  %60 = load i32, i32* %buf_write_count, align 4, !dbg !9638
  %buf_write_count53 = getelementptr inbounds %struct.comedi_bufinfo, %struct.comedi_bufinfo* %bi, i32 0, i32 4, !dbg !9639
  store i32 %60, i32* %buf_write_count53, align 4, !dbg !9640
  %61 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !9641
  %buf_write_ptr = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %61, i32 0, i32 8, !dbg !9642
  %62 = load i32, i32* %buf_write_ptr, align 4, !dbg !9642
  %buf_write_ptr54 = getelementptr inbounds %struct.comedi_bufinfo, %struct.comedi_bufinfo* %bi, i32 0, i32 2, !dbg !9643
  store i32 %62, i32* %buf_write_ptr54, align 4, !dbg !9644
  %63 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !9645
  %buf_read_count = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %63, i32 0, i32 6, !dbg !9646
  %64 = load i32, i32* %buf_read_count, align 4, !dbg !9646
  %buf_read_count55 = getelementptr inbounds %struct.comedi_bufinfo, %struct.comedi_bufinfo* %bi, i32 0, i32 5, !dbg !9647
  store i32 %64, i32* %buf_read_count55, align 4, !dbg !9648
  %65 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !9649
  %buf_read_ptr = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %65, i32 0, i32 9, !dbg !9650
  %66 = load i32, i32* %buf_read_ptr, align 8, !dbg !9650
  %buf_read_ptr56 = getelementptr inbounds %struct.comedi_bufinfo, %struct.comedi_bufinfo* %bi, i32 0, i32 3, !dbg !9651
  store i32 %66, i32* %buf_read_ptr56, align 4, !dbg !9652
  %67 = load i8, i8* %become_nonbusy, align 1, !dbg !9653
  %tobool57 = trunc i8 %67 to i1, !dbg !9653
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !9655

if.then58:                                        ; preds = %if.end52
  %68 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9656
  %69 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9657
  call void @do_become_nonbusy(%struct.comedi_device* %68, %struct.comedi_subdevice* %69) #11, !dbg !9658
  br label %if.end59, !dbg !9658

if.end59:                                         ; preds = %if.then58, %if.end52
  %70 = load i32, i32* %retval1, align 4, !dbg !9659
  %tobool60 = icmp ne i32 %70, 0, !dbg !9659
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !9661

if.then61:                                        ; preds = %if.end59
  %71 = load i32, i32* %retval1, align 4, !dbg !9662
  store i32 %71, i32* %retval, align 4, !dbg !9663
  br label %return, !dbg !9663

if.end62:                                         ; preds = %if.end59
  %72 = load %struct.comedi_bufinfo*, %struct.comedi_bufinfo** %arg.addr, align 8, !dbg !9664
  %73 = bitcast %struct.comedi_bufinfo* %72 to i8*, !dbg !9664
  %74 = bitcast %struct.comedi_bufinfo* %bi to i8*, !dbg !9665
  store i8* %73, i8** %to.addr.i74, align 8
  store i8* %74, i8** %from.addr.i75, align 8
  store i64 44, i64* %n.addr.i76, align 8
  %75 = load i8*, i8** %from.addr.i75, align 8, !dbg !9666
  %76 = load i64, i64* %n.addr.i76, align 8, !dbg !9666
  store i8* %75, i8** %addr.addr.i.i68, align 8
  store i64 %76, i64* %bytes.addr.i.i69, align 8
  store i8 1, i8* %is_source.addr.i.i70, align 1
  store i32 -1, i32* %sz.i.i71, align 4, !dbg !9454
  %77 = load i32, i32* %sz.i.i71, align 4, !dbg !9667
  %cmp.i.i77 = icmp sge i32 %77, 0, !dbg !9667
  br i1 %cmp.i.i77, label %land.rhs.i.i80, label %land.end.i.i84, !dbg !9667

land.rhs.i.i80:                                   ; preds = %if.end62
  %78 = load i32, i32* %sz.i.i71, align 4, !dbg !9667
  %conv.i.i78 = sext i32 %78 to i64, !dbg !9667
  %79 = load i64, i64* %bytes.addr.i.i69, align 8, !dbg !9667
  %cmp1.i.i79 = icmp ult i64 %conv.i.i78, %79, !dbg !9667
  br label %land.end.i.i84

land.end.i.i84:                                   ; preds = %land.rhs.i.i80, %if.end62
  %80 = phi i1 [ false, %if.end62 ], [ %cmp1.i.i79, %land.rhs.i.i80 ], !dbg !9668
  %lnot.i.i81 = xor i1 %80, true, !dbg !9667
  %lnot.ext.i.i82 = zext i1 %80 to i32, !dbg !9667
  %conv4.i.i83 = sext i32 %lnot.ext.i.i82 to i64, !dbg !9667
  br i1 %80, label %if.then.i.i85, label %if.end10.i.i100, !dbg !9669

if.then.i.i85:                                    ; preds = %land.end.i.i84
  %81 = load i64, i64* %bytes.addr.i.i69, align 8, !dbg !9670
  %82 = call i1 @llvm.is.constant.i64(i64 %81) #9, !dbg !9671
  br i1 %82, label %if.else.i.i88, label %if.then5.i.i86, !dbg !9672

if.then5.i.i86:                                   ; preds = %if.then.i.i85
  %83 = load i32, i32* %sz.i.i71, align 4, !dbg !9673
  %84 = load i64, i64* %bytes.addr.i.i69, align 8, !dbg !9674
  call void @copy_overflow(i32 %83, i64 %84) #12, !dbg !9675
  br label %if.end9.i.i92, !dbg !9675

if.else.i.i88:                                    ; preds = %if.then.i.i85
  %85 = load i8, i8* %is_source.addr.i.i70, align 1, !dbg !9676
  %tobool6.i.i87 = trunc i8 %85 to i1, !dbg !9676
  br i1 %tobool6.i.i87, label %if.then7.i.i89, label %if.else8.i.i90, !dbg !9677

if.then7.i.i89:                                   ; preds = %if.else.i.i88
  call void @__bad_copy_from() #12, !dbg !9678
  br label %if.end.i.i91, !dbg !9678

if.else8.i.i90:                                   ; preds = %if.else.i.i88
  call void @__bad_copy_to() #12, !dbg !9679
  br label %if.end.i.i91

if.end.i.i91:                                     ; preds = %if.else8.i.i90, %if.then7.i.i89
  br label %if.end9.i.i92

if.end9.i.i92:                                    ; preds = %if.end.i.i91, %if.then5.i.i86
  store i1 false, i1* %retval.i.i67, align 1, !dbg !9680
  br label %check_copy_size.exit.i114, !dbg !9680

if.end10.i.i100:                                  ; preds = %land.end.i.i84
  %86 = load i64, i64* %bytes.addr.i.i69, align 8, !dbg !9455
  %cmp11.i.i93 = icmp ugt i64 %86, 2147483647, !dbg !9455
  %lnot13.i.i94 = xor i1 %cmp11.i.i93, true, !dbg !9455
  %lnot.ext16.i.i95 = zext i1 %cmp11.i.i93 to i32, !dbg !9455
  store i32 %lnot.ext16.i.i95, i32* %__ret_warn_on.i.i72, align 4, !dbg !9455
  %87 = load i32, i32* %__ret_warn_on.i.i72, align 4, !dbg !9681
  %tobool17.i.i96 = icmp ne i32 %87, 0, !dbg !9681
  %lnot18.i.i97 = xor i1 %tobool17.i.i96, true, !dbg !9681
  %lnot.ext21.i.i98 = zext i1 %tobool17.i.i96 to i32, !dbg !9681
  %conv22.i.i99 = sext i32 %lnot.ext21.i.i98 to i64, !dbg !9681
  br i1 %tobool17.i.i96, label %if.then24.i.i101, label %if.end31.i.i107, !dbg !9455

if.then24.i.i101:                                 ; preds = %if.end10.i.i100
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !9682, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !9683, !srcloc !6323
  br label %if.end31.i.i107, !dbg !9684

if.end31.i.i107:                                  ; preds = %if.then24.i.i101, %if.end10.i.i100
  %88 = load i32, i32* %__ret_warn_on.i.i72, align 4, !dbg !9455
  %tobool32.i.i102 = icmp ne i32 %88, 0, !dbg !9455
  %lnot33.i.i103 = xor i1 %tobool32.i.i102, true, !dbg !9455
  %lnot.ext36.i.i104 = zext i1 %tobool32.i.i102 to i32, !dbg !9455
  %conv37.i.i105 = sext i32 %lnot.ext36.i.i104 to i64, !dbg !9455
  store i64 %conv37.i.i105, i64* %tmp.i.i73, align 8, !dbg !9681
  %89 = load i64, i64* %tmp.i.i73, align 8, !dbg !9455
  %tobool38.i.i106 = icmp ne i64 %89, 0, !dbg !9685
  br i1 %tobool38.i.i106, label %if.then39.i.i108, label %if.end40.i.i110, !dbg !9686

if.then39.i.i108:                                 ; preds = %if.end31.i.i107
  store i1 false, i1* %retval.i.i67, align 1, !dbg !9687
  br label %check_copy_size.exit.i114, !dbg !9687

if.end40.i.i110:                                  ; preds = %if.end31.i.i107
  %90 = load i8*, i8** %addr.addr.i.i68, align 8, !dbg !9688
  %91 = load i64, i64* %bytes.addr.i.i69, align 8, !dbg !9689
  %92 = load i8, i8* %is_source.addr.i.i70, align 1, !dbg !9690
  %tobool41.i.i109 = trunc i8 %92 to i1, !dbg !9690
  call void @check_object_size(i8* %90, i64 %91, i1 zeroext %tobool41.i.i109) #12, !dbg !9691
  store i1 true, i1* %retval.i.i67, align 1, !dbg !9692
  br label %check_copy_size.exit.i114, !dbg !9692

check_copy_size.exit.i114:                        ; preds = %if.end40.i.i110, %if.then39.i.i108, %if.end9.i.i92
  %93 = load i1, i1* %retval.i.i67, align 1, !dbg !9693
  %lnot.i111 = xor i1 %93, true, !dbg !9666
  %lnot.ext.i112 = zext i1 %93 to i32, !dbg !9666
  %conv.i113 = sext i32 %lnot.ext.i112 to i64, !dbg !9666
  br i1 %93, label %if.then.i116, label %copy_to_user.exit, !dbg !9694

if.then.i116:                                     ; preds = %check_copy_size.exit.i114
  %94 = load i8*, i8** %to.addr.i74, align 8, !dbg !9695
  %95 = load i8*, i8** %from.addr.i75, align 8, !dbg !9696
  %96 = load i64, i64* %n.addr.i76, align 8, !dbg !9697
  %call2.i115 = call i64 @_copy_to_user(i8* %94, i8* %95, i64 %96) #12, !dbg !9698
  store i64 %call2.i115, i64* %n.addr.i76, align 8, !dbg !9699
  br label %copy_to_user.exit, !dbg !9700

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i114, %if.then.i116
  %97 = load i64, i64* %n.addr.i76, align 8, !dbg !9701
  %tobool64 = icmp ne i64 %97, 0, !dbg !9702
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !9703

if.then65:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !9704
  br label %return, !dbg !9704

if.end66:                                         ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !9705
  br label %return, !dbg !9705

return:                                           ; preds = %if.end66, %if.then65, %if.then61, %if.then8, %if.then2, %if.then
  %98 = load i32, i32* %retval, align 4, !dbg !9706
  ret i32 %98, !dbg !9706
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_lock_ioctl(%struct.comedi_device* %dev, i64 %arg, i8* %file) #0 !dbg !9707 {
entry:
  %lock.addr.i29 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i29, metadata !4393, metadata !DIExpression()), !dbg !9710
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4400, metadata !DIExpression()), !dbg !9712
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4402, metadata !DIExpression()), !dbg !9713
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %arg.addr = alloca i64, align 8
  %file.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %flags = alloca i64, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9720, metadata !DIExpression()), !dbg !9721
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !9722, metadata !DIExpression()), !dbg !9723
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9724, metadata !DIExpression()), !dbg !9725
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9726, metadata !DIExpression()), !dbg !9727
  store i32 0, i32* %ret, align 4, !dbg !9727
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9728, metadata !DIExpression()), !dbg !9729
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !9730, metadata !DIExpression()), !dbg !9731
  br label %do.body, !dbg !9732

do.body:                                          ; preds = %entry
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9733
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 12, !dbg !9733
  br label %do.end, !dbg !9733

do.end:                                           ; preds = %do.body
  %1 = load i64, i64* %arg.addr, align 8, !dbg !9735
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9737
  %n_subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %2, i32 0, i32 15, !dbg !9738
  %3 = load i32, i32* %n_subdevices, align 4, !dbg !9738
  %conv = sext i32 %3 to i64, !dbg !9737
  %cmp = icmp uge i64 %1, %conv, !dbg !9739
  br i1 %cmp, label %if.then, label %if.end, !dbg !9740

if.then:                                          ; preds = %do.end
  store i32 -22, i32* %retval, align 4, !dbg !9741
  br label %return, !dbg !9741

if.end:                                           ; preds = %do.end
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9742
  %subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %4, i32 0, i32 16, !dbg !9743
  %5 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices, align 8, !dbg !9743
  %6 = load i64, i64* %arg.addr, align 8, !dbg !9744
  %arrayidx = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %5, i64 %6, !dbg !9742
  store %struct.comedi_subdevice* %arrayidx, %struct.comedi_subdevice** %s, align 8, !dbg !9745
  br label %do.body2, !dbg !9746

do.body2:                                         ; preds = %if.end
  br label %do.body3, !dbg !9747

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9748, metadata !DIExpression()), !dbg !9750
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9751, metadata !DIExpression()), !dbg !9750
  %cmp4 = icmp eq i64* %__dummy, %__dummy2, !dbg !9750
  %conv5 = zext i1 %cmp4 to i32, !dbg !9750
  store i32 1, i32* %tmp, align 4, !dbg !9750
  %7 = load i32, i32* %tmp, align 4, !dbg !9750
  br label %do.body6, !dbg !9752

do.body6:                                         ; preds = %do.body3
  br label %do.body7, !dbg !9753

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !9754

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !9756, metadata !DIExpression()), !dbg !9759
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !9760, metadata !DIExpression()), !dbg !9759
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !9759
  %conv12 = zext i1 %cmp11 to i32, !dbg !9759
  store i32 1, i32* %tmp13, align 4, !dbg !9759
  %8 = load i32, i32* %tmp13, align 4, !dbg !9759
  %call = call i64 @arch_local_irq_save() #11, !dbg !9761
  store i64 %call, i64* %flags, align 8, !dbg !9761
  br label %do.end14, !dbg !9761

do.end14:                                         ; preds = %do.body8
  br label %do.end15, !dbg !9754

do.end15:                                         ; preds = %do.end14
  br label %do.body16, !dbg !9753

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !9762, !srcloc !9763
  br label %do.body17, !dbg !9762

do.body17:                                        ; preds = %do.body16
  %9 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9764
  %spin_lock = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %9, i32 0, i32 11, !dbg !9764
  store %struct.spinlock* %spin_lock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9765
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !9766
  %rlock.i = bitcast %union.anon.4* %11 to %struct.raw_spinlock*, !dbg !9766
  br label %do.end19, !dbg !9764

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !9762

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !9753

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !9752

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !9747

do.end23:                                         ; preds = %do.end22
  %12 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9767
  %busy = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %12, i32 0, i32 9, !dbg !9769
  %13 = load i8*, i8** %busy, align 8, !dbg !9769
  %tobool = icmp ne i8* %13, null, !dbg !9767
  br i1 %tobool, label %if.then25, label %lor.lhs.false, !dbg !9770

lor.lhs.false:                                    ; preds = %do.end23
  %14 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9771
  %lock = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %14, i32 0, i32 8, !dbg !9772
  %15 = load i8*, i8** %lock, align 8, !dbg !9772
  %tobool24 = icmp ne i8* %15, null, !dbg !9771
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !9773

if.then25:                                        ; preds = %lor.lhs.false, %do.end23
  store i32 -16, i32* %ret, align 4, !dbg !9774
  br label %if.end27, !dbg !9775

if.else:                                          ; preds = %lor.lhs.false
  %16 = load i8*, i8** %file.addr, align 8, !dbg !9776
  %17 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9777
  %lock26 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %17, i32 0, i32 8, !dbg !9778
  store i8* %16, i8** %lock26, align 8, !dbg !9779
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then25
  %18 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9780
  %spin_lock28 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %18, i32 0, i32 11, !dbg !9781
  %19 = load i64, i64* %flags, align 8, !dbg !9782
  store %struct.spinlock* %spin_lock28, %struct.spinlock** %lock.addr.i29, align 8
  store i64 %19, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !250, metadata !4447, metadata !DIExpression()) #9, !dbg !9783
  call void @llvm.dbg.declare(metadata !250, metadata !4451, metadata !DIExpression()) #9, !dbg !9783
  store i32 1, i32* %tmp.i, align 4, !dbg !9783
  %20 = load i32, i32* %tmp.i, align 4, !dbg !9783
  call void @llvm.dbg.declare(metadata !250, metadata !4452, metadata !DIExpression()) #9, !dbg !9784
  call void @llvm.dbg.declare(metadata !250, metadata !4458, metadata !DIExpression()) #9, !dbg !9784
  store i32 1, i32* %tmp8.i, align 4, !dbg !9784
  %21 = load i32, i32* %tmp8.i, align 4, !dbg !9784
  %22 = load i64, i64* %flags.addr.i, align 8, !dbg !9785
  call void @arch_local_irq_restore(i64 %22) #12, !dbg !9785
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !9786, !srcloc !4462
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i29, align 8, !dbg !9787
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !9787
  %rlock.i30 = bitcast %union.anon.4* %24 to %struct.raw_spinlock*, !dbg !9787
  %25 = load i32, i32* %ret, align 4, !dbg !9788
  store i32 %25, i32* %retval, align 4, !dbg !9789
  br label %return, !dbg !9789

return:                                           ; preds = %if.end27, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !9790
  ret i32 %26, !dbg !9790
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_unlock_ioctl(%struct.comedi_device* %dev, i64 %arg, i8* %file) #0 !dbg !9791 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %arg.addr = alloca i64, align 8
  %file.addr = alloca i8*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9792, metadata !DIExpression()), !dbg !9793
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !9794, metadata !DIExpression()), !dbg !9795
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9796, metadata !DIExpression()), !dbg !9797
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !9798, metadata !DIExpression()), !dbg !9799
  br label %do.body, !dbg !9800

do.body:                                          ; preds = %entry
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9801
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 12, !dbg !9801
  br label %do.end, !dbg !9801

do.end:                                           ; preds = %do.body
  %1 = load i64, i64* %arg.addr, align 8, !dbg !9803
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9805
  %n_subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %2, i32 0, i32 15, !dbg !9806
  %3 = load i32, i32* %n_subdevices, align 4, !dbg !9806
  %conv = sext i32 %3 to i64, !dbg !9805
  %cmp = icmp uge i64 %1, %conv, !dbg !9807
  br i1 %cmp, label %if.then, label %if.end, !dbg !9808

if.then:                                          ; preds = %do.end
  store i32 -22, i32* %retval, align 4, !dbg !9809
  br label %return, !dbg !9809

if.end:                                           ; preds = %do.end
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9810
  %subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %4, i32 0, i32 16, !dbg !9811
  %5 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices, align 8, !dbg !9811
  %6 = load i64, i64* %arg.addr, align 8, !dbg !9812
  %arrayidx = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %5, i64 %6, !dbg !9810
  store %struct.comedi_subdevice* %arrayidx, %struct.comedi_subdevice** %s, align 8, !dbg !9813
  %7 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9814
  %busy = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %7, i32 0, i32 9, !dbg !9816
  %8 = load i8*, i8** %busy, align 8, !dbg !9816
  %tobool = icmp ne i8* %8, null, !dbg !9814
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !9817

if.then2:                                         ; preds = %if.end
  store i32 -16, i32* %retval, align 4, !dbg !9818
  br label %return, !dbg !9818

if.end3:                                          ; preds = %if.end
  %9 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9819
  %lock = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %9, i32 0, i32 8, !dbg !9821
  %10 = load i8*, i8** %lock, align 8, !dbg !9821
  %tobool4 = icmp ne i8* %10, null, !dbg !9819
  br i1 %tobool4, label %land.lhs.true, label %if.end9, !dbg !9822

land.lhs.true:                                    ; preds = %if.end3
  %11 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9823
  %lock5 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %11, i32 0, i32 8, !dbg !9824
  %12 = load i8*, i8** %lock5, align 8, !dbg !9824
  %13 = load i8*, i8** %file.addr, align 8, !dbg !9825
  %cmp6 = icmp ne i8* %12, %13, !dbg !9826
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !9827

if.then8:                                         ; preds = %land.lhs.true
  store i32 -13, i32* %retval, align 4, !dbg !9828
  br label %return, !dbg !9828

if.end9:                                          ; preds = %land.lhs.true, %if.end3
  %14 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9829
  %lock10 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %14, i32 0, i32 8, !dbg !9831
  %15 = load i8*, i8** %lock10, align 8, !dbg !9831
  %16 = load i8*, i8** %file.addr, align 8, !dbg !9832
  %cmp11 = icmp eq i8* %15, %16, !dbg !9833
  br i1 %cmp11, label %if.then13, label %if.end15, !dbg !9834

if.then13:                                        ; preds = %if.end9
  %17 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9835
  %lock14 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %17, i32 0, i32 8, !dbg !9836
  store i8* null, i8** %lock14, align 8, !dbg !9837
  br label %if.end15, !dbg !9835

if.end15:                                         ; preds = %if.then13, %if.end9
  store i32 0, i32* %retval, align 4, !dbg !9838
  br label %return, !dbg !9838

return:                                           ; preds = %if.end15, %if.then8, %if.then2, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !9839
  ret i32 %18, !dbg !9839
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_cancel_ioctl(%struct.comedi_device* %dev, i64 %arg, i8* %file) #0 !dbg !9840 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %arg.addr = alloca i64, align 8
  %file.addr = alloca i8*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9841, metadata !DIExpression()), !dbg !9842
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !9843, metadata !DIExpression()), !dbg !9844
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9845, metadata !DIExpression()), !dbg !9846
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !9847, metadata !DIExpression()), !dbg !9848
  br label %do.body, !dbg !9849

do.body:                                          ; preds = %entry
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9850
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 12, !dbg !9850
  br label %do.end, !dbg !9850

do.end:                                           ; preds = %do.body
  %1 = load i64, i64* %arg.addr, align 8, !dbg !9852
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9854
  %n_subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %2, i32 0, i32 15, !dbg !9855
  %3 = load i32, i32* %n_subdevices, align 4, !dbg !9855
  %conv = sext i32 %3 to i64, !dbg !9854
  %cmp = icmp uge i64 %1, %conv, !dbg !9856
  br i1 %cmp, label %if.then, label %if.end, !dbg !9857

if.then:                                          ; preds = %do.end
  store i32 -22, i32* %retval, align 4, !dbg !9858
  br label %return, !dbg !9858

if.end:                                           ; preds = %do.end
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9859
  %subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %4, i32 0, i32 16, !dbg !9860
  %5 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices, align 8, !dbg !9860
  %6 = load i64, i64* %arg.addr, align 8, !dbg !9861
  %arrayidx = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %5, i64 %6, !dbg !9859
  store %struct.comedi_subdevice* %arrayidx, %struct.comedi_subdevice** %s, align 8, !dbg !9862
  %7 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9863
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %7, i32 0, i32 7, !dbg !9865
  %8 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !9865
  %tobool = icmp ne %struct.comedi_async* %8, null, !dbg !9863
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !9866

if.then2:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !9867
  br label %return, !dbg !9867

if.end3:                                          ; preds = %if.end
  %9 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9868
  %busy = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %9, i32 0, i32 9, !dbg !9870
  %10 = load i8*, i8** %busy, align 8, !dbg !9870
  %tobool4 = icmp ne i8* %10, null, !dbg !9868
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !9871

if.then5:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !9872
  br label %return, !dbg !9872

if.end6:                                          ; preds = %if.end3
  %11 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9873
  %busy7 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %11, i32 0, i32 9, !dbg !9875
  %12 = load i8*, i8** %busy7, align 8, !dbg !9875
  %13 = load i8*, i8** %file.addr, align 8, !dbg !9876
  %cmp8 = icmp ne i8* %12, %13, !dbg !9877
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !9878

if.then10:                                        ; preds = %if.end6
  store i32 -16, i32* %retval, align 4, !dbg !9879
  br label %return, !dbg !9879

if.end11:                                         ; preds = %if.end6
  %14 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9880
  %15 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9881
  %call = call i32 @do_cancel(%struct.comedi_device* %14, %struct.comedi_subdevice* %15) #11, !dbg !9882
  store i32 %call, i32* %retval, align 4, !dbg !9883
  br label %return, !dbg !9883

return:                                           ; preds = %if.end11, %if.then10, %if.then5, %if.then2, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !9884
  ret i32 %16, !dbg !9884
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_cmd_ioctl(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd, i8* %copy, i8* %file) #0 !dbg !9885 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %copy.addr = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %async = alloca %struct.comedi_async*, align 8
  %user_chanlist = alloca i32*, align 8
  %ret = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !9888, metadata !DIExpression()), !dbg !9889
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !9890, metadata !DIExpression()), !dbg !9891
  store i8* %copy, i8** %copy.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %copy.addr, metadata !9892, metadata !DIExpression()), !dbg !9893
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9894, metadata !DIExpression()), !dbg !9895
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !9896, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.declare(metadata %struct.comedi_async** %async, metadata !9898, metadata !DIExpression()), !dbg !9899
  call void @llvm.dbg.declare(metadata i32** %user_chanlist, metadata !9900, metadata !DIExpression()), !dbg !9901
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9902, metadata !DIExpression()), !dbg !9903
  br label %do.body, !dbg !9904

do.body:                                          ; preds = %entry
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9905
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 12, !dbg !9905
  br label %do.end, !dbg !9905

do.end:                                           ; preds = %do.body
  %1 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9907
  %2 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9908
  %call = call i32 @__comedi_get_user_cmd(%struct.comedi_device* %1, %struct.comedi_cmd* %2) #11, !dbg !9909
  store i32 %call, i32* %ret, align 4, !dbg !9910
  %3 = load i32, i32* %ret, align 4, !dbg !9911
  %tobool = icmp ne i32 %3, 0, !dbg !9911
  br i1 %tobool, label %if.then, label %if.end, !dbg !9913

if.then:                                          ; preds = %do.end
  %4 = load i32, i32* %ret, align 4, !dbg !9914
  store i32 %4, i32* %retval, align 4, !dbg !9915
  br label %return, !dbg !9915

if.end:                                           ; preds = %do.end
  %5 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9916
  %chanlist = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %5, i32 0, i32 12, !dbg !9917
  %6 = load i32*, i32** %chanlist, align 8, !dbg !9917
  store i32* %6, i32** %user_chanlist, align 8, !dbg !9918
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9919
  %subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %7, i32 0, i32 16, !dbg !9920
  %8 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices, align 8, !dbg !9920
  %9 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9921
  %subdev = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %9, i32 0, i32 0, !dbg !9922
  %10 = load i32, i32* %subdev, align 8, !dbg !9922
  %idxprom = zext i32 %10 to i64, !dbg !9919
  %arrayidx = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %8, i64 %idxprom, !dbg !9919
  store %struct.comedi_subdevice* %arrayidx, %struct.comedi_subdevice** %s, align 8, !dbg !9923
  %11 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9924
  %async1 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %11, i32 0, i32 7, !dbg !9925
  %12 = load %struct.comedi_async*, %struct.comedi_async** %async1, align 8, !dbg !9925
  store %struct.comedi_async* %12, %struct.comedi_async** %async, align 8, !dbg !9926
  %13 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9927
  %lock = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %13, i32 0, i32 8, !dbg !9929
  %14 = load i8*, i8** %lock, align 8, !dbg !9929
  %tobool2 = icmp ne i8* %14, null, !dbg !9927
  br i1 %tobool2, label %land.lhs.true, label %if.end5, !dbg !9930

land.lhs.true:                                    ; preds = %if.end
  %15 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9931
  %lock3 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %15, i32 0, i32 8, !dbg !9932
  %16 = load i8*, i8** %lock3, align 8, !dbg !9932
  %17 = load i8*, i8** %file.addr, align 8, !dbg !9933
  %cmp = icmp ne i8* %16, %17, !dbg !9934
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !9935

if.then4:                                         ; preds = %land.lhs.true
  store i32 -13, i32* %retval, align 4, !dbg !9936
  br label %return, !dbg !9936

if.end5:                                          ; preds = %land.lhs.true, %if.end
  %18 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9938
  %busy = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %18, i32 0, i32 9, !dbg !9940
  %19 = load i8*, i8** %busy, align 8, !dbg !9940
  %tobool6 = icmp ne i8* %19, null, !dbg !9938
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !9941

if.then7:                                         ; preds = %if.end5
  store i32 -16, i32* %retval, align 4, !dbg !9942
  br label %return, !dbg !9942

if.end8:                                          ; preds = %if.end5
  %20 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9944
  %chanlist_len = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %20, i32 0, i32 13, !dbg !9946
  %21 = load i32, i32* %chanlist_len, align 8, !dbg !9946
  %cmp9 = icmp ult i32 %21, 1, !dbg !9947
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !9948

if.then10:                                        ; preds = %if.end8
  store i32 -22, i32* %retval, align 4, !dbg !9949
  br label %return, !dbg !9949

if.end11:                                         ; preds = %if.end8
  %22 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !9951
  %cmd12 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %22, i32 0, i32 17, !dbg !9952
  %23 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9953
  %24 = bitcast %struct.comedi_cmd* %cmd12 to i8*, !dbg !9954
  %25 = bitcast %struct.comedi_cmd* %23 to i8*, !dbg !9954
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 80, i1 false), !dbg !9954
  %26 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !9955
  %cmd13 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %26, i32 0, i32 17, !dbg !9956
  %data = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %cmd13, i32 0, i32 14, !dbg !9957
  store i16* null, i16** %data, align 8, !dbg !9958
  %27 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9959
  %28 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9960
  %29 = load i32*, i32** %user_chanlist, align 8, !dbg !9961
  %30 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !9962
  %cmd14 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %30, i32 0, i32 17, !dbg !9963
  %call15 = call i32 @__comedi_get_user_chanlist(%struct.comedi_device* %27, %struct.comedi_subdevice* %28, i32* %29, %struct.comedi_cmd* %cmd14) #11, !dbg !9964
  store i32 %call15, i32* %ret, align 4, !dbg !9965
  %31 = load i32, i32* %ret, align 4, !dbg !9966
  %tobool16 = icmp ne i32 %31, 0, !dbg !9966
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !9968

if.then17:                                        ; preds = %if.end11
  br label %cleanup, !dbg !9969

if.end18:                                         ; preds = %if.end11
  %32 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9970
  %do_cmdtest = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %32, i32 0, i32 23, !dbg !9971
  %33 = load i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_cmd*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_cmd*)** %do_cmdtest, align 8, !dbg !9971
  %34 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !9972
  %35 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !9973
  %36 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !9974
  %cmd19 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %36, i32 0, i32 17, !dbg !9975
  %call20 = call i32 %33(%struct.comedi_device* %34, %struct.comedi_subdevice* %35, %struct.comedi_cmd* %cmd19) #11, !dbg !9970
  store i32 %call20, i32* %ret, align 4, !dbg !9976
  %37 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !9977
  %cmd21 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %37, i32 0, i32 17, !dbg !9979
  %flags = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %cmd21, i32 0, i32 1, !dbg !9980
  %38 = load i32, i32* %flags, align 4, !dbg !9980
  %and = and i32 %38, 1, !dbg !9981
  %tobool22 = icmp ne i32 %and, 0, !dbg !9981
  br i1 %tobool22, label %if.then24, label %lor.lhs.false, !dbg !9982

lor.lhs.false:                                    ; preds = %if.end18
  %39 = load i32, i32* %ret, align 4, !dbg !9983
  %tobool23 = icmp ne i32 %39, 0, !dbg !9983
  br i1 %tobool23, label %if.then24, label %if.end28, !dbg !9984

if.then24:                                        ; preds = %lor.lhs.false, %if.end18
  %40 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9985
  %41 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !9987
  %cmd25 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %41, i32 0, i32 17, !dbg !9988
  %42 = bitcast %struct.comedi_cmd* %40 to i8*, !dbg !9988
  %43 = bitcast %struct.comedi_cmd* %cmd25 to i8*, !dbg !9988
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 80, i1 false), !dbg !9988
  %44 = load i32*, i32** %user_chanlist, align 8, !dbg !9989
  %45 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9990
  %chanlist26 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %45, i32 0, i32 12, !dbg !9991
  store i32* %44, i32** %chanlist26, align 8, !dbg !9992
  %46 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !9993
  %data27 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %46, i32 0, i32 14, !dbg !9994
  store i16* null, i16** %data27, align 8, !dbg !9995
  %47 = load i8*, i8** %copy.addr, align 8, !dbg !9996
  store i8 1, i8* %47, align 1, !dbg !9997
  store i32 -11, i32* %ret, align 4, !dbg !9998
  br label %cleanup, !dbg !9999

if.end28:                                         ; preds = %lor.lhs.false
  %48 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !10000
  %prealloc_bufsz = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %48, i32 0, i32 1, !dbg !10002
  %49 = load i32, i32* %prealloc_bufsz, align 8, !dbg !10002
  %tobool29 = icmp ne i32 %49, 0, !dbg !10000
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !10003

if.then30:                                        ; preds = %if.end28
  store i32 -12, i32* %ret, align 4, !dbg !10004
  br label %cleanup, !dbg !10006

if.end31:                                         ; preds = %if.end28
  %50 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !10007
  call void @comedi_buf_reset(%struct.comedi_subdevice* %50) #11, !dbg !10008
  %51 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !10009
  %cb_mask = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %51, i32 0, i32 19, !dbg !10010
  store i32 54, i32* %cb_mask, align 8, !dbg !10011
  %52 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !10012
  %cmd32 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %52, i32 0, i32 17, !dbg !10014
  %flags33 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %cmd32, i32 0, i32 1, !dbg !10015
  %53 = load i32, i32* %flags33, align 4, !dbg !10015
  %and34 = and i32 %53, 32, !dbg !10016
  %tobool35 = icmp ne i32 %and34, 0, !dbg !10016
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !10017

if.then36:                                        ; preds = %if.end31
  %54 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !10018
  %cb_mask37 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %54, i32 0, i32 19, !dbg !10019
  %55 = load i32, i32* %cb_mask37, align 8, !dbg !10020
  %or = or i32 %55, 1, !dbg !10020
  store i32 %or, i32* %cb_mask37, align 8, !dbg !10020
  br label %if.end38, !dbg !10018

if.end38:                                         ; preds = %if.then36, %if.end31
  %56 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !10021
  call void @comedi_update_subdevice_runflags(%struct.comedi_subdevice* %56, i32 134217732, i32 134217728) #11, !dbg !10022
  %57 = load i8*, i8** %file.addr, align 8, !dbg !10023
  %58 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !10024
  %busy39 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %58, i32 0, i32 9, !dbg !10025
  store i8* %57, i8** %busy39, align 8, !dbg !10026
  %59 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !10027
  %do_cmd = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %59, i32 0, i32 22, !dbg !10028
  %60 = load i32 (%struct.comedi_device*, %struct.comedi_subdevice*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %do_cmd, align 8, !dbg !10028
  %61 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10029
  %62 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !10030
  %call40 = call i32 %60(%struct.comedi_device* %61, %struct.comedi_subdevice* %62) #11, !dbg !10027
  store i32 %call40, i32* %ret, align 4, !dbg !10031
  %63 = load i32, i32* %ret, align 4, !dbg !10032
  %cmp41 = icmp eq i32 %63, 0, !dbg !10034
  br i1 %cmp41, label %if.then42, label %if.end43, !dbg !10035

if.then42:                                        ; preds = %if.end38
  store i32 0, i32* %retval, align 4, !dbg !10036
  br label %return, !dbg !10036

if.end43:                                         ; preds = %if.end38
  br label %cleanup, !dbg !10037

cleanup:                                          ; preds = %if.end43, %if.then30, %if.then24, %if.then17
  call void @llvm.dbg.label(metadata !10038), !dbg !10039
  %64 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10040
  %65 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !10041
  call void @do_become_nonbusy(%struct.comedi_device* %64, %struct.comedi_subdevice* %65) #11, !dbg !10042
  %66 = load i32, i32* %ret, align 4, !dbg !10043
  store i32 %66, i32* %retval, align 4, !dbg !10044
  br label %return, !dbg !10044

return:                                           ; preds = %cleanup, %if.then42, %if.then10, %if.then7, %if.then4, %if.then
  %67 = load i32, i32* %retval, align 4, !dbg !10045
  ret i32 %67, !dbg !10045
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_cmdtest_ioctl(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd, i8* %copy, i8* %file) #0 !dbg !10046 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %copy.addr = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %user_chanlist = alloca i32*, align 8
  %ret = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10047, metadata !DIExpression()), !dbg !10048
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !10049, metadata !DIExpression()), !dbg !10050
  store i8* %copy, i8** %copy.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %copy.addr, metadata !10051, metadata !DIExpression()), !dbg !10052
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10053, metadata !DIExpression()), !dbg !10054
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !10055, metadata !DIExpression()), !dbg !10056
  call void @llvm.dbg.declare(metadata i32** %user_chanlist, metadata !10057, metadata !DIExpression()), !dbg !10058
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10059, metadata !DIExpression()), !dbg !10060
  br label %do.body, !dbg !10061

do.body:                                          ; preds = %entry
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10062
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 12, !dbg !10062
  br label %do.end, !dbg !10062

do.end:                                           ; preds = %do.body
  %1 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10064
  %2 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10065
  %call = call i32 @__comedi_get_user_cmd(%struct.comedi_device* %1, %struct.comedi_cmd* %2) #11, !dbg !10066
  store i32 %call, i32* %ret, align 4, !dbg !10067
  %3 = load i32, i32* %ret, align 4, !dbg !10068
  %tobool = icmp ne i32 %3, 0, !dbg !10068
  br i1 %tobool, label %if.then, label %if.end, !dbg !10070

if.then:                                          ; preds = %do.end
  %4 = load i32, i32* %ret, align 4, !dbg !10071
  store i32 %4, i32* %retval, align 4, !dbg !10072
  br label %return, !dbg !10072

if.end:                                           ; preds = %do.end
  %5 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10073
  %chanlist = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %5, i32 0, i32 12, !dbg !10074
  %6 = load i32*, i32** %chanlist, align 8, !dbg !10074
  store i32* %6, i32** %user_chanlist, align 8, !dbg !10075
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10076
  %subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %7, i32 0, i32 16, !dbg !10077
  %8 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices, align 8, !dbg !10077
  %9 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10078
  %subdev = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %9, i32 0, i32 0, !dbg !10079
  %10 = load i32, i32* %subdev, align 8, !dbg !10079
  %idxprom = zext i32 %10 to i64, !dbg !10076
  %arrayidx = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %8, i64 %idxprom, !dbg !10076
  store %struct.comedi_subdevice* %arrayidx, %struct.comedi_subdevice** %s, align 8, !dbg !10080
  %11 = load i32*, i32** %user_chanlist, align 8, !dbg !10081
  %tobool1 = icmp ne i32* %11, null, !dbg !10081
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !10083

if.then2:                                         ; preds = %if.end
  %12 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10084
  %13 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !10086
  %14 = load i32*, i32** %user_chanlist, align 8, !dbg !10087
  %15 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10088
  %call3 = call i32 @__comedi_get_user_chanlist(%struct.comedi_device* %12, %struct.comedi_subdevice* %13, i32* %14, %struct.comedi_cmd* %15) #11, !dbg !10089
  store i32 %call3, i32* %ret, align 4, !dbg !10090
  %16 = load i32, i32* %ret, align 4, !dbg !10091
  %tobool4 = icmp ne i32 %16, 0, !dbg !10091
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !10093

if.then5:                                         ; preds = %if.then2
  %17 = load i32, i32* %ret, align 4, !dbg !10094
  store i32 %17, i32* %retval, align 4, !dbg !10095
  br label %return, !dbg !10095

if.end6:                                          ; preds = %if.then2
  br label %if.end7, !dbg !10096

if.end7:                                          ; preds = %if.end6, %if.end
  %18 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !10097
  %do_cmdtest = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %18, i32 0, i32 23, !dbg !10098
  %19 = load i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_cmd*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_cmd*)** %do_cmdtest, align 8, !dbg !10098
  %20 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10099
  %21 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !10100
  %22 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10101
  %call8 = call i32 %19(%struct.comedi_device* %20, %struct.comedi_subdevice* %21, %struct.comedi_cmd* %22) #11, !dbg !10097
  store i32 %call8, i32* %ret, align 4, !dbg !10102
  %23 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10103
  %chanlist9 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %23, i32 0, i32 12, !dbg !10104
  %24 = load i32*, i32** %chanlist9, align 8, !dbg !10104
  %25 = bitcast i32* %24 to i8*, !dbg !10103
  call void @kfree(i8* %25) #11, !dbg !10105
  %26 = load i32*, i32** %user_chanlist, align 8, !dbg !10106
  %27 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10107
  %chanlist10 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %27, i32 0, i32 12, !dbg !10108
  store i32* %26, i32** %chanlist10, align 8, !dbg !10109
  %28 = load i8*, i8** %copy.addr, align 8, !dbg !10110
  store i8 1, i8* %28, align 1, !dbg !10111
  %29 = load i32, i32* %ret, align 4, !dbg !10112
  store i32 %29, i32* %retval, align 4, !dbg !10113
  br label %return, !dbg !10113

return:                                           ; preds = %if.end7, %if.then5, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !10114
  ret i32 %30, !dbg !10114
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #0 !dbg !10115 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10118, metadata !DIExpression()), !dbg !10119
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10120, metadata !DIExpression()), !dbg !10121
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10122, metadata !DIExpression()), !dbg !10123
  %0 = load i64, i64* %n.addr, align 8, !dbg !10124
  %1 = load i64, i64* %size.addr, align 8, !dbg !10125
  %2 = load i32, i32* %flags.addr, align 4, !dbg !10126
  %or = or i32 %2, 256, !dbg !10127
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #11, !dbg !10128
  ret i8* %call, !dbg !10129
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_insnlist_ioctl(%struct.comedi_device* %dev, %struct.comedi_insn* %insns, i32 %n_insns, i8* %file) #0 !dbg !10130 {
entry:
  %pscr_ret__.i.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i.i, metadata !5994, metadata !DIExpression()), !dbg !10133
  %__vpp_verify.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i.i, metadata !6005, metadata !DIExpression()), !dbg !10141
  %pfo_val__.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i.i, metadata !6008, metadata !DIExpression()), !dbg !10142
  %tmp.i.i112 = alloca %struct.task_struct*, align 8
  %tmp1.i.i = alloca %struct.task_struct*, align 8
  %retval.i.i62 = alloca i1, align 1
  %addr.addr.i.i63 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i63, metadata !6011, metadata !DIExpression()), !dbg !10143
  %bytes.addr.i.i64 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i64, metadata !6027, metadata !DIExpression()), !dbg !10149
  %is_source.addr.i.i65 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i65, metadata !6029, metadata !DIExpression()), !dbg !10150
  %sz.i.i66 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i66, metadata !6031, metadata !DIExpression()), !dbg !10151
  %__ret_warn_on.i.i67 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i67, metadata !6033, metadata !DIExpression()), !dbg !10152
  %tmp.i.i68 = alloca i64, align 8
  %to.addr.i69 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i69, metadata !6037, metadata !DIExpression()), !dbg !10153
  %from.addr.i70 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i70, metadata !6039, metadata !DIExpression()), !dbg !10154
  %n.addr.i71 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i71, metadata !6041, metadata !DIExpression()), !dbg !10155
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !6011, metadata !DIExpression()), !dbg !10156
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !6027, metadata !DIExpression()), !dbg !10162
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !6029, metadata !DIExpression()), !dbg !10163
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !6031, metadata !DIExpression()), !dbg !10164
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !6033, metadata !DIExpression()), !dbg !10165
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6520, metadata !DIExpression()), !dbg !10166
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6522, metadata !DIExpression()), !dbg !10167
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6524, metadata !DIExpression()), !dbg !10168
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %insns.addr = alloca %struct.comedi_insn*, align 8
  %n_insns.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %data = alloca i32*, align 8
  %max_n_data_required = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %__UNIQUE_ID___x244 = alloca i32, align 4
  %__UNIQUE_ID___y245 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10169, metadata !DIExpression()), !dbg !10170
  store %struct.comedi_insn* %insns, %struct.comedi_insn** %insns.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insns.addr, metadata !10171, metadata !DIExpression()), !dbg !10172
  store i32 %n_insns, i32* %n_insns.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_insns.addr, metadata !10173, metadata !DIExpression()), !dbg !10174
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10175, metadata !DIExpression()), !dbg !10176
  call void @llvm.dbg.declare(metadata i32** %data, metadata !10177, metadata !DIExpression()), !dbg !10178
  store i32* null, i32** %data, align 8, !dbg !10178
  call void @llvm.dbg.declare(metadata i32* %max_n_data_required, metadata !10179, metadata !DIExpression()), !dbg !10180
  store i32 16, i32* %max_n_data_required, align 4, !dbg !10180
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10181, metadata !DIExpression()), !dbg !10182
  store i32 0, i32* %i, align 4, !dbg !10182
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10183, metadata !DIExpression()), !dbg !10184
  store i32 0, i32* %ret, align 4, !dbg !10184
  br label %do.body, !dbg !10185

do.body:                                          ; preds = %entry
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10186
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 12, !dbg !10186
  br label %do.end, !dbg !10186

do.end:                                           ; preds = %do.body
  store i32 0, i32* %i, align 4, !dbg !10188
  br label %for.cond, !dbg !10190

for.cond:                                         ; preds = %for.inc, %do.end
  %1 = load i32, i32* %i, align 4, !dbg !10191
  %2 = load i32, i32* %n_insns.addr, align 4, !dbg !10193
  %cmp = icmp ult i32 %1, %2, !dbg !10194
  br i1 %cmp, label %for.body, label %for.end, !dbg !10195

for.body:                                         ; preds = %for.cond
  %3 = load %struct.comedi_insn*, %struct.comedi_insn** %insns.addr, align 8, !dbg !10196
  %4 = load i32, i32* %i, align 4, !dbg !10199
  %idxprom = sext i32 %4 to i64, !dbg !10196
  %arrayidx = getelementptr %struct.comedi_insn, %struct.comedi_insn* %3, i64 %idxprom, !dbg !10196
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %arrayidx, i32 0, i32 1, !dbg !10200
  %5 = load i32, i32* %n, align 4, !dbg !10200
  %cmp1 = icmp ugt i32 %5, 65536, !dbg !10201
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10202

if.then:                                          ; preds = %for.body
  store i32 -22, i32* %ret, align 4, !dbg !10203
  br label %error, !dbg !10205

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x244, metadata !10206, metadata !DIExpression()), !dbg !10208
  %6 = load i32, i32* %max_n_data_required, align 4, !dbg !10208
  store i32 %6, i32* %__UNIQUE_ID___x244, align 4, !dbg !10208
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y245, metadata !10209, metadata !DIExpression()), !dbg !10208
  %7 = load %struct.comedi_insn*, %struct.comedi_insn** %insns.addr, align 8, !dbg !10208
  %8 = load i32, i32* %i, align 4, !dbg !10208
  %idxprom2 = sext i32 %8 to i64, !dbg !10208
  %arrayidx3 = getelementptr %struct.comedi_insn, %struct.comedi_insn* %7, i64 %idxprom2, !dbg !10208
  %n4 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %arrayidx3, i32 0, i32 1, !dbg !10208
  %9 = load i32, i32* %n4, align 4, !dbg !10208
  store i32 %9, i32* %__UNIQUE_ID___y245, align 4, !dbg !10208
  %10 = load i32, i32* %__UNIQUE_ID___x244, align 4, !dbg !10208
  %11 = load i32, i32* %__UNIQUE_ID___y245, align 4, !dbg !10208
  %cmp5 = icmp ugt i32 %10, %11, !dbg !10208
  br i1 %cmp5, label %cond.true, label %cond.false, !dbg !10208

cond.true:                                        ; preds = %if.end
  %12 = load i32, i32* %__UNIQUE_ID___x244, align 4, !dbg !10208
  br label %cond.end, !dbg !10208

cond.false:                                       ; preds = %if.end
  %13 = load i32, i32* %__UNIQUE_ID___y245, align 4, !dbg !10208
  br label %cond.end, !dbg !10208

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %12, %cond.true ], [ %13, %cond.false ], !dbg !10208
  store i32 %cond, i32* %tmp, align 4, !dbg !10208
  %14 = load i32, i32* %tmp, align 4, !dbg !10208
  store i32 %14, i32* %max_n_data_required, align 4, !dbg !10210
  br label %for.inc, !dbg !10211

for.inc:                                          ; preds = %cond.end
  %15 = load i32, i32* %i, align 4, !dbg !10212
  %inc = add i32 %15, 1, !dbg !10212
  store i32 %inc, i32* %i, align 4, !dbg !10212
  br label %for.cond, !dbg !10213, !llvm.loop !10214

for.end:                                          ; preds = %for.cond
  %16 = load i32, i32* %max_n_data_required, align 4, !dbg !10216
  %conv = zext i32 %16 to i64, !dbg !10216
  %call = call i8* @kmalloc_array(i64 %conv, i64 4, i32 3264) #11, !dbg !10217
  %17 = bitcast i8* %call to i32*, !dbg !10217
  store i32* %17, i32** %data, align 8, !dbg !10218
  %18 = load i32*, i32** %data, align 8, !dbg !10219
  %tobool = icmp ne i32* %18, null, !dbg !10219
  br i1 %tobool, label %if.end7, label %if.then6, !dbg !10221

if.then6:                                         ; preds = %for.end
  store i32 -12, i32* %ret, align 4, !dbg !10222
  br label %error, !dbg !10224

if.end7:                                          ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !10225
  br label %for.cond8, !dbg !10226

for.cond8:                                        ; preds = %for.inc55, %if.end7
  %19 = load i32, i32* %i, align 4, !dbg !10227
  %20 = load i32, i32* %n_insns.addr, align 4, !dbg !10228
  %cmp9 = icmp ult i32 %19, %20, !dbg !10229
  br i1 %cmp9, label %for.body11, label %for.end57, !dbg !10230

for.body11:                                       ; preds = %for.cond8
  %21 = load %struct.comedi_insn*, %struct.comedi_insn** %insns.addr, align 8, !dbg !10231
  %22 = load i32, i32* %i, align 4, !dbg !10232
  %idxprom12 = sext i32 %22 to i64, !dbg !10231
  %arrayidx13 = getelementptr %struct.comedi_insn, %struct.comedi_insn* %21, i64 %idxprom12, !dbg !10231
  %insn = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %arrayidx13, i32 0, i32 0, !dbg !10233
  %23 = load i32, i32* %insn, align 8, !dbg !10233
  %and = and i32 %23, 134217728, !dbg !10234
  %tobool14 = icmp ne i32 %and, 0, !dbg !10234
  br i1 %tobool14, label %if.then15, label %if.end27, !dbg !10235

if.then15:                                        ; preds = %for.body11
  %24 = load i32*, i32** %data, align 8, !dbg !10236
  %25 = bitcast i32* %24 to i8*, !dbg !10236
  %26 = load %struct.comedi_insn*, %struct.comedi_insn** %insns.addr, align 8, !dbg !10237
  %27 = load i32, i32* %i, align 4, !dbg !10238
  %idxprom16 = sext i32 %27 to i64, !dbg !10237
  %arrayidx17 = getelementptr %struct.comedi_insn, %struct.comedi_insn* %26, i64 %idxprom16, !dbg !10237
  %data18 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %arrayidx17, i32 0, i32 2, !dbg !10239
  %28 = load i32*, i32** %data18, align 8, !dbg !10239
  %29 = bitcast i32* %28 to i8*, !dbg !10237
  %30 = load %struct.comedi_insn*, %struct.comedi_insn** %insns.addr, align 8, !dbg !10240
  %31 = load i32, i32* %i, align 4, !dbg !10241
  %idxprom19 = sext i32 %31 to i64, !dbg !10240
  %arrayidx20 = getelementptr %struct.comedi_insn, %struct.comedi_insn* %30, i64 %idxprom19, !dbg !10240
  %n21 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %arrayidx20, i32 0, i32 1, !dbg !10242
  %32 = load i32, i32* %n21, align 4, !dbg !10242
  %conv22 = zext i32 %32 to i64, !dbg !10240
  %mul = mul i64 %conv22, 4, !dbg !10243
  store i8* %25, i8** %to.addr.i, align 8
  store i8* %29, i8** %from.addr.i, align 8
  store i64 %mul, i64* %n.addr.i, align 8
  %33 = load i8*, i8** %to.addr.i, align 8, !dbg !10244
  %34 = load i64, i64* %n.addr.i, align 8, !dbg !10244
  store i8* %33, i8** %addr.addr.i.i, align 8
  store i64 %34, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !10164
  %35 = load i32, i32* %sz.i.i, align 4, !dbg !10245
  %cmp.i.i = icmp sge i32 %35, 0, !dbg !10245
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !10245

land.rhs.i.i:                                     ; preds = %if.then15
  %36 = load i32, i32* %sz.i.i, align 4, !dbg !10245
  %conv.i.i = sext i32 %36 to i64, !dbg !10245
  %37 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10245
  %cmp1.i.i = icmp ult i64 %conv.i.i, %37, !dbg !10245
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.then15
  %38 = phi i1 [ false, %if.then15 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !10246
  %lnot.i.i = xor i1 %38, true, !dbg !10245
  %lnot.ext.i.i = zext i1 %38 to i32, !dbg !10245
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10245
  br i1 %38, label %if.then.i.i, label %if.end10.i.i, !dbg !10247

if.then.i.i:                                      ; preds = %land.end.i.i
  %39 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10248
  %40 = call i1 @llvm.is.constant.i64(i64 %39) #9, !dbg !10249
  br i1 %40, label %if.else.i.i, label %if.then5.i.i, !dbg !10250

if.then5.i.i:                                     ; preds = %if.then.i.i
  %41 = load i32, i32* %sz.i.i, align 4, !dbg !10251
  %42 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10252
  call void @copy_overflow(i32 %41, i64 %42) #12, !dbg !10253
  br label %if.end9.i.i, !dbg !10253

if.else.i.i:                                      ; preds = %if.then.i.i
  %43 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10254
  %tobool6.i.i = trunc i8 %43 to i1, !dbg !10254
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !10255

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #12, !dbg !10256
  br label %if.end.i.i, !dbg !10256

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #12, !dbg !10257
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !10258
  br label %check_copy_size.exit.i, !dbg !10258

if.end10.i.i:                                     ; preds = %land.end.i.i
  %44 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10165
  %cmp11.i.i = icmp ugt i64 %44, 2147483647, !dbg !10165
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !10165
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !10165
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !10165
  %45 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10259
  %tobool17.i.i = icmp ne i32 %45, 0, !dbg !10259
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !10259
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !10259
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !10259
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !10165

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !10260, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !10261, !srcloc !6323
  br label %if.end31.i.i, !dbg !10262

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %46 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10165
  %tobool32.i.i = icmp ne i32 %46, 0, !dbg !10165
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !10165
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !10165
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !10165
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !10259
  %47 = load i64, i64* %tmp.i.i, align 8, !dbg !10165
  %tobool38.i.i = icmp ne i64 %47, 0, !dbg !10263
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !10264

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !10265
  br label %check_copy_size.exit.i, !dbg !10265

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %48 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !10266
  %49 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10267
  %50 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10268
  %tobool41.i.i = trunc i8 %50 to i1, !dbg !10268
  call void @check_object_size(i8* %48, i64 %49, i1 zeroext %tobool41.i.i) #12, !dbg !10269
  store i1 true, i1* %retval.i.i, align 1, !dbg !10270
  br label %check_copy_size.exit.i, !dbg !10270

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %51 = load i1, i1* %retval.i.i, align 1, !dbg !10271
  %lnot.i = xor i1 %51, true, !dbg !10244
  %lnot.ext.i = zext i1 %51 to i32, !dbg !10244
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !10244
  br i1 %51, label %if.then.i, label %copy_from_user.exit, !dbg !10272

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %52 = load i8*, i8** %to.addr.i, align 8, !dbg !10273
  %53 = load i8*, i8** %from.addr.i, align 8, !dbg !10274
  %54 = load i64, i64* %n.addr.i, align 8, !dbg !10275
  %call2.i = call i64 @_copy_from_user(i8* %52, i8* %53, i64 %54) #12, !dbg !10276
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !10277
  br label %copy_from_user.exit, !dbg !10278

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %55 = load i64, i64* %n.addr.i, align 8, !dbg !10279
  %tobool24 = icmp ne i64 %55, 0, !dbg !10280
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !10281

if.then25:                                        ; preds = %copy_from_user.exit
  store i32 -14, i32* %ret, align 4, !dbg !10282
  br label %error, !dbg !10284

if.end26:                                         ; preds = %copy_from_user.exit
  br label %if.end27, !dbg !10285

if.end27:                                         ; preds = %if.end26, %for.body11
  %56 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10286
  %57 = load %struct.comedi_insn*, %struct.comedi_insn** %insns.addr, align 8, !dbg !10287
  %58 = load i32, i32* %i, align 4, !dbg !10288
  %idx.ext = sext i32 %58 to i64, !dbg !10289
  %add.ptr = getelementptr %struct.comedi_insn, %struct.comedi_insn* %57, i64 %idx.ext, !dbg !10289
  %59 = load i32*, i32** %data, align 8, !dbg !10290
  %60 = load i8*, i8** %file.addr, align 8, !dbg !10291
  %call28 = call i32 @parse_insn(%struct.comedi_device* %56, %struct.comedi_insn* %add.ptr, i32* %59, i8* %60) #11, !dbg !10292
  store i32 %call28, i32* %ret, align 4, !dbg !10293
  %61 = load i32, i32* %ret, align 4, !dbg !10294
  %cmp29 = icmp slt i32 %61, 0, !dbg !10296
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !10297

if.then31:                                        ; preds = %if.end27
  br label %error, !dbg !10298

if.end32:                                         ; preds = %if.end27
  %62 = load %struct.comedi_insn*, %struct.comedi_insn** %insns.addr, align 8, !dbg !10299
  %63 = load i32, i32* %i, align 4, !dbg !10300
  %idxprom33 = sext i32 %63 to i64, !dbg !10299
  %arrayidx34 = getelementptr %struct.comedi_insn, %struct.comedi_insn* %62, i64 %idxprom33, !dbg !10299
  %insn35 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %arrayidx34, i32 0, i32 0, !dbg !10301
  %64 = load i32, i32* %insn35, align 8, !dbg !10301
  %and36 = and i32 %64, 67108864, !dbg !10302
  %tobool37 = icmp ne i32 %and36, 0, !dbg !10302
  br i1 %tobool37, label %if.then38, label %if.end51, !dbg !10303

if.then38:                                        ; preds = %if.end32
  %65 = load %struct.comedi_insn*, %struct.comedi_insn** %insns.addr, align 8, !dbg !10304
  %66 = load i32, i32* %i, align 4, !dbg !10305
  %idxprom39 = sext i32 %66 to i64, !dbg !10304
  %arrayidx40 = getelementptr %struct.comedi_insn, %struct.comedi_insn* %65, i64 %idxprom39, !dbg !10304
  %data41 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %arrayidx40, i32 0, i32 2, !dbg !10306
  %67 = load i32*, i32** %data41, align 8, !dbg !10306
  %68 = bitcast i32* %67 to i8*, !dbg !10304
  %69 = load i32*, i32** %data, align 8, !dbg !10307
  %70 = bitcast i32* %69 to i8*, !dbg !10307
  %71 = load %struct.comedi_insn*, %struct.comedi_insn** %insns.addr, align 8, !dbg !10308
  %72 = load i32, i32* %i, align 4, !dbg !10309
  %idxprom42 = sext i32 %72 to i64, !dbg !10308
  %arrayidx43 = getelementptr %struct.comedi_insn, %struct.comedi_insn* %71, i64 %idxprom42, !dbg !10308
  %n44 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %arrayidx43, i32 0, i32 1, !dbg !10310
  %73 = load i32, i32* %n44, align 4, !dbg !10310
  %conv45 = zext i32 %73 to i64, !dbg !10308
  %mul46 = mul i64 %conv45, 4, !dbg !10311
  store i8* %68, i8** %to.addr.i69, align 8
  store i8* %70, i8** %from.addr.i70, align 8
  store i64 %mul46, i64* %n.addr.i71, align 8
  %74 = load i8*, i8** %from.addr.i70, align 8, !dbg !10312
  %75 = load i64, i64* %n.addr.i71, align 8, !dbg !10312
  store i8* %74, i8** %addr.addr.i.i63, align 8
  store i64 %75, i64* %bytes.addr.i.i64, align 8
  store i8 1, i8* %is_source.addr.i.i65, align 1
  store i32 -1, i32* %sz.i.i66, align 4, !dbg !10151
  %76 = load i32, i32* %sz.i.i66, align 4, !dbg !10313
  %cmp.i.i72 = icmp sge i32 %76, 0, !dbg !10313
  br i1 %cmp.i.i72, label %land.rhs.i.i75, label %land.end.i.i79, !dbg !10313

land.rhs.i.i75:                                   ; preds = %if.then38
  %77 = load i32, i32* %sz.i.i66, align 4, !dbg !10313
  %conv.i.i73 = sext i32 %77 to i64, !dbg !10313
  %78 = load i64, i64* %bytes.addr.i.i64, align 8, !dbg !10313
  %cmp1.i.i74 = icmp ult i64 %conv.i.i73, %78, !dbg !10313
  br label %land.end.i.i79

land.end.i.i79:                                   ; preds = %land.rhs.i.i75, %if.then38
  %79 = phi i1 [ false, %if.then38 ], [ %cmp1.i.i74, %land.rhs.i.i75 ], !dbg !10314
  %lnot.i.i76 = xor i1 %79, true, !dbg !10313
  %lnot.ext.i.i77 = zext i1 %79 to i32, !dbg !10313
  %conv4.i.i78 = sext i32 %lnot.ext.i.i77 to i64, !dbg !10313
  br i1 %79, label %if.then.i.i80, label %if.end10.i.i95, !dbg !10315

if.then.i.i80:                                    ; preds = %land.end.i.i79
  %80 = load i64, i64* %bytes.addr.i.i64, align 8, !dbg !10316
  %81 = call i1 @llvm.is.constant.i64(i64 %80) #9, !dbg !10317
  br i1 %81, label %if.else.i.i83, label %if.then5.i.i81, !dbg !10318

if.then5.i.i81:                                   ; preds = %if.then.i.i80
  %82 = load i32, i32* %sz.i.i66, align 4, !dbg !10319
  %83 = load i64, i64* %bytes.addr.i.i64, align 8, !dbg !10320
  call void @copy_overflow(i32 %82, i64 %83) #12, !dbg !10321
  br label %if.end9.i.i87, !dbg !10321

if.else.i.i83:                                    ; preds = %if.then.i.i80
  %84 = load i8, i8* %is_source.addr.i.i65, align 1, !dbg !10322
  %tobool6.i.i82 = trunc i8 %84 to i1, !dbg !10322
  br i1 %tobool6.i.i82, label %if.then7.i.i84, label %if.else8.i.i85, !dbg !10323

if.then7.i.i84:                                   ; preds = %if.else.i.i83
  call void @__bad_copy_from() #12, !dbg !10324
  br label %if.end.i.i86, !dbg !10324

if.else8.i.i85:                                   ; preds = %if.else.i.i83
  call void @__bad_copy_to() #12, !dbg !10325
  br label %if.end.i.i86

if.end.i.i86:                                     ; preds = %if.else8.i.i85, %if.then7.i.i84
  br label %if.end9.i.i87

if.end9.i.i87:                                    ; preds = %if.end.i.i86, %if.then5.i.i81
  store i1 false, i1* %retval.i.i62, align 1, !dbg !10326
  br label %check_copy_size.exit.i109, !dbg !10326

if.end10.i.i95:                                   ; preds = %land.end.i.i79
  %85 = load i64, i64* %bytes.addr.i.i64, align 8, !dbg !10152
  %cmp11.i.i88 = icmp ugt i64 %85, 2147483647, !dbg !10152
  %lnot13.i.i89 = xor i1 %cmp11.i.i88, true, !dbg !10152
  %lnot.ext16.i.i90 = zext i1 %cmp11.i.i88 to i32, !dbg !10152
  store i32 %lnot.ext16.i.i90, i32* %__ret_warn_on.i.i67, align 4, !dbg !10152
  %86 = load i32, i32* %__ret_warn_on.i.i67, align 4, !dbg !10327
  %tobool17.i.i91 = icmp ne i32 %86, 0, !dbg !10327
  %lnot18.i.i92 = xor i1 %tobool17.i.i91, true, !dbg !10327
  %lnot.ext21.i.i93 = zext i1 %tobool17.i.i91 to i32, !dbg !10327
  %conv22.i.i94 = sext i32 %lnot.ext21.i.i93 to i64, !dbg !10327
  br i1 %tobool17.i.i91, label %if.then24.i.i96, label %if.end31.i.i102, !dbg !10152

if.then24.i.i96:                                  ; preds = %if.end10.i.i95
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !10328, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !10329, !srcloc !6323
  br label %if.end31.i.i102, !dbg !10330

if.end31.i.i102:                                  ; preds = %if.then24.i.i96, %if.end10.i.i95
  %87 = load i32, i32* %__ret_warn_on.i.i67, align 4, !dbg !10152
  %tobool32.i.i97 = icmp ne i32 %87, 0, !dbg !10152
  %lnot33.i.i98 = xor i1 %tobool32.i.i97, true, !dbg !10152
  %lnot.ext36.i.i99 = zext i1 %tobool32.i.i97 to i32, !dbg !10152
  %conv37.i.i100 = sext i32 %lnot.ext36.i.i99 to i64, !dbg !10152
  store i64 %conv37.i.i100, i64* %tmp.i.i68, align 8, !dbg !10327
  %88 = load i64, i64* %tmp.i.i68, align 8, !dbg !10152
  %tobool38.i.i101 = icmp ne i64 %88, 0, !dbg !10331
  br i1 %tobool38.i.i101, label %if.then39.i.i103, label %if.end40.i.i105, !dbg !10332

if.then39.i.i103:                                 ; preds = %if.end31.i.i102
  store i1 false, i1* %retval.i.i62, align 1, !dbg !10333
  br label %check_copy_size.exit.i109, !dbg !10333

if.end40.i.i105:                                  ; preds = %if.end31.i.i102
  %89 = load i8*, i8** %addr.addr.i.i63, align 8, !dbg !10334
  %90 = load i64, i64* %bytes.addr.i.i64, align 8, !dbg !10335
  %91 = load i8, i8* %is_source.addr.i.i65, align 1, !dbg !10336
  %tobool41.i.i104 = trunc i8 %91 to i1, !dbg !10336
  call void @check_object_size(i8* %89, i64 %90, i1 zeroext %tobool41.i.i104) #12, !dbg !10337
  store i1 true, i1* %retval.i.i62, align 1, !dbg !10338
  br label %check_copy_size.exit.i109, !dbg !10338

check_copy_size.exit.i109:                        ; preds = %if.end40.i.i105, %if.then39.i.i103, %if.end9.i.i87
  %92 = load i1, i1* %retval.i.i62, align 1, !dbg !10339
  %lnot.i106 = xor i1 %92, true, !dbg !10312
  %lnot.ext.i107 = zext i1 %92 to i32, !dbg !10312
  %conv.i108 = sext i32 %lnot.ext.i107 to i64, !dbg !10312
  br i1 %92, label %if.then.i111, label %copy_to_user.exit, !dbg !10340

if.then.i111:                                     ; preds = %check_copy_size.exit.i109
  %93 = load i8*, i8** %to.addr.i69, align 8, !dbg !10341
  %94 = load i8*, i8** %from.addr.i70, align 8, !dbg !10342
  %95 = load i64, i64* %n.addr.i71, align 8, !dbg !10343
  %call2.i110 = call i64 @_copy_to_user(i8* %93, i8* %94, i64 %95) #12, !dbg !10344
  store i64 %call2.i110, i64* %n.addr.i71, align 8, !dbg !10345
  br label %copy_to_user.exit, !dbg !10346

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i109, %if.then.i111
  %96 = load i64, i64* %n.addr.i71, align 8, !dbg !10347
  %tobool48 = icmp ne i64 %96, 0, !dbg !10348
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !10349

if.then49:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %ret, align 4, !dbg !10350
  br label %error, !dbg !10352

if.end50:                                         ; preds = %copy_to_user.exit
  br label %if.end51, !dbg !10353

if.end51:                                         ; preds = %if.end50, %if.end32
  store i8* null, i8** %__vpp_verify.i.i, align 8, !dbg !10141
  %97 = load i8*, i8** %__vpp_verify.i.i, align 8, !dbg !10141
  %98 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #15, !dbg !10142, !srcloc !6111
  store i64 %98, i64* %pfo_val__.i.i, align 8, !dbg !10142
  %99 = load i64, i64* %pfo_val__.i.i, align 8, !dbg !10142
  %100 = inttoptr i64 %99 to %struct.task_struct*, !dbg !10142
  store %struct.task_struct* %100, %struct.task_struct** %tmp.i.i112, align 8, !dbg !10142
  %101 = load %struct.task_struct*, %struct.task_struct** %tmp.i.i112, align 8, !dbg !10142
  store %struct.task_struct* %101, %struct.task_struct** %pscr_ret__.i.i, align 8, !dbg !10133
  %102 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i.i, align 8, !dbg !10133
  store %struct.task_struct* %102, %struct.task_struct** %tmp1.i.i, align 8, !dbg !10133
  %103 = load %struct.task_struct*, %struct.task_struct** %tmp1.i.i, align 8, !dbg !10133
  %104 = bitcast %struct.task_struct* %103 to %struct.thread_info*, !dbg !10354
  %call1.i = call i32 @test_ti_thread_flag(%struct.thread_info* %104, i32 3) #12, !dbg !10354
  %tobool.i = icmp ne i32 %call1.i, 0, !dbg !10354
  %lnot.i113 = xor i1 %tobool.i, true, !dbg !10354
  %lnot.ext.i114 = zext i1 %tobool.i to i32, !dbg !10354
  %conv.i115 = sext i32 %lnot.ext.i114 to i64, !dbg !10354
  br i1 %tobool.i, label %if.then53, label %if.end54, !dbg !10355

if.then53:                                        ; preds = %if.end51
  call void @schedule() #11, !dbg !10356
  br label %if.end54, !dbg !10356

if.end54:                                         ; preds = %if.then53, %if.end51
  br label %for.inc55, !dbg !10357

for.inc55:                                        ; preds = %if.end54
  %105 = load i32, i32* %i, align 4, !dbg !10358
  %inc56 = add i32 %105, 1, !dbg !10358
  store i32 %inc56, i32* %i, align 4, !dbg !10358
  br label %for.cond8, !dbg !10359, !llvm.loop !10360

for.end57:                                        ; preds = %for.cond8
  br label %error, !dbg !10361

error:                                            ; preds = %for.end57, %if.then49, %if.then31, %if.then25, %if.then6, %if.then
  call void @llvm.dbg.label(metadata !10362), !dbg !10363
  %106 = load i32*, i32** %data, align 8, !dbg !10364
  %107 = bitcast i32* %106 to i8*, !dbg !10364
  call void @kfree(i8* %107) #11, !dbg !10365
  %108 = load i32, i32* %ret, align 4, !dbg !10366
  %cmp58 = icmp slt i32 %108, 0, !dbg !10368
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !10369

if.then60:                                        ; preds = %error
  %109 = load i32, i32* %ret, align 4, !dbg !10370
  store i32 %109, i32* %retval, align 4, !dbg !10371
  br label %return, !dbg !10371

if.end61:                                         ; preds = %error
  %110 = load i32, i32* %i, align 4, !dbg !10372
  store i32 %110, i32* %retval, align 4, !dbg !10373
  br label %return, !dbg !10373

return:                                           ; preds = %if.end61, %if.then60
  %111 = load i32, i32* %retval, align 4, !dbg !10374
  ret i32 %111, !dbg !10374
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_insn_ioctl(%struct.comedi_device* %dev, %struct.comedi_insn* %insn, i8* %file) #0 !dbg !10375 {
entry:
  %retval.i.i36 = alloca i1, align 1
  %addr.addr.i.i37 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i37, metadata !6011, metadata !DIExpression()), !dbg !10378
  %bytes.addr.i.i38 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i38, metadata !6027, metadata !DIExpression()), !dbg !10384
  %is_source.addr.i.i39 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i39, metadata !6029, metadata !DIExpression()), !dbg !10385
  %sz.i.i40 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i40, metadata !6031, metadata !DIExpression()), !dbg !10386
  %__ret_warn_on.i.i41 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i41, metadata !6033, metadata !DIExpression()), !dbg !10387
  %tmp.i.i42 = alloca i64, align 8
  %to.addr.i43 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i43, metadata !6037, metadata !DIExpression()), !dbg !10388
  %from.addr.i44 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i44, metadata !6039, metadata !DIExpression()), !dbg !10389
  %n.addr.i45 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i45, metadata !6041, metadata !DIExpression()), !dbg !10390
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !6011, metadata !DIExpression()), !dbg !10391
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !6027, metadata !DIExpression()), !dbg !10397
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !6029, metadata !DIExpression()), !dbg !10398
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !6031, metadata !DIExpression()), !dbg !10399
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !6033, metadata !DIExpression()), !dbg !10400
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6520, metadata !DIExpression()), !dbg !10401
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6522, metadata !DIExpression()), !dbg !10402
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6524, metadata !DIExpression()), !dbg !10403
  %dev.addr = alloca %struct.comedi_device*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %file.addr = alloca i8*, align 8
  %data = alloca i32*, align 8
  %n_data = alloca i32, align 4
  %ret = alloca i32, align 4
  %__UNIQUE_ID___x246 = alloca i32, align 4
  %__UNIQUE_ID___y247 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10404, metadata !DIExpression()), !dbg !10405
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !10406, metadata !DIExpression()), !dbg !10407
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10408, metadata !DIExpression()), !dbg !10409
  call void @llvm.dbg.declare(metadata i32** %data, metadata !10410, metadata !DIExpression()), !dbg !10411
  store i32* null, i32** %data, align 8, !dbg !10411
  call void @llvm.dbg.declare(metadata i32* %n_data, metadata !10412, metadata !DIExpression()), !dbg !10413
  store i32 16, i32* %n_data, align 4, !dbg !10413
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10414, metadata !DIExpression()), !dbg !10415
  store i32 0, i32* %ret, align 4, !dbg !10415
  br label %do.body, !dbg !10416

do.body:                                          ; preds = %entry
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10417
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 12, !dbg !10417
  br label %do.end, !dbg !10417

do.end:                                           ; preds = %do.body
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x246, metadata !10419, metadata !DIExpression()), !dbg !10421
  %1 = load i32, i32* %n_data, align 4, !dbg !10421
  store i32 %1, i32* %__UNIQUE_ID___x246, align 4, !dbg !10421
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y247, metadata !10422, metadata !DIExpression()), !dbg !10421
  %2 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10421
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %2, i32 0, i32 1, !dbg !10421
  %3 = load i32, i32* %n, align 4, !dbg !10421
  store i32 %3, i32* %__UNIQUE_ID___y247, align 4, !dbg !10421
  %4 = load i32, i32* %__UNIQUE_ID___x246, align 4, !dbg !10421
  %5 = load i32, i32* %__UNIQUE_ID___y247, align 4, !dbg !10421
  %cmp = icmp ugt i32 %4, %5, !dbg !10421
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10421

cond.true:                                        ; preds = %do.end
  %6 = load i32, i32* %__UNIQUE_ID___x246, align 4, !dbg !10421
  br label %cond.end, !dbg !10421

cond.false:                                       ; preds = %do.end
  %7 = load i32, i32* %__UNIQUE_ID___y247, align 4, !dbg !10421
  br label %cond.end, !dbg !10421

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !10421
  store i32 %cond, i32* %tmp, align 4, !dbg !10421
  %8 = load i32, i32* %tmp, align 4, !dbg !10421
  store i32 %8, i32* %n_data, align 4, !dbg !10423
  %9 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10424
  %n1 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %9, i32 0, i32 1, !dbg !10426
  %10 = load i32, i32* %n1, align 4, !dbg !10426
  %cmp2 = icmp ugt i32 %10, 65536, !dbg !10427
  br i1 %cmp2, label %if.then, label %if.end, !dbg !10428

if.then:                                          ; preds = %cond.end
  %11 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10429
  %n3 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %11, i32 0, i32 1, !dbg !10431
  store i32 65536, i32* %n3, align 4, !dbg !10432
  store i32 65536, i32* %n_data, align 4, !dbg !10433
  br label %if.end, !dbg !10434

if.end:                                           ; preds = %if.then, %cond.end
  %12 = load i32, i32* %n_data, align 4, !dbg !10435
  %conv = zext i32 %12 to i64, !dbg !10435
  %call = call i8* @kmalloc_array(i64 %conv, i64 4, i32 3264) #11, !dbg !10436
  %13 = bitcast i8* %call to i32*, !dbg !10436
  store i32* %13, i32** %data, align 8, !dbg !10437
  %14 = load i32*, i32** %data, align 8, !dbg !10438
  %tobool = icmp ne i32* %14, null, !dbg !10438
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !10440

if.then4:                                         ; preds = %if.end
  store i32 -12, i32* %ret, align 4, !dbg !10441
  br label %error, !dbg !10443

if.end5:                                          ; preds = %if.end
  %15 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10444
  %insn6 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %15, i32 0, i32 0, !dbg !10445
  %16 = load i32, i32* %insn6, align 8, !dbg !10445
  %and = and i32 %16, 134217728, !dbg !10446
  %tobool7 = icmp ne i32 %and, 0, !dbg !10446
  br i1 %tobool7, label %if.then8, label %if.end16, !dbg !10447

if.then8:                                         ; preds = %if.end5
  %17 = load i32*, i32** %data, align 8, !dbg !10448
  %18 = bitcast i32* %17 to i8*, !dbg !10448
  %19 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10449
  %data9 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %19, i32 0, i32 2, !dbg !10450
  %20 = load i32*, i32** %data9, align 8, !dbg !10450
  %21 = bitcast i32* %20 to i8*, !dbg !10449
  %22 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10451
  %n10 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %22, i32 0, i32 1, !dbg !10452
  %23 = load i32, i32* %n10, align 4, !dbg !10452
  %conv11 = zext i32 %23 to i64, !dbg !10451
  %mul = mul i64 %conv11, 4, !dbg !10453
  store i8* %18, i8** %to.addr.i, align 8
  store i8* %21, i8** %from.addr.i, align 8
  store i64 %mul, i64* %n.addr.i, align 8
  %24 = load i8*, i8** %to.addr.i, align 8, !dbg !10454
  %25 = load i64, i64* %n.addr.i, align 8, !dbg !10454
  store i8* %24, i8** %addr.addr.i.i, align 8
  store i64 %25, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !10399
  %26 = load i32, i32* %sz.i.i, align 4, !dbg !10455
  %cmp.i.i = icmp sge i32 %26, 0, !dbg !10455
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !10455

land.rhs.i.i:                                     ; preds = %if.then8
  %27 = load i32, i32* %sz.i.i, align 4, !dbg !10455
  %conv.i.i = sext i32 %27 to i64, !dbg !10455
  %28 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10455
  %cmp1.i.i = icmp ult i64 %conv.i.i, %28, !dbg !10455
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.then8
  %29 = phi i1 [ false, %if.then8 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !10456
  %lnot.i.i = xor i1 %29, true, !dbg !10455
  %lnot.ext.i.i = zext i1 %29 to i32, !dbg !10455
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10455
  br i1 %29, label %if.then.i.i, label %if.end10.i.i, !dbg !10457

if.then.i.i:                                      ; preds = %land.end.i.i
  %30 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10458
  %31 = call i1 @llvm.is.constant.i64(i64 %30) #9, !dbg !10459
  br i1 %31, label %if.else.i.i, label %if.then5.i.i, !dbg !10460

if.then5.i.i:                                     ; preds = %if.then.i.i
  %32 = load i32, i32* %sz.i.i, align 4, !dbg !10461
  %33 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10462
  call void @copy_overflow(i32 %32, i64 %33) #12, !dbg !10463
  br label %if.end9.i.i, !dbg !10463

if.else.i.i:                                      ; preds = %if.then.i.i
  %34 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10464
  %tobool6.i.i = trunc i8 %34 to i1, !dbg !10464
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !10465

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #12, !dbg !10466
  br label %if.end.i.i, !dbg !10466

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #12, !dbg !10467
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !10468
  br label %check_copy_size.exit.i, !dbg !10468

if.end10.i.i:                                     ; preds = %land.end.i.i
  %35 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10400
  %cmp11.i.i = icmp ugt i64 %35, 2147483647, !dbg !10400
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !10400
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !10400
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !10400
  %36 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10469
  %tobool17.i.i = icmp ne i32 %36, 0, !dbg !10469
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !10469
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !10469
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !10469
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !10400

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !10470, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !10471, !srcloc !6323
  br label %if.end31.i.i, !dbg !10472

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %37 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10400
  %tobool32.i.i = icmp ne i32 %37, 0, !dbg !10400
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !10400
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !10400
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !10400
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !10469
  %38 = load i64, i64* %tmp.i.i, align 8, !dbg !10400
  %tobool38.i.i = icmp ne i64 %38, 0, !dbg !10473
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !10474

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !10475
  br label %check_copy_size.exit.i, !dbg !10475

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %39 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !10476
  %40 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10477
  %41 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10478
  %tobool41.i.i = trunc i8 %41 to i1, !dbg !10478
  call void @check_object_size(i8* %39, i64 %40, i1 zeroext %tobool41.i.i) #12, !dbg !10479
  store i1 true, i1* %retval.i.i, align 1, !dbg !10480
  br label %check_copy_size.exit.i, !dbg !10480

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %42 = load i1, i1* %retval.i.i, align 1, !dbg !10481
  %lnot.i = xor i1 %42, true, !dbg !10454
  %lnot.ext.i = zext i1 %42 to i32, !dbg !10454
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !10454
  br i1 %42, label %if.then.i, label %copy_from_user.exit, !dbg !10482

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %43 = load i8*, i8** %to.addr.i, align 8, !dbg !10483
  %44 = load i8*, i8** %from.addr.i, align 8, !dbg !10484
  %45 = load i64, i64* %n.addr.i, align 8, !dbg !10485
  %call2.i = call i64 @_copy_from_user(i8* %43, i8* %44, i64 %45) #12, !dbg !10486
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !10487
  br label %copy_from_user.exit, !dbg !10488

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %46 = load i64, i64* %n.addr.i, align 8, !dbg !10489
  %tobool13 = icmp ne i64 %46, 0, !dbg !10490
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !10491

if.then14:                                        ; preds = %copy_from_user.exit
  store i32 -14, i32* %ret, align 4, !dbg !10492
  br label %error, !dbg !10494

if.end15:                                         ; preds = %copy_from_user.exit
  br label %if.end16, !dbg !10495

if.end16:                                         ; preds = %if.end15, %if.end5
  %47 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10496
  %48 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10497
  %49 = load i32*, i32** %data, align 8, !dbg !10498
  %50 = load i8*, i8** %file.addr, align 8, !dbg !10499
  %call17 = call i32 @parse_insn(%struct.comedi_device* %47, %struct.comedi_insn* %48, i32* %49, i8* %50) #11, !dbg !10500
  store i32 %call17, i32* %ret, align 4, !dbg !10501
  %51 = load i32, i32* %ret, align 4, !dbg !10502
  %cmp18 = icmp slt i32 %51, 0, !dbg !10504
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !10505

if.then20:                                        ; preds = %if.end16
  br label %error, !dbg !10506

if.end21:                                         ; preds = %if.end16
  %52 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10507
  %insn22 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %52, i32 0, i32 0, !dbg !10508
  %53 = load i32, i32* %insn22, align 8, !dbg !10508
  %and23 = and i32 %53, 67108864, !dbg !10509
  %tobool24 = icmp ne i32 %and23, 0, !dbg !10509
  br i1 %tobool24, label %if.then25, label %if.end34, !dbg !10510

if.then25:                                        ; preds = %if.end21
  %54 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10511
  %data26 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %54, i32 0, i32 2, !dbg !10512
  %55 = load i32*, i32** %data26, align 8, !dbg !10512
  %56 = bitcast i32* %55 to i8*, !dbg !10511
  %57 = load i32*, i32** %data, align 8, !dbg !10513
  %58 = bitcast i32* %57 to i8*, !dbg !10513
  %59 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10514
  %n27 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %59, i32 0, i32 1, !dbg !10515
  %60 = load i32, i32* %n27, align 4, !dbg !10515
  %conv28 = zext i32 %60 to i64, !dbg !10514
  %mul29 = mul i64 %conv28, 4, !dbg !10516
  store i8* %56, i8** %to.addr.i43, align 8
  store i8* %58, i8** %from.addr.i44, align 8
  store i64 %mul29, i64* %n.addr.i45, align 8
  %61 = load i8*, i8** %from.addr.i44, align 8, !dbg !10517
  %62 = load i64, i64* %n.addr.i45, align 8, !dbg !10517
  store i8* %61, i8** %addr.addr.i.i37, align 8
  store i64 %62, i64* %bytes.addr.i.i38, align 8
  store i8 1, i8* %is_source.addr.i.i39, align 1
  store i32 -1, i32* %sz.i.i40, align 4, !dbg !10386
  %63 = load i32, i32* %sz.i.i40, align 4, !dbg !10518
  %cmp.i.i46 = icmp sge i32 %63, 0, !dbg !10518
  br i1 %cmp.i.i46, label %land.rhs.i.i49, label %land.end.i.i53, !dbg !10518

land.rhs.i.i49:                                   ; preds = %if.then25
  %64 = load i32, i32* %sz.i.i40, align 4, !dbg !10518
  %conv.i.i47 = sext i32 %64 to i64, !dbg !10518
  %65 = load i64, i64* %bytes.addr.i.i38, align 8, !dbg !10518
  %cmp1.i.i48 = icmp ult i64 %conv.i.i47, %65, !dbg !10518
  br label %land.end.i.i53

land.end.i.i53:                                   ; preds = %land.rhs.i.i49, %if.then25
  %66 = phi i1 [ false, %if.then25 ], [ %cmp1.i.i48, %land.rhs.i.i49 ], !dbg !10519
  %lnot.i.i50 = xor i1 %66, true, !dbg !10518
  %lnot.ext.i.i51 = zext i1 %66 to i32, !dbg !10518
  %conv4.i.i52 = sext i32 %lnot.ext.i.i51 to i64, !dbg !10518
  br i1 %66, label %if.then.i.i54, label %if.end10.i.i69, !dbg !10520

if.then.i.i54:                                    ; preds = %land.end.i.i53
  %67 = load i64, i64* %bytes.addr.i.i38, align 8, !dbg !10521
  %68 = call i1 @llvm.is.constant.i64(i64 %67) #9, !dbg !10522
  br i1 %68, label %if.else.i.i57, label %if.then5.i.i55, !dbg !10523

if.then5.i.i55:                                   ; preds = %if.then.i.i54
  %69 = load i32, i32* %sz.i.i40, align 4, !dbg !10524
  %70 = load i64, i64* %bytes.addr.i.i38, align 8, !dbg !10525
  call void @copy_overflow(i32 %69, i64 %70) #12, !dbg !10526
  br label %if.end9.i.i61, !dbg !10526

if.else.i.i57:                                    ; preds = %if.then.i.i54
  %71 = load i8, i8* %is_source.addr.i.i39, align 1, !dbg !10527
  %tobool6.i.i56 = trunc i8 %71 to i1, !dbg !10527
  br i1 %tobool6.i.i56, label %if.then7.i.i58, label %if.else8.i.i59, !dbg !10528

if.then7.i.i58:                                   ; preds = %if.else.i.i57
  call void @__bad_copy_from() #12, !dbg !10529
  br label %if.end.i.i60, !dbg !10529

if.else8.i.i59:                                   ; preds = %if.else.i.i57
  call void @__bad_copy_to() #12, !dbg !10530
  br label %if.end.i.i60

if.end.i.i60:                                     ; preds = %if.else8.i.i59, %if.then7.i.i58
  br label %if.end9.i.i61

if.end9.i.i61:                                    ; preds = %if.end.i.i60, %if.then5.i.i55
  store i1 false, i1* %retval.i.i36, align 1, !dbg !10531
  br label %check_copy_size.exit.i83, !dbg !10531

if.end10.i.i69:                                   ; preds = %land.end.i.i53
  %72 = load i64, i64* %bytes.addr.i.i38, align 8, !dbg !10387
  %cmp11.i.i62 = icmp ugt i64 %72, 2147483647, !dbg !10387
  %lnot13.i.i63 = xor i1 %cmp11.i.i62, true, !dbg !10387
  %lnot.ext16.i.i64 = zext i1 %cmp11.i.i62 to i32, !dbg !10387
  store i32 %lnot.ext16.i.i64, i32* %__ret_warn_on.i.i41, align 4, !dbg !10387
  %73 = load i32, i32* %__ret_warn_on.i.i41, align 4, !dbg !10532
  %tobool17.i.i65 = icmp ne i32 %73, 0, !dbg !10532
  %lnot18.i.i66 = xor i1 %tobool17.i.i65, true, !dbg !10532
  %lnot.ext21.i.i67 = zext i1 %tobool17.i.i65 to i32, !dbg !10532
  %conv22.i.i68 = sext i32 %lnot.ext21.i.i67 to i64, !dbg !10532
  br i1 %tobool17.i.i65, label %if.then24.i.i70, label %if.end31.i.i76, !dbg !10387

if.then24.i.i70:                                  ; preds = %if.end10.i.i69
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !10533, !srcloc !6320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !10534, !srcloc !6323
  br label %if.end31.i.i76, !dbg !10535

if.end31.i.i76:                                   ; preds = %if.then24.i.i70, %if.end10.i.i69
  %74 = load i32, i32* %__ret_warn_on.i.i41, align 4, !dbg !10387
  %tobool32.i.i71 = icmp ne i32 %74, 0, !dbg !10387
  %lnot33.i.i72 = xor i1 %tobool32.i.i71, true, !dbg !10387
  %lnot.ext36.i.i73 = zext i1 %tobool32.i.i71 to i32, !dbg !10387
  %conv37.i.i74 = sext i32 %lnot.ext36.i.i73 to i64, !dbg !10387
  store i64 %conv37.i.i74, i64* %tmp.i.i42, align 8, !dbg !10532
  %75 = load i64, i64* %tmp.i.i42, align 8, !dbg !10387
  %tobool38.i.i75 = icmp ne i64 %75, 0, !dbg !10536
  br i1 %tobool38.i.i75, label %if.then39.i.i77, label %if.end40.i.i79, !dbg !10537

if.then39.i.i77:                                  ; preds = %if.end31.i.i76
  store i1 false, i1* %retval.i.i36, align 1, !dbg !10538
  br label %check_copy_size.exit.i83, !dbg !10538

if.end40.i.i79:                                   ; preds = %if.end31.i.i76
  %76 = load i8*, i8** %addr.addr.i.i37, align 8, !dbg !10539
  %77 = load i64, i64* %bytes.addr.i.i38, align 8, !dbg !10540
  %78 = load i8, i8* %is_source.addr.i.i39, align 1, !dbg !10541
  %tobool41.i.i78 = trunc i8 %78 to i1, !dbg !10541
  call void @check_object_size(i8* %76, i64 %77, i1 zeroext %tobool41.i.i78) #12, !dbg !10542
  store i1 true, i1* %retval.i.i36, align 1, !dbg !10543
  br label %check_copy_size.exit.i83, !dbg !10543

check_copy_size.exit.i83:                         ; preds = %if.end40.i.i79, %if.then39.i.i77, %if.end9.i.i61
  %79 = load i1, i1* %retval.i.i36, align 1, !dbg !10544
  %lnot.i80 = xor i1 %79, true, !dbg !10517
  %lnot.ext.i81 = zext i1 %79 to i32, !dbg !10517
  %conv.i82 = sext i32 %lnot.ext.i81 to i64, !dbg !10517
  br i1 %79, label %if.then.i85, label %copy_to_user.exit, !dbg !10545

if.then.i85:                                      ; preds = %check_copy_size.exit.i83
  %80 = load i8*, i8** %to.addr.i43, align 8, !dbg !10546
  %81 = load i8*, i8** %from.addr.i44, align 8, !dbg !10547
  %82 = load i64, i64* %n.addr.i45, align 8, !dbg !10548
  %call2.i84 = call i64 @_copy_to_user(i8* %80, i8* %81, i64 %82) #12, !dbg !10549
  store i64 %call2.i84, i64* %n.addr.i45, align 8, !dbg !10550
  br label %copy_to_user.exit, !dbg !10551

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i83, %if.then.i85
  %83 = load i64, i64* %n.addr.i45, align 8, !dbg !10552
  %tobool31 = icmp ne i64 %83, 0, !dbg !10553
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !10554

if.then32:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %ret, align 4, !dbg !10555
  br label %error, !dbg !10557

if.end33:                                         ; preds = %copy_to_user.exit
  br label %if.end34, !dbg !10558

if.end34:                                         ; preds = %if.end33, %if.end21
  %84 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !10559
  %n35 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %84, i32 0, i32 1, !dbg !10560
  %85 = load i32, i32* %n35, align 4, !dbg !10560
  store i32 %85, i32* %ret, align 4, !dbg !10561
  br label %error, !dbg !10562

error:                                            ; preds = %if.end34, %if.then32, %if.then20, %if.then14, %if.then4
  call void @llvm.dbg.label(metadata !10563), !dbg !10564
  %86 = load i32*, i32** %data, align 8, !dbg !10565
  %87 = bitcast i32* %86 to i8*, !dbg !10565
  call void @kfree(i8* %87) #11, !dbg !10566
  %88 = load i32, i32* %ret, align 4, !dbg !10567
  ret i32 %88, !dbg !10568
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_poll_ioctl(%struct.comedi_device* %dev, i64 %arg, i8* %file) #0 !dbg !10569 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %arg.addr = alloca i64, align 8
  %file.addr = alloca i8*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10570, metadata !DIExpression()), !dbg !10571
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !10572, metadata !DIExpression()), !dbg !10573
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10574, metadata !DIExpression()), !dbg !10575
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !10576, metadata !DIExpression()), !dbg !10577
  br label %do.body, !dbg !10578

do.body:                                          ; preds = %entry
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10579
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 12, !dbg !10579
  br label %do.end, !dbg !10579

do.end:                                           ; preds = %do.body
  %1 = load i64, i64* %arg.addr, align 8, !dbg !10581
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10583
  %n_subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %2, i32 0, i32 15, !dbg !10584
  %3 = load i32, i32* %n_subdevices, align 4, !dbg !10584
  %conv = sext i32 %3 to i64, !dbg !10583
  %cmp = icmp uge i64 %1, %conv, !dbg !10585
  br i1 %cmp, label %if.then, label %if.end, !dbg !10586

if.then:                                          ; preds = %do.end
  store i32 -22, i32* %retval, align 4, !dbg !10587
  br label %return, !dbg !10587

if.end:                                           ; preds = %do.end
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10588
  %subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %4, i32 0, i32 16, !dbg !10589
  %5 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices, align 8, !dbg !10589
  %6 = load i64, i64* %arg.addr, align 8, !dbg !10590
  %arrayidx = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %5, i64 %6, !dbg !10588
  store %struct.comedi_subdevice* %arrayidx, %struct.comedi_subdevice** %s, align 8, !dbg !10591
  %7 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !10592
  %busy = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %7, i32 0, i32 9, !dbg !10594
  %8 = load i8*, i8** %busy, align 8, !dbg !10594
  %tobool = icmp ne i8* %8, null, !dbg !10592
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !10595

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10596
  br label %return, !dbg !10596

if.end3:                                          ; preds = %if.end
  %9 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !10597
  %busy4 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %9, i32 0, i32 9, !dbg !10599
  %10 = load i8*, i8** %busy4, align 8, !dbg !10599
  %11 = load i8*, i8** %file.addr, align 8, !dbg !10600
  %cmp5 = icmp ne i8* %10, %11, !dbg !10601
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !10602

if.then7:                                         ; preds = %if.end3
  store i32 -16, i32* %retval, align 4, !dbg !10603
  br label %return, !dbg !10603

if.end8:                                          ; preds = %if.end3
  %12 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !10604
  %poll = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %12, i32 0, i32 24, !dbg !10606
  %13 = load i32 (%struct.comedi_device*, %struct.comedi_subdevice*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %poll, align 8, !dbg !10606
  %tobool9 = icmp ne i32 (%struct.comedi_device*, %struct.comedi_subdevice*)* %13, null, !dbg !10604
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !10607

if.then10:                                        ; preds = %if.end8
  %14 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !10608
  %poll11 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %14, i32 0, i32 24, !dbg !10609
  %15 = load i32 (%struct.comedi_device*, %struct.comedi_subdevice*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %poll11, align 8, !dbg !10609
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10610
  %17 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !10611
  %call = call i32 %15(%struct.comedi_device* %16, %struct.comedi_subdevice* %17) #11, !dbg !10608
  store i32 %call, i32* %retval, align 4, !dbg !10612
  br label %return, !dbg !10612

if.end12:                                         ; preds = %if.end8
  store i32 -22, i32* %retval, align 4, !dbg !10613
  br label %return, !dbg !10613

return:                                           ; preds = %if.end12, %if.then10, %if.then7, %if.then2, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !10614
  ret i32 %18, !dbg !10614
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_setrsubd_ioctl(%struct.comedi_device* %dev, i64 %arg, %struct.file* %file) #0 !dbg !10615 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %arg.addr = alloca i64, align 8
  %file.addr = alloca %struct.file*, align 8
  %cfp = alloca %struct.comedi_file*, align 8
  %s_old = alloca %struct.comedi_subdevice*, align 8
  %s_new = alloca %struct.comedi_subdevice*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10618, metadata !DIExpression()), !dbg !10619
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !10620, metadata !DIExpression()), !dbg !10621
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !10622, metadata !DIExpression()), !dbg !10623
  call void @llvm.dbg.declare(metadata %struct.comedi_file** %cfp, metadata !10624, metadata !DIExpression()), !dbg !10625
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !10626
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !10627
  %1 = load i8*, i8** %private_data, align 8, !dbg !10627
  %2 = bitcast i8* %1 to %struct.comedi_file*, !dbg !10626
  store %struct.comedi_file* %2, %struct.comedi_file** %cfp, align 8, !dbg !10625
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s_old, metadata !10628, metadata !DIExpression()), !dbg !10629
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s_new, metadata !10630, metadata !DIExpression()), !dbg !10631
  br label %do.body, !dbg !10632

do.body:                                          ; preds = %entry
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10633
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 12, !dbg !10633
  br label %do.end, !dbg !10633

do.end:                                           ; preds = %do.body
  %4 = load i64, i64* %arg.addr, align 8, !dbg !10635
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10637
  %n_subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %5, i32 0, i32 15, !dbg !10638
  %6 = load i32, i32* %n_subdevices, align 4, !dbg !10638
  %conv = sext i32 %6 to i64, !dbg !10637
  %cmp = icmp uge i64 %4, %conv, !dbg !10639
  br i1 %cmp, label %if.then, label %if.end, !dbg !10640

if.then:                                          ; preds = %do.end
  store i32 -22, i32* %retval, align 4, !dbg !10641
  br label %return, !dbg !10641

if.end:                                           ; preds = %do.end
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10642
  %subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %7, i32 0, i32 16, !dbg !10643
  %8 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices, align 8, !dbg !10643
  %9 = load i64, i64* %arg.addr, align 8, !dbg !10644
  %arrayidx = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %8, i64 %9, !dbg !10642
  store %struct.comedi_subdevice* %arrayidx, %struct.comedi_subdevice** %s_new, align 8, !dbg !10645
  %10 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !10646
  %call = call %struct.comedi_subdevice* @comedi_file_read_subdevice(%struct.file* %10) #11, !dbg !10647
  store %struct.comedi_subdevice* %call, %struct.comedi_subdevice** %s_old, align 8, !dbg !10648
  %11 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_old, align 8, !dbg !10649
  %12 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_new, align 8, !dbg !10651
  %cmp2 = icmp eq %struct.comedi_subdevice* %11, %12, !dbg !10652
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !10653

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10654
  br label %return, !dbg !10654

if.end5:                                          ; preds = %if.end
  %13 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_new, align 8, !dbg !10655
  %subdev_flags = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %13, i32 0, i32 4, !dbg !10657
  %14 = load i32, i32* %subdev_flags, align 4, !dbg !10657
  %and = and i32 %14, 32768, !dbg !10658
  %tobool = icmp ne i32 %and, 0, !dbg !10658
  br i1 %tobool, label %if.end7, label %if.then6, !dbg !10659

if.then6:                                         ; preds = %if.end5
  store i32 -22, i32* %retval, align 4, !dbg !10660
  br label %return, !dbg !10660

if.end7:                                          ; preds = %if.end5
  %15 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_old, align 8, !dbg !10661
  %tobool8 = icmp ne %struct.comedi_subdevice* %15, null, !dbg !10661
  br i1 %tobool8, label %land.lhs.true, label %if.end18, !dbg !10663

land.lhs.true:                                    ; preds = %if.end7
  %16 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_old, align 8, !dbg !10664
  %busy = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %16, i32 0, i32 9, !dbg !10665
  %17 = load i8*, i8** %busy, align 8, !dbg !10665
  %18 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !10666
  %19 = bitcast %struct.file* %18 to i8*, !dbg !10666
  %cmp9 = icmp eq i8* %17, %19, !dbg !10667
  br i1 %cmp9, label %land.lhs.true11, label %if.end18, !dbg !10668

land.lhs.true11:                                  ; preds = %land.lhs.true
  %20 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_old, align 8, !dbg !10669
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %20, i32 0, i32 7, !dbg !10670
  %21 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !10670
  %tobool12 = icmp ne %struct.comedi_async* %21, null, !dbg !10669
  br i1 %tobool12, label %land.lhs.true13, label %if.end18, !dbg !10671

land.lhs.true13:                                  ; preds = %land.lhs.true11
  %22 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_old, align 8, !dbg !10672
  %async14 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %22, i32 0, i32 7, !dbg !10673
  %23 = load %struct.comedi_async*, %struct.comedi_async** %async14, align 8, !dbg !10673
  %cmd = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %23, i32 0, i32 17, !dbg !10674
  %flags = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %cmd, i32 0, i32 1, !dbg !10675
  %24 = load i32, i32* %flags, align 4, !dbg !10675
  %and15 = and i32 %24, 64, !dbg !10676
  %tobool16 = icmp ne i32 %and15, 0, !dbg !10676
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !10677

if.then17:                                        ; preds = %land.lhs.true13
  store i32 -16, i32* %retval, align 4, !dbg !10678
  br label %return, !dbg !10678

if.end18:                                         ; preds = %land.lhs.true13, %land.lhs.true11, %land.lhs.true, %if.end7
  br label %do.body19, !dbg !10679

do.body19:                                        ; preds = %if.end18
  br label %do.body20, !dbg !10680

do.body20:                                        ; preds = %do.body19
  br label %do.end21, !dbg !10682

do.end21:                                         ; preds = %do.body20
  br label %do.body22, !dbg !10680

do.body22:                                        ; preds = %do.end21
  %25 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_new, align 8, !dbg !10684
  %26 = load %struct.comedi_file*, %struct.comedi_file** %cfp, align 8, !dbg !10684
  %read_subdev = getelementptr inbounds %struct.comedi_file, %struct.comedi_file* %26, i32 0, i32 1, !dbg !10684
  store volatile %struct.comedi_subdevice* %25, %struct.comedi_subdevice** %read_subdev, align 8, !dbg !10684
  br label %do.end23, !dbg !10684

do.end23:                                         ; preds = %do.body22
  br label %do.end24, !dbg !10680

do.end24:                                         ; preds = %do.end23
  store i32 0, i32* %retval, align 4, !dbg !10686
  br label %return, !dbg !10686

return:                                           ; preds = %do.end24, %if.then17, %if.then6, %if.then4, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !10687
  ret i32 %27, !dbg !10687
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_setwsubd_ioctl(%struct.comedi_device* %dev, i64 %arg, %struct.file* %file) #0 !dbg !10688 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %arg.addr = alloca i64, align 8
  %file.addr = alloca %struct.file*, align 8
  %cfp = alloca %struct.comedi_file*, align 8
  %s_old = alloca %struct.comedi_subdevice*, align 8
  %s_new = alloca %struct.comedi_subdevice*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10689, metadata !DIExpression()), !dbg !10690
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !10691, metadata !DIExpression()), !dbg !10692
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !10693, metadata !DIExpression()), !dbg !10694
  call void @llvm.dbg.declare(metadata %struct.comedi_file** %cfp, metadata !10695, metadata !DIExpression()), !dbg !10696
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !10697
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !10698
  %1 = load i8*, i8** %private_data, align 8, !dbg !10698
  %2 = bitcast i8* %1 to %struct.comedi_file*, !dbg !10697
  store %struct.comedi_file* %2, %struct.comedi_file** %cfp, align 8, !dbg !10696
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s_old, metadata !10699, metadata !DIExpression()), !dbg !10700
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s_new, metadata !10701, metadata !DIExpression()), !dbg !10702
  br label %do.body, !dbg !10703

do.body:                                          ; preds = %entry
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10704
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 12, !dbg !10704
  br label %do.end, !dbg !10704

do.end:                                           ; preds = %do.body
  %4 = load i64, i64* %arg.addr, align 8, !dbg !10706
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10708
  %n_subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %5, i32 0, i32 15, !dbg !10709
  %6 = load i32, i32* %n_subdevices, align 4, !dbg !10709
  %conv = sext i32 %6 to i64, !dbg !10708
  %cmp = icmp uge i64 %4, %conv, !dbg !10710
  br i1 %cmp, label %if.then, label %if.end, !dbg !10711

if.then:                                          ; preds = %do.end
  store i32 -22, i32* %retval, align 4, !dbg !10712
  br label %return, !dbg !10712

if.end:                                           ; preds = %do.end
  %7 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10713
  %subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %7, i32 0, i32 16, !dbg !10714
  %8 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices, align 8, !dbg !10714
  %9 = load i64, i64* %arg.addr, align 8, !dbg !10715
  %arrayidx = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %8, i64 %9, !dbg !10713
  store %struct.comedi_subdevice* %arrayidx, %struct.comedi_subdevice** %s_new, align 8, !dbg !10716
  %10 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !10717
  %call = call %struct.comedi_subdevice* @comedi_file_write_subdevice(%struct.file* %10) #11, !dbg !10718
  store %struct.comedi_subdevice* %call, %struct.comedi_subdevice** %s_old, align 8, !dbg !10719
  %11 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_old, align 8, !dbg !10720
  %12 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_new, align 8, !dbg !10722
  %cmp2 = icmp eq %struct.comedi_subdevice* %11, %12, !dbg !10723
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !10724

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10725
  br label %return, !dbg !10725

if.end5:                                          ; preds = %if.end
  %13 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_new, align 8, !dbg !10726
  %subdev_flags = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %13, i32 0, i32 4, !dbg !10728
  %14 = load i32, i32* %subdev_flags, align 4, !dbg !10728
  %and = and i32 %14, 16384, !dbg !10729
  %tobool = icmp ne i32 %and, 0, !dbg !10729
  br i1 %tobool, label %if.end7, label %if.then6, !dbg !10730

if.then6:                                         ; preds = %if.end5
  store i32 -22, i32* %retval, align 4, !dbg !10731
  br label %return, !dbg !10731

if.end7:                                          ; preds = %if.end5
  %15 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_old, align 8, !dbg !10732
  %tobool8 = icmp ne %struct.comedi_subdevice* %15, null, !dbg !10732
  br i1 %tobool8, label %land.lhs.true, label %if.end18, !dbg !10734

land.lhs.true:                                    ; preds = %if.end7
  %16 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_old, align 8, !dbg !10735
  %busy = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %16, i32 0, i32 9, !dbg !10736
  %17 = load i8*, i8** %busy, align 8, !dbg !10736
  %18 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !10737
  %19 = bitcast %struct.file* %18 to i8*, !dbg !10737
  %cmp9 = icmp eq i8* %17, %19, !dbg !10738
  br i1 %cmp9, label %land.lhs.true11, label %if.end18, !dbg !10739

land.lhs.true11:                                  ; preds = %land.lhs.true
  %20 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_old, align 8, !dbg !10740
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %20, i32 0, i32 7, !dbg !10741
  %21 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !10741
  %tobool12 = icmp ne %struct.comedi_async* %21, null, !dbg !10740
  br i1 %tobool12, label %land.lhs.true13, label %if.end18, !dbg !10742

land.lhs.true13:                                  ; preds = %land.lhs.true11
  %22 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_old, align 8, !dbg !10743
  %async14 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %22, i32 0, i32 7, !dbg !10744
  %23 = load %struct.comedi_async*, %struct.comedi_async** %async14, align 8, !dbg !10744
  %cmd = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %23, i32 0, i32 17, !dbg !10745
  %flags = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %cmd, i32 0, i32 1, !dbg !10746
  %24 = load i32, i32* %flags, align 4, !dbg !10746
  %and15 = and i32 %24, 64, !dbg !10747
  %tobool16 = icmp ne i32 %and15, 0, !dbg !10747
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !10748

if.then17:                                        ; preds = %land.lhs.true13
  store i32 -16, i32* %retval, align 4, !dbg !10749
  br label %return, !dbg !10749

if.end18:                                         ; preds = %land.lhs.true13, %land.lhs.true11, %land.lhs.true, %if.end7
  br label %do.body19, !dbg !10750

do.body19:                                        ; preds = %if.end18
  br label %do.body20, !dbg !10751

do.body20:                                        ; preds = %do.body19
  br label %do.end21, !dbg !10753

do.end21:                                         ; preds = %do.body20
  br label %do.body22, !dbg !10751

do.body22:                                        ; preds = %do.end21
  %25 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s_new, align 8, !dbg !10755
  %26 = load %struct.comedi_file*, %struct.comedi_file** %cfp, align 8, !dbg !10755
  %write_subdev = getelementptr inbounds %struct.comedi_file, %struct.comedi_file* %26, i32 0, i32 2, !dbg !10755
  store volatile %struct.comedi_subdevice* %25, %struct.comedi_subdevice** %write_subdev, align 8, !dbg !10755
  br label %do.end23, !dbg !10755

do.end23:                                         ; preds = %do.body22
  br label %do.end24, !dbg !10751

do.end24:                                         ; preds = %do.end23
  store i32 0, i32* %retval, align 4, !dbg !10757
  br label %return, !dbg !10757

return:                                           ; preds = %do.end24, %if.then17, %if.then6, %if.then4, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !10758
  ret i32 %27, !dbg !10758
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @capable(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @is_device_busy(%struct.comedi_device* %dev) #0 !dbg !10759 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %i = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10760, metadata !DIExpression()), !dbg !10761
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !10762, metadata !DIExpression()), !dbg !10763
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10764, metadata !DIExpression()), !dbg !10765
  br label %do.body, !dbg !10766

do.body:                                          ; preds = %entry
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10767
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 12, !dbg !10767
  br label %do.end, !dbg !10767

do.end:                                           ; preds = %do.body
  %1 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10769
  %attached = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %1, i32 0, i32 10, !dbg !10771
  %bf.load = load i8, i8* %attached, align 8, !dbg !10771
  %bf.clear = and i8 %bf.load, 1, !dbg !10771
  %bf.cast = zext i8 %bf.clear to i32, !dbg !10771
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !10769
  br i1 %tobool, label %if.end, label %if.then, !dbg !10772

if.then:                                          ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !10773
  br label %return, !dbg !10773

if.end:                                           ; preds = %do.end
  store i32 0, i32* %i, align 4, !dbg !10774
  br label %for.cond, !dbg !10776

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !10777
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10779
  %n_subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 15, !dbg !10780
  %4 = load i32, i32* %n_subdevices, align 4, !dbg !10780
  %cmp = icmp slt i32 %2, %4, !dbg !10781
  br i1 %cmp, label %for.body, label %for.end, !dbg !10782

for.body:                                         ; preds = %for.cond
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10783
  %subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %5, i32 0, i32 16, !dbg !10785
  %6 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices, align 8, !dbg !10785
  %7 = load i32, i32* %i, align 4, !dbg !10786
  %idxprom = sext i32 %7 to i64, !dbg !10783
  %arrayidx = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %6, i64 %idxprom, !dbg !10783
  store %struct.comedi_subdevice* %arrayidx, %struct.comedi_subdevice** %s, align 8, !dbg !10787
  %8 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !10788
  %busy = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %8, i32 0, i32 9, !dbg !10790
  %9 = load i8*, i8** %busy, align 8, !dbg !10790
  %tobool1 = icmp ne i8* %9, null, !dbg !10788
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !10791

if.then2:                                         ; preds = %for.body
  store i32 1, i32* %retval, align 4, !dbg !10792
  br label %return, !dbg !10792

if.end3:                                          ; preds = %for.body
  %10 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !10793
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %10, i32 0, i32 7, !dbg !10795
  %11 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !10795
  %tobool4 = icmp ne %struct.comedi_async* %11, null, !dbg !10793
  br i1 %tobool4, label %land.lhs.true, label %if.end6, !dbg !10796

land.lhs.true:                                    ; preds = %if.end3
  %12 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !10797
  %call = call zeroext i1 @comedi_buf_is_mmapped(%struct.comedi_subdevice* %12) #11, !dbg !10798
  br i1 %call, label %if.then5, label %if.end6, !dbg !10799

if.then5:                                         ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !10800
  br label %return, !dbg !10800

if.end6:                                          ; preds = %land.lhs.true, %if.end3
  br label %for.inc, !dbg !10801

for.inc:                                          ; preds = %if.end6
  %13 = load i32, i32* %i, align 4, !dbg !10802
  %inc = add i32 %13, 1, !dbg !10802
  store i32 %inc, i32* %i, align 4, !dbg !10802
  br label %for.cond, !dbg !10803, !llvm.loop !10804

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !10806
  br label %return, !dbg !10806

return:                                           ; preds = %for.end, %if.then5, %if.then2, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !10807
  ret i32 %14, !dbg !10807
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local i32 @comedi_device_attach(%struct.comedi_device*, %struct.comedi_devconfig*) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @comedi_buf_is_mmapped(%struct.comedi_subdevice*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @resize_async_buffer(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, i32 %new_size) #0 !dbg !10808 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %new_size.addr = alloca i32, align 4
  %async = alloca %struct.comedi_async*, align 8
  %retval2 = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10809, metadata !DIExpression()), !dbg !10810
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !10811, metadata !DIExpression()), !dbg !10812
  store i32 %new_size, i32* %new_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_size.addr, metadata !10813, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.declare(metadata %struct.comedi_async** %async, metadata !10815, metadata !DIExpression()), !dbg !10816
  %0 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10817
  %async1 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %0, i32 0, i32 7, !dbg !10818
  %1 = load %struct.comedi_async*, %struct.comedi_async** %async1, align 8, !dbg !10818
  store %struct.comedi_async* %1, %struct.comedi_async** %async, align 8, !dbg !10816
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !10819, metadata !DIExpression()), !dbg !10820
  br label %do.body, !dbg !10821

do.body:                                          ; preds = %entry
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10822
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %2, i32 0, i32 12, !dbg !10822
  br label %do.end, !dbg !10822

do.end:                                           ; preds = %do.body
  %3 = load i32, i32* %new_size.addr, align 4, !dbg !10824
  %4 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !10826
  %max_bufsize = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %4, i32 0, i32 3, !dbg !10827
  %5 = load i32, i32* %max_bufsize, align 8, !dbg !10827
  %cmp = icmp ugt i32 %3, %5, !dbg !10828
  br i1 %cmp, label %if.then, label %if.end, !dbg !10829

if.then:                                          ; preds = %do.end
  store i32 -1, i32* %retval, align 4, !dbg !10830
  br label %return, !dbg !10830

if.end:                                           ; preds = %do.end
  %6 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10831
  %busy = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %6, i32 0, i32 9, !dbg !10833
  %7 = load i8*, i8** %busy, align 8, !dbg !10833
  %tobool = icmp ne i8* %7, null, !dbg !10831
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !10834

if.then3:                                         ; preds = %if.end
  store i32 -16, i32* %retval, align 4, !dbg !10835
  br label %return, !dbg !10835

if.end4:                                          ; preds = %if.end
  %8 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10837
  %call = call zeroext i1 @comedi_buf_is_mmapped(%struct.comedi_subdevice* %8) #11, !dbg !10839
  br i1 %call, label %if.then5, label %if.end6, !dbg !10840

if.then5:                                         ; preds = %if.end4
  store i32 -16, i32* %retval, align 4, !dbg !10841
  br label %return, !dbg !10841

if.end6:                                          ; preds = %if.end4
  %9 = load i32, i32* %new_size.addr, align 4, !dbg !10843
  %conv = zext i32 %9 to i64, !dbg !10843
  %add = add i64 %conv, 4096, !dbg !10844
  %sub = sub i64 %add, 1, !dbg !10845
  %and = and i64 %sub, -4096, !dbg !10846
  %conv7 = trunc i64 %and to i32, !dbg !10847
  store i32 %conv7, i32* %new_size.addr, align 4, !dbg !10848
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10849
  %11 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10850
  %12 = load i32, i32* %new_size.addr, align 4, !dbg !10851
  %conv8 = zext i32 %12 to i64, !dbg !10851
  %call9 = call i32 @comedi_buf_alloc(%struct.comedi_device* %10, %struct.comedi_subdevice* %11, i64 %conv8) #11, !dbg !10852
  store i32 %call9, i32* %retval2, align 4, !dbg !10853
  %13 = load i32, i32* %retval2, align 4, !dbg !10854
  %cmp10 = icmp slt i32 %13, 0, !dbg !10856
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !10857

if.then12:                                        ; preds = %if.end6
  %14 = load i32, i32* %retval2, align 4, !dbg !10858
  store i32 %14, i32* %retval, align 4, !dbg !10859
  br label %return, !dbg !10859

if.end13:                                         ; preds = %if.end6
  %15 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10860
  %buf_change = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %15, i32 0, i32 26, !dbg !10862
  %16 = load i32 (%struct.comedi_device*, %struct.comedi_subdevice*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %buf_change, align 8, !dbg !10862
  %tobool14 = icmp ne i32 (%struct.comedi_device*, %struct.comedi_subdevice*)* %16, null, !dbg !10860
  br i1 %tobool14, label %if.then15, label %if.end22, !dbg !10863

if.then15:                                        ; preds = %if.end13
  %17 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10864
  %buf_change16 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %17, i32 0, i32 26, !dbg !10866
  %18 = load i32 (%struct.comedi_device*, %struct.comedi_subdevice*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %buf_change16, align 8, !dbg !10866
  %19 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10867
  %20 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10868
  %call17 = call i32 %18(%struct.comedi_device* %19, %struct.comedi_subdevice* %20) #11, !dbg !10864
  store i32 %call17, i32* %retval2, align 4, !dbg !10869
  %21 = load i32, i32* %retval2, align 4, !dbg !10870
  %cmp18 = icmp slt i32 %21, 0, !dbg !10872
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !10873

if.then20:                                        ; preds = %if.then15
  %22 = load i32, i32* %retval2, align 4, !dbg !10874
  store i32 %22, i32* %retval, align 4, !dbg !10875
  br label %return, !dbg !10875

if.end21:                                         ; preds = %if.then15
  br label %if.end22, !dbg !10876

if.end22:                                         ; preds = %if.end21, %if.end13
  store i32 0, i32* %retval, align 4, !dbg !10877
  br label %return, !dbg !10877

return:                                           ; preds = %if.end22, %if.then20, %if.then12, %if.then5, %if.then3, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !10878
  ret i32 %23, !dbg !10878
}

; Function Attrs: noredzone
declare dso_local i32 @comedi_buf_alloc(%struct.comedi_device*, %struct.comedi_subdevice*, i64) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #10

; Function Attrs: noredzone
declare dso_local i64 @strlcpy(i8*, i8*, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @insn_inval(%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @might_fault() #0 !dbg !10879 {
entry:
  ret void, !dbg !10881
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__comedi_get_user_cmd(%struct.comedi_device* %dev, %struct.comedi_cmd* %cmd) #0 !dbg !10882 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10885, metadata !DIExpression()), !dbg !10886
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !10887, metadata !DIExpression()), !dbg !10888
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !10889, metadata !DIExpression()), !dbg !10890
  br label %do.body, !dbg !10891

do.body:                                          ; preds = %entry
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10892
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 12, !dbg !10892
  br label %do.end, !dbg !10892

do.end:                                           ; preds = %do.body
  %1 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10894
  %subdev = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %1, i32 0, i32 0, !dbg !10896
  %2 = load i32, i32* %subdev, align 8, !dbg !10896
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10897
  %n_subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %3, i32 0, i32 15, !dbg !10898
  %4 = load i32, i32* %n_subdevices, align 4, !dbg !10898
  %cmp = icmp uge i32 %2, %4, !dbg !10899
  br i1 %cmp, label %if.then, label %if.end, !dbg !10900

if.then:                                          ; preds = %do.end
  store i32 -19, i32* %retval, align 4, !dbg !10901
  br label %return, !dbg !10901

if.end:                                           ; preds = %do.end
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10903
  %subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %5, i32 0, i32 16, !dbg !10904
  %6 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices, align 8, !dbg !10904
  %7 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10905
  %subdev1 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %7, i32 0, i32 0, !dbg !10906
  %8 = load i32, i32* %subdev1, align 8, !dbg !10906
  %idxprom = zext i32 %8 to i64, !dbg !10903
  %arrayidx = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %6, i64 %idxprom, !dbg !10903
  store %struct.comedi_subdevice* %arrayidx, %struct.comedi_subdevice** %s, align 8, !dbg !10907
  %9 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !10908
  %type = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %9, i32 0, i32 2, !dbg !10910
  %10 = load i32, i32* %type, align 4, !dbg !10910
  %cmp2 = icmp eq i32 %10, 0, !dbg !10911
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10912

if.then3:                                         ; preds = %if.end
  store i32 -5, i32* %retval, align 4, !dbg !10913
  br label %return, !dbg !10913

if.end4:                                          ; preds = %if.end
  %11 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !10915
  %do_cmd = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %11, i32 0, i32 22, !dbg !10917
  %12 = load i32 (%struct.comedi_device*, %struct.comedi_subdevice*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*)** %do_cmd, align 8, !dbg !10917
  %tobool = icmp ne i32 (%struct.comedi_device*, %struct.comedi_subdevice*)* %12, null, !dbg !10915
  br i1 %tobool, label %lor.lhs.false, label %if.then8, !dbg !10918

lor.lhs.false:                                    ; preds = %if.end4
  %13 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !10919
  %do_cmdtest = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %13, i32 0, i32 23, !dbg !10920
  %14 = load i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_cmd*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_cmd*)** %do_cmdtest, align 8, !dbg !10920
  %tobool5 = icmp ne i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_cmd*)* %14, null, !dbg !10919
  br i1 %tobool5, label %lor.lhs.false6, label %if.then8, !dbg !10921

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %15 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !10922
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %15, i32 0, i32 7, !dbg !10923
  %16 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !10923
  %tobool7 = icmp ne %struct.comedi_async* %16, null, !dbg !10922
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !10924

if.then8:                                         ; preds = %lor.lhs.false6, %lor.lhs.false, %if.end4
  store i32 -5, i32* %retval, align 4, !dbg !10925
  br label %return, !dbg !10925

if.end9:                                          ; preds = %lor.lhs.false6
  %17 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10927
  %chanlist_len = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %17, i32 0, i32 13, !dbg !10929
  %18 = load i32, i32* %chanlist_len, align 8, !dbg !10929
  %19 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !10930
  %len_chanlist = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %19, i32 0, i32 5, !dbg !10931
  %20 = load i32, i32* %len_chanlist, align 8, !dbg !10931
  %cmp10 = icmp ugt i32 %18, %20, !dbg !10932
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !10933

if.then11:                                        ; preds = %if.end9
  store i32 -22, i32* %retval, align 4, !dbg !10934
  br label %return, !dbg !10934

if.end12:                                         ; preds = %if.end9
  %21 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !10936
  %subdev_flags = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %21, i32 0, i32 4, !dbg !10937
  %22 = load i32, i32* %subdev_flags, align 4, !dbg !10937
  %and = and i32 %22, 49152, !dbg !10938
  switch i32 %and, label %sw.default [
    i32 32768, label %sw.bb
    i32 16384, label %sw.bb14
  ], !dbg !10939

sw.bb:                                            ; preds = %if.end12
  %23 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10940
  %flags = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %23, i32 0, i32 1, !dbg !10942
  %24 = load i32, i32* %flags, align 4, !dbg !10943
  %and13 = and i32 %24, -65, !dbg !10943
  store i32 %and13, i32* %flags, align 4, !dbg !10943
  br label %sw.epilog, !dbg !10944

sw.bb14:                                          ; preds = %if.end12
  %25 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10945
  %flags15 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %25, i32 0, i32 1, !dbg !10946
  %26 = load i32, i32* %flags15, align 4, !dbg !10947
  %or = or i32 %26, 64, !dbg !10947
  store i32 %or, i32* %flags15, align 4, !dbg !10947
  br label %sw.epilog, !dbg !10948

sw.default:                                       ; preds = %if.end12
  br label %sw.epilog, !dbg !10949

sw.epilog:                                        ; preds = %sw.default, %sw.bb14, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !10950
  br label %return, !dbg !10950

return:                                           ; preds = %sw.epilog, %if.then11, %if.then8, %if.then3, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !10951
  ret i32 %27, !dbg !10951
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__comedi_get_user_chanlist(%struct.comedi_device* %dev, %struct.comedi_subdevice* %s, i32* %user_chanlist, %struct.comedi_cmd* %cmd) #0 !dbg !10952 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.comedi_device*, align 8
  %s.addr = alloca %struct.comedi_subdevice*, align 8
  %user_chanlist.addr = alloca i32*, align 8
  %cmd.addr = alloca %struct.comedi_cmd*, align 8
  %chanlist = alloca i32*, align 8
  %ret = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !10955, metadata !DIExpression()), !dbg !10956
  store %struct.comedi_subdevice* %s, %struct.comedi_subdevice** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s.addr, metadata !10957, metadata !DIExpression()), !dbg !10958
  store i32* %user_chanlist, i32** %user_chanlist.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %user_chanlist.addr, metadata !10959, metadata !DIExpression()), !dbg !10960
  store %struct.comedi_cmd* %cmd, %struct.comedi_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_cmd** %cmd.addr, metadata !10961, metadata !DIExpression()), !dbg !10962
  call void @llvm.dbg.declare(metadata i32** %chanlist, metadata !10963, metadata !DIExpression()), !dbg !10964
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10965, metadata !DIExpression()), !dbg !10966
  br label %do.body, !dbg !10967

do.body:                                          ; preds = %entry
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !10968
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 12, !dbg !10968
  br label %do.end, !dbg !10968

do.end:                                           ; preds = %do.body
  %1 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10970
  %chanlist1 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %1, i32 0, i32 12, !dbg !10971
  store i32* null, i32** %chanlist1, align 8, !dbg !10972
  %2 = load i32*, i32** %user_chanlist.addr, align 8, !dbg !10973
  %3 = bitcast i32* %2 to i8*, !dbg !10973
  %4 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10974
  %chanlist_len = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %4, i32 0, i32 13, !dbg !10975
  %5 = load i32, i32* %chanlist_len, align 8, !dbg !10975
  %conv = zext i32 %5 to i64, !dbg !10974
  %mul = mul i64 %conv, 4, !dbg !10976
  %call = call i8* @memdup_user(i8* %3, i64 %mul) #11, !dbg !10977
  %6 = bitcast i8* %call to i32*, !dbg !10977
  store i32* %6, i32** %chanlist, align 8, !dbg !10978
  %7 = load i32*, i32** %chanlist, align 8, !dbg !10979
  %8 = bitcast i32* %7 to i8*, !dbg !10979
  %call2 = call zeroext i1 @IS_ERR(i8* %8) #11, !dbg !10981
  br i1 %call2, label %if.then, label %if.end, !dbg !10982

if.then:                                          ; preds = %do.end
  %9 = load i32*, i32** %chanlist, align 8, !dbg !10983
  %10 = bitcast i32* %9 to i8*, !dbg !10983
  %call3 = call i64 @PTR_ERR(i8* %10) #11, !dbg !10984
  %conv4 = trunc i64 %call3 to i32, !dbg !10984
  store i32 %conv4, i32* %retval, align 4, !dbg !10985
  br label %return, !dbg !10985

if.end:                                           ; preds = %do.end
  %11 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s.addr, align 8, !dbg !10986
  %12 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !10987
  %chanlist_len5 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %12, i32 0, i32 13, !dbg !10988
  %13 = load i32, i32* %chanlist_len5, align 8, !dbg !10988
  %14 = load i32*, i32** %chanlist, align 8, !dbg !10989
  %call6 = call i32 @comedi_check_chanlist(%struct.comedi_subdevice* %11, i32 %13, i32* %14) #11, !dbg !10990
  store i32 %call6, i32* %ret, align 4, !dbg !10991
  %15 = load i32, i32* %ret, align 4, !dbg !10992
  %cmp = icmp slt i32 %15, 0, !dbg !10994
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !10995

if.then8:                                         ; preds = %if.end
  %16 = load i32*, i32** %chanlist, align 8, !dbg !10996
  %17 = bitcast i32* %16 to i8*, !dbg !10996
  call void @kfree(i8* %17) #11, !dbg !10998
  %18 = load i32, i32* %ret, align 4, !dbg !10999
  store i32 %18, i32* %retval, align 4, !dbg !11000
  br label %return, !dbg !11000

if.end9:                                          ; preds = %if.end
  %19 = load i32*, i32** %chanlist, align 8, !dbg !11001
  %20 = load %struct.comedi_cmd*, %struct.comedi_cmd** %cmd.addr, align 8, !dbg !11002
  %chanlist10 = getelementptr inbounds %struct.comedi_cmd, %struct.comedi_cmd* %20, i32 0, i32 12, !dbg !11003
  store i32* %19, i32** %chanlist10, align 8, !dbg !11004
  store i32 0, i32* %retval, align 4, !dbg !11005
  br label %return, !dbg !11005

return:                                           ; preds = %if.end9, %if.then8, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !11006
  ret i32 %21, !dbg !11006
}

; Function Attrs: noredzone
declare dso_local i8* @memdup_user(i8*, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @comedi_check_chanlist(%struct.comedi_subdevice*, i32, i32*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !11007 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !4535, metadata !DIExpression()), !dbg !11008
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !4545, metadata !DIExpression()), !dbg !11012
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !4547, metadata !DIExpression()), !dbg !11013
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !4549, metadata !DIExpression()), !dbg !11014
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !4551, metadata !DIExpression()), !dbg !11015
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !4557, metadata !DIExpression()), !dbg !11017
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !4563, metadata !DIExpression()), !dbg !11019
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !4572, metadata !DIExpression()), !dbg !11022
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !4574, metadata !DIExpression()), !dbg !11023
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4576, metadata !DIExpression()), !dbg !11024
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !4578, metadata !DIExpression()), !dbg !11025
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !4580, metadata !DIExpression()), !dbg !11026
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4582, metadata !DIExpression()), !dbg !11027
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !4584, metadata !DIExpression()), !dbg !11028
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !4586, metadata !DIExpression()), !dbg !11029
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11030, metadata !DIExpression()), !dbg !11031
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11032, metadata !DIExpression()), !dbg !11033
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11034, metadata !DIExpression()), !dbg !11035
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !11036, metadata !DIExpression()), !dbg !11037
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !11038, metadata !DIExpression()), !dbg !11041
  %0 = load i64, i64* %n.addr, align 8, !dbg !11041
  store i64 %0, i64* %__a, align 8, !dbg !11041
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !11042, metadata !DIExpression()), !dbg !11041
  %1 = load i64, i64* %size.addr, align 8, !dbg !11041
  store i64 %1, i64* %__b, align 8, !dbg !11041
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !11043, metadata !DIExpression()), !dbg !11041
  store i64* %bytes, i64** %__d, align 8, !dbg !11041
  %cmp = icmp eq i64* %__a, %__b, !dbg !11041
  %conv = zext i1 %cmp to i32, !dbg !11041
  %2 = load i64*, i64** %__d, align 8, !dbg !11041
  %cmp1 = icmp eq i64* %__a, %2, !dbg !11041
  %conv2 = zext i1 %cmp1 to i32, !dbg !11041
  %3 = load i64, i64* %__a, align 8, !dbg !11041
  %4 = load i64, i64* %__b, align 8, !dbg !11041
  %5 = load i64*, i64** %__d, align 8, !dbg !11041
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !11041
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !11041
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !11041
  store i64 %8, i64* %5, align 8, !dbg !11041
  %frombool = zext i1 %7 to i8, !dbg !11041
  store i8 %frombool, i8* %tmp, align 1, !dbg !11041
  %9 = load i8, i8* %tmp, align 1, !dbg !11041
  %tobool = trunc i8 %9 to i1, !dbg !11041
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !11045
  %lnot = xor i1 %call, true, !dbg !11045
  %lnot3 = xor i1 %lnot, true, !dbg !11045
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !11045
  %conv4 = sext i32 %lnot.ext to i64, !dbg !11045
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !11045
  br i1 %tobool5, label %if.then, label %if.end, !dbg !11046

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11047
  br label %return, !dbg !11047

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !11048
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !11049
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !11050

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !11051
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !11052
  br i1 %13, label %if.then6, label %if.end8, !dbg !11053

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !11054
  %15 = load i32, i32* %flags.addr, align 4, !dbg !11055
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !11056
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #9, !dbg !11057
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !11058

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !11059
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !11060
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !11061

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !11062
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !11063
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !11064
  %call.i.i = call i32 @get_order(i64 %21) #13, !dbg !11065
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !11026
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !11066
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !11067
  %24 = load i32, i32* %order.i.i, align 4, !dbg !11068
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !11069
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !11070
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !11071
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #12, !dbg !11072
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !11072
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !11072
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !11072
  call void @llvm.assume(i1 %maskcond.i.i.i) #9, !dbg !11072
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !11073
  br label %kmalloc.exit, !dbg !11073

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !11074
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11075
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !11075
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !11076

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !11077
  br label %kmalloc_index.exit.i, !dbg !11077

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11078
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !11079
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !11080

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11081
  br label %kmalloc_index.exit.i, !dbg !11081

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11082
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !11083
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !11084

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11085
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !11086
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !11087

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !11088
  br label %kmalloc_index.exit.i, !dbg !11088

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11089
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !11090
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !11091

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11092
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !11093
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !11094

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !11095
  br label %kmalloc_index.exit.i, !dbg !11095

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11096
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !11097
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !11098

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11099
  br label %kmalloc_index.exit.i, !dbg !11099

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11100
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !11101
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !11102

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !11103
  br label %kmalloc_index.exit.i, !dbg !11103

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11104
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !11105
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !11106

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !11107
  br label %kmalloc_index.exit.i, !dbg !11107

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11108
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !11109
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !11110

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !11111
  br label %kmalloc_index.exit.i, !dbg !11111

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11112
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !11113
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !11114

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !11115
  br label %kmalloc_index.exit.i, !dbg !11115

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11116
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !11117
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !11118

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !11119
  br label %kmalloc_index.exit.i, !dbg !11119

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11120
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !11121
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !11122

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !11123
  br label %kmalloc_index.exit.i, !dbg !11123

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11124
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !11125
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !11126

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !11127
  br label %kmalloc_index.exit.i, !dbg !11127

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11128
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !11129
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !11130

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !11131
  br label %kmalloc_index.exit.i, !dbg !11131

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11132
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !11133
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !11134

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !11135
  br label %kmalloc_index.exit.i, !dbg !11135

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11136
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !11137
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !11138

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !11139
  br label %kmalloc_index.exit.i, !dbg !11139

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11140
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !11141
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !11142

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !11143
  br label %kmalloc_index.exit.i, !dbg !11143

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11144
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !11145
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !11146

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !11147
  br label %kmalloc_index.exit.i, !dbg !11147

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11148
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !11149
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !11150

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !11151
  br label %kmalloc_index.exit.i, !dbg !11151

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11152
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !11153
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !11154

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !11155
  br label %kmalloc_index.exit.i, !dbg !11155

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11156
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !11157
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !11158

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !11159
  br label %kmalloc_index.exit.i, !dbg !11159

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11160
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !11161
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !11162

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !11163
  br label %kmalloc_index.exit.i, !dbg !11163

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11164
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !11165
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !11166

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !11167
  br label %kmalloc_index.exit.i, !dbg !11167

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11168
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !11169
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !11170

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !11171
  br label %kmalloc_index.exit.i, !dbg !11171

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11172
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !11173
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !11174

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !11175
  br label %kmalloc_index.exit.i, !dbg !11175

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11176
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !11177
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !11178

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !11179
  br label %kmalloc_index.exit.i, !dbg !11179

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11180
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !11181
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !11182

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !11183
  br label %kmalloc_index.exit.i, !dbg !11183

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11184
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !11185
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !11186

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !11187
  br label %kmalloc_index.exit.i, !dbg !11187

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11188
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !11189
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !11190

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !11191
  br label %kmalloc_index.exit.i, !dbg !11191

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i32 382, i32 0, i64 12) #9, !dbg !11192, !srcloc !4762
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 225) #9, !dbg !11193, !srcloc !4766
  unreachable, !dbg !11194

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !11195
  store i32 %59, i32* %index.i, align 4, !dbg !11196
  %60 = load i32, i32* %index.i, align 4, !dbg !11197
  %tobool.i = icmp ne i32 %60, 0, !dbg !11197
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !11198

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !11199
  br label %kmalloc.exit, !dbg !11199

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !11200
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11201
  %and.i.i = and i32 %62, 17, !dbg !11201
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !11201
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !11201
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !11201
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !11201
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !11202

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !11203
  br label %kmalloc_type.exit.i, !dbg !11203

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11204
  %and2.i.i = and i32 %63, 1, !dbg !11205
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !11204
  %64 = zext i1 %tobool3.i.i to i64, !dbg !11204
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !11204
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !11206
  br label %kmalloc_type.exit.i, !dbg !11206

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !11207
  %idxprom.i = zext i32 %65 to i64, !dbg !11208
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !11208
  %66 = load i32, i32* %index.i, align 4, !dbg !11209
  %idxprom6.i = zext i32 %66 to i64, !dbg !11208
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !11208
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !11208
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !11210
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !11211
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11212
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11213
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #12, !dbg !11214
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !11214
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !11214
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !11214
  call void @llvm.assume(i1 %maskcond.i.i) #9, !dbg !11214
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !11014
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11215
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !11216
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !11217
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11218
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #12, !dbg !11219
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !11220
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !11221
  store i8* %76, i8** %retval.i, align 8, !dbg !11222
  br label %kmalloc.exit, !dbg !11222

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !11223
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !11224
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #12, !dbg !11225
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !11225
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !11225
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !11225
  call void @llvm.assume(i1 %maskcond.i) #9, !dbg !11225
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !11226
  br label %kmalloc.exit, !dbg !11226

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !11227
  store i8* %79, i8** %retval, align 8, !dbg !11228
  br label %return, !dbg !11228

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !11229
  %81 = load i32, i32* %flags.addr, align 4, !dbg !11230
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #11, !dbg !11231
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !11231
  %maskedptr = and i64 %ptrint, 7, !dbg !11231
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !11231
  call void @llvm.assume(i1 %maskcond), !dbg !11231
  store i8* %call9, i8** %retval, align 8, !dbg !11232
  br label %return, !dbg !11232

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !11233
  ret i8* %82, !dbg !11233
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !11234 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !11238, metadata !DIExpression()), !dbg !11239
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !11240
  %tobool = trunc i8 %0 to i1, !dbg !11240
  %lnot = xor i1 %tobool, true, !dbg !11240
  %lnot1 = xor i1 %lnot, true, !dbg !11240
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11240
  %conv = sext i32 %lnot.ext to i64, !dbg !11240
  %tobool2 = icmp ne i64 %conv, 0, !dbg !11240
  ret i1 %tobool2, !dbg !11241
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @parse_insn(%struct.comedi_device* %dev, %struct.comedi_insn* %insn, i32* %data, i8* %file) #0 !dbg !11242 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  %file.addr = alloca i8*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %tv = alloca %struct.timespec64, align 8
  %maxdata = alloca i32, align 4
  %orig_mask = alloca i32, align 4
  %shift = alloca i32, align 4
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11245, metadata !DIExpression()), !dbg !11246
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !11247, metadata !DIExpression()), !dbg !11248
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !11249, metadata !DIExpression()), !dbg !11250
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !11251, metadata !DIExpression()), !dbg !11252
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !11253, metadata !DIExpression()), !dbg !11254
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11255, metadata !DIExpression()), !dbg !11256
  store i32 0, i32* %ret, align 4, !dbg !11256
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11257, metadata !DIExpression()), !dbg !11258
  br label %do.body, !dbg !11259

do.body:                                          ; preds = %entry
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11260
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 12, !dbg !11260
  br label %do.end, !dbg !11260

do.end:                                           ; preds = %do.body
  %1 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11262
  %insn1 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %1, i32 0, i32 0, !dbg !11264
  %2 = load i32, i32* %insn1, align 8, !dbg !11264
  %and = and i32 %2, 33554432, !dbg !11265
  %tobool = icmp ne i32 %and, 0, !dbg !11265
  br i1 %tobool, label %if.then, label %if.else74, !dbg !11266

if.then:                                          ; preds = %do.end
  %3 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11267
  %insn2 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %3, i32 0, i32 0, !dbg !11269
  %4 = load i32, i32* %insn2, align 8, !dbg !11269
  switch i32 %4, label %sw.default [
    i32 100663300, label %sw.bb
    i32 167772165, label %sw.bb6
    i32 167772166, label %sw.bb33
    i32 234881027, label %sw.bb59
  ], !dbg !11270

sw.bb:                                            ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.timespec64* %tv, metadata !11271, metadata !DIExpression()), !dbg !11274
  %5 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11275
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %5, i32 0, i32 1, !dbg !11277
  %6 = load i32, i32* %n, align 4, !dbg !11277
  %cmp = icmp ne i32 %6, 2, !dbg !11278
  br i1 %cmp, label %if.then3, label %if.end, !dbg !11279

if.then3:                                         ; preds = %sw.bb
  store i32 -22, i32* %ret, align 4, !dbg !11280
  br label %sw.epilog, !dbg !11282

if.end:                                           ; preds = %sw.bb
  call void @ktime_get_real_ts64(%struct.timespec64* %tv) #11, !dbg !11283
  %tv_sec = getelementptr inbounds %struct.timespec64, %struct.timespec64* %tv, i32 0, i32 0, !dbg !11284
  %7 = load i64, i64* %tv_sec, align 8, !dbg !11284
  %conv = trunc i64 %7 to i32, !dbg !11285
  %8 = load i32*, i32** %data.addr, align 8, !dbg !11286
  %arrayidx = getelementptr i32, i32* %8, i64 0, !dbg !11286
  store i32 %conv, i32* %arrayidx, align 4, !dbg !11287
  %tv_nsec = getelementptr inbounds %struct.timespec64, %struct.timespec64* %tv, i32 0, i32 1, !dbg !11288
  %9 = load i64, i64* %tv_nsec, align 8, !dbg !11288
  %div = sdiv i64 %9, 1000, !dbg !11289
  %conv4 = trunc i64 %div to i32, !dbg !11290
  %10 = load i32*, i32** %data.addr, align 8, !dbg !11291
  %arrayidx5 = getelementptr i32, i32* %10, i64 1, !dbg !11291
  store i32 %conv4, i32* %arrayidx5, align 4, !dbg !11292
  store i32 2, i32* %ret, align 4, !dbg !11293
  br label %sw.epilog, !dbg !11294

sw.bb6:                                           ; preds = %if.then
  %11 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11295
  %n7 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %11, i32 0, i32 1, !dbg !11297
  %12 = load i32, i32* %n7, align 4, !dbg !11297
  %cmp8 = icmp ne i32 %12, 1, !dbg !11298
  br i1 %cmp8, label %if.then13, label %lor.lhs.false, !dbg !11299

lor.lhs.false:                                    ; preds = %sw.bb6
  %13 = load i32*, i32** %data.addr, align 8, !dbg !11300
  %arrayidx10 = getelementptr i32, i32* %13, i64 0, !dbg !11300
  %14 = load i32, i32* %arrayidx10, align 4, !dbg !11300
  %cmp11 = icmp uge i32 %14, 100000, !dbg !11301
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !11302

if.then13:                                        ; preds = %lor.lhs.false, %sw.bb6
  store i32 -22, i32* %ret, align 4, !dbg !11303
  br label %sw.epilog, !dbg !11305

if.end14:                                         ; preds = %lor.lhs.false
  %15 = load i32*, i32** %data.addr, align 8, !dbg !11306
  %arrayidx15 = getelementptr i32, i32* %15, i64 0, !dbg !11306
  %16 = load i32, i32* %arrayidx15, align 4, !dbg !11306
  %div16 = udiv i32 %16, 1000, !dbg !11306
  %17 = call i1 @llvm.is.constant.i32(i32 %div16), !dbg !11306
  br i1 %17, label %if.then17, label %if.else28, !dbg !11309

if.then17:                                        ; preds = %if.end14
  %18 = load i32*, i32** %data.addr, align 8, !dbg !11310
  %arrayidx18 = getelementptr i32, i32* %18, i64 0, !dbg !11310
  %19 = load i32, i32* %arrayidx18, align 4, !dbg !11310
  %div19 = udiv i32 %19, 1000, !dbg !11310
  %div20 = udiv i32 %div19, 20000, !dbg !11310
  %cmp21 = icmp uge i32 %div20, 1, !dbg !11310
  br i1 %cmp21, label %if.then23, label %if.else, !dbg !11313

if.then23:                                        ; preds = %if.then17
  call void @__bad_udelay() #11, !dbg !11310
  br label %if.end27, !dbg !11310

if.else:                                          ; preds = %if.then17
  %20 = load i32*, i32** %data.addr, align 8, !dbg !11310
  %arrayidx24 = getelementptr i32, i32* %20, i64 0, !dbg !11310
  %21 = load i32, i32* %arrayidx24, align 4, !dbg !11310
  %div25 = udiv i32 %21, 1000, !dbg !11310
  %conv26 = zext i32 %div25 to i64, !dbg !11310
  %mul = mul i64 %conv26, 4295, !dbg !11310
  call void @__const_udelay(i64 %mul) #11, !dbg !11310
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then23
  br label %if.end32, !dbg !11313

if.else28:                                        ; preds = %if.end14
  %22 = load i32*, i32** %data.addr, align 8, !dbg !11314
  %arrayidx29 = getelementptr i32, i32* %22, i64 0, !dbg !11314
  %23 = load i32, i32* %arrayidx29, align 4, !dbg !11314
  %div30 = udiv i32 %23, 1000, !dbg !11314
  %conv31 = zext i32 %div30 to i64, !dbg !11314
  call void @__udelay(i64 %conv31) #11, !dbg !11314
  br label %if.end32

if.end32:                                         ; preds = %if.else28, %if.end27
  store i32 1, i32* %ret, align 4, !dbg !11316
  br label %sw.epilog, !dbg !11317

sw.bb33:                                          ; preds = %if.then
  %24 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11318
  %n34 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %24, i32 0, i32 1, !dbg !11320
  %25 = load i32, i32* %n34, align 4, !dbg !11320
  %cmp35 = icmp ne i32 %25, 1, !dbg !11321
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !11322

if.then37:                                        ; preds = %sw.bb33
  store i32 -22, i32* %ret, align 4, !dbg !11323
  br label %sw.epilog, !dbg !11325

if.end38:                                         ; preds = %sw.bb33
  %26 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11326
  %subdev = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %26, i32 0, i32 3, !dbg !11328
  %27 = load i32, i32* %subdev, align 8, !dbg !11328
  %28 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11329
  %n_subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %28, i32 0, i32 15, !dbg !11330
  %29 = load i32, i32* %n_subdevices, align 4, !dbg !11330
  %cmp39 = icmp uge i32 %27, %29, !dbg !11331
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !11332

if.then41:                                        ; preds = %if.end38
  store i32 -22, i32* %ret, align 4, !dbg !11333
  br label %sw.epilog, !dbg !11335

if.end42:                                         ; preds = %if.end38
  %30 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11336
  %subdevices = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %30, i32 0, i32 16, !dbg !11337
  %31 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices, align 8, !dbg !11337
  %32 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11338
  %subdev43 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %32, i32 0, i32 3, !dbg !11339
  %33 = load i32, i32* %subdev43, align 8, !dbg !11339
  %idxprom = zext i32 %33 to i64, !dbg !11336
  %arrayidx44 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %31, i64 %idxprom, !dbg !11336
  store %struct.comedi_subdevice* %arrayidx44, %struct.comedi_subdevice** %s, align 8, !dbg !11340
  %34 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11341
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %34, i32 0, i32 7, !dbg !11343
  %35 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !11343
  %tobool45 = icmp ne %struct.comedi_async* %35, null, !dbg !11341
  br i1 %tobool45, label %if.end47, label %if.then46, !dbg !11344

if.then46:                                        ; preds = %if.end42
  store i32 -22, i32* %ret, align 4, !dbg !11345
  br label %sw.epilog, !dbg !11347

if.end47:                                         ; preds = %if.end42
  %36 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11348
  %async48 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %36, i32 0, i32 7, !dbg !11350
  %37 = load %struct.comedi_async*, %struct.comedi_async** %async48, align 8, !dbg !11350
  %inttrig = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %37, i32 0, i32 20, !dbg !11351
  %38 = load i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)** %inttrig, align 8, !dbg !11351
  %tobool49 = icmp ne i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)* %38, null, !dbg !11348
  br i1 %tobool49, label %if.end51, label %if.then50, !dbg !11352

if.then50:                                        ; preds = %if.end47
  store i32 -11, i32* %ret, align 4, !dbg !11353
  br label %sw.epilog, !dbg !11355

if.end51:                                         ; preds = %if.end47
  %39 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11356
  %async52 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %39, i32 0, i32 7, !dbg !11357
  %40 = load %struct.comedi_async*, %struct.comedi_async** %async52, align 8, !dbg !11357
  %inttrig53 = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %40, i32 0, i32 20, !dbg !11358
  %41 = load i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, i32)** %inttrig53, align 8, !dbg !11358
  %42 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11359
  %43 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11360
  %44 = load i32*, i32** %data.addr, align 8, !dbg !11361
  %arrayidx54 = getelementptr i32, i32* %44, i64 0, !dbg !11361
  %45 = load i32, i32* %arrayidx54, align 4, !dbg !11361
  %call = call i32 %41(%struct.comedi_device* %42, %struct.comedi_subdevice* %43, i32 %45) #11, !dbg !11356
  store i32 %call, i32* %ret, align 4, !dbg !11362
  %46 = load i32, i32* %ret, align 4, !dbg !11363
  %cmp55 = icmp sge i32 %46, 0, !dbg !11365
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !11366

if.then57:                                        ; preds = %if.end51
  store i32 1, i32* %ret, align 4, !dbg !11367
  br label %if.end58, !dbg !11368

if.end58:                                         ; preds = %if.then57, %if.end51
  br label %sw.epilog, !dbg !11369

sw.bb59:                                          ; preds = %if.then
  %47 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11370
  %48 = load i32*, i32** %data.addr, align 8, !dbg !11371
  %call60 = call i32 @check_insn_device_config_length(%struct.comedi_insn* %47, i32* %48) #11, !dbg !11372
  store i32 %call60, i32* %ret, align 4, !dbg !11373
  %49 = load i32, i32* %ret, align 4, !dbg !11374
  %tobool61 = icmp ne i32 %49, 0, !dbg !11374
  br i1 %tobool61, label %if.then62, label %if.end63, !dbg !11376

if.then62:                                        ; preds = %sw.bb59
  br label %sw.epilog, !dbg !11377

if.end63:                                         ; preds = %sw.bb59
  %50 = load i32*, i32** %data.addr, align 8, !dbg !11378
  %arrayidx64 = getelementptr i32, i32* %50, i64 0, !dbg !11378
  %51 = load i32, i32* %arrayidx64, align 4, !dbg !11378
  %cmp65 = icmp eq i32 %51, 3, !dbg !11380
  br i1 %cmp65, label %if.then67, label %if.end72, !dbg !11381

if.then67:                                        ; preds = %if.end63
  %52 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11382
  %n68 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %52, i32 0, i32 1, !dbg !11384
  %53 = load i32, i32* %n68, align 4, !dbg !11384
  %sub = sub i32 %53, 2, !dbg !11385
  %div69 = udiv i32 %sub, 2, !dbg !11386
  %54 = load i32*, i32** %data.addr, align 8, !dbg !11387
  %arrayidx70 = getelementptr i32, i32* %54, i64 1, !dbg !11387
  store i32 %div69, i32* %arrayidx70, align 4, !dbg !11388
  %55 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11389
  %56 = load i32*, i32** %data.addr, align 8, !dbg !11390
  %call71 = call i32 @get_valid_routes(%struct.comedi_device* %55, i32* %56) #11, !dbg !11391
  store i32 %call71, i32* %ret, align 4, !dbg !11392
  br label %sw.epilog, !dbg !11393

if.end72:                                         ; preds = %if.end63
  %57 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11394
  %insn_device_config = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %57, i32 0, i32 26, !dbg !11395
  %58 = load i32 (%struct.comedi_device*, %struct.comedi_insn*, i32*)*, i32 (%struct.comedi_device*, %struct.comedi_insn*, i32*)** %insn_device_config, align 8, !dbg !11395
  %59 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11396
  %60 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11397
  %61 = load i32*, i32** %data.addr, align 8, !dbg !11398
  %call73 = call i32 %58(%struct.comedi_device* %59, %struct.comedi_insn* %60, i32* %61) #11, !dbg !11394
  store i32 %call73, i32* %ret, align 4, !dbg !11399
  br label %sw.epilog, !dbg !11400

sw.default:                                       ; preds = %if.then
  store i32 -22, i32* %ret, align 4, !dbg !11401
  br label %sw.epilog, !dbg !11402

sw.epilog:                                        ; preds = %sw.default, %if.end72, %if.then67, %if.then62, %if.end58, %if.then50, %if.then46, %if.then41, %if.then37, %if.end32, %if.then13, %if.end, %if.then3
  br label %if.end175, !dbg !11403

if.else74:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %maxdata, metadata !11404, metadata !DIExpression()), !dbg !11406
  %62 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11407
  %subdev75 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %62, i32 0, i32 3, !dbg !11409
  %63 = load i32, i32* %subdev75, align 8, !dbg !11409
  %64 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11410
  %n_subdevices76 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %64, i32 0, i32 15, !dbg !11411
  %65 = load i32, i32* %n_subdevices76, align 4, !dbg !11411
  %cmp77 = icmp uge i32 %63, %65, !dbg !11412
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !11413

if.then79:                                        ; preds = %if.else74
  store i32 -22, i32* %ret, align 4, !dbg !11414
  br label %out, !dbg !11416

if.end80:                                         ; preds = %if.else74
  %66 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11417
  %subdevices81 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %66, i32 0, i32 16, !dbg !11418
  %67 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %subdevices81, align 8, !dbg !11418
  %68 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11419
  %subdev82 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %68, i32 0, i32 3, !dbg !11420
  %69 = load i32, i32* %subdev82, align 8, !dbg !11420
  %idxprom83 = zext i32 %69 to i64, !dbg !11417
  %arrayidx84 = getelementptr %struct.comedi_subdevice, %struct.comedi_subdevice* %67, i64 %idxprom83, !dbg !11417
  store %struct.comedi_subdevice* %arrayidx84, %struct.comedi_subdevice** %s, align 8, !dbg !11421
  %70 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11422
  %type = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %70, i32 0, i32 2, !dbg !11424
  %71 = load i32, i32* %type, align 4, !dbg !11424
  %cmp85 = icmp eq i32 %71, 0, !dbg !11425
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !11426

if.then87:                                        ; preds = %if.end80
  store i32 -5, i32* %ret, align 4, !dbg !11427
  br label %out, !dbg !11429

if.end88:                                         ; preds = %if.end80
  %72 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11430
  %lock = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %72, i32 0, i32 8, !dbg !11432
  %73 = load i8*, i8** %lock, align 8, !dbg !11432
  %tobool89 = icmp ne i8* %73, null, !dbg !11430
  br i1 %tobool89, label %land.lhs.true, label %if.end94, !dbg !11433

land.lhs.true:                                    ; preds = %if.end88
  %74 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11434
  %lock90 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %74, i32 0, i32 8, !dbg !11435
  %75 = load i8*, i8** %lock90, align 8, !dbg !11435
  %76 = load i8*, i8** %file.addr, align 8, !dbg !11436
  %cmp91 = icmp ne i8* %75, %76, !dbg !11437
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !11438

if.then93:                                        ; preds = %land.lhs.true
  store i32 -13, i32* %ret, align 4, !dbg !11439
  br label %out, !dbg !11441

if.end94:                                         ; preds = %land.lhs.true, %if.end88
  %77 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11442
  %78 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11443
  %chanspec = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %78, i32 0, i32 4, !dbg !11444
  %call95 = call i32 @comedi_check_chanlist(%struct.comedi_subdevice* %77, i32 1, i32* %chanspec) #11, !dbg !11445
  store i32 %call95, i32* %ret, align 4, !dbg !11446
  %79 = load i32, i32* %ret, align 4, !dbg !11447
  %cmp96 = icmp slt i32 %79, 0, !dbg !11449
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !11450

if.then98:                                        ; preds = %if.end94
  store i32 -22, i32* %ret, align 4, !dbg !11451
  br label %out, !dbg !11453

if.end99:                                         ; preds = %if.end94
  %80 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11454
  %busy = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %80, i32 0, i32 9, !dbg !11456
  %81 = load i8*, i8** %busy, align 8, !dbg !11456
  %tobool100 = icmp ne i8* %81, null, !dbg !11454
  br i1 %tobool100, label %if.then101, label %if.end102, !dbg !11457

if.then101:                                       ; preds = %if.end99
  store i32 -16, i32* %ret, align 4, !dbg !11458
  br label %out, !dbg !11460

if.end102:                                        ; preds = %if.end99
  %82 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11461
  %busy103 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %82, i32 0, i32 9, !dbg !11462
  store i8* bitcast (i32 (%struct.comedi_device*, %struct.comedi_insn*, i32*, i8*)* @parse_insn to i8*), i8** %busy103, align 8, !dbg !11463
  %83 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11464
  %insn104 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %83, i32 0, i32 0, !dbg !11465
  %84 = load i32, i32* %insn104, align 8, !dbg !11465
  switch i32 %84, label %sw.default172 [
    i32 67108864, label %sw.bb105
    i32 134217729, label %sw.bb111
    i32 201326594, label %sw.bb137
    i32 201326595, label %sw.bb166
  ], !dbg !11466

sw.bb105:                                         ; preds = %if.end102
  %85 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11467
  %insn_read = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %85, i32 0, i32 18, !dbg !11469
  %86 = load i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_read, align 8, !dbg !11469
  %87 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11470
  %88 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11471
  %89 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11472
  %90 = load i32*, i32** %data.addr, align 8, !dbg !11473
  %call106 = call i32 %86(%struct.comedi_device* %87, %struct.comedi_subdevice* %88, %struct.comedi_insn* %89, i32* %90) #11, !dbg !11467
  store i32 %call106, i32* %ret, align 4, !dbg !11474
  %91 = load i32, i32* %ret, align 4, !dbg !11475
  %cmp107 = icmp eq i32 %91, -110, !dbg !11477
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !11478

if.then109:                                       ; preds = %sw.bb105
  br label %if.end110, !dbg !11479

if.end110:                                        ; preds = %if.then109, %sw.bb105
  br label %sw.epilog173, !dbg !11481

sw.bb111:                                         ; preds = %if.end102
  %92 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11482
  %maxdata_list = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %92, i32 0, i32 14, !dbg !11483
  %93 = load i32*, i32** %maxdata_list, align 8, !dbg !11483
  %tobool112 = icmp ne i32* %93, null, !dbg !11482
  br i1 %tobool112, label %cond.true, label %cond.false, !dbg !11482

cond.true:                                        ; preds = %sw.bb111
  %94 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11484
  %maxdata_list113 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %94, i32 0, i32 14, !dbg !11485
  %95 = load i32*, i32** %maxdata_list113, align 8, !dbg !11485
  %96 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11486
  %chanspec114 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %96, i32 0, i32 4, !dbg !11486
  %97 = load i32, i32* %chanspec114, align 4, !dbg !11486
  %and115 = and i32 %97, 65535, !dbg !11486
  %idxprom116 = zext i32 %and115 to i64, !dbg !11484
  %arrayidx117 = getelementptr i32, i32* %95, i64 %idxprom116, !dbg !11484
  %98 = load i32, i32* %arrayidx117, align 4, !dbg !11484
  br label %cond.end, !dbg !11482

cond.false:                                       ; preds = %sw.bb111
  %99 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11487
  %maxdata118 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %99, i32 0, i32 13, !dbg !11488
  %100 = load i32, i32* %maxdata118, align 8, !dbg !11488
  br label %cond.end, !dbg !11482

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %98, %cond.true ], [ %100, %cond.false ], !dbg !11482
  store i32 %cond, i32* %maxdata, align 4, !dbg !11489
  store i32 0, i32* %i, align 4, !dbg !11490
  br label %for.cond, !dbg !11492

for.cond:                                         ; preds = %for.inc, %cond.end
  %101 = load i32, i32* %i, align 4, !dbg !11493
  %102 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11495
  %n119 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %102, i32 0, i32 1, !dbg !11496
  %103 = load i32, i32* %n119, align 4, !dbg !11496
  %cmp120 = icmp ult i32 %101, %103, !dbg !11497
  br i1 %cmp120, label %for.body, label %for.end, !dbg !11498

for.body:                                         ; preds = %for.cond
  %104 = load i32*, i32** %data.addr, align 8, !dbg !11499
  %105 = load i32, i32* %i, align 4, !dbg !11502
  %idxprom122 = sext i32 %105 to i64, !dbg !11499
  %arrayidx123 = getelementptr i32, i32* %104, i64 %idxprom122, !dbg !11499
  %106 = load i32, i32* %arrayidx123, align 4, !dbg !11499
  %107 = load i32, i32* %maxdata, align 4, !dbg !11503
  %cmp124 = icmp ugt i32 %106, %107, !dbg !11504
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !11505

if.then126:                                       ; preds = %for.body
  store i32 -22, i32* %ret, align 4, !dbg !11506
  br label %for.end, !dbg !11508

if.end127:                                        ; preds = %for.body
  br label %for.inc, !dbg !11509

for.inc:                                          ; preds = %if.end127
  %108 = load i32, i32* %i, align 4, !dbg !11510
  %inc = add i32 %108, 1, !dbg !11510
  store i32 %inc, i32* %i, align 4, !dbg !11510
  br label %for.cond, !dbg !11511, !llvm.loop !11512

for.end:                                          ; preds = %if.then126, %for.cond
  %109 = load i32, i32* %ret, align 4, !dbg !11514
  %cmp128 = icmp eq i32 %109, 0, !dbg !11516
  br i1 %cmp128, label %if.then130, label %if.end136, !dbg !11517

if.then130:                                       ; preds = %for.end
  %110 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11518
  %insn_write = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %110, i32 0, i32 19, !dbg !11520
  %111 = load i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_write, align 8, !dbg !11520
  %112 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11521
  %113 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11522
  %114 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11523
  %115 = load i32*, i32** %data.addr, align 8, !dbg !11524
  %call131 = call i32 %111(%struct.comedi_device* %112, %struct.comedi_subdevice* %113, %struct.comedi_insn* %114, i32* %115) #11, !dbg !11518
  store i32 %call131, i32* %ret, align 4, !dbg !11525
  %116 = load i32, i32* %ret, align 4, !dbg !11526
  %cmp132 = icmp eq i32 %116, -110, !dbg !11528
  br i1 %cmp132, label %if.then134, label %if.end135, !dbg !11529

if.then134:                                       ; preds = %if.then130
  br label %if.end135, !dbg !11530

if.end135:                                        ; preds = %if.then134, %if.then130
  br label %if.end136, !dbg !11532

if.end136:                                        ; preds = %if.end135, %for.end
  br label %sw.epilog173, !dbg !11533

sw.bb137:                                         ; preds = %if.end102
  %117 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11534
  %n138 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %117, i32 0, i32 1, !dbg !11536
  %118 = load i32, i32* %n138, align 4, !dbg !11536
  %cmp139 = icmp ne i32 %118, 2, !dbg !11537
  br i1 %cmp139, label %if.then141, label %if.else142, !dbg !11538

if.then141:                                       ; preds = %sw.bb137
  store i32 -22, i32* %ret, align 4, !dbg !11539
  br label %if.end165, !dbg !11541

if.else142:                                       ; preds = %sw.bb137
  call void @llvm.dbg.declare(metadata i32* %orig_mask, metadata !11542, metadata !DIExpression()), !dbg !11544
  %119 = load i32*, i32** %data.addr, align 8, !dbg !11545
  %arrayidx143 = getelementptr i32, i32* %119, i64 0, !dbg !11545
  %120 = load i32, i32* %arrayidx143, align 4, !dbg !11545
  store i32 %120, i32* %orig_mask, align 4, !dbg !11544
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !11546, metadata !DIExpression()), !dbg !11547
  store i32 0, i32* %shift, align 4, !dbg !11547
  %121 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11548
  %n_chan = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %121, i32 0, i32 3, !dbg !11550
  %122 = load i32, i32* %n_chan, align 8, !dbg !11550
  %cmp144 = icmp sle i32 %122, 32, !dbg !11551
  br i1 %cmp144, label %if.then146, label %if.end157, !dbg !11552

if.then146:                                       ; preds = %if.else142
  %123 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11553
  %chanspec147 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %123, i32 0, i32 4, !dbg !11553
  %124 = load i32, i32* %chanspec147, align 4, !dbg !11553
  %and148 = and i32 %124, 65535, !dbg !11553
  store i32 %and148, i32* %shift, align 4, !dbg !11555
  %125 = load i32, i32* %shift, align 4, !dbg !11556
  %cmp149 = icmp ugt i32 %125, 0, !dbg !11558
  br i1 %cmp149, label %if.then151, label %if.end156, !dbg !11559

if.then151:                                       ; preds = %if.then146
  %126 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11560
  %chanspec152 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %126, i32 0, i32 4, !dbg !11562
  store i32 0, i32* %chanspec152, align 4, !dbg !11563
  %127 = load i32, i32* %shift, align 4, !dbg !11564
  %128 = load i32*, i32** %data.addr, align 8, !dbg !11565
  %arrayidx153 = getelementptr i32, i32* %128, i64 0, !dbg !11565
  %129 = load i32, i32* %arrayidx153, align 4, !dbg !11566
  %shl = shl i32 %129, %127, !dbg !11566
  store i32 %shl, i32* %arrayidx153, align 4, !dbg !11566
  %130 = load i32, i32* %shift, align 4, !dbg !11567
  %131 = load i32*, i32** %data.addr, align 8, !dbg !11568
  %arrayidx154 = getelementptr i32, i32* %131, i64 1, !dbg !11568
  %132 = load i32, i32* %arrayidx154, align 4, !dbg !11569
  %shl155 = shl i32 %132, %130, !dbg !11569
  store i32 %shl155, i32* %arrayidx154, align 4, !dbg !11569
  br label %if.end156, !dbg !11570

if.end156:                                        ; preds = %if.then151, %if.then146
  br label %if.end157, !dbg !11571

if.end157:                                        ; preds = %if.end156, %if.else142
  %133 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11572
  %insn_bits = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %133, i32 0, i32 20, !dbg !11573
  %134 = load i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_bits, align 8, !dbg !11573
  %135 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11574
  %136 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11575
  %137 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11576
  %138 = load i32*, i32** %data.addr, align 8, !dbg !11577
  %call158 = call i32 %134(%struct.comedi_device* %135, %struct.comedi_subdevice* %136, %struct.comedi_insn* %137, i32* %138) #11, !dbg !11572
  store i32 %call158, i32* %ret, align 4, !dbg !11578
  %139 = load i32, i32* %orig_mask, align 4, !dbg !11579
  %140 = load i32*, i32** %data.addr, align 8, !dbg !11580
  %arrayidx159 = getelementptr i32, i32* %140, i64 0, !dbg !11580
  store i32 %139, i32* %arrayidx159, align 4, !dbg !11581
  %141 = load i32, i32* %shift, align 4, !dbg !11582
  %cmp160 = icmp ugt i32 %141, 0, !dbg !11584
  br i1 %cmp160, label %if.then162, label %if.end164, !dbg !11585

if.then162:                                       ; preds = %if.end157
  %142 = load i32, i32* %shift, align 4, !dbg !11586
  %143 = load i32*, i32** %data.addr, align 8, !dbg !11587
  %arrayidx163 = getelementptr i32, i32* %143, i64 1, !dbg !11587
  %144 = load i32, i32* %arrayidx163, align 4, !dbg !11588
  %shr = lshr i32 %144, %142, !dbg !11588
  store i32 %shr, i32* %arrayidx163, align 4, !dbg !11588
  br label %if.end164, !dbg !11587

if.end164:                                        ; preds = %if.then162, %if.end157
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %if.then141
  br label %sw.epilog173, !dbg !11589

sw.bb166:                                         ; preds = %if.end102
  %145 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11590
  %146 = load i32*, i32** %data.addr, align 8, !dbg !11591
  %call167 = call i32 @check_insn_config_length(%struct.comedi_insn* %145, i32* %146) #11, !dbg !11592
  store i32 %call167, i32* %ret, align 4, !dbg !11593
  %147 = load i32, i32* %ret, align 4, !dbg !11594
  %tobool168 = icmp ne i32 %147, 0, !dbg !11594
  br i1 %tobool168, label %if.then169, label %if.end170, !dbg !11596

if.then169:                                       ; preds = %sw.bb166
  br label %sw.epilog173, !dbg !11597

if.end170:                                        ; preds = %sw.bb166
  %148 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11598
  %insn_config = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %148, i32 0, i32 21, !dbg !11599
  %149 = load i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)*, i32 (%struct.comedi_device*, %struct.comedi_subdevice*, %struct.comedi_insn*, i32*)** %insn_config, align 8, !dbg !11599
  %150 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11600
  %151 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11601
  %152 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11602
  %153 = load i32*, i32** %data.addr, align 8, !dbg !11603
  %call171 = call i32 %149(%struct.comedi_device* %150, %struct.comedi_subdevice* %151, %struct.comedi_insn* %152, i32* %153) #11, !dbg !11598
  store i32 %call171, i32* %ret, align 4, !dbg !11604
  br label %sw.epilog173, !dbg !11605

sw.default172:                                    ; preds = %if.end102
  store i32 -22, i32* %ret, align 4, !dbg !11606
  br label %sw.epilog173, !dbg !11607

sw.epilog173:                                     ; preds = %sw.default172, %if.end170, %if.then169, %if.end165, %if.end136, %if.end110
  %154 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11608
  %busy174 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %154, i32 0, i32 9, !dbg !11609
  store i8* null, i8** %busy174, align 8, !dbg !11610
  br label %if.end175

if.end175:                                        ; preds = %sw.epilog173, %sw.epilog
  br label %out, !dbg !11611

out:                                              ; preds = %if.end175, %if.then101, %if.then98, %if.then93, %if.then87, %if.then79
  call void @llvm.dbg.label(metadata !11612), !dbg !11613
  %155 = load i32, i32* %ret, align 4, !dbg !11614
  ret i32 %155, !dbg !11615
}

; Function Attrs: noredzone
declare dso_local void @ktime_get_real_ts64(%struct.timespec64*) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #5

; Function Attrs: noredzone
declare dso_local void @__bad_udelay() #2

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #2

; Function Attrs: noredzone
declare dso_local void @__udelay(i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @check_insn_device_config_length(%struct.comedi_insn* %insn, i32* %data) #0 !dbg !11616 {
entry:
  %retval = alloca i32, align 4
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !11619, metadata !DIExpression()), !dbg !11620
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !11621, metadata !DIExpression()), !dbg !11622
  %0 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11623
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %0, i32 0, i32 1, !dbg !11625
  %1 = load i32, i32* %n, align 4, !dbg !11625
  %cmp = icmp ult i32 %1, 1, !dbg !11626
  br i1 %cmp, label %if.then, label %if.end, !dbg !11627

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11628
  br label %return, !dbg !11628

if.end:                                           ; preds = %entry
  %2 = load i32*, i32** %data.addr, align 8, !dbg !11629
  %arrayidx = getelementptr i32, i32* %2, i64 0, !dbg !11629
  %3 = load i32, i32* %arrayidx, align 4, !dbg !11629
  switch i32 %3, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb5
  ], !dbg !11630

sw.bb:                                            ; preds = %if.end, %if.end, %if.end
  %4 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11631
  %n1 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %4, i32 0, i32 1, !dbg !11634
  %5 = load i32, i32* %n1, align 4, !dbg !11634
  %cmp2 = icmp eq i32 %5, 3, !dbg !11635
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !11636

if.then3:                                         ; preds = %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !11637
  br label %return, !dbg !11637

if.end4:                                          ; preds = %sw.bb
  br label %sw.epilog, !dbg !11638

sw.bb5:                                           ; preds = %if.end
  %6 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11639
  %n6 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %6, i32 0, i32 1, !dbg !11641
  %7 = load i32, i32* %n6, align 4, !dbg !11641
  %cmp7 = icmp uge i32 %7, 2, !dbg !11642
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !11643

if.then8:                                         ; preds = %sw.bb5
  store i32 0, i32* %retval, align 4, !dbg !11644
  br label %return, !dbg !11644

if.end9:                                          ; preds = %sw.bb5
  br label %sw.epilog, !dbg !11645

sw.epilog:                                        ; preds = %if.end, %if.end9, %if.end4
  store i32 -22, i32* %retval, align 4, !dbg !11646
  br label %return, !dbg !11646

return:                                           ; preds = %sw.epilog, %if.then8, %if.then3, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !11647
  ret i32 %8, !dbg !11647
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_valid_routes(%struct.comedi_device* %dev, i32* %data) #0 !dbg !11648 {
entry:
  %dev.addr = alloca %struct.comedi_device*, align 8
  %data.addr = alloca i32*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11651, metadata !DIExpression()), !dbg !11652
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !11653, metadata !DIExpression()), !dbg !11654
  br label %do.body, !dbg !11655

do.body:                                          ; preds = %entry
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11656
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 12, !dbg !11656
  br label %do.end, !dbg !11656

do.end:                                           ; preds = %do.body
  %1 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11658
  %get_valid_routes = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %1, i32 0, i32 27, !dbg !11659
  %2 = load i32 (%struct.comedi_device*, i32, i32*)*, i32 (%struct.comedi_device*, i32, i32*)** %get_valid_routes, align 8, !dbg !11659
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11660
  %4 = load i32*, i32** %data.addr, align 8, !dbg !11661
  %arrayidx = getelementptr i32, i32* %4, i64 1, !dbg !11661
  %5 = load i32, i32* %arrayidx, align 4, !dbg !11661
  %6 = load i32*, i32** %data.addr, align 8, !dbg !11662
  %add.ptr = getelementptr i32, i32* %6, i64 2, !dbg !11663
  %call = call i32 %2(%struct.comedi_device* %3, i32 %5, i32* %add.ptr) #11, !dbg !11658
  %7 = load i32*, i32** %data.addr, align 8, !dbg !11664
  %arrayidx1 = getelementptr i32, i32* %7, i64 1, !dbg !11664
  store i32 %call, i32* %arrayidx1, align 4, !dbg !11665
  ret i32 0, !dbg !11666
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @check_insn_config_length(%struct.comedi_insn* %insn, i32* %data) #0 !dbg !11667 {
entry:
  %retval = alloca i32, align 4
  %insn.addr = alloca %struct.comedi_insn*, align 8
  %data.addr = alloca i32*, align 8
  store %struct.comedi_insn* %insn, %struct.comedi_insn** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_insn** %insn.addr, metadata !11668, metadata !DIExpression()), !dbg !11669
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !11670, metadata !DIExpression()), !dbg !11671
  %0 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11672
  %n = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %0, i32 0, i32 1, !dbg !11674
  %1 = load i32, i32* %n, align 4, !dbg !11674
  %cmp = icmp ult i32 %1, 1, !dbg !11675
  br i1 %cmp, label %if.then, label %if.end, !dbg !11676

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11677
  br label %return, !dbg !11677

if.end:                                           ; preds = %entry
  %2 = load i32*, i32** %data.addr, align 8, !dbg !11678
  %arrayidx = getelementptr i32, i32* %2, i64 0, !dbg !11678
  %3 = load i32, i32* %arrayidx, align 4, !dbg !11678
  switch i32 %3, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb
    i32 32, label %sw.bb
    i32 34, label %sw.bb
    i32 31, label %sw.bb5
    i32 28, label %sw.bb5
    i32 22, label %sw.bb5
    i32 24, label %sw.bb5
    i32 26, label %sw.bb5
    i32 27, label %sw.bb5
    i32 20, label %sw.bb5
    i32 4097, label %sw.bb5
    i32 4098, label %sw.bb5
    i32 4099, label %sw.bb5
    i32 4109, label %sw.bb5
    i32 5002, label %sw.bb5
    i32 5000, label %sw.bb5
    i32 5001, label %sw.bb5
    i32 2001, label %sw.bb10
    i32 2002, label %sw.bb10
    i32 2003, label %sw.bb10
    i32 2004, label %sw.bb10
    i32 2005, label %sw.bb10
    i32 33, label %sw.bb10
    i32 5003, label %sw.bb10
    i32 5004, label %sw.bb10
    i32 2006, label %sw.bb10
    i32 29, label %sw.bb15
    i32 16, label %sw.bb15
    i32 23, label %sw.bb15
    i32 21, label %sw.bb20
    i32 5005, label %sw.bb25
  ], !dbg !11679

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end
  %4 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11680
  %n1 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %4, i32 0, i32 1, !dbg !11683
  %5 = load i32, i32* %n1, align 4, !dbg !11683
  %cmp2 = icmp eq i32 %5, 1, !dbg !11684
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !11685

if.then3:                                         ; preds = %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !11686
  br label %return, !dbg !11686

if.end4:                                          ; preds = %sw.bb
  br label %sw.epilog, !dbg !11687

sw.bb5:                                           ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %6 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11688
  %n6 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %6, i32 0, i32 1, !dbg !11690
  %7 = load i32, i32* %n6, align 4, !dbg !11690
  %cmp7 = icmp eq i32 %7, 2, !dbg !11691
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !11692

if.then8:                                         ; preds = %sw.bb5
  store i32 0, i32* %retval, align 4, !dbg !11693
  br label %return, !dbg !11693

if.end9:                                          ; preds = %sw.bb5
  br label %sw.epilog, !dbg !11694

sw.bb10:                                          ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %8 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11695
  %n11 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %8, i32 0, i32 1, !dbg !11697
  %9 = load i32, i32* %n11, align 4, !dbg !11697
  %cmp12 = icmp eq i32 %9, 3, !dbg !11698
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !11699

if.then13:                                        ; preds = %sw.bb10
  store i32 0, i32* %retval, align 4, !dbg !11700
  br label %return, !dbg !11700

if.end14:                                         ; preds = %sw.bb10
  br label %sw.epilog, !dbg !11701

sw.bb15:                                          ; preds = %if.end, %if.end, %if.end
  %10 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11702
  %n16 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %10, i32 0, i32 1, !dbg !11704
  %11 = load i32, i32* %n16, align 4, !dbg !11704
  %cmp17 = icmp eq i32 %11, 5, !dbg !11705
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !11706

if.then18:                                        ; preds = %sw.bb15
  store i32 0, i32* %retval, align 4, !dbg !11707
  br label %return, !dbg !11707

if.end19:                                         ; preds = %sw.bb15
  br label %sw.epilog, !dbg !11708

sw.bb20:                                          ; preds = %if.end
  %12 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11709
  %n21 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %12, i32 0, i32 1, !dbg !11711
  %13 = load i32, i32* %n21, align 4, !dbg !11711
  %cmp22 = icmp eq i32 %13, 6, !dbg !11712
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !11713

if.then23:                                        ; preds = %sw.bb20
  store i32 0, i32* %retval, align 4, !dbg !11714
  br label %return, !dbg !11714

if.end24:                                         ; preds = %sw.bb20
  br label %sw.epilog, !dbg !11715

sw.bb25:                                          ; preds = %if.end
  %14 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11716
  %n26 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %14, i32 0, i32 1, !dbg !11718
  %15 = load i32, i32* %n26, align 4, !dbg !11718
  %cmp27 = icmp uge i32 %15, 4, !dbg !11719
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !11720

if.then28:                                        ; preds = %sw.bb25
  store i32 0, i32* %retval, align 4, !dbg !11721
  br label %return, !dbg !11721

if.end29:                                         ; preds = %sw.bb25
  br label %sw.epilog, !dbg !11722

sw.default:                                       ; preds = %if.end
  %16 = load i32*, i32** %data.addr, align 8, !dbg !11723
  %arrayidx30 = getelementptr i32, i32* %16, i64 0, !dbg !11723
  %17 = load i32, i32* %arrayidx30, align 4, !dbg !11723
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.16, i64 0, i64 0), i32 %17) #14, !dbg !11723
  %call31 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.check_insn_config_length, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.18, i64 0, i64 0)) #14, !dbg !11724
  %18 = load %struct.comedi_insn*, %struct.comedi_insn** %insn.addr, align 8, !dbg !11725
  %n32 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %18, i32 0, i32 1, !dbg !11725
  %19 = load i32, i32* %n32, align 4, !dbg !11725
  %call33 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.19, i64 0, i64 0), i32 %19) #14, !dbg !11725
  store i32 0, i32* %retval, align 4, !dbg !11726
  br label %return, !dbg !11726

sw.epilog:                                        ; preds = %if.end29, %if.end24, %if.end19, %if.end14, %if.end9, %if.end4
  store i32 -22, i32* %retval, align 4, !dbg !11727
  br label %return, !dbg !11727

return:                                           ; preds = %sw.epilog, %sw.default, %if.then28, %if.then23, %if.then18, %if.then13, %if.then8, %if.then3, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !11728
  ret i32 %20, !dbg !11728
}

; Function Attrs: noredzone
declare dso_local i32 @down_read_trylock(%struct.rw_semaphore*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @vma_pages(%struct.vm_area_struct* %vma) #0 !dbg !11729 {
entry:
  %vma.addr = alloca %struct.vm_area_struct*, align 8
  store %struct.vm_area_struct* %vma, %struct.vm_area_struct** %vma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vm_area_struct** %vma.addr, metadata !11730, metadata !DIExpression()), !dbg !11731
  %0 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !11732
  %vm_end = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %0, i32 0, i32 1, !dbg !11733
  %1 = load i64, i64* %vm_end, align 8, !dbg !11733
  %2 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !11734
  %vm_start = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %2, i32 0, i32 0, !dbg !11735
  %3 = load i64, i64* %vm_start, align 8, !dbg !11735
  %sub = sub i64 %1, %3, !dbg !11736
  %shr = lshr i64 %sub, 12, !dbg !11737
  ret i64 %shr, !dbg !11738
}

; Function Attrs: noredzone
declare dso_local %struct.comedi_buf_map* @comedi_buf_map_from_subdev_get(%struct.comedi_subdevice*) #2

; Function Attrs: noredzone
declare dso_local i32 @dma_mmap_attrs(%struct.device*, %struct.vm_area_struct*, i8*, i64, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #0 !dbg !11739 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !11743, metadata !DIExpression()), !dbg !11744
  call void @llvm.dbg.declare(metadata i64* %y, metadata !11745, metadata !DIExpression()), !dbg !11746
  %0 = load i64, i64* %x.addr, align 8, !dbg !11747
  %sub = sub i64 %0, -2147483648, !dbg !11748
  store i64 %sub, i64* %y, align 8, !dbg !11746
  %1 = load i64, i64* %y, align 8, !dbg !11749
  %2 = load i64, i64* %x.addr, align 8, !dbg !11750
  %3 = load i64, i64* %y, align 8, !dbg !11751
  %cmp = icmp ugt i64 %2, %3, !dbg !11752
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11753

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !11754
  br label %cond.end, !dbg !11753

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !11755
  %sub1 = sub i64 -2147483648, %5, !dbg !11756
  br label %cond.end, !dbg !11753

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !11753
  %add = add i64 %1, %cond, !dbg !11757
  store i64 %add, i64* %x.addr, align 8, !dbg !11758
  %6 = load i64, i64* %x.addr, align 8, !dbg !11759
  ret i64 %6, !dbg !11760
}

; Function Attrs: noredzone
declare dso_local i32 @remap_pfn_range(%struct.vm_area_struct*, i64, i64, i64, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @comedi_buf_map_put(%struct.comedi_buf_map*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @comedi_vm_open(%struct.vm_area_struct* %area) #0 !dbg !11761 {
entry:
  %area.addr = alloca %struct.vm_area_struct*, align 8
  %bm = alloca %struct.comedi_buf_map*, align 8
  store %struct.vm_area_struct* %area, %struct.vm_area_struct** %area.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vm_area_struct** %area.addr, metadata !11762, metadata !DIExpression()), !dbg !11763
  call void @llvm.dbg.declare(metadata %struct.comedi_buf_map** %bm, metadata !11764, metadata !DIExpression()), !dbg !11765
  %0 = load %struct.vm_area_struct*, %struct.vm_area_struct** %area.addr, align 8, !dbg !11766
  %vm_private_data = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %0, i32 0, i32 15, !dbg !11767
  %1 = load i8*, i8** %vm_private_data, align 8, !dbg !11767
  %2 = bitcast i8* %1 to %struct.comedi_buf_map*, !dbg !11766
  store %struct.comedi_buf_map* %2, %struct.comedi_buf_map** %bm, align 8, !dbg !11768
  %3 = load %struct.comedi_buf_map*, %struct.comedi_buf_map** %bm, align 8, !dbg !11769
  call void @comedi_buf_map_get(%struct.comedi_buf_map* %3) #11, !dbg !11770
  ret void, !dbg !11771
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @comedi_vm_close(%struct.vm_area_struct* %area) #0 !dbg !11772 {
entry:
  %area.addr = alloca %struct.vm_area_struct*, align 8
  %bm = alloca %struct.comedi_buf_map*, align 8
  store %struct.vm_area_struct* %area, %struct.vm_area_struct** %area.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vm_area_struct** %area.addr, metadata !11773, metadata !DIExpression()), !dbg !11774
  call void @llvm.dbg.declare(metadata %struct.comedi_buf_map** %bm, metadata !11775, metadata !DIExpression()), !dbg !11776
  %0 = load %struct.vm_area_struct*, %struct.vm_area_struct** %area.addr, align 8, !dbg !11777
  %vm_private_data = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %0, i32 0, i32 15, !dbg !11778
  %1 = load i8*, i8** %vm_private_data, align 8, !dbg !11778
  %2 = bitcast i8* %1 to %struct.comedi_buf_map*, !dbg !11777
  store %struct.comedi_buf_map* %2, %struct.comedi_buf_map** %bm, align 8, !dbg !11779
  %3 = load %struct.comedi_buf_map*, %struct.comedi_buf_map** %bm, align 8, !dbg !11780
  %call = call i32 @comedi_buf_map_put(%struct.comedi_buf_map* %3) #11, !dbg !11781
  ret void, !dbg !11782
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comedi_vm_access(%struct.vm_area_struct* %vma, i64 %addr, i8* %buf, i32 %len, i32 %write) #0 !dbg !11783 {
entry:
  %retval = alloca i32, align 4
  %vma.addr = alloca %struct.vm_area_struct*, align 8
  %addr.addr = alloca i64, align 8
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %write.addr = alloca i32, align 4
  %bm = alloca %struct.comedi_buf_map*, align 8
  %offset = alloca i64, align 8
  store %struct.vm_area_struct* %vma, %struct.vm_area_struct** %vma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vm_area_struct** %vma.addr, metadata !11784, metadata !DIExpression()), !dbg !11785
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !11786, metadata !DIExpression()), !dbg !11787
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11788, metadata !DIExpression()), !dbg !11789
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !11790, metadata !DIExpression()), !dbg !11791
  store i32 %write, i32* %write.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %write.addr, metadata !11792, metadata !DIExpression()), !dbg !11793
  call void @llvm.dbg.declare(metadata %struct.comedi_buf_map** %bm, metadata !11794, metadata !DIExpression()), !dbg !11795
  %0 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !11796
  %vm_private_data = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %0, i32 0, i32 15, !dbg !11797
  %1 = load i8*, i8** %vm_private_data, align 8, !dbg !11797
  %2 = bitcast i8* %1 to %struct.comedi_buf_map*, !dbg !11796
  store %struct.comedi_buf_map* %2, %struct.comedi_buf_map** %bm, align 8, !dbg !11795
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !11798, metadata !DIExpression()), !dbg !11799
  %3 = load i64, i64* %addr.addr, align 8, !dbg !11800
  %4 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !11801
  %vm_start = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %4, i32 0, i32 0, !dbg !11802
  %5 = load i64, i64* %vm_start, align 8, !dbg !11802
  %sub = sub i64 %3, %5, !dbg !11803
  %6 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !11804
  %vm_pgoff = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %6, i32 0, i32 13, !dbg !11805
  %7 = load i64, i64* %vm_pgoff, align 8, !dbg !11805
  %shl = shl i64 %7, 12, !dbg !11806
  %add = add i64 %sub, %shl, !dbg !11807
  store i64 %add, i64* %offset, align 8, !dbg !11799
  %8 = load i32, i32* %len.addr, align 4, !dbg !11808
  %cmp = icmp slt i32 %8, 0, !dbg !11810
  br i1 %cmp, label %if.then, label %if.end, !dbg !11811

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11812
  br label %return, !dbg !11812

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %len.addr, align 4, !dbg !11813
  %conv = sext i32 %9 to i64, !dbg !11813
  %10 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !11815
  %vm_end = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %10, i32 0, i32 1, !dbg !11816
  %11 = load i64, i64* %vm_end, align 8, !dbg !11816
  %12 = load i64, i64* %addr.addr, align 8, !dbg !11817
  %sub1 = sub i64 %11, %12, !dbg !11818
  %cmp2 = icmp ugt i64 %conv, %sub1, !dbg !11819
  br i1 %cmp2, label %if.then4, label %if.end8, !dbg !11820

if.then4:                                         ; preds = %if.end
  %13 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !11821
  %vm_end5 = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %13, i32 0, i32 1, !dbg !11822
  %14 = load i64, i64* %vm_end5, align 8, !dbg !11822
  %15 = load i64, i64* %addr.addr, align 8, !dbg !11823
  %sub6 = sub i64 %14, %15, !dbg !11824
  %conv7 = trunc i64 %sub6 to i32, !dbg !11821
  store i32 %conv7, i32* %len.addr, align 4, !dbg !11825
  br label %if.end8, !dbg !11826

if.end8:                                          ; preds = %if.then4, %if.end
  %16 = load %struct.comedi_buf_map*, %struct.comedi_buf_map** %bm, align 8, !dbg !11827
  %17 = load i64, i64* %offset, align 8, !dbg !11828
  %18 = load i8*, i8** %buf.addr, align 8, !dbg !11829
  %19 = load i32, i32* %len.addr, align 4, !dbg !11830
  %20 = load i32, i32* %write.addr, align 4, !dbg !11831
  %call = call i32 @comedi_buf_map_access(%struct.comedi_buf_map* %16, i64 %17, i8* %18, i32 %19, i32 %20) #11, !dbg !11832
  store i32 %call, i32* %retval, align 4, !dbg !11833
  br label %return, !dbg !11833

return:                                           ; preds = %if.end8, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !11834
  ret i32 %21, !dbg !11834
}

; Function Attrs: noredzone
declare dso_local void @comedi_buf_map_get(%struct.comedi_buf_map*) #2

; Function Attrs: noredzone
declare dso_local i32 @comedi_buf_map_access(%struct.comedi_buf_map*, i64, i8*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @try_module_get(%struct.module* %module) #0 !dbg !11835 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !11838, metadata !DIExpression()), !dbg !11839
  ret i1 true, !dbg !11840
}

; Function Attrs: noredzone
declare dso_local i32 @fasync_helper(i32, %struct.file*, i32, %struct.fasync_struct**) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @max_read_buffer_kb_show(%struct.device* %csdev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !11841 {
entry:
  %retval = alloca i64, align 8
  %csdev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %minor = alloca i32, align 4
  %dev = alloca %struct.comedi_device*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %size = alloca i32, align 4
  store %struct.device* %csdev, %struct.device** %csdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %csdev.addr, metadata !11842, metadata !DIExpression()), !dbg !11843
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11844, metadata !DIExpression()), !dbg !11845
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11846, metadata !DIExpression()), !dbg !11847
  call void @llvm.dbg.declare(metadata i32* %minor, metadata !11848, metadata !DIExpression()), !dbg !11849
  %0 = load %struct.device*, %struct.device** %csdev.addr, align 8, !dbg !11850
  %devt = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 25, !dbg !11850
  %1 = load i32, i32* %devt, align 8, !dbg !11850
  %and = and i32 %1, 1048575, !dbg !11850
  store i32 %and, i32* %minor, align 4, !dbg !11849
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !11851, metadata !DIExpression()), !dbg !11852
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !11853, metadata !DIExpression()), !dbg !11854
  call void @llvm.dbg.declare(metadata i32* %size, metadata !11855, metadata !DIExpression()), !dbg !11856
  store i32 0, i32* %size, align 4, !dbg !11856
  %2 = load i32, i32* %minor, align 4, !dbg !11857
  %call = call %struct.comedi_device* @comedi_dev_get_from_minor(i32 %2) #11, !dbg !11858
  store %struct.comedi_device* %call, %struct.comedi_device** %dev, align 8, !dbg !11859
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !11860
  %tobool = icmp ne %struct.comedi_device* %3, null, !dbg !11860
  br i1 %tobool, label %if.end, label %if.then, !dbg !11862

if.then:                                          ; preds = %entry
  store i64 -19, i64* %retval, align 8, !dbg !11863
  br label %return, !dbg !11863

if.end:                                           ; preds = %entry
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !11864
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %4, i32 0, i32 12, !dbg !11865
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !11866
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !11867
  %6 = load i32, i32* %minor, align 4, !dbg !11868
  %call1 = call %struct.comedi_subdevice* @comedi_read_subdevice(%struct.comedi_device* %5, i32 %6) #11, !dbg !11869
  store %struct.comedi_subdevice* %call1, %struct.comedi_subdevice** %s, align 8, !dbg !11870
  %7 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11871
  %tobool2 = icmp ne %struct.comedi_subdevice* %7, null, !dbg !11871
  br i1 %tobool2, label %land.lhs.true, label %if.end9, !dbg !11873

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11874
  %subdev_flags = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %8, i32 0, i32 4, !dbg !11875
  %9 = load i32, i32* %subdev_flags, align 4, !dbg !11875
  %and3 = and i32 %9, 32768, !dbg !11876
  %tobool4 = icmp ne i32 %and3, 0, !dbg !11876
  br i1 %tobool4, label %land.lhs.true5, label %if.end9, !dbg !11877

land.lhs.true5:                                   ; preds = %land.lhs.true
  %10 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11878
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %10, i32 0, i32 7, !dbg !11879
  %11 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !11879
  %tobool6 = icmp ne %struct.comedi_async* %11, null, !dbg !11878
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !11880

if.then7:                                         ; preds = %land.lhs.true5
  %12 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11881
  %async8 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %12, i32 0, i32 7, !dbg !11882
  %13 = load %struct.comedi_async*, %struct.comedi_async** %async8, align 8, !dbg !11882
  %max_bufsize = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %13, i32 0, i32 3, !dbg !11883
  %14 = load i32, i32* %max_bufsize, align 8, !dbg !11883
  %div = udiv i32 %14, 1024, !dbg !11884
  store i32 %div, i32* %size, align 4, !dbg !11885
  br label %if.end9, !dbg !11886

if.end9:                                          ; preds = %if.then7, %land.lhs.true5, %land.lhs.true, %if.end
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !11887
  %mutex10 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %15, i32 0, i32 12, !dbg !11888
  call void @mutex_unlock(%struct.mutex* %mutex10) #11, !dbg !11889
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !11890
  %call11 = call i32 @comedi_dev_put(%struct.comedi_device* %16) #11, !dbg !11891
  %17 = load i8*, i8** %buf.addr, align 8, !dbg !11892
  %18 = load i32, i32* %size, align 4, !dbg !11893
  %call12 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %17, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0), i32 %18) #11, !dbg !11894
  %conv = sext i32 %call12 to i64, !dbg !11894
  store i64 %conv, i64* %retval, align 8, !dbg !11895
  br label %return, !dbg !11895

return:                                           ; preds = %if.end9, %if.then
  %19 = load i64, i64* %retval, align 8, !dbg !11896
  ret i64 %19, !dbg !11896
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @max_read_buffer_kb_store(%struct.device* %csdev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !11897 {
entry:
  %retval = alloca i64, align 8
  %csdev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %minor = alloca i32, align 4
  %dev = alloca %struct.comedi_device*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %size = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.device* %csdev, %struct.device** %csdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %csdev.addr, metadata !11898, metadata !DIExpression()), !dbg !11899
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !11900, metadata !DIExpression()), !dbg !11901
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11902, metadata !DIExpression()), !dbg !11903
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !11904, metadata !DIExpression()), !dbg !11905
  call void @llvm.dbg.declare(metadata i32* %minor, metadata !11906, metadata !DIExpression()), !dbg !11907
  %0 = load %struct.device*, %struct.device** %csdev.addr, align 8, !dbg !11908
  %devt = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 25, !dbg !11908
  %1 = load i32, i32* %devt, align 8, !dbg !11908
  %and = and i32 %1, 1048575, !dbg !11908
  store i32 %and, i32* %minor, align 4, !dbg !11907
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !11909, metadata !DIExpression()), !dbg !11910
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !11911, metadata !DIExpression()), !dbg !11912
  call void @llvm.dbg.declare(metadata i32* %size, metadata !11913, metadata !DIExpression()), !dbg !11914
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11915, metadata !DIExpression()), !dbg !11916
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !11917
  %call = call i32 @kstrtouint(i8* %2, i32 10, i32* %size) #11, !dbg !11918
  store i32 %call, i32* %err, align 4, !dbg !11919
  %3 = load i32, i32* %err, align 4, !dbg !11920
  %tobool = icmp ne i32 %3, 0, !dbg !11920
  br i1 %tobool, label %if.then, label %if.end, !dbg !11922

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %err, align 4, !dbg !11923
  %conv = sext i32 %4 to i64, !dbg !11923
  store i64 %conv, i64* %retval, align 8, !dbg !11924
  br label %return, !dbg !11924

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %size, align 4, !dbg !11925
  %cmp = icmp ugt i32 %5, 4194303, !dbg !11927
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !11928

if.then2:                                         ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !11929
  br label %return, !dbg !11929

if.end3:                                          ; preds = %if.end
  %6 = load i32, i32* %size, align 4, !dbg !11930
  %mul = mul i32 %6, 1024, !dbg !11930
  store i32 %mul, i32* %size, align 4, !dbg !11930
  %7 = load i32, i32* %minor, align 4, !dbg !11931
  %call4 = call %struct.comedi_device* @comedi_dev_get_from_minor(i32 %7) #11, !dbg !11932
  store %struct.comedi_device* %call4, %struct.comedi_device** %dev, align 8, !dbg !11933
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !11934
  %tobool5 = icmp ne %struct.comedi_device* %8, null, !dbg !11934
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !11936

if.then6:                                         ; preds = %if.end3
  store i64 -19, i64* %retval, align 8, !dbg !11937
  br label %return, !dbg !11937

if.end7:                                          ; preds = %if.end3
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !11938
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %9, i32 0, i32 12, !dbg !11939
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !11940
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !11941
  %11 = load i32, i32* %minor, align 4, !dbg !11942
  %call8 = call %struct.comedi_subdevice* @comedi_read_subdevice(%struct.comedi_device* %10, i32 %11) #11, !dbg !11943
  store %struct.comedi_subdevice* %call8, %struct.comedi_subdevice** %s, align 8, !dbg !11944
  %12 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11945
  %tobool9 = icmp ne %struct.comedi_subdevice* %12, null, !dbg !11945
  br i1 %tobool9, label %land.lhs.true, label %if.else, !dbg !11947

land.lhs.true:                                    ; preds = %if.end7
  %13 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11948
  %subdev_flags = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %13, i32 0, i32 4, !dbg !11949
  %14 = load i32, i32* %subdev_flags, align 4, !dbg !11949
  %and10 = and i32 %14, 32768, !dbg !11950
  %tobool11 = icmp ne i32 %and10, 0, !dbg !11950
  br i1 %tobool11, label %land.lhs.true12, label %if.else, !dbg !11951

land.lhs.true12:                                  ; preds = %land.lhs.true
  %15 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11952
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %15, i32 0, i32 7, !dbg !11953
  %16 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !11953
  %tobool13 = icmp ne %struct.comedi_async* %16, null, !dbg !11952
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !11954

if.then14:                                        ; preds = %land.lhs.true12
  %17 = load i32, i32* %size, align 4, !dbg !11955
  %18 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11956
  %async15 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %18, i32 0, i32 7, !dbg !11957
  %19 = load %struct.comedi_async*, %struct.comedi_async** %async15, align 8, !dbg !11957
  %max_bufsize = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %19, i32 0, i32 3, !dbg !11958
  store i32 %17, i32* %max_bufsize, align 8, !dbg !11959
  br label %if.end16, !dbg !11956

if.else:                                          ; preds = %land.lhs.true12, %land.lhs.true, %if.end7
  store i32 -22, i32* %err, align 4, !dbg !11960
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then14
  %20 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !11961
  %mutex17 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %20, i32 0, i32 12, !dbg !11962
  call void @mutex_unlock(%struct.mutex* %mutex17) #11, !dbg !11963
  %21 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !11964
  %call18 = call i32 @comedi_dev_put(%struct.comedi_device* %21) #11, !dbg !11965
  %22 = load i32, i32* %err, align 4, !dbg !11966
  %tobool19 = icmp ne i32 %22, 0, !dbg !11966
  br i1 %tobool19, label %cond.true, label %cond.false, !dbg !11966

cond.true:                                        ; preds = %if.end16
  %23 = load i32, i32* %err, align 4, !dbg !11967
  %conv20 = sext i32 %23 to i64, !dbg !11967
  br label %cond.end, !dbg !11966

cond.false:                                       ; preds = %if.end16
  %24 = load i64, i64* %count.addr, align 8, !dbg !11968
  br label %cond.end, !dbg !11966

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv20, %cond.true ], [ %24, %cond.false ], !dbg !11966
  store i64 %cond, i64* %retval, align 8, !dbg !11969
  br label %return, !dbg !11969

return:                                           ; preds = %cond.end, %if.then6, %if.then2, %if.then
  %25 = load i64, i64* %retval, align 8, !dbg !11970
  ret i64 %25, !dbg !11970
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.comedi_subdevice* @comedi_read_subdevice(%struct.comedi_device* %dev, i32 %minor) #0 !dbg !11971 {
entry:
  %retval = alloca %struct.comedi_subdevice*, align 8
  %dev.addr = alloca %struct.comedi_device*, align 8
  %minor.addr = alloca i32, align 4
  %s = alloca %struct.comedi_subdevice*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !11972, metadata !DIExpression()), !dbg !11973
  store i32 %minor, i32* %minor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %minor.addr, metadata !11974, metadata !DIExpression()), !dbg !11975
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !11976, metadata !DIExpression()), !dbg !11977
  br label %do.body, !dbg !11978

do.body:                                          ; preds = %entry
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11979
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 12, !dbg !11979
  br label %do.end, !dbg !11979

do.end:                                           ; preds = %do.body
  %1 = load i32, i32* %minor.addr, align 4, !dbg !11981
  %cmp = icmp uge i32 %1, 48, !dbg !11983
  br i1 %cmp, label %if.then, label %if.end3, !dbg !11984

if.then:                                          ; preds = %do.end
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !11985
  %3 = load i32, i32* %minor.addr, align 4, !dbg !11987
  %call = call %struct.comedi_subdevice* @comedi_subdevice_from_minor(%struct.comedi_device* %2, i32 %3) #11, !dbg !11988
  store %struct.comedi_subdevice* %call, %struct.comedi_subdevice** %s, align 8, !dbg !11989
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11990
  %tobool = icmp ne %struct.comedi_subdevice* %4, null, !dbg !11990
  br i1 %tobool, label %lor.lhs.false, label %if.then2, !dbg !11992

lor.lhs.false:                                    ; preds = %if.then
  %5 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11993
  %subdev_flags = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %5, i32 0, i32 4, !dbg !11994
  %6 = load i32, i32* %subdev_flags, align 4, !dbg !11994
  %and = and i32 %6, 32768, !dbg !11995
  %tobool1 = icmp ne i32 %and, 0, !dbg !11995
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !11996

if.then2:                                         ; preds = %lor.lhs.false, %if.then
  %7 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !11997
  store %struct.comedi_subdevice* %7, %struct.comedi_subdevice** %retval, align 8, !dbg !11998
  br label %return, !dbg !11998

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end3, !dbg !11999

if.end3:                                          ; preds = %if.end, %do.end
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12000
  %read_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %8, i32 0, i32 21, !dbg !12001
  %9 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %read_subdev, align 8, !dbg !12001
  store %struct.comedi_subdevice* %9, %struct.comedi_subdevice** %retval, align 8, !dbg !12002
  br label %return, !dbg !12002

return:                                           ; preds = %if.end3, %if.then2
  %10 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %retval, align 8, !dbg !12003
  ret %struct.comedi_subdevice* %10, !dbg !12003
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i32 @kstrtouint(i8*, i32, i32*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @read_buffer_kb_show(%struct.device* %csdev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12004 {
entry:
  %retval = alloca i64, align 8
  %csdev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %minor = alloca i32, align 4
  %dev = alloca %struct.comedi_device*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %size = alloca i32, align 4
  store %struct.device* %csdev, %struct.device** %csdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %csdev.addr, metadata !12005, metadata !DIExpression()), !dbg !12006
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12007, metadata !DIExpression()), !dbg !12008
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12009, metadata !DIExpression()), !dbg !12010
  call void @llvm.dbg.declare(metadata i32* %minor, metadata !12011, metadata !DIExpression()), !dbg !12012
  %0 = load %struct.device*, %struct.device** %csdev.addr, align 8, !dbg !12013
  %devt = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 25, !dbg !12013
  %1 = load i32, i32* %devt, align 8, !dbg !12013
  %and = and i32 %1, 1048575, !dbg !12013
  store i32 %and, i32* %minor, align 4, !dbg !12012
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !12014, metadata !DIExpression()), !dbg !12015
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !12016, metadata !DIExpression()), !dbg !12017
  call void @llvm.dbg.declare(metadata i32* %size, metadata !12018, metadata !DIExpression()), !dbg !12019
  store i32 0, i32* %size, align 4, !dbg !12019
  %2 = load i32, i32* %minor, align 4, !dbg !12020
  %call = call %struct.comedi_device* @comedi_dev_get_from_minor(i32 %2) #11, !dbg !12021
  store %struct.comedi_device* %call, %struct.comedi_device** %dev, align 8, !dbg !12022
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12023
  %tobool = icmp ne %struct.comedi_device* %3, null, !dbg !12023
  br i1 %tobool, label %if.end, label %if.then, !dbg !12025

if.then:                                          ; preds = %entry
  store i64 -19, i64* %retval, align 8, !dbg !12026
  br label %return, !dbg !12026

if.end:                                           ; preds = %entry
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12027
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %4, i32 0, i32 12, !dbg !12028
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !12029
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12030
  %6 = load i32, i32* %minor, align 4, !dbg !12031
  %call1 = call %struct.comedi_subdevice* @comedi_read_subdevice(%struct.comedi_device* %5, i32 %6) #11, !dbg !12032
  store %struct.comedi_subdevice* %call1, %struct.comedi_subdevice** %s, align 8, !dbg !12033
  %7 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12034
  %tobool2 = icmp ne %struct.comedi_subdevice* %7, null, !dbg !12034
  br i1 %tobool2, label %land.lhs.true, label %if.end9, !dbg !12036

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12037
  %subdev_flags = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %8, i32 0, i32 4, !dbg !12038
  %9 = load i32, i32* %subdev_flags, align 4, !dbg !12038
  %and3 = and i32 %9, 32768, !dbg !12039
  %tobool4 = icmp ne i32 %and3, 0, !dbg !12039
  br i1 %tobool4, label %land.lhs.true5, label %if.end9, !dbg !12040

land.lhs.true5:                                   ; preds = %land.lhs.true
  %10 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12041
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %10, i32 0, i32 7, !dbg !12042
  %11 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !12042
  %tobool6 = icmp ne %struct.comedi_async* %11, null, !dbg !12041
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !12043

if.then7:                                         ; preds = %land.lhs.true5
  %12 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12044
  %async8 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %12, i32 0, i32 7, !dbg !12045
  %13 = load %struct.comedi_async*, %struct.comedi_async** %async8, align 8, !dbg !12045
  %prealloc_bufsz = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %13, i32 0, i32 1, !dbg !12046
  %14 = load i32, i32* %prealloc_bufsz, align 8, !dbg !12046
  %div = udiv i32 %14, 1024, !dbg !12047
  store i32 %div, i32* %size, align 4, !dbg !12048
  br label %if.end9, !dbg !12049

if.end9:                                          ; preds = %if.then7, %land.lhs.true5, %land.lhs.true, %if.end
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12050
  %mutex10 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %15, i32 0, i32 12, !dbg !12051
  call void @mutex_unlock(%struct.mutex* %mutex10) #11, !dbg !12052
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12053
  %call11 = call i32 @comedi_dev_put(%struct.comedi_device* %16) #11, !dbg !12054
  %17 = load i8*, i8** %buf.addr, align 8, !dbg !12055
  %18 = load i32, i32* %size, align 4, !dbg !12056
  %call12 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %17, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0), i32 %18) #11, !dbg !12057
  %conv = sext i32 %call12 to i64, !dbg !12057
  store i64 %conv, i64* %retval, align 8, !dbg !12058
  br label %return, !dbg !12058

return:                                           ; preds = %if.end9, %if.then
  %19 = load i64, i64* %retval, align 8, !dbg !12059
  ret i64 %19, !dbg !12059
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @read_buffer_kb_store(%struct.device* %csdev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !12060 {
entry:
  %retval = alloca i64, align 8
  %csdev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %minor = alloca i32, align 4
  %dev = alloca %struct.comedi_device*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %size = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.device* %csdev, %struct.device** %csdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %csdev.addr, metadata !12061, metadata !DIExpression()), !dbg !12062
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12063, metadata !DIExpression()), !dbg !12064
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12065, metadata !DIExpression()), !dbg !12066
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !12067, metadata !DIExpression()), !dbg !12068
  call void @llvm.dbg.declare(metadata i32* %minor, metadata !12069, metadata !DIExpression()), !dbg !12070
  %0 = load %struct.device*, %struct.device** %csdev.addr, align 8, !dbg !12071
  %devt = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 25, !dbg !12071
  %1 = load i32, i32* %devt, align 8, !dbg !12071
  %and = and i32 %1, 1048575, !dbg !12071
  store i32 %and, i32* %minor, align 4, !dbg !12070
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !12072, metadata !DIExpression()), !dbg !12073
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !12074, metadata !DIExpression()), !dbg !12075
  call void @llvm.dbg.declare(metadata i32* %size, metadata !12076, metadata !DIExpression()), !dbg !12077
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12078, metadata !DIExpression()), !dbg !12079
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !12080
  %call = call i32 @kstrtouint(i8* %2, i32 10, i32* %size) #11, !dbg !12081
  store i32 %call, i32* %err, align 4, !dbg !12082
  %3 = load i32, i32* %err, align 4, !dbg !12083
  %tobool = icmp ne i32 %3, 0, !dbg !12083
  br i1 %tobool, label %if.then, label %if.end, !dbg !12085

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %err, align 4, !dbg !12086
  %conv = sext i32 %4 to i64, !dbg !12086
  store i64 %conv, i64* %retval, align 8, !dbg !12087
  br label %return, !dbg !12087

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %size, align 4, !dbg !12088
  %cmp = icmp ugt i32 %5, 4194303, !dbg !12090
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !12091

if.then2:                                         ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !12092
  br label %return, !dbg !12092

if.end3:                                          ; preds = %if.end
  %6 = load i32, i32* %size, align 4, !dbg !12093
  %mul = mul i32 %6, 1024, !dbg !12093
  store i32 %mul, i32* %size, align 4, !dbg !12093
  %7 = load i32, i32* %minor, align 4, !dbg !12094
  %call4 = call %struct.comedi_device* @comedi_dev_get_from_minor(i32 %7) #11, !dbg !12095
  store %struct.comedi_device* %call4, %struct.comedi_device** %dev, align 8, !dbg !12096
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12097
  %tobool5 = icmp ne %struct.comedi_device* %8, null, !dbg !12097
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !12099

if.then6:                                         ; preds = %if.end3
  store i64 -19, i64* %retval, align 8, !dbg !12100
  br label %return, !dbg !12100

if.end7:                                          ; preds = %if.end3
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12101
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %9, i32 0, i32 12, !dbg !12102
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !12103
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12104
  %11 = load i32, i32* %minor, align 4, !dbg !12105
  %call8 = call %struct.comedi_subdevice* @comedi_read_subdevice(%struct.comedi_device* %10, i32 %11) #11, !dbg !12106
  store %struct.comedi_subdevice* %call8, %struct.comedi_subdevice** %s, align 8, !dbg !12107
  %12 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12108
  %tobool9 = icmp ne %struct.comedi_subdevice* %12, null, !dbg !12108
  br i1 %tobool9, label %land.lhs.true, label %if.else, !dbg !12110

land.lhs.true:                                    ; preds = %if.end7
  %13 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12111
  %subdev_flags = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %13, i32 0, i32 4, !dbg !12112
  %14 = load i32, i32* %subdev_flags, align 4, !dbg !12112
  %and10 = and i32 %14, 32768, !dbg !12113
  %tobool11 = icmp ne i32 %and10, 0, !dbg !12113
  br i1 %tobool11, label %land.lhs.true12, label %if.else, !dbg !12114

land.lhs.true12:                                  ; preds = %land.lhs.true
  %15 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12115
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %15, i32 0, i32 7, !dbg !12116
  %16 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !12116
  %tobool13 = icmp ne %struct.comedi_async* %16, null, !dbg !12115
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !12117

if.then14:                                        ; preds = %land.lhs.true12
  %17 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12118
  %18 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12119
  %19 = load i32, i32* %size, align 4, !dbg !12120
  %call15 = call i32 @resize_async_buffer(%struct.comedi_device* %17, %struct.comedi_subdevice* %18, i32 %19) #11, !dbg !12121
  store i32 %call15, i32* %err, align 4, !dbg !12122
  br label %if.end16, !dbg !12123

if.else:                                          ; preds = %land.lhs.true12, %land.lhs.true, %if.end7
  store i32 -22, i32* %err, align 4, !dbg !12124
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then14
  %20 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12125
  %mutex17 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %20, i32 0, i32 12, !dbg !12126
  call void @mutex_unlock(%struct.mutex* %mutex17) #11, !dbg !12127
  %21 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12128
  %call18 = call i32 @comedi_dev_put(%struct.comedi_device* %21) #11, !dbg !12129
  %22 = load i32, i32* %err, align 4, !dbg !12130
  %tobool19 = icmp ne i32 %22, 0, !dbg !12130
  br i1 %tobool19, label %cond.true, label %cond.false, !dbg !12130

cond.true:                                        ; preds = %if.end16
  %23 = load i32, i32* %err, align 4, !dbg !12131
  %conv20 = sext i32 %23 to i64, !dbg !12131
  br label %cond.end, !dbg !12130

cond.false:                                       ; preds = %if.end16
  %24 = load i64, i64* %count.addr, align 8, !dbg !12132
  br label %cond.end, !dbg !12130

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv20, %cond.true ], [ %24, %cond.false ], !dbg !12130
  store i64 %cond, i64* %retval, align 8, !dbg !12133
  br label %return, !dbg !12133

return:                                           ; preds = %cond.end, %if.then6, %if.then2, %if.then
  %25 = load i64, i64* %retval, align 8, !dbg !12134
  ret i64 %25, !dbg !12134
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @max_write_buffer_kb_show(%struct.device* %csdev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12135 {
entry:
  %retval = alloca i64, align 8
  %csdev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %minor = alloca i32, align 4
  %dev = alloca %struct.comedi_device*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %size = alloca i32, align 4
  store %struct.device* %csdev, %struct.device** %csdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %csdev.addr, metadata !12136, metadata !DIExpression()), !dbg !12137
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12138, metadata !DIExpression()), !dbg !12139
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12140, metadata !DIExpression()), !dbg !12141
  call void @llvm.dbg.declare(metadata i32* %minor, metadata !12142, metadata !DIExpression()), !dbg !12143
  %0 = load %struct.device*, %struct.device** %csdev.addr, align 8, !dbg !12144
  %devt = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 25, !dbg !12144
  %1 = load i32, i32* %devt, align 8, !dbg !12144
  %and = and i32 %1, 1048575, !dbg !12144
  store i32 %and, i32* %minor, align 4, !dbg !12143
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !12145, metadata !DIExpression()), !dbg !12146
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !12147, metadata !DIExpression()), !dbg !12148
  call void @llvm.dbg.declare(metadata i32* %size, metadata !12149, metadata !DIExpression()), !dbg !12150
  store i32 0, i32* %size, align 4, !dbg !12150
  %2 = load i32, i32* %minor, align 4, !dbg !12151
  %call = call %struct.comedi_device* @comedi_dev_get_from_minor(i32 %2) #11, !dbg !12152
  store %struct.comedi_device* %call, %struct.comedi_device** %dev, align 8, !dbg !12153
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12154
  %tobool = icmp ne %struct.comedi_device* %3, null, !dbg !12154
  br i1 %tobool, label %if.end, label %if.then, !dbg !12156

if.then:                                          ; preds = %entry
  store i64 -19, i64* %retval, align 8, !dbg !12157
  br label %return, !dbg !12157

if.end:                                           ; preds = %entry
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12158
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %4, i32 0, i32 12, !dbg !12159
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !12160
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12161
  %6 = load i32, i32* %minor, align 4, !dbg !12162
  %call1 = call %struct.comedi_subdevice* @comedi_write_subdevice(%struct.comedi_device* %5, i32 %6) #11, !dbg !12163
  store %struct.comedi_subdevice* %call1, %struct.comedi_subdevice** %s, align 8, !dbg !12164
  %7 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12165
  %tobool2 = icmp ne %struct.comedi_subdevice* %7, null, !dbg !12165
  br i1 %tobool2, label %land.lhs.true, label %if.end9, !dbg !12167

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12168
  %subdev_flags = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %8, i32 0, i32 4, !dbg !12169
  %9 = load i32, i32* %subdev_flags, align 4, !dbg !12169
  %and3 = and i32 %9, 16384, !dbg !12170
  %tobool4 = icmp ne i32 %and3, 0, !dbg !12170
  br i1 %tobool4, label %land.lhs.true5, label %if.end9, !dbg !12171

land.lhs.true5:                                   ; preds = %land.lhs.true
  %10 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12172
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %10, i32 0, i32 7, !dbg !12173
  %11 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !12173
  %tobool6 = icmp ne %struct.comedi_async* %11, null, !dbg !12172
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !12174

if.then7:                                         ; preds = %land.lhs.true5
  %12 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12175
  %async8 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %12, i32 0, i32 7, !dbg !12176
  %13 = load %struct.comedi_async*, %struct.comedi_async** %async8, align 8, !dbg !12176
  %max_bufsize = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %13, i32 0, i32 3, !dbg !12177
  %14 = load i32, i32* %max_bufsize, align 8, !dbg !12177
  %div = udiv i32 %14, 1024, !dbg !12178
  store i32 %div, i32* %size, align 4, !dbg !12179
  br label %if.end9, !dbg !12180

if.end9:                                          ; preds = %if.then7, %land.lhs.true5, %land.lhs.true, %if.end
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12181
  %mutex10 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %15, i32 0, i32 12, !dbg !12182
  call void @mutex_unlock(%struct.mutex* %mutex10) #11, !dbg !12183
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12184
  %call11 = call i32 @comedi_dev_put(%struct.comedi_device* %16) #11, !dbg !12185
  %17 = load i8*, i8** %buf.addr, align 8, !dbg !12186
  %18 = load i32, i32* %size, align 4, !dbg !12187
  %call12 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %17, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0), i32 %18) #11, !dbg !12188
  %conv = sext i32 %call12 to i64, !dbg !12188
  store i64 %conv, i64* %retval, align 8, !dbg !12189
  br label %return, !dbg !12189

return:                                           ; preds = %if.end9, %if.then
  %19 = load i64, i64* %retval, align 8, !dbg !12190
  ret i64 %19, !dbg !12190
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @max_write_buffer_kb_store(%struct.device* %csdev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !12191 {
entry:
  %retval = alloca i64, align 8
  %csdev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %minor = alloca i32, align 4
  %dev = alloca %struct.comedi_device*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %size = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.device* %csdev, %struct.device** %csdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %csdev.addr, metadata !12192, metadata !DIExpression()), !dbg !12193
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12194, metadata !DIExpression()), !dbg !12195
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12196, metadata !DIExpression()), !dbg !12197
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !12198, metadata !DIExpression()), !dbg !12199
  call void @llvm.dbg.declare(metadata i32* %minor, metadata !12200, metadata !DIExpression()), !dbg !12201
  %0 = load %struct.device*, %struct.device** %csdev.addr, align 8, !dbg !12202
  %devt = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 25, !dbg !12202
  %1 = load i32, i32* %devt, align 8, !dbg !12202
  %and = and i32 %1, 1048575, !dbg !12202
  store i32 %and, i32* %minor, align 4, !dbg !12201
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !12203, metadata !DIExpression()), !dbg !12204
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !12205, metadata !DIExpression()), !dbg !12206
  call void @llvm.dbg.declare(metadata i32* %size, metadata !12207, metadata !DIExpression()), !dbg !12208
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12209, metadata !DIExpression()), !dbg !12210
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !12211
  %call = call i32 @kstrtouint(i8* %2, i32 10, i32* %size) #11, !dbg !12212
  store i32 %call, i32* %err, align 4, !dbg !12213
  %3 = load i32, i32* %err, align 4, !dbg !12214
  %tobool = icmp ne i32 %3, 0, !dbg !12214
  br i1 %tobool, label %if.then, label %if.end, !dbg !12216

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %err, align 4, !dbg !12217
  %conv = sext i32 %4 to i64, !dbg !12217
  store i64 %conv, i64* %retval, align 8, !dbg !12218
  br label %return, !dbg !12218

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %size, align 4, !dbg !12219
  %cmp = icmp ugt i32 %5, 4194303, !dbg !12221
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !12222

if.then2:                                         ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !12223
  br label %return, !dbg !12223

if.end3:                                          ; preds = %if.end
  %6 = load i32, i32* %size, align 4, !dbg !12224
  %mul = mul i32 %6, 1024, !dbg !12224
  store i32 %mul, i32* %size, align 4, !dbg !12224
  %7 = load i32, i32* %minor, align 4, !dbg !12225
  %call4 = call %struct.comedi_device* @comedi_dev_get_from_minor(i32 %7) #11, !dbg !12226
  store %struct.comedi_device* %call4, %struct.comedi_device** %dev, align 8, !dbg !12227
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12228
  %tobool5 = icmp ne %struct.comedi_device* %8, null, !dbg !12228
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !12230

if.then6:                                         ; preds = %if.end3
  store i64 -19, i64* %retval, align 8, !dbg !12231
  br label %return, !dbg !12231

if.end7:                                          ; preds = %if.end3
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12232
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %9, i32 0, i32 12, !dbg !12233
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !12234
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12235
  %11 = load i32, i32* %minor, align 4, !dbg !12236
  %call8 = call %struct.comedi_subdevice* @comedi_write_subdevice(%struct.comedi_device* %10, i32 %11) #11, !dbg !12237
  store %struct.comedi_subdevice* %call8, %struct.comedi_subdevice** %s, align 8, !dbg !12238
  %12 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12239
  %tobool9 = icmp ne %struct.comedi_subdevice* %12, null, !dbg !12239
  br i1 %tobool9, label %land.lhs.true, label %if.else, !dbg !12241

land.lhs.true:                                    ; preds = %if.end7
  %13 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12242
  %subdev_flags = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %13, i32 0, i32 4, !dbg !12243
  %14 = load i32, i32* %subdev_flags, align 4, !dbg !12243
  %and10 = and i32 %14, 16384, !dbg !12244
  %tobool11 = icmp ne i32 %and10, 0, !dbg !12244
  br i1 %tobool11, label %land.lhs.true12, label %if.else, !dbg !12245

land.lhs.true12:                                  ; preds = %land.lhs.true
  %15 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12246
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %15, i32 0, i32 7, !dbg !12247
  %16 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !12247
  %tobool13 = icmp ne %struct.comedi_async* %16, null, !dbg !12246
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !12248

if.then14:                                        ; preds = %land.lhs.true12
  %17 = load i32, i32* %size, align 4, !dbg !12249
  %18 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12250
  %async15 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %18, i32 0, i32 7, !dbg !12251
  %19 = load %struct.comedi_async*, %struct.comedi_async** %async15, align 8, !dbg !12251
  %max_bufsize = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %19, i32 0, i32 3, !dbg !12252
  store i32 %17, i32* %max_bufsize, align 8, !dbg !12253
  br label %if.end16, !dbg !12250

if.else:                                          ; preds = %land.lhs.true12, %land.lhs.true, %if.end7
  store i32 -22, i32* %err, align 4, !dbg !12254
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then14
  %20 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12255
  %mutex17 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %20, i32 0, i32 12, !dbg !12256
  call void @mutex_unlock(%struct.mutex* %mutex17) #11, !dbg !12257
  %21 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12258
  %call18 = call i32 @comedi_dev_put(%struct.comedi_device* %21) #11, !dbg !12259
  %22 = load i32, i32* %err, align 4, !dbg !12260
  %tobool19 = icmp ne i32 %22, 0, !dbg !12260
  br i1 %tobool19, label %cond.true, label %cond.false, !dbg !12260

cond.true:                                        ; preds = %if.end16
  %23 = load i32, i32* %err, align 4, !dbg !12261
  %conv20 = sext i32 %23 to i64, !dbg !12261
  br label %cond.end, !dbg !12260

cond.false:                                       ; preds = %if.end16
  %24 = load i64, i64* %count.addr, align 8, !dbg !12262
  br label %cond.end, !dbg !12260

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv20, %cond.true ], [ %24, %cond.false ], !dbg !12260
  store i64 %cond, i64* %retval, align 8, !dbg !12263
  br label %return, !dbg !12263

return:                                           ; preds = %cond.end, %if.then6, %if.then2, %if.then
  %25 = load i64, i64* %retval, align 8, !dbg !12264
  ret i64 %25, !dbg !12264
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.comedi_subdevice* @comedi_write_subdevice(%struct.comedi_device* %dev, i32 %minor) #0 !dbg !12265 {
entry:
  %retval = alloca %struct.comedi_subdevice*, align 8
  %dev.addr = alloca %struct.comedi_device*, align 8
  %minor.addr = alloca i32, align 4
  %s = alloca %struct.comedi_subdevice*, align 8
  store %struct.comedi_device* %dev, %struct.comedi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev.addr, metadata !12266, metadata !DIExpression()), !dbg !12267
  store i32 %minor, i32* %minor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %minor.addr, metadata !12268, metadata !DIExpression()), !dbg !12269
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !12270, metadata !DIExpression()), !dbg !12271
  br label %do.body, !dbg !12272

do.body:                                          ; preds = %entry
  %0 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12273
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %0, i32 0, i32 12, !dbg !12273
  br label %do.end, !dbg !12273

do.end:                                           ; preds = %do.body
  %1 = load i32, i32* %minor.addr, align 4, !dbg !12275
  %cmp = icmp uge i32 %1, 48, !dbg !12277
  br i1 %cmp, label %if.then, label %if.end3, !dbg !12278

if.then:                                          ; preds = %do.end
  %2 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12279
  %3 = load i32, i32* %minor.addr, align 4, !dbg !12281
  %call = call %struct.comedi_subdevice* @comedi_subdevice_from_minor(%struct.comedi_device* %2, i32 %3) #11, !dbg !12282
  store %struct.comedi_subdevice* %call, %struct.comedi_subdevice** %s, align 8, !dbg !12283
  %4 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12284
  %tobool = icmp ne %struct.comedi_subdevice* %4, null, !dbg !12284
  br i1 %tobool, label %lor.lhs.false, label %if.then2, !dbg !12286

lor.lhs.false:                                    ; preds = %if.then
  %5 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12287
  %subdev_flags = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %5, i32 0, i32 4, !dbg !12288
  %6 = load i32, i32* %subdev_flags, align 4, !dbg !12288
  %and = and i32 %6, 16384, !dbg !12289
  %tobool1 = icmp ne i32 %and, 0, !dbg !12289
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !12290

if.then2:                                         ; preds = %lor.lhs.false, %if.then
  %7 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12291
  store %struct.comedi_subdevice* %7, %struct.comedi_subdevice** %retval, align 8, !dbg !12292
  br label %return, !dbg !12292

if.end:                                           ; preds = %lor.lhs.false
  br label %if.end3, !dbg !12293

if.end3:                                          ; preds = %if.end, %do.end
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev.addr, align 8, !dbg !12294
  %write_subdev = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %8, i32 0, i32 22, !dbg !12295
  %9 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %write_subdev, align 8, !dbg !12295
  store %struct.comedi_subdevice* %9, %struct.comedi_subdevice** %retval, align 8, !dbg !12296
  br label %return, !dbg !12296

return:                                           ; preds = %if.end3, %if.then2
  %10 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %retval, align 8, !dbg !12297
  ret %struct.comedi_subdevice* %10, !dbg !12297
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @write_buffer_kb_show(%struct.device* %csdev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12298 {
entry:
  %retval = alloca i64, align 8
  %csdev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %minor = alloca i32, align 4
  %dev = alloca %struct.comedi_device*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %size = alloca i32, align 4
  store %struct.device* %csdev, %struct.device** %csdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %csdev.addr, metadata !12299, metadata !DIExpression()), !dbg !12300
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12301, metadata !DIExpression()), !dbg !12302
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12303, metadata !DIExpression()), !dbg !12304
  call void @llvm.dbg.declare(metadata i32* %minor, metadata !12305, metadata !DIExpression()), !dbg !12306
  %0 = load %struct.device*, %struct.device** %csdev.addr, align 8, !dbg !12307
  %devt = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 25, !dbg !12307
  %1 = load i32, i32* %devt, align 8, !dbg !12307
  %and = and i32 %1, 1048575, !dbg !12307
  store i32 %and, i32* %minor, align 4, !dbg !12306
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !12308, metadata !DIExpression()), !dbg !12309
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !12310, metadata !DIExpression()), !dbg !12311
  call void @llvm.dbg.declare(metadata i32* %size, metadata !12312, metadata !DIExpression()), !dbg !12313
  store i32 0, i32* %size, align 4, !dbg !12313
  %2 = load i32, i32* %minor, align 4, !dbg !12314
  %call = call %struct.comedi_device* @comedi_dev_get_from_minor(i32 %2) #11, !dbg !12315
  store %struct.comedi_device* %call, %struct.comedi_device** %dev, align 8, !dbg !12316
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12317
  %tobool = icmp ne %struct.comedi_device* %3, null, !dbg !12317
  br i1 %tobool, label %if.end, label %if.then, !dbg !12319

if.then:                                          ; preds = %entry
  store i64 -19, i64* %retval, align 8, !dbg !12320
  br label %return, !dbg !12320

if.end:                                           ; preds = %entry
  %4 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12321
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %4, i32 0, i32 12, !dbg !12322
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !12323
  %5 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12324
  %6 = load i32, i32* %minor, align 4, !dbg !12325
  %call1 = call %struct.comedi_subdevice* @comedi_write_subdevice(%struct.comedi_device* %5, i32 %6) #11, !dbg !12326
  store %struct.comedi_subdevice* %call1, %struct.comedi_subdevice** %s, align 8, !dbg !12327
  %7 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12328
  %tobool2 = icmp ne %struct.comedi_subdevice* %7, null, !dbg !12328
  br i1 %tobool2, label %land.lhs.true, label %if.end9, !dbg !12330

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12331
  %subdev_flags = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %8, i32 0, i32 4, !dbg !12332
  %9 = load i32, i32* %subdev_flags, align 4, !dbg !12332
  %and3 = and i32 %9, 16384, !dbg !12333
  %tobool4 = icmp ne i32 %and3, 0, !dbg !12333
  br i1 %tobool4, label %land.lhs.true5, label %if.end9, !dbg !12334

land.lhs.true5:                                   ; preds = %land.lhs.true
  %10 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12335
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %10, i32 0, i32 7, !dbg !12336
  %11 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !12336
  %tobool6 = icmp ne %struct.comedi_async* %11, null, !dbg !12335
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !12337

if.then7:                                         ; preds = %land.lhs.true5
  %12 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12338
  %async8 = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %12, i32 0, i32 7, !dbg !12339
  %13 = load %struct.comedi_async*, %struct.comedi_async** %async8, align 8, !dbg !12339
  %prealloc_bufsz = getelementptr inbounds %struct.comedi_async, %struct.comedi_async* %13, i32 0, i32 1, !dbg !12340
  %14 = load i32, i32* %prealloc_bufsz, align 8, !dbg !12340
  %div = udiv i32 %14, 1024, !dbg !12341
  store i32 %div, i32* %size, align 4, !dbg !12342
  br label %if.end9, !dbg !12343

if.end9:                                          ; preds = %if.then7, %land.lhs.true5, %land.lhs.true, %if.end
  %15 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12344
  %mutex10 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %15, i32 0, i32 12, !dbg !12345
  call void @mutex_unlock(%struct.mutex* %mutex10) #11, !dbg !12346
  %16 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12347
  %call11 = call i32 @comedi_dev_put(%struct.comedi_device* %16) #11, !dbg !12348
  %17 = load i8*, i8** %buf.addr, align 8, !dbg !12349
  %18 = load i32, i32* %size, align 4, !dbg !12350
  %call12 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %17, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0), i32 %18) #11, !dbg !12351
  %conv = sext i32 %call12 to i64, !dbg !12351
  store i64 %conv, i64* %retval, align 8, !dbg !12352
  br label %return, !dbg !12352

return:                                           ; preds = %if.end9, %if.then
  %19 = load i64, i64* %retval, align 8, !dbg !12353
  ret i64 %19, !dbg !12353
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @write_buffer_kb_store(%struct.device* %csdev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !12354 {
entry:
  %retval = alloca i64, align 8
  %csdev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %minor = alloca i32, align 4
  %dev = alloca %struct.comedi_device*, align 8
  %s = alloca %struct.comedi_subdevice*, align 8
  %size = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.device* %csdev, %struct.device** %csdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %csdev.addr, metadata !12355, metadata !DIExpression()), !dbg !12356
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12357, metadata !DIExpression()), !dbg !12358
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12359, metadata !DIExpression()), !dbg !12360
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !12361, metadata !DIExpression()), !dbg !12362
  call void @llvm.dbg.declare(metadata i32* %minor, metadata !12363, metadata !DIExpression()), !dbg !12364
  %0 = load %struct.device*, %struct.device** %csdev.addr, align 8, !dbg !12365
  %devt = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 25, !dbg !12365
  %1 = load i32, i32* %devt, align 8, !dbg !12365
  %and = and i32 %1, 1048575, !dbg !12365
  store i32 %and, i32* %minor, align 4, !dbg !12364
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !12366, metadata !DIExpression()), !dbg !12367
  call void @llvm.dbg.declare(metadata %struct.comedi_subdevice** %s, metadata !12368, metadata !DIExpression()), !dbg !12369
  call void @llvm.dbg.declare(metadata i32* %size, metadata !12370, metadata !DIExpression()), !dbg !12371
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12372, metadata !DIExpression()), !dbg !12373
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !12374
  %call = call i32 @kstrtouint(i8* %2, i32 10, i32* %size) #11, !dbg !12375
  store i32 %call, i32* %err, align 4, !dbg !12376
  %3 = load i32, i32* %err, align 4, !dbg !12377
  %tobool = icmp ne i32 %3, 0, !dbg !12377
  br i1 %tobool, label %if.then, label %if.end, !dbg !12379

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %err, align 4, !dbg !12380
  %conv = sext i32 %4 to i64, !dbg !12380
  store i64 %conv, i64* %retval, align 8, !dbg !12381
  br label %return, !dbg !12381

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %size, align 4, !dbg !12382
  %cmp = icmp ugt i32 %5, 4194303, !dbg !12384
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !12385

if.then2:                                         ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !12386
  br label %return, !dbg !12386

if.end3:                                          ; preds = %if.end
  %6 = load i32, i32* %size, align 4, !dbg !12387
  %mul = mul i32 %6, 1024, !dbg !12387
  store i32 %mul, i32* %size, align 4, !dbg !12387
  %7 = load i32, i32* %minor, align 4, !dbg !12388
  %call4 = call %struct.comedi_device* @comedi_dev_get_from_minor(i32 %7) #11, !dbg !12389
  store %struct.comedi_device* %call4, %struct.comedi_device** %dev, align 8, !dbg !12390
  %8 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12391
  %tobool5 = icmp ne %struct.comedi_device* %8, null, !dbg !12391
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !12393

if.then6:                                         ; preds = %if.end3
  store i64 -19, i64* %retval, align 8, !dbg !12394
  br label %return, !dbg !12394

if.end7:                                          ; preds = %if.end3
  %9 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12395
  %mutex = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %9, i32 0, i32 12, !dbg !12396
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !12397
  %10 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12398
  %11 = load i32, i32* %minor, align 4, !dbg !12399
  %call8 = call %struct.comedi_subdevice* @comedi_write_subdevice(%struct.comedi_device* %10, i32 %11) #11, !dbg !12400
  store %struct.comedi_subdevice* %call8, %struct.comedi_subdevice** %s, align 8, !dbg !12401
  %12 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12402
  %tobool9 = icmp ne %struct.comedi_subdevice* %12, null, !dbg !12402
  br i1 %tobool9, label %land.lhs.true, label %if.else, !dbg !12404

land.lhs.true:                                    ; preds = %if.end7
  %13 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12405
  %subdev_flags = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %13, i32 0, i32 4, !dbg !12406
  %14 = load i32, i32* %subdev_flags, align 4, !dbg !12406
  %and10 = and i32 %14, 16384, !dbg !12407
  %tobool11 = icmp ne i32 %and10, 0, !dbg !12407
  br i1 %tobool11, label %land.lhs.true12, label %if.else, !dbg !12408

land.lhs.true12:                                  ; preds = %land.lhs.true
  %15 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12409
  %async = getelementptr inbounds %struct.comedi_subdevice, %struct.comedi_subdevice* %15, i32 0, i32 7, !dbg !12410
  %16 = load %struct.comedi_async*, %struct.comedi_async** %async, align 8, !dbg !12410
  %tobool13 = icmp ne %struct.comedi_async* %16, null, !dbg !12409
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !12411

if.then14:                                        ; preds = %land.lhs.true12
  %17 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12412
  %18 = load %struct.comedi_subdevice*, %struct.comedi_subdevice** %s, align 8, !dbg !12413
  %19 = load i32, i32* %size, align 4, !dbg !12414
  %call15 = call i32 @resize_async_buffer(%struct.comedi_device* %17, %struct.comedi_subdevice* %18, i32 %19) #11, !dbg !12415
  store i32 %call15, i32* %err, align 4, !dbg !12416
  br label %if.end16, !dbg !12417

if.else:                                          ; preds = %land.lhs.true12, %land.lhs.true, %if.end7
  store i32 -22, i32* %err, align 4, !dbg !12418
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then14
  %20 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12419
  %mutex17 = getelementptr inbounds %struct.comedi_device, %struct.comedi_device* %20, i32 0, i32 12, !dbg !12420
  call void @mutex_unlock(%struct.mutex* %mutex17) #11, !dbg !12421
  %21 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12422
  %call18 = call i32 @comedi_dev_put(%struct.comedi_device* %21) #11, !dbg !12423
  %22 = load i32, i32* %err, align 4, !dbg !12424
  %tobool19 = icmp ne i32 %22, 0, !dbg !12424
  br i1 %tobool19, label %cond.true, label %cond.false, !dbg !12424

cond.true:                                        ; preds = %if.end16
  %23 = load i32, i32* %err, align 4, !dbg !12425
  %conv20 = sext i32 %23 to i64, !dbg !12425
  br label %cond.end, !dbg !12424

cond.false:                                       ; preds = %if.end16
  %24 = load i64, i64* %count.addr, align 8, !dbg !12426
  br label %cond.end, !dbg !12424

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv20, %cond.true ], [ %24, %cond.false ], !dbg !12424
  store i64 %cond, i64* %retval, align 8, !dbg !12427
  br label %return, !dbg !12427

return:                                           ; preds = %cond.end, %if.then6, %if.then2, %if.then
  %25 = load i64, i64* %retval, align 8, !dbg !12428
  ret i64 %25, !dbg !12428
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.comedi_device* @comedi_clear_board_minor(i32 %minor) #0 !dbg !12429 {
entry:
  %minor.addr = alloca i32, align 4
  %dev = alloca %struct.comedi_device*, align 8
  store i32 %minor, i32* %minor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %minor.addr, metadata !12430, metadata !DIExpression()), !dbg !12431
  call void @llvm.dbg.declare(metadata %struct.comedi_device** %dev, metadata !12432, metadata !DIExpression()), !dbg !12433
  call void @mutex_lock(%struct.mutex* @comedi_board_minor_table_lock) #11, !dbg !12434
  %0 = load i32, i32* %minor.addr, align 4, !dbg !12435
  %idxprom = zext i32 %0 to i64, !dbg !12436
  %arrayidx = getelementptr [48 x %struct.comedi_device*], [48 x %struct.comedi_device*]* @comedi_board_minor_table, i64 0, i64 %idxprom, !dbg !12436
  %1 = load %struct.comedi_device*, %struct.comedi_device** %arrayidx, align 8, !dbg !12436
  store %struct.comedi_device* %1, %struct.comedi_device** %dev, align 8, !dbg !12437
  %2 = load i32, i32* %minor.addr, align 4, !dbg !12438
  %idxprom1 = zext i32 %2 to i64, !dbg !12439
  %arrayidx2 = getelementptr [48 x %struct.comedi_device*], [48 x %struct.comedi_device*]* @comedi_board_minor_table, i64 0, i64 %idxprom1, !dbg !12439
  store %struct.comedi_device* null, %struct.comedi_device** %arrayidx2, align 8, !dbg !12440
  call void @mutex_unlock(%struct.mutex* @comedi_board_minor_table_lock) #11, !dbg !12441
  %3 = load %struct.comedi_device*, %struct.comedi_device** %dev, align 8, !dbg !12442
  ret %struct.comedi_device* %3, !dbg !12443
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { nounwind willreturn }
attributes #7 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { argmemonly nounwind willreturn }
attributes #11 = { noredzone }
attributes #12 = { noredzone nounwind }
attributes #13 = { noredzone nounwind readnone }
attributes #14 = { cold noredzone }
attributes #15 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4267}
!llvm.module.flags = !{!4268, !4269, !4270, !4271}
!llvm.ident = !{!4272}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__param_str_comedi_num_legacy_minors", scope: !2, file: !3, line: 73, type: !4266, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !158, globals: !4082, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/staging/comedi/comedi_fops.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !72, !79, !87, !93, !100, !111, !116, !124, !131, !137, !152}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !94, line: 5, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98, !99}
!96 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!100 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "comedi_cb", file: !101, line: 383, baseType: !7, size: 32, elements: !102)
!101 = !DIFile(filename: "drivers/staging/comedi/comedidev.h", directory: "/home/lizy2001/genbc/linux")
!102 = !{!103, !104, !105, !106, !107, !108, !109, !110}
!103 = !DIEnumerator(name: "COMEDI_CB_EOS", value: 1, isUnsigned: true)
!104 = !DIEnumerator(name: "COMEDI_CB_EOA", value: 2, isUnsigned: true)
!105 = !DIEnumerator(name: "COMEDI_CB_BLOCK", value: 4, isUnsigned: true)
!106 = !DIEnumerator(name: "COMEDI_CB_EOBUF", value: 8, isUnsigned: true)
!107 = !DIEnumerator(name: "COMEDI_CB_ERROR", value: 16, isUnsigned: true)
!108 = !DIEnumerator(name: "COMEDI_CB_OVERFLOW", value: 32, isUnsigned: true)
!109 = !DIEnumerator(name: "COMEDI_CB_ERROR_MASK", value: 48, isUnsigned: true)
!110 = !DIEnumerator(name: "COMEDI_CB_CANCEL_MASK", value: 50, isUnsigned: true)
!111 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !112, line: 10, baseType: !7, size: 32, elements: !113)
!112 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!113 = !{!114, !115}
!114 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!115 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!116 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "refcount_saturation_type", file: !117, line: 119, baseType: !7, size: 32, elements: !118)
!117 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!118 = !{!119, !120, !121, !122, !123}
!119 = !DIEnumerator(name: "REFCOUNT_ADD_NOT_ZERO_OVF", value: 0, isUnsigned: true)
!120 = !DIEnumerator(name: "REFCOUNT_ADD_OVF", value: 1, isUnsigned: true)
!121 = !DIEnumerator(name: "REFCOUNT_ADD_UAF", value: 2, isUnsigned: true)
!122 = !DIEnumerator(name: "REFCOUNT_SUB_UAF", value: 3, isUnsigned: true)
!123 = !DIEnumerator(name: "REFCOUNT_DEC_LEAK", value: 4, isUnsigned: true)
!124 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !125, line: 305, baseType: !7, size: 32, elements: !126)
!125 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!126 = !{!127, !128, !129, !130}
!127 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!129 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!130 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!131 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "comedi_support_level", file: !132, line: 433, baseType: !7, size: 32, elements: !133)
!132 = !DIFile(filename: "drivers/staging/comedi/comedi.h", directory: "/home/lizy2001/genbc/linux")
!133 = !{!134, !135, !136}
!134 = !DIEnumerator(name: "COMEDI_UNKNOWN_SUPPORT", value: 0, isUnsigned: true)
!135 = !DIEnumerator(name: "COMEDI_SUPPORTED", value: 1, isUnsigned: true)
!136 = !DIEnumerator(name: "COMEDI_UNSUPPORTED", value: 2, isUnsigned: true)
!137 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "comedi_subdevice_type", file: !132, line: 221, baseType: !7, size: 32, elements: !138)
!138 = !{!139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151}
!139 = !DIEnumerator(name: "COMEDI_SUBD_UNUSED", value: 0, isUnsigned: true)
!140 = !DIEnumerator(name: "COMEDI_SUBD_AI", value: 1, isUnsigned: true)
!141 = !DIEnumerator(name: "COMEDI_SUBD_AO", value: 2, isUnsigned: true)
!142 = !DIEnumerator(name: "COMEDI_SUBD_DI", value: 3, isUnsigned: true)
!143 = !DIEnumerator(name: "COMEDI_SUBD_DO", value: 4, isUnsigned: true)
!144 = !DIEnumerator(name: "COMEDI_SUBD_DIO", value: 5, isUnsigned: true)
!145 = !DIEnumerator(name: "COMEDI_SUBD_COUNTER", value: 6, isUnsigned: true)
!146 = !DIEnumerator(name: "COMEDI_SUBD_TIMER", value: 7, isUnsigned: true)
!147 = !DIEnumerator(name: "COMEDI_SUBD_MEMORY", value: 8, isUnsigned: true)
!148 = !DIEnumerator(name: "COMEDI_SUBD_CALIB", value: 9, isUnsigned: true)
!149 = !DIEnumerator(name: "COMEDI_SUBD_PROC", value: 10, isUnsigned: true)
!150 = !DIEnumerator(name: "COMEDI_SUBD_SERIAL", value: 11, isUnsigned: true)
!151 = !DIEnumerator(name: "COMEDI_SUBD_PWM", value: 12, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "device_config_route_ids", file: !132, line: 364, baseType: !7, size: 32, elements: !153)
!153 = !{!154, !155, !156, !157}
!154 = !DIEnumerator(name: "INSN_DEVICE_CONFIG_TEST_ROUTE", value: 0, isUnsigned: true)
!155 = !DIEnumerator(name: "INSN_DEVICE_CONFIG_CONNECT_ROUTE", value: 1, isUnsigned: true)
!156 = !DIEnumerator(name: "INSN_DEVICE_CONFIG_DISCONNECT_ROUTE", value: 2, isUnsigned: true)
!157 = !DIEnumerator(name: "INSN_DEVICE_CONFIG_GET_ROUTES", value: 3, isUnsigned: true)
!158 = !{!159, !161, !162, !203, !4024, !177, !4026, !324, !4027, !1258, !4028, !4031, !7, !4032, !166, !2946, !184, !4033, !4042, !4055, !4070, !2724, !4081, !723, !1100, !312}
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !160, line: 148, baseType: !7)
!160 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 64)
!163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_device", file: !101, line: 541, size: 1920, elements: !164)
!164 = !{!165, !167, !209, !212, !213, !3858, !3859, !3860, !3861, !3862, !3863, !3864, !3865, !3866, !3867, !3868, !3869, !3870, !4004, !4005, !4006, !4007, !4008, !4009, !4010, !4011, !4015, !4016, !4020}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "use_count", scope: !163, file: !101, line: 542, baseType: !166, size: 32)
!166 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !163, file: !101, line: 543, baseType: !168, size: 64, offset: 64)
!168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 64)
!169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_driver", file: !101, line: 437, size: 576, elements: !170)
!170 = !{!171, !172, !176, !180, !195, !199, !204, !205, !208}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !169, file: !101, line: 439, baseType: !168, size: 64)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "driver_name", scope: !169, file: !101, line: 441, baseType: !173, size: 64, offset: 64)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64)
!174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !175)
!175 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !169, file: !101, line: 442, baseType: !177, size: 64, offset: 128)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 64)
!178 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !179, line: 76, flags: DIFlagFwdDecl)
!179 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!180 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !169, file: !101, line: 443, baseType: !181, size: 64, offset: 192)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64)
!182 = !DISubroutineType(types: !183)
!183 = !{!166, !162, !184}
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64)
!185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_devconfig", file: !132, line: 834, size: 1184, elements: !186)
!186 = !{!187, !191}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "board_name", scope: !185, file: !132, line: 835, baseType: !188, size: 160)
!188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 160, elements: !189)
!189 = !{!190}
!190 = !DISubrange(count: 20)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !185, file: !132, line: 836, baseType: !192, size: 1024, offset: 160)
!192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 1024, elements: !193)
!193 = !{!194}
!194 = !DISubrange(count: 32)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !169, file: !101, line: 444, baseType: !196, size: 64, offset: 256)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64)
!197 = !DISubroutineType(types: !198)
!198 = !{null, !162}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "auto_attach", scope: !169, file: !101, line: 445, baseType: !200, size: 64, offset: 320)
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64)
!201 = !DISubroutineType(types: !202)
!202 = !{!166, !162, !203}
!203 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "num_names", scope: !169, file: !101, line: 446, baseType: !7, size: 32, offset: 384)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "board_name", scope: !169, file: !101, line: 447, baseType: !206, size: 64, offset: 448)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64)
!207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !169, file: !101, line: 448, baseType: !166, size: 32, offset: 512)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "pacer", scope: !163, file: !101, line: 544, baseType: !210, size: 64, offset: 128)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64)
!211 = !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_8254", file: !101, line: 544, flags: DIFlagFwdDecl)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !163, file: !101, line: 545, baseType: !161, size: 64, offset: 192)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !163, file: !101, line: 547, baseType: !214, size: 64, offset: 256)
!214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !216)
!216 = !{!217, !3429, !3430, !3433, !3434, !3485, !3558, !3559, !3560, !3561, !3562, !3571, !3676, !3689, !3693, !3694, !3698, !3700, !3701, !3702, !3706, !3712, !3713, !3716, !3720, !3810, !3811, !3812, !3813, !3814, !3846, !3847, !3848, !3851, !3854, !3855, !3856, !3857}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !215, file: !73, line: 462, baseType: !218, size: 512)
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !219, line: 64, size: 512, elements: !220)
!219 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!220 = !{!221, !222, !228, !230, !290, !3280, !3419, !3424, !3425, !3426, !3427, !3428}
!221 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !218, file: !219, line: 65, baseType: !173, size: 64)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !218, file: !219, line: 66, baseType: !223, size: 128, offset: 64)
!223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !160, line: 178, size: 128, elements: !224)
!224 = !{!225, !227}
!225 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !223, file: !160, line: 179, baseType: !226, size: 64)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !223, file: !160, line: 179, baseType: !226, size: 64, offset: 64)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !218, file: !219, line: 67, baseType: !229, size: 64, offset: 192)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !218, file: !219, line: 68, baseType: !231, size: 64, offset: 256)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64)
!232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !219, line: 192, size: 704, elements: !233)
!233 = !{!234, !235, !251, !252}
!234 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !232, file: !219, line: 193, baseType: !223, size: 128)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !232, file: !219, line: 194, baseType: !236, offset: 128)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !237, line: 83, baseType: !238)
!237 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !237, line: 71, elements: !239)
!239 = !{!240}
!240 = !DIDerivedType(tag: DW_TAG_member, scope: !238, file: !237, line: 72, baseType: !241)
!241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !238, file: !237, line: 72, elements: !242)
!242 = !{!243}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !241, file: !237, line: 73, baseType: !244)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !237, line: 20, elements: !245)
!245 = !{!246}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !244, file: !237, line: 21, baseType: !247)
!247 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !248, line: 25, baseType: !249)
!248 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!249 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !248, line: 25, elements: !250)
!250 = !{}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !232, file: !219, line: 195, baseType: !218, size: 512, offset: 128)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !232, file: !219, line: 196, baseType: !253, size: 64, offset: 640)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!254 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !255)
!255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !219, line: 156, size: 192, elements: !256)
!256 = !{!257, !262, !267}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !255, file: !219, line: 157, baseType: !258, size: 64)
!258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !259)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64)
!260 = !DISubroutineType(types: !261)
!261 = !{!166, !231, !229}
!262 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !255, file: !219, line: 158, baseType: !263, size: 64, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !264)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64)
!265 = !DISubroutineType(types: !266)
!266 = !{!173, !231, !229}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !255, file: !219, line: 159, baseType: !268, size: 64, offset: 128)
!268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !269)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64)
!270 = !DISubroutineType(types: !271)
!271 = !{!166, !231, !229, !272}
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !219, line: 148, size: 20736, elements: !274)
!274 = !{!275, !280, !284, !285, !289}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !273, file: !219, line: 149, baseType: !276, size: 192)
!276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !277, size: 192, elements: !278)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64)
!278 = !{!279}
!279 = !DISubrange(count: 3)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !273, file: !219, line: 150, baseType: !281, size: 4096, offset: 192)
!281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !277, size: 4096, elements: !282)
!282 = !{!283}
!283 = !DISubrange(count: 64)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !273, file: !219, line: 151, baseType: !166, size: 32, offset: 4288)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !273, file: !219, line: 152, baseType: !286, size: 16384, offset: 4320)
!286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 16384, elements: !287)
!287 = !{!288}
!288 = !DISubrange(count: 2048)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !273, file: !219, line: 153, baseType: !166, size: 32, offset: 20704)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !218, file: !219, line: 69, baseType: !291, size: 64, offset: 320)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !219, line: 138, size: 448, elements: !293)
!293 = !{!294, !298, !327, !329, !3242, !3270, !3274}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !292, file: !219, line: 139, baseType: !295, size: 64)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!296 = !DISubroutineType(types: !297)
!297 = !{null, !229}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !292, file: !219, line: 140, baseType: !299, size: 64, offset: 64)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64)
!300 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !301)
!301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !302, line: 230, size: 128, elements: !303)
!302 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!303 = !{!304, !320}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !301, file: !302, line: 231, baseType: !305, size: 64)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 64)
!306 = !DISubroutineType(types: !307)
!307 = !{!308, !229, !313, !277}
!308 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !160, line: 60, baseType: !309)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !310, line: 73, baseType: !311)
!310 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !310, line: 15, baseType: !312)
!312 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !302, line: 30, size: 128, elements: !315)
!315 = !{!316, !317}
!316 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !314, file: !302, line: 31, baseType: !173, size: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !314, file: !302, line: 32, baseType: !318, size: 16, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !160, line: 19, baseType: !319)
!319 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !301, file: !302, line: 232, baseType: !321, size: 64, offset: 64)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 64)
!322 = !DISubroutineType(types: !323)
!323 = !{!308, !229, !313, !173, !324}
!324 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !160, line: 55, baseType: !325)
!325 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !310, line: 72, baseType: !326)
!326 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !310, line: 16, baseType: !203)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !292, file: !219, line: 141, baseType: !328, size: 64, offset: 128)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !292, file: !219, line: 142, baseType: !330, size: 64, offset: 192)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !333)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !302, line: 84, size: 320, elements: !334)
!334 = !{!335, !336, !340, !3239, !3240}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !333, file: !302, line: 85, baseType: !173, size: 64)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !333, file: !302, line: 86, baseType: !337, size: 64, offset: 64)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 64)
!338 = !DISubroutineType(types: !339)
!339 = !{!318, !229, !313, !166}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !333, file: !302, line: 88, baseType: !341, size: 64, offset: 128)
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!342 = !DISubroutineType(types: !343)
!343 = !{!318, !229, !344, !166}
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !302, line: 168, size: 448, elements: !346)
!346 = !{!347, !348, !349, !350, !3234, !3235}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !345, file: !302, line: 169, baseType: !314, size: 128)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !345, file: !302, line: 170, baseType: !324, size: 64, offset: 128)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !345, file: !302, line: 171, baseType: !161, size: 64, offset: 192)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !345, file: !302, line: 172, baseType: !351, size: 64, offset: 256)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!352 = !DISubroutineType(types: !353)
!353 = !{!308, !354, !229, !344, !277, !533, !324}
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !356)
!356 = !{!357, !375, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3217, !3218, !3227, !3228, !3229, !3230, !3231, !3232, !3233}
!357 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !355, file: !44, line: 920, baseType: !358, size: 128)
!358 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !355, file: !44, line: 917, size: 128, elements: !359)
!359 = !{!360, !366}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !358, file: !44, line: 918, baseType: !361, size: 64)
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !362, line: 58, size: 64, elements: !363)
!362 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!363 = !{!364}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !361, file: !362, line: 59, baseType: !365, size: 64)
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !358, file: !44, line: 919, baseType: !367, size: 128, align: 64)
!367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !160, line: 216, size: 128, align: 64, elements: !368)
!368 = !{!369, !371}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !367, file: !160, line: 217, baseType: !370, size: 64)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !367, file: !160, line: 218, baseType: !372, size: 64, offset: 64)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 64)
!373 = !DISubroutineType(types: !374)
!374 = !{null, !370}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !355, file: !44, line: 921, baseType: !376, size: 128, offset: 128)
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !377, line: 8, size: 128, elements: !378)
!377 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!378 = !{!379, !383}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !376, file: !377, line: 9, baseType: !380, size: 64)
!380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64)
!381 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !382, line: 18, flags: DIFlagFwdDecl)
!382 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!383 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !376, file: !377, line: 10, baseType: !384, size: 64, offset: 64)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !382, line: 89, size: 1536, elements: !386)
!386 = !{!387, !388, !398, !406, !407, !430, !3168, !3170, !3182, !3183, !3184, !3185, !3186, !3191, !3192, !3193}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !385, file: !382, line: 91, baseType: !7, size: 32)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !385, file: !382, line: 92, baseType: !389, size: 32, offset: 32)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !390, line: 277, baseType: !391)
!390 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !390, line: 277, size: 32, elements: !392)
!392 = !{!393}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !391, file: !390, line: 277, baseType: !394, size: 32)
!394 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !390, line: 70, baseType: !395)
!395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !390, line: 65, size: 32, elements: !396)
!396 = !{!397}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !395, file: !390, line: 66, baseType: !7, size: 32)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !385, file: !382, line: 93, baseType: !399, size: 128, offset: 64)
!399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !400, line: 38, size: 128, elements: !401)
!400 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!401 = !{!402, !404}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !399, file: !400, line: 39, baseType: !403, size: 64)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !399, file: !400, line: 39, baseType: !405, size: 64, offset: 64)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 64)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !385, file: !382, line: 94, baseType: !384, size: 64, offset: 192)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !385, file: !382, line: 95, baseType: !408, size: 128, offset: 256)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !382, line: 47, size: 128, elements: !409)
!409 = !{!410, !426}
!410 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !382, line: 48, baseType: !411, size: 64)
!411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !382, line: 48, size: 64, elements: !412)
!412 = !{!413, !422}
!413 = !DIDerivedType(tag: DW_TAG_member, scope: !411, file: !382, line: 49, baseType: !414, size: 64)
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !411, file: !382, line: 49, size: 64, elements: !415)
!415 = !{!416, !421}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !414, file: !382, line: 50, baseType: !417, size: 32)
!417 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !418, line: 21, baseType: !419)
!418 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!419 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !420, line: 27, baseType: !7)
!420 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!421 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !414, file: !382, line: 50, baseType: !417, size: 32, offset: 32)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !411, file: !382, line: 52, baseType: !423, size: 64)
!423 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !418, line: 23, baseType: !424)
!424 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !420, line: 31, baseType: !425)
!425 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !408, file: !382, line: 54, baseType: !427, size: 64, offset: 64)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64)
!428 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !429)
!429 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !385, file: !382, line: 96, baseType: !431, size: 64, offset: 384)
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !432, size: 64)
!432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !433)
!433 = !{!434, !435, !436, !444, !451, !452, !600, !2862, !2863, !2864, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !3136, !3144, !3145, !3146, !3164, !3165, !3166, !3167}
!434 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !432, file: !44, line: 611, baseType: !318, size: 16)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !432, file: !44, line: 612, baseType: !319, size: 16, offset: 16)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !432, file: !44, line: 613, baseType: !437, size: 32, offset: 32)
!437 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !438, line: 23, baseType: !439)
!438 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!439 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !438, line: 21, size: 32, elements: !440)
!440 = !{!441}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !439, file: !438, line: 22, baseType: !442, size: 32)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !160, line: 32, baseType: !443)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !310, line: 49, baseType: !7)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !432, file: !44, line: 614, baseType: !445, size: 32, offset: 64)
!445 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !438, line: 28, baseType: !446)
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !438, line: 26, size: 32, elements: !447)
!447 = !{!448}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !446, file: !438, line: 27, baseType: !449, size: 32)
!449 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !160, line: 33, baseType: !450)
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !310, line: 50, baseType: !7)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !432, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !432, file: !44, line: 622, baseType: !453, size: 64, offset: 128)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!454 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !455)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !456)
!456 = !{!457, !461, !474, !478, !484, !488, !494, !498, !502, !506, !510, !511, !517, !521, !547, !576, !580, !586, !591, !595, !596}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !455, file: !44, line: 1865, baseType: !458, size: 64)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64)
!459 = !DISubroutineType(types: !460)
!460 = !{!384, !431, !384, !7}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !455, file: !44, line: 1866, baseType: !462, size: 64, offset: 64)
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64)
!463 = !DISubroutineType(types: !464)
!464 = !{!173, !384, !431, !465}
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !467, line: 10, size: 128, elements: !468)
!467 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!468 = !{!469, !473}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !466, file: !467, line: 11, baseType: !470, size: 64)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!471 = !DISubroutineType(types: !472)
!472 = !{null, !161}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !466, file: !467, line: 12, baseType: !161, size: 64, offset: 64)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !455, file: !44, line: 1867, baseType: !475, size: 64, offset: 128)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!476 = !DISubroutineType(types: !477)
!477 = !{!166, !431, !166}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !455, file: !44, line: 1868, baseType: !479, size: 64, offset: 192)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 64)
!480 = !DISubroutineType(types: !481)
!481 = !{!482, !431, !166}
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!483 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !455, file: !44, line: 1870, baseType: !485, size: 64, offset: 256)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64)
!486 = !DISubroutineType(types: !487)
!487 = !{!166, !384, !277, !166}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !455, file: !44, line: 1872, baseType: !489, size: 64, offset: 320)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!490 = !DISubroutineType(types: !491)
!491 = !{!166, !431, !384, !318, !492}
!492 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !160, line: 30, baseType: !493)
!493 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !455, file: !44, line: 1873, baseType: !495, size: 64, offset: 384)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!496 = !DISubroutineType(types: !497)
!497 = !{!166, !384, !431, !384}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !455, file: !44, line: 1874, baseType: !499, size: 64, offset: 448)
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!500 = !DISubroutineType(types: !501)
!501 = !{!166, !431, !384}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !455, file: !44, line: 1875, baseType: !503, size: 64, offset: 512)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!504 = !DISubroutineType(types: !505)
!505 = !{!166, !431, !384, !173}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !455, file: !44, line: 1876, baseType: !507, size: 64, offset: 576)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!508 = !DISubroutineType(types: !509)
!509 = !{!166, !431, !384, !318}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !455, file: !44, line: 1877, baseType: !499, size: 64, offset: 640)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !455, file: !44, line: 1878, baseType: !512, size: 64, offset: 704)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64)
!513 = !DISubroutineType(types: !514)
!514 = !{!166, !431, !384, !318, !515}
!515 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !160, line: 16, baseType: !516)
!516 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !160, line: 13, baseType: !417)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !455, file: !44, line: 1879, baseType: !518, size: 64, offset: 768)
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 64)
!519 = !DISubroutineType(types: !520)
!520 = !{!166, !431, !384, !431, !384, !7}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !455, file: !44, line: 1881, baseType: !522, size: 64, offset: 832)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 64)
!523 = !DISubroutineType(types: !524)
!524 = !{!166, !384, !525}
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !527)
!527 = !{!528, !529, !530, !531, !532, !536, !544, !545, !546}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !526, file: !44, line: 220, baseType: !7, size: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !526, file: !44, line: 221, baseType: !318, size: 16, offset: 32)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !526, file: !44, line: 222, baseType: !437, size: 32, offset: 64)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !526, file: !44, line: 223, baseType: !445, size: 32, offset: 96)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !526, file: !44, line: 224, baseType: !533, size: 64, offset: 128)
!533 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !160, line: 46, baseType: !534)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !310, line: 88, baseType: !535)
!535 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !526, file: !44, line: 225, baseType: !537, size: 128, offset: 192)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !538, line: 13, size: 128, elements: !539)
!538 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!539 = !{!540, !543}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !537, file: !538, line: 14, baseType: !541, size: 64)
!541 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !538, line: 8, baseType: !542)
!542 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !420, line: 30, baseType: !535)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !537, file: !538, line: 15, baseType: !312, size: 64, offset: 64)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !526, file: !44, line: 226, baseType: !537, size: 128, offset: 320)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !526, file: !44, line: 227, baseType: !537, size: 128, offset: 448)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !526, file: !44, line: 234, baseType: !354, size: 64, offset: 576)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !455, file: !44, line: 1882, baseType: !548, size: 64, offset: 896)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!549 = !DISubroutineType(types: !550)
!550 = !{!166, !551, !553, !417, !7}
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !376)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64)
!554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !555, line: 22, size: 1152, elements: !556)
!555 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!556 = !{!557, !558, !559, !560, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !554, file: !555, line: 23, baseType: !417, size: 32)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !554, file: !555, line: 24, baseType: !318, size: 16, offset: 32)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !554, file: !555, line: 25, baseType: !7, size: 32, offset: 64)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !554, file: !555, line: 26, baseType: !561, size: 32, offset: 96)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !160, line: 104, baseType: !417)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !554, file: !555, line: 27, baseType: !423, size: 64, offset: 128)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !554, file: !555, line: 28, baseType: !423, size: 64, offset: 192)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !554, file: !555, line: 37, baseType: !423, size: 64, offset: 256)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !554, file: !555, line: 38, baseType: !515, size: 32, offset: 320)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !554, file: !555, line: 39, baseType: !515, size: 32, offset: 352)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !554, file: !555, line: 40, baseType: !437, size: 32, offset: 384)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !554, file: !555, line: 41, baseType: !445, size: 32, offset: 416)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !554, file: !555, line: 42, baseType: !533, size: 64, offset: 448)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !554, file: !555, line: 43, baseType: !537, size: 128, offset: 512)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !554, file: !555, line: 44, baseType: !537, size: 128, offset: 640)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !554, file: !555, line: 45, baseType: !537, size: 128, offset: 768)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !554, file: !555, line: 46, baseType: !537, size: 128, offset: 896)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !554, file: !555, line: 47, baseType: !423, size: 64, offset: 1024)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !554, file: !555, line: 48, baseType: !423, size: 64, offset: 1088)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !455, file: !44, line: 1883, baseType: !577, size: 64, offset: 960)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = !DISubroutineType(types: !579)
!579 = !{!308, !384, !277, !324}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !455, file: !44, line: 1884, baseType: !581, size: 64, offset: 1024)
!581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 64)
!582 = !DISubroutineType(types: !583)
!583 = !{!166, !431, !584, !423, !423}
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!585 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !455, file: !44, line: 1886, baseType: !587, size: 64, offset: 1088)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!588 = !DISubroutineType(types: !589)
!589 = !{!166, !431, !590, !166}
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 64)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !455, file: !44, line: 1887, baseType: !592, size: 64, offset: 1152)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64)
!593 = !DISubroutineType(types: !594)
!594 = !{!166, !431, !384, !354, !7, !318}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !455, file: !44, line: 1890, baseType: !507, size: 64, offset: 1216)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !455, file: !44, line: 1891, baseType: !597, size: 64, offset: 1280)
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = !DISubroutineType(types: !599)
!599 = !{!166, !431, !482, !166}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !432, file: !44, line: 623, baseType: !601, size: 64, offset: 192)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 64)
!602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !603)
!603 = !{!604, !605, !606, !607, !608, !609, !656, !2469, !2551, !2634, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2650, !2654, !2655, !2658, !2659, !2662, !2663, !2664, !2705, !2732, !2733, !2734, !2735, !2736, !2737, !2740, !2742, !2749, !2750, !2752, !2753, !2754, !2813, !2814, !2829, !2830, !2831, !2832, !2833, !2836, !2837, !2838, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !602, file: !44, line: 1417, baseType: !223, size: 128)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !602, file: !44, line: 1418, baseType: !515, size: 32, offset: 128)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !602, file: !44, line: 1419, baseType: !429, size: 8, offset: 160)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !602, file: !44, line: 1420, baseType: !203, size: 64, offset: 192)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !602, file: !44, line: 1421, baseType: !533, size: 64, offset: 256)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !602, file: !44, line: 1422, baseType: !610, size: 64, offset: 320)
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !612)
!612 = !{!613, !614, !615, !622, !626, !630, !634, !635, !636, !646, !649, !650, !651, !653, !654, !655}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !611, file: !44, line: 2229, baseType: !173, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !611, file: !44, line: 2230, baseType: !166, size: 32, offset: 64)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !611, file: !44, line: 2238, baseType: !616, size: 64, offset: 128)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = !DISubroutineType(types: !618)
!618 = !{!166, !619}
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!620 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !621, line: 28, flags: DIFlagFwdDecl)
!621 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!622 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !611, file: !44, line: 2239, baseType: !623, size: 64, offset: 192)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !625)
!625 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !611, file: !44, line: 2240, baseType: !627, size: 64, offset: 256)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64)
!628 = !DISubroutineType(types: !629)
!629 = !{!384, !610, !166, !173, !161}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !611, file: !44, line: 2242, baseType: !631, size: 64, offset: 320)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!632 = !DISubroutineType(types: !633)
!633 = !{null, !601}
!634 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !611, file: !44, line: 2243, baseType: !177, size: 64, offset: 384)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !611, file: !44, line: 2244, baseType: !610, size: 64, offset: 448)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !611, file: !44, line: 2245, baseType: !637, size: 64, offset: 512)
!637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !160, line: 182, size: 64, elements: !638)
!638 = !{!639}
!639 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !637, file: !160, line: 183, baseType: !640, size: 64)
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !160, line: 186, size: 128, elements: !642)
!642 = !{!643, !644}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !641, file: !160, line: 187, baseType: !640, size: 64)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !641, file: !160, line: 187, baseType: !645, size: 64, offset: 64)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !611, file: !44, line: 2247, baseType: !647, offset: 576)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !648, line: 187, elements: !250)
!648 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!649 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !611, file: !44, line: 2248, baseType: !647, offset: 576)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !611, file: !44, line: 2249, baseType: !647, offset: 576)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !611, file: !44, line: 2250, baseType: !652, offset: 576)
!652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !647, elements: !278)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !611, file: !44, line: 2252, baseType: !647, offset: 576)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !611, file: !44, line: 2253, baseType: !647, offset: 576)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !611, file: !44, line: 2254, baseType: !647, offset: 576)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !602, file: !44, line: 1423, baseType: !657, size: 64, offset: 384)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !659)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !660)
!660 = !{!661, !665, !669, !670, !674, !680, !684, !685, !686, !690, !694, !695, !696, !697, !703, !708, !709, !716, !717, !718, !719, !2453, !2468}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !659, file: !44, line: 1936, baseType: !662, size: 64)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = !DISubroutineType(types: !664)
!664 = !{!431, !601}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !659, file: !44, line: 1937, baseType: !666, size: 64, offset: 64)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DISubroutineType(types: !668)
!668 = !{null, !431}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !659, file: !44, line: 1938, baseType: !666, size: 64, offset: 128)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !659, file: !44, line: 1940, baseType: !671, size: 64, offset: 192)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = !DISubroutineType(types: !673)
!673 = !{null, !431, !166}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !659, file: !44, line: 1941, baseType: !675, size: 64, offset: 256)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!676 = !DISubroutineType(types: !677)
!677 = !{!166, !431, !678}
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64)
!679 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !659, file: !44, line: 1942, baseType: !681, size: 64, offset: 320)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = !DISubroutineType(types: !683)
!683 = !{!166, !431}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !659, file: !44, line: 1943, baseType: !666, size: 64, offset: 384)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !659, file: !44, line: 1944, baseType: !631, size: 64, offset: 448)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !659, file: !44, line: 1945, baseType: !687, size: 64, offset: 512)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = !DISubroutineType(types: !689)
!689 = !{!166, !601, !166}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !659, file: !44, line: 1946, baseType: !691, size: 64, offset: 576)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = !DISubroutineType(types: !693)
!693 = !{!166, !601}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !659, file: !44, line: 1947, baseType: !691, size: 64, offset: 640)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !659, file: !44, line: 1948, baseType: !691, size: 64, offset: 704)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !659, file: !44, line: 1949, baseType: !691, size: 64, offset: 768)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !659, file: !44, line: 1950, baseType: !698, size: 64, offset: 832)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!699 = !DISubroutineType(types: !700)
!700 = !{!166, !384, !701}
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!702 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !659, file: !44, line: 1951, baseType: !704, size: 64, offset: 896)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = !DISubroutineType(types: !706)
!706 = !{!166, !601, !707, !277}
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !659, file: !44, line: 1952, baseType: !631, size: 64, offset: 960)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !659, file: !44, line: 1954, baseType: !710, size: 64, offset: 1024)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DISubroutineType(types: !712)
!712 = !{!166, !713, !384}
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !715, line: 539, flags: DIFlagFwdDecl)
!715 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!716 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !659, file: !44, line: 1955, baseType: !710, size: 64, offset: 1088)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !659, file: !44, line: 1956, baseType: !710, size: 64, offset: 1152)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !659, file: !44, line: 1957, baseType: !710, size: 64, offset: 1216)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !659, file: !44, line: 1963, baseType: !720, size: 64, offset: 1280)
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64)
!721 = !DISubroutineType(types: !722)
!722 = !{!166, !601, !723, !159}
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !725, line: 68, size: 512, align: 128, elements: !726)
!725 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!726 = !{!727, !728, !2445, !2452}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !724, file: !725, line: 69, baseType: !203, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, scope: !724, file: !725, line: 77, baseType: !729, size: 320, offset: 64)
!729 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !724, file: !725, line: 77, size: 320, elements: !730)
!730 = !{!731, !958, !963, !991, !999, !1005, !2376, !2444}
!731 = !DIDerivedType(tag: DW_TAG_member, scope: !729, file: !725, line: 78, baseType: !732, size: 320)
!732 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !729, file: !725, line: 78, size: 320, elements: !733)
!733 = !{!734, !735, !956, !957}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !732, file: !725, line: 84, baseType: !223, size: 128)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !732, file: !725, line: 86, baseType: !736, size: 64, offset: 128)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !738)
!738 = !{!739, !740, !747, !748, !753, !768, !784, !785, !786, !787, !949, !950, !953, !954, !955}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !737, file: !44, line: 452, baseType: !431, size: 64)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !737, file: !44, line: 453, baseType: !741, size: 128, offset: 64)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !742, line: 292, size: 128, elements: !743)
!742 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!743 = !{!744, !745, !746}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !741, file: !742, line: 293, baseType: !236)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !741, file: !742, line: 295, baseType: !159, size: 32)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !741, file: !742, line: 296, baseType: !161, size: 64, offset: 64)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !737, file: !44, line: 454, baseType: !159, size: 32, offset: 192)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !737, file: !44, line: 455, baseType: !749, size: 32, offset: 224)
!749 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !160, line: 168, baseType: !750)
!750 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !160, line: 166, size: 32, elements: !751)
!751 = !{!752}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !750, file: !160, line: 167, baseType: !166, size: 32)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !737, file: !44, line: 460, baseType: !754, size: 128, offset: 256)
!754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !755, line: 125, size: 128, elements: !756)
!755 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!756 = !{!757, !767}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !754, file: !755, line: 126, baseType: !758, size: 64)
!758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !755, line: 31, size: 64, elements: !759)
!759 = !{!760}
!760 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !758, file: !755, line: 32, baseType: !761, size: 64)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !755, line: 24, size: 192, align: 64, elements: !763)
!763 = !{!764, !765, !766}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !762, file: !755, line: 25, baseType: !203, size: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !762, file: !755, line: 26, baseType: !761, size: 64, offset: 64)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !762, file: !755, line: 27, baseType: !761, size: 64, offset: 128)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !754, file: !755, line: 127, baseType: !761, size: 64, offset: 64)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !737, file: !44, line: 461, baseType: !769, size: 256, offset: 384)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !770, line: 35, size: 256, elements: !771)
!770 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!771 = !{!772, !780, !781, !783}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !769, file: !770, line: 36, baseType: !773, size: 64)
!773 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !774, line: 13, baseType: !775)
!774 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !160, line: 175, baseType: !776)
!776 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !160, line: 173, size: 64, elements: !777)
!777 = !{!778}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !776, file: !160, line: 174, baseType: !779, size: 64)
!779 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !418, line: 22, baseType: !542)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !769, file: !770, line: 42, baseType: !773, size: 64, offset: 64)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !769, file: !770, line: 46, baseType: !782, offset: 128)
!782 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !237, line: 29, baseType: !244)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !769, file: !770, line: 47, baseType: !223, size: 128, offset: 128)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !737, file: !44, line: 462, baseType: !203, size: 64, offset: 640)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !737, file: !44, line: 463, baseType: !203, size: 64, offset: 704)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !737, file: !44, line: 464, baseType: !203, size: 64, offset: 768)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !737, file: !44, line: 465, baseType: !788, size: 64, offset: 832)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !790)
!790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !791)
!791 = !{!792, !796, !800, !804, !808, !812, !818, !824, !828, !833, !837, !841, !845, !913, !917, !923, !924, !925, !929, !934, !938, !945}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !790, file: !44, line: 368, baseType: !793, size: 64)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DISubroutineType(types: !795)
!795 = !{!166, !723, !678}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !790, file: !44, line: 369, baseType: !797, size: 64, offset: 64)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = !DISubroutineType(types: !799)
!799 = !{!166, !354, !723}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !790, file: !44, line: 372, baseType: !801, size: 64, offset: 128)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = !DISubroutineType(types: !803)
!803 = !{!166, !736, !678}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !790, file: !44, line: 375, baseType: !805, size: 64, offset: 192)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = !DISubroutineType(types: !807)
!807 = !{!166, !723}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !790, file: !44, line: 381, baseType: !809, size: 64, offset: 256)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DISubroutineType(types: !811)
!811 = !{!166, !354, !736, !226, !7}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !790, file: !44, line: 383, baseType: !813, size: 64, offset: 320)
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = !DISubroutineType(types: !815)
!815 = !{null, !816}
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64)
!817 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !790, file: !44, line: 385, baseType: !819, size: 64, offset: 384)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = !DISubroutineType(types: !821)
!821 = !{!166, !354, !736, !533, !7, !7, !822, !823}
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !790, file: !44, line: 388, baseType: !825, size: 64, offset: 448)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = !DISubroutineType(types: !827)
!827 = !{!166, !354, !736, !533, !7, !7, !723, !161}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !790, file: !44, line: 393, baseType: !829, size: 64, offset: 512)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = !DISubroutineType(types: !831)
!831 = !{!832, !736, !832}
!832 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !160, line: 125, baseType: !423)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !790, file: !44, line: 394, baseType: !834, size: 64, offset: 576)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!835 = !DISubroutineType(types: !836)
!836 = !{null, !723, !7, !7}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !790, file: !44, line: 395, baseType: !838, size: 64, offset: 640)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = !DISubroutineType(types: !840)
!840 = !{!166, !723, !159}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !790, file: !44, line: 396, baseType: !842, size: 64, offset: 704)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = !DISubroutineType(types: !844)
!844 = !{null, !723}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !790, file: !44, line: 397, baseType: !846, size: 64, offset: 768)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!847 = !DISubroutineType(types: !848)
!848 = !{!308, !849, !871}
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !851)
!851 = !{!852, !853, !854, !858, !859, !860, !863, !864}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !850, file: !44, line: 321, baseType: !354, size: 64)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !850, file: !44, line: 326, baseType: !533, size: 64, offset: 64)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !850, file: !44, line: 327, baseType: !855, size: 64, offset: 128)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!856 = !DISubroutineType(types: !857)
!857 = !{null, !849, !312, !312}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !850, file: !44, line: 328, baseType: !161, size: 64, offset: 192)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !850, file: !44, line: 329, baseType: !166, size: 32, offset: 256)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !850, file: !44, line: 330, baseType: !861, size: 16, offset: 288)
!861 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !418, line: 19, baseType: !862)
!862 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !420, line: 24, baseType: !319)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !850, file: !44, line: 331, baseType: !861, size: 16, offset: 304)
!864 = !DIDerivedType(tag: DW_TAG_member, scope: !850, file: !44, line: 332, baseType: !865, size: 64, offset: 320)
!865 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !850, file: !44, line: 332, size: 64, elements: !866)
!866 = !{!867, !868}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !865, file: !44, line: 333, baseType: !7, size: 32)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !865, file: !44, line: 334, baseType: !869, size: 64)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 64)
!870 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 64)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !873, line: 29, size: 320, elements: !874)
!873 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!874 = !{!875, !876, !877, !878, !904}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !872, file: !873, line: 35, baseType: !7, size: 32)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !872, file: !873, line: 36, baseType: !324, size: 64, offset: 64)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !872, file: !873, line: 37, baseType: !324, size: 64, offset: 128)
!878 = !DIDerivedType(tag: DW_TAG_member, scope: !872, file: !873, line: 38, baseType: !879, size: 64, offset: 192)
!879 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !872, file: !873, line: 38, size: 64, elements: !880)
!880 = !{!881, !889, !896, !900}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !879, file: !873, line: 39, baseType: !882, size: 64)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !884)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !885, line: 17, size: 128, elements: !886)
!885 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!886 = !{!887, !888}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !884, file: !885, line: 19, baseType: !161, size: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !884, file: !885, line: 20, baseType: !325, size: 64, offset: 64)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !879, file: !873, line: 40, baseType: !890, size: 64)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !892)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !873, line: 15, size: 128, elements: !893)
!893 = !{!894, !895}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !892, file: !873, line: 16, baseType: !161, size: 64)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !892, file: !873, line: 17, baseType: !324, size: 64, offset: 64)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !879, file: !873, line: 41, baseType: !897, size: 64)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 64)
!898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !899)
!899 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !873, line: 41, flags: DIFlagFwdDecl)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !879, file: !873, line: 42, baseType: !901, size: 64)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !903, line: 53, flags: DIFlagFwdDecl)
!903 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!904 = !DIDerivedType(tag: DW_TAG_member, scope: !872, file: !873, line: 44, baseType: !905, size: 64, offset: 256)
!905 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !872, file: !873, line: 44, size: 64, elements: !906)
!906 = !{!907, !908}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !905, file: !873, line: 45, baseType: !203, size: 64)
!908 = !DIDerivedType(tag: DW_TAG_member, scope: !905, file: !873, line: 46, baseType: !909, size: 64)
!909 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !905, file: !873, line: 46, size: 64, elements: !910)
!910 = !{!911, !912}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !909, file: !873, line: 47, baseType: !7, size: 32)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !909, file: !873, line: 48, baseType: !7, size: 32, offset: 32)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !790, file: !44, line: 402, baseType: !914, size: 64, offset: 832)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = !DISubroutineType(types: !916)
!916 = !{!166, !736, !723, !723, !5}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !790, file: !44, line: 404, baseType: !918, size: 64, offset: 896)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = !DISubroutineType(types: !920)
!920 = !{!492, !723, !921}
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !922, line: 305, baseType: !7)
!922 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!923 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !790, file: !44, line: 405, baseType: !842, size: 64, offset: 960)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !790, file: !44, line: 406, baseType: !805, size: 64, offset: 1024)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !790, file: !44, line: 407, baseType: !926, size: 64, offset: 1088)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = !DISubroutineType(types: !928)
!928 = !{!166, !723, !203, !203}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !790, file: !44, line: 409, baseType: !930, size: 64, offset: 1152)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!931 = !DISubroutineType(types: !932)
!932 = !{null, !723, !933, !933}
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !790, file: !44, line: 410, baseType: !935, size: 64, offset: 1216)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64)
!936 = !DISubroutineType(types: !937)
!937 = !{!166, !736, !723}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !790, file: !44, line: 413, baseType: !939, size: 64, offset: 1280)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!940 = !DISubroutineType(types: !941)
!941 = !{!166, !942, !354, !944}
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64)
!943 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !790, file: !44, line: 415, baseType: !946, size: 64, offset: 1344)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DISubroutineType(types: !948)
!948 = !{null, !354}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !737, file: !44, line: 466, baseType: !203, size: 64, offset: 896)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !737, file: !44, line: 467, baseType: !951, size: 32, offset: 960)
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !952, line: 8, baseType: !417)
!952 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!953 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !737, file: !44, line: 468, baseType: !236, offset: 992)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !737, file: !44, line: 469, baseType: !223, size: 128, offset: 1024)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !737, file: !44, line: 470, baseType: !161, size: 64, offset: 1152)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !732, file: !725, line: 87, baseType: !203, size: 64, offset: 192)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !732, file: !725, line: 94, baseType: !203, size: 64, offset: 256)
!958 = !DIDerivedType(tag: DW_TAG_member, scope: !729, file: !725, line: 96, baseType: !959, size: 64)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !729, file: !725, line: 96, size: 64, elements: !960)
!960 = !{!961}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !959, file: !725, line: 101, baseType: !962, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !160, line: 143, baseType: !423)
!963 = !DIDerivedType(tag: DW_TAG_member, scope: !729, file: !725, line: 103, baseType: !964, size: 320)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !729, file: !725, line: 103, size: 320, elements: !965)
!965 = !{!966, !976, !979, !980}
!966 = !DIDerivedType(tag: DW_TAG_member, scope: !964, file: !725, line: 104, baseType: !967, size: 128)
!967 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !964, file: !725, line: 104, size: 128, elements: !968)
!968 = !{!969, !970}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !967, file: !725, line: 105, baseType: !223, size: 128)
!970 = !DIDerivedType(tag: DW_TAG_member, scope: !967, file: !725, line: 106, baseType: !971, size: 128)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !967, file: !725, line: 106, size: 128, elements: !972)
!972 = !{!973, !974, !975}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !971, file: !725, line: 107, baseType: !723, size: 64)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !971, file: !725, line: 109, baseType: !166, size: 32, offset: 64)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !971, file: !725, line: 110, baseType: !166, size: 32, offset: 96)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !964, file: !725, line: 117, baseType: !977, size: 64, offset: 128)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64)
!978 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !725, line: 117, flags: DIFlagFwdDecl)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !964, file: !725, line: 119, baseType: !161, size: 64, offset: 192)
!980 = !DIDerivedType(tag: DW_TAG_member, scope: !964, file: !725, line: 120, baseType: !981, size: 64, offset: 256)
!981 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !964, file: !725, line: 120, size: 64, elements: !982)
!982 = !{!983, !984, !985}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !981, file: !725, line: 121, baseType: !161, size: 64)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !981, file: !725, line: 122, baseType: !203, size: 64)
!985 = !DIDerivedType(tag: DW_TAG_member, scope: !981, file: !725, line: 123, baseType: !986, size: 32)
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !981, file: !725, line: 123, size: 32, elements: !987)
!987 = !{!988, !989, !990}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !986, file: !725, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !986, file: !725, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !986, file: !725, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!991 = !DIDerivedType(tag: DW_TAG_member, scope: !729, file: !725, line: 130, baseType: !992, size: 192)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !729, file: !725, line: 130, size: 192, elements: !993)
!993 = !{!994, !995, !996, !997, !998}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !992, file: !725, line: 131, baseType: !203, size: 64)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !992, file: !725, line: 134, baseType: !429, size: 8, offset: 64)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !992, file: !725, line: 135, baseType: !429, size: 8, offset: 72)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !992, file: !725, line: 136, baseType: !749, size: 32, offset: 96)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !992, file: !725, line: 137, baseType: !7, size: 32, offset: 128)
!999 = !DIDerivedType(tag: DW_TAG_member, scope: !729, file: !725, line: 139, baseType: !1000, size: 256)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !729, file: !725, line: 139, size: 256, elements: !1001)
!1001 = !{!1002, !1003, !1004}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1000, file: !725, line: 140, baseType: !203, size: 64)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1000, file: !725, line: 141, baseType: !749, size: 32, offset: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1000, file: !725, line: 143, baseType: !223, size: 128, offset: 128)
!1005 = !DIDerivedType(tag: DW_TAG_member, scope: !729, file: !725, line: 145, baseType: !1006, size: 256)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !729, file: !725, line: 145, size: 256, elements: !1007)
!1007 = !{!1008, !1009, !1011, !1012, !2375}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1006, file: !725, line: 146, baseType: !203, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1006, file: !725, line: 147, baseType: !1010, size: 64, offset: 64)
!1010 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !715, line: 509, baseType: !723)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1006, file: !725, line: 148, baseType: !203, size: 64, offset: 128)
!1012 = !DIDerivedType(tag: DW_TAG_member, scope: !1006, file: !725, line: 149, baseType: !1013, size: 64, offset: 192)
!1013 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1006, file: !725, line: 149, size: 64, elements: !1014)
!1014 = !{!1015, !2374}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1013, file: !725, line: 150, baseType: !1016, size: 64)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !725, line: 388, size: 7296, elements: !1018)
!1018 = !{!1019, !2370}
!1019 = !DIDerivedType(tag: DW_TAG_member, scope: !1017, file: !725, line: 389, baseType: !1020, size: 7296)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1017, file: !725, line: 389, size: 7296, elements: !1021)
!1021 = !{!1022, !1140, !1141, !1142, !1146, !1147, !1148, !1149, !1150, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1191, !1199, !1202, !1248, !1249, !2354, !2355, !2358, !2359, !2360, !2363, !2364, !2365, !2368, !2369}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1020, file: !725, line: 390, baseType: !1023, size: 64)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !725, line: 305, size: 1472, elements: !1025)
!1025 = !{!1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1040, !1041, !1046, !1047, !1050, !1134, !1135, !1136, !1137, !1138}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1024, file: !725, line: 308, baseType: !203, size: 64)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1024, file: !725, line: 309, baseType: !203, size: 64, offset: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1024, file: !725, line: 313, baseType: !1023, size: 64, offset: 128)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1024, file: !725, line: 313, baseType: !1023, size: 64, offset: 192)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1024, file: !725, line: 315, baseType: !762, size: 192, align: 64, offset: 256)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1024, file: !725, line: 323, baseType: !203, size: 64, offset: 448)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1024, file: !725, line: 327, baseType: !1016, size: 64, offset: 512)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1024, file: !725, line: 333, baseType: !1034, size: 64, offset: 576)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !715, line: 284, baseType: !1035)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !715, line: 284, size: 64, elements: !1036)
!1036 = !{!1037}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1035, file: !715, line: 284, baseType: !1038, size: 64)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1039, line: 19, baseType: !203)
!1039 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1024, file: !725, line: 334, baseType: !203, size: 64, offset: 640)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1024, file: !725, line: 343, baseType: !1042, size: 256, offset: 704)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1024, file: !725, line: 340, size: 256, elements: !1043)
!1043 = !{!1044, !1045}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1042, file: !725, line: 341, baseType: !762, size: 192, align: 64)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1042, file: !725, line: 342, baseType: !203, size: 64, offset: 192)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1024, file: !725, line: 351, baseType: !223, size: 128, offset: 960)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1024, file: !725, line: 353, baseType: !1048, size: 64, offset: 1088)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !725, line: 353, flags: DIFlagFwdDecl)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1024, file: !725, line: 356, baseType: !1051, size: 64, offset: 1152)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1053)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1054)
!1054 = !{!1055, !1059, !1060, !1064, !1068, !1108, !1112, !1116, !1120, !1121, !1122, !1126, !1130}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1053, file: !14, line: 558, baseType: !1056, size: 64)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{null, !1023}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1053, file: !14, line: 559, baseType: !1056, size: 64, offset: 64)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1053, file: !14, line: 560, baseType: !1061, size: 64, offset: 128)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!166, !1023, !203}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1053, file: !14, line: 561, baseType: !1065, size: 64, offset: 192)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1066 = !DISubroutineType(types: !1067)
!1067 = !{!166, !1023}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1053, file: !14, line: 562, baseType: !1069, size: 64, offset: 256)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!1072, !1073}
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !725, line: 682, baseType: !7)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1075)
!1075 = !{!1076, !1077, !1078, !1079, !1080, !1081, !1088, !1095, !1101, !1102, !1103, !1105, !1107}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1074, file: !14, line: 509, baseType: !1023, size: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1074, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1074, file: !14, line: 511, baseType: !159, size: 32, offset: 96)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1074, file: !14, line: 512, baseType: !203, size: 64, offset: 128)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1074, file: !14, line: 513, baseType: !203, size: 64, offset: 192)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1074, file: !14, line: 514, baseType: !1082, size: 64, offset: 256)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !715, line: 385, baseType: !1084)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !715, line: 385, size: 64, elements: !1085)
!1085 = !{!1086}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1084, file: !715, line: 385, baseType: !1087, size: 64)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1039, line: 15, baseType: !203)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1074, file: !14, line: 516, baseType: !1089, size: 64, offset: 320)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !715, line: 359, baseType: !1091)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !715, line: 359, size: 64, elements: !1092)
!1092 = !{!1093}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1091, file: !715, line: 359, baseType: !1094, size: 64)
!1094 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1039, line: 16, baseType: !203)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1074, file: !14, line: 519, baseType: !1096, size: 64, offset: 384)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1039, line: 21, baseType: !1097)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1039, line: 21, size: 64, elements: !1098)
!1098 = !{!1099}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1097, file: !1039, line: 21, baseType: !1100, size: 64)
!1100 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1039, line: 14, baseType: !203)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1074, file: !14, line: 521, baseType: !723, size: 64, offset: 448)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1074, file: !14, line: 522, baseType: !723, size: 64, offset: 512)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1074, file: !14, line: 528, baseType: !1104, size: 64, offset: 576)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1074, file: !14, line: 532, baseType: !1106, size: 64, offset: 640)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1074, file: !14, line: 536, baseType: !1010, size: 64, offset: 704)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1053, file: !14, line: 563, baseType: !1109, size: 64, offset: 320)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{!1072, !1073, !13}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1053, file: !14, line: 565, baseType: !1113, size: 64, offset: 384)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64)
!1114 = !DISubroutineType(types: !1115)
!1115 = !{null, !1073, !203, !203}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1053, file: !14, line: 567, baseType: !1117, size: 64, offset: 448)
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 64)
!1118 = !DISubroutineType(types: !1119)
!1119 = !{!203, !1023}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1053, file: !14, line: 571, baseType: !1069, size: 64, offset: 512)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1053, file: !14, line: 574, baseType: !1069, size: 64, offset: 576)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1053, file: !14, line: 579, baseType: !1123, size: 64, offset: 640)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!1124 = !DISubroutineType(types: !1125)
!1125 = !{!166, !1023, !203, !161, !166, !166}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1053, file: !14, line: 585, baseType: !1127, size: 64, offset: 704)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!173, !1023}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1053, file: !14, line: 615, baseType: !1131, size: 64, offset: 768)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!723, !1023, !203}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1024, file: !725, line: 359, baseType: !203, size: 64, offset: 1216)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1024, file: !725, line: 361, baseType: !354, size: 64, offset: 1280)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1024, file: !725, line: 362, baseType: !161, size: 64, offset: 1344)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1024, file: !725, line: 365, baseType: !773, size: 64, offset: 1408)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1024, file: !725, line: 373, baseType: !1139, offset: 1472)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !725, line: 296, elements: !250)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1020, file: !725, line: 391, baseType: !758, size: 64, offset: 64)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1020, file: !725, line: 392, baseType: !423, size: 64, offset: 128)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1020, file: !725, line: 394, baseType: !1143, size: 64, offset: 192)
!1143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 64)
!1144 = !DISubroutineType(types: !1145)
!1145 = !{!203, !354, !203, !203, !203, !203}
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1020, file: !725, line: 398, baseType: !203, size: 64, offset: 256)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1020, file: !725, line: 399, baseType: !203, size: 64, offset: 320)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1020, file: !725, line: 405, baseType: !203, size: 64, offset: 384)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1020, file: !725, line: 406, baseType: !203, size: 64, offset: 448)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1020, file: !725, line: 407, baseType: !1151, size: 64, offset: 512)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 64)
!1152 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !715, line: 286, baseType: !1153)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !715, line: 286, size: 64, elements: !1154)
!1154 = !{!1155}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1153, file: !715, line: 286, baseType: !1156, size: 64)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1039, line: 18, baseType: !203)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1020, file: !725, line: 416, baseType: !749, size: 32, offset: 576)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1020, file: !725, line: 428, baseType: !749, size: 32, offset: 608)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1020, file: !725, line: 437, baseType: !749, size: 32, offset: 640)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1020, file: !725, line: 447, baseType: !749, size: 32, offset: 672)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1020, file: !725, line: 450, baseType: !773, size: 64, offset: 704)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1020, file: !725, line: 452, baseType: !166, size: 32, offset: 768)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1020, file: !725, line: 454, baseType: !236, offset: 800)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1020, file: !725, line: 457, baseType: !769, size: 256, offset: 832)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1020, file: !725, line: 459, baseType: !223, size: 128, offset: 1088)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1020, file: !725, line: 466, baseType: !203, size: 64, offset: 1216)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1020, file: !725, line: 467, baseType: !203, size: 64, offset: 1280)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1020, file: !725, line: 469, baseType: !203, size: 64, offset: 1344)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1020, file: !725, line: 470, baseType: !203, size: 64, offset: 1408)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1020, file: !725, line: 471, baseType: !775, size: 64, offset: 1472)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1020, file: !725, line: 472, baseType: !203, size: 64, offset: 1536)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1020, file: !725, line: 473, baseType: !203, size: 64, offset: 1600)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1020, file: !725, line: 474, baseType: !203, size: 64, offset: 1664)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1020, file: !725, line: 475, baseType: !203, size: 64, offset: 1728)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1020, file: !725, line: 477, baseType: !236, offset: 1792)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1020, file: !725, line: 478, baseType: !203, size: 64, offset: 1792)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1020, file: !725, line: 478, baseType: !203, size: 64, offset: 1856)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1020, file: !725, line: 478, baseType: !203, size: 64, offset: 1920)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1020, file: !725, line: 478, baseType: !203, size: 64, offset: 1984)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1020, file: !725, line: 479, baseType: !203, size: 64, offset: 2048)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1020, file: !725, line: 479, baseType: !203, size: 64, offset: 2112)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1020, file: !725, line: 479, baseType: !203, size: 64, offset: 2176)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1020, file: !725, line: 480, baseType: !203, size: 64, offset: 2240)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1020, file: !725, line: 480, baseType: !203, size: 64, offset: 2304)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1020, file: !725, line: 480, baseType: !203, size: 64, offset: 2368)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1020, file: !725, line: 480, baseType: !203, size: 64, offset: 2432)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1020, file: !725, line: 482, baseType: !1188, size: 2816, offset: 2496)
!1188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !203, size: 2816, elements: !1189)
!1189 = !{!1190}
!1190 = !DISubrange(count: 44)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1020, file: !725, line: 488, baseType: !1192, size: 256, offset: 5312)
!1192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1193, line: 60, size: 256, elements: !1194)
!1193 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1194 = !{!1195}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1192, file: !1193, line: 61, baseType: !1196, size: 256)
!1196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !773, size: 256, elements: !1197)
!1197 = !{!1198}
!1198 = !DISubrange(count: 4)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1020, file: !725, line: 490, baseType: !1200, size: 64, offset: 5568)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !725, line: 490, flags: DIFlagFwdDecl)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1020, file: !725, line: 493, baseType: !1203, size: 896, offset: 5632)
!1203 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1204, line: 53, baseType: !1205)
!1204 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1204, line: 13, size: 896, elements: !1206)
!1206 = !{!1207, !1208, !1209, !1210, !1213, !1214, !1221, !1222, !1242, !1243, !1244}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1205, file: !1204, line: 18, baseType: !423, size: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1205, file: !1204, line: 28, baseType: !775, size: 64, offset: 64)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1205, file: !1204, line: 31, baseType: !769, size: 256, offset: 128)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1205, file: !1204, line: 32, baseType: !1211, size: 64, offset: 384)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64)
!1212 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1204, line: 32, flags: DIFlagFwdDecl)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1205, file: !1204, line: 37, baseType: !319, size: 16, offset: 448)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1205, file: !1204, line: 40, baseType: !1215, size: 192, offset: 512)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1216, line: 53, size: 192, elements: !1217)
!1216 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1217 = !{!1218, !1219, !1220}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1215, file: !1216, line: 54, baseType: !773, size: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1215, file: !1216, line: 55, baseType: !236, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1215, file: !1216, line: 59, baseType: !223, size: 128, offset: 64)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1205, file: !1204, line: 41, baseType: !161, size: 64, offset: 704)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1205, file: !1204, line: 42, baseType: !1223, size: 64, offset: 768)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1225)
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1226, line: 13, size: 896, elements: !1227)
!1226 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1227 = !{!1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1225, file: !1226, line: 14, baseType: !161, size: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1225, file: !1226, line: 15, baseType: !203, size: 64, offset: 64)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1225, file: !1226, line: 17, baseType: !203, size: 64, offset: 128)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1225, file: !1226, line: 17, baseType: !203, size: 64, offset: 192)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1225, file: !1226, line: 19, baseType: !312, size: 64, offset: 256)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1225, file: !1226, line: 21, baseType: !312, size: 64, offset: 320)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1225, file: !1226, line: 22, baseType: !312, size: 64, offset: 384)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1225, file: !1226, line: 23, baseType: !312, size: 64, offset: 448)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1225, file: !1226, line: 24, baseType: !312, size: 64, offset: 512)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1225, file: !1226, line: 25, baseType: !312, size: 64, offset: 576)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1225, file: !1226, line: 26, baseType: !312, size: 64, offset: 640)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1225, file: !1226, line: 27, baseType: !312, size: 64, offset: 704)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1225, file: !1226, line: 28, baseType: !312, size: 64, offset: 768)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1225, file: !1226, line: 29, baseType: !312, size: 64, offset: 832)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1205, file: !1204, line: 44, baseType: !749, size: 32, offset: 832)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1205, file: !1204, line: 50, baseType: !861, size: 16, offset: 864)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1205, file: !1204, line: 51, baseType: !1245, size: 16, offset: 880)
!1245 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !418, line: 18, baseType: !1246)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !420, line: 23, baseType: !1247)
!1247 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1020, file: !725, line: 495, baseType: !203, size: 64, offset: 6528)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1020, file: !725, line: 497, baseType: !1250, size: 64, offset: 6592)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !725, line: 381, size: 384, elements: !1252)
!1252 = !{!1253, !1254, !2353}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1251, file: !725, line: 382, baseType: !749, size: 32)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1251, file: !725, line: 383, baseType: !1255, size: 128, offset: 64)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !725, line: 376, size: 128, elements: !1256)
!1256 = !{!1257, !2351}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1255, file: !725, line: 377, baseType: !1258, size: 64)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 64)
!1259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !903, line: 640, size: 48640, elements: !1260)
!1260 = !{!1261, !1267, !1269, !1270, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1286, !1304, !1315, !1400, !1401, !1402, !1413, !1414, !1416, !1417, !1418, !1419, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1503, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1541, !1543, !1544, !1545, !1557, !1558, !1559, !1560, !1561, !1562, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1586, !1591, !1775, !1776, !1777, !1778, !1782, !1785, !1788, !1791, !1794, !1798, !1899, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1945, !1946, !1947, !1948, !1949, !1954, !1955, !1956, !1959, !1960, !1963, !1966, !1969, !1972, !2015, !2018, !2019, !2098, !2099, !2102, !2103, !2106, !2107, !2108, !2112, !2113, !2114, !2127, !2128, !2129, !2139, !2144, !2145, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1259, file: !903, line: 646, baseType: !1262, size: 128)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1263, line: 56, size: 128, elements: !1264)
!1263 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1264 = !{!1265, !1266}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1262, file: !1263, line: 57, baseType: !203, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1262, file: !1263, line: 58, baseType: !417, size: 32, offset: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1259, file: !903, line: 649, baseType: !1268, size: 64, offset: 128)
!1268 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !312)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1259, file: !903, line: 657, baseType: !161, size: 64, offset: 192)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1259, file: !903, line: 658, baseType: !1271, size: 32, offset: 256)
!1271 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !117, line: 113, baseType: !1272)
!1272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !117, line: 111, size: 32, elements: !1273)
!1273 = !{!1274}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1272, file: !117, line: 112, baseType: !749, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1259, file: !903, line: 660, baseType: !7, size: 32, offset: 288)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1259, file: !903, line: 661, baseType: !7, size: 32, offset: 320)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1259, file: !903, line: 684, baseType: !166, size: 32, offset: 352)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1259, file: !903, line: 686, baseType: !166, size: 32, offset: 384)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1259, file: !903, line: 687, baseType: !166, size: 32, offset: 416)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1259, file: !903, line: 688, baseType: !166, size: 32, offset: 448)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1259, file: !903, line: 689, baseType: !7, size: 32, offset: 480)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1259, file: !903, line: 691, baseType: !1283, size: 64, offset: 512)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64)
!1284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1285)
!1285 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !903, line: 691, flags: DIFlagFwdDecl)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1259, file: !903, line: 692, baseType: !1287, size: 832, offset: 576)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !903, line: 451, size: 832, elements: !1288)
!1288 = !{!1289, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1287, file: !903, line: 453, baseType: !1290, size: 128)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !903, line: 325, size: 128, elements: !1291)
!1291 = !{!1292, !1293}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1290, file: !903, line: 326, baseType: !203, size: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1290, file: !903, line: 327, baseType: !417, size: 32, offset: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1287, file: !903, line: 454, baseType: !762, size: 192, align: 64, offset: 128)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1287, file: !903, line: 455, baseType: !223, size: 128, offset: 320)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1287, file: !903, line: 456, baseType: !7, size: 32, offset: 448)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1287, file: !903, line: 458, baseType: !423, size: 64, offset: 512)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1287, file: !903, line: 459, baseType: !423, size: 64, offset: 576)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1287, file: !903, line: 460, baseType: !423, size: 64, offset: 640)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1287, file: !903, line: 461, baseType: !423, size: 64, offset: 704)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1287, file: !903, line: 463, baseType: !423, size: 64, offset: 768)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1287, file: !903, line: 465, baseType: !1303, offset: 832)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !903, line: 415, elements: !250)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1259, file: !903, line: 693, baseType: !1305, size: 384, offset: 1408)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !903, line: 489, size: 384, elements: !1306)
!1306 = !{!1307, !1308, !1309, !1310, !1311, !1312, !1313}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1305, file: !903, line: 490, baseType: !223, size: 128)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1305, file: !903, line: 491, baseType: !203, size: 64, offset: 128)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1305, file: !903, line: 492, baseType: !203, size: 64, offset: 192)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1305, file: !903, line: 493, baseType: !7, size: 32, offset: 256)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1305, file: !903, line: 494, baseType: !319, size: 16, offset: 288)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1305, file: !903, line: 495, baseType: !319, size: 16, offset: 304)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1305, file: !903, line: 497, baseType: !1314, size: 64, offset: 320)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 64)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1259, file: !903, line: 697, baseType: !1316, size: 1792, offset: 1792)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !903, line: 507, size: 1792, elements: !1317)
!1317 = !{!1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1397, !1398}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1316, file: !903, line: 508, baseType: !762, size: 192, align: 64)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1316, file: !903, line: 515, baseType: !423, size: 64, offset: 192)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1316, file: !903, line: 516, baseType: !423, size: 64, offset: 256)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1316, file: !903, line: 517, baseType: !423, size: 64, offset: 320)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1316, file: !903, line: 518, baseType: !423, size: 64, offset: 384)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1316, file: !903, line: 519, baseType: !423, size: 64, offset: 448)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1316, file: !903, line: 526, baseType: !779, size: 64, offset: 512)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1316, file: !903, line: 527, baseType: !423, size: 64, offset: 576)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1316, file: !903, line: 528, baseType: !7, size: 32, offset: 640)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1316, file: !903, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1316, file: !903, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1316, file: !903, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1316, file: !903, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1316, file: !903, line: 563, baseType: !1332, size: 512, offset: 704)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1333)
!1333 = !{!1334, !1342, !1343, !1348, !1391, !1394, !1395, !1396}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1332, file: !20, line: 119, baseType: !1335, size: 256)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1336, line: 9, size: 256, elements: !1337)
!1336 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1337 = !{!1338, !1339}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1335, file: !1336, line: 10, baseType: !762, size: 192, align: 64)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1335, file: !1336, line: 11, baseType: !1340, size: 64, offset: 192)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1341, line: 29, baseType: !779)
!1341 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1332, file: !20, line: 120, baseType: !1340, size: 64, offset: 256)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1332, file: !20, line: 121, baseType: !1344, size: 64, offset: 320)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64)
!1345 = !DISubroutineType(types: !1346)
!1346 = !{!19, !1347}
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1332, file: !20, line: 122, baseType: !1349, size: 64, offset: 384)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1351)
!1351 = !{!1352, !1372, !1373, !1376, !1381, !1382, !1386, !1390}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1350, file: !20, line: 160, baseType: !1353, size: 64)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64)
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1355)
!1355 = !{!1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1354, file: !20, line: 215, baseType: !782)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1354, file: !20, line: 216, baseType: !7, size: 32)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1354, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1354, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1354, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1354, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1354, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1354, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1354, file: !20, line: 233, baseType: !1340, size: 64, offset: 128)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1354, file: !20, line: 234, baseType: !1347, size: 64, offset: 192)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1354, file: !20, line: 235, baseType: !1340, size: 64, offset: 256)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1354, file: !20, line: 236, baseType: !1347, size: 64, offset: 320)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1354, file: !20, line: 237, baseType: !1369, size: 4096, offset: 512)
!1369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1350, size: 4096, elements: !1370)
!1370 = !{!1371}
!1371 = !DISubrange(count: 8)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1350, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1350, file: !20, line: 162, baseType: !1374, size: 32, offset: 96)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !160, line: 27, baseType: !1375)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !310, line: 96, baseType: !166)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1350, file: !20, line: 163, baseType: !1377, size: 32, offset: 128)
!1377 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !390, line: 276, baseType: !1378)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !390, line: 276, size: 32, elements: !1379)
!1379 = !{!1380}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1378, file: !390, line: 276, baseType: !394, size: 32)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1350, file: !20, line: 164, baseType: !1347, size: 64, offset: 192)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1350, file: !20, line: 165, baseType: !1383, size: 128, offset: 256)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1336, line: 14, size: 128, elements: !1384)
!1384 = !{!1385}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1383, file: !1336, line: 15, baseType: !754, size: 128)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1350, file: !20, line: 166, baseType: !1387, size: 64, offset: 384)
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 64)
!1388 = !DISubroutineType(types: !1389)
!1389 = !{!1340}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1350, file: !20, line: 167, baseType: !1340, size: 64, offset: 448)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1332, file: !20, line: 123, baseType: !1392, size: 8, offset: 448)
!1392 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !418, line: 17, baseType: !1393)
!1393 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !420, line: 21, baseType: !429)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1332, file: !20, line: 124, baseType: !1392, size: 8, offset: 456)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1332, file: !20, line: 125, baseType: !1392, size: 8, offset: 464)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1332, file: !20, line: 126, baseType: !1392, size: 8, offset: 472)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1316, file: !903, line: 572, baseType: !1332, size: 512, offset: 1216)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1316, file: !903, line: 580, baseType: !1399, size: 64, offset: 1728)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1259, file: !903, line: 721, baseType: !7, size: 32, offset: 3584)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1259, file: !903, line: 722, baseType: !166, size: 32, offset: 3616)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1259, file: !903, line: 723, baseType: !1403, size: 64, offset: 3648)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1405)
!1405 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1406, line: 17, baseType: !1407)
!1406 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1406, line: 17, size: 64, elements: !1408)
!1408 = !{!1409}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1407, file: !1406, line: 17, baseType: !1410, size: 64)
!1410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !203, size: 64, elements: !1411)
!1411 = !{!1412}
!1412 = !DISubrange(count: 1)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1259, file: !903, line: 724, baseType: !1405, size: 64, offset: 3712)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1259, file: !903, line: 749, baseType: !1415, offset: 3776)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !903, line: 290, elements: !250)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1259, file: !903, line: 751, baseType: !223, size: 128, offset: 3776)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1259, file: !903, line: 757, baseType: !1016, size: 64, offset: 3904)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1259, file: !903, line: 758, baseType: !1016, size: 64, offset: 3968)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1259, file: !903, line: 761, baseType: !1420, size: 320, offset: 4032)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1193, line: 34, size: 320, elements: !1421)
!1421 = !{!1422, !1423}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1420, file: !1193, line: 35, baseType: !423, size: 64)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1420, file: !1193, line: 36, baseType: !1424, size: 256, offset: 64)
!1424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1023, size: 256, elements: !1197)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1259, file: !903, line: 766, baseType: !166, size: 32, offset: 4352)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1259, file: !903, line: 767, baseType: !166, size: 32, offset: 4384)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1259, file: !903, line: 768, baseType: !166, size: 32, offset: 4416)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1259, file: !903, line: 770, baseType: !166, size: 32, offset: 4448)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1259, file: !903, line: 772, baseType: !203, size: 64, offset: 4480)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1259, file: !903, line: 775, baseType: !7, size: 32, offset: 4544)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1259, file: !903, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1259, file: !903, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1259, file: !903, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1259, file: !903, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1259, file: !903, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1259, file: !903, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1259, file: !903, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1259, file: !903, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1259, file: !903, line: 831, baseType: !203, size: 64, offset: 4672)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1259, file: !903, line: 833, baseType: !1441, size: 384, offset: 4736)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1442)
!1442 = !{!1443, !1448}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1441, file: !25, line: 26, baseType: !1444, size: 64)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64)
!1445 = !DISubroutineType(types: !1446)
!1446 = !{!312, !1447}
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 64)
!1448 = !DIDerivedType(tag: DW_TAG_member, scope: !1441, file: !25, line: 27, baseType: !1449, size: 320, offset: 64)
!1449 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1441, file: !25, line: 27, size: 320, elements: !1450)
!1450 = !{!1451, !1461, !1488}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1449, file: !25, line: 36, baseType: !1452, size: 320)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1449, file: !25, line: 29, size: 320, elements: !1453)
!1453 = !{!1454, !1456, !1457, !1458, !1459, !1460}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1452, file: !25, line: 30, baseType: !1455, size: 64)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1452, file: !25, line: 31, baseType: !417, size: 32, offset: 64)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1452, file: !25, line: 32, baseType: !417, size: 32, offset: 96)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1452, file: !25, line: 33, baseType: !417, size: 32, offset: 128)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1452, file: !25, line: 34, baseType: !423, size: 64, offset: 192)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1452, file: !25, line: 35, baseType: !1455, size: 64, offset: 256)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1449, file: !25, line: 46, baseType: !1462, size: 192)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1449, file: !25, line: 38, size: 192, elements: !1463)
!1463 = !{!1464, !1465, !1466, !1487}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1462, file: !25, line: 39, baseType: !1374, size: 32)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1462, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1466 = !DIDerivedType(tag: DW_TAG_member, scope: !1462, file: !25, line: 41, baseType: !1467, size: 64, offset: 64)
!1467 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1462, file: !25, line: 41, size: 64, elements: !1468)
!1468 = !{!1469, !1477}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1467, file: !25, line: 42, baseType: !1470, size: 64)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64)
!1471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1472, line: 7, size: 128, elements: !1473)
!1472 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1473 = !{!1474, !1476}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1471, file: !1472, line: 8, baseType: !1475, size: 64)
!1475 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !310, line: 93, baseType: !535)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1471, file: !1472, line: 9, baseType: !535, size: 64, offset: 64)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1467, file: !25, line: 43, baseType: !1478, size: 64)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1480, line: 7, size: 64, elements: !1481)
!1480 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1481 = !{!1482, !1486}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1479, file: !1480, line: 8, baseType: !1483, size: 32)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1480, line: 5, baseType: !1484)
!1484 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !418, line: 20, baseType: !1485)
!1485 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !420, line: 26, baseType: !166)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1479, file: !1480, line: 9, baseType: !1484, size: 32, offset: 32)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1462, file: !25, line: 45, baseType: !423, size: 64, offset: 128)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1449, file: !25, line: 54, baseType: !1489, size: 256)
!1489 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1449, file: !25, line: 48, size: 256, elements: !1490)
!1490 = !{!1491, !1499, !1500, !1501, !1502}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1489, file: !25, line: 49, baseType: !1492, size: 64)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1494, line: 36, size: 64, elements: !1495)
!1494 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!1495 = !{!1496, !1497, !1498}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1493, file: !1494, line: 37, baseType: !166, size: 32)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1493, file: !1494, line: 38, baseType: !1247, size: 16, offset: 32)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1493, file: !1494, line: 39, baseType: !1247, size: 16, offset: 48)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1489, file: !25, line: 50, baseType: !166, size: 32, offset: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1489, file: !25, line: 51, baseType: !166, size: 32, offset: 96)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1489, file: !25, line: 52, baseType: !203, size: 64, offset: 128)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1489, file: !25, line: 53, baseType: !203, size: 64, offset: 192)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1259, file: !903, line: 835, baseType: !1504, size: 32, offset: 5120)
!1504 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !160, line: 22, baseType: !1505)
!1505 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !310, line: 28, baseType: !166)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1259, file: !903, line: 836, baseType: !1504, size: 32, offset: 5152)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1259, file: !903, line: 840, baseType: !203, size: 64, offset: 5184)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1259, file: !903, line: 849, baseType: !1258, size: 64, offset: 5248)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1259, file: !903, line: 852, baseType: !1258, size: 64, offset: 5312)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1259, file: !903, line: 857, baseType: !223, size: 128, offset: 5376)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1259, file: !903, line: 858, baseType: !223, size: 128, offset: 5504)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1259, file: !903, line: 859, baseType: !1258, size: 64, offset: 5632)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1259, file: !903, line: 867, baseType: !223, size: 128, offset: 5696)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1259, file: !903, line: 868, baseType: !223, size: 128, offset: 5824)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1259, file: !903, line: 871, baseType: !1516, size: 64, offset: 5952)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 64)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1518)
!1518 = !{!1519, !1520, !1521, !1522, !1524, !1525, !1532, !1533}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1517, file: !53, line: 61, baseType: !1271, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1517, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1517, file: !53, line: 63, baseType: !236, offset: 64)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1517, file: !53, line: 65, baseType: !1523, size: 256, offset: 64)
!1523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, size: 256, elements: !1197)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1517, file: !53, line: 66, baseType: !637, size: 64, offset: 320)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1517, file: !53, line: 68, baseType: !1526, size: 128, offset: 384)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1527, line: 40, baseType: !1528)
!1527 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1527, line: 36, size: 128, elements: !1529)
!1529 = !{!1530, !1531}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1528, file: !1527, line: 37, baseType: !236)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1528, file: !1527, line: 38, baseType: !223, size: 128)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1517, file: !53, line: 69, baseType: !367, size: 128, align: 64, offset: 512)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1517, file: !53, line: 70, baseType: !1534, size: 128, offset: 640)
!1534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1535, size: 128, elements: !1411)
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1536)
!1536 = !{!1537, !1538}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1535, file: !53, line: 55, baseType: !166, size: 32)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1535, file: !53, line: 56, baseType: !1539, size: 64, offset: 64)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1540 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !53, line: 56, flags: DIFlagFwdDecl)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1259, file: !903, line: 872, baseType: !1542, size: 512, offset: 6016)
!1542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !641, size: 512, elements: !1197)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1259, file: !903, line: 873, baseType: !223, size: 128, offset: 6528)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1259, file: !903, line: 874, baseType: !223, size: 128, offset: 6656)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1259, file: !903, line: 876, baseType: !1546, size: 64, offset: 6784)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1548, line: 26, size: 192, elements: !1549)
!1548 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1549 = !{!1550, !1551}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1547, file: !1548, line: 27, baseType: !7, size: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1547, file: !1548, line: 28, baseType: !1552, size: 128, offset: 64)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1553, line: 43, size: 128, elements: !1554)
!1553 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1554 = !{!1555, !1556}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1552, file: !1553, line: 44, baseType: !782)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1552, file: !1553, line: 45, baseType: !223, size: 128)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1259, file: !903, line: 879, baseType: !707, size: 64, offset: 6848)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1259, file: !903, line: 882, baseType: !707, size: 64, offset: 6912)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1259, file: !903, line: 884, baseType: !423, size: 64, offset: 6976)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1259, file: !903, line: 885, baseType: !423, size: 64, offset: 7040)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1259, file: !903, line: 890, baseType: !423, size: 64, offset: 7104)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1259, file: !903, line: 891, baseType: !1563, size: 128, offset: 7168)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !903, line: 242, size: 128, elements: !1564)
!1564 = !{!1565, !1566, !1567}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1563, file: !903, line: 244, baseType: !423, size: 64)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1563, file: !903, line: 245, baseType: !423, size: 64, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1563, file: !903, line: 246, baseType: !782, offset: 128)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1259, file: !903, line: 900, baseType: !203, size: 64, offset: 7296)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1259, file: !903, line: 901, baseType: !203, size: 64, offset: 7360)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1259, file: !903, line: 904, baseType: !423, size: 64, offset: 7424)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1259, file: !903, line: 907, baseType: !423, size: 64, offset: 7488)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1259, file: !903, line: 910, baseType: !203, size: 64, offset: 7552)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1259, file: !903, line: 911, baseType: !203, size: 64, offset: 7616)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1259, file: !903, line: 914, baseType: !1575, size: 640, offset: 7680)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1576, line: 123, size: 640, elements: !1577)
!1576 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1577 = !{!1578, !1584, !1585}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1575, file: !1576, line: 124, baseType: !1579, size: 576)
!1579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1580, size: 576, elements: !278)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1576, line: 108, size: 192, elements: !1581)
!1581 = !{!1582, !1583}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1580, file: !1576, line: 109, baseType: !423, size: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1580, file: !1576, line: 110, baseType: !1383, size: 128, offset: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1575, file: !1576, line: 125, baseType: !7, size: 32, offset: 576)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1575, file: !1576, line: 126, baseType: !7, size: 32, offset: 608)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1259, file: !903, line: 917, baseType: !1587, size: 192, offset: 8320)
!1587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1576, line: 134, size: 192, elements: !1588)
!1588 = !{!1589, !1590}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1587, file: !1576, line: 135, baseType: !367, size: 128, align: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1587, file: !1576, line: 136, baseType: !7, size: 32, offset: 128)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1259, file: !903, line: 923, baseType: !1592, size: 64, offset: 8512)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 64)
!1593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1594)
!1594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1595, line: 111, size: 1280, elements: !1596)
!1595 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1596 = !{!1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1616, !1617, !1618, !1619, !1620, !1621, !1728, !1729, !1730, !1731, !1757, !1760, !1770}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1594, file: !1595, line: 112, baseType: !749, size: 32)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1594, file: !1595, line: 120, baseType: !437, size: 32, offset: 32)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1594, file: !1595, line: 121, baseType: !445, size: 32, offset: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1594, file: !1595, line: 122, baseType: !437, size: 32, offset: 96)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1594, file: !1595, line: 123, baseType: !445, size: 32, offset: 128)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1594, file: !1595, line: 124, baseType: !437, size: 32, offset: 160)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1594, file: !1595, line: 125, baseType: !445, size: 32, offset: 192)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1594, file: !1595, line: 126, baseType: !437, size: 32, offset: 224)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1594, file: !1595, line: 127, baseType: !445, size: 32, offset: 256)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1594, file: !1595, line: 128, baseType: !7, size: 32, offset: 288)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1594, file: !1595, line: 129, baseType: !1608, size: 64, offset: 320)
!1608 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1609, line: 26, baseType: !1610)
!1609 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1609, line: 24, size: 64, elements: !1611)
!1611 = !{!1612}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1610, file: !1609, line: 25, baseType: !1613, size: 64)
!1613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 64, elements: !1614)
!1614 = !{!1615}
!1615 = !DISubrange(count: 2)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1594, file: !1595, line: 130, baseType: !1608, size: 64, offset: 384)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1594, file: !1595, line: 131, baseType: !1608, size: 64, offset: 448)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1594, file: !1595, line: 132, baseType: !1608, size: 64, offset: 512)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1594, file: !1595, line: 133, baseType: !1608, size: 64, offset: 576)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1594, file: !1595, line: 135, baseType: !429, size: 8, offset: 640)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1594, file: !1595, line: 137, baseType: !1622, size: 64, offset: 704)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64)
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1624, line: 189, size: 1664, elements: !1625)
!1624 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1625 = !{!1626, !1627, !1630, !1635, !1636, !1639, !1640, !1645, !1646, !1647, !1648, !1650, !1651, !1652, !1653, !1654, !1692, !1713}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1623, file: !1624, line: 190, baseType: !1271, size: 32)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1623, file: !1624, line: 191, baseType: !1628, size: 32, offset: 32)
!1628 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1624, line: 28, baseType: !1629)
!1629 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !160, line: 98, baseType: !1484)
!1630 = !DIDerivedType(tag: DW_TAG_member, scope: !1623, file: !1624, line: 192, baseType: !1631, size: 192, offset: 64)
!1631 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1623, file: !1624, line: 192, size: 192, elements: !1632)
!1632 = !{!1633, !1634}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1631, file: !1624, line: 193, baseType: !223, size: 128)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1631, file: !1624, line: 194, baseType: !762, size: 192, align: 64)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1623, file: !1624, line: 199, baseType: !769, size: 256, offset: 256)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1623, file: !1624, line: 200, baseType: !1637, size: 64, offset: 512)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64)
!1638 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1624, line: 200, flags: DIFlagFwdDecl)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1623, file: !1624, line: 201, baseType: !161, size: 64, offset: 576)
!1640 = !DIDerivedType(tag: DW_TAG_member, scope: !1623, file: !1624, line: 202, baseType: !1641, size: 64, offset: 640)
!1641 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1623, file: !1624, line: 202, size: 64, elements: !1642)
!1642 = !{!1643, !1644}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1641, file: !1624, line: 203, baseType: !541, size: 64)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1641, file: !1624, line: 204, baseType: !541, size: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1623, file: !1624, line: 206, baseType: !541, size: 64, offset: 704)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1623, file: !1624, line: 207, baseType: !437, size: 32, offset: 768)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1623, file: !1624, line: 208, baseType: !445, size: 32, offset: 800)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1623, file: !1624, line: 209, baseType: !1649, size: 32, offset: 832)
!1649 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1624, line: 31, baseType: !561)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1623, file: !1624, line: 210, baseType: !319, size: 16, offset: 864)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1623, file: !1624, line: 211, baseType: !319, size: 16, offset: 880)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1623, file: !1624, line: 215, baseType: !1247, size: 16, offset: 896)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1623, file: !1624, line: 222, baseType: !203, size: 64, offset: 960)
!1654 = !DIDerivedType(tag: DW_TAG_member, scope: !1623, file: !1624, line: 239, baseType: !1655, size: 320, offset: 1024)
!1655 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1623, file: !1624, line: 239, size: 320, elements: !1656)
!1656 = !{!1657, !1684}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1655, file: !1624, line: 240, baseType: !1658, size: 320)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1624, line: 108, size: 320, elements: !1659)
!1659 = !{!1660, !1661, !1673, !1676, !1683}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1658, file: !1624, line: 110, baseType: !203, size: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, scope: !1658, file: !1624, line: 111, baseType: !1662, size: 64, offset: 64)
!1662 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1658, file: !1624, line: 111, size: 64, elements: !1663)
!1663 = !{!1664, !1672}
!1664 = !DIDerivedType(tag: DW_TAG_member, scope: !1662, file: !1624, line: 112, baseType: !1665, size: 64)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1662, file: !1624, line: 112, size: 64, elements: !1666)
!1666 = !{!1667, !1668}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1665, file: !1624, line: 114, baseType: !861, size: 16)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1665, file: !1624, line: 115, baseType: !1669, size: 48, offset: 16)
!1669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 48, elements: !1670)
!1670 = !{!1671}
!1671 = !DISubrange(count: 6)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1662, file: !1624, line: 121, baseType: !203, size: 64)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1658, file: !1624, line: 123, baseType: !1674, size: 64, offset: 128)
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 64)
!1675 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1624, line: 96, flags: DIFlagFwdDecl)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1658, file: !1624, line: 124, baseType: !1677, size: 64, offset: 192)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 64)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1624, line: 102, size: 192, elements: !1679)
!1679 = !{!1680, !1681, !1682}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1678, file: !1624, line: 103, baseType: !367, size: 128, align: 64)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1678, file: !1624, line: 104, baseType: !1271, size: 32, offset: 128)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1678, file: !1624, line: 105, baseType: !492, size: 8, offset: 160)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1658, file: !1624, line: 125, baseType: !173, size: 64, offset: 256)
!1684 = !DIDerivedType(tag: DW_TAG_member, scope: !1655, file: !1624, line: 241, baseType: !1685, size: 320)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1655, file: !1624, line: 241, size: 320, elements: !1686)
!1686 = !{!1687, !1688, !1689, !1690, !1691}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1685, file: !1624, line: 242, baseType: !203, size: 64)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1685, file: !1624, line: 243, baseType: !203, size: 64, offset: 64)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1685, file: !1624, line: 244, baseType: !1674, size: 64, offset: 128)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1685, file: !1624, line: 245, baseType: !1677, size: 64, offset: 192)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1685, file: !1624, line: 246, baseType: !277, size: 64, offset: 256)
!1692 = !DIDerivedType(tag: DW_TAG_member, scope: !1623, file: !1624, line: 254, baseType: !1693, size: 256, offset: 1344)
!1693 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1623, file: !1624, line: 254, size: 256, elements: !1694)
!1694 = !{!1695, !1701}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1693, file: !1624, line: 255, baseType: !1696, size: 256)
!1696 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1624, line: 128, size: 256, elements: !1697)
!1697 = !{!1698, !1699}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1696, file: !1624, line: 129, baseType: !161, size: 64)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1696, file: !1624, line: 130, baseType: !1700, size: 256)
!1700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 256, elements: !1197)
!1701 = !DIDerivedType(tag: DW_TAG_member, scope: !1693, file: !1624, line: 256, baseType: !1702, size: 256)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1693, file: !1624, line: 256, size: 256, elements: !1703)
!1703 = !{!1704, !1705}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1702, file: !1624, line: 258, baseType: !223, size: 128)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1702, file: !1624, line: 259, baseType: !1706, size: 128, offset: 128)
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1707, line: 22, size: 128, elements: !1708)
!1707 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1708 = !{!1709, !1712}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1706, file: !1707, line: 23, baseType: !1710, size: 64)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 64)
!1711 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1707, line: 23, flags: DIFlagFwdDecl)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1706, file: !1707, line: 24, baseType: !203, size: 64, offset: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1623, file: !1624, line: 274, baseType: !1714, size: 64, offset: 1600)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1624, line: 170, size: 192, elements: !1716)
!1716 = !{!1717, !1726, !1727}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1715, file: !1624, line: 171, baseType: !1718, size: 64)
!1718 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1624, line: 165, baseType: !1719)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64)
!1720 = !DISubroutineType(types: !1721)
!1721 = !{!166, !1622, !1722, !1724, !1622}
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64)
!1723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1675)
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 64)
!1725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1696)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1715, file: !1624, line: 172, baseType: !1622, size: 64, offset: 64)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1715, file: !1624, line: 173, baseType: !1674, size: 64, offset: 128)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1594, file: !1595, line: 138, baseType: !1622, size: 64, offset: 768)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1594, file: !1595, line: 139, baseType: !1622, size: 64, offset: 832)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1594, file: !1595, line: 140, baseType: !1622, size: 64, offset: 896)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1594, file: !1595, line: 145, baseType: !1732, size: 64, offset: 960)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1734, line: 13, size: 896, elements: !1735)
!1734 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1735 = !{!1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1733, file: !1734, line: 14, baseType: !1271, size: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1733, file: !1734, line: 15, baseType: !749, size: 32, offset: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1733, file: !1734, line: 16, baseType: !749, size: 32, offset: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1733, file: !1734, line: 21, baseType: !773, size: 64, offset: 128)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1733, file: !1734, line: 27, baseType: !203, size: 64, offset: 192)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1733, file: !1734, line: 28, baseType: !203, size: 64, offset: 256)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1733, file: !1734, line: 29, baseType: !773, size: 64, offset: 320)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1733, file: !1734, line: 32, baseType: !641, size: 128, offset: 384)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1733, file: !1734, line: 33, baseType: !437, size: 32, offset: 512)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1733, file: !1734, line: 37, baseType: !773, size: 64, offset: 576)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1733, file: !1734, line: 44, baseType: !1747, size: 256, offset: 640)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1748, line: 15, size: 256, elements: !1749)
!1748 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1749 = !{!1750, !1751, !1752, !1753, !1754, !1755, !1756}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1747, file: !1748, line: 16, baseType: !782)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1747, file: !1748, line: 18, baseType: !166, size: 32)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1747, file: !1748, line: 19, baseType: !166, size: 32, offset: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1747, file: !1748, line: 20, baseType: !166, size: 32, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1747, file: !1748, line: 21, baseType: !166, size: 32, offset: 96)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1747, file: !1748, line: 22, baseType: !203, size: 64, offset: 128)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1747, file: !1748, line: 23, baseType: !203, size: 64, offset: 192)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1594, file: !1595, line: 146, baseType: !1758, size: 64, offset: 1024)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64)
!1759 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !438, line: 18, flags: DIFlagFwdDecl)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1594, file: !1595, line: 147, baseType: !1761, size: 64, offset: 1088)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1595, line: 25, size: 64, elements: !1763)
!1763 = !{!1764, !1765, !1766}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1762, file: !1595, line: 26, baseType: !749, size: 32)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1762, file: !1595, line: 27, baseType: !166, size: 32, offset: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1762, file: !1595, line: 28, baseType: !1767, offset: 64)
!1767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !445, elements: !1768)
!1768 = !{!1769}
!1769 = !DISubrange(count: 0)
!1770 = !DIDerivedType(tag: DW_TAG_member, scope: !1594, file: !1595, line: 149, baseType: !1771, size: 128, offset: 1152)
!1771 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1594, file: !1595, line: 149, size: 128, elements: !1772)
!1772 = !{!1773, !1774}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1771, file: !1595, line: 150, baseType: !166, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1771, file: !1595, line: 151, baseType: !367, size: 128, align: 64)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1259, file: !903, line: 926, baseType: !1592, size: 64, offset: 8576)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1259, file: !903, line: 929, baseType: !1592, size: 64, offset: 8640)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1259, file: !903, line: 933, baseType: !1622, size: 64, offset: 8704)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1259, file: !903, line: 943, baseType: !1779, size: 128, offset: 8768)
!1779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 128, elements: !1780)
!1780 = !{!1781}
!1781 = !DISubrange(count: 16)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1259, file: !903, line: 945, baseType: !1783, size: 64, offset: 8896)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64)
!1784 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !903, line: 49, flags: DIFlagFwdDecl)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1259, file: !903, line: 956, baseType: !1786, size: 64, offset: 8960)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 64)
!1787 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !903, line: 45, flags: DIFlagFwdDecl)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1259, file: !903, line: 959, baseType: !1789, size: 64, offset: 9024)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 64)
!1790 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !903, line: 959, flags: DIFlagFwdDecl)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1259, file: !903, line: 962, baseType: !1792, size: 64, offset: 9088)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !903, line: 66, flags: DIFlagFwdDecl)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1259, file: !903, line: 966, baseType: !1795, size: 64, offset: 9152)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64)
!1796 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1797, line: 35, flags: DIFlagFwdDecl)
!1797 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1259, file: !903, line: 969, baseType: !1799, size: 64, offset: 9216)
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 64)
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1801, line: 82, size: 7296, elements: !1802)
!1801 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1802 = !{!1803, !1804, !1805, !1806, !1807, !1808, !1809, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1838, !1847, !1848, !1850, !1851, !1852, !1855, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1885, !1886, !1893, !1894, !1895, !1896, !1897, !1898}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1800, file: !1801, line: 83, baseType: !1271, size: 32)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1800, file: !1801, line: 84, baseType: !749, size: 32, offset: 32)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1800, file: !1801, line: 85, baseType: !166, size: 32, offset: 64)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1800, file: !1801, line: 86, baseType: !223, size: 128, offset: 128)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1800, file: !1801, line: 88, baseType: !1526, size: 128, offset: 256)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1800, file: !1801, line: 91, baseType: !1258, size: 64, offset: 384)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1800, file: !1801, line: 94, baseType: !1810, size: 192, offset: 448)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1811, line: 30, size: 192, elements: !1812)
!1811 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1812 = !{!1813, !1814}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1810, file: !1811, line: 31, baseType: !223, size: 128)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1810, file: !1811, line: 32, baseType: !1815, size: 64, offset: 128)
!1815 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1816, line: 25, baseType: !1817)
!1816 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1816, line: 23, size: 64, elements: !1818)
!1818 = !{!1819}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1817, file: !1816, line: 24, baseType: !1410, size: 64)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1800, file: !1801, line: 97, baseType: !637, size: 64, offset: 640)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1800, file: !1801, line: 100, baseType: !166, size: 32, offset: 704)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1800, file: !1801, line: 106, baseType: !166, size: 32, offset: 736)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1800, file: !1801, line: 107, baseType: !1258, size: 64, offset: 768)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1800, file: !1801, line: 110, baseType: !166, size: 32, offset: 832)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1800, file: !1801, line: 111, baseType: !7, size: 32, offset: 864)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1800, file: !1801, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1800, file: !1801, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1800, file: !1801, line: 128, baseType: !166, size: 32, offset: 928)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1800, file: !1801, line: 129, baseType: !223, size: 128, offset: 960)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1800, file: !1801, line: 132, baseType: !1332, size: 512, offset: 1088)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1800, file: !1801, line: 133, baseType: !1340, size: 64, offset: 1600)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1800, file: !1801, line: 140, baseType: !1833, size: 256, offset: 1664)
!1833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1834, size: 256, elements: !1614)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1801, line: 38, size: 128, elements: !1835)
!1835 = !{!1836, !1837}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1834, file: !1801, line: 39, baseType: !423, size: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1834, file: !1801, line: 40, baseType: !423, size: 64, offset: 64)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1800, file: !1801, line: 146, baseType: !1839, size: 192, offset: 1920)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1801, line: 66, size: 192, elements: !1840)
!1840 = !{!1841}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1839, file: !1801, line: 67, baseType: !1842, size: 192)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1801, line: 47, size: 192, elements: !1843)
!1843 = !{!1844, !1845, !1846}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1842, file: !1801, line: 48, baseType: !775, size: 64)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1842, file: !1801, line: 49, baseType: !775, size: 64, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1842, file: !1801, line: 50, baseType: !775, size: 64, offset: 128)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1800, file: !1801, line: 150, baseType: !1575, size: 640, offset: 2112)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1800, file: !1801, line: 153, baseType: !1849, size: 256, offset: 2752)
!1849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1516, size: 256, elements: !1197)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1800, file: !1801, line: 159, baseType: !1516, size: 64, offset: 3008)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1800, file: !1801, line: 162, baseType: !166, size: 32, offset: 3072)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1800, file: !1801, line: 164, baseType: !1853, size: 64, offset: 3136)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 64)
!1854 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1801, line: 164, flags: DIFlagFwdDecl)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1800, file: !1801, line: 175, baseType: !1856, size: 32, offset: 3200)
!1856 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !390, line: 805, baseType: !1857)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !390, line: 798, size: 32, elements: !1858)
!1858 = !{!1859, !1860}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1857, file: !390, line: 803, baseType: !389, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1857, file: !390, line: 804, baseType: !236, offset: 32)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1800, file: !1801, line: 176, baseType: !423, size: 64, offset: 3264)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1800, file: !1801, line: 176, baseType: !423, size: 64, offset: 3328)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1800, file: !1801, line: 176, baseType: !423, size: 64, offset: 3392)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1800, file: !1801, line: 176, baseType: !423, size: 64, offset: 3456)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1800, file: !1801, line: 177, baseType: !423, size: 64, offset: 3520)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1800, file: !1801, line: 178, baseType: !423, size: 64, offset: 3584)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1800, file: !1801, line: 179, baseType: !1563, size: 128, offset: 3648)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1800, file: !1801, line: 180, baseType: !203, size: 64, offset: 3776)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1800, file: !1801, line: 180, baseType: !203, size: 64, offset: 3840)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1800, file: !1801, line: 180, baseType: !203, size: 64, offset: 3904)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1800, file: !1801, line: 180, baseType: !203, size: 64, offset: 3968)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1800, file: !1801, line: 181, baseType: !203, size: 64, offset: 4032)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1800, file: !1801, line: 181, baseType: !203, size: 64, offset: 4096)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1800, file: !1801, line: 181, baseType: !203, size: 64, offset: 4160)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1800, file: !1801, line: 181, baseType: !203, size: 64, offset: 4224)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1800, file: !1801, line: 182, baseType: !203, size: 64, offset: 4288)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1800, file: !1801, line: 182, baseType: !203, size: 64, offset: 4352)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1800, file: !1801, line: 182, baseType: !203, size: 64, offset: 4416)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1800, file: !1801, line: 182, baseType: !203, size: 64, offset: 4480)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1800, file: !1801, line: 183, baseType: !203, size: 64, offset: 4544)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1800, file: !1801, line: 183, baseType: !203, size: 64, offset: 4608)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1800, file: !1801, line: 184, baseType: !1883, offset: 4672)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1884, line: 12, elements: !250)
!1884 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1800, file: !1801, line: 192, baseType: !425, size: 64, offset: 4672)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1800, file: !1801, line: 203, baseType: !1887, size: 2048, offset: 4736)
!1887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1888, size: 2048, elements: !1780)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1889, line: 43, size: 128, elements: !1890)
!1889 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1890 = !{!1891, !1892}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1888, file: !1889, line: 44, baseType: !326, size: 64)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1888, file: !1889, line: 45, baseType: !326, size: 64, offset: 64)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1800, file: !1801, line: 220, baseType: !492, size: 8, offset: 6784)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1800, file: !1801, line: 221, baseType: !1247, size: 16, offset: 6800)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1800, file: !1801, line: 222, baseType: !1247, size: 16, offset: 6816)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1800, file: !1801, line: 224, baseType: !1016, size: 64, offset: 6848)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1800, file: !1801, line: 227, baseType: !1215, size: 192, offset: 6912)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1800, file: !1801, line: 233, baseType: !1215, size: 192, offset: 7104)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1259, file: !903, line: 970, baseType: !1900, size: 64, offset: 9280)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1801, line: 20, size: 16576, elements: !1902)
!1902 = !{!1903, !1904, !1905, !1906}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1901, file: !1801, line: 21, baseType: !236)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1901, file: !1801, line: 22, baseType: !1271, size: 32)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1901, file: !1801, line: 23, baseType: !1526, size: 128, offset: 64)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1901, file: !1801, line: 24, baseType: !1907, size: 16384, offset: 192)
!1907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1908, size: 16384, elements: !282)
!1908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1811, line: 49, size: 256, elements: !1909)
!1909 = !{!1910}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1908, file: !1811, line: 50, baseType: !1911, size: 256)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1811, line: 35, size: 256, elements: !1912)
!1912 = !{!1913, !1920, !1921, !1927}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1911, file: !1811, line: 37, baseType: !1914, size: 64)
!1914 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1915, line: 19, baseType: !1916)
!1915 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 64)
!1917 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1915, line: 18, baseType: !1918)
!1918 = !DISubroutineType(types: !1919)
!1919 = !{null, !166}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1911, file: !1811, line: 38, baseType: !203, size: 64, offset: 64)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1911, file: !1811, line: 44, baseType: !1922, size: 64, offset: 128)
!1922 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1915, line: 22, baseType: !1923)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!1924 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1915, line: 21, baseType: !1925)
!1925 = !DISubroutineType(types: !1926)
!1926 = !{null}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1911, file: !1811, line: 46, baseType: !1815, size: 64, offset: 192)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1259, file: !903, line: 971, baseType: !1815, size: 64, offset: 9344)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1259, file: !903, line: 972, baseType: !1815, size: 64, offset: 9408)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1259, file: !903, line: 974, baseType: !1815, size: 64, offset: 9472)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1259, file: !903, line: 975, baseType: !1810, size: 192, offset: 9536)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1259, file: !903, line: 976, baseType: !203, size: 64, offset: 9728)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1259, file: !903, line: 977, baseType: !324, size: 64, offset: 9792)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1259, file: !903, line: 978, baseType: !7, size: 32, offset: 9856)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1259, file: !903, line: 980, baseType: !370, size: 64, offset: 9920)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1259, file: !903, line: 989, baseType: !1937, size: 128, offset: 9984)
!1937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1938, line: 35, size: 128, elements: !1939)
!1938 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1939 = !{!1940, !1941, !1942}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1937, file: !1938, line: 36, baseType: !166, size: 32)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1937, file: !1938, line: 37, baseType: !749, size: 32, offset: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1937, file: !1938, line: 38, baseType: !1943, size: 64, offset: 64)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64)
!1944 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1938, line: 23, flags: DIFlagFwdDecl)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1259, file: !903, line: 992, baseType: !423, size: 64, offset: 10112)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1259, file: !903, line: 993, baseType: !423, size: 64, offset: 10176)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1259, file: !903, line: 996, baseType: !236, offset: 10240)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1259, file: !903, line: 999, baseType: !782, offset: 10240)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1259, file: !903, line: 1001, baseType: !1950, size: 64, offset: 10240)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !903, line: 636, size: 64, elements: !1951)
!1951 = !{!1952}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1950, file: !903, line: 637, baseType: !1953, size: 64)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 64)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1259, file: !903, line: 1005, baseType: !754, size: 128, offset: 10304)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1259, file: !903, line: 1007, baseType: !1258, size: 64, offset: 10432)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1259, file: !903, line: 1009, baseType: !1957, size: 64, offset: 10496)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 64)
!1958 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !903, line: 1009, flags: DIFlagFwdDecl)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1259, file: !903, line: 1043, baseType: !161, size: 64, offset: 10560)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1259, file: !903, line: 1046, baseType: !1961, size: 64, offset: 10624)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!1962 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !903, line: 41, flags: DIFlagFwdDecl)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1259, file: !903, line: 1050, baseType: !1964, size: 64, offset: 10688)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64)
!1965 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !903, line: 42, flags: DIFlagFwdDecl)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1259, file: !903, line: 1054, baseType: !1967, size: 64, offset: 10752)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1968 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !903, line: 55, flags: DIFlagFwdDecl)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1259, file: !903, line: 1056, baseType: !1970, size: 64, offset: 10816)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64)
!1971 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !903, line: 40, flags: DIFlagFwdDecl)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1259, file: !903, line: 1058, baseType: !1973, size: 64, offset: 10880)
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 64)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1975, line: 99, size: 704, elements: !1976)
!1975 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1976 = !{!1977, !1978, !1979, !1980, !1981, !1982, !1983, !2002, !2003}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1974, file: !1975, line: 100, baseType: !773, size: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1974, file: !1975, line: 101, baseType: !749, size: 32, offset: 64)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1974, file: !1975, line: 102, baseType: !749, size: 32, offset: 96)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1974, file: !1975, line: 105, baseType: !236, offset: 128)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1974, file: !1975, line: 107, baseType: !319, size: 16, offset: 128)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1974, file: !1975, line: 109, baseType: !741, size: 128, offset: 192)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1974, file: !1975, line: 110, baseType: !1984, size: 64, offset: 320)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 64)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1975, line: 73, size: 448, elements: !1986)
!1986 = !{!1987, !1990, !1991, !1996, !2001}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1985, file: !1975, line: 74, baseType: !1988, size: 64)
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!1989 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !1975, line: 74, flags: DIFlagFwdDecl)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !1985, file: !1975, line: 75, baseType: !1973, size: 64, offset: 64)
!1991 = !DIDerivedType(tag: DW_TAG_member, scope: !1985, file: !1975, line: 83, baseType: !1992, size: 128, offset: 128)
!1992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1985, file: !1975, line: 83, size: 128, elements: !1993)
!1993 = !{!1994, !1995}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !1992, file: !1975, line: 84, baseType: !223, size: 128)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !1992, file: !1975, line: 85, baseType: !977, size: 64)
!1996 = !DIDerivedType(tag: DW_TAG_member, scope: !1985, file: !1975, line: 87, baseType: !1997, size: 128, offset: 256)
!1997 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1985, file: !1975, line: 87, size: 128, elements: !1998)
!1998 = !{!1999, !2000}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !1997, file: !1975, line: 88, baseType: !641, size: 128)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !1997, file: !1975, line: 89, baseType: !367, size: 128, align: 64)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1985, file: !1975, line: 92, baseType: !7, size: 32, offset: 384)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1974, file: !1975, line: 111, baseType: !637, size: 64, offset: 384)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1974, file: !1975, line: 113, baseType: !2004, size: 256, offset: 448)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2005, line: 102, size: 256, elements: !2006)
!2005 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2006 = !{!2007, !2008, !2009}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2004, file: !2005, line: 103, baseType: !773, size: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2004, file: !2005, line: 104, baseType: !223, size: 128, offset: 64)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2004, file: !2005, line: 105, baseType: !2010, size: 64, offset: 192)
!2010 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2005, line: 21, baseType: !2011)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 64)
!2012 = !DISubroutineType(types: !2013)
!2013 = !{null, !2014}
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 64)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1259, file: !903, line: 1061, baseType: !2016, size: 64, offset: 10944)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 64)
!2017 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !903, line: 43, flags: DIFlagFwdDecl)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1259, file: !903, line: 1064, baseType: !203, size: 64, offset: 11008)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1259, file: !903, line: 1065, baseType: !2020, size: 64, offset: 11072)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!2021 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1811, line: 14, baseType: !2022)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1811, line: 12, size: 384, elements: !2023)
!2023 = !{!2024}
!2024 = !DIDerivedType(tag: DW_TAG_member, scope: !2022, file: !1811, line: 13, baseType: !2025, size: 384)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2022, file: !1811, line: 13, size: 384, elements: !2026)
!2026 = !{!2027, !2028, !2029, !2030}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2025, file: !1811, line: 13, baseType: !166, size: 32)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2025, file: !1811, line: 13, baseType: !166, size: 32, offset: 32)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2025, file: !1811, line: 13, baseType: !166, size: 32, offset: 64)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2025, file: !1811, line: 13, baseType: !2031, size: 256, offset: 128)
!2031 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2032, line: 32, size: 256, elements: !2033)
!2032 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2033 = !{!2034, !2039, !2052, !2058, !2067, !2087, !2092}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2031, file: !2032, line: 37, baseType: !2035, size: 64)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2031, file: !2032, line: 34, size: 64, elements: !2036)
!2036 = !{!2037, !2038}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2035, file: !2032, line: 35, baseType: !1505, size: 32)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2035, file: !2032, line: 36, baseType: !443, size: 32, offset: 32)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2031, file: !2032, line: 45, baseType: !2040, size: 192)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2031, file: !2032, line: 40, size: 192, elements: !2041)
!2041 = !{!2042, !2044, !2045, !2051}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2040, file: !2032, line: 41, baseType: !2043, size: 32)
!2043 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !310, line: 95, baseType: !166)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2040, file: !2032, line: 42, baseType: !166, size: 32, offset: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2040, file: !2032, line: 43, baseType: !2046, size: 64, offset: 64)
!2046 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2032, line: 11, baseType: !2047)
!2047 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2032, line: 8, size: 64, elements: !2048)
!2048 = !{!2049, !2050}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2047, file: !2032, line: 9, baseType: !166, size: 32)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2047, file: !2032, line: 10, baseType: !161, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2040, file: !2032, line: 44, baseType: !166, size: 32, offset: 128)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2031, file: !2032, line: 52, baseType: !2053, size: 128)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2031, file: !2032, line: 48, size: 128, elements: !2054)
!2054 = !{!2055, !2056, !2057}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2053, file: !2032, line: 49, baseType: !1505, size: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2053, file: !2032, line: 50, baseType: !443, size: 32, offset: 32)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2053, file: !2032, line: 51, baseType: !2046, size: 64, offset: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2031, file: !2032, line: 61, baseType: !2059, size: 256)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2031, file: !2032, line: 55, size: 256, elements: !2060)
!2060 = !{!2061, !2062, !2063, !2064, !2066}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2059, file: !2032, line: 56, baseType: !1505, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2059, file: !2032, line: 57, baseType: !443, size: 32, offset: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2059, file: !2032, line: 58, baseType: !166, size: 32, offset: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2059, file: !2032, line: 59, baseType: !2065, size: 64, offset: 128)
!2065 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !310, line: 94, baseType: !311)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2059, file: !2032, line: 60, baseType: !2065, size: 64, offset: 192)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2031, file: !2032, line: 95, baseType: !2068, size: 256)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2031, file: !2032, line: 64, size: 256, elements: !2069)
!2069 = !{!2070, !2071}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2068, file: !2032, line: 65, baseType: !161, size: 64)
!2071 = !DIDerivedType(tag: DW_TAG_member, scope: !2068, file: !2032, line: 77, baseType: !2072, size: 192, offset: 64)
!2072 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2068, file: !2032, line: 77, size: 192, elements: !2073)
!2073 = !{!2074, !2075, !2082}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2072, file: !2032, line: 82, baseType: !1247, size: 16)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2072, file: !2032, line: 88, baseType: !2076, size: 192)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2072, file: !2032, line: 84, size: 192, elements: !2077)
!2077 = !{!2078, !2080, !2081}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2076, file: !2032, line: 85, baseType: !2079, size: 64)
!2079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 64, elements: !1370)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2076, file: !2032, line: 86, baseType: !161, size: 64, offset: 64)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2076, file: !2032, line: 87, baseType: !161, size: 64, offset: 128)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2072, file: !2032, line: 93, baseType: !2083, size: 96)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2072, file: !2032, line: 90, size: 96, elements: !2084)
!2084 = !{!2085, !2086}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2083, file: !2032, line: 91, baseType: !2079, size: 64)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2083, file: !2032, line: 92, baseType: !419, size: 32, offset: 64)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2031, file: !2032, line: 101, baseType: !2088, size: 128)
!2088 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2031, file: !2032, line: 98, size: 128, elements: !2089)
!2089 = !{!2090, !2091}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2088, file: !2032, line: 99, baseType: !312, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2088, file: !2032, line: 100, baseType: !166, size: 32, offset: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2031, file: !2032, line: 108, baseType: !2093, size: 128)
!2093 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2031, file: !2032, line: 104, size: 128, elements: !2094)
!2094 = !{!2095, !2096, !2097}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2093, file: !2032, line: 105, baseType: !161, size: 64)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2093, file: !2032, line: 106, baseType: !166, size: 32, offset: 64)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2093, file: !2032, line: 107, baseType: !7, size: 32, offset: 96)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1259, file: !903, line: 1067, baseType: !1883, offset: 11136)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1259, file: !903, line: 1099, baseType: !2100, size: 64, offset: 11136)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64)
!2101 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !903, line: 56, flags: DIFlagFwdDecl)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1259, file: !903, line: 1103, baseType: !223, size: 128, offset: 11200)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1259, file: !903, line: 1104, baseType: !2104, size: 64, offset: 11328)
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 64)
!2105 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !903, line: 46, flags: DIFlagFwdDecl)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1259, file: !903, line: 1105, baseType: !1215, size: 192, offset: 11392)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1259, file: !903, line: 1106, baseType: !7, size: 32, offset: 11584)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1259, file: !903, line: 1109, baseType: !2109, size: 128, offset: 11648)
!2109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2110, size: 128, elements: !1614)
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 64)
!2111 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !903, line: 51, flags: DIFlagFwdDecl)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1259, file: !903, line: 1110, baseType: !1215, size: 192, offset: 11776)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1259, file: !903, line: 1111, baseType: !223, size: 128, offset: 11968)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1259, file: !903, line: 1173, baseType: !2115, size: 64, offset: 12096)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 64)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2117, line: 62, size: 256, align: 256, elements: !2118)
!2117 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2118 = !{!2119, !2120, !2121, !2126}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2116, file: !2117, line: 75, baseType: !419, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2116, file: !2117, line: 90, baseType: !419, size: 32, offset: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2116, file: !2117, line: 124, baseType: !2122, size: 64, offset: 64)
!2122 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2116, file: !2117, line: 109, size: 64, elements: !2123)
!2123 = !{!2124, !2125}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2122, file: !2117, line: 110, baseType: !424, size: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2122, file: !2117, line: 112, baseType: !424, size: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2116, file: !2117, line: 144, baseType: !419, size: 32, offset: 128)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1259, file: !903, line: 1174, baseType: !417, size: 32, offset: 12160)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1259, file: !903, line: 1179, baseType: !203, size: 64, offset: 12224)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1259, file: !903, line: 1182, baseType: !2130, size: 128, offset: 12288)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1193, line: 76, size: 128, elements: !2131)
!2131 = !{!2132, !2137, !2138}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2130, file: !1193, line: 85, baseType: !2133, size: 64)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2134, line: 7, size: 64, elements: !2135)
!2134 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2135 = !{!2136}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2133, file: !2134, line: 12, baseType: !1407, size: 64)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2130, file: !1193, line: 88, baseType: !492, size: 8, offset: 64)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2130, file: !1193, line: 95, baseType: !492, size: 8, offset: 72)
!2139 = !DIDerivedType(tag: DW_TAG_member, scope: !1259, file: !903, line: 1184, baseType: !2140, size: 128, offset: 12416)
!2140 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1259, file: !903, line: 1184, size: 128, elements: !2141)
!2141 = !{!2142, !2143}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2140, file: !903, line: 1185, baseType: !1271, size: 32)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2140, file: !903, line: 1186, baseType: !367, size: 128, align: 64)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1259, file: !903, line: 1190, baseType: !901, size: 64, offset: 12544)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1259, file: !903, line: 1192, baseType: !2146, size: 128, offset: 12608)
!2146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1193, line: 64, size: 128, elements: !2147)
!2147 = !{!2148, !2149, !2150}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2146, file: !1193, line: 65, baseType: !723, size: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2146, file: !1193, line: 67, baseType: !419, size: 32, offset: 64)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2146, file: !1193, line: 68, baseType: !419, size: 32, offset: 96)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1259, file: !903, line: 1206, baseType: !166, size: 32, offset: 12736)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1259, file: !903, line: 1207, baseType: !166, size: 32, offset: 12768)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1259, file: !903, line: 1209, baseType: !203, size: 64, offset: 12800)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1259, file: !903, line: 1219, baseType: !423, size: 64, offset: 12864)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1259, file: !903, line: 1220, baseType: !423, size: 64, offset: 12928)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1259, file: !903, line: 1317, baseType: !166, size: 32, offset: 12992)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1259, file: !903, line: 1319, baseType: !1258, size: 64, offset: 13056)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1259, file: !903, line: 1322, baseType: !2159, size: 64, offset: 13120)
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 64)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2161, line: 56, size: 512, elements: !2162)
!2161 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2162 = !{!2163, !2164, !2165, !2166, !2167, !2168, !2169, !2171}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2160, file: !2161, line: 57, baseType: !2159, size: 64)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2160, file: !2161, line: 58, baseType: !161, size: 64, offset: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2160, file: !2161, line: 59, baseType: !203, size: 64, offset: 128)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2160, file: !2161, line: 60, baseType: !203, size: 64, offset: 192)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2160, file: !2161, line: 61, baseType: !822, size: 64, offset: 256)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2160, file: !2161, line: 62, baseType: !7, size: 32, offset: 320)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2160, file: !2161, line: 63, baseType: !2170, size: 64, offset: 384)
!2170 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !160, line: 153, baseType: !423)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2160, file: !2161, line: 64, baseType: !2172, size: 64, offset: 448)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 64)
!2173 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1259, file: !903, line: 1326, baseType: !1271, size: 32, offset: 13184)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1259, file: !903, line: 1342, baseType: !161, size: 64, offset: 13248)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1259, file: !903, line: 1343, baseType: !424, size: 64, offset: 13312)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1259, file: !903, line: 1344, baseType: !423, size: 64, offset: 13376)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1259, file: !903, line: 1345, baseType: !424, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1259, file: !903, line: 1346, baseType: !424, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1259, file: !903, line: 1347, baseType: !424, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1259, file: !903, line: 1348, baseType: !367, size: 128, align: 64, offset: 13504)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1259, file: !903, line: 1358, baseType: !2183, size: 34816, offset: 13824)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2184, line: 485, size: 34816, elements: !2185)
!2184 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2185 = !{!2186, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2215, !2216, !2217, !2218, !2219, !2220, !2223, !2224, !2225}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2183, file: !2184, line: 487, baseType: !2187, size: 192)
!2187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2188, size: 192, elements: !278)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2189, line: 16, size: 64, elements: !2190)
!2189 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2190 = !{!2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2188, file: !2189, line: 17, baseType: !861, size: 16)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2188, file: !2189, line: 18, baseType: !861, size: 16, offset: 16)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2188, file: !2189, line: 19, baseType: !861, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2188, file: !2189, line: 19, baseType: !861, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2188, file: !2189, line: 19, baseType: !861, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2188, file: !2189, line: 19, baseType: !861, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2188, file: !2189, line: 19, baseType: !861, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2188, file: !2189, line: 20, baseType: !861, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2188, file: !2189, line: 20, baseType: !861, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2188, file: !2189, line: 20, baseType: !861, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2188, file: !2189, line: 20, baseType: !861, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2188, file: !2189, line: 20, baseType: !861, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2188, file: !2189, line: 20, baseType: !861, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2183, file: !2184, line: 491, baseType: !203, size: 64, offset: 192)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2183, file: !2184, line: 495, baseType: !319, size: 16, offset: 256)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2183, file: !2184, line: 496, baseType: !319, size: 16, offset: 272)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2183, file: !2184, line: 497, baseType: !319, size: 16, offset: 288)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2183, file: !2184, line: 498, baseType: !319, size: 16, offset: 304)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2183, file: !2184, line: 502, baseType: !203, size: 64, offset: 320)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2183, file: !2184, line: 503, baseType: !203, size: 64, offset: 384)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2183, file: !2184, line: 514, baseType: !2212, size: 256, offset: 448)
!2212 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2213, size: 256, elements: !1197)
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 64)
!2214 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2184, line: 483, flags: DIFlagFwdDecl)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2183, file: !2184, line: 516, baseType: !203, size: 64, offset: 704)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2183, file: !2184, line: 518, baseType: !203, size: 64, offset: 768)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2183, file: !2184, line: 520, baseType: !203, size: 64, offset: 832)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2183, file: !2184, line: 521, baseType: !203, size: 64, offset: 896)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2183, file: !2184, line: 522, baseType: !203, size: 64, offset: 960)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2183, file: !2184, line: 528, baseType: !2221, size: 64, offset: 1024)
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 64)
!2222 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2184, line: 10, flags: DIFlagFwdDecl)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2183, file: !2184, line: 535, baseType: !203, size: 64, offset: 1088)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2183, file: !2184, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2183, file: !2184, line: 540, baseType: !2226, size: 33280, offset: 1536)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2227, line: 317, size: 33280, elements: !2228)
!2227 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2228 = !{!2229, !2230, !2231}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2226, file: !2227, line: 330, baseType: !7, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2226, file: !2227, line: 337, baseType: !203, size: 64, offset: 64)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2226, file: !2227, line: 348, baseType: !2232, size: 32768, offset: 512)
!2232 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2227, line: 304, size: 32768, elements: !2233)
!2233 = !{!2234, !2247, !2284, !2334, !2347}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2232, file: !2227, line: 305, baseType: !2235, size: 896)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2227, line: 12, size: 896, elements: !2236)
!2236 = !{!2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2246}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2235, file: !2227, line: 13, baseType: !417, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2235, file: !2227, line: 14, baseType: !417, size: 32, offset: 32)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2235, file: !2227, line: 15, baseType: !417, size: 32, offset: 64)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2235, file: !2227, line: 16, baseType: !417, size: 32, offset: 96)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2235, file: !2227, line: 17, baseType: !417, size: 32, offset: 128)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2235, file: !2227, line: 18, baseType: !417, size: 32, offset: 160)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2235, file: !2227, line: 19, baseType: !417, size: 32, offset: 192)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2235, file: !2227, line: 22, baseType: !2245, size: 640, offset: 224)
!2245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 640, elements: !189)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2235, file: !2227, line: 25, baseType: !417, size: 32, offset: 864)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2232, file: !2227, line: 306, baseType: !2248, size: 4096, align: 128)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2227, line: 34, size: 4096, align: 128, elements: !2249)
!2249 = !{!2250, !2251, !2252, !2253, !2254, !2269, !2270, !2271, !2273, !2275, !2279}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2248, file: !2227, line: 35, baseType: !861, size: 16)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2248, file: !2227, line: 36, baseType: !861, size: 16, offset: 16)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2248, file: !2227, line: 37, baseType: !861, size: 16, offset: 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2248, file: !2227, line: 38, baseType: !861, size: 16, offset: 48)
!2254 = !DIDerivedType(tag: DW_TAG_member, scope: !2248, file: !2227, line: 39, baseType: !2255, size: 128, offset: 64)
!2255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2248, file: !2227, line: 39, size: 128, elements: !2256)
!2256 = !{!2257, !2262}
!2257 = !DIDerivedType(tag: DW_TAG_member, scope: !2255, file: !2227, line: 40, baseType: !2258, size: 128)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2255, file: !2227, line: 40, size: 128, elements: !2259)
!2259 = !{!2260, !2261}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2258, file: !2227, line: 41, baseType: !423, size: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2258, file: !2227, line: 42, baseType: !423, size: 64, offset: 64)
!2262 = !DIDerivedType(tag: DW_TAG_member, scope: !2255, file: !2227, line: 44, baseType: !2263, size: 128)
!2263 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2255, file: !2227, line: 44, size: 128, elements: !2264)
!2264 = !{!2265, !2266, !2267, !2268}
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2263, file: !2227, line: 45, baseType: !417, size: 32)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2263, file: !2227, line: 46, baseType: !417, size: 32, offset: 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2263, file: !2227, line: 47, baseType: !417, size: 32, offset: 64)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2263, file: !2227, line: 48, baseType: !417, size: 32, offset: 96)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2248, file: !2227, line: 51, baseType: !417, size: 32, offset: 192)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2248, file: !2227, line: 52, baseType: !417, size: 32, offset: 224)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2248, file: !2227, line: 55, baseType: !2272, size: 1024, offset: 256)
!2272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 1024, elements: !193)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2248, file: !2227, line: 58, baseType: !2274, size: 2048, offset: 1280)
!2274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 2048, elements: !282)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2248, file: !2227, line: 60, baseType: !2276, size: 384, offset: 3328)
!2276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 384, elements: !2277)
!2277 = !{!2278}
!2278 = !DISubrange(count: 12)
!2279 = !DIDerivedType(tag: DW_TAG_member, scope: !2248, file: !2227, line: 62, baseType: !2280, size: 384, offset: 3712)
!2280 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2248, file: !2227, line: 62, size: 384, elements: !2281)
!2281 = !{!2282, !2283}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2280, file: !2227, line: 63, baseType: !2276, size: 384)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2280, file: !2227, line: 64, baseType: !2276, size: 384)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2232, file: !2227, line: 307, baseType: !2285, size: 1088)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2227, line: 79, size: 1088, elements: !2286)
!2286 = !{!2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2333}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2285, file: !2227, line: 80, baseType: !417, size: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2285, file: !2227, line: 81, baseType: !417, size: 32, offset: 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2285, file: !2227, line: 82, baseType: !417, size: 32, offset: 64)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2285, file: !2227, line: 83, baseType: !417, size: 32, offset: 96)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2285, file: !2227, line: 84, baseType: !417, size: 32, offset: 128)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2285, file: !2227, line: 85, baseType: !417, size: 32, offset: 160)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2285, file: !2227, line: 86, baseType: !417, size: 32, offset: 192)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2285, file: !2227, line: 88, baseType: !2245, size: 640, offset: 224)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2285, file: !2227, line: 89, baseType: !1392, size: 8, offset: 864)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2285, file: !2227, line: 90, baseType: !1392, size: 8, offset: 872)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2285, file: !2227, line: 91, baseType: !1392, size: 8, offset: 880)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2285, file: !2227, line: 92, baseType: !1392, size: 8, offset: 888)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2285, file: !2227, line: 93, baseType: !1392, size: 8, offset: 896)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2285, file: !2227, line: 94, baseType: !1392, size: 8, offset: 904)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2285, file: !2227, line: 95, baseType: !2302, size: 64, offset: 960)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 64)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2304, line: 11, size: 128, elements: !2305)
!2304 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2305 = !{!2306, !2307}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2303, file: !2304, line: 12, baseType: !312, size: 64)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2303, file: !2304, line: 13, baseType: !2308, size: 64, offset: 64)
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 64)
!2309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2310, line: 56, size: 1344, elements: !2311)
!2310 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2311 = !{!2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2309, file: !2310, line: 61, baseType: !203, size: 64)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2309, file: !2310, line: 62, baseType: !203, size: 64, offset: 64)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2309, file: !2310, line: 63, baseType: !203, size: 64, offset: 128)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2309, file: !2310, line: 64, baseType: !203, size: 64, offset: 192)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2309, file: !2310, line: 65, baseType: !203, size: 64, offset: 256)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2309, file: !2310, line: 66, baseType: !203, size: 64, offset: 320)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2309, file: !2310, line: 68, baseType: !203, size: 64, offset: 384)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2309, file: !2310, line: 69, baseType: !203, size: 64, offset: 448)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2309, file: !2310, line: 70, baseType: !203, size: 64, offset: 512)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2309, file: !2310, line: 71, baseType: !203, size: 64, offset: 576)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2309, file: !2310, line: 72, baseType: !203, size: 64, offset: 640)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2309, file: !2310, line: 73, baseType: !203, size: 64, offset: 704)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2309, file: !2310, line: 74, baseType: !203, size: 64, offset: 768)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2309, file: !2310, line: 75, baseType: !203, size: 64, offset: 832)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2309, file: !2310, line: 76, baseType: !203, size: 64, offset: 896)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2309, file: !2310, line: 81, baseType: !203, size: 64, offset: 960)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2309, file: !2310, line: 83, baseType: !203, size: 64, offset: 1024)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2309, file: !2310, line: 84, baseType: !203, size: 64, offset: 1088)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2309, file: !2310, line: 85, baseType: !203, size: 64, offset: 1152)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2309, file: !2310, line: 86, baseType: !203, size: 64, offset: 1216)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2309, file: !2310, line: 87, baseType: !203, size: 64, offset: 1280)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2285, file: !2227, line: 96, baseType: !417, size: 32, offset: 1024)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2232, file: !2227, line: 308, baseType: !2335, size: 4608, align: 512)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2227, line: 289, size: 4608, align: 512, elements: !2336)
!2336 = !{!2337, !2338, !2345}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2335, file: !2227, line: 290, baseType: !2248, size: 4096, align: 128)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2335, file: !2227, line: 291, baseType: !2339, size: 512, offset: 4096)
!2339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2227, line: 268, size: 512, elements: !2340)
!2340 = !{!2341, !2342, !2343}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2339, file: !2227, line: 269, baseType: !423, size: 64)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2339, file: !2227, line: 270, baseType: !423, size: 64, offset: 64)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2339, file: !2227, line: 271, baseType: !2344, size: 384, offset: 128)
!2344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 384, elements: !1670)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2335, file: !2227, line: 292, baseType: !2346, offset: 4608)
!2346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1392, elements: !1768)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2232, file: !2227, line: 309, baseType: !2348, size: 32768)
!2348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1392, size: 32768, elements: !2349)
!2349 = !{!2350}
!2350 = !DISubrange(count: 4096)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1255, file: !725, line: 378, baseType: !2352, size: 64, offset: 64)
!2352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1251, file: !725, line: 384, baseType: !1547, size: 192, offset: 192)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1020, file: !725, line: 500, baseType: !236, offset: 6656)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1020, file: !725, line: 501, baseType: !2356, size: 64, offset: 6656)
!2356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 64)
!2357 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !725, line: 387, flags: DIFlagFwdDecl)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1020, file: !725, line: 516, baseType: !1758, size: 64, offset: 6720)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1020, file: !725, line: 519, baseType: !354, size: 64, offset: 6784)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1020, file: !725, line: 521, baseType: !2361, size: 64, offset: 6848)
!2361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 64)
!2362 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !725, line: 521, flags: DIFlagFwdDecl)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1020, file: !725, line: 545, baseType: !749, size: 32, offset: 6912)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1020, file: !725, line: 548, baseType: !492, size: 8, offset: 6944)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1020, file: !725, line: 550, baseType: !2366, offset: 6952)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2367, line: 142, elements: !250)
!2367 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1020, file: !725, line: 554, baseType: !2004, size: 256, offset: 6976)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1020, file: !725, line: 557, baseType: !417, size: 32, offset: 7232)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1017, file: !725, line: 565, baseType: !2371, offset: 7296)
!2371 = !DICompositeType(tag: DW_TAG_array_type, baseType: !203, elements: !2372)
!2372 = !{!2373}
!2373 = !DISubrange(count: -1)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1013, file: !725, line: 151, baseType: !749, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1006, file: !725, line: 156, baseType: !236, offset: 256)
!2376 = !DIDerivedType(tag: DW_TAG_member, scope: !729, file: !725, line: 159, baseType: !2377, size: 128)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !729, file: !725, line: 159, size: 128, elements: !2378)
!2378 = !{!2379, !2443}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2377, file: !725, line: 161, baseType: !2380, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !2382)
!2382 = !{!2383, !2393, !2414, !2415, !2416, !2417, !2418, !2430, !2431, !2432}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2381, file: !31, line: 111, baseType: !2384, size: 384)
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !2385)
!2385 = !{!2386, !2388, !2389, !2390, !2391, !2392}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2384, file: !31, line: 20, baseType: !2387, size: 64)
!2387 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !203)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2384, file: !31, line: 21, baseType: !2387, size: 64, offset: 64)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2384, file: !31, line: 22, baseType: !2387, size: 64, offset: 128)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2384, file: !31, line: 23, baseType: !203, size: 64, offset: 192)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2384, file: !31, line: 24, baseType: !203, size: 64, offset: 256)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2384, file: !31, line: 25, baseType: !203, size: 64, offset: 320)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2381, file: !31, line: 112, baseType: !2394, size: 64, offset: 384)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 64)
!2395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2396, line: 105, size: 128, elements: !2397)
!2396 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2397 = !{!2398, !2399}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2395, file: !2396, line: 110, baseType: !203, size: 64)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2395, file: !2396, line: 118, baseType: !2400, size: 64, offset: 64)
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 64)
!2401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2396, line: 95, size: 448, elements: !2402)
!2402 = !{!2403, !2404, !2409, !2410, !2411, !2412, !2413}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2401, file: !2396, line: 96, baseType: !773, size: 64)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2401, file: !2396, line: 97, baseType: !2405, size: 64, offset: 64)
!2405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 64)
!2406 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2396, line: 60, baseType: !2407)
!2407 = !DISubroutineType(types: !2408)
!2408 = !{null, !2394}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2401, file: !2396, line: 98, baseType: !2405, size: 64, offset: 128)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2401, file: !2396, line: 99, baseType: !492, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2401, file: !2396, line: 100, baseType: !492, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2401, file: !2396, line: 101, baseType: !367, size: 128, align: 64, offset: 256)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2401, file: !2396, line: 102, baseType: !2394, size: 64, offset: 384)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2381, file: !31, line: 113, baseType: !2395, size: 128, offset: 448)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2381, file: !31, line: 114, baseType: !1547, size: 192, offset: 576)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2381, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2381, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2381, file: !31, line: 117, baseType: !2419, size: 64, offset: 832)
!2419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 64)
!2420 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2421)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !2422)
!2422 = !{!2423, !2424, !2428, !2429}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2421, file: !31, line: 73, baseType: !842, size: 64)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2421, file: !31, line: 78, baseType: !2425, size: 64, offset: 64)
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 64)
!2426 = !DISubroutineType(types: !2427)
!2427 = !{null, !2380}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2421, file: !31, line: 83, baseType: !2425, size: 64, offset: 128)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2421, file: !31, line: 89, baseType: !1069, size: 64, offset: 192)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2381, file: !31, line: 118, baseType: !161, size: 64, offset: 896)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2381, file: !31, line: 119, baseType: !166, size: 32, offset: 960)
!2432 = !DIDerivedType(tag: DW_TAG_member, scope: !2381, file: !31, line: 120, baseType: !2433, size: 128, offset: 1024)
!2433 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2381, file: !31, line: 120, size: 128, elements: !2434)
!2434 = !{!2435, !2441}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2433, file: !31, line: 121, baseType: !2436, size: 128)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2437, line: 6, size: 128, elements: !2438)
!2437 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2438 = !{!2439, !2440}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2436, file: !2437, line: 7, baseType: !423, size: 64)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2436, file: !2437, line: 8, baseType: !423, size: 64, offset: 64)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2433, file: !31, line: 122, baseType: !2442)
!2442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2436, elements: !1768)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2377, file: !725, line: 162, baseType: !161, size: 64, offset: 64)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !729, file: !725, line: 176, baseType: !367, size: 128, align: 64)
!2445 = !DIDerivedType(tag: DW_TAG_member, scope: !724, file: !725, line: 179, baseType: !2446, size: 32, offset: 384)
!2446 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !724, file: !725, line: 179, size: 32, elements: !2447)
!2447 = !{!2448, !2449, !2450, !2451}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2446, file: !725, line: 184, baseType: !749, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2446, file: !725, line: 192, baseType: !7, size: 32)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2446, file: !725, line: 194, baseType: !7, size: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2446, file: !725, line: 195, baseType: !166, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !724, file: !725, line: 199, baseType: !749, size: 32, offset: 416)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !659, file: !44, line: 1964, baseType: !2454, size: 64, offset: 1344)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 64)
!2455 = !DISubroutineType(types: !2456)
!2456 = !{!312, !601, !2457}
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2459, line: 12, size: 256, elements: !2460)
!2459 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2460 = !{!2461, !2462, !2463, !2464, !2465}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2458, file: !2459, line: 13, baseType: !159, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2458, file: !2459, line: 16, baseType: !166, size: 32, offset: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2458, file: !2459, line: 23, baseType: !203, size: 64, offset: 64)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2458, file: !2459, line: 30, baseType: !203, size: 64, offset: 128)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2458, file: !2459, line: 33, baseType: !2466, size: 64, offset: 192)
!2466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 64)
!2467 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !725, line: 27, flags: DIFlagFwdDecl)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !659, file: !44, line: 1966, baseType: !2454, size: 64, offset: 1408)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !602, file: !44, line: 1424, baseType: !2470, size: 64, offset: 448)
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 64)
!2471 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2472)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !2473)
!2473 = !{!2474, !2520, !2524, !2528, !2529, !2530, !2531, !2532, !2537, !2542, !2546}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2472, file: !38, line: 323, baseType: !2475, size: 64)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 64)
!2476 = !DISubroutineType(types: !2477)
!2477 = !{!166, !2478}
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 64)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !2480)
!2480 = !{!2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2505, !2506, !2507}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2479, file: !38, line: 295, baseType: !641, size: 128)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2479, file: !38, line: 296, baseType: !223, size: 128, offset: 128)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2479, file: !38, line: 297, baseType: !223, size: 128, offset: 256)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2479, file: !38, line: 298, baseType: !223, size: 128, offset: 384)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2479, file: !38, line: 299, baseType: !1215, size: 192, offset: 512)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2479, file: !38, line: 300, baseType: !236, offset: 704)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2479, file: !38, line: 301, baseType: !749, size: 32, offset: 704)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2479, file: !38, line: 302, baseType: !601, size: 64, offset: 768)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2479, file: !38, line: 303, baseType: !2490, size: 64, offset: 832)
!2490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !2491)
!2491 = !{!2492, !2504}
!2492 = !DIDerivedType(tag: DW_TAG_member, scope: !2490, file: !38, line: 69, baseType: !2493, size: 32)
!2493 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2490, file: !38, line: 69, size: 32, elements: !2494)
!2494 = !{!2495, !2496, !2497}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2493, file: !38, line: 70, baseType: !437, size: 32)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2493, file: !38, line: 71, baseType: !445, size: 32)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2493, file: !38, line: 72, baseType: !2498, size: 32)
!2498 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2499, line: 24, baseType: !2500)
!2499 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2500 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2499, line: 22, size: 32, elements: !2501)
!2501 = !{!2502}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2500, file: !2499, line: 23, baseType: !2503, size: 32)
!2503 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2499, line: 20, baseType: !443)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2490, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2479, file: !38, line: 304, baseType: !533, size: 64, offset: 896)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2479, file: !38, line: 305, baseType: !203, size: 64, offset: 960)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2479, file: !38, line: 306, baseType: !2508, size: 576, offset: 1024)
!2508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !2509)
!2509 = !{!2510, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2508, file: !38, line: 206, baseType: !2511, size: 64)
!2511 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !535)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2508, file: !38, line: 207, baseType: !2511, size: 64, offset: 64)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2508, file: !38, line: 208, baseType: !2511, size: 64, offset: 128)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2508, file: !38, line: 209, baseType: !2511, size: 64, offset: 192)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2508, file: !38, line: 210, baseType: !2511, size: 64, offset: 256)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2508, file: !38, line: 211, baseType: !2511, size: 64, offset: 320)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2508, file: !38, line: 212, baseType: !2511, size: 64, offset: 384)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2508, file: !38, line: 213, baseType: !541, size: 64, offset: 448)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2508, file: !38, line: 214, baseType: !541, size: 64, offset: 512)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2472, file: !38, line: 324, baseType: !2521, size: 64, offset: 64)
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 64)
!2522 = !DISubroutineType(types: !2523)
!2523 = !{!2478, !601, !166}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2472, file: !38, line: 325, baseType: !2525, size: 64, offset: 128)
!2525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2526, size: 64)
!2526 = !DISubroutineType(types: !2527)
!2527 = !{null, !2478}
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2472, file: !38, line: 326, baseType: !2475, size: 64, offset: 192)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2472, file: !38, line: 327, baseType: !2475, size: 64, offset: 256)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2472, file: !38, line: 328, baseType: !2475, size: 64, offset: 320)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2472, file: !38, line: 329, baseType: !687, size: 64, offset: 384)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2472, file: !38, line: 332, baseType: !2533, size: 64, offset: 448)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2534, size: 64)
!2534 = !DISubroutineType(types: !2535)
!2535 = !{!2536, !431}
!2536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 64)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2472, file: !38, line: 333, baseType: !2538, size: 64, offset: 512)
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 64)
!2539 = !DISubroutineType(types: !2540)
!2540 = !{!166, !431, !2541}
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 64)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2472, file: !38, line: 335, baseType: !2543, size: 64, offset: 576)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 64)
!2544 = !DISubroutineType(types: !2545)
!2545 = !{!166, !431, !2536}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2472, file: !38, line: 337, baseType: !2547, size: 64, offset: 640)
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2548, size: 64)
!2548 = !DISubroutineType(types: !2549)
!2549 = !{!166, !601, !2550}
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 64)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !602, file: !44, line: 1425, baseType: !2552, size: 64, offset: 512)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 64)
!2553 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2554)
!2554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !2555)
!2555 = !{!2556, !2560, !2561, !2565, !2566, !2567, !2582, !2605, !2609, !2610, !2633}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2554, file: !38, line: 429, baseType: !2557, size: 64)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 64)
!2558 = !DISubroutineType(types: !2559)
!2559 = !{!166, !601, !166, !166, !551}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2554, file: !38, line: 430, baseType: !687, size: 64, offset: 64)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2554, file: !38, line: 431, baseType: !2562, size: 64, offset: 128)
!2562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 64)
!2563 = !DISubroutineType(types: !2564)
!2564 = !{!166, !601, !7}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2554, file: !38, line: 432, baseType: !2562, size: 64, offset: 192)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2554, file: !38, line: 433, baseType: !687, size: 64, offset: 256)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2554, file: !38, line: 434, baseType: !2568, size: 64, offset: 320)
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 64)
!2569 = !DISubroutineType(types: !2570)
!2570 = !{!166, !601, !166, !2571}
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 64)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !2573)
!2573 = !{!2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2572, file: !38, line: 416, baseType: !166, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2572, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2572, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2572, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2572, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2572, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2572, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2572, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2554, file: !38, line: 435, baseType: !2583, size: 64, offset: 384)
!2583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2584, size: 64)
!2584 = !DISubroutineType(types: !2585)
!2585 = !{!166, !601, !2490, !2586}
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 64)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !2588)
!2588 = !{!2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2587, file: !38, line: 344, baseType: !166, size: 32)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2587, file: !38, line: 345, baseType: !423, size: 64, offset: 64)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2587, file: !38, line: 346, baseType: !423, size: 64, offset: 128)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2587, file: !38, line: 347, baseType: !423, size: 64, offset: 192)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2587, file: !38, line: 348, baseType: !423, size: 64, offset: 256)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2587, file: !38, line: 349, baseType: !423, size: 64, offset: 320)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2587, file: !38, line: 350, baseType: !423, size: 64, offset: 384)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2587, file: !38, line: 351, baseType: !779, size: 64, offset: 448)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2587, file: !38, line: 353, baseType: !779, size: 64, offset: 512)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2587, file: !38, line: 354, baseType: !166, size: 32, offset: 576)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2587, file: !38, line: 355, baseType: !166, size: 32, offset: 608)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2587, file: !38, line: 356, baseType: !423, size: 64, offset: 640)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2587, file: !38, line: 357, baseType: !423, size: 64, offset: 704)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2587, file: !38, line: 358, baseType: !423, size: 64, offset: 768)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2587, file: !38, line: 359, baseType: !779, size: 64, offset: 832)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2587, file: !38, line: 360, baseType: !166, size: 32, offset: 896)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2554, file: !38, line: 436, baseType: !2606, size: 64, offset: 448)
!2606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 64)
!2607 = !DISubroutineType(types: !2608)
!2608 = !{!166, !601, !2550, !2586}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2554, file: !38, line: 438, baseType: !2583, size: 64, offset: 512)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2554, file: !38, line: 439, baseType: !2611, size: 64, offset: 576)
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 64)
!2612 = !DISubroutineType(types: !2613)
!2613 = !{!166, !601, !2614}
!2614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2615, size: 64)
!2615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !2616)
!2616 = !{!2617, !2618}
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2615, file: !38, line: 410, baseType: !7, size: 32)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2615, file: !38, line: 411, baseType: !2619, size: 1344, offset: 64)
!2619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2620, size: 1344, elements: !278)
!2620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !2621)
!2621 = !{!2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2632}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2620, file: !38, line: 396, baseType: !7, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2620, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2620, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2620, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2620, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2620, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2620, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2620, file: !38, line: 404, baseType: !425, size: 64, offset: 256)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2620, file: !38, line: 405, baseType: !2631, size: 64, offset: 320)
!2631 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !160, line: 126, baseType: !423)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2620, file: !38, line: 406, baseType: !2631, size: 64, offset: 384)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2554, file: !38, line: 440, baseType: !2562, size: 64, offset: 640)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !602, file: !44, line: 1426, baseType: !2635, size: 64, offset: 576)
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 64)
!2636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2637)
!2637 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !602, file: !44, line: 1427, baseType: !203, size: 64, offset: 640)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !602, file: !44, line: 1428, baseType: !203, size: 64, offset: 704)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !602, file: !44, line: 1429, baseType: !203, size: 64, offset: 768)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !602, file: !44, line: 1430, baseType: !384, size: 64, offset: 832)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !602, file: !44, line: 1431, baseType: !769, size: 256, offset: 896)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !602, file: !44, line: 1432, baseType: !166, size: 32, offset: 1152)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !602, file: !44, line: 1433, baseType: !749, size: 32, offset: 1184)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !602, file: !44, line: 1437, baseType: !2646, size: 64, offset: 1216)
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 64)
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 64)
!2648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2649)
!2649 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !602, file: !44, line: 1449, baseType: !2651, size: 64, offset: 1280)
!2651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !400, line: 34, size: 64, elements: !2652)
!2652 = !{!2653}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2651, file: !400, line: 35, baseType: !403, size: 64)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !602, file: !44, line: 1450, baseType: !223, size: 128, offset: 1344)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !602, file: !44, line: 1451, baseType: !2656, size: 64, offset: 1472)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 64)
!2657 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !602, file: !44, line: 1452, baseType: !1970, size: 64, offset: 1536)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !602, file: !44, line: 1453, baseType: !2660, size: 64, offset: 1600)
!2660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2661, size: 64)
!2661 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !602, file: !44, line: 1454, baseType: !641, size: 128, offset: 1664)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !602, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !602, file: !44, line: 1456, baseType: !2665, size: 2432, offset: 1856)
!2665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !2666)
!2666 = !{!2667, !2668, !2669, !2671, !2703}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2665, file: !38, line: 519, baseType: !7, size: 32)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2665, file: !38, line: 520, baseType: !769, size: 256, offset: 64)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2665, file: !38, line: 521, baseType: !2670, size: 192, offset: 320)
!2670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !431, size: 192, elements: !278)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2665, file: !38, line: 522, baseType: !2672, size: 1728, offset: 512)
!2672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2673, size: 1728, elements: !278)
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !2674)
!2674 = !{!2675, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2673, file: !38, line: 223, baseType: !2676, size: 64)
!2676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 64)
!2677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !2678)
!2678 = !{!2679, !2680, !2693, !2694}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2677, file: !38, line: 444, baseType: !166, size: 32)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2677, file: !38, line: 445, baseType: !2681, size: 64, offset: 64)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2682, size: 64)
!2682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2683)
!2683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !2684)
!2684 = !{!2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2683, file: !38, line: 311, baseType: !687, size: 64)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2683, file: !38, line: 312, baseType: !687, size: 64, offset: 64)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2683, file: !38, line: 313, baseType: !687, size: 64, offset: 128)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2683, file: !38, line: 314, baseType: !687, size: 64, offset: 192)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2683, file: !38, line: 315, baseType: !2475, size: 64, offset: 256)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2683, file: !38, line: 316, baseType: !2475, size: 64, offset: 320)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2683, file: !38, line: 317, baseType: !2475, size: 64, offset: 384)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2683, file: !38, line: 318, baseType: !2547, size: 64, offset: 448)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2677, file: !38, line: 446, baseType: !177, size: 64, offset: 128)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2677, file: !38, line: 447, baseType: !2676, size: 64, offset: 192)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2673, file: !38, line: 224, baseType: !166, size: 32, offset: 64)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2673, file: !38, line: 226, baseType: !223, size: 128, offset: 128)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2673, file: !38, line: 227, baseType: !203, size: 64, offset: 256)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2673, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2673, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2673, file: !38, line: 230, baseType: !2511, size: 64, offset: 384)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2673, file: !38, line: 231, baseType: !2511, size: 64, offset: 448)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2673, file: !38, line: 232, baseType: !161, size: 64, offset: 512)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2665, file: !38, line: 523, baseType: !2704, size: 192, offset: 2240)
!2704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2681, size: 192, elements: !278)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !602, file: !44, line: 1458, baseType: !2706, size: 2112, offset: 4288)
!2706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !2707)
!2707 = !{!2708, !2709, !2710}
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2706, file: !44, line: 1411, baseType: !166, size: 32)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2706, file: !44, line: 1412, baseType: !1526, size: 128, offset: 64)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2706, file: !44, line: 1413, baseType: !2711, size: 1920, offset: 192)
!2711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2712, size: 1920, elements: !278)
!2712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2713, line: 12, size: 640, elements: !2714)
!2713 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2714 = !{!2715, !2723, !2725, !2730, !2731}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2712, file: !2713, line: 13, baseType: !2716, size: 320)
!2716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2717, line: 17, size: 320, elements: !2718)
!2717 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2718 = !{!2719, !2720, !2721, !2722}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2716, file: !2717, line: 18, baseType: !166, size: 32)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2716, file: !2717, line: 19, baseType: !166, size: 32, offset: 32)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2716, file: !2717, line: 20, baseType: !1526, size: 128, offset: 64)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2716, file: !2717, line: 22, baseType: !367, size: 128, align: 64, offset: 192)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2712, file: !2713, line: 14, baseType: !2724, size: 64, offset: 320)
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2712, file: !2713, line: 15, baseType: !2726, size: 64, offset: 384)
!2726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2727, line: 16, size: 64, elements: !2728)
!2727 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2728 = !{!2729}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2726, file: !2727, line: 17, baseType: !1258, size: 64)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2712, file: !2713, line: 16, baseType: !1526, size: 128, offset: 448)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2712, file: !2713, line: 17, baseType: !749, size: 32, offset: 576)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !602, file: !44, line: 1465, baseType: !161, size: 64, offset: 6400)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !602, file: !44, line: 1468, baseType: !417, size: 32, offset: 6464)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !602, file: !44, line: 1470, baseType: !541, size: 64, offset: 6528)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !602, file: !44, line: 1471, baseType: !541, size: 64, offset: 6592)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !602, file: !44, line: 1473, baseType: !419, size: 32, offset: 6656)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !602, file: !44, line: 1474, baseType: !2738, size: 64, offset: 6720)
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2739, size: 64)
!2739 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !602, file: !44, line: 1477, baseType: !2741, size: 256, offset: 6784)
!2741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 256, elements: !193)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !602, file: !44, line: 1478, baseType: !2743, size: 128, offset: 7040)
!2743 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2744, line: 18, baseType: !2745)
!2744 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2745 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2744, line: 16, size: 128, elements: !2746)
!2746 = !{!2747}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2745, file: !2744, line: 17, baseType: !2748, size: 128)
!2748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1393, size: 128, elements: !1780)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !602, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !602, file: !44, line: 1481, baseType: !2751, size: 32, offset: 7200)
!2751 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !160, line: 150, baseType: !7)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !602, file: !44, line: 1487, baseType: !1215, size: 192, offset: 7232)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !602, file: !44, line: 1493, baseType: !173, size: 64, offset: 7424)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !602, file: !44, line: 1495, baseType: !2755, size: 64, offset: 7488)
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 64)
!2756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2757)
!2757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !382, line: 135, size: 1024, align: 512, elements: !2758)
!2758 = !{!2759, !2763, !2764, !2771, !2777, !2781, !2785, !2789, !2790, !2794, !2798, !2803, !2807}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2757, file: !382, line: 136, baseType: !2760, size: 64)
!2760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2761, size: 64)
!2761 = !DISubroutineType(types: !2762)
!2762 = !{!166, !384, !7}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2757, file: !382, line: 137, baseType: !2760, size: 64, offset: 64)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2757, file: !382, line: 138, baseType: !2765, size: 64, offset: 128)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 64)
!2766 = !DISubroutineType(types: !2767)
!2767 = !{!166, !2768, !2770}
!2768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2769, size: 64)
!2769 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !385)
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2757, file: !382, line: 139, baseType: !2772, size: 64, offset: 192)
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 64)
!2773 = !DISubroutineType(types: !2774)
!2774 = !{!166, !2768, !7, !173, !2775}
!2775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2776, size: 64)
!2776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !408)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2757, file: !382, line: 141, baseType: !2778, size: 64, offset: 256)
!2778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2779, size: 64)
!2779 = !DISubroutineType(types: !2780)
!2780 = !{!166, !2768}
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2757, file: !382, line: 142, baseType: !2782, size: 64, offset: 320)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 64)
!2783 = !DISubroutineType(types: !2784)
!2784 = !{!166, !384}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2757, file: !382, line: 143, baseType: !2786, size: 64, offset: 384)
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 64)
!2787 = !DISubroutineType(types: !2788)
!2788 = !{null, !384}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2757, file: !382, line: 144, baseType: !2786, size: 64, offset: 448)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2757, file: !382, line: 145, baseType: !2791, size: 64, offset: 512)
!2791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2792, size: 64)
!2792 = !DISubroutineType(types: !2793)
!2793 = !{null, !384, !431}
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2757, file: !382, line: 146, baseType: !2795, size: 64, offset: 576)
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2796, size: 64)
!2796 = !DISubroutineType(types: !2797)
!2797 = !{!277, !384, !277, !166}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2757, file: !382, line: 147, baseType: !2799, size: 64, offset: 640)
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 64)
!2800 = !DISubroutineType(types: !2801)
!2801 = !{!380, !2802}
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2757, file: !382, line: 148, baseType: !2804, size: 64, offset: 704)
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 64)
!2805 = !DISubroutineType(types: !2806)
!2806 = !{!166, !551, !492}
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2757, file: !382, line: 149, baseType: !2808, size: 64, offset: 768)
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 64)
!2809 = !DISubroutineType(types: !2810)
!2810 = !{!384, !384, !2811}
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2812, size: 64)
!2812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !432)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !602, file: !44, line: 1500, baseType: !166, size: 32, offset: 7552)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !602, file: !44, line: 1502, baseType: !2815, size: 448, offset: 7616)
!2815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2459, line: 60, size: 448, elements: !2816)
!2816 = !{!2817, !2822, !2823, !2824, !2825, !2826, !2827}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2815, file: !2459, line: 61, baseType: !2818, size: 64)
!2818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2819, size: 64)
!2819 = !DISubroutineType(types: !2820)
!2820 = !{!203, !2821, !2457}
!2821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2815, size: 64)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2815, file: !2459, line: 63, baseType: !2818, size: 64, offset: 64)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2815, file: !2459, line: 66, baseType: !312, size: 64, offset: 128)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2815, file: !2459, line: 67, baseType: !166, size: 32, offset: 192)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2815, file: !2459, line: 68, baseType: !7, size: 32, offset: 224)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2815, file: !2459, line: 71, baseType: !223, size: 128, offset: 256)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2815, file: !2459, line: 77, baseType: !2828, size: 64, offset: 384)
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !602, file: !44, line: 1505, baseType: !773, size: 64, offset: 8064)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !602, file: !44, line: 1508, baseType: !773, size: 64, offset: 8128)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !602, file: !44, line: 1511, baseType: !166, size: 32, offset: 8192)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !602, file: !44, line: 1514, baseType: !951, size: 32, offset: 8224)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !602, file: !44, line: 1517, baseType: !2834, size: 64, offset: 8256)
!2834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2835, size: 64)
!2835 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2005, line: 18, flags: DIFlagFwdDecl)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !602, file: !44, line: 1518, baseType: !637, size: 64, offset: 8320)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !602, file: !44, line: 1525, baseType: !1758, size: 64, offset: 8384)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !602, file: !44, line: 1532, baseType: !2839, size: 64, offset: 8448)
!2839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2840, line: 52, size: 64, elements: !2841)
!2840 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2841 = !{!2842}
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2839, file: !2840, line: 53, baseType: !2843, size: 64)
!2843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2844, size: 64)
!2844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2840, line: 40, size: 256, elements: !2845)
!2845 = !{!2846, !2847, !2852}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2844, file: !2840, line: 42, baseType: !236)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2844, file: !2840, line: 44, baseType: !2848, size: 192)
!2848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2840, line: 28, size: 192, elements: !2849)
!2849 = !{!2850, !2851}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2848, file: !2840, line: 29, baseType: !223, size: 128)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2848, file: !2840, line: 31, baseType: !312, size: 64, offset: 128)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2844, file: !2840, line: 49, baseType: !312, size: 64, offset: 192)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !602, file: !44, line: 1533, baseType: !2839, size: 64, offset: 8512)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !602, file: !44, line: 1534, baseType: !367, size: 128, align: 64, offset: 8576)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !602, file: !44, line: 1535, baseType: !2004, size: 256, offset: 8704)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !602, file: !44, line: 1537, baseType: !1215, size: 192, offset: 8960)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !602, file: !44, line: 1542, baseType: !166, size: 32, offset: 9152)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !602, file: !44, line: 1545, baseType: !236, offset: 9184)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !602, file: !44, line: 1546, baseType: !223, size: 128, offset: 9216)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !602, file: !44, line: 1548, baseType: !236, offset: 9344)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !602, file: !44, line: 1549, baseType: !223, size: 128, offset: 9344)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !432, file: !44, line: 624, baseType: !736, size: 64, offset: 256)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !432, file: !44, line: 631, baseType: !203, size: 64, offset: 320)
!2864 = !DIDerivedType(tag: DW_TAG_member, scope: !432, file: !44, line: 639, baseType: !2865, size: 32, offset: 384)
!2865 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !432, file: !44, line: 639, size: 32, elements: !2866)
!2866 = !{!2867, !2869}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2865, file: !44, line: 640, baseType: !2868, size: 32)
!2868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2865, file: !44, line: 641, baseType: !7, size: 32)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !432, file: !44, line: 643, baseType: !515, size: 32, offset: 416)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !432, file: !44, line: 644, baseType: !533, size: 64, offset: 448)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !432, file: !44, line: 645, baseType: !537, size: 128, offset: 512)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !432, file: !44, line: 646, baseType: !537, size: 128, offset: 640)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !432, file: !44, line: 647, baseType: !537, size: 128, offset: 768)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !432, file: !44, line: 648, baseType: !236, offset: 896)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !432, file: !44, line: 649, baseType: !319, size: 16, offset: 896)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !432, file: !44, line: 650, baseType: !1392, size: 8, offset: 912)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !432, file: !44, line: 651, baseType: !1392, size: 8, offset: 920)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !432, file: !44, line: 652, baseType: !2631, size: 64, offset: 960)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !432, file: !44, line: 659, baseType: !203, size: 64, offset: 1024)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !432, file: !44, line: 660, baseType: !769, size: 256, offset: 1088)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !432, file: !44, line: 662, baseType: !203, size: 64, offset: 1344)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !432, file: !44, line: 663, baseType: !203, size: 64, offset: 1408)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !432, file: !44, line: 665, baseType: !641, size: 128, offset: 1472)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !432, file: !44, line: 666, baseType: !223, size: 128, offset: 1600)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !432, file: !44, line: 675, baseType: !223, size: 128, offset: 1728)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !432, file: !44, line: 676, baseType: !223, size: 128, offset: 1856)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !432, file: !44, line: 677, baseType: !223, size: 128, offset: 1984)
!2889 = !DIDerivedType(tag: DW_TAG_member, scope: !432, file: !44, line: 678, baseType: !2890, size: 128, offset: 2112)
!2890 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !432, file: !44, line: 678, size: 128, elements: !2891)
!2891 = !{!2892, !2893}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2890, file: !44, line: 679, baseType: !637, size: 64)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2890, file: !44, line: 680, baseType: !367, size: 128, align: 64)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !432, file: !44, line: 682, baseType: !775, size: 64, offset: 2240)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !432, file: !44, line: 683, baseType: !775, size: 64, offset: 2304)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !432, file: !44, line: 684, baseType: !749, size: 32, offset: 2368)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !432, file: !44, line: 685, baseType: !749, size: 32, offset: 2400)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !432, file: !44, line: 686, baseType: !749, size: 32, offset: 2432)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !432, file: !44, line: 688, baseType: !749, size: 32, offset: 2464)
!2900 = !DIDerivedType(tag: DW_TAG_member, scope: !432, file: !44, line: 690, baseType: !2901, size: 64, offset: 2496)
!2901 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !432, file: !44, line: 690, size: 64, elements: !2902)
!2902 = !{!2903, !3135}
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2901, file: !44, line: 691, baseType: !2904, size: 64)
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2905, size: 64)
!2905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2906)
!2906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !2907)
!2907 = !{!2908, !2909, !2913, !2918, !2922, !2923, !2924, !2928, !2941, !2942, !2959, !2963, !2964, !2968, !2969, !2973, !2978, !2979, !2983, !2987, !3095, !3099, !3100, !3104, !3105, !3109, !3113, !3118, !3122, !3126, !3130, !3134}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2906, file: !44, line: 1823, baseType: !177, size: 64)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2906, file: !44, line: 1824, baseType: !2910, size: 64, offset: 64)
!2910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2911, size: 64)
!2911 = !DISubroutineType(types: !2912)
!2912 = !{!533, !354, !533, !166}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2906, file: !44, line: 1825, baseType: !2914, size: 64, offset: 128)
!2914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2915, size: 64)
!2915 = !DISubroutineType(types: !2916)
!2916 = !{!308, !354, !277, !324, !2917}
!2917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 64)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2906, file: !44, line: 1826, baseType: !2919, size: 64, offset: 192)
!2919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2920, size: 64)
!2920 = !DISubroutineType(types: !2921)
!2921 = !{!308, !354, !173, !324, !2917}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2906, file: !44, line: 1827, baseType: !846, size: 64, offset: 256)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2906, file: !44, line: 1828, baseType: !846, size: 64, offset: 320)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2906, file: !44, line: 1829, baseType: !2925, size: 64, offset: 384)
!2925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2926, size: 64)
!2926 = !DISubroutineType(types: !2927)
!2927 = !{!166, !849, !492}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2906, file: !44, line: 1830, baseType: !2929, size: 64, offset: 448)
!2929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2930, size: 64)
!2930 = !DISubroutineType(types: !2931)
!2931 = !{!166, !354, !2932}
!2932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2933, size: 64)
!2933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !2934)
!2934 = !{!2935, !2940}
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2933, file: !44, line: 1777, baseType: !2936, size: 64)
!2936 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !2937)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 64)
!2938 = !DISubroutineType(types: !2939)
!2939 = !{!166, !2932, !173, !166, !533, !423, !7}
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2933, file: !44, line: 1778, baseType: !533, size: 64, offset: 64)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2906, file: !44, line: 1831, baseType: !2929, size: 64, offset: 512)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2906, file: !44, line: 1832, baseType: !2943, size: 64, offset: 576)
!2943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2944, size: 64)
!2944 = !DISubroutineType(types: !2945)
!2945 = !{!2946, !354, !2948}
!2946 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2947, line: 52, baseType: !7)
!2947 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2949, size: 64)
!2949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !2950, line: 43, size: 128, elements: !2951)
!2950 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!2951 = !{!2952, !2958}
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !2949, file: !2950, line: 44, baseType: !2953, size: 64)
!2953 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !2950, line: 37, baseType: !2954)
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 64)
!2955 = !DISubroutineType(types: !2956)
!2956 = !{null, !354, !2957, !2948}
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !2949, file: !2950, line: 45, baseType: !2946, size: 32, offset: 64)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2906, file: !44, line: 1833, baseType: !2960, size: 64, offset: 640)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!2961 = !DISubroutineType(types: !2962)
!2962 = !{!312, !354, !7, !203}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2906, file: !44, line: 1834, baseType: !2960, size: 64, offset: 704)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2906, file: !44, line: 1835, baseType: !2965, size: 64, offset: 768)
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2966, size: 64)
!2966 = !DISubroutineType(types: !2967)
!2967 = !{!166, !354, !1023}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2906, file: !44, line: 1836, baseType: !203, size: 64, offset: 832)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2906, file: !44, line: 1837, baseType: !2970, size: 64, offset: 896)
!2970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2971, size: 64)
!2971 = !DISubroutineType(types: !2972)
!2972 = !{!166, !431, !354}
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2906, file: !44, line: 1838, baseType: !2974, size: 64, offset: 960)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 64)
!2975 = !DISubroutineType(types: !2976)
!2976 = !{!166, !354, !2977}
!2977 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !161)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2906, file: !44, line: 1839, baseType: !2970, size: 64, offset: 1024)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2906, file: !44, line: 1840, baseType: !2980, size: 64, offset: 1088)
!2980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2981, size: 64)
!2981 = !DISubroutineType(types: !2982)
!2982 = !{!166, !354, !533, !533, !166}
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2906, file: !44, line: 1841, baseType: !2984, size: 64, offset: 1152)
!2984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2985, size: 64)
!2985 = !DISubroutineType(types: !2986)
!2986 = !{!166, !166, !354, !166}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2906, file: !44, line: 1842, baseType: !2988, size: 64, offset: 1216)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 64)
!2989 = !DISubroutineType(types: !2990)
!2990 = !{!166, !354, !166, !2991}
!2991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2992, size: 64)
!2992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !2993)
!2993 = !{!2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3025, !3026, !3027, !3040, !3071}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !2992, file: !44, line: 1063, baseType: !2991, size: 64)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !2992, file: !44, line: 1064, baseType: !223, size: 128, offset: 64)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !2992, file: !44, line: 1065, baseType: !641, size: 128, offset: 192)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !2992, file: !44, line: 1066, baseType: !223, size: 128, offset: 320)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !2992, file: !44, line: 1069, baseType: !223, size: 128, offset: 448)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !2992, file: !44, line: 1072, baseType: !2977, size: 64, offset: 576)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !2992, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !2992, file: !44, line: 1074, baseType: !429, size: 8, offset: 672)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !2992, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !2992, file: !44, line: 1076, baseType: !166, size: 32, offset: 736)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !2992, file: !44, line: 1077, baseType: !1526, size: 128, offset: 768)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !2992, file: !44, line: 1078, baseType: !354, size: 64, offset: 896)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !2992, file: !44, line: 1079, baseType: !533, size: 64, offset: 960)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !2992, file: !44, line: 1080, baseType: !533, size: 64, offset: 1024)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !2992, file: !44, line: 1082, baseType: !3009, size: 64, offset: 1088)
!3009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3010, size: 64)
!3010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !3011)
!3011 = !{!3012, !3020, !3021, !3022, !3023, !3024}
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3010, file: !44, line: 1315, baseType: !3013)
!3013 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3014, line: 20, baseType: !3015)
!3014 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3015 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3014, line: 11, elements: !3016)
!3016 = !{!3017}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3015, file: !3014, line: 12, baseType: !3018)
!3018 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !248, line: 33, baseType: !3019)
!3019 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !248, line: 31, elements: !250)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3010, file: !44, line: 1316, baseType: !166, size: 32)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3010, file: !44, line: 1317, baseType: !166, size: 32, offset: 32)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3010, file: !44, line: 1318, baseType: !3009, size: 64, offset: 64)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3010, file: !44, line: 1319, baseType: !354, size: 64, offset: 128)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3010, file: !44, line: 1320, baseType: !367, size: 128, align: 64, offset: 192)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !2992, file: !44, line: 1084, baseType: !203, size: 64, offset: 1152)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !2992, file: !44, line: 1085, baseType: !203, size: 64, offset: 1216)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !2992, file: !44, line: 1087, baseType: !3028, size: 64, offset: 1280)
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3030)
!3030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !3031)
!3031 = !{!3032, !3036}
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3030, file: !44, line: 1012, baseType: !3033, size: 64)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 64)
!3034 = !DISubroutineType(types: !3035)
!3035 = !{null, !2991, !2991}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3030, file: !44, line: 1013, baseType: !3037, size: 64, offset: 64)
!3037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3038, size: 64)
!3038 = !DISubroutineType(types: !3039)
!3039 = !{null, !2991}
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !2992, file: !44, line: 1088, baseType: !3041, size: 64, offset: 1344)
!3041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3042, size: 64)
!3042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3043)
!3043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !3044)
!3044 = !{!3045, !3049, !3053, !3054, !3058, !3062, !3066, !3070}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3043, file: !44, line: 1017, baseType: !3046, size: 64)
!3046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3047, size: 64)
!3047 = !DISubroutineType(types: !3048)
!3048 = !{!2977, !2977}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3043, file: !44, line: 1018, baseType: !3050, size: 64, offset: 64)
!3050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3051, size: 64)
!3051 = !DISubroutineType(types: !3052)
!3052 = !{null, !2977}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3043, file: !44, line: 1019, baseType: !3037, size: 64, offset: 128)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3043, file: !44, line: 1020, baseType: !3055, size: 64, offset: 192)
!3055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3056, size: 64)
!3056 = !DISubroutineType(types: !3057)
!3057 = !{!166, !2991, !166}
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3043, file: !44, line: 1021, baseType: !3059, size: 64, offset: 256)
!3059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3060, size: 64)
!3060 = !DISubroutineType(types: !3061)
!3061 = !{!492, !2991}
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3043, file: !44, line: 1022, baseType: !3063, size: 64, offset: 320)
!3063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 64)
!3064 = !DISubroutineType(types: !3065)
!3065 = !{!166, !2991, !166, !226}
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3043, file: !44, line: 1023, baseType: !3067, size: 64, offset: 384)
!3067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3068, size: 64)
!3068 = !DISubroutineType(types: !3069)
!3069 = !{null, !2991, !823}
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3043, file: !44, line: 1024, baseType: !3059, size: 64, offset: 448)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !2992, file: !44, line: 1097, baseType: !3072, size: 256, offset: 1408)
!3072 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2992, file: !44, line: 1089, size: 256, elements: !3073)
!3073 = !{!3074, !3083, !3089}
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3072, file: !44, line: 1090, baseType: !3075, size: 256)
!3075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3076, line: 10, size: 256, elements: !3077)
!3076 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3077 = !{!3078, !3079, !3082}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3075, file: !3076, line: 11, baseType: !417, size: 32)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3075, file: !3076, line: 12, baseType: !3080, size: 64, offset: 64)
!3080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3081, size: 64)
!3081 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3076, line: 5, flags: DIFlagFwdDecl)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3075, file: !3076, line: 13, baseType: !223, size: 128, offset: 128)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3072, file: !44, line: 1091, baseType: !3084, size: 64)
!3084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3076, line: 17, size: 64, elements: !3085)
!3085 = !{!3086}
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3084, file: !3076, line: 18, baseType: !3087, size: 64)
!3087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3088, size: 64)
!3088 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3076, line: 16, flags: DIFlagFwdDecl)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3072, file: !44, line: 1096, baseType: !3090, size: 192)
!3090 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3072, file: !44, line: 1092, size: 192, elements: !3091)
!3091 = !{!3092, !3093, !3094}
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3090, file: !44, line: 1093, baseType: !223, size: 128)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3090, file: !44, line: 1094, baseType: !166, size: 32, offset: 128)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3090, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2906, file: !44, line: 1843, baseType: !3096, size: 64, offset: 1280)
!3096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3097, size: 64)
!3097 = !DISubroutineType(types: !3098)
!3098 = !{!308, !354, !723, !166, !324, !2917, !166}
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2906, file: !44, line: 1844, baseType: !1143, size: 64, offset: 1344)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2906, file: !44, line: 1845, baseType: !3101, size: 64, offset: 1408)
!3101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3102, size: 64)
!3102 = !DISubroutineType(types: !3103)
!3103 = !{!166, !166}
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2906, file: !44, line: 1846, baseType: !2988, size: 64, offset: 1472)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2906, file: !44, line: 1847, baseType: !3106, size: 64, offset: 1536)
!3106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3107, size: 64)
!3107 = !DISubroutineType(types: !3108)
!3108 = !{!308, !901, !354, !2917, !324, !7}
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2906, file: !44, line: 1848, baseType: !3110, size: 64, offset: 1600)
!3110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3111, size: 64)
!3111 = !DISubroutineType(types: !3112)
!3112 = !{!308, !354, !2917, !901, !324, !7}
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2906, file: !44, line: 1849, baseType: !3114, size: 64, offset: 1664)
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3115, size: 64)
!3115 = !DISubroutineType(types: !3116)
!3116 = !{!166, !354, !312, !3117, !823}
!3117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 64)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2906, file: !44, line: 1850, baseType: !3119, size: 64, offset: 1728)
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3120, size: 64)
!3120 = !DISubroutineType(types: !3121)
!3121 = !{!312, !354, !166, !533, !533}
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2906, file: !44, line: 1852, baseType: !3123, size: 64, offset: 1792)
!3123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3124, size: 64)
!3124 = !DISubroutineType(types: !3125)
!3125 = !{null, !713, !354}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2906, file: !44, line: 1856, baseType: !3127, size: 64, offset: 1856)
!3127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3128, size: 64)
!3128 = !DISubroutineType(types: !3129)
!3129 = !{!308, !354, !533, !354, !533, !324, !7}
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2906, file: !44, line: 1858, baseType: !3131, size: 64, offset: 1920)
!3131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3132, size: 64)
!3132 = !DISubroutineType(types: !3133)
!3133 = !{!533, !354, !533, !354, !533, !533, !7}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2906, file: !44, line: 1861, baseType: !2980, size: 64, offset: 1984)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2901, file: !44, line: 692, baseType: !666, size: 64)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !432, file: !44, line: 694, baseType: !3137, size: 64, offset: 2560)
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3138, size: 64)
!3138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !3139)
!3139 = !{!3140, !3141, !3142, !3143}
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3138, file: !44, line: 1101, baseType: !236)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3138, file: !44, line: 1102, baseType: !223, size: 128)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3138, file: !44, line: 1103, baseType: !223, size: 128, offset: 128)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3138, file: !44, line: 1104, baseType: !223, size: 128, offset: 256)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !432, file: !44, line: 695, baseType: !737, size: 1216, align: 64, offset: 2624)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !432, file: !44, line: 696, baseType: !223, size: 128, offset: 3840)
!3146 = !DIDerivedType(tag: DW_TAG_member, scope: !432, file: !44, line: 697, baseType: !3147, size: 64, offset: 3968)
!3147 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !432, file: !44, line: 697, size: 64, elements: !3148)
!3148 = !{!3149, !3150, !3151, !3162, !3163}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3147, file: !44, line: 698, baseType: !901, size: 64)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3147, file: !44, line: 699, baseType: !2656, size: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3147, file: !44, line: 700, baseType: !3152, size: 64)
!3152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3153, size: 64)
!3153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !3154, line: 14, size: 832, elements: !3155)
!3154 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!3155 = !{!3156, !3157, !3158, !3159, !3160, !3161}
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3153, file: !3154, line: 15, baseType: !218, size: 512)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3153, file: !3154, line: 16, baseType: !177, size: 64, offset: 512)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3153, file: !3154, line: 17, baseType: !2904, size: 64, offset: 576)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3153, file: !3154, line: 18, baseType: !223, size: 128, offset: 640)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3153, file: !3154, line: 19, baseType: !515, size: 32, offset: 768)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3153, file: !3154, line: 20, baseType: !7, size: 32, offset: 800)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3147, file: !44, line: 701, baseType: !277, size: 64)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3147, file: !44, line: 702, baseType: !7, size: 32)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !432, file: !44, line: 705, baseType: !419, size: 32, offset: 4032)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !432, file: !44, line: 708, baseType: !419, size: 32, offset: 4064)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !432, file: !44, line: 709, baseType: !2738, size: 64, offset: 4096)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !432, file: !44, line: 720, baseType: !161, size: 64, offset: 4160)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !385, file: !382, line: 98, baseType: !3169, size: 256, offset: 448)
!3169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 256, elements: !193)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !385, file: !382, line: 101, baseType: !3171, size: 32, offset: 704)
!3171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3172, line: 25, size: 32, elements: !3173)
!3172 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3173 = !{!3174}
!3174 = !DIDerivedType(tag: DW_TAG_member, scope: !3171, file: !3172, line: 26, baseType: !3175, size: 32)
!3175 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3171, file: !3172, line: 26, size: 32, elements: !3176)
!3176 = !{!3177}
!3177 = !DIDerivedType(tag: DW_TAG_member, scope: !3175, file: !3172, line: 30, baseType: !3178, size: 32)
!3178 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3175, file: !3172, line: 30, size: 32, elements: !3179)
!3179 = !{!3180, !3181}
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3178, file: !3172, line: 31, baseType: !236)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3178, file: !3172, line: 32, baseType: !166, size: 32)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !385, file: !382, line: 102, baseType: !2755, size: 64, offset: 768)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !385, file: !382, line: 103, baseType: !601, size: 64, offset: 832)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !385, file: !382, line: 104, baseType: !203, size: 64, offset: 896)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !385, file: !382, line: 105, baseType: !161, size: 64, offset: 960)
!3186 = !DIDerivedType(tag: DW_TAG_member, scope: !385, file: !382, line: 107, baseType: !3187, size: 128, offset: 1024)
!3187 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !385, file: !382, line: 107, size: 128, elements: !3188)
!3188 = !{!3189, !3190}
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3187, file: !382, line: 108, baseType: !223, size: 128)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3187, file: !382, line: 109, baseType: !2957, size: 64)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !385, file: !382, line: 111, baseType: !223, size: 128, offset: 1152)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !385, file: !382, line: 112, baseType: !223, size: 128, offset: 1280)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !385, file: !382, line: 120, baseType: !3194, size: 128, offset: 1408)
!3194 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !385, file: !382, line: 116, size: 128, elements: !3195)
!3195 = !{!3196, !3197, !3198}
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3194, file: !382, line: 117, baseType: !641, size: 128)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3194, file: !382, line: 118, baseType: !399, size: 128)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3194, file: !382, line: 119, baseType: !367, size: 128, align: 64)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !355, file: !44, line: 922, baseType: !431, size: 64, offset: 256)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !355, file: !44, line: 923, baseType: !2904, size: 64, offset: 320)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !355, file: !44, line: 929, baseType: !236, offset: 384)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !355, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !355, file: !44, line: 931, baseType: !773, size: 64, offset: 448)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !355, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !355, file: !44, line: 933, baseType: !2751, size: 32, offset: 544)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !355, file: !44, line: 934, baseType: !1215, size: 192, offset: 576)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !355, file: !44, line: 935, baseType: !533, size: 64, offset: 768)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !355, file: !44, line: 936, baseType: !3209, size: 192, offset: 832)
!3209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !3210)
!3210 = !{!3211, !3212, !3213, !3214, !3215, !3216}
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3209, file: !44, line: 886, baseType: !3013)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3209, file: !44, line: 887, baseType: !1516, size: 64)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3209, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3209, file: !44, line: 889, baseType: !437, size: 32, offset: 96)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3209, file: !44, line: 889, baseType: !437, size: 32, offset: 128)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3209, file: !44, line: 890, baseType: !166, size: 32, offset: 160)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !355, file: !44, line: 937, baseType: !1592, size: 64, offset: 1024)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !355, file: !44, line: 938, baseType: !3219, size: 256, offset: 1088)
!3219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !3220)
!3220 = !{!3221, !3222, !3223, !3224, !3225, !3226}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3219, file: !44, line: 897, baseType: !203, size: 64)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3219, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3219, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3219, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3219, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3219, file: !44, line: 904, baseType: !533, size: 64, offset: 192)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !355, file: !44, line: 940, baseType: !423, size: 64, offset: 1344)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !355, file: !44, line: 945, baseType: !161, size: 64, offset: 1408)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !355, file: !44, line: 949, baseType: !223, size: 128, offset: 1472)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !355, file: !44, line: 950, baseType: !223, size: 128, offset: 1600)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !355, file: !44, line: 952, baseType: !736, size: 64, offset: 1728)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !355, file: !44, line: 953, baseType: !951, size: 32, offset: 1792)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !355, file: !44, line: 954, baseType: !951, size: 32, offset: 1824)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !345, file: !302, line: 174, baseType: !351, size: 64, offset: 320)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !345, file: !302, line: 176, baseType: !3236, size: 64, offset: 384)
!3236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3237, size: 64)
!3237 = !DISubroutineType(types: !3238)
!3238 = !{!166, !354, !229, !344, !1023}
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !333, file: !302, line: 90, baseType: !328, size: 64, offset: 192)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !333, file: !302, line: 91, baseType: !3241, size: 64, offset: 256)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !292, file: !219, line: 143, baseType: !3243, size: 64, offset: 256)
!3243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3244, size: 64)
!3244 = !DISubroutineType(types: !3245)
!3245 = !{!3246, !229}
!3246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3247, size: 64)
!3247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3248)
!3248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3249)
!3249 = !{!3250, !3251, !3255, !3259, !3265, !3269}
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3248, file: !61, line: 40, baseType: !60, size: 32)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3248, file: !61, line: 41, baseType: !3252, size: 64, offset: 64)
!3252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3253, size: 64)
!3253 = !DISubroutineType(types: !3254)
!3254 = !{!492}
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3248, file: !61, line: 42, baseType: !3256, size: 64, offset: 128)
!3256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3257, size: 64)
!3257 = !DISubroutineType(types: !3258)
!3258 = !{!161}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3248, file: !61, line: 43, baseType: !3260, size: 64, offset: 192)
!3260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3261, size: 64)
!3261 = !DISubroutineType(types: !3262)
!3262 = !{!2172, !3263}
!3263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3264, size: 64)
!3264 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3248, file: !61, line: 44, baseType: !3266, size: 64, offset: 256)
!3266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3267, size: 64)
!3267 = !DISubroutineType(types: !3268)
!3268 = !{!2172}
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3248, file: !61, line: 45, baseType: !470, size: 64, offset: 320)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !292, file: !219, line: 144, baseType: !3271, size: 64, offset: 320)
!3271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3272, size: 64)
!3272 = !DISubroutineType(types: !3273)
!3273 = !{!2172, !229}
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !292, file: !219, line: 145, baseType: !3275, size: 64, offset: 384)
!3275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3276, size: 64)
!3276 = !DISubroutineType(types: !3277)
!3277 = !{null, !229, !3278, !3279}
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !218, file: !219, line: 70, baseType: !3281, size: 64, offset: 384)
!3281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3282, size: 64)
!3282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !621, line: 123, size: 1024, elements: !3283)
!3283 = !{!3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3412, !3413, !3414, !3415, !3416}
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3282, file: !621, line: 124, baseType: !749, size: 32)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3282, file: !621, line: 125, baseType: !749, size: 32, offset: 32)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3282, file: !621, line: 135, baseType: !3281, size: 64, offset: 64)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3282, file: !621, line: 136, baseType: !173, size: 64, offset: 128)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3282, file: !621, line: 138, baseType: !762, size: 192, align: 64, offset: 192)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3282, file: !621, line: 140, baseType: !2172, size: 64, offset: 384)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3282, file: !621, line: 141, baseType: !7, size: 32, offset: 448)
!3291 = !DIDerivedType(tag: DW_TAG_member, scope: !3282, file: !621, line: 142, baseType: !3292, size: 256, offset: 512)
!3292 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3282, file: !621, line: 142, size: 256, elements: !3293)
!3293 = !{!3294, !3340, !3344}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3292, file: !621, line: 143, baseType: !3295, size: 192)
!3295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !621, line: 91, size: 192, elements: !3296)
!3296 = !{!3297, !3298, !3299}
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3295, file: !621, line: 92, baseType: !203, size: 64)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3295, file: !621, line: 94, baseType: !758, size: 64, offset: 64)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3295, file: !621, line: 100, baseType: !3300, size: 64, offset: 128)
!3300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3301, size: 64)
!3301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !621, line: 180, size: 704, elements: !3302)
!3302 = !{!3303, !3304, !3305, !3312, !3313, !3314, !3338, !3339}
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3301, file: !621, line: 182, baseType: !3281, size: 64)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3301, file: !621, line: 183, baseType: !7, size: 32, offset: 64)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3301, file: !621, line: 186, baseType: !3306, size: 192, offset: 128)
!3306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3307, line: 19, size: 192, elements: !3308)
!3307 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3308 = !{!3309, !3310, !3311}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3306, file: !3307, line: 20, baseType: !741, size: 128)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3306, file: !3307, line: 21, baseType: !7, size: 32, offset: 128)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3306, file: !3307, line: 22, baseType: !7, size: 32, offset: 160)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3301, file: !621, line: 187, baseType: !417, size: 32, offset: 320)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3301, file: !621, line: 188, baseType: !417, size: 32, offset: 352)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3301, file: !621, line: 189, baseType: !3315, size: 64, offset: 384)
!3315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3316, size: 64)
!3316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !621, line: 168, size: 320, elements: !3317)
!3317 = !{!3318, !3322, !3326, !3330, !3334}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3316, file: !621, line: 169, baseType: !3319, size: 64)
!3319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3320, size: 64)
!3320 = !DISubroutineType(types: !3321)
!3321 = !{!166, !713, !3300}
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3316, file: !621, line: 171, baseType: !3323, size: 64, offset: 64)
!3323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3324, size: 64)
!3324 = !DISubroutineType(types: !3325)
!3325 = !{!166, !3281, !173, !318}
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3316, file: !621, line: 173, baseType: !3327, size: 64, offset: 128)
!3327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3328, size: 64)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{!166, !3281}
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3316, file: !621, line: 174, baseType: !3331, size: 64, offset: 192)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3332, size: 64)
!3332 = !DISubroutineType(types: !3333)
!3333 = !{!166, !3281, !3281, !173}
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3316, file: !621, line: 176, baseType: !3335, size: 64, offset: 256)
!3335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 64)
!3336 = !DISubroutineType(types: !3337)
!3337 = !{!166, !713, !3281, !3300}
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3301, file: !621, line: 192, baseType: !223, size: 128, offset: 448)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3301, file: !621, line: 194, baseType: !1526, size: 128, offset: 576)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3292, file: !621, line: 144, baseType: !3341, size: 64)
!3341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !621, line: 103, size: 64, elements: !3342)
!3342 = !{!3343}
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3341, file: !621, line: 104, baseType: !3281, size: 64)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3292, file: !621, line: 145, baseType: !3345, size: 256)
!3345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !621, line: 107, size: 256, elements: !3346)
!3346 = !{!3347, !3407, !3410, !3411}
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3345, file: !621, line: 108, baseType: !3348, size: 64)
!3348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3349, size: 64)
!3349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3350)
!3350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !621, line: 217, size: 768, elements: !3351)
!3351 = !{!3352, !3372, !3376, !3380, !3384, !3388, !3392, !3396, !3397, !3398, !3399, !3403}
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3350, file: !621, line: 222, baseType: !3353, size: 64)
!3353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3354, size: 64)
!3354 = !DISubroutineType(types: !3355)
!3355 = !{!166, !3356}
!3356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3357, size: 64)
!3357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !621, line: 197, size: 1088, elements: !3358)
!3358 = !{!3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371}
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3357, file: !621, line: 199, baseType: !3281, size: 64)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3357, file: !621, line: 200, baseType: !354, size: 64, offset: 64)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3357, file: !621, line: 201, baseType: !713, size: 64, offset: 128)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3357, file: !621, line: 202, baseType: !161, size: 64, offset: 192)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3357, file: !621, line: 205, baseType: !1215, size: 192, offset: 256)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3357, file: !621, line: 206, baseType: !1215, size: 192, offset: 448)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3357, file: !621, line: 207, baseType: !166, size: 32, offset: 640)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3357, file: !621, line: 208, baseType: !223, size: 128, offset: 704)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3357, file: !621, line: 209, baseType: !277, size: 64, offset: 832)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3357, file: !621, line: 211, baseType: !324, size: 64, offset: 896)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3357, file: !621, line: 212, baseType: !492, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3357, file: !621, line: 213, baseType: !492, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3357, file: !621, line: 214, baseType: !1051, size: 64, offset: 1024)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3350, file: !621, line: 223, baseType: !3373, size: 64, offset: 64)
!3373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3374, size: 64)
!3374 = !DISubroutineType(types: !3375)
!3375 = !{null, !3356}
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3350, file: !621, line: 236, baseType: !3377, size: 64, offset: 128)
!3377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3378, size: 64)
!3378 = !DISubroutineType(types: !3379)
!3379 = !{!166, !713, !161}
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3350, file: !621, line: 238, baseType: !3381, size: 64, offset: 192)
!3381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3382, size: 64)
!3382 = !DISubroutineType(types: !3383)
!3383 = !{!161, !713, !2917}
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3350, file: !621, line: 239, baseType: !3385, size: 64, offset: 256)
!3385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3386, size: 64)
!3386 = !DISubroutineType(types: !3387)
!3387 = !{!161, !713, !161, !2917}
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3350, file: !621, line: 240, baseType: !3389, size: 64, offset: 320)
!3389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3390, size: 64)
!3390 = !DISubroutineType(types: !3391)
!3391 = !{null, !713, !161}
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3350, file: !621, line: 242, baseType: !3393, size: 64, offset: 384)
!3393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3394, size: 64)
!3394 = !DISubroutineType(types: !3395)
!3395 = !{!308, !3356, !277, !324, !533}
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3350, file: !621, line: 252, baseType: !324, size: 64, offset: 448)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3350, file: !621, line: 259, baseType: !492, size: 8, offset: 512)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3350, file: !621, line: 260, baseType: !3393, size: 64, offset: 576)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3350, file: !621, line: 263, baseType: !3400, size: 64, offset: 640)
!3400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3401, size: 64)
!3401 = !DISubroutineType(types: !3402)
!3402 = !{!2946, !3356, !2948}
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3350, file: !621, line: 266, baseType: !3404, size: 64, offset: 704)
!3404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3405, size: 64)
!3405 = !DISubroutineType(types: !3406)
!3406 = !{!166, !3356, !1023}
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3345, file: !621, line: 109, baseType: !3408, size: 64, offset: 64)
!3408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3409, size: 64)
!3409 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !621, line: 31, flags: DIFlagFwdDecl)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3345, file: !621, line: 110, baseType: !533, size: 64, offset: 128)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3345, file: !621, line: 111, baseType: !3281, size: 64, offset: 192)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3282, file: !621, line: 148, baseType: !161, size: 64, offset: 768)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3282, file: !621, line: 154, baseType: !423, size: 64, offset: 832)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3282, file: !621, line: 156, baseType: !319, size: 16, offset: 896)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3282, file: !621, line: 157, baseType: !318, size: 16, offset: 912)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3282, file: !621, line: 158, baseType: !3417, size: 64, offset: 960)
!3417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3418, size: 64)
!3418 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !621, line: 32, flags: DIFlagFwdDecl)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !218, file: !219, line: 71, baseType: !3420, size: 32, offset: 448)
!3420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3421, line: 19, size: 32, elements: !3422)
!3421 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3422 = !{!3423}
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3420, file: !3421, line: 20, baseType: !1271, size: 32)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !218, file: !219, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !218, file: !219, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !218, file: !219, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !218, file: !219, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !218, file: !219, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !215, file: !73, line: 463, baseType: !214, size: 64, offset: 512)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !215, file: !73, line: 465, baseType: !3431, size: 64, offset: 576)
!3431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3432, size: 64)
!3432 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !215, file: !73, line: 467, baseType: !173, size: 64, offset: 640)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !215, file: !73, line: 468, baseType: !3435, size: 64, offset: 704)
!3435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3436, size: 64)
!3436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3437)
!3437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3438)
!3438 = !{!3439, !3440, !3441, !3445, !3450, !3454}
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3437, file: !73, line: 88, baseType: !173, size: 64)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3437, file: !73, line: 89, baseType: !330, size: 64, offset: 64)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3437, file: !73, line: 90, baseType: !3442, size: 64, offset: 128)
!3442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3443, size: 64)
!3443 = !DISubroutineType(types: !3444)
!3444 = !{!166, !214, !272}
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3437, file: !73, line: 91, baseType: !3446, size: 64, offset: 192)
!3446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3447, size: 64)
!3447 = !DISubroutineType(types: !3448)
!3448 = !{!277, !214, !3449, !3278, !3279}
!3449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3437, file: !73, line: 93, baseType: !3451, size: 64, offset: 256)
!3451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3452, size: 64)
!3452 = !DISubroutineType(types: !3453)
!3453 = !{null, !214}
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3437, file: !73, line: 95, baseType: !3455, size: 64, offset: 320)
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3456, size: 64)
!3456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3457)
!3457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3458)
!3458 = !{!3459, !3463, !3464, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3484}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3457, file: !80, line: 279, baseType: !3460, size: 64)
!3460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3461 = !DISubroutineType(types: !3462)
!3462 = !{!166, !214}
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3457, file: !80, line: 280, baseType: !3451, size: 64, offset: 64)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3457, file: !80, line: 281, baseType: !3460, size: 64, offset: 128)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3457, file: !80, line: 282, baseType: !3460, size: 64, offset: 192)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3457, file: !80, line: 283, baseType: !3460, size: 64, offset: 256)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3457, file: !80, line: 284, baseType: !3460, size: 64, offset: 320)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3457, file: !80, line: 285, baseType: !3460, size: 64, offset: 384)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3457, file: !80, line: 286, baseType: !3460, size: 64, offset: 448)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3457, file: !80, line: 287, baseType: !3460, size: 64, offset: 512)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3457, file: !80, line: 288, baseType: !3460, size: 64, offset: 576)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3457, file: !80, line: 289, baseType: !3460, size: 64, offset: 640)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3457, file: !80, line: 290, baseType: !3460, size: 64, offset: 704)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3457, file: !80, line: 291, baseType: !3460, size: 64, offset: 768)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3457, file: !80, line: 292, baseType: !3460, size: 64, offset: 832)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3457, file: !80, line: 293, baseType: !3460, size: 64, offset: 896)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3457, file: !80, line: 294, baseType: !3460, size: 64, offset: 960)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3457, file: !80, line: 295, baseType: !3460, size: 64, offset: 1024)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3457, file: !80, line: 296, baseType: !3460, size: 64, offset: 1088)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3457, file: !80, line: 297, baseType: !3460, size: 64, offset: 1152)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3457, file: !80, line: 298, baseType: !3460, size: 64, offset: 1216)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3457, file: !80, line: 299, baseType: !3460, size: 64, offset: 1280)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3457, file: !80, line: 300, baseType: !3460, size: 64, offset: 1344)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3457, file: !80, line: 301, baseType: !3460, size: 64, offset: 1408)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !215, file: !73, line: 470, baseType: !3486, size: 64, offset: 768)
!3486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3487, size: 64)
!3487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3488, line: 82, size: 1408, elements: !3489)
!3488 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3489 = !{!3490, !3491, !3492, !3493, !3494, !3495, !3496, !3537, !3538, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3553, !3556, !3557}
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3487, file: !3488, line: 83, baseType: !173, size: 64)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3487, file: !3488, line: 84, baseType: !173, size: 64, offset: 64)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3487, file: !3488, line: 85, baseType: !214, size: 64, offset: 128)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3487, file: !3488, line: 86, baseType: !330, size: 64, offset: 192)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3487, file: !3488, line: 87, baseType: !330, size: 64, offset: 256)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3487, file: !3488, line: 88, baseType: !330, size: 64, offset: 320)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3487, file: !3488, line: 90, baseType: !3497, size: 64, offset: 384)
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3498, size: 64)
!3498 = !DISubroutineType(types: !3499)
!3499 = !{!166, !214, !3500}
!3500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3501, size: 64)
!3501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !3502)
!3502 = !{!3503, !3504, !3505, !3506, !3507, !3508, !3509, !3513, !3517, !3518, !3519, !3520, !3521, !3529, !3530, !3531, !3532, !3533, !3534}
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3501, file: !67, line: 96, baseType: !173, size: 64)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3501, file: !67, line: 97, baseType: !3486, size: 64, offset: 64)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3501, file: !67, line: 99, baseType: !177, size: 64, offset: 128)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3501, file: !67, line: 100, baseType: !173, size: 64, offset: 192)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3501, file: !67, line: 102, baseType: !492, size: 8, offset: 256)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3501, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3501, file: !67, line: 105, baseType: !3510, size: 64, offset: 320)
!3510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3511, size: 64)
!3511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3512)
!3512 = !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !67, line: 105, flags: DIFlagFwdDecl)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3501, file: !67, line: 106, baseType: !3514, size: 64, offset: 384)
!3514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3515, size: 64)
!3515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3516)
!3516 = !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !67, line: 106, flags: DIFlagFwdDecl)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3501, file: !67, line: 108, baseType: !3460, size: 64, offset: 448)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3501, file: !67, line: 109, baseType: !3451, size: 64, offset: 512)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3501, file: !67, line: 110, baseType: !3460, size: 64, offset: 576)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3501, file: !67, line: 111, baseType: !3451, size: 64, offset: 640)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3501, file: !67, line: 112, baseType: !3522, size: 64, offset: 704)
!3522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3523, size: 64)
!3523 = !DISubroutineType(types: !3524)
!3524 = !{!166, !214, !3525}
!3525 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3526)
!3526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3527)
!3527 = !{!3528}
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3526, file: !80, line: 51, baseType: !166, size: 32)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3501, file: !67, line: 113, baseType: !3460, size: 64, offset: 768)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3501, file: !67, line: 114, baseType: !330, size: 64, offset: 832)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3501, file: !67, line: 115, baseType: !330, size: 64, offset: 896)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3501, file: !67, line: 117, baseType: !3455, size: 64, offset: 960)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3501, file: !67, line: 118, baseType: !3451, size: 64, offset: 1024)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3501, file: !67, line: 120, baseType: !3535, size: 64, offset: 1088)
!3535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3536, size: 64)
!3536 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3487, file: !3488, line: 91, baseType: !3442, size: 64, offset: 448)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3487, file: !3488, line: 92, baseType: !3460, size: 64, offset: 512)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3487, file: !3488, line: 93, baseType: !3451, size: 64, offset: 576)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3487, file: !3488, line: 94, baseType: !3460, size: 64, offset: 640)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3487, file: !3488, line: 95, baseType: !3451, size: 64, offset: 704)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3487, file: !3488, line: 97, baseType: !3460, size: 64, offset: 768)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3487, file: !3488, line: 98, baseType: !3460, size: 64, offset: 832)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3487, file: !3488, line: 100, baseType: !3522, size: 64, offset: 896)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3487, file: !3488, line: 101, baseType: !3460, size: 64, offset: 960)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3487, file: !3488, line: 103, baseType: !3460, size: 64, offset: 1024)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3487, file: !3488, line: 105, baseType: !3460, size: 64, offset: 1088)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3487, file: !3488, line: 107, baseType: !3455, size: 64, offset: 1152)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3487, file: !3488, line: 109, baseType: !3550, size: 64, offset: 1216)
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 64)
!3551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3552)
!3552 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3488, line: 109, flags: DIFlagFwdDecl)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3487, file: !3488, line: 111, baseType: !3554, size: 64, offset: 1280)
!3554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3555, size: 64)
!3555 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3488, line: 111, flags: DIFlagFwdDecl)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3487, file: !3488, line: 112, baseType: !647, offset: 1344)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3487, file: !3488, line: 114, baseType: !492, size: 8, offset: 1344)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !215, file: !73, line: 471, baseType: !3500, size: 64, offset: 832)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !215, file: !73, line: 473, baseType: !161, size: 64, offset: 896)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !215, file: !73, line: 475, baseType: !161, size: 64, offset: 960)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !215, file: !73, line: 480, baseType: !1215, size: 192, offset: 1024)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !215, file: !73, line: 484, baseType: !3563, size: 576, offset: 1216)
!3563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3564)
!3564 = !{!3565, !3566, !3567, !3568, !3569, !3570}
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3563, file: !73, line: 362, baseType: !223, size: 128)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3563, file: !73, line: 363, baseType: !223, size: 128, offset: 128)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3563, file: !73, line: 364, baseType: !223, size: 128, offset: 256)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3563, file: !73, line: 365, baseType: !223, size: 128, offset: 384)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3563, file: !73, line: 366, baseType: !492, size: 8, offset: 512)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3563, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !215, file: !73, line: 485, baseType: !3572, size: 2304, offset: 1792)
!3572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !3573)
!3573 = !{!3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585, !3586, !3587, !3588, !3589, !3627, !3628, !3629, !3630, !3631, !3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3669, !3673}
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3572, file: !80, line: 566, baseType: !3525, size: 32)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3572, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3572, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3572, file: !80, line: 569, baseType: !492, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3572, file: !80, line: 570, baseType: !492, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3572, file: !80, line: 571, baseType: !492, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3572, file: !80, line: 572, baseType: !492, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3572, file: !80, line: 573, baseType: !492, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3572, file: !80, line: 574, baseType: !492, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3572, file: !80, line: 575, baseType: !492, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3572, file: !80, line: 576, baseType: !492, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3572, file: !80, line: 577, baseType: !417, size: 32, offset: 64)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3572, file: !80, line: 578, baseType: !236, offset: 96)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3572, file: !80, line: 580, baseType: !223, size: 128, offset: 128)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3572, file: !80, line: 581, baseType: !1547, size: 192, offset: 256)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3572, file: !80, line: 582, baseType: !3590, size: 64, offset: 448)
!3590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3591, size: 64)
!3591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3592, line: 43, size: 1472, elements: !3593)
!3592 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3593 = !{!3594, !3595, !3596, !3597, !3598, !3601, !3613, !3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621, !3622, !3623, !3624, !3625, !3626}
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3591, file: !3592, line: 44, baseType: !173, size: 64)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3591, file: !3592, line: 45, baseType: !166, size: 32, offset: 64)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3591, file: !3592, line: 46, baseType: !223, size: 128, offset: 128)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3591, file: !3592, line: 47, baseType: !236, offset: 256)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3591, file: !3592, line: 48, baseType: !3599, size: 64, offset: 256)
!3599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3600, size: 64)
!3600 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3591, file: !3592, line: 49, baseType: !3602, size: 320, offset: 320)
!3602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3603, line: 11, size: 320, elements: !3604)
!3603 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3604 = !{!3605, !3606, !3607, !3612}
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3602, file: !3603, line: 16, baseType: !641, size: 128)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3602, file: !3603, line: 17, baseType: !203, size: 64, offset: 128)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3602, file: !3603, line: 18, baseType: !3608, size: 64, offset: 192)
!3608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3609, size: 64)
!3609 = !DISubroutineType(types: !3610)
!3610 = !{null, !3611}
!3611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3602, size: 64)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3602, file: !3603, line: 19, baseType: !417, size: 32, offset: 256)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3591, file: !3592, line: 50, baseType: !203, size: 64, offset: 640)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3591, file: !3592, line: 51, baseType: !1340, size: 64, offset: 704)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3591, file: !3592, line: 52, baseType: !1340, size: 64, offset: 768)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3591, file: !3592, line: 53, baseType: !1340, size: 64, offset: 832)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3591, file: !3592, line: 54, baseType: !1340, size: 64, offset: 896)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3591, file: !3592, line: 55, baseType: !1340, size: 64, offset: 960)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3591, file: !3592, line: 56, baseType: !203, size: 64, offset: 1024)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3591, file: !3592, line: 57, baseType: !203, size: 64, offset: 1088)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3591, file: !3592, line: 58, baseType: !203, size: 64, offset: 1152)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3591, file: !3592, line: 59, baseType: !203, size: 64, offset: 1216)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3591, file: !3592, line: 60, baseType: !203, size: 64, offset: 1280)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3591, file: !3592, line: 61, baseType: !214, size: 64, offset: 1344)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3591, file: !3592, line: 62, baseType: !492, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3591, file: !3592, line: 63, baseType: !492, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3572, file: !80, line: 583, baseType: !492, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3572, file: !80, line: 584, baseType: !492, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3572, file: !80, line: 585, baseType: !492, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3572, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3572, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3572, file: !80, line: 592, baseType: !1332, size: 512, offset: 576)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3572, file: !80, line: 593, baseType: !423, size: 64, offset: 1088)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3572, file: !80, line: 594, baseType: !2004, size: 256, offset: 1152)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3572, file: !80, line: 595, baseType: !1526, size: 128, offset: 1408)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3572, file: !80, line: 596, baseType: !3599, size: 64, offset: 1536)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3572, file: !80, line: 597, baseType: !749, size: 32, offset: 1600)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3572, file: !80, line: 598, baseType: !749, size: 32, offset: 1632)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3572, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3572, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3572, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3572, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3572, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3572, file: !80, line: 604, baseType: !492, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3572, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3572, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3572, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3572, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3572, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3572, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3572, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3572, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3572, file: !80, line: 613, baseType: !166, size: 32, offset: 1792)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3572, file: !80, line: 614, baseType: !166, size: 32, offset: 1824)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3572, file: !80, line: 615, baseType: !423, size: 64, offset: 1856)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3572, file: !80, line: 616, baseType: !423, size: 64, offset: 1920)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3572, file: !80, line: 617, baseType: !423, size: 64, offset: 1984)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3572, file: !80, line: 618, baseType: !423, size: 64, offset: 2048)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3572, file: !80, line: 620, baseType: !3660, size: 64, offset: 2112)
!3660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3661, size: 64)
!3661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !3662)
!3662 = !{!3663, !3664, !3665, !3666}
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3661, file: !80, line: 537, baseType: !236)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3661, file: !80, line: 538, baseType: !7, size: 32)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3661, file: !80, line: 540, baseType: !223, size: 128, offset: 64)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3661, file: !80, line: 543, baseType: !3667, size: 64, offset: 192)
!3667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3668, size: 64)
!3668 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !80, line: 534, flags: DIFlagFwdDecl)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3572, file: !80, line: 621, baseType: !3670, size: 64, offset: 2176)
!3670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3671, size: 64)
!3671 = !DISubroutineType(types: !3672)
!3672 = !{null, !214, !1484}
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3572, file: !80, line: 622, baseType: !3674, size: 64, offset: 2240)
!3674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3675, size: 64)
!3675 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !215, file: !73, line: 486, baseType: !3677, size: 64, offset: 4096)
!3677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3678, size: 64)
!3678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !3679)
!3679 = !{!3680, !3681, !3682, !3686, !3687, !3688}
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3678, file: !80, line: 643, baseType: !3457, size: 1472)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3678, file: !80, line: 644, baseType: !3460, size: 64, offset: 1472)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3678, file: !80, line: 645, baseType: !3683, size: 64, offset: 1536)
!3683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3684, size: 64)
!3684 = !DISubroutineType(types: !3685)
!3685 = !{null, !214, !492}
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3678, file: !80, line: 646, baseType: !3460, size: 64, offset: 1600)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3678, file: !80, line: 647, baseType: !3451, size: 64, offset: 1664)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3678, file: !80, line: 648, baseType: !3451, size: 64, offset: 1728)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !215, file: !73, line: 493, baseType: !3690, size: 64, offset: 4160)
!3690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3691, size: 64)
!3691 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !3692, line: 13, flags: DIFlagFwdDecl)
!3692 = !DIFile(filename: "./arch/x86/include/asm/x86_init.h", directory: "/home/lizy2001/genbc/linux")
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !215, file: !73, line: 499, baseType: !223, size: 128, offset: 4224)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !215, file: !73, line: 502, baseType: !3695, size: 64, offset: 4352)
!3695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3696, size: 64)
!3696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3697)
!3697 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !73, line: 502, flags: DIFlagFwdDecl)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !215, file: !73, line: 504, baseType: !3699, size: 64, offset: 4416)
!3699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !215, file: !73, line: 505, baseType: !423, size: 64, offset: 4480)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !215, file: !73, line: 510, baseType: !423, size: 64, offset: 4544)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !215, file: !73, line: 511, baseType: !3703, size: 64, offset: 4608)
!3703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3704, size: 64)
!3704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3705)
!3705 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !215, file: !73, line: 513, baseType: !3707, size: 64, offset: 4672)
!3707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3708, size: 64)
!3708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !3709)
!3709 = !{!3710, !3711}
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3708, file: !73, line: 293, baseType: !7, size: 32)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3708, file: !73, line: 294, baseType: !203, size: 64, offset: 64)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !215, file: !73, line: 515, baseType: !223, size: 128, offset: 4736)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !215, file: !73, line: 526, baseType: !3714, offset: 4864)
!3714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3715, line: 5, elements: !250)
!3715 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !215, file: !73, line: 528, baseType: !3717, size: 64, offset: 4864)
!3717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3718, size: 64)
!3718 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3719, line: 14, flags: DIFlagFwdDecl)
!3719 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !215, file: !73, line: 529, baseType: !3721, size: 64, offset: 4928)
!3721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3722, size: 64)
!3722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3723, line: 17, size: 192, elements: !3724)
!3723 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3724 = !{!3725, !3726, !3809}
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3722, file: !3723, line: 18, baseType: !3721, size: 64)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3722, file: !3723, line: 19, baseType: !3727, size: 64, offset: 64)
!3727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3728, size: 64)
!3728 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3729)
!3729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3723, line: 110, size: 1152, elements: !3730)
!3730 = !{!3731, !3735, !3739, !3745, !3751, !3755, !3759, !3764, !3768, !3769, !3773, !3777, !3781, !3792, !3793, !3794, !3795, !3805}
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3729, file: !3723, line: 111, baseType: !3732, size: 64)
!3732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3733, size: 64)
!3733 = !DISubroutineType(types: !3734)
!3734 = !{!3721, !3721}
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3729, file: !3723, line: 112, baseType: !3736, size: 64, offset: 64)
!3736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3737, size: 64)
!3737 = !DISubroutineType(types: !3738)
!3738 = !{null, !3721}
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3729, file: !3723, line: 113, baseType: !3740, size: 64, offset: 128)
!3740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3741, size: 64)
!3741 = !DISubroutineType(types: !3742)
!3742 = !{!492, !3743}
!3743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3744, size: 64)
!3744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3722)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3729, file: !3723, line: 114, baseType: !3746, size: 64, offset: 192)
!3746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3747, size: 64)
!3747 = !DISubroutineType(types: !3748)
!3748 = !{!2172, !3743, !3749}
!3749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3750, size: 64)
!3750 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !215)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3729, file: !3723, line: 116, baseType: !3752, size: 64, offset: 256)
!3752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3753, size: 64)
!3753 = !DISubroutineType(types: !3754)
!3754 = !{!492, !3743, !173}
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3729, file: !3723, line: 118, baseType: !3756, size: 64, offset: 320)
!3756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3757, size: 64)
!3757 = !DISubroutineType(types: !3758)
!3758 = !{!166, !3743, !173, !7, !161, !324}
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3729, file: !3723, line: 123, baseType: !3760, size: 64, offset: 384)
!3760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3761, size: 64)
!3761 = !DISubroutineType(types: !3762)
!3762 = !{!166, !3743, !173, !3763, !324}
!3763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 64)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3729, file: !3723, line: 126, baseType: !3765, size: 64, offset: 448)
!3765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3766, size: 64)
!3766 = !DISubroutineType(types: !3767)
!3767 = !{!173, !3743}
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3729, file: !3723, line: 127, baseType: !3765, size: 64, offset: 512)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3729, file: !3723, line: 128, baseType: !3770, size: 64, offset: 576)
!3770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3771, size: 64)
!3771 = !DISubroutineType(types: !3772)
!3772 = !{!3721, !3743}
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3729, file: !3723, line: 130, baseType: !3774, size: 64, offset: 640)
!3774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3775, size: 64)
!3775 = !DISubroutineType(types: !3776)
!3776 = !{!3721, !3743, !3721}
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3729, file: !3723, line: 133, baseType: !3778, size: 64, offset: 704)
!3778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3779, size: 64)
!3779 = !DISubroutineType(types: !3780)
!3780 = !{!3721, !3743, !173}
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3729, file: !3723, line: 135, baseType: !3782, size: 64, offset: 768)
!3782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3783, size: 64)
!3783 = !DISubroutineType(types: !3784)
!3784 = !{!166, !3743, !173, !173, !7, !7, !3785}
!3785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3786, size: 64)
!3786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3723, line: 43, size: 640, elements: !3787)
!3787 = !{!3788, !3789, !3790}
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3786, file: !3723, line: 44, baseType: !3721, size: 64)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3786, file: !3723, line: 45, baseType: !7, size: 32, offset: 64)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3786, file: !3723, line: 46, baseType: !3791, size: 512, offset: 128)
!3791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 512, elements: !1370)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3729, file: !3723, line: 140, baseType: !3774, size: 64, offset: 832)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3729, file: !3723, line: 143, baseType: !3770, size: 64, offset: 896)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3729, file: !3723, line: 145, baseType: !3732, size: 64, offset: 960)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3729, file: !3723, line: 146, baseType: !3796, size: 64, offset: 1024)
!3796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3797, size: 64)
!3797 = !DISubroutineType(types: !3798)
!3798 = !{!166, !3743, !3799}
!3799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3800, size: 64)
!3800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3723, line: 29, size: 128, elements: !3801)
!3801 = !{!3802, !3803, !3804}
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3800, file: !3723, line: 30, baseType: !7, size: 32)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3800, file: !3723, line: 31, baseType: !7, size: 32, offset: 32)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3800, file: !3723, line: 32, baseType: !3743, size: 64, offset: 64)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3729, file: !3723, line: 148, baseType: !3806, size: 64, offset: 1088)
!3806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3807, size: 64)
!3807 = !DISubroutineType(types: !3808)
!3808 = !{!166, !3743, !214}
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3722, file: !3723, line: 20, baseType: !214, size: 64, offset: 128)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !215, file: !73, line: 534, baseType: !515, size: 32, offset: 4992)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !215, file: !73, line: 535, baseType: !417, size: 32, offset: 5024)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !215, file: !73, line: 537, baseType: !236, offset: 5056)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !215, file: !73, line: 538, baseType: !223, size: 128, offset: 5056)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !215, file: !73, line: 540, baseType: !3815, size: 64, offset: 5184)
!3815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3816, size: 64)
!3816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3817, line: 54, size: 960, elements: !3818)
!3817 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3818 = !{!3819, !3820, !3821, !3822, !3823, !3824, !3825, !3829, !3833, !3834, !3835, !3836, !3840, !3844, !3845}
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3816, file: !3817, line: 55, baseType: !173, size: 64)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3816, file: !3817, line: 56, baseType: !177, size: 64, offset: 64)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3816, file: !3817, line: 58, baseType: !330, size: 64, offset: 128)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3816, file: !3817, line: 59, baseType: !330, size: 64, offset: 192)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3816, file: !3817, line: 60, baseType: !229, size: 64, offset: 256)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3816, file: !3817, line: 62, baseType: !3442, size: 64, offset: 320)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3816, file: !3817, line: 63, baseType: !3826, size: 64, offset: 384)
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3827, size: 64)
!3827 = !DISubroutineType(types: !3828)
!3828 = !{!277, !214, !3449}
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3816, file: !3817, line: 65, baseType: !3830, size: 64, offset: 448)
!3830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3831, size: 64)
!3831 = !DISubroutineType(types: !3832)
!3832 = !{null, !3815}
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3816, file: !3817, line: 66, baseType: !3451, size: 64, offset: 512)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3816, file: !3817, line: 68, baseType: !3460, size: 64, offset: 576)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3816, file: !3817, line: 70, baseType: !3246, size: 64, offset: 640)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3816, file: !3817, line: 71, baseType: !3837, size: 64, offset: 704)
!3837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3838, size: 64)
!3838 = !DISubroutineType(types: !3839)
!3839 = !{!2172, !214}
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3816, file: !3817, line: 73, baseType: !3841, size: 64, offset: 768)
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = !DISubroutineType(types: !3843)
!3843 = !{null, !214, !3278, !3279}
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3816, file: !3817, line: 75, baseType: !3455, size: 64, offset: 832)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3816, file: !3817, line: 77, baseType: !3554, size: 64, offset: 896)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !215, file: !73, line: 541, baseType: !330, size: 64, offset: 5248)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !215, file: !73, line: 543, baseType: !3451, size: 64, offset: 5312)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !215, file: !73, line: 544, baseType: !3849, size: 64, offset: 5376)
!3849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3850, size: 64)
!3850 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !215, file: !73, line: 545, baseType: !3852, size: 64, offset: 5440)
!3852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3853, size: 64)
!3853 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !215, file: !73, line: 547, baseType: !492, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !215, file: !73, line: 548, baseType: !492, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !215, file: !73, line: 549, baseType: !492, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !215, file: !73, line: 550, baseType: !492, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !163, file: !101, line: 548, baseType: !166, size: 32, offset: 320)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "detach_count", scope: !163, file: !101, line: 549, baseType: !7, size: 32, offset: 352)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "hw_dev", scope: !163, file: !101, line: 550, baseType: !214, size: 64, offset: 384)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "board_name", scope: !163, file: !101, line: 552, baseType: !173, size: 64, offset: 448)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "board_ptr", scope: !163, file: !101, line: 553, baseType: !2172, size: 64, offset: 512)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "attached", scope: !163, file: !101, line: 554, baseType: !7, size: 1, offset: 576, flags: DIFlagBitField, extraData: i64 576)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "ioenabled", scope: !163, file: !101, line: 555, baseType: !7, size: 1, offset: 577, flags: DIFlagBitField, extraData: i64 576)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "spinlock", scope: !163, file: !101, line: 556, baseType: !236, offset: 584)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !163, file: !101, line: 557, baseType: !1215, size: 192, offset: 640)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "attach_lock", scope: !163, file: !101, line: 558, baseType: !769, size: 256, offset: 832)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !163, file: !101, line: 559, baseType: !3420, size: 32, offset: 1088)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "n_subdevices", scope: !163, file: !101, line: 561, baseType: !166, size: 32, offset: 1120)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "subdevices", scope: !163, file: !101, line: 562, baseType: !3871, size: 64, offset: 1152)
!3871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3872, size: 64)
!3872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_subdevice", file: !101, line: 153, size: 1792, elements: !3873)
!3873 = !{!3874, !3875, !3876, !3877, !3878, !3879, !3880, !3881, !3941, !3942, !3943, !3944, !3945, !3946, !3947, !3949, !3962, !3965, !3966, !3980, !3981, !3982, !3983, !3987, !3992, !3993, !3994, !3995, !3999, !4000, !4001, !4002, !4003}
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !3872, file: !101, line: 154, baseType: !162, size: 64)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3872, file: !101, line: 155, baseType: !166, size: 32, offset: 64)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3872, file: !101, line: 156, baseType: !166, size: 32, offset: 96)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "n_chan", scope: !3872, file: !101, line: 157, baseType: !166, size: 32, offset: 128)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "subdev_flags", scope: !3872, file: !101, line: 158, baseType: !166, size: 32, offset: 160)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "len_chanlist", scope: !3872, file: !101, line: 159, baseType: !166, size: 32, offset: 192)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3872, file: !101, line: 161, baseType: !161, size: 64, offset: 256)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "async", scope: !3872, file: !101, line: 163, baseType: !3882, size: 64, offset: 320)
!3882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3883, size: 64)
!3883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_async", file: !101, line: 347, size: 1536, elements: !3884)
!3884 = !{!3885, !3886, !3887, !3901, !3902, !3903, !3904, !3905, !3906, !3907, !3908, !3909, !3910, !3911, !3912, !3913, !3914, !3915, !3935, !3936, !3937}
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3883, file: !101, line: 348, baseType: !161, size: 64)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_bufsz", scope: !3883, file: !101, line: 349, baseType: !7, size: 32, offset: 64)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "buf_map", scope: !3883, file: !101, line: 350, baseType: !3888, size: 64, offset: 128)
!3888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3889, size: 64)
!3889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_buf_map", file: !101, line: 249, size: 256, elements: !3890)
!3890 = !{!3891, !3892, !3898, !3899, !3900}
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "dma_hw_dev", scope: !3889, file: !101, line: 250, baseType: !214, size: 64)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "page_list", scope: !3889, file: !101, line: 251, baseType: !3893, size: 64, offset: 64)
!3893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3894, size: 64)
!3894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_buf_page", file: !101, line: 220, size: 128, elements: !3895)
!3895 = !{!3896, !3897}
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "virt_addr", scope: !3894, file: !101, line: 221, baseType: !161, size: 64)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !3894, file: !101, line: 222, baseType: !962, size: 64, offset: 64)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "n_pages", scope: !3889, file: !101, line: 252, baseType: !7, size: 32, offset: 128)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "dma_dir", scope: !3889, file: !101, line: 253, baseType: !93, size: 32, offset: 160)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3889, file: !101, line: 254, baseType: !3420, size: 32, offset: 192)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "max_bufsize", scope: !3883, file: !101, line: 351, baseType: !7, size: 32, offset: 192)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "buf_write_count", scope: !3883, file: !101, line: 352, baseType: !7, size: 32, offset: 224)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "buf_write_alloc_count", scope: !3883, file: !101, line: 353, baseType: !7, size: 32, offset: 256)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "buf_read_count", scope: !3883, file: !101, line: 354, baseType: !7, size: 32, offset: 288)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "buf_read_alloc_count", scope: !3883, file: !101, line: 355, baseType: !7, size: 32, offset: 320)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "buf_write_ptr", scope: !3883, file: !101, line: 356, baseType: !7, size: 32, offset: 352)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "buf_read_ptr", scope: !3883, file: !101, line: 357, baseType: !7, size: 32, offset: 384)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "cur_chan", scope: !3883, file: !101, line: 358, baseType: !7, size: 32, offset: 416)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "scans_done", scope: !3883, file: !101, line: 359, baseType: !7, size: 32, offset: 448)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "scan_progress", scope: !3883, file: !101, line: 360, baseType: !7, size: 32, offset: 480)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "munge_chan", scope: !3883, file: !101, line: 361, baseType: !7, size: 32, offset: 512)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "munge_count", scope: !3883, file: !101, line: 362, baseType: !7, size: 32, offset: 544)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "munge_ptr", scope: !3883, file: !101, line: 363, baseType: !7, size: 32, offset: 576)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !3883, file: !101, line: 364, baseType: !7, size: 32, offset: 608)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !3883, file: !101, line: 365, baseType: !3916, size: 640, offset: 640)
!3916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_cmd", file: !132, line: 589, size: 640, elements: !3917)
!3917 = !{!3918, !3919, !3920, !3921, !3922, !3923, !3924, !3925, !3926, !3927, !3928, !3929, !3930, !3931, !3932, !3934}
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "subdev", scope: !3916, file: !132, line: 590, baseType: !7, size: 32)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3916, file: !132, line: 591, baseType: !7, size: 32, offset: 32)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "start_src", scope: !3916, file: !132, line: 593, baseType: !7, size: 32, offset: 64)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "start_arg", scope: !3916, file: !132, line: 594, baseType: !7, size: 32, offset: 96)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "scan_begin_src", scope: !3916, file: !132, line: 596, baseType: !7, size: 32, offset: 128)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "scan_begin_arg", scope: !3916, file: !132, line: 597, baseType: !7, size: 32, offset: 160)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "convert_src", scope: !3916, file: !132, line: 599, baseType: !7, size: 32, offset: 192)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "convert_arg", scope: !3916, file: !132, line: 600, baseType: !7, size: 32, offset: 224)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "scan_end_src", scope: !3916, file: !132, line: 602, baseType: !7, size: 32, offset: 256)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "scan_end_arg", scope: !3916, file: !132, line: 603, baseType: !7, size: 32, offset: 288)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "stop_src", scope: !3916, file: !132, line: 605, baseType: !7, size: 32, offset: 320)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "stop_arg", scope: !3916, file: !132, line: 606, baseType: !7, size: 32, offset: 352)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "chanlist", scope: !3916, file: !132, line: 608, baseType: !2724, size: 64, offset: 384)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "chanlist_len", scope: !3916, file: !132, line: 609, baseType: !7, size: 32, offset: 448)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3916, file: !132, line: 611, baseType: !3933, size: 64, offset: 512)
!3933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 64)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !3916, file: !132, line: 612, baseType: !7, size: 32, offset: 576)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "wait_head", scope: !3883, file: !101, line: 366, baseType: !1526, size: 128, offset: 1280)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "cb_mask", scope: !3883, file: !101, line: 367, baseType: !7, size: 32, offset: 1408)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "inttrig", scope: !3883, file: !101, line: 368, baseType: !3938, size: 64, offset: 1472)
!3938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3939, size: 64)
!3939 = !DISubroutineType(types: !3940)
!3940 = !{!166, !162, !3871, !7}
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3872, file: !101, line: 165, baseType: !161, size: 64, offset: 384)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !3872, file: !101, line: 166, baseType: !161, size: 64, offset: 448)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "runflags", scope: !3872, file: !101, line: 167, baseType: !7, size: 32, offset: 512)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock", scope: !3872, file: !101, line: 168, baseType: !236, offset: 544)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "io_bits", scope: !3872, file: !101, line: 170, baseType: !7, size: 32, offset: 544)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "maxdata", scope: !3872, file: !101, line: 172, baseType: !7, size: 32, offset: 576)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "maxdata_list", scope: !3872, file: !101, line: 173, baseType: !3948, size: 64, offset: 640)
!3948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 64)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "range_table", scope: !3872, file: !101, line: 175, baseType: !3950, size: 64, offset: 704)
!3950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3951, size: 64)
!3951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3952)
!3952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_lrange", file: !101, line: 635, size: 32, elements: !3953)
!3953 = !{!3954, !3955}
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3952, file: !101, line: 636, baseType: !166, size: 32)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3952, file: !101, line: 637, baseType: !3956, offset: 32)
!3956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3957, elements: !2372)
!3957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_krange", file: !132, line: 685, size: 96, elements: !3958)
!3958 = !{!3959, !3960, !3961}
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !3957, file: !132, line: 686, baseType: !166, size: 32)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3957, file: !132, line: 687, baseType: !166, size: 32, offset: 32)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3957, file: !132, line: 688, baseType: !7, size: 32, offset: 64)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "range_table_list", scope: !3872, file: !101, line: 176, baseType: !3963, size: 64, offset: 768)
!3963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3964, size: 64)
!3964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3950)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "chanlist", scope: !3872, file: !101, line: 178, baseType: !2724, size: 64, offset: 832)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "insn_read", scope: !3872, file: !101, line: 180, baseType: !3967, size: 64, offset: 896)
!3967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3968, size: 64)
!3968 = !DISubroutineType(types: !3969)
!3969 = !{!166, !162, !3871, !3970, !2724}
!3970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3971, size: 64)
!3971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_insn", file: !132, line: 491, size: 320, elements: !3972)
!3972 = !{!3973, !3974, !3975, !3976, !3977, !3978}
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !3971, file: !132, line: 492, baseType: !7, size: 32)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !3971, file: !132, line: 493, baseType: !7, size: 32, offset: 32)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3971, file: !132, line: 494, baseType: !2724, size: 64, offset: 64)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "subdev", scope: !3971, file: !132, line: 495, baseType: !7, size: 32, offset: 128)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "chanspec", scope: !3971, file: !132, line: 496, baseType: !7, size: 32, offset: 160)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !3971, file: !132, line: 497, baseType: !3979, size: 96, offset: 192)
!3979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 96, elements: !278)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "insn_write", scope: !3872, file: !101, line: 182, baseType: !3967, size: 64, offset: 960)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "insn_bits", scope: !3872, file: !101, line: 184, baseType: !3967, size: 64, offset: 1024)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "insn_config", scope: !3872, file: !101, line: 186, baseType: !3967, size: 64, offset: 1088)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "do_cmd", scope: !3872, file: !101, line: 191, baseType: !3984, size: 64, offset: 1152)
!3984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3985, size: 64)
!3985 = !DISubroutineType(types: !3986)
!3986 = !{!166, !162, !3871}
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "do_cmdtest", scope: !3872, file: !101, line: 192, baseType: !3988, size: 64, offset: 1216)
!3988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3989, size: 64)
!3989 = !DISubroutineType(types: !3990)
!3990 = !{!166, !162, !3871, !3991}
!3991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3916, size: 64)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3872, file: !101, line: 195, baseType: !3984, size: 64, offset: 1280)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !3872, file: !101, line: 196, baseType: !3984, size: 64, offset: 1344)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "buf_change", scope: !3872, file: !101, line: 199, baseType: !3984, size: 64, offset: 1408)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "munge", scope: !3872, file: !101, line: 202, baseType: !3996, size: 64, offset: 1472)
!3996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3997, size: 64)
!3997 = !DISubroutineType(types: !3998)
!3998 = !{null, !162, !3871, !161, !7, !7}
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "async_dma_dir", scope: !3872, file: !101, line: 205, baseType: !93, size: 32, offset: 1536)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3872, file: !101, line: 207, baseType: !7, size: 32, offset: 1568)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !3872, file: !101, line: 209, baseType: !214, size: 64, offset: 1600)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3872, file: !101, line: 210, baseType: !166, size: 32, offset: 1664)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "readback", scope: !3872, file: !101, line: 212, baseType: !2724, size: 64, offset: 1728)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "mmio", scope: !163, file: !101, line: 565, baseType: !161, size: 64, offset: 1216)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "iobase", scope: !163, file: !101, line: 566, baseType: !203, size: 64, offset: 1280)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "iolen", scope: !163, file: !101, line: 567, baseType: !203, size: 64, offset: 1344)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !163, file: !101, line: 568, baseType: !7, size: 32, offset: 1408)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "read_subdev", scope: !163, file: !101, line: 570, baseType: !3871, size: 64, offset: 1472)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "write_subdev", scope: !163, file: !101, line: 571, baseType: !3871, size: 64, offset: 1536)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "async_queue", scope: !163, file: !101, line: 573, baseType: !3009, size: 64, offset: 1600)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !163, file: !101, line: 575, baseType: !4012, size: 64, offset: 1664)
!4012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4013, size: 64)
!4013 = !DISubroutineType(types: !4014)
!4014 = !{!166, !162}
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !163, file: !101, line: 576, baseType: !196, size: 64, offset: 1728)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "insn_device_config", scope: !163, file: !101, line: 577, baseType: !4017, size: 64, offset: 1792)
!4017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4018, size: 64)
!4018 = !DISubroutineType(types: !4019)
!4019 = !{!166, !162, !3970, !2724}
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "get_valid_routes", scope: !163, file: !101, line: 579, baseType: !4021, size: 64, offset: 1856)
!4021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4022, size: 64)
!4022 = !DISubroutineType(types: !4023)
!4023 = !{!7, !162, !7, !2724}
!4024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4025, size: 64)
!4025 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !166)
!4026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!4027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!4028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4029, size: 64)
!4029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4030)
!4030 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !3871)
!4031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4030, size: 64)
!4032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64)
!4033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4034, size: 64)
!4034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_bufconfig", file: !132, line: 860, size: 256, elements: !4035)
!4035 = !{!4036, !4037, !4038, !4039, !4040}
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !4034, file: !132, line: 861, baseType: !7, size: 32)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4034, file: !132, line: 862, baseType: !7, size: 32, offset: 32)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "maximum_size", scope: !4034, file: !132, line: 864, baseType: !7, size: 32, offset: 64)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4034, file: !132, line: 865, baseType: !7, size: 32, offset: 96)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !4034, file: !132, line: 867, baseType: !4041, size: 128, offset: 128)
!4041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !1197)
!4042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4043, size: 64)
!4043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_devinfo", file: !132, line: 811, size: 1408, elements: !4044)
!4044 = !{!4045, !4046, !4047, !4048, !4049, !4050, !4051}
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "version_code", scope: !4043, file: !132, line: 812, baseType: !7, size: 32)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "n_subdevs", scope: !4043, file: !132, line: 813, baseType: !7, size: 32, offset: 32)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "driver_name", scope: !4043, file: !132, line: 814, baseType: !188, size: 160, offset: 64)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "board_name", scope: !4043, file: !132, line: 815, baseType: !188, size: 160, offset: 224)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "read_subdevice", scope: !4043, file: !132, line: 816, baseType: !166, size: 32, offset: 384)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "write_subdevice", scope: !4043, file: !132, line: 817, baseType: !166, size: 32, offset: 416)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !4043, file: !132, line: 818, baseType: !4052, size: 960, offset: 448)
!4052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 960, elements: !4053)
!4053 = !{!4054}
!4054 = !DISubrange(count: 30)
!4055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4056, size: 64)
!4056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_subdinfo", file: !132, line: 784, size: 576, elements: !4057)
!4057 = !{!4058, !4059, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4067, !4068}
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4056, file: !132, line: 785, baseType: !7, size: 32)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "n_chan", scope: !4056, file: !132, line: 786, baseType: !7, size: 32, offset: 32)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "subd_flags", scope: !4056, file: !132, line: 787, baseType: !7, size: 32, offset: 64)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "timer_type", scope: !4056, file: !132, line: 788, baseType: !7, size: 32, offset: 96)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "len_chanlist", scope: !4056, file: !132, line: 789, baseType: !7, size: 32, offset: 128)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "maxdata", scope: !4056, file: !132, line: 790, baseType: !7, size: 32, offset: 160)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4056, file: !132, line: 791, baseType: !7, size: 32, offset: 192)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "range_type", scope: !4056, file: !132, line: 792, baseType: !7, size: 32, offset: 224)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "settling_time_0", scope: !4056, file: !132, line: 793, baseType: !7, size: 32, offset: 256)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "insn_bits_support", scope: !4056, file: !132, line: 794, baseType: !7, size: 32, offset: 288)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !4056, file: !132, line: 795, baseType: !4069, size: 256, offset: 320)
!4069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 256, elements: !1370)
!4070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4071, size: 64)
!4071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_bufinfo", file: !132, line: 887, size: 352, elements: !4072)
!4072 = !{!4073, !4074, !4075, !4076, !4077, !4078, !4079, !4080}
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !4071, file: !132, line: 888, baseType: !7, size: 32)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_read", scope: !4071, file: !132, line: 889, baseType: !7, size: 32, offset: 32)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "buf_write_ptr", scope: !4071, file: !132, line: 891, baseType: !7, size: 32, offset: 64)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "buf_read_ptr", scope: !4071, file: !132, line: 892, baseType: !7, size: 32, offset: 96)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "buf_write_count", scope: !4071, file: !132, line: 893, baseType: !7, size: 32, offset: 128)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "buf_read_count", scope: !4071, file: !132, line: 894, baseType: !7, size: 32, offset: 160)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_written", scope: !4071, file: !132, line: 896, baseType: !7, size: 32, offset: 192)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !4071, file: !132, line: 898, baseType: !4041, size: 128, offset: 224)
!4081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!4082 = !{!4083, !4135, !4140, !4145, !4147, !4149, !4151, !4156, !4158, !4160, !4165, !4170, !4172, !4177, !4182, !4187, !4192, !4197, !4199, !4202, !4207, !4209, !0, !4211, !4216, !4218, !4221, !4223, !4225, !4227, !4232, !4234, !4236, !4239, !4241, !4246, !4260, !4262, !4264}
!4083 = !DIGlobalVariableExpression(var: !4084, expr: !DIExpression())
!4084 = distinct !DIGlobalVariable(name: "__param_comedi_num_legacy_minors", scope: !2, file: !3, line: 73, type: !4085, isLocal: true, isDefinition: true, align: 64)
!4085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4086)
!4086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !4087, line: 69, size: 320, elements: !4088)
!4087 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!4088 = !{!4089, !4090, !4091, !4107, !4109, !4113, !4114}
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4086, file: !4087, line: 70, baseType: !173, size: 64)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !4086, file: !4087, line: 71, baseType: !177, size: 64, offset: 64)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4086, file: !4087, line: 72, baseType: !4092, size: 64, offset: 128)
!4092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4093, size: 64)
!4093 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4094)
!4094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !4087, line: 47, size: 256, elements: !4095)
!4095 = !{!4096, !4097, !4102, !4106}
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4094, file: !4087, line: 49, baseType: !7, size: 32)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !4094, file: !4087, line: 51, baseType: !4098, size: 64, offset: 64)
!4098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4099, size: 64)
!4099 = !DISubroutineType(types: !4100)
!4100 = !{!166, !173, !4101}
!4101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4085, size: 64)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4094, file: !4087, line: 53, baseType: !4103, size: 64, offset: 128)
!4103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4104, size: 64)
!4104 = !DISubroutineType(types: !4105)
!4105 = !{!166, !277, !4101}
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4094, file: !4087, line: 55, baseType: !470, size: 64, offset: 192)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !4086, file: !4087, line: 73, baseType: !4108, size: 16, offset: 192)
!4108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !861)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !4086, file: !4087, line: 74, baseType: !4110, size: 8, offset: 208)
!4110 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !418, line: 16, baseType: !4111)
!4111 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !420, line: 20, baseType: !4112)
!4112 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4086, file: !4087, line: 75, baseType: !1392, size: 8, offset: 216)
!4114 = !DIDerivedType(tag: DW_TAG_member, scope: !4086, file: !4087, line: 76, baseType: !4115, size: 64, offset: 256)
!4115 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4086, file: !4087, line: 76, size: 64, elements: !4116)
!4116 = !{!4117, !4118, !4125}
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4115, file: !4087, line: 77, baseType: !161, size: 64)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4115, file: !4087, line: 78, baseType: !4119, size: 64)
!4119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4120, size: 64)
!4120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4121)
!4121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !4087, line: 86, size: 128, elements: !4122)
!4122 = !{!4123, !4124}
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !4121, file: !4087, line: 87, baseType: !7, size: 32)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4121, file: !4087, line: 88, baseType: !277, size: 64, offset: 64)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !4115, file: !4087, line: 79, baseType: !4126, size: 64)
!4126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4127, size: 64)
!4127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4128)
!4128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !4087, line: 92, size: 256, elements: !4129)
!4129 = !{!4130, !4131, !4132, !4133, !4134}
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4128, file: !4087, line: 94, baseType: !7, size: 32)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !4128, file: !4087, line: 95, baseType: !7, size: 32, offset: 32)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4128, file: !4087, line: 96, baseType: !2724, size: 64, offset: 64)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4128, file: !4087, line: 97, baseType: !4092, size: 64, offset: 128)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !4128, file: !4087, line: 98, baseType: !161, size: 64, offset: 192)
!4135 = !DIGlobalVariableExpression(var: !4136, expr: !DIExpression())
!4136 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_comedi_num_legacy_minorstype233", scope: !2, file: !3, line: 73, type: !4137, isLocal: true, isDefinition: true, align: 8)
!4137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 384, elements: !4138)
!4138 = !{!4139}
!4139 = !DISubrange(count: 48)
!4140 = !DIGlobalVariableExpression(var: !4141, expr: !DIExpression())
!4141 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_comedi_num_legacy_minors234", scope: !2, file: !3, line: 74, type: !4142, isLocal: true, isDefinition: true, align: 8)
!4142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 984, elements: !4143)
!4143 = !{!4144}
!4144 = !DISubrange(count: 123)
!4145 = !DIGlobalVariableExpression(var: !4146, expr: !DIExpression())
!4146 = distinct !DIGlobalVariable(name: "comedi_default_buf_size_kb", scope: !2, file: !3, line: 78, type: !7, isLocal: false, isDefinition: true)
!4147 = !DIGlobalVariableExpression(var: !4148, expr: !DIExpression())
!4148 = distinct !DIGlobalVariable(name: "__param_comedi_default_buf_size_kb", scope: !2, file: !3, line: 79, type: !4085, isLocal: true, isDefinition: true, align: 64)
!4149 = !DIGlobalVariableExpression(var: !4150, expr: !DIExpression())
!4150 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_comedi_default_buf_size_kbtype235", scope: !2, file: !3, line: 79, type: !4137, isLocal: true, isDefinition: true, align: 8)
!4151 = !DIGlobalVariableExpression(var: !4152, expr: !DIExpression())
!4152 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_comedi_default_buf_size_kb236", scope: !2, file: !3, line: 80, type: !4153, isLocal: true, isDefinition: true, align: 8)
!4153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 752, elements: !4154)
!4154 = !{!4155}
!4155 = !DISubrange(count: 94)
!4156 = !DIGlobalVariableExpression(var: !4157, expr: !DIExpression())
!4157 = distinct !DIGlobalVariable(name: "comedi_default_buf_maxsize_kb", scope: !2, file: !3, line: 84, type: !7, isLocal: false, isDefinition: true)
!4158 = !DIGlobalVariableExpression(var: !4159, expr: !DIExpression())
!4159 = distinct !DIGlobalVariable(name: "__param_comedi_default_buf_maxsize_kb", scope: !2, file: !3, line: 86, type: !4085, isLocal: true, isDefinition: true, align: 64)
!4160 = !DIGlobalVariableExpression(var: !4161, expr: !DIExpression())
!4161 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_comedi_default_buf_maxsize_kbtype237", scope: !2, file: !3, line: 86, type: !4162, isLocal: true, isDefinition: true, align: 8)
!4162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 408, elements: !4163)
!4163 = !{!4164}
!4164 = !DISubrange(count: 51)
!4165 = !DIGlobalVariableExpression(var: !4166, expr: !DIExpression())
!4166 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_comedi_default_buf_maxsize_kb238", scope: !2, file: !3, line: 87, type: !4167, isLocal: true, isDefinition: true, align: 8)
!4167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 872, elements: !4168)
!4168 = !{!4169}
!4169 = !DISubrange(count: 109)
!4170 = !DIGlobalVariableExpression(var: !4171, expr: !DIExpression())
!4171 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_comedi_init264", scope: !2, file: !3, line: 3419, type: !161, isLocal: true, isDefinition: true)
!4172 = !DIGlobalVariableExpression(var: !4173, expr: !DIExpression())
!4173 = distinct !DIGlobalVariable(name: "__exitcall_comedi_cleanup", scope: !2, file: !3, line: 3430, type: !4174, isLocal: true, isDefinition: true)
!4174 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !4175, line: 117, baseType: !4176)
!4175 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!4176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64)
!4177 = !DIGlobalVariableExpression(var: !4178, expr: !DIExpression())
!4178 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author265", scope: !2, file: !3, line: 3432, type: !4179, isLocal: true, isDefinition: true, align: 8)
!4179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 296, elements: !4180)
!4180 = !{!4181}
!4181 = !DISubrange(count: 37)
!4182 = !DIGlobalVariableExpression(var: !4183, expr: !DIExpression())
!4183 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description266", scope: !2, file: !3, line: 3433, type: !4184, isLocal: true, isDefinition: true, align: 8)
!4184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 304, elements: !4185)
!4185 = !{!4186}
!4186 = !DISubrange(count: 38)
!4187 = !DIGlobalVariableExpression(var: !4188, expr: !DIExpression())
!4188 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file267", scope: !2, file: !3, line: 3434, type: !4189, isLocal: true, isDefinition: true, align: 8)
!4189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 336, elements: !4190)
!4190 = !{!4191}
!4191 = !DISubrange(count: 42)
!4192 = !DIGlobalVariableExpression(var: !4193, expr: !DIExpression())
!4193 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license268", scope: !2, file: !3, line: 3434, type: !4194, isLocal: true, isDefinition: true, align: 8)
!4194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 152, elements: !4195)
!4195 = !{!4196}
!4196 = !DISubrange(count: 19)
!4197 = !DIGlobalVariableExpression(var: !4198, expr: !DIExpression())
!4198 = distinct !DIGlobalVariable(name: "comedi_num_legacy_minors", scope: !2, file: !3, line: 72, type: !319, isLocal: true, isDefinition: true)
!4199 = !DIGlobalVariableExpression(var: !4200, expr: !DIExpression())
!4200 = distinct !DIGlobalVariable(name: "comedi_board_minor_table", scope: !2, file: !3, line: 93, type: !4201, isLocal: true, isDefinition: true)
!4201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 3072, elements: !4138)
!4202 = !DIGlobalVariableExpression(var: !4203, expr: !DIExpression())
!4203 = distinct !DIGlobalVariable(name: "comedi_subdevice_minor_table", scope: !2, file: !3, line: 98, type: !4204, isLocal: true, isDefinition: true)
!4204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3871, size: 13312, elements: !4205)
!4205 = !{!4206}
!4206 = !DISubrange(count: 208)
!4207 = !DIGlobalVariableExpression(var: !4208, expr: !DIExpression())
!4208 = distinct !DIGlobalVariable(name: "comedi_class", scope: !2, file: !3, line: 100, type: !3815, isLocal: true, isDefinition: true)
!4209 = !DIGlobalVariableExpression(var: !4210, expr: !DIExpression())
!4210 = distinct !DIGlobalVariable(name: "comedi_cdev", scope: !2, file: !3, line: 101, type: !3153, isLocal: true, isDefinition: true)
!4211 = !DIGlobalVariableExpression(var: !4212, expr: !DIExpression())
!4212 = distinct !DIGlobalVariable(name: "__param_str_comedi_default_buf_size_kb", scope: !2, file: !3, line: 79, type: !4213, isLocal: true, isDefinition: true)
!4213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 272, elements: !4214)
!4214 = !{!4215}
!4215 = !DISubrange(count: 34)
!4216 = !DIGlobalVariableExpression(var: !4217, expr: !DIExpression())
!4217 = distinct !DIGlobalVariable(name: "__param_str_comedi_default_buf_maxsize_kb", scope: !2, file: !3, line: 86, type: !4179, isLocal: true, isDefinition: true)
!4218 = !DIGlobalVariableExpression(var: !4219, expr: !DIExpression())
!4219 = distinct !DIGlobalVariable(name: "__key", scope: !4220, file: !3, line: 107, type: !647, isLocal: true, isDefinition: true)
!4220 = distinct !DISubprogram(name: "comedi_device_init", scope: !3, file: !3, line: 103, type: !197, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4221 = !DIGlobalVariableExpression(var: !4222, expr: !DIExpression())
!4222 = distinct !DIGlobalVariable(name: "__key", scope: !4220, file: !3, line: 108, type: !647, isLocal: true, isDefinition: true)
!4223 = !DIGlobalVariableExpression(var: !4224, expr: !DIExpression())
!4224 = distinct !DIGlobalVariable(name: "comedi_board_minor_table_lock", scope: !2, file: !3, line: 91, type: !1215, isLocal: true, isDefinition: true)
!4225 = !DIGlobalVariableExpression(var: !4226, expr: !DIExpression())
!4226 = distinct !DIGlobalVariable(name: "comedi_subdevice_minor_table_lock", scope: !2, file: !3, line: 95, type: !1215, isLocal: true, isDefinition: true)
!4227 = !DIGlobalVariableExpression(var: !4228, expr: !DIExpression())
!4228 = distinct !DIGlobalVariable(name: "__key", scope: !4229, file: !3, line: 3382, type: !647, isLocal: true, isDefinition: true)
!4229 = distinct !DISubprogram(name: "comedi_init", scope: !3, file: !3, line: 3352, type: !4230, scopeLine: 3353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4230 = !DISubroutineType(types: !4231)
!4231 = !{!166}
!4232 = !DIGlobalVariableExpression(var: !4233, expr: !DIExpression())
!4233 = distinct !DIGlobalVariable(name: "comedi_fops", scope: !2, file: !3, line: 3168, type: !2905, isLocal: true, isDefinition: true)
!4234 = !DIGlobalVariableExpression(var: !4235, expr: !DIExpression())
!4235 = distinct !DIGlobalVariable(name: "comedi_vm_ops", scope: !2, file: !3, line: 2310, type: !1052, isLocal: true, isDefinition: true)
!4236 = !DIGlobalVariableExpression(var: !4237, expr: !DIExpression())
!4237 = distinct !DIGlobalVariable(name: "comedi_dev_groups", scope: !2, file: !3, line: 612, type: !4238, isLocal: true, isDefinition: true)
!4238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 128, elements: !1614)
!4239 = !DIGlobalVariableExpression(var: !4240, expr: !DIExpression())
!4240 = distinct !DIGlobalVariable(name: "comedi_dev_group", scope: !2, file: !3, line: 612, type: !332, isLocal: true, isDefinition: true)
!4241 = !DIGlobalVariableExpression(var: !4242, expr: !DIExpression())
!4242 = distinct !DIGlobalVariable(name: "comedi_dev_attrs", scope: !2, file: !3, line: 605, type: !4243, isLocal: true, isDefinition: true)
!4243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !313, size: 320, elements: !4244)
!4244 = !{!4245}
!4245 = !DISubrange(count: 5)
!4246 = !DIGlobalVariableExpression(var: !4247, expr: !DIExpression())
!4247 = distinct !DIGlobalVariable(name: "dev_attr_max_read_buffer_kb", scope: !2, file: !3, line: 434, type: !4248, isLocal: true, isDefinition: true)
!4248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !73, line: 99, size: 256, elements: !4249)
!4249 = !{!4250, !4251, !4256}
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4248, file: !73, line: 100, baseType: !314, size: 128)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4248, file: !73, line: 101, baseType: !4252, size: 64, offset: 128)
!4252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4253, size: 64)
!4253 = !DISubroutineType(types: !4254)
!4254 = !{!308, !214, !4255, !277}
!4255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4248, size: 64)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4248, file: !73, line: 103, baseType: !4257, size: 64, offset: 192)
!4257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4258, size: 64)
!4258 = !DISubroutineType(types: !4259)
!4259 = !{!308, !214, !4255, !173, !324}
!4260 = !DIGlobalVariableExpression(var: !4261, expr: !DIExpression())
!4261 = distinct !DIGlobalVariable(name: "dev_attr_read_buffer_kb", scope: !2, file: !3, line: 490, type: !4248, isLocal: true, isDefinition: true)
!4262 = !DIGlobalVariableExpression(var: !4263, expr: !DIExpression())
!4263 = distinct !DIGlobalVariable(name: "dev_attr_max_write_buffer_kb", scope: !2, file: !3, line: 547, type: !4248, isLocal: true, isDefinition: true)
!4264 = !DIGlobalVariableExpression(var: !4265, expr: !DIExpression())
!4265 = distinct !DIGlobalVariable(name: "dev_attr_write_buffer_kb", scope: !2, file: !3, line: 603, type: !4248, isLocal: true, isDefinition: true)
!4266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 256, elements: !193)
!4267 = !{!"rsp"}
!4268 = !{i32 7, !"Dwarf Version", i32 4}
!4269 = !{i32 2, !"Debug Info Version", i32 3}
!4270 = !{i32 1, !"wchar_size", i32 2}
!4271 = !{i32 1, !"Code Model", i32 2}
!4272 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4273 = distinct !DISubprogram(name: "comedi_dev_put", scope: !3, file: !3, line: 134, type: !4013, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4274 = !DILocalVariable(name: "dev", arg: 1, scope: !4273, file: !3, line: 134, type: !162)
!4275 = !DILocation(line: 134, column: 42, scope: !4273)
!4276 = !DILocation(line: 136, column: 6, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4273, file: !3, line: 136, column: 6)
!4278 = !DILocation(line: 136, column: 6, scope: !4273)
!4279 = !DILocation(line: 137, column: 20, scope: !4277)
!4280 = !DILocation(line: 137, column: 25, scope: !4277)
!4281 = !DILocation(line: 137, column: 10, scope: !4277)
!4282 = !DILocation(line: 137, column: 3, scope: !4277)
!4283 = !DILocation(line: 138, column: 2, scope: !4273)
!4284 = !DILocation(line: 139, column: 1, scope: !4273)
!4285 = distinct !DISubprogram(name: "kref_put", scope: !3421, file: !3421, line: 62, type: !4286, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4286 = !DISubroutineType(types: !4287)
!4287 = !{!166, !4288, !4289}
!4288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3420, size: 64)
!4289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4290, size: 64)
!4290 = !DISubroutineType(types: !4291)
!4291 = !{null, !4288}
!4292 = !DILocalVariable(name: "kref", arg: 1, scope: !4285, file: !3421, line: 62, type: !4288)
!4293 = !DILocation(line: 62, column: 41, scope: !4285)
!4294 = !DILocalVariable(name: "release", arg: 2, scope: !4285, file: !3421, line: 62, type: !4289)
!4295 = !DILocation(line: 62, column: 54, scope: !4285)
!4296 = !DILocation(line: 64, column: 29, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4285, file: !3421, line: 64, column: 6)
!4298 = !DILocation(line: 64, column: 35, scope: !4297)
!4299 = !DILocation(line: 64, column: 6, scope: !4297)
!4300 = !DILocation(line: 64, column: 6, scope: !4285)
!4301 = !DILocation(line: 65, column: 3, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4297, file: !3421, line: 64, column: 46)
!4303 = !DILocation(line: 65, column: 11, scope: !4302)
!4304 = !DILocation(line: 66, column: 3, scope: !4302)
!4305 = !DILocation(line: 68, column: 2, scope: !4285)
!4306 = !DILocation(line: 69, column: 1, scope: !4285)
!4307 = distinct !DISubprogram(name: "comedi_dev_kref_release", scope: !3, file: !3, line: 112, type: !4290, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4308 = !DILocalVariable(name: "kref", arg: 1, scope: !4307, file: !3, line: 112, type: !4288)
!4309 = !DILocation(line: 112, column: 50, scope: !4307)
!4310 = !DILocalVariable(name: "dev", scope: !4307, file: !3, line: 114, type: !162)
!4311 = !DILocation(line: 114, column: 24, scope: !4307)
!4312 = !DILocalVariable(name: "__mptr", scope: !4313, file: !3, line: 115, type: !161)
!4313 = distinct !DILexicalBlock(scope: !4307, file: !3, line: 115, column: 3)
!4314 = !DILocation(line: 115, column: 3, scope: !4313)
!4315 = !DILocation(line: 115, column: 3, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4313, file: !3, line: 115, column: 3)
!4317 = !DILocation(line: 117, column: 17, scope: !4307)
!4318 = !DILocation(line: 117, column: 22, scope: !4307)
!4319 = !DILocation(line: 117, column: 2, scope: !4307)
!4320 = !DILocation(line: 118, column: 13, scope: !4307)
!4321 = !DILocation(line: 118, column: 18, scope: !4307)
!4322 = !DILocation(line: 118, column: 2, scope: !4307)
!4323 = !DILocation(line: 119, column: 8, scope: !4307)
!4324 = !DILocation(line: 119, column: 2, scope: !4307)
!4325 = !DILocation(line: 120, column: 1, scope: !4307)
!4326 = distinct !DISubprogram(name: "comedi_dev_get_from_minor", scope: !3, file: !3, line: 252, type: !4327, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4327 = !DISubroutineType(types: !4328)
!4328 = !{!162, !7}
!4329 = !DILocalVariable(name: "minor", arg: 1, scope: !4326, file: !3, line: 252, type: !7)
!4330 = !DILocation(line: 252, column: 62, scope: !4326)
!4331 = !DILocation(line: 254, column: 6, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4326, file: !3, line: 254, column: 6)
!4333 = !DILocation(line: 254, column: 12, scope: !4332)
!4334 = !DILocation(line: 254, column: 6, scope: !4326)
!4335 = !DILocation(line: 255, column: 42, scope: !4332)
!4336 = !DILocation(line: 255, column: 10, scope: !4332)
!4337 = !DILocation(line: 255, column: 3, scope: !4332)
!4338 = !DILocation(line: 257, column: 45, scope: !4326)
!4339 = !DILocation(line: 257, column: 9, scope: !4326)
!4340 = !DILocation(line: 257, column: 2, scope: !4326)
!4341 = !DILocation(line: 258, column: 1, scope: !4326)
!4342 = distinct !DISubprogram(name: "comedi_dev_get_from_board_minor", scope: !3, file: !3, line: 216, type: !4327, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4343 = !DILocalVariable(name: "minor", arg: 1, scope: !4342, file: !3, line: 216, type: !7)
!4344 = !DILocation(line: 216, column: 75, scope: !4342)
!4345 = !DILocalVariable(name: "dev", scope: !4342, file: !3, line: 218, type: !162)
!4346 = !DILocation(line: 218, column: 24, scope: !4342)
!4347 = !DILocation(line: 220, column: 2, scope: !4342)
!4348 = !DILocation(line: 221, column: 48, scope: !4342)
!4349 = !DILocation(line: 221, column: 23, scope: !4342)
!4350 = !DILocation(line: 221, column: 8, scope: !4342)
!4351 = !DILocation(line: 221, column: 6, scope: !4342)
!4352 = !DILocation(line: 222, column: 2, scope: !4342)
!4353 = !DILocation(line: 223, column: 9, scope: !4342)
!4354 = !DILocation(line: 223, column: 2, scope: !4342)
!4355 = distinct !DISubprogram(name: "comedi_dev_get_from_subdevice_minor", scope: !3, file: !3, line: 227, type: !4327, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4356 = !DILocalVariable(name: "minor", arg: 1, scope: !4355, file: !3, line: 227, type: !7)
!4357 = !DILocation(line: 227, column: 50, scope: !4355)
!4358 = !DILocalVariable(name: "dev", scope: !4355, file: !3, line: 229, type: !162)
!4359 = !DILocation(line: 229, column: 24, scope: !4355)
!4360 = !DILocalVariable(name: "s", scope: !4355, file: !3, line: 230, type: !3871)
!4361 = !DILocation(line: 230, column: 27, scope: !4355)
!4362 = !DILocalVariable(name: "i", scope: !4355, file: !3, line: 231, type: !7)
!4363 = !DILocation(line: 231, column: 15, scope: !4355)
!4364 = !DILocation(line: 231, column: 19, scope: !4355)
!4365 = !DILocation(line: 231, column: 25, scope: !4355)
!4366 = !DILocation(line: 233, column: 2, scope: !4355)
!4367 = !DILocation(line: 234, column: 35, scope: !4355)
!4368 = !DILocation(line: 234, column: 6, scope: !4355)
!4369 = !DILocation(line: 234, column: 4, scope: !4355)
!4370 = !DILocation(line: 235, column: 23, scope: !4355)
!4371 = !DILocation(line: 235, column: 27, scope: !4355)
!4372 = !DILocation(line: 235, column: 30, scope: !4355)
!4373 = !DILocation(line: 235, column: 8, scope: !4355)
!4374 = !DILocation(line: 235, column: 6, scope: !4355)
!4375 = !DILocation(line: 236, column: 2, scope: !4355)
!4376 = !DILocation(line: 237, column: 9, scope: !4355)
!4377 = !DILocation(line: 237, column: 2, scope: !4355)
!4378 = distinct !DISubprogram(name: "comedi_is_subdevice_running", scope: !3, file: !3, line: 671, type: !4379, scopeLine: 672, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4379 = !DISubroutineType(types: !4380)
!4380 = !{!492, !3871}
!4381 = !DILocalVariable(name: "s", arg: 1, scope: !4378, file: !3, line: 671, type: !3871)
!4382 = !DILocation(line: 671, column: 59, scope: !4378)
!4383 = !DILocalVariable(name: "runflags", scope: !4378, file: !3, line: 673, type: !7)
!4384 = !DILocation(line: 673, column: 15, scope: !4378)
!4385 = !DILocation(line: 673, column: 56, scope: !4378)
!4386 = !DILocation(line: 673, column: 26, scope: !4378)
!4387 = !DILocation(line: 675, column: 36, scope: !4378)
!4388 = !DILocation(line: 675, column: 9, scope: !4378)
!4389 = !DILocation(line: 675, column: 2, scope: !4378)
!4390 = distinct !DISubprogram(name: "comedi_get_subdevice_runflags", scope: !3, file: !3, line: 643, type: !4391, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4391 = !DISubroutineType(types: !4392)
!4392 = !{!7, !3871}
!4393 = !DILocalVariable(name: "lock", arg: 1, scope: !4394, file: !4395, line: 407, type: !1106)
!4394 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !4395, file: !4395, line: 407, type: !4396, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4395 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!4396 = !DISubroutineType(types: !4397)
!4397 = !{null, !1106, !203}
!4398 = !DILocation(line: 407, column: 64, scope: !4394, inlinedAt: !4399)
!4399 = distinct !DILocation(line: 650, column: 2, scope: !4390)
!4400 = !DILocalVariable(name: "flags", arg: 2, scope: !4394, file: !4395, line: 407, type: !203)
!4401 = !DILocation(line: 407, column: 84, scope: !4394, inlinedAt: !4399)
!4402 = !DILocalVariable(name: "lock", arg: 1, scope: !4403, file: !4395, line: 327, type: !1106)
!4403 = distinct !DISubprogram(name: "spinlock_check", scope: !4395, file: !4395, line: 327, type: !4404, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4404 = !DISubroutineType(types: !4405)
!4405 = !{!4406, !1106}
!4406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!4407 = !DILocation(line: 327, column: 67, scope: !4403, inlinedAt: !4408)
!4408 = distinct !DILocation(line: 648, column: 2, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 648, column: 2)
!4410 = distinct !DILexicalBlock(scope: !4411, file: !3, line: 648, column: 2)
!4411 = distinct !DILexicalBlock(scope: !4412, file: !3, line: 648, column: 2)
!4412 = distinct !DILexicalBlock(scope: !4413, file: !3, line: 648, column: 2)
!4413 = distinct !DILexicalBlock(scope: !4390, file: !3, line: 648, column: 2)
!4414 = !DILocalVariable(name: "s", arg: 1, scope: !4390, file: !3, line: 643, type: !3871)
!4415 = !DILocation(line: 643, column: 76, scope: !4390)
!4416 = !DILocalVariable(name: "flags", scope: !4390, file: !3, line: 645, type: !203)
!4417 = !DILocation(line: 645, column: 16, scope: !4390)
!4418 = !DILocalVariable(name: "runflags", scope: !4390, file: !3, line: 646, type: !7)
!4419 = !DILocation(line: 646, column: 15, scope: !4390)
!4420 = !DILocation(line: 648, column: 2, scope: !4390)
!4421 = !DILocation(line: 648, column: 2, scope: !4413)
!4422 = !DILocalVariable(name: "__dummy", scope: !4423, file: !3, line: 648, type: !203)
!4423 = distinct !DILexicalBlock(scope: !4412, file: !3, line: 648, column: 2)
!4424 = !DILocation(line: 648, column: 2, scope: !4423)
!4425 = !DILocalVariable(name: "__dummy2", scope: !4423, file: !3, line: 648, type: !203)
!4426 = !DILocation(line: 648, column: 2, scope: !4412)
!4427 = !DILocation(line: 648, column: 2, scope: !4411)
!4428 = !DILocation(line: 648, column: 2, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4411, file: !3, line: 648, column: 2)
!4430 = !DILocalVariable(name: "__dummy", scope: !4431, file: !3, line: 648, type: !203)
!4431 = distinct !DILexicalBlock(scope: !4432, file: !3, line: 648, column: 2)
!4432 = distinct !DILexicalBlock(scope: !4429, file: !3, line: 648, column: 2)
!4433 = !DILocation(line: 648, column: 2, scope: !4431)
!4434 = !DILocalVariable(name: "__dummy2", scope: !4431, file: !3, line: 648, type: !203)
!4435 = !DILocation(line: 648, column: 2, scope: !4432)
!4436 = !DILocation(line: 648, column: 2, scope: !4410)
!4437 = !{i32 -2141771545}
!4438 = !DILocation(line: 648, column: 2, scope: !4409)
!4439 = !DILocation(line: 329, column: 10, scope: !4403, inlinedAt: !4408)
!4440 = !DILocation(line: 329, column: 16, scope: !4403, inlinedAt: !4408)
!4441 = !DILocation(line: 649, column: 45, scope: !4390)
!4442 = !DILocation(line: 649, column: 13, scope: !4390)
!4443 = !DILocation(line: 649, column: 11, scope: !4390)
!4444 = !DILocation(line: 650, column: 26, scope: !4390)
!4445 = !DILocation(line: 650, column: 29, scope: !4390)
!4446 = !DILocation(line: 650, column: 40, scope: !4390)
!4447 = !DILocalVariable(name: "__dummy", scope: !4448, file: !4395, line: 409, type: !203)
!4448 = distinct !DILexicalBlock(scope: !4449, file: !4395, line: 409, column: 2)
!4449 = distinct !DILexicalBlock(scope: !4394, file: !4395, line: 409, column: 2)
!4450 = !DILocation(line: 409, column: 2, scope: !4448, inlinedAt: !4399)
!4451 = !DILocalVariable(name: "__dummy2", scope: !4448, file: !4395, line: 409, type: !203)
!4452 = !DILocalVariable(name: "__dummy", scope: !4453, file: !4395, line: 409, type: !203)
!4453 = distinct !DILexicalBlock(scope: !4454, file: !4395, line: 409, column: 2)
!4454 = distinct !DILexicalBlock(scope: !4455, file: !4395, line: 409, column: 2)
!4455 = distinct !DILexicalBlock(scope: !4456, file: !4395, line: 409, column: 2)
!4456 = distinct !DILexicalBlock(scope: !4449, file: !4395, line: 409, column: 2)
!4457 = !DILocation(line: 409, column: 2, scope: !4453, inlinedAt: !4399)
!4458 = !DILocalVariable(name: "__dummy2", scope: !4453, file: !4395, line: 409, type: !203)
!4459 = !DILocation(line: 409, column: 2, scope: !4454, inlinedAt: !4399)
!4460 = !DILocation(line: 409, column: 2, scope: !4461, inlinedAt: !4399)
!4461 = distinct !DILexicalBlock(scope: !4456, file: !4395, line: 409, column: 2)
!4462 = !{i32 -2145396055}
!4463 = !DILocation(line: 409, column: 2, scope: !4464, inlinedAt: !4399)
!4464 = distinct !DILexicalBlock(scope: !4461, file: !4395, line: 409, column: 2)
!4465 = !DILocation(line: 651, column: 9, scope: !4390)
!4466 = !DILocation(line: 651, column: 2, scope: !4390)
!4467 = distinct !DISubprogram(name: "comedi_is_runflags_running", scope: !3, file: !3, line: 654, type: !4468, scopeLine: 655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4468 = !DISubroutineType(types: !4469)
!4469 = !{!492, !7}
!4470 = !DILocalVariable(name: "runflags", arg: 1, scope: !4467, file: !3, line: 654, type: !7)
!4471 = !DILocation(line: 654, column: 53, scope: !4467)
!4472 = !DILocation(line: 656, column: 9, scope: !4467)
!4473 = !DILocation(line: 656, column: 18, scope: !4467)
!4474 = !DILocation(line: 656, column: 2, scope: !4467)
!4475 = distinct !DISubprogram(name: "comedi_can_auto_free_spriv", scope: !3, file: !3, line: 686, type: !4379, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4476 = !DILocalVariable(name: "s", arg: 1, scope: !4475, file: !3, line: 686, type: !3871)
!4477 = !DILocation(line: 686, column: 58, scope: !4475)
!4478 = !DILocalVariable(name: "runflags", scope: !4475, file: !3, line: 688, type: !7)
!4479 = !DILocation(line: 688, column: 15, scope: !4475)
!4480 = !DILocation(line: 688, column: 58, scope: !4475)
!4481 = !DILocation(line: 688, column: 26, scope: !4475)
!4482 = !DILocation(line: 690, column: 9, scope: !4475)
!4483 = !DILocation(line: 690, column: 18, scope: !4475)
!4484 = !DILocation(line: 690, column: 2, scope: !4475)
!4485 = distinct !DISubprogram(name: "__comedi_get_subdevice_runflags", scope: !3, file: !3, line: 638, type: !4391, scopeLine: 639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4486 = !DILocalVariable(name: "s", arg: 1, scope: !4485, file: !3, line: 638, type: !3871)
!4487 = !DILocation(line: 638, column: 78, scope: !4485)
!4488 = !DILocation(line: 640, column: 9, scope: !4485)
!4489 = !DILocation(line: 640, column: 12, scope: !4485)
!4490 = !DILocation(line: 640, column: 2, scope: !4485)
!4491 = distinct !DISubprogram(name: "comedi_set_spriv_auto_free", scope: !3, file: !3, line: 701, type: !4492, scopeLine: 702, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4492 = !DISubroutineType(types: !4493)
!4493 = !{null, !3871}
!4494 = !DILocalVariable(name: "s", arg: 1, scope: !4491, file: !3, line: 701, type: !3871)
!4495 = !DILocation(line: 701, column: 58, scope: !4491)
!4496 = !DILocation(line: 703, column: 34, scope: !4491)
!4497 = !DILocation(line: 703, column: 2, scope: !4491)
!4498 = !DILocation(line: 704, column: 1, scope: !4491)
!4499 = distinct !DISubprogram(name: "__comedi_set_subdevice_runflags", scope: !3, file: !3, line: 620, type: !4500, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4500 = !DISubroutineType(types: !4501)
!4501 = !{null, !3871, !7}
!4502 = !DILocalVariable(name: "s", arg: 1, scope: !4499, file: !3, line: 620, type: !3871)
!4503 = !DILocation(line: 620, column: 70, scope: !4499)
!4504 = !DILocalVariable(name: "bits", arg: 2, scope: !4499, file: !3, line: 621, type: !7)
!4505 = !DILocation(line: 621, column: 23, scope: !4499)
!4506 = !DILocation(line: 623, column: 17, scope: !4499)
!4507 = !DILocation(line: 623, column: 2, scope: !4499)
!4508 = !DILocation(line: 623, column: 5, scope: !4499)
!4509 = !DILocation(line: 623, column: 14, scope: !4499)
!4510 = !DILocation(line: 624, column: 1, scope: !4499)
!4511 = distinct !DISubprogram(name: "comedi_alloc_spriv", scope: !3, file: !3, line: 719, type: !4512, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4512 = !DISubroutineType(types: !4513)
!4513 = !{!161, !3871, !324}
!4514 = !DILocalVariable(name: "s", arg: 1, scope: !4511, file: !3, line: 719, type: !3871)
!4515 = !DILocation(line: 719, column: 51, scope: !4511)
!4516 = !DILocalVariable(name: "size", arg: 2, scope: !4511, file: !3, line: 719, type: !324)
!4517 = !DILocation(line: 719, column: 61, scope: !4511)
!4518 = !DILocation(line: 721, column: 23, scope: !4511)
!4519 = !DILocation(line: 721, column: 15, scope: !4511)
!4520 = !DILocation(line: 721, column: 2, scope: !4511)
!4521 = !DILocation(line: 721, column: 5, scope: !4511)
!4522 = !DILocation(line: 721, column: 13, scope: !4511)
!4523 = !DILocation(line: 722, column: 6, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4511, file: !3, line: 722, column: 6)
!4525 = !DILocation(line: 722, column: 9, scope: !4524)
!4526 = !DILocation(line: 722, column: 6, scope: !4511)
!4527 = !DILocation(line: 723, column: 30, scope: !4524)
!4528 = !DILocation(line: 723, column: 3, scope: !4524)
!4529 = !DILocation(line: 724, column: 9, scope: !4511)
!4530 = !DILocation(line: 724, column: 12, scope: !4511)
!4531 = !DILocation(line: 724, column: 2, scope: !4511)
!4532 = distinct !DISubprogram(name: "kzalloc", scope: !125, file: !125, line: 662, type: !4533, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4533 = !DISubroutineType(types: !4534)
!4534 = !{!161, !324, !159}
!4535 = !DILocalVariable(name: "s", arg: 1, scope: !4536, file: !125, line: 445, type: !977)
!4536 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !125, file: !125, line: 445, type: !4537, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4537 = !DISubroutineType(types: !4538)
!4538 = !{!161, !977, !159, !324}
!4539 = !DILocation(line: 445, column: 72, scope: !4536, inlinedAt: !4540)
!4540 = distinct !DILocation(line: 552, column: 10, scope: !4541, inlinedAt: !4544)
!4541 = distinct !DILexicalBlock(scope: !4542, file: !125, line: 540, column: 34)
!4542 = distinct !DILexicalBlock(scope: !4543, file: !125, line: 540, column: 6)
!4543 = distinct !DISubprogram(name: "kmalloc", scope: !125, file: !125, line: 538, type: !4533, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4544 = distinct !DILocation(line: 664, column: 9, scope: !4532)
!4545 = !DILocalVariable(name: "flags", arg: 2, scope: !4536, file: !125, line: 446, type: !159)
!4546 = !DILocation(line: 446, column: 9, scope: !4536, inlinedAt: !4540)
!4547 = !DILocalVariable(name: "size", arg: 3, scope: !4536, file: !125, line: 446, type: !324)
!4548 = !DILocation(line: 446, column: 23, scope: !4536, inlinedAt: !4540)
!4549 = !DILocalVariable(name: "ret", scope: !4536, file: !125, line: 448, type: !161)
!4550 = !DILocation(line: 448, column: 8, scope: !4536, inlinedAt: !4540)
!4551 = !DILocalVariable(name: "flags", arg: 1, scope: !4552, file: !125, line: 318, type: !159)
!4552 = distinct !DISubprogram(name: "kmalloc_type", scope: !125, file: !125, line: 318, type: !4553, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4553 = !DISubroutineType(types: !4554)
!4554 = !{!124, !159}
!4555 = !DILocation(line: 318, column: 67, scope: !4552, inlinedAt: !4556)
!4556 = distinct !DILocation(line: 553, column: 20, scope: !4541, inlinedAt: !4544)
!4557 = !DILocalVariable(name: "size", arg: 1, scope: !4558, file: !125, line: 346, type: !324)
!4558 = distinct !DISubprogram(name: "kmalloc_index", scope: !125, file: !125, line: 346, type: !4559, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4559 = !DISubroutineType(types: !4560)
!4560 = !{!7, !324}
!4561 = !DILocation(line: 346, column: 58, scope: !4558, inlinedAt: !4562)
!4562 = distinct !DILocation(line: 547, column: 11, scope: !4541, inlinedAt: !4544)
!4563 = !DILocalVariable(name: "size", arg: 1, scope: !4564, file: !125, line: 472, type: !324)
!4564 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !125, file: !125, line: 472, type: !4565, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4565 = !DISubroutineType(types: !4566)
!4566 = !{!161, !324, !159, !7}
!4567 = !DILocation(line: 472, column: 28, scope: !4564, inlinedAt: !4568)
!4568 = distinct !DILocation(line: 481, column: 9, scope: !4569, inlinedAt: !4570)
!4569 = distinct !DISubprogram(name: "kmalloc_large", scope: !125, file: !125, line: 478, type: !4533, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4570 = distinct !DILocation(line: 545, column: 11, scope: !4571, inlinedAt: !4544)
!4571 = distinct !DILexicalBlock(scope: !4541, file: !125, line: 544, column: 7)
!4572 = !DILocalVariable(name: "flags", arg: 2, scope: !4564, file: !125, line: 472, type: !159)
!4573 = !DILocation(line: 472, column: 40, scope: !4564, inlinedAt: !4568)
!4574 = !DILocalVariable(name: "order", arg: 3, scope: !4564, file: !125, line: 472, type: !7)
!4575 = !DILocation(line: 472, column: 60, scope: !4564, inlinedAt: !4568)
!4576 = !DILocalVariable(name: "size", arg: 1, scope: !4569, file: !125, line: 478, type: !324)
!4577 = !DILocation(line: 478, column: 51, scope: !4569, inlinedAt: !4570)
!4578 = !DILocalVariable(name: "flags", arg: 2, scope: !4569, file: !125, line: 478, type: !159)
!4579 = !DILocation(line: 478, column: 63, scope: !4569, inlinedAt: !4570)
!4580 = !DILocalVariable(name: "order", scope: !4569, file: !125, line: 480, type: !7)
!4581 = !DILocation(line: 480, column: 15, scope: !4569, inlinedAt: !4570)
!4582 = !DILocalVariable(name: "size", arg: 1, scope: !4543, file: !125, line: 538, type: !324)
!4583 = !DILocation(line: 538, column: 45, scope: !4543, inlinedAt: !4544)
!4584 = !DILocalVariable(name: "flags", arg: 2, scope: !4543, file: !125, line: 538, type: !159)
!4585 = !DILocation(line: 538, column: 57, scope: !4543, inlinedAt: !4544)
!4586 = !DILocalVariable(name: "index", scope: !4541, file: !125, line: 542, type: !7)
!4587 = !DILocation(line: 542, column: 16, scope: !4541, inlinedAt: !4544)
!4588 = !DILocalVariable(name: "size", arg: 1, scope: !4532, file: !125, line: 662, type: !324)
!4589 = !DILocation(line: 662, column: 36, scope: !4532)
!4590 = !DILocalVariable(name: "flags", arg: 2, scope: !4532, file: !125, line: 662, type: !159)
!4591 = !DILocation(line: 662, column: 48, scope: !4532)
!4592 = !DILocation(line: 664, column: 17, scope: !4532)
!4593 = !DILocation(line: 664, column: 23, scope: !4532)
!4594 = !DILocation(line: 664, column: 29, scope: !4532)
!4595 = !DILocation(line: 540, column: 27, scope: !4542, inlinedAt: !4544)
!4596 = !DILocation(line: 540, column: 6, scope: !4542, inlinedAt: !4544)
!4597 = !DILocation(line: 540, column: 6, scope: !4543, inlinedAt: !4544)
!4598 = !DILocation(line: 544, column: 7, scope: !4571, inlinedAt: !4544)
!4599 = !DILocation(line: 544, column: 12, scope: !4571, inlinedAt: !4544)
!4600 = !DILocation(line: 544, column: 7, scope: !4541, inlinedAt: !4544)
!4601 = !DILocation(line: 545, column: 25, scope: !4571, inlinedAt: !4544)
!4602 = !DILocation(line: 545, column: 31, scope: !4571, inlinedAt: !4544)
!4603 = !DILocation(line: 480, column: 33, scope: !4569, inlinedAt: !4570)
!4604 = !DILocation(line: 480, column: 23, scope: !4569, inlinedAt: !4570)
!4605 = !DILocation(line: 481, column: 29, scope: !4569, inlinedAt: !4570)
!4606 = !DILocation(line: 481, column: 35, scope: !4569, inlinedAt: !4570)
!4607 = !DILocation(line: 481, column: 42, scope: !4569, inlinedAt: !4570)
!4608 = !DILocation(line: 474, column: 23, scope: !4564, inlinedAt: !4568)
!4609 = !DILocation(line: 474, column: 29, scope: !4564, inlinedAt: !4568)
!4610 = !DILocation(line: 474, column: 36, scope: !4564, inlinedAt: !4568)
!4611 = !DILocation(line: 474, column: 9, scope: !4564, inlinedAt: !4568)
!4612 = !DILocation(line: 545, column: 4, scope: !4571, inlinedAt: !4544)
!4613 = !DILocation(line: 547, column: 25, scope: !4541, inlinedAt: !4544)
!4614 = !DILocation(line: 348, column: 7, scope: !4615, inlinedAt: !4562)
!4615 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 348, column: 6)
!4616 = !DILocation(line: 348, column: 6, scope: !4558, inlinedAt: !4562)
!4617 = !DILocation(line: 349, column: 3, scope: !4615, inlinedAt: !4562)
!4618 = !DILocation(line: 351, column: 6, scope: !4619, inlinedAt: !4562)
!4619 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 351, column: 6)
!4620 = !DILocation(line: 351, column: 11, scope: !4619, inlinedAt: !4562)
!4621 = !DILocation(line: 351, column: 6, scope: !4558, inlinedAt: !4562)
!4622 = !DILocation(line: 352, column: 3, scope: !4619, inlinedAt: !4562)
!4623 = !DILocation(line: 354, column: 32, scope: !4624, inlinedAt: !4562)
!4624 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 354, column: 6)
!4625 = !DILocation(line: 354, column: 37, scope: !4624, inlinedAt: !4562)
!4626 = !DILocation(line: 354, column: 42, scope: !4624, inlinedAt: !4562)
!4627 = !DILocation(line: 354, column: 45, scope: !4624, inlinedAt: !4562)
!4628 = !DILocation(line: 354, column: 50, scope: !4624, inlinedAt: !4562)
!4629 = !DILocation(line: 354, column: 6, scope: !4558, inlinedAt: !4562)
!4630 = !DILocation(line: 355, column: 3, scope: !4624, inlinedAt: !4562)
!4631 = !DILocation(line: 356, column: 32, scope: !4632, inlinedAt: !4562)
!4632 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 356, column: 6)
!4633 = !DILocation(line: 356, column: 37, scope: !4632, inlinedAt: !4562)
!4634 = !DILocation(line: 356, column: 43, scope: !4632, inlinedAt: !4562)
!4635 = !DILocation(line: 356, column: 46, scope: !4632, inlinedAt: !4562)
!4636 = !DILocation(line: 356, column: 51, scope: !4632, inlinedAt: !4562)
!4637 = !DILocation(line: 356, column: 6, scope: !4558, inlinedAt: !4562)
!4638 = !DILocation(line: 357, column: 3, scope: !4632, inlinedAt: !4562)
!4639 = !DILocation(line: 358, column: 6, scope: !4640, inlinedAt: !4562)
!4640 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 358, column: 6)
!4641 = !DILocation(line: 358, column: 11, scope: !4640, inlinedAt: !4562)
!4642 = !DILocation(line: 358, column: 6, scope: !4558, inlinedAt: !4562)
!4643 = !DILocation(line: 358, column: 26, scope: !4640, inlinedAt: !4562)
!4644 = !DILocation(line: 359, column: 6, scope: !4645, inlinedAt: !4562)
!4645 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 359, column: 6)
!4646 = !DILocation(line: 359, column: 11, scope: !4645, inlinedAt: !4562)
!4647 = !DILocation(line: 359, column: 6, scope: !4558, inlinedAt: !4562)
!4648 = !DILocation(line: 359, column: 26, scope: !4645, inlinedAt: !4562)
!4649 = !DILocation(line: 360, column: 6, scope: !4650, inlinedAt: !4562)
!4650 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 360, column: 6)
!4651 = !DILocation(line: 360, column: 11, scope: !4650, inlinedAt: !4562)
!4652 = !DILocation(line: 360, column: 6, scope: !4558, inlinedAt: !4562)
!4653 = !DILocation(line: 360, column: 26, scope: !4650, inlinedAt: !4562)
!4654 = !DILocation(line: 361, column: 6, scope: !4655, inlinedAt: !4562)
!4655 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 361, column: 6)
!4656 = !DILocation(line: 361, column: 11, scope: !4655, inlinedAt: !4562)
!4657 = !DILocation(line: 361, column: 6, scope: !4558, inlinedAt: !4562)
!4658 = !DILocation(line: 361, column: 26, scope: !4655, inlinedAt: !4562)
!4659 = !DILocation(line: 362, column: 6, scope: !4660, inlinedAt: !4562)
!4660 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 362, column: 6)
!4661 = !DILocation(line: 362, column: 11, scope: !4660, inlinedAt: !4562)
!4662 = !DILocation(line: 362, column: 6, scope: !4558, inlinedAt: !4562)
!4663 = !DILocation(line: 362, column: 26, scope: !4660, inlinedAt: !4562)
!4664 = !DILocation(line: 363, column: 6, scope: !4665, inlinedAt: !4562)
!4665 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 363, column: 6)
!4666 = !DILocation(line: 363, column: 11, scope: !4665, inlinedAt: !4562)
!4667 = !DILocation(line: 363, column: 6, scope: !4558, inlinedAt: !4562)
!4668 = !DILocation(line: 363, column: 26, scope: !4665, inlinedAt: !4562)
!4669 = !DILocation(line: 364, column: 6, scope: !4670, inlinedAt: !4562)
!4670 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 364, column: 6)
!4671 = !DILocation(line: 364, column: 11, scope: !4670, inlinedAt: !4562)
!4672 = !DILocation(line: 364, column: 6, scope: !4558, inlinedAt: !4562)
!4673 = !DILocation(line: 364, column: 26, scope: !4670, inlinedAt: !4562)
!4674 = !DILocation(line: 365, column: 6, scope: !4675, inlinedAt: !4562)
!4675 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 365, column: 6)
!4676 = !DILocation(line: 365, column: 11, scope: !4675, inlinedAt: !4562)
!4677 = !DILocation(line: 365, column: 6, scope: !4558, inlinedAt: !4562)
!4678 = !DILocation(line: 365, column: 26, scope: !4675, inlinedAt: !4562)
!4679 = !DILocation(line: 366, column: 6, scope: !4680, inlinedAt: !4562)
!4680 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 366, column: 6)
!4681 = !DILocation(line: 366, column: 11, scope: !4680, inlinedAt: !4562)
!4682 = !DILocation(line: 366, column: 6, scope: !4558, inlinedAt: !4562)
!4683 = !DILocation(line: 366, column: 26, scope: !4680, inlinedAt: !4562)
!4684 = !DILocation(line: 367, column: 6, scope: !4685, inlinedAt: !4562)
!4685 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 367, column: 6)
!4686 = !DILocation(line: 367, column: 11, scope: !4685, inlinedAt: !4562)
!4687 = !DILocation(line: 367, column: 6, scope: !4558, inlinedAt: !4562)
!4688 = !DILocation(line: 367, column: 26, scope: !4685, inlinedAt: !4562)
!4689 = !DILocation(line: 368, column: 6, scope: !4690, inlinedAt: !4562)
!4690 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 368, column: 6)
!4691 = !DILocation(line: 368, column: 11, scope: !4690, inlinedAt: !4562)
!4692 = !DILocation(line: 368, column: 6, scope: !4558, inlinedAt: !4562)
!4693 = !DILocation(line: 368, column: 26, scope: !4690, inlinedAt: !4562)
!4694 = !DILocation(line: 369, column: 6, scope: !4695, inlinedAt: !4562)
!4695 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 369, column: 6)
!4696 = !DILocation(line: 369, column: 11, scope: !4695, inlinedAt: !4562)
!4697 = !DILocation(line: 369, column: 6, scope: !4558, inlinedAt: !4562)
!4698 = !DILocation(line: 369, column: 26, scope: !4695, inlinedAt: !4562)
!4699 = !DILocation(line: 370, column: 6, scope: !4700, inlinedAt: !4562)
!4700 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 370, column: 6)
!4701 = !DILocation(line: 370, column: 11, scope: !4700, inlinedAt: !4562)
!4702 = !DILocation(line: 370, column: 6, scope: !4558, inlinedAt: !4562)
!4703 = !DILocation(line: 370, column: 26, scope: !4700, inlinedAt: !4562)
!4704 = !DILocation(line: 371, column: 6, scope: !4705, inlinedAt: !4562)
!4705 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 371, column: 6)
!4706 = !DILocation(line: 371, column: 11, scope: !4705, inlinedAt: !4562)
!4707 = !DILocation(line: 371, column: 6, scope: !4558, inlinedAt: !4562)
!4708 = !DILocation(line: 371, column: 26, scope: !4705, inlinedAt: !4562)
!4709 = !DILocation(line: 372, column: 6, scope: !4710, inlinedAt: !4562)
!4710 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 372, column: 6)
!4711 = !DILocation(line: 372, column: 11, scope: !4710, inlinedAt: !4562)
!4712 = !DILocation(line: 372, column: 6, scope: !4558, inlinedAt: !4562)
!4713 = !DILocation(line: 372, column: 26, scope: !4710, inlinedAt: !4562)
!4714 = !DILocation(line: 373, column: 6, scope: !4715, inlinedAt: !4562)
!4715 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 373, column: 6)
!4716 = !DILocation(line: 373, column: 11, scope: !4715, inlinedAt: !4562)
!4717 = !DILocation(line: 373, column: 6, scope: !4558, inlinedAt: !4562)
!4718 = !DILocation(line: 373, column: 26, scope: !4715, inlinedAt: !4562)
!4719 = !DILocation(line: 374, column: 6, scope: !4720, inlinedAt: !4562)
!4720 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 374, column: 6)
!4721 = !DILocation(line: 374, column: 11, scope: !4720, inlinedAt: !4562)
!4722 = !DILocation(line: 374, column: 6, scope: !4558, inlinedAt: !4562)
!4723 = !DILocation(line: 374, column: 26, scope: !4720, inlinedAt: !4562)
!4724 = !DILocation(line: 375, column: 6, scope: !4725, inlinedAt: !4562)
!4725 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 375, column: 6)
!4726 = !DILocation(line: 375, column: 11, scope: !4725, inlinedAt: !4562)
!4727 = !DILocation(line: 375, column: 6, scope: !4558, inlinedAt: !4562)
!4728 = !DILocation(line: 375, column: 27, scope: !4725, inlinedAt: !4562)
!4729 = !DILocation(line: 376, column: 6, scope: !4730, inlinedAt: !4562)
!4730 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 376, column: 6)
!4731 = !DILocation(line: 376, column: 11, scope: !4730, inlinedAt: !4562)
!4732 = !DILocation(line: 376, column: 6, scope: !4558, inlinedAt: !4562)
!4733 = !DILocation(line: 376, column: 32, scope: !4730, inlinedAt: !4562)
!4734 = !DILocation(line: 377, column: 6, scope: !4735, inlinedAt: !4562)
!4735 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 377, column: 6)
!4736 = !DILocation(line: 377, column: 11, scope: !4735, inlinedAt: !4562)
!4737 = !DILocation(line: 377, column: 6, scope: !4558, inlinedAt: !4562)
!4738 = !DILocation(line: 377, column: 32, scope: !4735, inlinedAt: !4562)
!4739 = !DILocation(line: 378, column: 6, scope: !4740, inlinedAt: !4562)
!4740 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 378, column: 6)
!4741 = !DILocation(line: 378, column: 11, scope: !4740, inlinedAt: !4562)
!4742 = !DILocation(line: 378, column: 6, scope: !4558, inlinedAt: !4562)
!4743 = !DILocation(line: 378, column: 32, scope: !4740, inlinedAt: !4562)
!4744 = !DILocation(line: 379, column: 6, scope: !4745, inlinedAt: !4562)
!4745 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 379, column: 6)
!4746 = !DILocation(line: 379, column: 11, scope: !4745, inlinedAt: !4562)
!4747 = !DILocation(line: 379, column: 6, scope: !4558, inlinedAt: !4562)
!4748 = !DILocation(line: 379, column: 33, scope: !4745, inlinedAt: !4562)
!4749 = !DILocation(line: 380, column: 6, scope: !4750, inlinedAt: !4562)
!4750 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 380, column: 6)
!4751 = !DILocation(line: 380, column: 11, scope: !4750, inlinedAt: !4562)
!4752 = !DILocation(line: 380, column: 6, scope: !4558, inlinedAt: !4562)
!4753 = !DILocation(line: 380, column: 33, scope: !4750, inlinedAt: !4562)
!4754 = !DILocation(line: 381, column: 6, scope: !4755, inlinedAt: !4562)
!4755 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 381, column: 6)
!4756 = !DILocation(line: 381, column: 11, scope: !4755, inlinedAt: !4562)
!4757 = !DILocation(line: 381, column: 6, scope: !4558, inlinedAt: !4562)
!4758 = !DILocation(line: 381, column: 33, scope: !4755, inlinedAt: !4562)
!4759 = !DILocation(line: 382, column: 2, scope: !4760, inlinedAt: !4562)
!4760 = distinct !DILexicalBlock(scope: !4761, file: !125, line: 382, column: 2)
!4761 = distinct !DILexicalBlock(scope: !4558, file: !125, line: 382, column: 2)
!4762 = !{i32 -2142389803, i32 -2142389774, i32 -2142389728, i32 -2142389670, i32 -2142389616, i32 -2142389562, i32 -2142389507, i32 -2142389476}
!4763 = !DILocation(line: 382, column: 2, scope: !4764, inlinedAt: !4562)
!4764 = distinct !DILexicalBlock(scope: !4765, file: !125, line: 382, column: 2)
!4765 = distinct !DILexicalBlock(scope: !4761, file: !125, line: 382, column: 2)
!4766 = !{i32 -2142389033, i32 -2142389026, i32 -2142388972, i32 -2142388941, i32 -2142388911}
!4767 = !DILocation(line: 382, column: 2, scope: !4765, inlinedAt: !4562)
!4768 = !DILocation(line: 386, column: 1, scope: !4558, inlinedAt: !4562)
!4769 = !DILocation(line: 547, column: 9, scope: !4541, inlinedAt: !4544)
!4770 = !DILocation(line: 549, column: 8, scope: !4771, inlinedAt: !4544)
!4771 = distinct !DILexicalBlock(scope: !4541, file: !125, line: 549, column: 7)
!4772 = !DILocation(line: 549, column: 7, scope: !4541, inlinedAt: !4544)
!4773 = !DILocation(line: 550, column: 4, scope: !4771, inlinedAt: !4544)
!4774 = !DILocation(line: 553, column: 33, scope: !4541, inlinedAt: !4544)
!4775 = !DILocation(line: 325, column: 6, scope: !4776, inlinedAt: !4556)
!4776 = distinct !DILexicalBlock(scope: !4552, file: !125, line: 325, column: 6)
!4777 = !DILocation(line: 325, column: 6, scope: !4552, inlinedAt: !4556)
!4778 = !DILocation(line: 326, column: 3, scope: !4776, inlinedAt: !4556)
!4779 = !DILocation(line: 332, column: 9, scope: !4552, inlinedAt: !4556)
!4780 = !DILocation(line: 332, column: 15, scope: !4552, inlinedAt: !4556)
!4781 = !DILocation(line: 332, column: 2, scope: !4552, inlinedAt: !4556)
!4782 = !DILocation(line: 336, column: 1, scope: !4552, inlinedAt: !4556)
!4783 = !DILocation(line: 553, column: 5, scope: !4541, inlinedAt: !4544)
!4784 = !DILocation(line: 553, column: 41, scope: !4541, inlinedAt: !4544)
!4785 = !DILocation(line: 554, column: 5, scope: !4541, inlinedAt: !4544)
!4786 = !DILocation(line: 554, column: 12, scope: !4541, inlinedAt: !4544)
!4787 = !DILocation(line: 448, column: 31, scope: !4536, inlinedAt: !4540)
!4788 = !DILocation(line: 448, column: 34, scope: !4536, inlinedAt: !4540)
!4789 = !DILocation(line: 448, column: 14, scope: !4536, inlinedAt: !4540)
!4790 = !DILocation(line: 450, column: 22, scope: !4536, inlinedAt: !4540)
!4791 = !DILocation(line: 450, column: 25, scope: !4536, inlinedAt: !4540)
!4792 = !DILocation(line: 450, column: 30, scope: !4536, inlinedAt: !4540)
!4793 = !DILocation(line: 450, column: 36, scope: !4536, inlinedAt: !4540)
!4794 = !DILocation(line: 450, column: 8, scope: !4536, inlinedAt: !4540)
!4795 = !DILocation(line: 450, column: 6, scope: !4536, inlinedAt: !4540)
!4796 = !DILocation(line: 451, column: 9, scope: !4536, inlinedAt: !4540)
!4797 = !DILocation(line: 552, column: 3, scope: !4541, inlinedAt: !4544)
!4798 = !DILocation(line: 557, column: 19, scope: !4543, inlinedAt: !4544)
!4799 = !DILocation(line: 557, column: 25, scope: !4543, inlinedAt: !4544)
!4800 = !DILocation(line: 557, column: 9, scope: !4543, inlinedAt: !4544)
!4801 = !DILocation(line: 557, column: 2, scope: !4543, inlinedAt: !4544)
!4802 = !DILocation(line: 558, column: 1, scope: !4543, inlinedAt: !4544)
!4803 = !DILocation(line: 664, column: 2, scope: !4532)
!4804 = distinct !DISubprogram(name: "comedi_device_cancel_all", scope: !3, file: !3, line: 765, type: !197, scopeLine: 766, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4805 = !DILocalVariable(name: "dev", arg: 1, scope: !4804, file: !3, line: 765, type: !162)
!4806 = !DILocation(line: 765, column: 53, scope: !4804)
!4807 = !DILocalVariable(name: "s", scope: !4804, file: !3, line: 767, type: !3871)
!4808 = !DILocation(line: 767, column: 27, scope: !4804)
!4809 = !DILocalVariable(name: "i", scope: !4804, file: !3, line: 768, type: !166)
!4810 = !DILocation(line: 768, column: 6, scope: !4804)
!4811 = !DILocation(line: 770, column: 2, scope: !4804)
!4812 = !DILocation(line: 770, column: 2, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4804, file: !3, line: 770, column: 2)
!4814 = !DILocation(line: 771, column: 7, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4804, file: !3, line: 771, column: 6)
!4816 = !DILocation(line: 771, column: 12, scope: !4815)
!4817 = !DILocation(line: 771, column: 6, scope: !4804)
!4818 = !DILocation(line: 772, column: 3, scope: !4815)
!4819 = !DILocation(line: 774, column: 9, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4804, file: !3, line: 774, column: 2)
!4821 = !DILocation(line: 774, column: 7, scope: !4820)
!4822 = !DILocation(line: 774, column: 14, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4820, file: !3, line: 774, column: 2)
!4824 = !DILocation(line: 774, column: 18, scope: !4823)
!4825 = !DILocation(line: 774, column: 23, scope: !4823)
!4826 = !DILocation(line: 774, column: 16, scope: !4823)
!4827 = !DILocation(line: 774, column: 2, scope: !4820)
!4828 = !DILocation(line: 775, column: 8, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4823, file: !3, line: 774, column: 42)
!4830 = !DILocation(line: 775, column: 13, scope: !4829)
!4831 = !DILocation(line: 775, column: 24, scope: !4829)
!4832 = !DILocation(line: 775, column: 5, scope: !4829)
!4833 = !DILocation(line: 776, column: 7, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4829, file: !3, line: 776, column: 7)
!4835 = !DILocation(line: 776, column: 10, scope: !4834)
!4836 = !DILocation(line: 776, column: 7, scope: !4829)
!4837 = !DILocation(line: 777, column: 14, scope: !4834)
!4838 = !DILocation(line: 777, column: 19, scope: !4834)
!4839 = !DILocation(line: 777, column: 4, scope: !4834)
!4840 = !DILocation(line: 778, column: 2, scope: !4829)
!4841 = !DILocation(line: 774, column: 38, scope: !4823)
!4842 = !DILocation(line: 774, column: 2, scope: !4823)
!4843 = distinct !{!4843, !4827, !4844}
!4844 = !DILocation(line: 778, column: 2, scope: !4820)
!4845 = !DILocation(line: 779, column: 1, scope: !4804)
!4846 = distinct !DISubprogram(name: "do_cancel", scope: !3, file: !3, line: 752, type: !3985, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4847 = !DILocalVariable(name: "dev", arg: 1, scope: !4846, file: !3, line: 752, type: !162)
!4848 = !DILocation(line: 752, column: 44, scope: !4846)
!4849 = !DILocalVariable(name: "s", arg: 2, scope: !4846, file: !3, line: 752, type: !3871)
!4850 = !DILocation(line: 752, column: 74, scope: !4846)
!4851 = !DILocalVariable(name: "ret", scope: !4846, file: !3, line: 754, type: !166)
!4852 = !DILocation(line: 754, column: 6, scope: !4846)
!4853 = !DILocation(line: 756, column: 2, scope: !4846)
!4854 = !DILocation(line: 756, column: 2, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4846, file: !3, line: 756, column: 2)
!4856 = !DILocation(line: 757, column: 34, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4846, file: !3, line: 757, column: 6)
!4858 = !DILocation(line: 757, column: 6, scope: !4857)
!4859 = !DILocation(line: 757, column: 37, scope: !4857)
!4860 = !DILocation(line: 757, column: 40, scope: !4857)
!4861 = !DILocation(line: 757, column: 43, scope: !4857)
!4862 = !DILocation(line: 757, column: 6, scope: !4846)
!4863 = !DILocation(line: 758, column: 9, scope: !4857)
!4864 = !DILocation(line: 758, column: 12, scope: !4857)
!4865 = !DILocation(line: 758, column: 19, scope: !4857)
!4866 = !DILocation(line: 758, column: 24, scope: !4857)
!4867 = !DILocation(line: 758, column: 7, scope: !4857)
!4868 = !DILocation(line: 758, column: 3, scope: !4857)
!4869 = !DILocation(line: 760, column: 20, scope: !4846)
!4870 = !DILocation(line: 760, column: 25, scope: !4846)
!4871 = !DILocation(line: 760, column: 2, scope: !4846)
!4872 = !DILocation(line: 762, column: 9, scope: !4846)
!4873 = !DILocation(line: 762, column: 2, scope: !4846)
!4874 = distinct !DISubprogram(name: "comedi_event", scope: !3, file: !3, line: 3193, type: !4875, scopeLine: 3194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4875 = !DISubroutineType(types: !4876)
!4876 = !{null, !162, !3871}
!4877 = !DILocation(line: 407, column: 64, scope: !4394, inlinedAt: !4878)
!4878 = distinct !DILocation(line: 3205, column: 3, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4880, file: !3, line: 3204, column: 41)
!4880 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 3204, column: 6)
!4881 = !DILocation(line: 407, column: 84, scope: !4394, inlinedAt: !4878)
!4882 = !DILocation(line: 407, column: 64, scope: !4394, inlinedAt: !4883)
!4883 = distinct !DILocation(line: 3224, column: 2, scope: !4874)
!4884 = !DILocation(line: 407, column: 84, scope: !4394, inlinedAt: !4883)
!4885 = !DILocation(line: 327, column: 67, scope: !4403, inlinedAt: !4886)
!4886 = distinct !DILocation(line: 3200, column: 2, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4888, file: !3, line: 3200, column: 2)
!4888 = distinct !DILexicalBlock(scope: !4889, file: !3, line: 3200, column: 2)
!4889 = distinct !DILexicalBlock(scope: !4890, file: !3, line: 3200, column: 2)
!4890 = distinct !DILexicalBlock(scope: !4891, file: !3, line: 3200, column: 2)
!4891 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 3200, column: 2)
!4892 = !DILocalVariable(name: "dev", arg: 1, scope: !4874, file: !3, line: 3193, type: !162)
!4893 = !DILocation(line: 3193, column: 41, scope: !4874)
!4894 = !DILocalVariable(name: "s", arg: 2, scope: !4874, file: !3, line: 3193, type: !3871)
!4895 = !DILocation(line: 3193, column: 71, scope: !4874)
!4896 = !DILocalVariable(name: "async", scope: !4874, file: !3, line: 3195, type: !3882)
!4897 = !DILocation(line: 3195, column: 23, scope: !4874)
!4898 = !DILocation(line: 3195, column: 31, scope: !4874)
!4899 = !DILocation(line: 3195, column: 34, scope: !4874)
!4900 = !DILocalVariable(name: "events", scope: !4874, file: !3, line: 3196, type: !7)
!4901 = !DILocation(line: 3196, column: 15, scope: !4874)
!4902 = !DILocalVariable(name: "si_code", scope: !4874, file: !3, line: 3197, type: !166)
!4903 = !DILocation(line: 3197, column: 6, scope: !4874)
!4904 = !DILocalVariable(name: "flags", scope: !4874, file: !3, line: 3198, type: !203)
!4905 = !DILocation(line: 3198, column: 16, scope: !4874)
!4906 = !DILocation(line: 3200, column: 2, scope: !4874)
!4907 = !DILocation(line: 3200, column: 2, scope: !4891)
!4908 = !DILocalVariable(name: "__dummy", scope: !4909, file: !3, line: 3200, type: !203)
!4909 = distinct !DILexicalBlock(scope: !4890, file: !3, line: 3200, column: 2)
!4910 = !DILocation(line: 3200, column: 2, scope: !4909)
!4911 = !DILocalVariable(name: "__dummy2", scope: !4909, file: !3, line: 3200, type: !203)
!4912 = !DILocation(line: 3200, column: 2, scope: !4890)
!4913 = !DILocation(line: 3200, column: 2, scope: !4889)
!4914 = !DILocation(line: 3200, column: 2, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4889, file: !3, line: 3200, column: 2)
!4916 = !DILocalVariable(name: "__dummy", scope: !4917, file: !3, line: 3200, type: !203)
!4917 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 3200, column: 2)
!4918 = distinct !DILexicalBlock(scope: !4915, file: !3, line: 3200, column: 2)
!4919 = !DILocation(line: 3200, column: 2, scope: !4917)
!4920 = !DILocalVariable(name: "__dummy2", scope: !4917, file: !3, line: 3200, type: !203)
!4921 = !DILocation(line: 3200, column: 2, scope: !4918)
!4922 = !DILocation(line: 3200, column: 2, scope: !4888)
!4923 = !{i32 -2141720140}
!4924 = !DILocation(line: 3200, column: 2, scope: !4887)
!4925 = !DILocation(line: 329, column: 10, scope: !4403, inlinedAt: !4886)
!4926 = !DILocation(line: 329, column: 16, scope: !4403, inlinedAt: !4886)
!4927 = !DILocation(line: 3202, column: 11, scope: !4874)
!4928 = !DILocation(line: 3202, column: 18, scope: !4874)
!4929 = !DILocation(line: 3202, column: 9, scope: !4874)
!4930 = !DILocation(line: 3203, column: 2, scope: !4874)
!4931 = !DILocation(line: 3203, column: 9, scope: !4874)
!4932 = !DILocation(line: 3203, column: 16, scope: !4874)
!4933 = !DILocation(line: 3204, column: 37, scope: !4880)
!4934 = !DILocation(line: 3204, column: 7, scope: !4880)
!4935 = !DILocation(line: 3204, column: 6, scope: !4874)
!4936 = !DILocation(line: 3205, column: 27, scope: !4879)
!4937 = !DILocation(line: 3205, column: 30, scope: !4879)
!4938 = !DILocation(line: 3205, column: 41, scope: !4879)
!4939 = !DILocation(line: 409, column: 2, scope: !4448, inlinedAt: !4878)
!4940 = !DILocation(line: 409, column: 2, scope: !4453, inlinedAt: !4878)
!4941 = !DILocation(line: 409, column: 2, scope: !4454, inlinedAt: !4878)
!4942 = !DILocation(line: 409, column: 2, scope: !4461, inlinedAt: !4878)
!4943 = !DILocation(line: 409, column: 2, scope: !4464, inlinedAt: !4878)
!4944 = !DILocation(line: 3206, column: 3, scope: !4879)
!4945 = !DILocation(line: 3209, column: 6, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 3209, column: 6)
!4947 = !DILocation(line: 3209, column: 13, scope: !4946)
!4948 = !DILocation(line: 3209, column: 6, scope: !4874)
!4949 = !DILocation(line: 3210, column: 37, scope: !4946)
!4950 = !DILocation(line: 3210, column: 3, scope: !4946)
!4951 = !DILocation(line: 3216, column: 6, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 3216, column: 6)
!4953 = !DILocation(line: 3216, column: 13, scope: !4952)
!4954 = !DILocation(line: 3216, column: 6, scope: !4874)
!4955 = !DILocation(line: 3217, column: 35, scope: !4952)
!4956 = !DILocation(line: 3217, column: 3, scope: !4952)
!4957 = !DILocation(line: 3219, column: 6, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 3219, column: 6)
!4959 = !DILocation(line: 3219, column: 13, scope: !4958)
!4960 = !DILocation(line: 3219, column: 23, scope: !4958)
!4961 = !DILocation(line: 3219, column: 21, scope: !4958)
!4962 = !DILocation(line: 3219, column: 6, scope: !4874)
!4963 = !DILocation(line: 3220, column: 3, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4958, file: !3, line: 3219, column: 31)
!4965 = !DILocation(line: 3221, column: 13, scope: !4964)
!4966 = !DILocation(line: 3221, column: 20, scope: !4964)
!4967 = !DILocation(line: 3221, column: 24, scope: !4964)
!4968 = !DILocation(line: 3221, column: 30, scope: !4964)
!4969 = !DILocation(line: 3221, column: 11, scope: !4964)
!4970 = !DILocation(line: 3222, column: 2, scope: !4964)
!4971 = !DILocation(line: 3224, column: 26, scope: !4874)
!4972 = !DILocation(line: 3224, column: 29, scope: !4874)
!4973 = !DILocation(line: 3224, column: 40, scope: !4874)
!4974 = !DILocation(line: 409, column: 2, scope: !4448, inlinedAt: !4883)
!4975 = !DILocation(line: 409, column: 2, scope: !4453, inlinedAt: !4883)
!4976 = !DILocation(line: 409, column: 2, scope: !4454, inlinedAt: !4883)
!4977 = !DILocation(line: 409, column: 2, scope: !4461, inlinedAt: !4883)
!4978 = !DILocation(line: 409, column: 2, scope: !4464, inlinedAt: !4883)
!4979 = !DILocation(line: 3226, column: 6, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 3226, column: 6)
!4981 = !DILocation(line: 3226, column: 6, scope: !4874)
!4982 = !DILocation(line: 3227, column: 16, scope: !4980)
!4983 = !DILocation(line: 3227, column: 21, scope: !4980)
!4984 = !DILocation(line: 3227, column: 41, scope: !4980)
!4985 = !DILocation(line: 3227, column: 3, scope: !4980)
!4986 = !DILocation(line: 3228, column: 1, scope: !4874)
!4987 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !4988, file: !4988, line: 666, type: !4989, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4988 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!4989 = !DISubroutineType(types: !4990)
!4990 = !{!203}
!4991 = !DILocalVariable(name: "f", scope: !4987, file: !4988, line: 668, type: !203)
!4992 = !DILocation(line: 668, column: 16, scope: !4987)
!4993 = !DILocation(line: 670, column: 6, scope: !4987)
!4994 = !DILocation(line: 670, column: 4, scope: !4987)
!4995 = !DILocation(line: 671, column: 2, scope: !4987)
!4996 = !DILocation(line: 672, column: 9, scope: !4987)
!4997 = !DILocation(line: 672, column: 2, scope: !4987)
!4998 = distinct !DISubprogram(name: "__comedi_is_subdevice_running", scope: !3, file: !3, line: 679, type: !4379, scopeLine: 680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!4999 = !DILocalVariable(name: "s", arg: 1, scope: !4998, file: !3, line: 679, type: !3871)
!5000 = !DILocation(line: 679, column: 68, scope: !4998)
!5001 = !DILocalVariable(name: "runflags", scope: !4998, file: !3, line: 681, type: !7)
!5002 = !DILocation(line: 681, column: 15, scope: !4998)
!5003 = !DILocation(line: 681, column: 58, scope: !4998)
!5004 = !DILocation(line: 681, column: 26, scope: !4998)
!5005 = !DILocation(line: 683, column: 36, scope: !4998)
!5006 = !DILocation(line: 683, column: 9, scope: !4998)
!5007 = !DILocation(line: 683, column: 2, scope: !4998)
!5008 = distinct !DISubprogram(name: "__comedi_clear_subdevice_runflags", scope: !3, file: !3, line: 614, type: !4500, scopeLine: 616, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5009 = !DILocalVariable(name: "s", arg: 1, scope: !5008, file: !3, line: 614, type: !3871)
!5010 = !DILocation(line: 614, column: 72, scope: !5008)
!5011 = !DILocalVariable(name: "bits", arg: 2, scope: !5008, file: !3, line: 615, type: !7)
!5012 = !DILocation(line: 615, column: 25, scope: !5008)
!5013 = !DILocation(line: 617, column: 18, scope: !5008)
!5014 = !DILocation(line: 617, column: 17, scope: !5008)
!5015 = !DILocation(line: 617, column: 2, scope: !5008)
!5016 = !DILocation(line: 617, column: 5, scope: !5008)
!5017 = !DILocation(line: 617, column: 14, scope: !5008)
!5018 = !DILocation(line: 618, column: 1, scope: !5008)
!5019 = distinct !DISubprogram(name: "comedi_alloc_board_minor", scope: !3, file: !3, line: 3232, type: !5020, scopeLine: 3233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5020 = !DISubroutineType(types: !5021)
!5021 = !{!162, !214}
!5022 = !DILocalVariable(name: "hardware_device", arg: 1, scope: !5019, file: !3, line: 3232, type: !214)
!5023 = !DILocation(line: 3232, column: 63, scope: !5019)
!5024 = !DILocalVariable(name: "dev", scope: !5019, file: !3, line: 3234, type: !162)
!5025 = !DILocation(line: 3234, column: 24, scope: !5019)
!5026 = !DILocalVariable(name: "csdev", scope: !5019, file: !3, line: 3235, type: !214)
!5027 = !DILocation(line: 3235, column: 17, scope: !5019)
!5028 = !DILocalVariable(name: "i", scope: !5019, file: !3, line: 3236, type: !7)
!5029 = !DILocation(line: 3236, column: 15, scope: !5019)
!5030 = !DILocation(line: 3238, column: 8, scope: !5019)
!5031 = !DILocation(line: 3238, column: 6, scope: !5019)
!5032 = !DILocation(line: 3239, column: 7, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 3239, column: 6)
!5034 = !DILocation(line: 3239, column: 6, scope: !5019)
!5035 = !DILocation(line: 3240, column: 10, scope: !5033)
!5036 = !DILocation(line: 3240, column: 3, scope: !5033)
!5037 = !DILocation(line: 3241, column: 21, scope: !5019)
!5038 = !DILocation(line: 3241, column: 2, scope: !5019)
!5039 = !DILocation(line: 3242, column: 20, scope: !5019)
!5040 = !DILocation(line: 3242, column: 25, scope: !5019)
!5041 = !DILocation(line: 3242, column: 2, scope: !5019)
!5042 = !DILocation(line: 3243, column: 14, scope: !5019)
!5043 = !DILocation(line: 3243, column: 19, scope: !5019)
!5044 = !DILocation(line: 3243, column: 2, scope: !5019)
!5045 = !DILocation(line: 3244, column: 2, scope: !5019)
!5046 = !DILocation(line: 3245, column: 11, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 3245, column: 2)
!5048 = !DILocation(line: 3245, column: 29, scope: !5047)
!5049 = !DILocation(line: 3245, column: 9, scope: !5047)
!5050 = !DILocation(line: 3245, column: 7, scope: !5047)
!5051 = !DILocation(line: 3246, column: 7, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5047, file: !3, line: 3245, column: 2)
!5053 = !DILocation(line: 3246, column: 9, scope: !5052)
!5054 = !DILocation(line: 3245, column: 2, scope: !5047)
!5055 = !DILocation(line: 3247, column: 33, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5057, file: !3, line: 3247, column: 7)
!5057 = distinct !DILexicalBlock(scope: !5052, file: !3, line: 3246, column: 41)
!5058 = !DILocation(line: 3247, column: 8, scope: !5056)
!5059 = !DILocation(line: 3247, column: 7, scope: !5057)
!5060 = !DILocation(line: 3248, column: 34, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5056, file: !3, line: 3247, column: 37)
!5062 = !DILocation(line: 3248, column: 29, scope: !5061)
!5063 = !DILocation(line: 3248, column: 4, scope: !5061)
!5064 = !DILocation(line: 3248, column: 32, scope: !5061)
!5065 = !DILocation(line: 3249, column: 4, scope: !5061)
!5066 = !DILocation(line: 3251, column: 2, scope: !5057)
!5067 = !DILocation(line: 3246, column: 36, scope: !5052)
!5068 = !DILocation(line: 3245, column: 2, scope: !5052)
!5069 = distinct !{!5069, !5054, !5070}
!5070 = !DILocation(line: 3251, column: 2, scope: !5047)
!5071 = !DILocation(line: 3252, column: 2, scope: !5019)
!5072 = !DILocation(line: 3253, column: 6, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 3253, column: 6)
!5074 = !DILocation(line: 3253, column: 8, scope: !5073)
!5075 = !DILocation(line: 3253, column: 6, scope: !5019)
!5076 = !DILocation(line: 3254, column: 17, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5073, file: !3, line: 3253, column: 36)
!5078 = !DILocation(line: 3254, column: 22, scope: !5077)
!5079 = !DILocation(line: 3254, column: 3, scope: !5077)
!5080 = !DILocation(line: 3255, column: 25, scope: !5077)
!5081 = !DILocation(line: 3255, column: 3, scope: !5077)
!5082 = !DILocation(line: 3256, column: 18, scope: !5077)
!5083 = !DILocation(line: 3256, column: 3, scope: !5077)
!5084 = !DILocation(line: 3257, column: 3, scope: !5077)
!5085 = !DILocation(line: 3259, column: 10, scope: !5077)
!5086 = !DILocation(line: 3259, column: 3, scope: !5077)
!5087 = !DILocation(line: 3261, column: 15, scope: !5019)
!5088 = !DILocation(line: 3261, column: 2, scope: !5019)
!5089 = !DILocation(line: 3261, column: 7, scope: !5019)
!5090 = !DILocation(line: 3261, column: 13, scope: !5019)
!5091 = !DILocation(line: 3262, column: 24, scope: !5019)
!5092 = !DILocation(line: 3262, column: 38, scope: !5019)
!5093 = !DILocation(line: 3263, column: 10, scope: !5019)
!5094 = !DILocation(line: 3263, column: 52, scope: !5019)
!5095 = !DILocation(line: 3262, column: 10, scope: !5019)
!5096 = !DILocation(line: 3262, column: 8, scope: !5019)
!5097 = !DILocation(line: 3264, column: 14, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 3264, column: 6)
!5099 = !DILocation(line: 3264, column: 7, scope: !5098)
!5100 = !DILocation(line: 3264, column: 6, scope: !5019)
!5101 = !DILocation(line: 3265, column: 31, scope: !5098)
!5102 = !DILocation(line: 3265, column: 20, scope: !5098)
!5103 = !DILocation(line: 3265, column: 3, scope: !5098)
!5104 = !DILocation(line: 3265, column: 8, scope: !5098)
!5105 = !DILocation(line: 3265, column: 18, scope: !5098)
!5106 = !DILocation(line: 3268, column: 9, scope: !5019)
!5107 = !DILocation(line: 3268, column: 2, scope: !5019)
!5108 = !DILocation(line: 3269, column: 1, scope: !5019)
!5109 = distinct !DISubprogram(name: "ERR_PTR", scope: !5110, file: !5110, line: 24, type: !5111, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5110 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!5111 = !DISubroutineType(types: !5112)
!5112 = !{!161, !312}
!5113 = !DILocalVariable(name: "error", arg: 1, scope: !5109, file: !5110, line: 24, type: !312)
!5114 = !DILocation(line: 24, column: 48, scope: !5109)
!5115 = !DILocation(line: 26, column: 18, scope: !5109)
!5116 = !DILocation(line: 26, column: 9, scope: !5109)
!5117 = !DILocation(line: 26, column: 2, scope: !5109)
!5118 = !DILocation(line: 327, column: 67, scope: !4403, inlinedAt: !5119)
!5119 = distinct !DILocation(line: 106, column: 2, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !4220, file: !3, line: 106, column: 2)
!5121 = !DILocalVariable(name: "dev", arg: 1, scope: !4220, file: !3, line: 103, type: !162)
!5122 = !DILocation(line: 103, column: 54, scope: !4220)
!5123 = !DILocation(line: 105, column: 13, scope: !4220)
!5124 = !DILocation(line: 105, column: 18, scope: !4220)
!5125 = !DILocation(line: 105, column: 2, scope: !4220)
!5126 = !DILocation(line: 106, column: 2, scope: !4220)
!5127 = !DILocation(line: 106, column: 2, scope: !5120)
!5128 = !DILocation(line: 329, column: 10, scope: !4403, inlinedAt: !5119)
!5129 = !DILocation(line: 329, column: 16, scope: !4403, inlinedAt: !5119)
!5130 = !DILocation(line: 107, column: 2, scope: !4220)
!5131 = !DILocation(line: 107, column: 2, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !4220, file: !3, line: 107, column: 2)
!5133 = !DILocation(line: 108, column: 2, scope: !4220)
!5134 = !DILocation(line: 108, column: 2, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !4220, file: !3, line: 108, column: 2)
!5136 = !DILocation(line: 109, column: 2, scope: !4220)
!5137 = !DILocation(line: 109, column: 7, scope: !4220)
!5138 = !DILocation(line: 109, column: 13, scope: !4220)
!5139 = !DILocation(line: 110, column: 1, scope: !4220)
!5140 = distinct !DISubprogram(name: "comedi_device_cleanup", scope: !3, file: !3, line: 149, type: !197, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5141 = !DILocalVariable(name: "dev", arg: 1, scope: !5140, file: !3, line: 149, type: !162)
!5142 = !DILocation(line: 149, column: 57, scope: !5140)
!5143 = !DILocalVariable(name: "driver_module", scope: !5140, file: !3, line: 151, type: !177)
!5144 = !DILocation(line: 151, column: 17, scope: !5140)
!5145 = !DILocation(line: 153, column: 7, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 153, column: 6)
!5147 = !DILocation(line: 153, column: 6, scope: !5140)
!5148 = !DILocation(line: 154, column: 3, scope: !5146)
!5149 = !DILocation(line: 155, column: 14, scope: !5140)
!5150 = !DILocation(line: 155, column: 19, scope: !5140)
!5151 = !DILocation(line: 155, column: 2, scope: !5140)
!5152 = !DILocation(line: 156, column: 6, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 156, column: 6)
!5154 = !DILocation(line: 156, column: 11, scope: !5153)
!5155 = !DILocation(line: 156, column: 6, scope: !5140)
!5156 = !DILocation(line: 157, column: 19, scope: !5153)
!5157 = !DILocation(line: 157, column: 24, scope: !5153)
!5158 = !DILocation(line: 157, column: 32, scope: !5153)
!5159 = !DILocation(line: 157, column: 17, scope: !5153)
!5160 = !DILocation(line: 157, column: 3, scope: !5153)
!5161 = !DILocation(line: 158, column: 23, scope: !5140)
!5162 = !DILocation(line: 158, column: 2, scope: !5140)
!5163 = !DILocation(line: 159, column: 6, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 159, column: 6)
!5165 = !DILocation(line: 159, column: 20, scope: !5164)
!5166 = !DILocation(line: 159, column: 23, scope: !5164)
!5167 = !DILocation(line: 159, column: 28, scope: !5164)
!5168 = !DILocation(line: 159, column: 6, scope: !5140)
!5169 = !DILocation(line: 160, column: 14, scope: !5164)
!5170 = !DILocation(line: 160, column: 3, scope: !5164)
!5171 = !DILocation(line: 161, column: 16, scope: !5140)
!5172 = !DILocation(line: 161, column: 21, scope: !5140)
!5173 = !DILocation(line: 161, column: 2, scope: !5140)
!5174 = !DILocation(line: 162, column: 1, scope: !5140)
!5175 = distinct !DISubprogram(name: "IS_ERR", scope: !5110, file: !5110, line: 34, type: !5176, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5176 = !DISubroutineType(types: !5177)
!5177 = !{!492, !2172}
!5178 = !DILocalVariable(name: "ptr", arg: 1, scope: !5175, file: !5110, line: 34, type: !2172)
!5179 = !DILocation(line: 34, column: 60, scope: !5175)
!5180 = !DILocation(line: 36, column: 9, scope: !5175)
!5181 = !DILocation(line: 36, column: 2, scope: !5175)
!5182 = distinct !DISubprogram(name: "comedi_release_hardware_device", scope: !3, file: !3, line: 3271, type: !3452, scopeLine: 3272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5183 = !DILocalVariable(name: "hardware_device", arg: 1, scope: !5182, file: !3, line: 3271, type: !214)
!5184 = !DILocation(line: 3271, column: 52, scope: !5182)
!5185 = !DILocalVariable(name: "minor", scope: !5182, file: !3, line: 3273, type: !166)
!5186 = !DILocation(line: 3273, column: 6, scope: !5182)
!5187 = !DILocalVariable(name: "dev", scope: !5182, file: !3, line: 3274, type: !162)
!5188 = !DILocation(line: 3274, column: 24, scope: !5182)
!5189 = !DILocation(line: 3276, column: 15, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 3276, column: 2)
!5191 = !DILocation(line: 3276, column: 13, scope: !5190)
!5192 = !DILocation(line: 3276, column: 7, scope: !5190)
!5193 = !DILocation(line: 3276, column: 41, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5190, file: !3, line: 3276, column: 2)
!5195 = !DILocation(line: 3276, column: 47, scope: !5194)
!5196 = !DILocation(line: 3276, column: 2, scope: !5190)
!5197 = !DILocation(line: 3278, column: 3, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5194, file: !3, line: 3277, column: 16)
!5199 = !DILocation(line: 3279, column: 34, scope: !5198)
!5200 = !DILocation(line: 3279, column: 9, scope: !5198)
!5201 = !DILocation(line: 3279, column: 7, scope: !5198)
!5202 = !DILocation(line: 3280, column: 7, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5198, file: !3, line: 3280, column: 7)
!5204 = !DILocation(line: 3280, column: 11, scope: !5203)
!5205 = !DILocation(line: 3280, column: 14, scope: !5203)
!5206 = !DILocation(line: 3280, column: 19, scope: !5203)
!5207 = !DILocation(line: 3280, column: 29, scope: !5203)
!5208 = !DILocation(line: 3280, column: 26, scope: !5203)
!5209 = !DILocation(line: 3280, column: 7, scope: !5198)
!5210 = !DILocation(line: 3281, column: 29, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5203, file: !3, line: 3280, column: 46)
!5212 = !DILocation(line: 3281, column: 4, scope: !5211)
!5213 = !DILocation(line: 3281, column: 36, scope: !5211)
!5214 = !DILocation(line: 3282, column: 4, scope: !5211)
!5215 = !DILocation(line: 3283, column: 26, scope: !5211)
!5216 = !DILocation(line: 3283, column: 4, scope: !5211)
!5217 = !DILocation(line: 3284, column: 4, scope: !5211)
!5218 = !DILocation(line: 3286, column: 3, scope: !5198)
!5219 = !DILocation(line: 3287, column: 2, scope: !5198)
!5220 = !DILocation(line: 3277, column: 12, scope: !5194)
!5221 = !DILocation(line: 3276, column: 2, scope: !5194)
!5222 = distinct !{!5222, !5196, !5223}
!5223 = !DILocation(line: 3287, column: 2, scope: !5190)
!5224 = !DILocation(line: 3288, column: 1, scope: !5182)
!5225 = distinct !DISubprogram(name: "comedi_free_board_dev", scope: !3, file: !3, line: 190, type: !197, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5226 = !DILocalVariable(name: "dev", arg: 1, scope: !5225, file: !3, line: 190, type: !162)
!5227 = !DILocation(line: 190, column: 57, scope: !5225)
!5228 = !DILocation(line: 192, column: 6, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5225, file: !3, line: 192, column: 6)
!5230 = !DILocation(line: 192, column: 6, scope: !5225)
!5231 = !DILocation(line: 193, column: 25, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 192, column: 11)
!5233 = !DILocation(line: 193, column: 3, scope: !5232)
!5234 = !DILocation(line: 194, column: 7, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 194, column: 7)
!5236 = !DILocation(line: 194, column: 12, scope: !5235)
!5237 = !DILocation(line: 194, column: 7, scope: !5232)
!5238 = !DILocation(line: 195, column: 19, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5235, file: !3, line: 194, column: 23)
!5240 = !DILocation(line: 196, column: 12, scope: !5239)
!5241 = !DILocation(line: 195, column: 4, scope: !5239)
!5242 = !DILocation(line: 197, column: 3, scope: !5239)
!5243 = !DILocation(line: 198, column: 18, scope: !5232)
!5244 = !DILocation(line: 198, column: 3, scope: !5232)
!5245 = !DILocation(line: 199, column: 2, scope: !5232)
!5246 = !DILocation(line: 200, column: 1, scope: !5225)
!5247 = distinct !DISubprogram(name: "comedi_alloc_subdevice_minor", scope: !3, file: !3, line: 3290, type: !5248, scopeLine: 3291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5248 = !DISubroutineType(types: !5249)
!5249 = !{!166, !3871}
!5250 = !DILocalVariable(name: "s", arg: 1, scope: !5247, file: !3, line: 3290, type: !3871)
!5251 = !DILocation(line: 3290, column: 59, scope: !5247)
!5252 = !DILocalVariable(name: "dev", scope: !5247, file: !3, line: 3292, type: !162)
!5253 = !DILocation(line: 3292, column: 24, scope: !5247)
!5254 = !DILocation(line: 3292, column: 30, scope: !5247)
!5255 = !DILocation(line: 3292, column: 33, scope: !5247)
!5256 = !DILocalVariable(name: "csdev", scope: !5247, file: !3, line: 3293, type: !214)
!5257 = !DILocation(line: 3293, column: 17, scope: !5247)
!5258 = !DILocalVariable(name: "i", scope: !5247, file: !3, line: 3294, type: !7)
!5259 = !DILocation(line: 3294, column: 15, scope: !5247)
!5260 = !DILocation(line: 3296, column: 2, scope: !5247)
!5261 = !DILocation(line: 3297, column: 9, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5247, file: !3, line: 3297, column: 2)
!5263 = !DILocation(line: 3297, column: 7, scope: !5262)
!5264 = !DILocation(line: 3297, column: 14, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5262, file: !3, line: 3297, column: 2)
!5266 = !DILocation(line: 3297, column: 16, scope: !5265)
!5267 = !DILocation(line: 3297, column: 2, scope: !5262)
!5268 = !DILocation(line: 3298, column: 37, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 3298, column: 7)
!5270 = distinct !DILexicalBlock(scope: !5265, file: !3, line: 3297, column: 52)
!5271 = !DILocation(line: 3298, column: 8, scope: !5269)
!5272 = !DILocation(line: 3298, column: 7, scope: !5270)
!5273 = !DILocation(line: 3299, column: 38, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5269, file: !3, line: 3298, column: 41)
!5275 = !DILocation(line: 3299, column: 33, scope: !5274)
!5276 = !DILocation(line: 3299, column: 4, scope: !5274)
!5277 = !DILocation(line: 3299, column: 36, scope: !5274)
!5278 = !DILocation(line: 3300, column: 4, scope: !5274)
!5279 = !DILocation(line: 3302, column: 2, scope: !5270)
!5280 = !DILocation(line: 3297, column: 47, scope: !5265)
!5281 = !DILocation(line: 3297, column: 2, scope: !5265)
!5282 = distinct !{!5282, !5267, !5283}
!5283 = !DILocation(line: 3302, column: 2, scope: !5262)
!5284 = !DILocation(line: 3303, column: 2, scope: !5247)
!5285 = !DILocation(line: 3304, column: 6, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5247, file: !3, line: 3304, column: 6)
!5287 = !DILocation(line: 3304, column: 8, scope: !5286)
!5288 = !DILocation(line: 3304, column: 6, scope: !5247)
!5289 = !DILocation(line: 3305, column: 3, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5286, file: !3, line: 3304, column: 40)
!5291 = !DILocation(line: 3307, column: 3, scope: !5290)
!5292 = !DILocation(line: 3309, column: 4, scope: !5247)
!5293 = !DILocation(line: 3310, column: 13, scope: !5247)
!5294 = !DILocation(line: 3310, column: 2, scope: !5247)
!5295 = !DILocation(line: 3310, column: 5, scope: !5247)
!5296 = !DILocation(line: 3310, column: 11, scope: !5247)
!5297 = !DILocation(line: 3311, column: 24, scope: !5247)
!5298 = !DILocation(line: 3311, column: 38, scope: !5247)
!5299 = !DILocation(line: 3311, column: 43, scope: !5247)
!5300 = !DILocation(line: 3312, column: 10, scope: !5247)
!5301 = !DILocation(line: 3313, column: 10, scope: !5247)
!5302 = !DILocation(line: 3313, column: 15, scope: !5247)
!5303 = !DILocation(line: 3313, column: 22, scope: !5247)
!5304 = !DILocation(line: 3313, column: 25, scope: !5247)
!5305 = !DILocation(line: 3311, column: 10, scope: !5247)
!5306 = !DILocation(line: 3311, column: 8, scope: !5247)
!5307 = !DILocation(line: 3314, column: 14, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5247, file: !3, line: 3314, column: 6)
!5309 = !DILocation(line: 3314, column: 7, scope: !5308)
!5310 = !DILocation(line: 3314, column: 6, scope: !5247)
!5311 = !DILocation(line: 3315, column: 18, scope: !5308)
!5312 = !DILocation(line: 3315, column: 3, scope: !5308)
!5313 = !DILocation(line: 3315, column: 6, scope: !5308)
!5314 = !DILocation(line: 3315, column: 16, scope: !5308)
!5315 = !DILocation(line: 3317, column: 2, scope: !5247)
!5316 = !DILocation(line: 3318, column: 1, scope: !5247)
!5317 = distinct !DISubprogram(name: "comedi_free_subdevice_minor", scope: !3, file: !3, line: 3320, type: !4492, scopeLine: 3321, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5318 = !DILocalVariable(name: "s", arg: 1, scope: !5317, file: !3, line: 3320, type: !3871)
!5319 = !DILocation(line: 3320, column: 59, scope: !5317)
!5320 = !DILocalVariable(name: "i", scope: !5317, file: !3, line: 3322, type: !7)
!5321 = !DILocation(line: 3322, column: 15, scope: !5317)
!5322 = !DILocation(line: 3324, column: 7, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 3324, column: 6)
!5324 = !DILocation(line: 3324, column: 6, scope: !5317)
!5325 = !DILocation(line: 3325, column: 3, scope: !5323)
!5326 = !DILocation(line: 3326, column: 6, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 3326, column: 6)
!5328 = !DILocation(line: 3326, column: 9, scope: !5327)
!5329 = !DILocation(line: 3326, column: 15, scope: !5327)
!5330 = !DILocation(line: 3326, column: 41, scope: !5327)
!5331 = !DILocation(line: 3327, column: 6, scope: !5327)
!5332 = !DILocation(line: 3327, column: 9, scope: !5327)
!5333 = !DILocation(line: 3327, column: 15, scope: !5327)
!5334 = !DILocation(line: 3326, column: 6, scope: !5317)
!5335 = !DILocation(line: 3328, column: 3, scope: !5327)
!5336 = !DILocation(line: 3330, column: 6, scope: !5317)
!5337 = !DILocation(line: 3330, column: 9, scope: !5317)
!5338 = !DILocation(line: 3330, column: 15, scope: !5317)
!5339 = !DILocation(line: 3330, column: 4, scope: !5317)
!5340 = !DILocation(line: 3331, column: 2, scope: !5317)
!5341 = !DILocation(line: 3332, column: 6, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 3332, column: 6)
!5343 = !DILocation(line: 3332, column: 40, scope: !5342)
!5344 = !DILocation(line: 3332, column: 11, scope: !5342)
!5345 = !DILocation(line: 3332, column: 8, scope: !5342)
!5346 = !DILocation(line: 3332, column: 6, scope: !5317)
!5347 = !DILocation(line: 3333, column: 32, scope: !5342)
!5348 = !DILocation(line: 3333, column: 3, scope: !5342)
!5349 = !DILocation(line: 3333, column: 35, scope: !5342)
!5350 = !DILocation(line: 3334, column: 2, scope: !5317)
!5351 = !DILocation(line: 3335, column: 6, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 3335, column: 6)
!5353 = !DILocation(line: 3335, column: 9, scope: !5352)
!5354 = !DILocation(line: 3335, column: 6, scope: !5317)
!5355 = !DILocation(line: 3336, column: 18, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5352, file: !3, line: 3335, column: 20)
!5357 = !DILocation(line: 3336, column: 32, scope: !5356)
!5358 = !DILocation(line: 3336, column: 3, scope: !5356)
!5359 = !DILocation(line: 3337, column: 3, scope: !5356)
!5360 = !DILocation(line: 3337, column: 6, scope: !5356)
!5361 = !DILocation(line: 3337, column: 16, scope: !5356)
!5362 = !DILocation(line: 3338, column: 2, scope: !5356)
!5363 = !DILocation(line: 3339, column: 1, scope: !5317)
!5364 = !DILocalVariable(name: "i", scope: !4229, file: !3, line: 3354, type: !166)
!5365 = !DILocation(line: 3354, column: 6, scope: !4229)
!5366 = !DILocalVariable(name: "retval", scope: !4229, file: !3, line: 3355, type: !166)
!5367 = !DILocation(line: 3355, column: 6, scope: !4229)
!5368 = !DILocation(line: 3357, column: 2, scope: !4229)
!5369 = !DILocation(line: 3359, column: 6, scope: !5370)
!5370 = distinct !DILexicalBlock(scope: !4229, file: !3, line: 3359, column: 6)
!5371 = !DILocation(line: 3359, column: 31, scope: !5370)
!5372 = !DILocation(line: 3359, column: 6, scope: !4229)
!5373 = !DILocation(line: 3360, column: 3, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5370, file: !3, line: 3359, column: 58)
!5375 = !DILocation(line: 3362, column: 3, scope: !5374)
!5376 = !DILocation(line: 3365, column: 11, scope: !4229)
!5377 = !DILocation(line: 3365, column: 9, scope: !4229)
!5378 = !DILocation(line: 3367, column: 6, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !4229, file: !3, line: 3367, column: 6)
!5380 = !DILocation(line: 3367, column: 6, scope: !4229)
!5381 = !DILocation(line: 3368, column: 10, scope: !5379)
!5382 = !DILocation(line: 3368, column: 3, scope: !5379)
!5383 = !DILocation(line: 3370, column: 2, scope: !4229)
!5384 = !DILocation(line: 3371, column: 20, scope: !4229)
!5385 = !DILocation(line: 3373, column: 11, scope: !4229)
!5386 = !DILocation(line: 3373, column: 9, scope: !4229)
!5387 = !DILocation(line: 3374, column: 6, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !4229, file: !3, line: 3374, column: 6)
!5389 = !DILocation(line: 3374, column: 6, scope: !4229)
!5390 = !DILocation(line: 3375, column: 3, scope: !5388)
!5391 = !DILocation(line: 3377, column: 11, scope: !4229)
!5392 = !DILocation(line: 3377, column: 9, scope: !4229)
!5393 = !DILocation(line: 3379, column: 6, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !4229, file: !3, line: 3379, column: 6)
!5395 = !DILocation(line: 3379, column: 6, scope: !4229)
!5396 = !DILocation(line: 3380, column: 3, scope: !5394)
!5397 = !DILocation(line: 3382, column: 17, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !4229, file: !3, line: 3382, column: 17)
!5399 = !DILocation(line: 3382, column: 15, scope: !4229)
!5400 = !DILocation(line: 3383, column: 13, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !4229, file: !3, line: 3383, column: 6)
!5402 = !DILocation(line: 3383, column: 6, scope: !5401)
!5403 = !DILocation(line: 3383, column: 6, scope: !4229)
!5404 = !DILocation(line: 3384, column: 20, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5401, file: !3, line: 3383, column: 28)
!5406 = !DILocation(line: 3384, column: 12, scope: !5405)
!5407 = !DILocation(line: 3384, column: 10, scope: !5405)
!5408 = !DILocation(line: 3385, column: 3, scope: !5405)
!5409 = !DILocation(line: 3386, column: 3, scope: !5405)
!5410 = !DILocation(line: 3389, column: 2, scope: !4229)
!5411 = !DILocation(line: 3389, column: 16, scope: !4229)
!5412 = !DILocation(line: 3389, column: 27, scope: !4229)
!5413 = !DILocation(line: 3392, column: 9, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !4229, file: !3, line: 3392, column: 2)
!5415 = !DILocation(line: 3392, column: 7, scope: !5414)
!5416 = !DILocation(line: 3392, column: 14, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5414, file: !3, line: 3392, column: 2)
!5418 = !DILocation(line: 3392, column: 18, scope: !5417)
!5419 = !DILocation(line: 3392, column: 16, scope: !5417)
!5420 = !DILocation(line: 3392, column: 2, scope: !5414)
!5421 = !DILocalVariable(name: "dev", scope: !5422, file: !3, line: 3393, type: !162)
!5422 = distinct !DILexicalBlock(scope: !5417, file: !3, line: 3392, column: 49)
!5423 = !DILocation(line: 3393, column: 25, scope: !5422)
!5424 = !DILocation(line: 3395, column: 9, scope: !5422)
!5425 = !DILocation(line: 3395, column: 7, scope: !5422)
!5426 = !DILocation(line: 3396, column: 14, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 3396, column: 7)
!5428 = !DILocation(line: 3396, column: 7, scope: !5427)
!5429 = !DILocation(line: 3396, column: 7, scope: !5422)
!5430 = !DILocation(line: 3397, column: 21, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5427, file: !3, line: 3396, column: 20)
!5432 = !DILocation(line: 3397, column: 13, scope: !5431)
!5433 = !DILocation(line: 3397, column: 11, scope: !5431)
!5434 = !DILocation(line: 3398, column: 4, scope: !5431)
!5435 = !DILocation(line: 3401, column: 3, scope: !5422)
!5436 = !DILocation(line: 3401, column: 3, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 3401, column: 3)
!5438 = !DILocation(line: 3402, column: 17, scope: !5422)
!5439 = !DILocation(line: 3402, column: 22, scope: !5422)
!5440 = !DILocation(line: 3402, column: 3, scope: !5422)
!5441 = !DILocation(line: 3403, column: 2, scope: !5422)
!5442 = !DILocation(line: 3392, column: 45, scope: !5417)
!5443 = !DILocation(line: 3392, column: 2, scope: !5417)
!5444 = distinct !{!5444, !5420, !5445}
!5445 = !DILocation(line: 3403, column: 2, scope: !5414)
!5446 = !DILocation(line: 3406, column: 2, scope: !4229)
!5447 = !DILocation(line: 3408, column: 2, scope: !4229)
!5448 = !DILabel(scope: !4229, name: "out_cleanup_board_minors", file: !3, line: 3410)
!5449 = !DILocation(line: 3410, column: 1, scope: !4229)
!5450 = !DILocation(line: 3411, column: 2, scope: !4229)
!5451 = !DILocation(line: 3412, column: 16, scope: !4229)
!5452 = !DILocation(line: 3412, column: 2, scope: !4229)
!5453 = !DILabel(scope: !4229, name: "out_cdev_del", file: !3, line: 3413)
!5454 = !DILocation(line: 3413, column: 1, scope: !4229)
!5455 = !DILocation(line: 3414, column: 2, scope: !4229)
!5456 = !DILabel(scope: !4229, name: "out_unregister_chrdev_region", file: !3, line: 3415)
!5457 = !DILocation(line: 3415, column: 1, scope: !4229)
!5458 = !DILocation(line: 3416, column: 2, scope: !4229)
!5459 = !DILocation(line: 3417, column: 9, scope: !4229)
!5460 = !DILocation(line: 3417, column: 2, scope: !4229)
!5461 = !DILocation(line: 3418, column: 1, scope: !4229)
!5462 = distinct !DISubprogram(name: "comedi_cleanup", scope: !3, file: !3, line: 3421, type: !1925, scopeLine: 3422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5463 = !DILocation(line: 3423, column: 2, scope: !5462)
!5464 = !DILocation(line: 3424, column: 16, scope: !5462)
!5465 = !DILocation(line: 3424, column: 2, scope: !5462)
!5466 = !DILocation(line: 3425, column: 2, scope: !5462)
!5467 = !DILocation(line: 3426, column: 2, scope: !5462)
!5468 = !DILocation(line: 3428, column: 2, scope: !5462)
!5469 = !DILocation(line: 3429, column: 1, scope: !5462)
!5470 = distinct !DISubprogram(name: "comedi_cleanup_board_minors", scope: !3, file: !3, line: 3341, type: !1925, scopeLine: 3342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5471 = !DILocalVariable(name: "dev", scope: !5470, file: !3, line: 3343, type: !162)
!5472 = !DILocation(line: 3343, column: 24, scope: !5470)
!5473 = !DILocalVariable(name: "i", scope: !5470, file: !3, line: 3344, type: !7)
!5474 = !DILocation(line: 3344, column: 15, scope: !5470)
!5475 = !DILocation(line: 3346, column: 9, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5470, file: !3, line: 3346, column: 2)
!5477 = !DILocation(line: 3346, column: 7, scope: !5476)
!5478 = !DILocation(line: 3346, column: 14, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5476, file: !3, line: 3346, column: 2)
!5480 = !DILocation(line: 3346, column: 16, scope: !5479)
!5481 = !DILocation(line: 3346, column: 2, scope: !5476)
!5482 = !DILocation(line: 3347, column: 34, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 3346, column: 48)
!5484 = !DILocation(line: 3347, column: 9, scope: !5483)
!5485 = !DILocation(line: 3347, column: 7, scope: !5483)
!5486 = !DILocation(line: 3348, column: 25, scope: !5483)
!5487 = !DILocation(line: 3348, column: 3, scope: !5483)
!5488 = !DILocation(line: 3349, column: 2, scope: !5483)
!5489 = !DILocation(line: 3346, column: 44, scope: !5479)
!5490 = !DILocation(line: 3346, column: 2, scope: !5479)
!5491 = distinct !{!5491, !5481, !5492}
!5492 = !DILocation(line: 3349, column: 2, scope: !5476)
!5493 = !DILocation(line: 3350, column: 1, scope: !5470)
!5494 = distinct !DISubprogram(name: "refcount_dec_and_test", scope: !117, file: !117, line: 331, type: !5495, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5495 = !DISubroutineType(types: !5496)
!5496 = !{!492, !5497}
!5497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!5498 = !DILocalVariable(name: "r", arg: 1, scope: !5494, file: !117, line: 331, type: !5497)
!5499 = !DILocation(line: 331, column: 67, scope: !5494)
!5500 = !DILocation(line: 333, column: 33, scope: !5494)
!5501 = !DILocation(line: 333, column: 9, scope: !5494)
!5502 = !DILocation(line: 333, column: 2, scope: !5494)
!5503 = distinct !DISubprogram(name: "__refcount_dec_and_test", scope: !117, file: !117, line: 313, type: !5504, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5504 = !DISubroutineType(types: !5505)
!5505 = !{!492, !5497, !707}
!5506 = !DILocalVariable(name: "r", arg: 1, scope: !5503, file: !117, line: 313, type: !5497)
!5507 = !DILocation(line: 313, column: 69, scope: !5503)
!5508 = !DILocalVariable(name: "oldp", arg: 2, scope: !5503, file: !117, line: 313, type: !707)
!5509 = !DILocation(line: 313, column: 77, scope: !5503)
!5510 = !DILocation(line: 315, column: 36, scope: !5503)
!5511 = !DILocation(line: 315, column: 39, scope: !5503)
!5512 = !DILocation(line: 315, column: 9, scope: !5503)
!5513 = !DILocation(line: 315, column: 2, scope: !5503)
!5514 = distinct !DISubprogram(name: "__refcount_sub_and_test", scope: !117, file: !117, line: 270, type: !5515, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5515 = !DISubroutineType(types: !5516)
!5516 = !{!492, !166, !5497, !707}
!5517 = !DILocalVariable(name: "i", arg: 1, scope: !5518, file: !5519, line: 188, type: !166)
!5518 = distinct !DISubprogram(name: "arch_atomic_fetch_sub", scope: !5519, file: !5519, line: 188, type: !5520, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5519 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!5520 = !DISubroutineType(types: !5521)
!5521 = !{!166, !166, !5522}
!5522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!5523 = !DILocation(line: 188, column: 54, scope: !5518, inlinedAt: !5524)
!5524 = distinct !DILocation(line: 221, column: 9, scope: !5525, inlinedAt: !5527)
!5525 = distinct !DISubprogram(name: "atomic_fetch_sub_release", scope: !5526, file: !5526, line: 218, type: !5520, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5526 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!5527 = distinct !DILocation(line: 272, column: 12, scope: !5514)
!5528 = !DILocalVariable(name: "v", arg: 2, scope: !5518, file: !5519, line: 188, type: !5522)
!5529 = !DILocation(line: 188, column: 67, scope: !5518, inlinedAt: !5524)
!5530 = !DILocalVariable(name: "__ret", scope: !5531, file: !5519, line: 190, type: !166)
!5531 = distinct !DILexicalBlock(scope: !5518, file: !5519, line: 190, column: 9)
!5532 = !DILocation(line: 190, column: 9, scope: !5531, inlinedAt: !5524)
!5533 = !DILocalVariable(name: "v", arg: 1, scope: !5534, file: !5535, line: 99, type: !5538)
!5534 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !5535, file: !5535, line: 99, type: !5536, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5535 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!5536 = !DISubroutineType(types: !5537)
!5537 = !{null, !5538, !324}
!5538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5539, size: 64)
!5539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5540)
!5540 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!5541 = !DILocation(line: 99, column: 79, scope: !5534, inlinedAt: !5542)
!5542 = distinct !DILocation(line: 220, column: 2, scope: !5525, inlinedAt: !5527)
!5543 = !DILocalVariable(name: "size", arg: 2, scope: !5534, file: !5535, line: 99, type: !324)
!5544 = !DILocation(line: 99, column: 89, scope: !5534, inlinedAt: !5542)
!5545 = !DILocalVariable(name: "i", arg: 1, scope: !5525, file: !5526, line: 218, type: !166)
!5546 = !DILocation(line: 218, column: 30, scope: !5525, inlinedAt: !5527)
!5547 = !DILocalVariable(name: "v", arg: 2, scope: !5525, file: !5526, line: 218, type: !5522)
!5548 = !DILocation(line: 218, column: 43, scope: !5525, inlinedAt: !5527)
!5549 = !DILocalVariable(name: "i", arg: 1, scope: !5514, file: !117, line: 270, type: !166)
!5550 = !DILocation(line: 270, column: 61, scope: !5514)
!5551 = !DILocalVariable(name: "r", arg: 2, scope: !5514, file: !117, line: 270, type: !5497)
!5552 = !DILocation(line: 270, column: 76, scope: !5514)
!5553 = !DILocalVariable(name: "oldp", arg: 3, scope: !5514, file: !117, line: 270, type: !707)
!5554 = !DILocation(line: 270, column: 84, scope: !5514)
!5555 = !DILocalVariable(name: "old", scope: !5514, file: !117, line: 272, type: !166)
!5556 = !DILocation(line: 272, column: 6, scope: !5514)
!5557 = !DILocation(line: 272, column: 37, scope: !5514)
!5558 = !DILocation(line: 272, column: 41, scope: !5514)
!5559 = !DILocation(line: 272, column: 44, scope: !5514)
!5560 = !DILocation(line: 220, column: 31, scope: !5525, inlinedAt: !5527)
!5561 = !DILocation(line: 101, column: 20, scope: !5534, inlinedAt: !5542)
!5562 = !DILocation(line: 101, column: 23, scope: !5534, inlinedAt: !5542)
!5563 = !DILocation(line: 101, column: 2, scope: !5534, inlinedAt: !5542)
!5564 = !DILocation(line: 102, column: 2, scope: !5534, inlinedAt: !5542)
!5565 = !DILocation(line: 221, column: 39, scope: !5525, inlinedAt: !5527)
!5566 = !DILocation(line: 221, column: 42, scope: !5525, inlinedAt: !5527)
!5567 = !{i32 -2146542478}
!5568 = !DILocation(line: 274, column: 6, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5514, file: !117, line: 274, column: 6)
!5570 = !DILocation(line: 274, column: 6, scope: !5514)
!5571 = !DILocation(line: 275, column: 11, scope: !5569)
!5572 = !DILocation(line: 275, column: 4, scope: !5569)
!5573 = !DILocation(line: 275, column: 9, scope: !5569)
!5574 = !DILocation(line: 275, column: 3, scope: !5569)
!5575 = !DILocation(line: 277, column: 6, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5514, file: !117, line: 277, column: 6)
!5577 = !DILocation(line: 277, column: 13, scope: !5576)
!5578 = !DILocation(line: 277, column: 10, scope: !5576)
!5579 = !DILocation(line: 277, column: 6, scope: !5514)
!5580 = !DILocation(line: 278, column: 3, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5576, file: !117, line: 277, column: 16)
!5582 = !{i32 -2144321982}
!5583 = !DILocation(line: 279, column: 3, scope: !5581)
!5584 = !DILocation(line: 282, column: 6, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5514, file: !117, line: 282, column: 6)
!5586 = !DILocation(line: 282, column: 6, scope: !5514)
!5587 = !DILocation(line: 283, column: 26, scope: !5585)
!5588 = !DILocation(line: 283, column: 3, scope: !5585)
!5589 = !DILocation(line: 285, column: 2, scope: !5514)
!5590 = !DILocation(line: 286, column: 1, scope: !5514)
!5591 = distinct !DISubprogram(name: "kasan_check_write", scope: !5592, file: !5592, line: 38, type: !5593, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5592 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!5593 = !DISubroutineType(types: !5594)
!5594 = !{!492, !5538, !7}
!5595 = !DILocalVariable(name: "p", arg: 1, scope: !5591, file: !5592, line: 38, type: !5538)
!5596 = !DILocation(line: 38, column: 59, scope: !5591)
!5597 = !DILocalVariable(name: "size", arg: 2, scope: !5591, file: !5592, line: 38, type: !7)
!5598 = !DILocation(line: 38, column: 75, scope: !5591)
!5599 = !DILocation(line: 40, column: 2, scope: !5591)
!5600 = distinct !DISubprogram(name: "kcsan_check_access", scope: !5601, file: !5601, line: 178, type: !5602, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5601 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!5602 = !DISubroutineType(types: !5603)
!5603 = !{null, !5538, !324, !166}
!5604 = !DILocalVariable(name: "ptr", arg: 1, scope: !5600, file: !5601, line: 178, type: !5538)
!5605 = !DILocation(line: 178, column: 60, scope: !5600)
!5606 = !DILocalVariable(name: "size", arg: 2, scope: !5600, file: !5601, line: 178, type: !324)
!5607 = !DILocation(line: 178, column: 72, scope: !5600)
!5608 = !DILocalVariable(name: "type", arg: 3, scope: !5600, file: !5601, line: 179, type: !166)
!5609 = !DILocation(line: 179, column: 15, scope: !5600)
!5610 = !DILocation(line: 179, column: 23, scope: !5600)
!5611 = distinct !DISubprogram(name: "mutex_destroy", scope: !1216, file: !1216, line: 103, type: !5612, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5612 = !DISubroutineType(types: !5613)
!5613 = !{null, !5614}
!5614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64)
!5615 = !DILocalVariable(name: "lock", arg: 1, scope: !5611, file: !1216, line: 103, type: !5614)
!5616 = !DILocation(line: 103, column: 48, scope: !5611)
!5617 = !DILocation(line: 103, column: 55, scope: !5611)
!5618 = distinct !DISubprogram(name: "comedi_dev_get", scope: !3, file: !3, line: 142, type: !5619, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5619 = !DISubroutineType(types: !5620)
!5620 = !{!162, !162}
!5621 = !DILocalVariable(name: "dev", arg: 1, scope: !5618, file: !3, line: 142, type: !162)
!5622 = !DILocation(line: 142, column: 67, scope: !5618)
!5623 = !DILocation(line: 144, column: 6, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5618, file: !3, line: 144, column: 6)
!5625 = !DILocation(line: 144, column: 6, scope: !5618)
!5626 = !DILocation(line: 145, column: 13, scope: !5624)
!5627 = !DILocation(line: 145, column: 18, scope: !5624)
!5628 = !DILocation(line: 145, column: 3, scope: !5624)
!5629 = !DILocation(line: 146, column: 9, scope: !5618)
!5630 = !DILocation(line: 146, column: 2, scope: !5618)
!5631 = distinct !DISubprogram(name: "kref_get", scope: !3421, file: !3421, line: 43, type: !4290, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5632 = !DILocalVariable(name: "kref", arg: 1, scope: !5631, file: !3421, line: 43, type: !4288)
!5633 = !DILocation(line: 43, column: 42, scope: !5631)
!5634 = !DILocation(line: 45, column: 16, scope: !5631)
!5635 = !DILocation(line: 45, column: 22, scope: !5631)
!5636 = !DILocation(line: 45, column: 2, scope: !5631)
!5637 = !DILocation(line: 46, column: 1, scope: !5631)
!5638 = distinct !DISubprogram(name: "refcount_inc", scope: !117, file: !117, line: 265, type: !5639, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5639 = !DISubroutineType(types: !5640)
!5640 = !{null, !5497}
!5641 = !DILocalVariable(name: "r", arg: 1, scope: !5638, file: !117, line: 265, type: !5497)
!5642 = !DILocation(line: 265, column: 45, scope: !5638)
!5643 = !DILocation(line: 267, column: 17, scope: !5638)
!5644 = !DILocation(line: 267, column: 2, scope: !5638)
!5645 = !DILocation(line: 268, column: 1, scope: !5638)
!5646 = distinct !DISubprogram(name: "__refcount_inc", scope: !117, file: !117, line: 248, type: !5647, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5647 = !DISubroutineType(types: !5648)
!5648 = !{null, !5497, !707}
!5649 = !DILocalVariable(name: "r", arg: 1, scope: !5646, file: !117, line: 248, type: !5497)
!5650 = !DILocation(line: 248, column: 47, scope: !5646)
!5651 = !DILocalVariable(name: "oldp", arg: 2, scope: !5646, file: !117, line: 248, type: !707)
!5652 = !DILocation(line: 248, column: 55, scope: !5646)
!5653 = !DILocation(line: 250, column: 20, scope: !5646)
!5654 = !DILocation(line: 250, column: 23, scope: !5646)
!5655 = !DILocation(line: 250, column: 2, scope: !5646)
!5656 = !DILocation(line: 251, column: 1, scope: !5646)
!5657 = distinct !DISubprogram(name: "__refcount_add", scope: !117, file: !117, line: 191, type: !5658, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5658 = !DISubroutineType(types: !5659)
!5659 = !{null, !166, !5497, !707}
!5660 = !DILocalVariable(name: "i", arg: 1, scope: !5661, file: !5519, line: 182, type: !166)
!5661 = distinct !DISubprogram(name: "arch_atomic_fetch_add", scope: !5519, file: !5519, line: 182, type: !5520, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5662 = !DILocation(line: 182, column: 54, scope: !5661, inlinedAt: !5663)
!5663 = distinct !DILocation(line: 143, column: 9, scope: !5664, inlinedAt: !5665)
!5664 = distinct !DISubprogram(name: "atomic_fetch_add_relaxed", scope: !5526, file: !5526, line: 140, type: !5520, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5665 = distinct !DILocation(line: 193, column: 12, scope: !5657)
!5666 = !DILocalVariable(name: "v", arg: 2, scope: !5661, file: !5519, line: 182, type: !5522)
!5667 = !DILocation(line: 182, column: 67, scope: !5661, inlinedAt: !5663)
!5668 = !DILocalVariable(name: "__ret", scope: !5669, file: !5519, line: 184, type: !166)
!5669 = distinct !DILexicalBlock(scope: !5661, file: !5519, line: 184, column: 9)
!5670 = !DILocation(line: 184, column: 9, scope: !5669, inlinedAt: !5663)
!5671 = !DILocation(line: 99, column: 79, scope: !5534, inlinedAt: !5672)
!5672 = distinct !DILocation(line: 142, column: 2, scope: !5664, inlinedAt: !5665)
!5673 = !DILocation(line: 99, column: 89, scope: !5534, inlinedAt: !5672)
!5674 = !DILocalVariable(name: "i", arg: 1, scope: !5664, file: !5526, line: 140, type: !166)
!5675 = !DILocation(line: 140, column: 30, scope: !5664, inlinedAt: !5665)
!5676 = !DILocalVariable(name: "v", arg: 2, scope: !5664, file: !5526, line: 140, type: !5522)
!5677 = !DILocation(line: 140, column: 43, scope: !5664, inlinedAt: !5665)
!5678 = !DILocalVariable(name: "i", arg: 1, scope: !5657, file: !117, line: 191, type: !166)
!5679 = !DILocation(line: 191, column: 39, scope: !5657)
!5680 = !DILocalVariable(name: "r", arg: 2, scope: !5657, file: !117, line: 191, type: !5497)
!5681 = !DILocation(line: 191, column: 54, scope: !5657)
!5682 = !DILocalVariable(name: "oldp", arg: 3, scope: !5657, file: !117, line: 191, type: !707)
!5683 = !DILocation(line: 191, column: 62, scope: !5657)
!5684 = !DILocalVariable(name: "old", scope: !5657, file: !117, line: 193, type: !166)
!5685 = !DILocation(line: 193, column: 6, scope: !5657)
!5686 = !DILocation(line: 193, column: 37, scope: !5657)
!5687 = !DILocation(line: 193, column: 41, scope: !5657)
!5688 = !DILocation(line: 193, column: 44, scope: !5657)
!5689 = !DILocation(line: 142, column: 31, scope: !5664, inlinedAt: !5665)
!5690 = !DILocation(line: 101, column: 20, scope: !5534, inlinedAt: !5672)
!5691 = !DILocation(line: 101, column: 23, scope: !5534, inlinedAt: !5672)
!5692 = !DILocation(line: 101, column: 2, scope: !5534, inlinedAt: !5672)
!5693 = !DILocation(line: 102, column: 2, scope: !5534, inlinedAt: !5672)
!5694 = !DILocation(line: 143, column: 39, scope: !5664, inlinedAt: !5665)
!5695 = !DILocation(line: 143, column: 42, scope: !5664, inlinedAt: !5665)
!5696 = !{i32 -2146543830}
!5697 = !DILocation(line: 195, column: 6, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5657, file: !117, line: 195, column: 6)
!5699 = !DILocation(line: 195, column: 6, scope: !5657)
!5700 = !DILocation(line: 196, column: 11, scope: !5698)
!5701 = !DILocation(line: 196, column: 4, scope: !5698)
!5702 = !DILocation(line: 196, column: 9, scope: !5698)
!5703 = !DILocation(line: 196, column: 3, scope: !5698)
!5704 = !DILocation(line: 198, column: 6, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5657, file: !117, line: 198, column: 6)
!5706 = !DILocation(line: 198, column: 6, scope: !5657)
!5707 = !DILocation(line: 199, column: 26, scope: !5705)
!5708 = !DILocation(line: 199, column: 3, scope: !5705)
!5709 = !DILocation(line: 200, column: 11, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5705, file: !117, line: 200, column: 11)
!5711 = !DILocation(line: 200, column: 11, scope: !5705)
!5712 = !DILocation(line: 201, column: 26, scope: !5710)
!5713 = !DILocation(line: 201, column: 3, scope: !5710)
!5714 = !DILocation(line: 202, column: 1, scope: !5657)
!5715 = distinct !DISubprogram(name: "get_order", scope: !5716, file: !5716, line: 29, type: !5717, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5716 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!5717 = !DISubroutineType(types: !5718)
!5718 = !{!166, !203}
!5719 = !DILocalVariable(name: "x", arg: 1, scope: !5720, file: !5721, line: 366, type: !424)
!5720 = distinct !DISubprogram(name: "fls64", scope: !5721, file: !5721, line: 366, type: !5722, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5721 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!5722 = !DISubroutineType(types: !5723)
!5723 = !{!166, !424}
!5724 = !DILocation(line: 366, column: 40, scope: !5720, inlinedAt: !5725)
!5725 = distinct !DILocation(line: 46, column: 9, scope: !5715)
!5726 = !DILocalVariable(name: "bitpos", scope: !5720, file: !5721, line: 368, type: !166)
!5727 = !DILocation(line: 368, column: 6, scope: !5720, inlinedAt: !5725)
!5728 = !DILocalVariable(name: "size", arg: 1, scope: !5715, file: !5716, line: 29, type: !203)
!5729 = !DILocation(line: 29, column: 63, scope: !5715)
!5730 = !DILocation(line: 31, column: 27, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5715, file: !5716, line: 31, column: 6)
!5732 = !DILocation(line: 31, column: 6, scope: !5731)
!5733 = !DILocation(line: 31, column: 6, scope: !5715)
!5734 = !DILocation(line: 32, column: 8, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5736, file: !5716, line: 32, column: 7)
!5736 = distinct !DILexicalBlock(scope: !5731, file: !5716, line: 31, column: 34)
!5737 = !DILocation(line: 32, column: 7, scope: !5736)
!5738 = !DILocation(line: 33, column: 4, scope: !5735)
!5739 = !DILocation(line: 35, column: 7, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5736, file: !5716, line: 35, column: 7)
!5741 = !DILocation(line: 35, column: 12, scope: !5740)
!5742 = !DILocation(line: 35, column: 7, scope: !5736)
!5743 = !DILocation(line: 36, column: 4, scope: !5740)
!5744 = !DILocation(line: 38, column: 10, scope: !5736)
!5745 = !DILocation(line: 38, column: 28, scope: !5736)
!5746 = !DILocation(line: 38, column: 41, scope: !5736)
!5747 = !DILocation(line: 38, column: 3, scope: !5736)
!5748 = !DILocation(line: 41, column: 6, scope: !5715)
!5749 = !DILocation(line: 42, column: 7, scope: !5715)
!5750 = !DILocation(line: 46, column: 15, scope: !5715)
!5751 = !DILocation(line: 374, column: 2, scope: !5720, inlinedAt: !5725)
!5752 = !DILocation(line: 376, column: 14, scope: !5720, inlinedAt: !5725)
!5753 = !{i32 378335}
!5754 = !DILocation(line: 377, column: 9, scope: !5720, inlinedAt: !5725)
!5755 = !DILocation(line: 377, column: 16, scope: !5720, inlinedAt: !5725)
!5756 = !DILocation(line: 46, column: 2, scope: !5715)
!5757 = !DILocation(line: 48, column: 1, scope: !5715)
!5758 = distinct !DISubprogram(name: "__ilog2_u64", scope: !5759, file: !5759, line: 30, type: !5760, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5759 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!5760 = !DISubroutineType(types: !5761)
!5761 = !{!166, !423}
!5762 = !DILocation(line: 366, column: 40, scope: !5720, inlinedAt: !5763)
!5763 = distinct !DILocation(line: 32, column: 9, scope: !5758)
!5764 = !DILocation(line: 368, column: 6, scope: !5720, inlinedAt: !5763)
!5765 = !DILocalVariable(name: "n", arg: 1, scope: !5758, file: !5759, line: 30, type: !423)
!5766 = !DILocation(line: 30, column: 21, scope: !5758)
!5767 = !DILocation(line: 32, column: 15, scope: !5758)
!5768 = !DILocation(line: 374, column: 2, scope: !5720, inlinedAt: !5763)
!5769 = !DILocation(line: 376, column: 14, scope: !5720, inlinedAt: !5763)
!5770 = !DILocation(line: 377, column: 9, scope: !5720, inlinedAt: !5763)
!5771 = !DILocation(line: 377, column: 16, scope: !5720, inlinedAt: !5763)
!5772 = !DILocation(line: 32, column: 18, scope: !5758)
!5773 = !DILocation(line: 32, column: 2, scope: !5758)
!5774 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !5775, file: !5775, line: 137, type: !5776, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5775 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!5776 = !DISubroutineType(types: !5777)
!5777 = !{!161, !977, !2172, !324, !159}
!5778 = !DILocalVariable(name: "s", arg: 1, scope: !5774, file: !5775, line: 137, type: !977)
!5779 = !DILocation(line: 137, column: 54, scope: !5774)
!5780 = !DILocalVariable(name: "object", arg: 2, scope: !5774, file: !5775, line: 137, type: !2172)
!5781 = !DILocation(line: 137, column: 69, scope: !5774)
!5782 = !DILocalVariable(name: "size", arg: 3, scope: !5774, file: !5775, line: 138, type: !324)
!5783 = !DILocation(line: 138, column: 12, scope: !5774)
!5784 = !DILocalVariable(name: "flags", arg: 4, scope: !5774, file: !5775, line: 138, type: !159)
!5785 = !DILocation(line: 138, column: 24, scope: !5774)
!5786 = !DILocation(line: 140, column: 17, scope: !5774)
!5787 = !DILocation(line: 140, column: 2, scope: !5774)
!5788 = distinct !DISubprogram(name: "do_become_nonbusy", scope: !3, file: !3, line: 731, type: !4875, scopeLine: 733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5789 = !DILocalVariable(name: "dev", arg: 1, scope: !5788, file: !3, line: 731, type: !162)
!5790 = !DILocation(line: 731, column: 53, scope: !5788)
!5791 = !DILocalVariable(name: "s", arg: 2, scope: !5788, file: !3, line: 732, type: !3871)
!5792 = !DILocation(line: 732, column: 35, scope: !5788)
!5793 = !DILocalVariable(name: "async", scope: !5788, file: !3, line: 734, type: !3882)
!5794 = !DILocation(line: 734, column: 23, scope: !5788)
!5795 = !DILocation(line: 734, column: 31, scope: !5788)
!5796 = !DILocation(line: 734, column: 34, scope: !5788)
!5797 = !DILocation(line: 736, column: 2, scope: !5788)
!5798 = !DILocation(line: 736, column: 2, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 736, column: 2)
!5800 = !DILocation(line: 737, column: 35, scope: !5788)
!5801 = !DILocation(line: 737, column: 2, scope: !5788)
!5802 = !DILocation(line: 738, column: 6, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 738, column: 6)
!5804 = !DILocation(line: 738, column: 6, scope: !5788)
!5805 = !DILocation(line: 739, column: 20, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5803, file: !3, line: 738, column: 13)
!5807 = !DILocation(line: 739, column: 3, scope: !5806)
!5808 = !DILocation(line: 740, column: 3, scope: !5806)
!5809 = !DILocation(line: 740, column: 10, scope: !5806)
!5810 = !DILocation(line: 740, column: 18, scope: !5806)
!5811 = !DILocation(line: 741, column: 9, scope: !5806)
!5812 = !DILocation(line: 741, column: 16, scope: !5806)
!5813 = !DILocation(line: 741, column: 20, scope: !5806)
!5814 = !DILocation(line: 741, column: 3, scope: !5806)
!5815 = !DILocation(line: 742, column: 3, scope: !5806)
!5816 = !DILocation(line: 742, column: 10, scope: !5806)
!5817 = !DILocation(line: 742, column: 14, scope: !5806)
!5818 = !DILocation(line: 742, column: 23, scope: !5806)
!5819 = !DILocation(line: 743, column: 3, scope: !5806)
!5820 = !DILocation(line: 743, column: 6, scope: !5806)
!5821 = !DILocation(line: 743, column: 11, scope: !5806)
!5822 = !DILocation(line: 744, column: 3, scope: !5806)
!5823 = !DILocation(line: 745, column: 2, scope: !5806)
!5824 = !DILocation(line: 746, column: 3, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5803, file: !3, line: 745, column: 9)
!5826 = !DILocation(line: 748, column: 3, scope: !5825)
!5827 = !DILocation(line: 748, column: 6, scope: !5825)
!5828 = !DILocation(line: 748, column: 11, scope: !5825)
!5829 = !DILocation(line: 750, column: 1, scope: !5788)
!5830 = distinct !DISubprogram(name: "comedi_update_subdevice_runflags", scope: !3, file: !3, line: 626, type: !5831, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5831 = !DISubroutineType(types: !5832)
!5832 = !{null, !3871, !7, !7}
!5833 = !DILocation(line: 407, column: 64, scope: !4394, inlinedAt: !5834)
!5834 = distinct !DILocation(line: 635, column: 2, scope: !5830)
!5835 = !DILocation(line: 407, column: 84, scope: !4394, inlinedAt: !5834)
!5836 = !DILocation(line: 327, column: 67, scope: !4403, inlinedAt: !5837)
!5837 = distinct !DILocation(line: 632, column: 2, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5839, file: !3, line: 632, column: 2)
!5839 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 632, column: 2)
!5840 = distinct !DILexicalBlock(scope: !5841, file: !3, line: 632, column: 2)
!5841 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 632, column: 2)
!5842 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 632, column: 2)
!5843 = !DILocalVariable(name: "s", arg: 1, scope: !5830, file: !3, line: 626, type: !3871)
!5844 = !DILocation(line: 626, column: 71, scope: !5830)
!5845 = !DILocalVariable(name: "mask", arg: 2, scope: !5830, file: !3, line: 627, type: !7)
!5846 = !DILocation(line: 627, column: 24, scope: !5830)
!5847 = !DILocalVariable(name: "bits", arg: 3, scope: !5830, file: !3, line: 628, type: !7)
!5848 = !DILocation(line: 628, column: 24, scope: !5830)
!5849 = !DILocalVariable(name: "flags", scope: !5830, file: !3, line: 630, type: !203)
!5850 = !DILocation(line: 630, column: 16, scope: !5830)
!5851 = !DILocation(line: 632, column: 2, scope: !5830)
!5852 = !DILocation(line: 632, column: 2, scope: !5842)
!5853 = !DILocalVariable(name: "__dummy", scope: !5854, file: !3, line: 632, type: !203)
!5854 = distinct !DILexicalBlock(scope: !5841, file: !3, line: 632, column: 2)
!5855 = !DILocation(line: 632, column: 2, scope: !5854)
!5856 = !DILocalVariable(name: "__dummy2", scope: !5854, file: !3, line: 632, type: !203)
!5857 = !DILocation(line: 632, column: 2, scope: !5841)
!5858 = !DILocation(line: 632, column: 2, scope: !5840)
!5859 = !DILocation(line: 632, column: 2, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 632, column: 2)
!5861 = !DILocalVariable(name: "__dummy", scope: !5862, file: !3, line: 632, type: !203)
!5862 = distinct !DILexicalBlock(scope: !5863, file: !3, line: 632, column: 2)
!5863 = distinct !DILexicalBlock(scope: !5860, file: !3, line: 632, column: 2)
!5864 = !DILocation(line: 632, column: 2, scope: !5862)
!5865 = !DILocalVariable(name: "__dummy2", scope: !5862, file: !3, line: 632, type: !203)
!5866 = !DILocation(line: 632, column: 2, scope: !5863)
!5867 = !DILocation(line: 632, column: 2, scope: !5839)
!5868 = !{i32 -2141772578}
!5869 = !DILocation(line: 632, column: 2, scope: !5838)
!5870 = !DILocation(line: 329, column: 10, scope: !4403, inlinedAt: !5837)
!5871 = !DILocation(line: 329, column: 16, scope: !4403, inlinedAt: !5837)
!5872 = !DILocation(line: 633, column: 36, scope: !5830)
!5873 = !DILocation(line: 633, column: 39, scope: !5830)
!5874 = !DILocation(line: 633, column: 2, scope: !5830)
!5875 = !DILocation(line: 634, column: 34, scope: !5830)
!5876 = !DILocation(line: 634, column: 37, scope: !5830)
!5877 = !DILocation(line: 634, column: 44, scope: !5830)
!5878 = !DILocation(line: 634, column: 42, scope: !5830)
!5879 = !DILocation(line: 634, column: 2, scope: !5830)
!5880 = !DILocation(line: 635, column: 26, scope: !5830)
!5881 = !DILocation(line: 635, column: 29, scope: !5830)
!5882 = !DILocation(line: 635, column: 40, scope: !5830)
!5883 = !DILocation(line: 409, column: 2, scope: !4448, inlinedAt: !5834)
!5884 = !DILocation(line: 409, column: 2, scope: !4453, inlinedAt: !5834)
!5885 = !DILocation(line: 409, column: 2, scope: !4454, inlinedAt: !5834)
!5886 = !DILocation(line: 409, column: 2, scope: !4461, inlinedAt: !5834)
!5887 = !DILocation(line: 409, column: 2, scope: !4464, inlinedAt: !5834)
!5888 = !DILocation(line: 636, column: 1, scope: !5830)
!5889 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !4988, file: !4988, line: 646, type: !4989, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5890 = !DILocalVariable(name: "__ret", scope: !5891, file: !4988, line: 648, type: !203)
!5891 = distinct !DILexicalBlock(scope: !5889, file: !4988, line: 648, column: 9)
!5892 = !DILocation(line: 648, column: 9, scope: !5891)
!5893 = !DILocalVariable(name: "__edi", scope: !5891, file: !4988, line: 648, type: !203)
!5894 = !DILocalVariable(name: "__esi", scope: !5891, file: !4988, line: 648, type: !203)
!5895 = !DILocalVariable(name: "__edx", scope: !5891, file: !4988, line: 648, type: !203)
!5896 = !DILocalVariable(name: "__ecx", scope: !5891, file: !4988, line: 648, type: !203)
!5897 = !DILocalVariable(name: "__eax", scope: !5891, file: !4988, line: 648, type: !203)
!5898 = !DILocation(line: 648, column: 9, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5900, file: !4988, line: 648, column: 9)
!5900 = distinct !DILexicalBlock(scope: !5891, file: !4988, line: 648, column: 9)
!5901 = !{i32 -2145709624, i32 -2145707309, i32 -2145707075, i32 -2145707024, i32 -2145706996, i32 -2145706971, i32 -2145707287, i32 -2145707274, i32 -2145706836, i32 -2145706717, i32 -2145707182, i32 -2145707155, i32 -2145707127, i32 -2145707097}
!5902 = !DILocalVariable(name: "__mask", scope: !5903, file: !4988, line: 648, type: !203)
!5903 = distinct !DILexicalBlock(scope: !5899, file: !4988, line: 648, column: 9)
!5904 = !DILocation(line: 648, column: 9, scope: !5903)
!5905 = !DILocation(line: 648, column: 9, scope: !5900)
!5906 = !DILocation(line: 648, column: 2, scope: !5889)
!5907 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !4988, file: !4988, line: 656, type: !1925, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5908 = !DILocalVariable(name: "__edi", scope: !5909, file: !4988, line: 658, type: !203)
!5909 = distinct !DILexicalBlock(scope: !5907, file: !4988, line: 658, column: 2)
!5910 = !DILocation(line: 658, column: 2, scope: !5909)
!5911 = !DILocalVariable(name: "__esi", scope: !5909, file: !4988, line: 658, type: !203)
!5912 = !DILocalVariable(name: "__edx", scope: !5909, file: !4988, line: 658, type: !203)
!5913 = !DILocalVariable(name: "__ecx", scope: !5909, file: !4988, line: 658, type: !203)
!5914 = !DILocalVariable(name: "__eax", scope: !5909, file: !4988, line: 658, type: !203)
!5915 = !{i32 -2145702530, i32 -2145701798, i32 -2145701564, i32 -2145701513, i32 -2145701485, i32 -2145701460, i32 -2145701776, i32 -2145701763, i32 -2145701325, i32 -2145701206, i32 -2145701671, i32 -2145701644, i32 -2145701616, i32 -2145701586}
!5916 = !DILocation(line: 659, column: 1, scope: !5907)
!5917 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !4988, file: !4988, line: 651, type: !5918, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5918 = !DISubroutineType(types: !5919)
!5919 = !{null, !203}
!5920 = !DILocalVariable(name: "f", arg: 1, scope: !5917, file: !4988, line: 651, type: !203)
!5921 = !DILocation(line: 651, column: 65, scope: !5917)
!5922 = !DILocalVariable(name: "__edi", scope: !5923, file: !4988, line: 653, type: !203)
!5923 = distinct !DILexicalBlock(scope: !5917, file: !4988, line: 653, column: 2)
!5924 = !DILocation(line: 653, column: 2, scope: !5923)
!5925 = !DILocalVariable(name: "__esi", scope: !5923, file: !4988, line: 653, type: !203)
!5926 = !DILocalVariable(name: "__edx", scope: !5923, file: !4988, line: 653, type: !203)
!5927 = !DILocalVariable(name: "__ecx", scope: !5923, file: !4988, line: 653, type: !203)
!5928 = !DILocalVariable(name: "__eax", scope: !5923, file: !4988, line: 653, type: !203)
!5929 = !{i32 -2145705157, i32 -2145704407, i32 -2145704173, i32 -2145704122, i32 -2145704094, i32 -2145704069, i32 -2145704385, i32 -2145704372, i32 -2145703934, i32 -2145703815, i32 -2145704280, i32 -2145704253, i32 -2145704225, i32 -2145704195}
!5930 = !DILocation(line: 654, column: 1, scope: !5917)
!5931 = distinct !DISubprogram(name: "kref_init", scope: !3421, file: !3421, line: 29, type: !4290, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5932 = !DILocalVariable(name: "kref", arg: 1, scope: !5931, file: !3421, line: 29, type: !4288)
!5933 = !DILocation(line: 29, column: 43, scope: !5931)
!5934 = !DILocation(line: 31, column: 16, scope: !5931)
!5935 = !DILocation(line: 31, column: 22, scope: !5931)
!5936 = !DILocation(line: 31, column: 2, scope: !5931)
!5937 = !DILocation(line: 32, column: 1, scope: !5931)
!5938 = distinct !DISubprogram(name: "refcount_set", scope: !117, file: !117, line: 134, type: !5939, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5939 = !DISubroutineType(types: !5940)
!5940 = !{null, !5497, !166}
!5941 = !DILocalVariable(name: "v", arg: 1, scope: !5942, file: !5519, line: 39, type: !5522)
!5942 = distinct !DISubprogram(name: "arch_atomic_set", scope: !5519, file: !5519, line: 39, type: !5943, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5943 = !DISubroutineType(types: !5944)
!5944 = !{null, !5522, !166}
!5945 = !DILocation(line: 39, column: 55, scope: !5942, inlinedAt: !5946)
!5946 = distinct !DILocation(line: 46, column: 2, scope: !5947, inlinedAt: !5948)
!5947 = distinct !DISubprogram(name: "atomic_set", scope: !5526, file: !5526, line: 43, type: !5943, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5948 = distinct !DILocation(line: 136, column: 2, scope: !5938)
!5949 = !DILocalVariable(name: "i", arg: 2, scope: !5942, file: !5519, line: 39, type: !166)
!5950 = !DILocation(line: 39, column: 62, scope: !5942, inlinedAt: !5946)
!5951 = !DILocalVariable(name: "v", arg: 1, scope: !5952, file: !5535, line: 84, type: !5538)
!5952 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !5535, file: !5535, line: 84, type: !5536, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5953 = !DILocation(line: 84, column: 74, scope: !5952, inlinedAt: !5954)
!5954 = distinct !DILocation(line: 45, column: 2, scope: !5947, inlinedAt: !5948)
!5955 = !DILocalVariable(name: "size", arg: 2, scope: !5952, file: !5535, line: 84, type: !324)
!5956 = !DILocation(line: 84, column: 84, scope: !5952, inlinedAt: !5954)
!5957 = !DILocalVariable(name: "v", arg: 1, scope: !5947, file: !5526, line: 43, type: !5522)
!5958 = !DILocation(line: 43, column: 22, scope: !5947, inlinedAt: !5948)
!5959 = !DILocalVariable(name: "i", arg: 2, scope: !5947, file: !5526, line: 43, type: !166)
!5960 = !DILocation(line: 43, column: 29, scope: !5947, inlinedAt: !5948)
!5961 = !DILocalVariable(name: "r", arg: 1, scope: !5938, file: !117, line: 134, type: !5497)
!5962 = !DILocation(line: 134, column: 45, scope: !5938)
!5963 = !DILocalVariable(name: "n", arg: 2, scope: !5938, file: !117, line: 134, type: !166)
!5964 = !DILocation(line: 134, column: 52, scope: !5938)
!5965 = !DILocation(line: 136, column: 14, scope: !5938)
!5966 = !DILocation(line: 136, column: 17, scope: !5938)
!5967 = !DILocation(line: 136, column: 23, scope: !5938)
!5968 = !DILocation(line: 45, column: 26, scope: !5947, inlinedAt: !5948)
!5969 = !DILocation(line: 86, column: 20, scope: !5952, inlinedAt: !5954)
!5970 = !DILocation(line: 86, column: 23, scope: !5952, inlinedAt: !5954)
!5971 = !DILocation(line: 86, column: 2, scope: !5952, inlinedAt: !5954)
!5972 = !DILocation(line: 87, column: 2, scope: !5952, inlinedAt: !5954)
!5973 = !DILocation(line: 46, column: 18, scope: !5947, inlinedAt: !5948)
!5974 = !DILocation(line: 46, column: 21, scope: !5947, inlinedAt: !5948)
!5975 = !DILocation(line: 41, column: 2, scope: !5976, inlinedAt: !5946)
!5976 = distinct !DILexicalBlock(scope: !5942, file: !5519, line: 41, column: 2)
!5977 = !DILocation(line: 137, column: 1, scope: !5938)
!5978 = distinct !DISubprogram(name: "module_put", scope: !5979, file: !5979, line: 756, type: !5980, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5979 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!5980 = !DISubroutineType(types: !5981)
!5981 = !{null, !177}
!5982 = !DILocalVariable(name: "module", arg: 1, scope: !5978, file: !5979, line: 756, type: !177)
!5983 = !DILocation(line: 756, column: 46, scope: !5978)
!5984 = !DILocation(line: 758, column: 1, scope: !5978)
!5985 = distinct !DISubprogram(name: "PTR_ERR", scope: !5110, file: !5110, line: 29, type: !5986, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5986 = !DISubroutineType(types: !5987)
!5987 = !{!312, !2172}
!5988 = !DILocalVariable(name: "ptr", arg: 1, scope: !5985, file: !5110, line: 29, type: !2172)
!5989 = !DILocation(line: 29, column: 61, scope: !5985)
!5990 = !DILocation(line: 31, column: 16, scope: !5985)
!5991 = !DILocation(line: 31, column: 9, scope: !5985)
!5992 = !DILocation(line: 31, column: 2, scope: !5985)
!5993 = distinct !DISubprogram(name: "comedi_read", scope: !3, file: !3, line: 2597, type: !2915, scopeLine: 2599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5994 = !DILocalVariable(name: "pscr_ret__", scope: !5995, file: !5996, line: 15, type: !1258)
!5995 = distinct !DILexicalBlock(scope: !5997, file: !5996, line: 15, column: 9)
!5996 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!5997 = distinct !DISubprogram(name: "get_current", scope: !5996, file: !5996, line: 13, type: !5998, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!5998 = !DISubroutineType(types: !5999)
!5999 = !{!1258}
!6000 = !DILocation(line: 15, column: 9, scope: !5995, inlinedAt: !6001)
!6001 = distinct !DILocation(line: 2697, column: 2, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 2697, column: 2)
!6003 = distinct !DILexicalBlock(scope: !6004, file: !3, line: 2697, column: 2)
!6004 = distinct !DILexicalBlock(scope: !5993, file: !3, line: 2697, column: 2)
!6005 = !DILocalVariable(name: "__vpp_verify", scope: !6006, file: !5996, line: 15, type: !2172)
!6006 = distinct !DILexicalBlock(scope: !5995, file: !5996, line: 15, column: 9)
!6007 = !DILocation(line: 15, column: 9, scope: !6006, inlinedAt: !6001)
!6008 = !DILocalVariable(name: "pfo_val__", scope: !6009, file: !5996, line: 15, type: !423)
!6009 = distinct !DILexicalBlock(scope: !5995, file: !5996, line: 15, column: 9)
!6010 = !DILocation(line: 15, column: 9, scope: !6009, inlinedAt: !6001)
!6011 = !DILocalVariable(name: "addr", arg: 1, scope: !6012, file: !6013, line: 138, type: !2172)
!6012 = distinct !DISubprogram(name: "check_copy_size", scope: !6013, file: !6013, line: 138, type: !6014, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!6013 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!6014 = !DISubroutineType(types: !6015)
!6015 = !{!492, !2172, !324, !492}
!6016 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !6017)
!6017 = distinct !DILocation(line: 199, column: 6, scope: !6018, inlinedAt: !6023)
!6018 = distinct !DILexicalBlock(scope: !6020, file: !6019, line: 199, column: 6)
!6019 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!6020 = distinct !DISubprogram(name: "copy_to_user", scope: !6019, file: !6019, line: 197, type: !6021, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!6021 = !DISubroutineType(types: !6022)
!6022 = !{!203, !161, !2172, !203}
!6023 = distinct !DILocation(line: 2682, column: 8, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6025, file: !3, line: 2681, column: 12)
!6025 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 2679, column: 7)
!6026 = distinct !DILexicalBlock(scope: !5993, file: !3, line: 2636, column: 32)
!6027 = !DILocalVariable(name: "bytes", arg: 2, scope: !6012, file: !6013, line: 138, type: !324)
!6028 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !6017)
!6029 = !DILocalVariable(name: "is_source", arg: 3, scope: !6012, file: !6013, line: 138, type: !492)
!6030 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !6017)
!6031 = !DILocalVariable(name: "sz", scope: !6012, file: !6013, line: 140, type: !166)
!6032 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !6017)
!6033 = !DILocalVariable(name: "__ret_warn_on", scope: !6034, file: !6013, line: 150, type: !166)
!6034 = distinct !DILexicalBlock(scope: !6035, file: !6013, line: 150, column: 6)
!6035 = distinct !DILexicalBlock(scope: !6012, file: !6013, line: 150, column: 6)
!6036 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !6017)
!6037 = !DILocalVariable(name: "to", arg: 1, scope: !6020, file: !6019, line: 197, type: !161)
!6038 = !DILocation(line: 197, column: 27, scope: !6020, inlinedAt: !6023)
!6039 = !DILocalVariable(name: "from", arg: 2, scope: !6020, file: !6019, line: 197, type: !2172)
!6040 = !DILocation(line: 197, column: 43, scope: !6020, inlinedAt: !6023)
!6041 = !DILocalVariable(name: "n", arg: 3, scope: !6020, file: !6019, line: 197, type: !203)
!6042 = !DILocation(line: 197, column: 63, scope: !6020, inlinedAt: !6023)
!6043 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !6044)
!6044 = distinct !DILocation(line: 199, column: 6, scope: !6018, inlinedAt: !6045)
!6045 = distinct !DILocation(line: 2678, column: 7, scope: !6026)
!6046 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !6044)
!6047 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !6044)
!6048 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !6044)
!6049 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !6044)
!6050 = !DILocation(line: 197, column: 27, scope: !6020, inlinedAt: !6045)
!6051 = !DILocation(line: 197, column: 43, scope: !6020, inlinedAt: !6045)
!6052 = !DILocation(line: 197, column: 63, scope: !6020, inlinedAt: !6045)
!6053 = !DILocation(line: 15, column: 9, scope: !5995, inlinedAt: !6054)
!6054 = distinct !DILocation(line: 2674, column: 3, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6056, file: !3, line: 2674, column: 3)
!6056 = distinct !DILexicalBlock(scope: !6057, file: !3, line: 2674, column: 3)
!6057 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 2674, column: 3)
!6058 = !DILocation(line: 15, column: 9, scope: !6006, inlinedAt: !6054)
!6059 = !DILocation(line: 15, column: 9, scope: !6009, inlinedAt: !6054)
!6060 = !DILocation(line: 15, column: 9, scope: !5995, inlinedAt: !6061)
!6061 = distinct !DILocation(line: 2662, column: 23, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 2662, column: 8)
!6063 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 2644, column: 15)
!6064 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 2644, column: 7)
!6065 = !DILocation(line: 15, column: 9, scope: !6006, inlinedAt: !6061)
!6066 = !DILocation(line: 15, column: 9, scope: !6009, inlinedAt: !6061)
!6067 = !DILocation(line: 15, column: 9, scope: !5995, inlinedAt: !6068)
!6068 = distinct !DILocation(line: 2639, column: 3, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6070, file: !3, line: 2639, column: 3)
!6070 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 2639, column: 3)
!6071 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 2639, column: 3)
!6072 = !DILocation(line: 15, column: 9, scope: !6006, inlinedAt: !6068)
!6073 = !DILocation(line: 15, column: 9, scope: !6009, inlinedAt: !6068)
!6074 = !DILocation(line: 15, column: 9, scope: !5995, inlinedAt: !6075)
!6075 = distinct !DILocation(line: 2605, column: 2, scope: !5993)
!6076 = !DILocation(line: 15, column: 9, scope: !6006, inlinedAt: !6075)
!6077 = !DILocation(line: 15, column: 9, scope: !6009, inlinedAt: !6075)
!6078 = !DILocalVariable(name: "file", arg: 1, scope: !5993, file: !3, line: 2597, type: !354)
!6079 = !DILocation(line: 2597, column: 41, scope: !5993)
!6080 = !DILocalVariable(name: "buf", arg: 2, scope: !5993, file: !3, line: 2597, type: !277)
!6081 = !DILocation(line: 2597, column: 60, scope: !5993)
!6082 = !DILocalVariable(name: "nbytes", arg: 3, scope: !5993, file: !3, line: 2597, type: !324)
!6083 = !DILocation(line: 2597, column: 72, scope: !5993)
!6084 = !DILocalVariable(name: "offset", arg: 4, scope: !5993, file: !3, line: 2598, type: !2917)
!6085 = !DILocation(line: 2598, column: 15, scope: !5993)
!6086 = !DILocalVariable(name: "s", scope: !5993, file: !3, line: 2600, type: !3871)
!6087 = !DILocation(line: 2600, column: 27, scope: !5993)
!6088 = !DILocalVariable(name: "async", scope: !5993, file: !3, line: 2601, type: !3882)
!6089 = !DILocation(line: 2601, column: 23, scope: !5993)
!6090 = !DILocalVariable(name: "n", scope: !5993, file: !3, line: 2602, type: !7)
!6091 = !DILocation(line: 2602, column: 15, scope: !5993)
!6092 = !DILocalVariable(name: "m", scope: !5993, file: !3, line: 2602, type: !7)
!6093 = !DILocation(line: 2602, column: 18, scope: !5993)
!6094 = !DILocalVariable(name: "count", scope: !5993, file: !3, line: 2603, type: !308)
!6095 = !DILocation(line: 2603, column: 10, scope: !5993)
!6096 = !DILocalVariable(name: "retval", scope: !5993, file: !3, line: 2604, type: !166)
!6097 = !DILocation(line: 2604, column: 6, scope: !5993)
!6098 = !DILocalVariable(name: "wait", scope: !5993, file: !3, line: 2605, type: !6099)
!6099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1527, line: 29, size: 320, elements: !6100)
!6100 = !{!6101, !6102, !6103, !6109}
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6099, file: !1527, line: 30, baseType: !7, size: 32)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !6099, file: !1527, line: 31, baseType: !161, size: 64, offset: 64)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !6099, file: !1527, line: 32, baseType: !6104, size: 64, offset: 128)
!6104 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1527, line: 16, baseType: !6105)
!6105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6106, size: 64)
!6106 = !DISubroutineType(types: !6107)
!6107 = !{!166, !6108, !7, !166, !161}
!6108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6099, size: 64)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6099, file: !1527, line: 33, baseType: !223, size: 128, offset: 192)
!6110 = !DILocation(line: 2605, column: 2, scope: !5993)
!6111 = !{i32 -2146150476}
!6112 = !DILocalVariable(name: "cfp", scope: !5993, file: !3, line: 2606, type: !6113)
!6113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6114, size: 64)
!6114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_file", file: !3, line: 60, size: 256, elements: !6115)
!6115 = !{!6116, !6117, !6118, !6119, !6120}
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6114, file: !3, line: 61, baseType: !162, size: 64)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "read_subdev", scope: !6114, file: !3, line: 62, baseType: !3871, size: 64, offset: 64)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "write_subdev", scope: !6114, file: !3, line: 63, baseType: !3871, size: 64, offset: 128)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "last_detach_count", scope: !6114, file: !3, line: 64, baseType: !7, size: 32, offset: 192)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "last_attached", scope: !6114, file: !3, line: 65, baseType: !7, size: 1, offset: 224, flags: DIFlagBitField, extraData: i64 224)
!6121 = !DILocation(line: 2606, column: 22, scope: !5993)
!6122 = !DILocation(line: 2606, column: 28, scope: !5993)
!6123 = !DILocation(line: 2606, column: 34, scope: !5993)
!6124 = !DILocalVariable(name: "dev", scope: !5993, file: !3, line: 2607, type: !162)
!6125 = !DILocation(line: 2607, column: 24, scope: !5993)
!6126 = !DILocation(line: 2607, column: 30, scope: !5993)
!6127 = !DILocation(line: 2607, column: 35, scope: !5993)
!6128 = !DILocalVariable(name: "old_detach_count", scope: !5993, file: !3, line: 2608, type: !7)
!6129 = !DILocation(line: 2608, column: 15, scope: !5993)
!6130 = !DILocalVariable(name: "become_nonbusy", scope: !5993, file: !3, line: 2609, type: !492)
!6131 = !DILocation(line: 2609, column: 7, scope: !5993)
!6132 = !DILocalVariable(name: "attach_locked", scope: !5993, file: !3, line: 2610, type: !492)
!6133 = !DILocation(line: 2610, column: 7, scope: !5993)
!6134 = !DILocation(line: 2613, column: 13, scope: !5993)
!6135 = !DILocation(line: 2613, column: 18, scope: !5993)
!6136 = !DILocation(line: 2613, column: 2, scope: !5993)
!6137 = !DILocation(line: 2614, column: 16, scope: !5993)
!6138 = !DILocation(line: 2615, column: 21, scope: !5993)
!6139 = !DILocation(line: 2615, column: 26, scope: !5993)
!6140 = !DILocation(line: 2615, column: 19, scope: !5993)
!6141 = !DILocation(line: 2617, column: 7, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !5993, file: !3, line: 2617, column: 6)
!6143 = !DILocation(line: 2617, column: 12, scope: !6142)
!6144 = !DILocation(line: 2617, column: 6, scope: !5993)
!6145 = !DILocation(line: 2619, column: 10, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6142, file: !3, line: 2617, column: 22)
!6147 = !DILocation(line: 2620, column: 3, scope: !6146)
!6148 = !DILocation(line: 2623, column: 33, scope: !5993)
!6149 = !DILocation(line: 2623, column: 6, scope: !5993)
!6150 = !DILocation(line: 2623, column: 4, scope: !5993)
!6151 = !DILocation(line: 2624, column: 7, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !5993, file: !3, line: 2624, column: 6)
!6153 = !DILocation(line: 2624, column: 9, scope: !6152)
!6154 = !DILocation(line: 2624, column: 13, scope: !6152)
!6155 = !DILocation(line: 2624, column: 16, scope: !6152)
!6156 = !DILocation(line: 2624, column: 6, scope: !5993)
!6157 = !DILocation(line: 2625, column: 10, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6152, file: !3, line: 2624, column: 23)
!6159 = !DILocation(line: 2626, column: 3, scope: !6158)
!6160 = !DILocation(line: 2629, column: 10, scope: !5993)
!6161 = !DILocation(line: 2629, column: 13, scope: !5993)
!6162 = !DILocation(line: 2629, column: 8, scope: !5993)
!6163 = !DILocation(line: 2630, column: 6, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !5993, file: !3, line: 2630, column: 6)
!6165 = !DILocation(line: 2630, column: 9, scope: !6164)
!6166 = !DILocation(line: 2630, column: 17, scope: !6164)
!6167 = !DILocation(line: 2630, column: 14, scope: !6164)
!6168 = !DILocation(line: 2630, column: 22, scope: !6164)
!6169 = !DILocation(line: 2630, column: 26, scope: !6164)
!6170 = !DILocation(line: 2630, column: 33, scope: !6164)
!6171 = !DILocation(line: 2630, column: 37, scope: !6164)
!6172 = !DILocation(line: 2630, column: 43, scope: !6164)
!6173 = !DILocation(line: 2630, column: 6, scope: !5993)
!6174 = !DILocation(line: 2631, column: 10, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6164, file: !3, line: 2630, column: 58)
!6176 = !DILocation(line: 2632, column: 3, scope: !6175)
!6177 = !DILocation(line: 2635, column: 18, scope: !5993)
!6178 = !DILocation(line: 2635, column: 25, scope: !5993)
!6179 = !DILocation(line: 2635, column: 2, scope: !5993)
!6180 = !DILocation(line: 2636, column: 2, scope: !5993)
!6181 = !DILocation(line: 2636, column: 9, scope: !5993)
!6182 = !DILocation(line: 2636, column: 15, scope: !5993)
!6183 = !DILocation(line: 2636, column: 20, scope: !5993)
!6184 = !DILocation(line: 2636, column: 24, scope: !5993)
!6185 = !DILocation(line: 2636, column: 23, scope: !5993)
!6186 = !DILocation(line: 0, scope: !5993)
!6187 = !DILocalVariable(name: "rp", scope: !6026, file: !3, line: 2637, type: !7)
!6188 = !DILocation(line: 2637, column: 16, scope: !6026)
!6189 = !DILocalVariable(name: "n1", scope: !6026, file: !3, line: 2637, type: !7)
!6190 = !DILocation(line: 2637, column: 20, scope: !6026)
!6191 = !DILocalVariable(name: "n2", scope: !6026, file: !3, line: 2637, type: !7)
!6192 = !DILocation(line: 2637, column: 24, scope: !6026)
!6193 = !DILocation(line: 2639, column: 3, scope: !6026)
!6194 = !DILocation(line: 2639, column: 3, scope: !6071)
!6195 = !DILocation(line: 2639, column: 3, scope: !6070)
!6196 = !DILocation(line: 2639, column: 3, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6070, file: !3, line: 2639, column: 3)
!6198 = !DILocation(line: 2639, column: 3, scope: !6069)
!6199 = !{i32 -2141728332}
!6200 = !DILocation(line: 2641, column: 35, scope: !6026)
!6201 = !DILocation(line: 2641, column: 7, scope: !6026)
!6202 = !DILocation(line: 2641, column: 5, scope: !6026)
!6203 = !DILocalVariable(name: "__UNIQUE_ID___x258", scope: !6204, file: !3, line: 2642, type: !324)
!6204 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 2642, column: 7)
!6205 = !DILocation(line: 2642, column: 7, scope: !6204)
!6206 = !DILocalVariable(name: "__UNIQUE_ID___y259", scope: !6204, file: !3, line: 2642, type: !324)
!6207 = !DILocation(line: 2642, column: 7, scope: !6026)
!6208 = !DILocation(line: 2642, column: 5, scope: !6026)
!6209 = !DILocation(line: 2644, column: 7, scope: !6064)
!6210 = !DILocation(line: 2644, column: 9, scope: !6064)
!6211 = !DILocation(line: 2644, column: 7, scope: !6026)
!6212 = !DILocalVariable(name: "runflags", scope: !6063, file: !3, line: 2645, type: !7)
!6213 = !DILocation(line: 2645, column: 17, scope: !6063)
!6214 = !DILocation(line: 2646, column: 40, scope: !6063)
!6215 = !DILocation(line: 2646, column: 10, scope: !6063)
!6216 = !DILocation(line: 2648, column: 36, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 2648, column: 8)
!6218 = !DILocation(line: 2648, column: 9, scope: !6217)
!6219 = !DILocation(line: 2648, column: 8, scope: !6063)
!6220 = !DILocation(line: 2649, column: 37, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6222, file: !3, line: 2649, column: 9)
!6222 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 2648, column: 47)
!6223 = !DILocation(line: 2649, column: 9, scope: !6221)
!6224 = !DILocation(line: 2649, column: 9, scope: !6222)
!6225 = !DILocation(line: 2650, column: 13, scope: !6221)
!6226 = !DILocation(line: 2650, column: 6, scope: !6221)
!6227 = !DILocation(line: 2651, column: 9, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6222, file: !3, line: 2651, column: 9)
!6229 = !DILocation(line: 2651, column: 16, scope: !6228)
!6230 = !DILocation(line: 2651, column: 19, scope: !6228)
!6231 = !DILocation(line: 2651, column: 9, scope: !6222)
!6232 = !DILocation(line: 2652, column: 21, scope: !6228)
!6233 = !DILocation(line: 2652, column: 6, scope: !6228)
!6234 = !DILocation(line: 2653, column: 5, scope: !6222)
!6235 = !DILocation(line: 2655, column: 8, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 2655, column: 8)
!6237 = !DILocation(line: 2655, column: 15, scope: !6236)
!6238 = !DILocation(line: 2655, column: 8, scope: !6063)
!6239 = !DILocation(line: 2656, column: 5, scope: !6236)
!6240 = !DILocation(line: 2657, column: 8, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 2657, column: 8)
!6242 = !DILocation(line: 2657, column: 14, scope: !6241)
!6243 = !DILocation(line: 2657, column: 22, scope: !6241)
!6244 = !DILocation(line: 2657, column: 8, scope: !6063)
!6245 = !DILocation(line: 2658, column: 12, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6241, file: !3, line: 2657, column: 36)
!6247 = !DILocation(line: 2659, column: 5, scope: !6246)
!6248 = !DILocation(line: 2661, column: 4, scope: !6063)
!6249 = !DILocation(line: 2662, column: 8, scope: !6062)
!6250 = !DILocation(line: 2662, column: 8, scope: !6063)
!6251 = !DILocation(line: 2663, column: 12, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6062, file: !3, line: 2662, column: 33)
!6253 = !DILocation(line: 2664, column: 5, scope: !6252)
!6254 = !DILocation(line: 2666, column: 8, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 2666, column: 8)
!6256 = !DILocation(line: 2666, column: 11, scope: !6255)
!6257 = !DILocation(line: 2666, column: 19, scope: !6255)
!6258 = !DILocation(line: 2666, column: 16, scope: !6255)
!6259 = !DILocation(line: 2666, column: 24, scope: !6255)
!6260 = !DILocation(line: 2667, column: 9, scope: !6255)
!6261 = !DILocation(line: 2667, column: 16, scope: !6255)
!6262 = !DILocation(line: 2667, column: 20, scope: !6255)
!6263 = !DILocation(line: 2667, column: 26, scope: !6255)
!6264 = !DILocation(line: 2666, column: 8, scope: !6063)
!6265 = !DILocation(line: 2668, column: 12, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6255, file: !3, line: 2667, column: 41)
!6267 = !DILocation(line: 2669, column: 5, scope: !6266)
!6268 = !DILocation(line: 2671, column: 4, scope: !6063)
!6269 = distinct !{!6269, !6180, !6270}
!6270 = !DILocation(line: 2695, column: 2, scope: !5993)
!6271 = !DILocation(line: 2674, column: 3, scope: !6026)
!6272 = !DILocation(line: 2674, column: 3, scope: !6057)
!6273 = !DILocation(line: 2674, column: 3, scope: !6056)
!6274 = !DILocation(line: 2674, column: 3, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6056, file: !3, line: 2674, column: 3)
!6276 = !DILocation(line: 2674, column: 3, scope: !6055)
!6277 = !{i32 -2141724997}
!6278 = !DILocation(line: 2675, column: 8, scope: !6026)
!6279 = !DILocation(line: 2675, column: 15, scope: !6026)
!6280 = !DILocation(line: 2675, column: 6, scope: !6026)
!6281 = !DILocalVariable(name: "__UNIQUE_ID___x261", scope: !6282, file: !3, line: 2676, type: !7)
!6282 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 2676, column: 8)
!6283 = !DILocation(line: 2676, column: 8, scope: !6282)
!6284 = !DILocalVariable(name: "__UNIQUE_ID___y262", scope: !6282, file: !3, line: 2676, type: !7)
!6285 = !DILocation(line: 2676, column: 6, scope: !6026)
!6286 = !DILocation(line: 2677, column: 8, scope: !6026)
!6287 = !DILocation(line: 2677, column: 12, scope: !6026)
!6288 = !DILocation(line: 2677, column: 10, scope: !6026)
!6289 = !DILocation(line: 2677, column: 6, scope: !6026)
!6290 = !DILocation(line: 2678, column: 20, scope: !6026)
!6291 = !DILocation(line: 2678, column: 25, scope: !6026)
!6292 = !DILocation(line: 2678, column: 32, scope: !6026)
!6293 = !DILocation(line: 2678, column: 47, scope: !6026)
!6294 = !DILocation(line: 2678, column: 45, scope: !6026)
!6295 = !DILocation(line: 2678, column: 51, scope: !6026)
!6296 = !DILocation(line: 199, column: 6, scope: !6018, inlinedAt: !6045)
!6297 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !6044)
!6298 = distinct !DILexicalBlock(scope: !6012, file: !6013, line: 141, column: 6)
!6299 = !DILocation(line: 0, scope: !6298, inlinedAt: !6044)
!6300 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !6044)
!6301 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !6044)
!6302 = distinct !DILexicalBlock(scope: !6303, file: !6013, line: 142, column: 7)
!6303 = distinct !DILexicalBlock(scope: !6298, file: !6013, line: 141, column: 39)
!6304 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !6044)
!6305 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !6044)
!6306 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !6044)
!6307 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !6044)
!6308 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !6044)
!6309 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !6044)
!6310 = distinct !DILexicalBlock(scope: !6302, file: !6013, line: 144, column: 12)
!6311 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !6044)
!6312 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !6044)
!6313 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !6044)
!6314 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !6044)
!6315 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !6044)
!6316 = distinct !DILexicalBlock(scope: !6034, file: !6013, line: 150, column: 6)
!6317 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !6044)
!6318 = distinct !DILexicalBlock(scope: !6319, file: !6013, line: 150, column: 6)
!6319 = distinct !DILexicalBlock(scope: !6316, file: !6013, line: 150, column: 6)
!6320 = !{i32 -2145478497, i32 -2145478468, i32 -2145478422, i32 -2145478364, i32 -2145478310, i32 -2145478256, i32 -2145478201, i32 -2145478170}
!6321 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !6044)
!6322 = distinct !DILexicalBlock(scope: !6319, file: !6013, line: 150, column: 6)
!6323 = !{i32 -2145477750, i32 -2145477743, i32 -2145477691, i32 -2145477660, i32 -2145477630}
!6324 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !6044)
!6325 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !6044)
!6326 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !6044)
!6327 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !6044)
!6328 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !6044)
!6329 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !6044)
!6330 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !6044)
!6331 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !6044)
!6332 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !6044)
!6333 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !6044)
!6334 = !DILocation(line: 199, column: 6, scope: !6020, inlinedAt: !6045)
!6335 = !DILocation(line: 200, column: 21, scope: !6018, inlinedAt: !6045)
!6336 = !DILocation(line: 200, column: 25, scope: !6018, inlinedAt: !6045)
!6337 = !DILocation(line: 200, column: 31, scope: !6018, inlinedAt: !6045)
!6338 = !DILocation(line: 200, column: 7, scope: !6018, inlinedAt: !6045)
!6339 = !DILocation(line: 200, column: 5, scope: !6018, inlinedAt: !6045)
!6340 = !DILocation(line: 200, column: 3, scope: !6018, inlinedAt: !6045)
!6341 = !DILocation(line: 201, column: 9, scope: !6020, inlinedAt: !6045)
!6342 = !DILocation(line: 2678, column: 7, scope: !6026)
!6343 = !DILocation(line: 2678, column: 5, scope: !6026)
!6344 = !DILocation(line: 2679, column: 7, scope: !6025)
!6345 = !DILocation(line: 2679, column: 7, scope: !6026)
!6346 = !DILocation(line: 2680, column: 9, scope: !6025)
!6347 = !DILocation(line: 2680, column: 6, scope: !6025)
!6348 = !DILocation(line: 2680, column: 4, scope: !6025)
!6349 = !DILocation(line: 2681, column: 12, scope: !6024)
!6350 = !DILocation(line: 2681, column: 12, scope: !6025)
!6351 = !DILocation(line: 2682, column: 21, scope: !6024)
!6352 = !DILocation(line: 2682, column: 27, scope: !6024)
!6353 = !DILocation(line: 2682, column: 25, scope: !6024)
!6354 = !DILocation(line: 2682, column: 31, scope: !6024)
!6355 = !DILocation(line: 2682, column: 38, scope: !6024)
!6356 = !DILocation(line: 2682, column: 52, scope: !6024)
!6357 = !DILocation(line: 199, column: 6, scope: !6018, inlinedAt: !6023)
!6358 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !6017)
!6359 = !DILocation(line: 0, scope: !6298, inlinedAt: !6017)
!6360 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !6017)
!6361 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !6017)
!6362 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !6017)
!6363 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !6017)
!6364 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !6017)
!6365 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !6017)
!6366 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !6017)
!6367 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !6017)
!6368 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !6017)
!6369 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !6017)
!6370 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !6017)
!6371 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !6017)
!6372 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !6017)
!6373 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !6017)
!6374 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !6017)
!6375 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !6017)
!6376 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !6017)
!6377 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !6017)
!6378 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !6017)
!6379 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !6017)
!6380 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !6017)
!6381 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !6017)
!6382 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !6017)
!6383 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !6017)
!6384 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !6017)
!6385 = !DILocation(line: 199, column: 6, scope: !6020, inlinedAt: !6023)
!6386 = !DILocation(line: 200, column: 21, scope: !6018, inlinedAt: !6023)
!6387 = !DILocation(line: 200, column: 25, scope: !6018, inlinedAt: !6023)
!6388 = !DILocation(line: 200, column: 31, scope: !6018, inlinedAt: !6023)
!6389 = !DILocation(line: 200, column: 7, scope: !6018, inlinedAt: !6023)
!6390 = !DILocation(line: 200, column: 5, scope: !6018, inlinedAt: !6023)
!6391 = !DILocation(line: 200, column: 3, scope: !6018, inlinedAt: !6023)
!6392 = !DILocation(line: 201, column: 9, scope: !6020, inlinedAt: !6023)
!6393 = !DILocation(line: 2682, column: 8, scope: !6024)
!6394 = !DILocation(line: 2682, column: 6, scope: !6024)
!6395 = !DILocation(line: 2682, column: 4, scope: !6024)
!6396 = !DILocation(line: 2683, column: 7, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 2683, column: 7)
!6398 = !DILocation(line: 2683, column: 7, scope: !6026)
!6399 = !DILocation(line: 2684, column: 9, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6397, file: !3, line: 2683, column: 10)
!6401 = !DILocation(line: 2684, column: 6, scope: !6400)
!6402 = !DILocation(line: 2685, column: 11, scope: !6400)
!6403 = !DILocation(line: 2686, column: 3, scope: !6400)
!6404 = !DILocation(line: 2688, column: 25, scope: !6026)
!6405 = !DILocation(line: 2688, column: 28, scope: !6026)
!6406 = !DILocation(line: 2688, column: 3, scope: !6026)
!6407 = !DILocation(line: 2689, column: 24, scope: !6026)
!6408 = !DILocation(line: 2689, column: 27, scope: !6026)
!6409 = !DILocation(line: 2689, column: 3, scope: !6026)
!6410 = !DILocation(line: 2691, column: 12, scope: !6026)
!6411 = !DILocation(line: 2691, column: 9, scope: !6026)
!6412 = !DILocation(line: 2692, column: 13, scope: !6026)
!6413 = !DILocation(line: 2692, column: 10, scope: !6026)
!6414 = !DILocation(line: 2694, column: 10, scope: !6026)
!6415 = !DILocation(line: 2694, column: 7, scope: !6026)
!6416 = !DILocation(line: 2696, column: 21, scope: !5993)
!6417 = !DILocation(line: 2696, column: 28, scope: !5993)
!6418 = !DILocation(line: 2696, column: 2, scope: !5993)
!6419 = !DILocation(line: 2697, column: 2, scope: !5993)
!6420 = !DILocation(line: 2697, column: 2, scope: !6004)
!6421 = !DILocation(line: 2697, column: 2, scope: !6003)
!6422 = !DILocation(line: 2697, column: 2, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 2697, column: 2)
!6424 = !DILocation(line: 2697, column: 2, scope: !6002)
!6425 = !{i32 -2141721812}
!6426 = !DILocation(line: 2698, column: 6, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !5993, file: !3, line: 2698, column: 6)
!6428 = !DILocation(line: 2698, column: 21, scope: !6427)
!6429 = !DILocation(line: 2698, column: 24, scope: !6427)
!6430 = !DILocation(line: 2698, column: 30, scope: !6427)
!6431 = !DILocation(line: 2698, column: 6, scope: !5993)
!6432 = !DILocalVariable(name: "new_s", scope: !6433, file: !3, line: 2699, type: !3871)
!6433 = distinct !DILexicalBlock(scope: !6427, file: !3, line: 2698, column: 36)
!6434 = !DILocation(line: 2699, column: 28, scope: !6433)
!6435 = !DILocation(line: 2705, column: 12, scope: !6433)
!6436 = !DILocation(line: 2705, column: 17, scope: !6433)
!6437 = !DILocation(line: 2705, column: 3, scope: !6433)
!6438 = !DILocation(line: 2706, column: 17, scope: !6433)
!6439 = !DILocation(line: 2707, column: 15, scope: !6433)
!6440 = !DILocation(line: 2707, column: 20, scope: !6433)
!6441 = !DILocation(line: 2707, column: 3, scope: !6433)
!6442 = !DILocation(line: 2718, column: 38, scope: !6433)
!6443 = !DILocation(line: 2718, column: 11, scope: !6433)
!6444 = !DILocation(line: 2718, column: 9, scope: !6433)
!6445 = !DILocation(line: 2719, column: 7, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6433, file: !3, line: 2719, column: 7)
!6447 = !DILocation(line: 2719, column: 12, scope: !6446)
!6448 = !DILocation(line: 2719, column: 21, scope: !6446)
!6449 = !DILocation(line: 2719, column: 24, scope: !6446)
!6450 = !DILocation(line: 2719, column: 44, scope: !6446)
!6451 = !DILocation(line: 2719, column: 49, scope: !6446)
!6452 = !DILocation(line: 2719, column: 41, scope: !6446)
!6453 = !DILocation(line: 2719, column: 62, scope: !6446)
!6454 = !DILocation(line: 2720, column: 7, scope: !6446)
!6455 = !DILocation(line: 2720, column: 12, scope: !6446)
!6456 = !DILocation(line: 2720, column: 9, scope: !6446)
!6457 = !DILocation(line: 2720, column: 18, scope: !6446)
!6458 = !DILocation(line: 2720, column: 21, scope: !6446)
!6459 = !DILocation(line: 2720, column: 28, scope: !6446)
!6460 = !DILocation(line: 2720, column: 37, scope: !6446)
!6461 = !DILocation(line: 2720, column: 34, scope: !6446)
!6462 = !DILocation(line: 2720, column: 43, scope: !6446)
!6463 = !DILocation(line: 2720, column: 46, scope: !6446)
!6464 = !DILocation(line: 2720, column: 49, scope: !6446)
!6465 = !DILocation(line: 2720, column: 57, scope: !6446)
!6466 = !DILocation(line: 2720, column: 54, scope: !6446)
!6467 = !DILocation(line: 2720, column: 62, scope: !6446)
!6468 = !DILocation(line: 2721, column: 9, scope: !6446)
!6469 = !DILocation(line: 2721, column: 16, scope: !6446)
!6470 = !DILocation(line: 2721, column: 20, scope: !6446)
!6471 = !DILocation(line: 2721, column: 26, scope: !6446)
!6472 = !DILocation(line: 2721, column: 40, scope: !6446)
!6473 = !DILocation(line: 2722, column: 36, scope: !6446)
!6474 = !DILocation(line: 2722, column: 8, scope: !6446)
!6475 = !DILocation(line: 2722, column: 39, scope: !6446)
!6476 = !DILocation(line: 2723, column: 35, scope: !6446)
!6477 = !DILocation(line: 2723, column: 7, scope: !6446)
!6478 = !DILocation(line: 2723, column: 38, scope: !6446)
!6479 = !DILocation(line: 2719, column: 7, scope: !6433)
!6480 = !DILocation(line: 2724, column: 22, scope: !6446)
!6481 = !DILocation(line: 2724, column: 27, scope: !6446)
!6482 = !DILocation(line: 2724, column: 4, scope: !6446)
!6483 = !DILocation(line: 2725, column: 17, scope: !6433)
!6484 = !DILocation(line: 2725, column: 22, scope: !6433)
!6485 = !DILocation(line: 2725, column: 3, scope: !6433)
!6486 = !DILocation(line: 2726, column: 2, scope: !6433)
!6487 = !DILocation(line: 2698, column: 33, scope: !6427)
!6488 = !DILabel(scope: !5993, name: "out", file: !3, line: 2727)
!6489 = !DILocation(line: 2727, column: 1, scope: !5993)
!6490 = !DILocation(line: 2728, column: 6, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !5993, file: !3, line: 2728, column: 6)
!6492 = !DILocation(line: 2728, column: 6, scope: !5993)
!6493 = !DILocation(line: 2729, column: 12, scope: !6491)
!6494 = !DILocation(line: 2729, column: 17, scope: !6491)
!6495 = !DILocation(line: 2729, column: 3, scope: !6491)
!6496 = !DILocation(line: 2731, column: 9, scope: !5993)
!6497 = !DILocation(line: 2731, column: 17, scope: !5993)
!6498 = !DILocation(line: 2731, column: 25, scope: !5993)
!6499 = !DILocation(line: 2731, column: 2, scope: !5993)
!6500 = distinct !DISubprogram(name: "comedi_write", scope: !3, file: !3, line: 2461, type: !2920, scopeLine: 2463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!6501 = !DILocation(line: 15, column: 9, scope: !5995, inlinedAt: !6502)
!6502 = distinct !DILocation(line: 2561, column: 2, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6504, file: !3, line: 2561, column: 2)
!6504 = distinct !DILexicalBlock(scope: !6505, file: !3, line: 2561, column: 2)
!6505 = distinct !DILexicalBlock(scope: !6500, file: !3, line: 2561, column: 2)
!6506 = !DILocation(line: 15, column: 9, scope: !6006, inlinedAt: !6502)
!6507 = !DILocation(line: 15, column: 9, scope: !6009, inlinedAt: !6502)
!6508 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !6509)
!6509 = distinct !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !6512)
!6510 = distinct !DILexicalBlock(scope: !6511, file: !6019, line: 191, column: 6)
!6511 = distinct !DISubprogram(name: "copy_from_user", scope: !6019, file: !6019, line: 189, type: !6021, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!6512 = distinct !DILocation(line: 2548, column: 8, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6514, file: !3, line: 2547, column: 12)
!6514 = distinct !DILexicalBlock(scope: !6515, file: !3, line: 2545, column: 7)
!6515 = distinct !DILexicalBlock(scope: !6500, file: !3, line: 2500, column: 32)
!6516 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !6509)
!6517 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !6509)
!6518 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !6509)
!6519 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !6509)
!6520 = !DILocalVariable(name: "to", arg: 1, scope: !6511, file: !6019, line: 189, type: !161)
!6521 = !DILocation(line: 189, column: 22, scope: !6511, inlinedAt: !6512)
!6522 = !DILocalVariable(name: "from", arg: 2, scope: !6511, file: !6019, line: 189, type: !2172)
!6523 = !DILocation(line: 189, column: 45, scope: !6511, inlinedAt: !6512)
!6524 = !DILocalVariable(name: "n", arg: 3, scope: !6511, file: !6019, line: 189, type: !203)
!6525 = !DILocation(line: 189, column: 65, scope: !6511, inlinedAt: !6512)
!6526 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !6527)
!6527 = distinct !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !6528)
!6528 = distinct !DILocation(line: 2544, column: 7, scope: !6515)
!6529 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !6527)
!6530 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !6527)
!6531 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !6527)
!6532 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !6527)
!6533 = !DILocation(line: 189, column: 22, scope: !6511, inlinedAt: !6528)
!6534 = !DILocation(line: 189, column: 45, scope: !6511, inlinedAt: !6528)
!6535 = !DILocation(line: 189, column: 65, scope: !6511, inlinedAt: !6528)
!6536 = !DILocation(line: 15, column: 9, scope: !5995, inlinedAt: !6537)
!6537 = distinct !DILocation(line: 2540, column: 3, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6539, file: !3, line: 2540, column: 3)
!6539 = distinct !DILexicalBlock(scope: !6540, file: !3, line: 2540, column: 3)
!6540 = distinct !DILexicalBlock(scope: !6515, file: !3, line: 2540, column: 3)
!6541 = !DILocation(line: 15, column: 9, scope: !6006, inlinedAt: !6537)
!6542 = !DILocation(line: 15, column: 9, scope: !6009, inlinedAt: !6537)
!6543 = !DILocation(line: 15, column: 9, scope: !5995, inlinedAt: !6544)
!6544 = distinct !DILocation(line: 2528, column: 23, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 2528, column: 8)
!6546 = distinct !DILexicalBlock(scope: !6547, file: !3, line: 2522, column: 15)
!6547 = distinct !DILexicalBlock(scope: !6515, file: !3, line: 2522, column: 7)
!6548 = !DILocation(line: 15, column: 9, scope: !6006, inlinedAt: !6544)
!6549 = !DILocation(line: 15, column: 9, scope: !6009, inlinedAt: !6544)
!6550 = !DILocation(line: 15, column: 9, scope: !5995, inlinedAt: !6551)
!6551 = distinct !DILocation(line: 2504, column: 3, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 2504, column: 3)
!6553 = distinct !DILexicalBlock(scope: !6554, file: !3, line: 2504, column: 3)
!6554 = distinct !DILexicalBlock(scope: !6515, file: !3, line: 2504, column: 3)
!6555 = !DILocation(line: 15, column: 9, scope: !6006, inlinedAt: !6551)
!6556 = !DILocation(line: 15, column: 9, scope: !6009, inlinedAt: !6551)
!6557 = !DILocation(line: 15, column: 9, scope: !5995, inlinedAt: !6558)
!6558 = distinct !DILocation(line: 2469, column: 2, scope: !6500)
!6559 = !DILocation(line: 15, column: 9, scope: !6006, inlinedAt: !6558)
!6560 = !DILocation(line: 15, column: 9, scope: !6009, inlinedAt: !6558)
!6561 = !DILocalVariable(name: "file", arg: 1, scope: !6500, file: !3, line: 2461, type: !354)
!6562 = !DILocation(line: 2461, column: 42, scope: !6500)
!6563 = !DILocalVariable(name: "buf", arg: 2, scope: !6500, file: !3, line: 2461, type: !173)
!6564 = !DILocation(line: 2461, column: 67, scope: !6500)
!6565 = !DILocalVariable(name: "nbytes", arg: 3, scope: !6500, file: !3, line: 2462, type: !324)
!6566 = !DILocation(line: 2462, column: 15, scope: !6500)
!6567 = !DILocalVariable(name: "offset", arg: 4, scope: !6500, file: !3, line: 2462, type: !2917)
!6568 = !DILocation(line: 2462, column: 31, scope: !6500)
!6569 = !DILocalVariable(name: "s", scope: !6500, file: !3, line: 2464, type: !3871)
!6570 = !DILocation(line: 2464, column: 27, scope: !6500)
!6571 = !DILocalVariable(name: "async", scope: !6500, file: !3, line: 2465, type: !3882)
!6572 = !DILocation(line: 2465, column: 23, scope: !6500)
!6573 = !DILocalVariable(name: "n", scope: !6500, file: !3, line: 2466, type: !7)
!6574 = !DILocation(line: 2466, column: 15, scope: !6500)
!6575 = !DILocalVariable(name: "m", scope: !6500, file: !3, line: 2466, type: !7)
!6576 = !DILocation(line: 2466, column: 18, scope: !6500)
!6577 = !DILocalVariable(name: "count", scope: !6500, file: !3, line: 2467, type: !308)
!6578 = !DILocation(line: 2467, column: 10, scope: !6500)
!6579 = !DILocalVariable(name: "retval", scope: !6500, file: !3, line: 2468, type: !166)
!6580 = !DILocation(line: 2468, column: 6, scope: !6500)
!6581 = !DILocalVariable(name: "wait", scope: !6500, file: !3, line: 2469, type: !6099)
!6582 = !DILocation(line: 2469, column: 2, scope: !6500)
!6583 = !DILocalVariable(name: "cfp", scope: !6500, file: !3, line: 2470, type: !6113)
!6584 = !DILocation(line: 2470, column: 22, scope: !6500)
!6585 = !DILocation(line: 2470, column: 28, scope: !6500)
!6586 = !DILocation(line: 2470, column: 34, scope: !6500)
!6587 = !DILocalVariable(name: "dev", scope: !6500, file: !3, line: 2471, type: !162)
!6588 = !DILocation(line: 2471, column: 24, scope: !6500)
!6589 = !DILocation(line: 2471, column: 30, scope: !6500)
!6590 = !DILocation(line: 2471, column: 35, scope: !6500)
!6591 = !DILocalVariable(name: "become_nonbusy", scope: !6500, file: !3, line: 2472, type: !492)
!6592 = !DILocation(line: 2472, column: 7, scope: !6500)
!6593 = !DILocalVariable(name: "attach_locked", scope: !6500, file: !3, line: 2473, type: !492)
!6594 = !DILocation(line: 2473, column: 7, scope: !6500)
!6595 = !DILocalVariable(name: "old_detach_count", scope: !6500, file: !3, line: 2474, type: !7)
!6596 = !DILocation(line: 2474, column: 15, scope: !6500)
!6597 = !DILocation(line: 2477, column: 13, scope: !6500)
!6598 = !DILocation(line: 2477, column: 18, scope: !6500)
!6599 = !DILocation(line: 2477, column: 2, scope: !6500)
!6600 = !DILocation(line: 2478, column: 16, scope: !6500)
!6601 = !DILocation(line: 2479, column: 21, scope: !6500)
!6602 = !DILocation(line: 2479, column: 26, scope: !6500)
!6603 = !DILocation(line: 2479, column: 19, scope: !6500)
!6604 = !DILocation(line: 2481, column: 7, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6500, file: !3, line: 2481, column: 6)
!6606 = !DILocation(line: 2481, column: 12, scope: !6605)
!6607 = !DILocation(line: 2481, column: 6, scope: !6500)
!6608 = !DILocation(line: 2483, column: 10, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6605, file: !3, line: 2481, column: 22)
!6610 = !DILocation(line: 2484, column: 3, scope: !6609)
!6611 = !DILocation(line: 2487, column: 34, scope: !6500)
!6612 = !DILocation(line: 2487, column: 6, scope: !6500)
!6613 = !DILocation(line: 2487, column: 4, scope: !6500)
!6614 = !DILocation(line: 2488, column: 7, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6500, file: !3, line: 2488, column: 6)
!6616 = !DILocation(line: 2488, column: 9, scope: !6615)
!6617 = !DILocation(line: 2488, column: 13, scope: !6615)
!6618 = !DILocation(line: 2488, column: 16, scope: !6615)
!6619 = !DILocation(line: 2488, column: 6, scope: !6500)
!6620 = !DILocation(line: 2489, column: 10, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6615, file: !3, line: 2488, column: 23)
!6622 = !DILocation(line: 2490, column: 3, scope: !6621)
!6623 = !DILocation(line: 2493, column: 10, scope: !6500)
!6624 = !DILocation(line: 2493, column: 13, scope: !6500)
!6625 = !DILocation(line: 2493, column: 8, scope: !6500)
!6626 = !DILocation(line: 2494, column: 6, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6500, file: !3, line: 2494, column: 6)
!6628 = !DILocation(line: 2494, column: 9, scope: !6627)
!6629 = !DILocation(line: 2494, column: 17, scope: !6627)
!6630 = !DILocation(line: 2494, column: 14, scope: !6627)
!6631 = !DILocation(line: 2494, column: 22, scope: !6627)
!6632 = !DILocation(line: 2494, column: 27, scope: !6627)
!6633 = !DILocation(line: 2494, column: 34, scope: !6627)
!6634 = !DILocation(line: 2494, column: 38, scope: !6627)
!6635 = !DILocation(line: 2494, column: 44, scope: !6627)
!6636 = !DILocation(line: 2494, column: 6, scope: !6500)
!6637 = !DILocation(line: 2495, column: 10, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6627, file: !3, line: 2494, column: 59)
!6639 = !DILocation(line: 2496, column: 3, scope: !6638)
!6640 = !DILocation(line: 2499, column: 18, scope: !6500)
!6641 = !DILocation(line: 2499, column: 25, scope: !6500)
!6642 = !DILocation(line: 2499, column: 2, scope: !6500)
!6643 = !DILocation(line: 2500, column: 2, scope: !6500)
!6644 = !DILocation(line: 2500, column: 9, scope: !6500)
!6645 = !DILocation(line: 2500, column: 15, scope: !6500)
!6646 = !DILocation(line: 2500, column: 20, scope: !6500)
!6647 = !DILocation(line: 2500, column: 24, scope: !6500)
!6648 = !DILocation(line: 2500, column: 23, scope: !6500)
!6649 = !DILocation(line: 0, scope: !6500)
!6650 = !DILocalVariable(name: "runflags", scope: !6515, file: !3, line: 2501, type: !7)
!6651 = !DILocation(line: 2501, column: 16, scope: !6515)
!6652 = !DILocalVariable(name: "wp", scope: !6515, file: !3, line: 2502, type: !7)
!6653 = !DILocation(line: 2502, column: 16, scope: !6515)
!6654 = !DILocalVariable(name: "n1", scope: !6515, file: !3, line: 2502, type: !7)
!6655 = !DILocation(line: 2502, column: 20, scope: !6515)
!6656 = !DILocalVariable(name: "n2", scope: !6515, file: !3, line: 2502, type: !7)
!6657 = !DILocation(line: 2502, column: 24, scope: !6515)
!6658 = !DILocation(line: 2504, column: 3, scope: !6515)
!6659 = !DILocation(line: 2504, column: 3, scope: !6554)
!6660 = !DILocation(line: 2504, column: 3, scope: !6553)
!6661 = !DILocation(line: 2504, column: 3, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 2504, column: 3)
!6663 = !DILocation(line: 2504, column: 3, scope: !6552)
!6664 = !{i32 -2141736960}
!6665 = !DILocation(line: 2506, column: 44, scope: !6515)
!6666 = !DILocation(line: 2506, column: 14, scope: !6515)
!6667 = !DILocation(line: 2506, column: 12, scope: !6515)
!6668 = !DILocation(line: 2507, column: 35, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6515, file: !3, line: 2507, column: 7)
!6670 = !DILocation(line: 2507, column: 8, scope: !6669)
!6671 = !DILocation(line: 2507, column: 7, scope: !6515)
!6672 = !DILocation(line: 2508, column: 36, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 2508, column: 8)
!6674 = distinct !DILexicalBlock(scope: !6669, file: !3, line: 2507, column: 46)
!6675 = !DILocation(line: 2508, column: 8, scope: !6673)
!6676 = !DILocation(line: 2508, column: 8, scope: !6674)
!6677 = !DILocation(line: 2509, column: 12, scope: !6673)
!6678 = !DILocation(line: 2509, column: 5, scope: !6673)
!6679 = !DILocation(line: 2510, column: 8, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 2510, column: 8)
!6681 = !DILocation(line: 2510, column: 15, scope: !6680)
!6682 = !DILocation(line: 2510, column: 18, scope: !6680)
!6683 = !DILocation(line: 2510, column: 8, scope: !6674)
!6684 = !DILocation(line: 2511, column: 20, scope: !6680)
!6685 = !DILocation(line: 2511, column: 5, scope: !6680)
!6686 = !DILocation(line: 2512, column: 4, scope: !6674)
!6687 = !DILocation(line: 2514, column: 7, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6515, file: !3, line: 2514, column: 7)
!6689 = !DILocation(line: 2514, column: 14, scope: !6688)
!6690 = !DILocation(line: 2514, column: 7, scope: !6515)
!6691 = !DILocation(line: 2515, column: 4, scope: !6688)
!6692 = !DILocation(line: 2518, column: 26, scope: !6515)
!6693 = !DILocation(line: 2518, column: 29, scope: !6515)
!6694 = !DILocation(line: 2518, column: 36, scope: !6515)
!6695 = !DILocation(line: 2518, column: 3, scope: !6515)
!6696 = !DILocation(line: 2519, column: 36, scope: !6515)
!6697 = !DILocation(line: 2519, column: 7, scope: !6515)
!6698 = !DILocation(line: 2519, column: 5, scope: !6515)
!6699 = !DILocalVariable(name: "__UNIQUE_ID___x251", scope: !6700, file: !3, line: 2520, type: !324)
!6700 = distinct !DILexicalBlock(scope: !6515, file: !3, line: 2520, column: 7)
!6701 = !DILocation(line: 2520, column: 7, scope: !6700)
!6702 = !DILocalVariable(name: "__UNIQUE_ID___y252", scope: !6700, file: !3, line: 2520, type: !324)
!6703 = !DILocation(line: 2520, column: 7, scope: !6515)
!6704 = !DILocation(line: 2520, column: 5, scope: !6515)
!6705 = !DILocation(line: 2522, column: 7, scope: !6547)
!6706 = !DILocation(line: 2522, column: 9, scope: !6547)
!6707 = !DILocation(line: 2522, column: 7, scope: !6515)
!6708 = !DILocation(line: 2523, column: 8, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 2523, column: 8)
!6710 = !DILocation(line: 2523, column: 14, scope: !6709)
!6711 = !DILocation(line: 2523, column: 22, scope: !6709)
!6712 = !DILocation(line: 2523, column: 8, scope: !6546)
!6713 = !DILocation(line: 2524, column: 12, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6709, file: !3, line: 2523, column: 36)
!6715 = !DILocation(line: 2525, column: 5, scope: !6714)
!6716 = !DILocation(line: 2527, column: 4, scope: !6546)
!6717 = !DILocation(line: 2528, column: 8, scope: !6545)
!6718 = !DILocation(line: 2528, column: 8, scope: !6546)
!6719 = !DILocation(line: 2529, column: 12, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 2528, column: 33)
!6721 = !DILocation(line: 2530, column: 5, scope: !6720)
!6722 = !DILocation(line: 2532, column: 8, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 2532, column: 8)
!6724 = !DILocation(line: 2532, column: 11, scope: !6723)
!6725 = !DILocation(line: 2532, column: 19, scope: !6723)
!6726 = !DILocation(line: 2532, column: 16, scope: !6723)
!6727 = !DILocation(line: 2532, column: 24, scope: !6723)
!6728 = !DILocation(line: 2533, column: 10, scope: !6723)
!6729 = !DILocation(line: 2533, column: 17, scope: !6723)
!6730 = !DILocation(line: 2533, column: 21, scope: !6723)
!6731 = !DILocation(line: 2533, column: 27, scope: !6723)
!6732 = !DILocation(line: 2532, column: 8, scope: !6546)
!6733 = !DILocation(line: 2534, column: 12, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6723, file: !3, line: 2533, column: 42)
!6735 = !DILocation(line: 2535, column: 5, scope: !6734)
!6736 = !DILocation(line: 2537, column: 4, scope: !6546)
!6737 = distinct !{!6737, !6643, !6738}
!6738 = !DILocation(line: 2559, column: 2, scope: !6500)
!6739 = !DILocation(line: 2540, column: 3, scope: !6515)
!6740 = !DILocation(line: 2540, column: 3, scope: !6540)
!6741 = !DILocation(line: 2540, column: 3, scope: !6539)
!6742 = !DILocation(line: 2540, column: 3, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6539, file: !3, line: 2540, column: 3)
!6744 = !DILocation(line: 2540, column: 3, scope: !6538)
!6745 = !{i32 -2141733625}
!6746 = !DILocation(line: 2541, column: 8, scope: !6515)
!6747 = !DILocation(line: 2541, column: 15, scope: !6515)
!6748 = !DILocation(line: 2541, column: 6, scope: !6515)
!6749 = !DILocalVariable(name: "__UNIQUE_ID___x254", scope: !6750, file: !3, line: 2542, type: !7)
!6750 = distinct !DILexicalBlock(scope: !6515, file: !3, line: 2542, column: 8)
!6751 = !DILocation(line: 2542, column: 8, scope: !6750)
!6752 = !DILocalVariable(name: "__UNIQUE_ID___y255", scope: !6750, file: !3, line: 2542, type: !7)
!6753 = !DILocation(line: 2542, column: 6, scope: !6515)
!6754 = !DILocation(line: 2543, column: 8, scope: !6515)
!6755 = !DILocation(line: 2543, column: 12, scope: !6515)
!6756 = !DILocation(line: 2543, column: 10, scope: !6515)
!6757 = !DILocation(line: 2543, column: 6, scope: !6515)
!6758 = !DILocation(line: 2544, column: 22, scope: !6515)
!6759 = !DILocation(line: 2544, column: 29, scope: !6515)
!6760 = !DILocation(line: 2544, column: 44, scope: !6515)
!6761 = !DILocation(line: 2544, column: 42, scope: !6515)
!6762 = !DILocation(line: 2544, column: 48, scope: !6515)
!6763 = !DILocation(line: 2544, column: 53, scope: !6515)
!6764 = !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !6528)
!6765 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !6527)
!6766 = !DILocation(line: 0, scope: !6298, inlinedAt: !6527)
!6767 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !6527)
!6768 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !6527)
!6769 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !6527)
!6770 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !6527)
!6771 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !6527)
!6772 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !6527)
!6773 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !6527)
!6774 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !6527)
!6775 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !6527)
!6776 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !6527)
!6777 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !6527)
!6778 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !6527)
!6779 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !6527)
!6780 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !6527)
!6781 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !6527)
!6782 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !6527)
!6783 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !6527)
!6784 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !6527)
!6785 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !6527)
!6786 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !6527)
!6787 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !6527)
!6788 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !6527)
!6789 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !6527)
!6790 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !6527)
!6791 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !6527)
!6792 = !DILocation(line: 191, column: 6, scope: !6511, inlinedAt: !6528)
!6793 = !DILocation(line: 192, column: 23, scope: !6510, inlinedAt: !6528)
!6794 = !DILocation(line: 192, column: 27, scope: !6510, inlinedAt: !6528)
!6795 = !DILocation(line: 192, column: 33, scope: !6510, inlinedAt: !6528)
!6796 = !DILocation(line: 192, column: 7, scope: !6510, inlinedAt: !6528)
!6797 = !DILocation(line: 192, column: 5, scope: !6510, inlinedAt: !6528)
!6798 = !DILocation(line: 192, column: 3, scope: !6510, inlinedAt: !6528)
!6799 = !DILocation(line: 193, column: 9, scope: !6511, inlinedAt: !6528)
!6800 = !DILocation(line: 2544, column: 7, scope: !6515)
!6801 = !DILocation(line: 2544, column: 5, scope: !6515)
!6802 = !DILocation(line: 2545, column: 7, scope: !6514)
!6803 = !DILocation(line: 2545, column: 7, scope: !6515)
!6804 = !DILocation(line: 2546, column: 9, scope: !6514)
!6805 = !DILocation(line: 2546, column: 6, scope: !6514)
!6806 = !DILocation(line: 2546, column: 4, scope: !6514)
!6807 = !DILocation(line: 2547, column: 12, scope: !6513)
!6808 = !DILocation(line: 2547, column: 12, scope: !6514)
!6809 = !DILocation(line: 2548, column: 23, scope: !6513)
!6810 = !DILocation(line: 2548, column: 30, scope: !6513)
!6811 = !DILocation(line: 2548, column: 44, scope: !6513)
!6812 = !DILocation(line: 2548, column: 50, scope: !6513)
!6813 = !DILocation(line: 2548, column: 48, scope: !6513)
!6814 = !DILocation(line: 2548, column: 54, scope: !6513)
!6815 = !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !6512)
!6816 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !6509)
!6817 = !DILocation(line: 0, scope: !6298, inlinedAt: !6509)
!6818 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !6509)
!6819 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !6509)
!6820 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !6509)
!6821 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !6509)
!6822 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !6509)
!6823 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !6509)
!6824 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !6509)
!6825 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !6509)
!6826 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !6509)
!6827 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !6509)
!6828 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !6509)
!6829 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !6509)
!6830 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !6509)
!6831 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !6509)
!6832 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !6509)
!6833 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !6509)
!6834 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !6509)
!6835 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !6509)
!6836 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !6509)
!6837 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !6509)
!6838 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !6509)
!6839 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !6509)
!6840 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !6509)
!6841 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !6509)
!6842 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !6509)
!6843 = !DILocation(line: 191, column: 6, scope: !6511, inlinedAt: !6512)
!6844 = !DILocation(line: 192, column: 23, scope: !6510, inlinedAt: !6512)
!6845 = !DILocation(line: 192, column: 27, scope: !6510, inlinedAt: !6512)
!6846 = !DILocation(line: 192, column: 33, scope: !6510, inlinedAt: !6512)
!6847 = !DILocation(line: 192, column: 7, scope: !6510, inlinedAt: !6512)
!6848 = !DILocation(line: 192, column: 5, scope: !6510, inlinedAt: !6512)
!6849 = !DILocation(line: 192, column: 3, scope: !6510, inlinedAt: !6512)
!6850 = !DILocation(line: 193, column: 9, scope: !6511, inlinedAt: !6512)
!6851 = !DILocation(line: 2548, column: 8, scope: !6513)
!6852 = !DILocation(line: 2548, column: 6, scope: !6513)
!6853 = !DILocation(line: 2548, column: 4, scope: !6513)
!6854 = !DILocation(line: 2549, column: 7, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6515, file: !3, line: 2549, column: 7)
!6856 = !DILocation(line: 2549, column: 7, scope: !6515)
!6857 = !DILocation(line: 2550, column: 9, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6855, file: !3, line: 2549, column: 10)
!6859 = !DILocation(line: 2550, column: 6, scope: !6858)
!6860 = !DILocation(line: 2551, column: 11, scope: !6858)
!6861 = !DILocation(line: 2552, column: 3, scope: !6858)
!6862 = !DILocation(line: 2553, column: 25, scope: !6515)
!6863 = !DILocation(line: 2553, column: 28, scope: !6515)
!6864 = !DILocation(line: 2553, column: 3, scope: !6515)
!6865 = !DILocation(line: 2555, column: 12, scope: !6515)
!6866 = !DILocation(line: 2555, column: 9, scope: !6515)
!6867 = !DILocation(line: 2556, column: 13, scope: !6515)
!6868 = !DILocation(line: 2556, column: 10, scope: !6515)
!6869 = !DILocation(line: 2558, column: 10, scope: !6515)
!6870 = !DILocation(line: 2558, column: 7, scope: !6515)
!6871 = !DILocation(line: 2560, column: 21, scope: !6500)
!6872 = !DILocation(line: 2560, column: 28, scope: !6500)
!6873 = !DILocation(line: 2560, column: 2, scope: !6500)
!6874 = !DILocation(line: 2561, column: 2, scope: !6500)
!6875 = !DILocation(line: 2561, column: 2, scope: !6505)
!6876 = !DILocation(line: 2561, column: 2, scope: !6504)
!6877 = !DILocation(line: 2561, column: 2, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6504, file: !3, line: 2561, column: 2)
!6879 = !DILocation(line: 2561, column: 2, scope: !6503)
!6880 = !{i32 -2141730440}
!6881 = !DILocation(line: 2562, column: 6, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6500, file: !3, line: 2562, column: 6)
!6883 = !DILocation(line: 2562, column: 21, scope: !6882)
!6884 = !DILocation(line: 2562, column: 24, scope: !6882)
!6885 = !DILocation(line: 2562, column: 30, scope: !6882)
!6886 = !DILocation(line: 2562, column: 6, scope: !6500)
!6887 = !DILocalVariable(name: "new_s", scope: !6888, file: !3, line: 2563, type: !3871)
!6888 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 2562, column: 36)
!6889 = !DILocation(line: 2563, column: 28, scope: !6888)
!6890 = !DILocation(line: 2569, column: 12, scope: !6888)
!6891 = !DILocation(line: 2569, column: 17, scope: !6888)
!6892 = !DILocation(line: 2569, column: 3, scope: !6888)
!6893 = !DILocation(line: 2570, column: 17, scope: !6888)
!6894 = !DILocation(line: 2571, column: 15, scope: !6888)
!6895 = !DILocation(line: 2571, column: 20, scope: !6888)
!6896 = !DILocation(line: 2571, column: 3, scope: !6888)
!6897 = !DILocation(line: 2582, column: 39, scope: !6888)
!6898 = !DILocation(line: 2582, column: 11, scope: !6888)
!6899 = !DILocation(line: 2582, column: 9, scope: !6888)
!6900 = !DILocation(line: 2583, column: 7, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6888, file: !3, line: 2583, column: 7)
!6902 = !DILocation(line: 2583, column: 12, scope: !6901)
!6903 = !DILocation(line: 2583, column: 21, scope: !6901)
!6904 = !DILocation(line: 2583, column: 24, scope: !6901)
!6905 = !DILocation(line: 2583, column: 44, scope: !6901)
!6906 = !DILocation(line: 2583, column: 49, scope: !6901)
!6907 = !DILocation(line: 2583, column: 41, scope: !6901)
!6908 = !DILocation(line: 2583, column: 62, scope: !6901)
!6909 = !DILocation(line: 2584, column: 7, scope: !6901)
!6910 = !DILocation(line: 2584, column: 12, scope: !6901)
!6911 = !DILocation(line: 2584, column: 9, scope: !6901)
!6912 = !DILocation(line: 2584, column: 18, scope: !6901)
!6913 = !DILocation(line: 2584, column: 21, scope: !6901)
!6914 = !DILocation(line: 2584, column: 28, scope: !6901)
!6915 = !DILocation(line: 2584, column: 37, scope: !6901)
!6916 = !DILocation(line: 2584, column: 34, scope: !6901)
!6917 = !DILocation(line: 2584, column: 43, scope: !6901)
!6918 = !DILocation(line: 2584, column: 46, scope: !6901)
!6919 = !DILocation(line: 2584, column: 49, scope: !6901)
!6920 = !DILocation(line: 2584, column: 57, scope: !6901)
!6921 = !DILocation(line: 2584, column: 54, scope: !6901)
!6922 = !DILocation(line: 2584, column: 62, scope: !6901)
!6923 = !DILocation(line: 2585, column: 8, scope: !6901)
!6924 = !DILocation(line: 2585, column: 15, scope: !6901)
!6925 = !DILocation(line: 2585, column: 19, scope: !6901)
!6926 = !DILocation(line: 2585, column: 25, scope: !6901)
!6927 = !DILocation(line: 2585, column: 39, scope: !6901)
!6928 = !DILocation(line: 2586, column: 36, scope: !6901)
!6929 = !DILocation(line: 2586, column: 8, scope: !6901)
!6930 = !DILocation(line: 2583, column: 7, scope: !6888)
!6931 = !DILocation(line: 2587, column: 22, scope: !6901)
!6932 = !DILocation(line: 2587, column: 27, scope: !6901)
!6933 = !DILocation(line: 2587, column: 4, scope: !6901)
!6934 = !DILocation(line: 2588, column: 17, scope: !6888)
!6935 = !DILocation(line: 2588, column: 22, scope: !6888)
!6936 = !DILocation(line: 2588, column: 3, scope: !6888)
!6937 = !DILocation(line: 2589, column: 2, scope: !6888)
!6938 = !DILocation(line: 2562, column: 33, scope: !6882)
!6939 = !DILabel(scope: !6500, name: "out", file: !3, line: 2590)
!6940 = !DILocation(line: 2590, column: 1, scope: !6500)
!6941 = !DILocation(line: 2591, column: 6, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6500, file: !3, line: 2591, column: 6)
!6943 = !DILocation(line: 2591, column: 6, scope: !6500)
!6944 = !DILocation(line: 2592, column: 12, scope: !6942)
!6945 = !DILocation(line: 2592, column: 17, scope: !6942)
!6946 = !DILocation(line: 2592, column: 3, scope: !6942)
!6947 = !DILocation(line: 2594, column: 9, scope: !6500)
!6948 = !DILocation(line: 2594, column: 17, scope: !6500)
!6949 = !DILocation(line: 2594, column: 25, scope: !6500)
!6950 = !DILocation(line: 2594, column: 2, scope: !6500)
!6951 = distinct !DISubprogram(name: "comedi_poll", scope: !3, file: !3, line: 2420, type: !6952, scopeLine: 2421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!6952 = !DISubroutineType(types: !6953)
!6953 = !{!2946, !354, !6954}
!6954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6955, size: 64)
!6955 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_table", file: !2950, line: 46, baseType: !2949)
!6956 = !DILocalVariable(name: "file", arg: 1, scope: !6951, file: !3, line: 2420, type: !354)
!6957 = !DILocation(line: 2420, column: 42, scope: !6951)
!6958 = !DILocalVariable(name: "wait", arg: 2, scope: !6951, file: !3, line: 2420, type: !6954)
!6959 = !DILocation(line: 2420, column: 60, scope: !6951)
!6960 = !DILocalVariable(name: "mask", scope: !6951, file: !3, line: 2422, type: !2946)
!6961 = !DILocation(line: 2422, column: 11, scope: !6951)
!6962 = !DILocalVariable(name: "cfp", scope: !6951, file: !3, line: 2423, type: !6113)
!6963 = !DILocation(line: 2423, column: 22, scope: !6951)
!6964 = !DILocation(line: 2423, column: 28, scope: !6951)
!6965 = !DILocation(line: 2423, column: 34, scope: !6951)
!6966 = !DILocalVariable(name: "dev", scope: !6951, file: !3, line: 2424, type: !162)
!6967 = !DILocation(line: 2424, column: 24, scope: !6951)
!6968 = !DILocation(line: 2424, column: 30, scope: !6951)
!6969 = !DILocation(line: 2424, column: 35, scope: !6951)
!6970 = !DILocalVariable(name: "s", scope: !6951, file: !3, line: 2425, type: !3871)
!6971 = !DILocation(line: 2425, column: 27, scope: !6951)
!6972 = !DILocalVariable(name: "s_read", scope: !6951, file: !3, line: 2425, type: !3871)
!6973 = !DILocation(line: 2425, column: 31, scope: !6951)
!6974 = !DILocation(line: 2427, column: 13, scope: !6951)
!6975 = !DILocation(line: 2427, column: 18, scope: !6951)
!6976 = !DILocation(line: 2427, column: 2, scope: !6951)
!6977 = !DILocation(line: 2429, column: 7, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6951, file: !3, line: 2429, column: 6)
!6979 = !DILocation(line: 2429, column: 12, scope: !6978)
!6980 = !DILocation(line: 2429, column: 6, scope: !6951)
!6981 = !DILocation(line: 2431, column: 3, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 2429, column: 22)
!6983 = !DILocation(line: 2434, column: 33, scope: !6951)
!6984 = !DILocation(line: 2434, column: 6, scope: !6951)
!6985 = !DILocation(line: 2434, column: 4, scope: !6951)
!6986 = !DILocation(line: 2435, column: 11, scope: !6951)
!6987 = !DILocation(line: 2435, column: 9, scope: !6951)
!6988 = !DILocation(line: 2436, column: 6, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6951, file: !3, line: 2436, column: 6)
!6990 = !DILocation(line: 2436, column: 8, scope: !6989)
!6991 = !DILocation(line: 2436, column: 11, scope: !6989)
!6992 = !DILocation(line: 2436, column: 14, scope: !6989)
!6993 = !DILocation(line: 2436, column: 6, scope: !6951)
!6994 = !DILocation(line: 2437, column: 13, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6989, file: !3, line: 2436, column: 21)
!6996 = !DILocation(line: 2437, column: 20, scope: !6995)
!6997 = !DILocation(line: 2437, column: 23, scope: !6995)
!6998 = !DILocation(line: 2437, column: 30, scope: !6995)
!6999 = !DILocation(line: 2437, column: 41, scope: !6995)
!7000 = !DILocation(line: 2437, column: 3, scope: !6995)
!7001 = !DILocation(line: 2438, column: 7, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6995, file: !3, line: 2438, column: 7)
!7003 = !DILocation(line: 2438, column: 10, scope: !7002)
!7004 = !DILocation(line: 2438, column: 18, scope: !7002)
!7005 = !DILocation(line: 2438, column: 15, scope: !7002)
!7006 = !DILocation(line: 2438, column: 23, scope: !7002)
!7007 = !DILocation(line: 2438, column: 55, scope: !7002)
!7008 = !DILocation(line: 2438, column: 27, scope: !7002)
!7009 = !DILocation(line: 2438, column: 58, scope: !7002)
!7010 = !DILocation(line: 2439, column: 8, scope: !7002)
!7011 = !DILocation(line: 2439, column: 11, scope: !7002)
!7012 = !DILocation(line: 2439, column: 18, scope: !7002)
!7013 = !DILocation(line: 2439, column: 22, scope: !7002)
!7014 = !DILocation(line: 2439, column: 28, scope: !7002)
!7015 = !DILocation(line: 2439, column: 42, scope: !7002)
!7016 = !DILocation(line: 2440, column: 35, scope: !7002)
!7017 = !DILocation(line: 2440, column: 7, scope: !7002)
!7018 = !DILocation(line: 2440, column: 38, scope: !7002)
!7019 = !DILocation(line: 2438, column: 7, scope: !6995)
!7020 = !DILocation(line: 2441, column: 9, scope: !7002)
!7021 = !DILocation(line: 2441, column: 4, scope: !7002)
!7022 = !DILocation(line: 2442, column: 2, scope: !6995)
!7023 = !DILocation(line: 2444, column: 34, scope: !6951)
!7024 = !DILocation(line: 2444, column: 6, scope: !6951)
!7025 = !DILocation(line: 2444, column: 4, scope: !6951)
!7026 = !DILocation(line: 2445, column: 6, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !6951, file: !3, line: 2445, column: 6)
!7028 = !DILocation(line: 2445, column: 8, scope: !7027)
!7029 = !DILocation(line: 2445, column: 11, scope: !7027)
!7030 = !DILocation(line: 2445, column: 14, scope: !7027)
!7031 = !DILocation(line: 2445, column: 6, scope: !6951)
!7032 = !DILocalVariable(name: "bps", scope: !7033, file: !3, line: 2446, type: !7)
!7033 = distinct !DILexicalBlock(scope: !7027, file: !3, line: 2445, column: 21)
!7034 = !DILocation(line: 2446, column: 16, scope: !7033)
!7035 = !DILocation(line: 2446, column: 46, scope: !7033)
!7036 = !DILocation(line: 2446, column: 22, scope: !7033)
!7037 = !DILocation(line: 2448, column: 7, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 2448, column: 7)
!7039 = !DILocation(line: 2448, column: 12, scope: !7038)
!7040 = !DILocation(line: 2448, column: 9, scope: !7038)
!7041 = !DILocation(line: 2448, column: 7, scope: !7033)
!7042 = !DILocation(line: 2449, column: 14, scope: !7038)
!7043 = !DILocation(line: 2449, column: 21, scope: !7038)
!7044 = !DILocation(line: 2449, column: 24, scope: !7038)
!7045 = !DILocation(line: 2449, column: 31, scope: !7038)
!7046 = !DILocation(line: 2449, column: 42, scope: !7038)
!7047 = !DILocation(line: 2449, column: 4, scope: !7038)
!7048 = !DILocation(line: 2450, column: 7, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 2450, column: 7)
!7050 = !DILocation(line: 2450, column: 10, scope: !7049)
!7051 = !DILocation(line: 2450, column: 18, scope: !7049)
!7052 = !DILocation(line: 2450, column: 15, scope: !7049)
!7053 = !DILocation(line: 2450, column: 23, scope: !7049)
!7054 = !DILocation(line: 2450, column: 55, scope: !7049)
!7055 = !DILocation(line: 2450, column: 27, scope: !7049)
!7056 = !DILocation(line: 2450, column: 58, scope: !7049)
!7057 = !DILocation(line: 2451, column: 9, scope: !7049)
!7058 = !DILocation(line: 2451, column: 12, scope: !7049)
!7059 = !DILocation(line: 2451, column: 19, scope: !7049)
!7060 = !DILocation(line: 2451, column: 23, scope: !7049)
!7061 = !DILocation(line: 2451, column: 29, scope: !7049)
!7062 = !DILocation(line: 2451, column: 43, scope: !7049)
!7063 = !DILocation(line: 2452, column: 36, scope: !7049)
!7064 = !DILocation(line: 2452, column: 7, scope: !7049)
!7065 = !DILocation(line: 2452, column: 42, scope: !7049)
!7066 = !DILocation(line: 2452, column: 39, scope: !7049)
!7067 = !DILocation(line: 2450, column: 7, scope: !7033)
!7068 = !DILocation(line: 2453, column: 9, scope: !7049)
!7069 = !DILocation(line: 2453, column: 4, scope: !7049)
!7070 = !DILocation(line: 2454, column: 2, scope: !7033)
!7071 = !DILabel(scope: !6951, name: "done", file: !3, line: 2456)
!7072 = !DILocation(line: 2456, column: 1, scope: !6951)
!7073 = !DILocation(line: 2457, column: 11, scope: !6951)
!7074 = !DILocation(line: 2457, column: 16, scope: !6951)
!7075 = !DILocation(line: 2457, column: 2, scope: !6951)
!7076 = !DILocation(line: 2458, column: 9, scope: !6951)
!7077 = !DILocation(line: 2458, column: 2, scope: !6951)
!7078 = distinct !DISubprogram(name: "comedi_unlocked_ioctl", scope: !3, file: !3, line: 2111, type: !2961, scopeLine: 2113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!7079 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !7080)
!7080 = distinct !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !7081)
!7081 = distinct !DILocation(line: 2255, column: 7, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 2255, column: 7)
!7083 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 2252, column: 20)
!7084 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 2156, column: 15)
!7085 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !7080)
!7086 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !7080)
!7087 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !7080)
!7088 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !7080)
!7089 = !DILocation(line: 189, column: 22, scope: !6511, inlinedAt: !7081)
!7090 = !DILocation(line: 189, column: 45, scope: !6511, inlinedAt: !7081)
!7091 = !DILocation(line: 189, column: 65, scope: !6511, inlinedAt: !7081)
!7092 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !7093)
!7093 = distinct !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !7094)
!7094 = distinct !DILocation(line: 2242, column: 7, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7096, file: !3, line: 2242, column: 7)
!7096 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 2228, column: 24)
!7097 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !7093)
!7098 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !7093)
!7099 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !7093)
!7100 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !7093)
!7101 = !DILocation(line: 189, column: 22, scope: !6511, inlinedAt: !7094)
!7102 = !DILocation(line: 189, column: 45, scope: !6511, inlinedAt: !7094)
!7103 = !DILocation(line: 189, column: 65, scope: !6511, inlinedAt: !7094)
!7104 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !7105)
!7105 = distinct !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !7106)
!7106 = distinct !DILocation(line: 2232, column: 7, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7096, file: !3, line: 2232, column: 7)
!7108 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !7105)
!7109 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !7105)
!7110 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !7105)
!7111 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !7105)
!7112 = !DILocation(line: 189, column: 22, scope: !6511, inlinedAt: !7106)
!7113 = !DILocation(line: 189, column: 45, scope: !6511, inlinedAt: !7106)
!7114 = !DILocation(line: 189, column: 65, scope: !6511, inlinedAt: !7106)
!7115 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !7116)
!7116 = distinct !DILocation(line: 199, column: 6, scope: !6018, inlinedAt: !7117)
!7117 = distinct !DILocation(line: 2224, column: 15, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7119, file: !3, line: 2224, column: 7)
!7119 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 2215, column: 23)
!7120 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !7116)
!7121 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !7116)
!7122 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !7116)
!7123 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !7116)
!7124 = !DILocation(line: 197, column: 27, scope: !6020, inlinedAt: !7117)
!7125 = !DILocation(line: 197, column: 43, scope: !6020, inlinedAt: !7117)
!7126 = !DILocation(line: 197, column: 63, scope: !6020, inlinedAt: !7117)
!7127 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !7128)
!7128 = distinct !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !7129)
!7129 = distinct !DILocation(line: 2219, column: 7, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7119, file: !3, line: 2219, column: 7)
!7131 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !7128)
!7132 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !7128)
!7133 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !7128)
!7134 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !7128)
!7135 = !DILocation(line: 189, column: 22, scope: !6511, inlinedAt: !7129)
!7136 = !DILocation(line: 189, column: 45, scope: !6511, inlinedAt: !7129)
!7137 = !DILocation(line: 189, column: 65, scope: !6511, inlinedAt: !7129)
!7138 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !7139)
!7139 = distinct !DILocation(line: 199, column: 6, scope: !6018, inlinedAt: !7140)
!7140 = distinct !DILocation(line: 2211, column: 15, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7142, file: !3, line: 2211, column: 7)
!7142 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 2202, column: 19)
!7143 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !7139)
!7144 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !7139)
!7145 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !7139)
!7146 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !7139)
!7147 = !DILocation(line: 197, column: 27, scope: !6020, inlinedAt: !7140)
!7148 = !DILocation(line: 197, column: 43, scope: !6020, inlinedAt: !7140)
!7149 = !DILocation(line: 197, column: 63, scope: !6020, inlinedAt: !7140)
!7150 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !7151)
!7151 = distinct !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !7152)
!7152 = distinct !DILocation(line: 2206, column: 7, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7142, file: !3, line: 2206, column: 7)
!7154 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !7151)
!7155 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !7151)
!7156 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !7151)
!7157 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !7151)
!7158 = !DILocation(line: 189, column: 22, scope: !6511, inlinedAt: !7152)
!7159 = !DILocation(line: 189, column: 45, scope: !6511, inlinedAt: !7152)
!7160 = !DILocation(line: 189, column: 65, scope: !6511, inlinedAt: !7152)
!7161 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !7162)
!7162 = distinct !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !7163)
!7163 = distinct !DILocation(line: 2182, column: 7, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 2182, column: 7)
!7165 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 2179, column: 25)
!7166 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !7162)
!7167 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !7162)
!7168 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !7162)
!7169 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !7162)
!7170 = !DILocation(line: 189, column: 22, scope: !6511, inlinedAt: !7163)
!7171 = !DILocation(line: 189, column: 45, scope: !6511, inlinedAt: !7163)
!7172 = !DILocation(line: 189, column: 65, scope: !6511, inlinedAt: !7163)
!7173 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !7174)
!7174 = distinct !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !7175)
!7175 = distinct !DILocation(line: 2173, column: 7, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 2173, column: 7)
!7177 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 2170, column: 24)
!7178 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !7174)
!7179 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !7174)
!7180 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !7174)
!7181 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !7174)
!7182 = !DILocation(line: 189, column: 22, scope: !6511, inlinedAt: !7175)
!7183 = !DILocation(line: 189, column: 45, scope: !6511, inlinedAt: !7175)
!7184 = !DILocation(line: 189, column: 65, scope: !6511, inlinedAt: !7175)
!7185 = !DILocalVariable(name: "file", arg: 1, scope: !7078, file: !3, line: 2111, type: !354)
!7186 = !DILocation(line: 2111, column: 48, scope: !7078)
!7187 = !DILocalVariable(name: "cmd", arg: 2, scope: !7078, file: !3, line: 2111, type: !7)
!7188 = !DILocation(line: 2111, column: 67, scope: !7078)
!7189 = !DILocalVariable(name: "arg", arg: 3, scope: !7078, file: !3, line: 2112, type: !203)
!7190 = !DILocation(line: 2112, column: 21, scope: !7078)
!7191 = !DILocalVariable(name: "minor", scope: !7078, file: !3, line: 2114, type: !7)
!7192 = !DILocation(line: 2114, column: 15, scope: !7078)
!7193 = !DILocation(line: 2114, column: 41, scope: !7078)
!7194 = !DILocation(line: 2114, column: 30, scope: !7078)
!7195 = !DILocation(line: 2114, column: 23, scope: !7078)
!7196 = !DILocalVariable(name: "cfp", scope: !7078, file: !3, line: 2115, type: !6113)
!7197 = !DILocation(line: 2115, column: 22, scope: !7078)
!7198 = !DILocation(line: 2115, column: 28, scope: !7078)
!7199 = !DILocation(line: 2115, column: 34, scope: !7078)
!7200 = !DILocalVariable(name: "dev", scope: !7078, file: !3, line: 2116, type: !162)
!7201 = !DILocation(line: 2116, column: 24, scope: !7078)
!7202 = !DILocation(line: 2116, column: 30, scope: !7078)
!7203 = !DILocation(line: 2116, column: 35, scope: !7078)
!7204 = !DILocalVariable(name: "rc", scope: !7078, file: !3, line: 2117, type: !166)
!7205 = !DILocation(line: 2117, column: 6, scope: !7078)
!7206 = !DILocation(line: 2119, column: 14, scope: !7078)
!7207 = !DILocation(line: 2119, column: 19, scope: !7078)
!7208 = !DILocation(line: 2119, column: 2, scope: !7078)
!7209 = !DILocation(line: 2125, column: 6, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 2125, column: 6)
!7211 = !DILocation(line: 2125, column: 10, scope: !7210)
!7212 = !DILocation(line: 2125, column: 6, scope: !7078)
!7213 = !DILocation(line: 2126, column: 7, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7215, file: !3, line: 2126, column: 7)
!7215 = distinct !DILexicalBlock(scope: !7210, file: !3, line: 2125, column: 31)
!7216 = !DILocation(line: 2126, column: 13, scope: !7214)
!7217 = !DILocation(line: 2126, column: 7, scope: !7215)
!7218 = !DILocation(line: 2128, column: 7, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7214, file: !3, line: 2126, column: 41)
!7220 = !DILocation(line: 2129, column: 4, scope: !7219)
!7221 = !DILocation(line: 2131, column: 27, scope: !7215)
!7222 = !DILocation(line: 2132, column: 40, scope: !7215)
!7223 = !DILocation(line: 2132, column: 6, scope: !7215)
!7224 = !DILocation(line: 2131, column: 8, scope: !7215)
!7225 = !DILocation(line: 2131, column: 6, scope: !7215)
!7226 = !DILocation(line: 2133, column: 7, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7215, file: !3, line: 2133, column: 7)
!7228 = !DILocation(line: 2133, column: 10, scope: !7227)
!7229 = !DILocation(line: 2133, column: 7, scope: !7215)
!7230 = !DILocation(line: 2134, column: 8, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7232, file: !3, line: 2134, column: 8)
!7232 = distinct !DILexicalBlock(scope: !7227, file: !3, line: 2133, column: 16)
!7233 = !DILocation(line: 2134, column: 12, scope: !7231)
!7234 = !DILocation(line: 2134, column: 17, scope: !7231)
!7235 = !DILocation(line: 2135, column: 8, scope: !7231)
!7236 = !DILocation(line: 2135, column: 13, scope: !7231)
!7237 = !DILocation(line: 2135, column: 22, scope: !7231)
!7238 = !DILocation(line: 2135, column: 19, scope: !7231)
!7239 = !DILocation(line: 2134, column: 8, scope: !7232)
!7240 = !DILocation(line: 2140, column: 32, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 2140, column: 9)
!7242 = distinct !DILexicalBlock(scope: !7231, file: !3, line: 2135, column: 48)
!7243 = !DILocation(line: 2140, column: 9, scope: !7241)
!7244 = !DILocation(line: 2140, column: 9, scope: !7242)
!7245 = !DILocation(line: 2141, column: 20, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 2140, column: 38)
!7247 = !DILocation(line: 2141, column: 25, scope: !7246)
!7248 = !DILocation(line: 2141, column: 6, scope: !7246)
!7249 = !DILocation(line: 2142, column: 28, scope: !7246)
!7250 = !DILocation(line: 2142, column: 6, scope: !7246)
!7251 = !DILocation(line: 2143, column: 13, scope: !7246)
!7252 = !DILocation(line: 2143, column: 6, scope: !7246)
!7253 = !DILocation(line: 2145, column: 4, scope: !7242)
!7254 = !DILocation(line: 2146, column: 3, scope: !7232)
!7255 = !DILocation(line: 2147, column: 3, scope: !7215)
!7256 = !DILocation(line: 2150, column: 7, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 2150, column: 6)
!7258 = !DILocation(line: 2150, column: 12, scope: !7257)
!7259 = !DILocation(line: 2150, column: 6, scope: !7078)
!7260 = !DILocation(line: 2152, column: 6, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7257, file: !3, line: 2150, column: 22)
!7262 = !DILocation(line: 2153, column: 3, scope: !7261)
!7263 = !DILocation(line: 2156, column: 10, scope: !7078)
!7264 = !DILocation(line: 2156, column: 2, scope: !7078)
!7265 = !DILocation(line: 2158, column: 27, scope: !7084)
!7266 = !DILocation(line: 2159, column: 40, scope: !7084)
!7267 = !DILocation(line: 2159, column: 6, scope: !7084)
!7268 = !DILocation(line: 2158, column: 8, scope: !7084)
!7269 = !DILocation(line: 2158, column: 6, scope: !7084)
!7270 = !DILocation(line: 2160, column: 3, scope: !7084)
!7271 = !DILocation(line: 2162, column: 25, scope: !7084)
!7272 = !DILocation(line: 2162, column: 62, scope: !7084)
!7273 = !DILocation(line: 2162, column: 30, scope: !7084)
!7274 = !DILocation(line: 2163, column: 11, scope: !7084)
!7275 = !DILocation(line: 2162, column: 8, scope: !7084)
!7276 = !DILocation(line: 2162, column: 6, scope: !7084)
!7277 = !DILocation(line: 2164, column: 3, scope: !7084)
!7278 = !DILocation(line: 2166, column: 26, scope: !7084)
!7279 = !DILocation(line: 2167, column: 45, scope: !7084)
!7280 = !DILocation(line: 2167, column: 12, scope: !7084)
!7281 = !DILocation(line: 2168, column: 12, scope: !7084)
!7282 = !DILocation(line: 2166, column: 8, scope: !7084)
!7283 = !DILocation(line: 2166, column: 6, scope: !7084)
!7284 = !DILocation(line: 2169, column: 3, scope: !7084)
!7285 = !DILocalVariable(name: "it", scope: !7177, file: !3, line: 2171, type: !7286)
!7286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_chaninfo", file: !132, line: 633, size: 384, elements: !7287)
!7287 = !{!7288, !7289, !7290, !7291, !7292}
!7288 = !DIDerivedType(tag: DW_TAG_member, name: "subdev", scope: !7286, file: !132, line: 634, baseType: !7, size: 32)
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "maxdata_list", scope: !7286, file: !132, line: 635, baseType: !2724, size: 64, offset: 64)
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "flaglist", scope: !7286, file: !132, line: 636, baseType: !2724, size: 64, offset: 128)
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "rangelist", scope: !7286, file: !132, line: 637, baseType: !2724, size: 64, offset: 192)
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !7286, file: !132, line: 638, baseType: !4041, size: 128, offset: 256)
!7293 = !DILocation(line: 2171, column: 26, scope: !7177)
!7294 = !DILocation(line: 2173, column: 22, scope: !7176)
!7295 = !DILocation(line: 2173, column: 42, scope: !7176)
!7296 = !DILocation(line: 2173, column: 27, scope: !7176)
!7297 = !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !7175)
!7298 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !7174)
!7299 = !DILocation(line: 0, scope: !6298, inlinedAt: !7174)
!7300 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !7174)
!7301 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !7174)
!7302 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !7174)
!7303 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !7174)
!7304 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !7174)
!7305 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !7174)
!7306 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !7174)
!7307 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !7174)
!7308 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !7174)
!7309 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !7174)
!7310 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !7174)
!7311 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !7174)
!7312 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !7174)
!7313 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !7174)
!7314 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !7174)
!7315 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !7174)
!7316 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !7174)
!7317 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !7174)
!7318 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !7174)
!7319 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !7174)
!7320 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !7174)
!7321 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !7174)
!7322 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !7174)
!7323 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !7174)
!7324 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !7174)
!7325 = !DILocation(line: 191, column: 6, scope: !6511, inlinedAt: !7175)
!7326 = !DILocation(line: 192, column: 23, scope: !6510, inlinedAt: !7175)
!7327 = !DILocation(line: 192, column: 27, scope: !6510, inlinedAt: !7175)
!7328 = !DILocation(line: 192, column: 33, scope: !6510, inlinedAt: !7175)
!7329 = !DILocation(line: 192, column: 7, scope: !6510, inlinedAt: !7175)
!7330 = !DILocation(line: 192, column: 5, scope: !6510, inlinedAt: !7175)
!7331 = !DILocation(line: 192, column: 3, scope: !6510, inlinedAt: !7175)
!7332 = !DILocation(line: 193, column: 9, scope: !6511, inlinedAt: !7175)
!7333 = !DILocation(line: 2173, column: 7, scope: !7176)
!7334 = !DILocation(line: 2173, column: 7, scope: !7177)
!7335 = !DILocation(line: 2174, column: 7, scope: !7176)
!7336 = !DILocation(line: 2174, column: 4, scope: !7176)
!7337 = !DILocation(line: 2176, column: 27, scope: !7176)
!7338 = !DILocation(line: 2176, column: 9, scope: !7176)
!7339 = !DILocation(line: 2176, column: 7, scope: !7176)
!7340 = !DILocation(line: 2177, column: 3, scope: !7177)
!7341 = !DILocalVariable(name: "it", scope: !7165, file: !3, line: 2180, type: !7342)
!7342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_rangeinfo", file: !132, line: 658, size: 128, elements: !7343)
!7343 = !{!7344, !7345}
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "range_type", scope: !7342, file: !132, line: 659, baseType: !7, size: 32)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "range_ptr", scope: !7342, file: !132, line: 660, baseType: !161, size: 64, offset: 64)
!7346 = !DILocation(line: 2180, column: 27, scope: !7165)
!7347 = !DILocation(line: 2182, column: 22, scope: !7164)
!7348 = !DILocation(line: 2182, column: 42, scope: !7164)
!7349 = !DILocation(line: 2182, column: 27, scope: !7164)
!7350 = !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !7163)
!7351 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !7162)
!7352 = !DILocation(line: 0, scope: !6298, inlinedAt: !7162)
!7353 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !7162)
!7354 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !7162)
!7355 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !7162)
!7356 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !7162)
!7357 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !7162)
!7358 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !7162)
!7359 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !7162)
!7360 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !7162)
!7361 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !7162)
!7362 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !7162)
!7363 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !7162)
!7364 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !7162)
!7365 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !7162)
!7366 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !7162)
!7367 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !7162)
!7368 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !7162)
!7369 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !7162)
!7370 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !7162)
!7371 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !7162)
!7372 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !7162)
!7373 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !7162)
!7374 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !7162)
!7375 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !7162)
!7376 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !7162)
!7377 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !7162)
!7378 = !DILocation(line: 191, column: 6, scope: !6511, inlinedAt: !7163)
!7379 = !DILocation(line: 192, column: 23, scope: !6510, inlinedAt: !7163)
!7380 = !DILocation(line: 192, column: 27, scope: !6510, inlinedAt: !7163)
!7381 = !DILocation(line: 192, column: 33, scope: !6510, inlinedAt: !7163)
!7382 = !DILocation(line: 192, column: 7, scope: !6510, inlinedAt: !7163)
!7383 = !DILocation(line: 192, column: 5, scope: !6510, inlinedAt: !7163)
!7384 = !DILocation(line: 192, column: 3, scope: !6510, inlinedAt: !7163)
!7385 = !DILocation(line: 193, column: 9, scope: !6511, inlinedAt: !7163)
!7386 = !DILocation(line: 2182, column: 7, scope: !7164)
!7387 = !DILocation(line: 2182, column: 7, scope: !7165)
!7388 = !DILocation(line: 2183, column: 7, scope: !7164)
!7389 = !DILocation(line: 2183, column: 4, scope: !7164)
!7390 = !DILocation(line: 2185, column: 28, scope: !7164)
!7391 = !DILocation(line: 2185, column: 9, scope: !7164)
!7392 = !DILocation(line: 2185, column: 7, scope: !7164)
!7393 = !DILocation(line: 2186, column: 3, scope: !7165)
!7394 = !DILocation(line: 2189, column: 25, scope: !7084)
!7395 = !DILocation(line: 2190, column: 43, scope: !7084)
!7396 = !DILocation(line: 2190, column: 11, scope: !7084)
!7397 = !DILocation(line: 2191, column: 11, scope: !7084)
!7398 = !DILocation(line: 2189, column: 8, scope: !7084)
!7399 = !DILocation(line: 2189, column: 6, scope: !7084)
!7400 = !DILocation(line: 2192, column: 3, scope: !7084)
!7401 = !DILocation(line: 2194, column: 22, scope: !7084)
!7402 = !DILocation(line: 2194, column: 27, scope: !7084)
!7403 = !DILocation(line: 2194, column: 32, scope: !7084)
!7404 = !DILocation(line: 2194, column: 8, scope: !7084)
!7405 = !DILocation(line: 2194, column: 6, scope: !7084)
!7406 = !DILocation(line: 2195, column: 3, scope: !7084)
!7407 = !DILocation(line: 2197, column: 24, scope: !7084)
!7408 = !DILocation(line: 2197, column: 29, scope: !7084)
!7409 = !DILocation(line: 2197, column: 34, scope: !7084)
!7410 = !DILocation(line: 2197, column: 8, scope: !7084)
!7411 = !DILocation(line: 2197, column: 6, scope: !7084)
!7412 = !DILocation(line: 2198, column: 3, scope: !7084)
!7413 = !DILocation(line: 2200, column: 24, scope: !7084)
!7414 = !DILocation(line: 2200, column: 29, scope: !7084)
!7415 = !DILocation(line: 2200, column: 34, scope: !7084)
!7416 = !DILocation(line: 2200, column: 8, scope: !7084)
!7417 = !DILocation(line: 2200, column: 6, scope: !7084)
!7418 = !DILocation(line: 2201, column: 3, scope: !7084)
!7419 = !DILocalVariable(name: "cmd", scope: !7142, file: !3, line: 2203, type: !3916)
!7420 = !DILocation(line: 2203, column: 21, scope: !7142)
!7421 = !DILocalVariable(name: "copy", scope: !7142, file: !3, line: 2204, type: !492)
!7422 = !DILocation(line: 2204, column: 8, scope: !7142)
!7423 = !DILocation(line: 2206, column: 22, scope: !7153)
!7424 = !DILocation(line: 2206, column: 43, scope: !7153)
!7425 = !DILocation(line: 2206, column: 28, scope: !7153)
!7426 = !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !7152)
!7427 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !7151)
!7428 = !DILocation(line: 0, scope: !6298, inlinedAt: !7151)
!7429 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !7151)
!7430 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !7151)
!7431 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !7151)
!7432 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !7151)
!7433 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !7151)
!7434 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !7151)
!7435 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !7151)
!7436 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !7151)
!7437 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !7151)
!7438 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !7151)
!7439 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !7151)
!7440 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !7151)
!7441 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !7151)
!7442 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !7151)
!7443 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !7151)
!7444 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !7151)
!7445 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !7151)
!7446 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !7151)
!7447 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !7151)
!7448 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !7151)
!7449 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !7151)
!7450 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !7151)
!7451 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !7151)
!7452 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !7151)
!7453 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !7151)
!7454 = !DILocation(line: 191, column: 6, scope: !6511, inlinedAt: !7152)
!7455 = !DILocation(line: 192, column: 23, scope: !6510, inlinedAt: !7152)
!7456 = !DILocation(line: 192, column: 27, scope: !6510, inlinedAt: !7152)
!7457 = !DILocation(line: 192, column: 33, scope: !6510, inlinedAt: !7152)
!7458 = !DILocation(line: 192, column: 7, scope: !6510, inlinedAt: !7152)
!7459 = !DILocation(line: 192, column: 5, scope: !6510, inlinedAt: !7152)
!7460 = !DILocation(line: 192, column: 3, scope: !6510, inlinedAt: !7152)
!7461 = !DILocation(line: 193, column: 9, scope: !6511, inlinedAt: !7152)
!7462 = !DILocation(line: 2206, column: 7, scope: !7153)
!7463 = !DILocation(line: 2206, column: 7, scope: !7142)
!7464 = !DILocation(line: 2207, column: 7, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 2206, column: 62)
!7466 = !DILocation(line: 2208, column: 4, scope: !7465)
!7467 = !DILocation(line: 2210, column: 21, scope: !7142)
!7468 = !DILocation(line: 2210, column: 39, scope: !7142)
!7469 = !DILocation(line: 2210, column: 8, scope: !7142)
!7470 = !DILocation(line: 2210, column: 6, scope: !7142)
!7471 = !DILocation(line: 2211, column: 7, scope: !7141)
!7472 = !DILocation(line: 2211, column: 12, scope: !7141)
!7473 = !DILocation(line: 2211, column: 43, scope: !7141)
!7474 = !DILocation(line: 2211, column: 28, scope: !7141)
!7475 = !DILocation(line: 2211, column: 48, scope: !7141)
!7476 = !DILocation(line: 199, column: 6, scope: !6018, inlinedAt: !7140)
!7477 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !7139)
!7478 = !DILocation(line: 0, scope: !6298, inlinedAt: !7139)
!7479 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !7139)
!7480 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !7139)
!7481 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !7139)
!7482 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !7139)
!7483 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !7139)
!7484 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !7139)
!7485 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !7139)
!7486 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !7139)
!7487 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !7139)
!7488 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !7139)
!7489 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !7139)
!7490 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !7139)
!7491 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !7139)
!7492 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !7139)
!7493 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !7139)
!7494 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !7139)
!7495 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !7139)
!7496 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !7139)
!7497 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !7139)
!7498 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !7139)
!7499 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !7139)
!7500 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !7139)
!7501 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !7139)
!7502 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !7139)
!7503 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !7139)
!7504 = !DILocation(line: 199, column: 6, scope: !6020, inlinedAt: !7140)
!7505 = !DILocation(line: 200, column: 21, scope: !6018, inlinedAt: !7140)
!7506 = !DILocation(line: 200, column: 25, scope: !6018, inlinedAt: !7140)
!7507 = !DILocation(line: 200, column: 31, scope: !6018, inlinedAt: !7140)
!7508 = !DILocation(line: 200, column: 7, scope: !6018, inlinedAt: !7140)
!7509 = !DILocation(line: 200, column: 5, scope: !6018, inlinedAt: !7140)
!7510 = !DILocation(line: 200, column: 3, scope: !6018, inlinedAt: !7140)
!7511 = !DILocation(line: 201, column: 9, scope: !6020, inlinedAt: !7140)
!7512 = !DILocation(line: 2211, column: 15, scope: !7141)
!7513 = !DILocation(line: 2211, column: 7, scope: !7142)
!7514 = !DILocation(line: 2212, column: 7, scope: !7141)
!7515 = !DILocation(line: 2212, column: 4, scope: !7141)
!7516 = !DILocation(line: 2213, column: 3, scope: !7142)
!7517 = !DILocalVariable(name: "cmd", scope: !7119, file: !3, line: 2216, type: !3916)
!7518 = !DILocation(line: 2216, column: 21, scope: !7119)
!7519 = !DILocalVariable(name: "copy", scope: !7119, file: !3, line: 2217, type: !492)
!7520 = !DILocation(line: 2217, column: 8, scope: !7119)
!7521 = !DILocation(line: 2219, column: 22, scope: !7130)
!7522 = !DILocation(line: 2219, column: 43, scope: !7130)
!7523 = !DILocation(line: 2219, column: 28, scope: !7130)
!7524 = !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !7129)
!7525 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !7128)
!7526 = !DILocation(line: 0, scope: !6298, inlinedAt: !7128)
!7527 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !7128)
!7528 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !7128)
!7529 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !7128)
!7530 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !7128)
!7531 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !7128)
!7532 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !7128)
!7533 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !7128)
!7534 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !7128)
!7535 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !7128)
!7536 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !7128)
!7537 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !7128)
!7538 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !7128)
!7539 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !7128)
!7540 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !7128)
!7541 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !7128)
!7542 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !7128)
!7543 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !7128)
!7544 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !7128)
!7545 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !7128)
!7546 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !7128)
!7547 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !7128)
!7548 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !7128)
!7549 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !7128)
!7550 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !7128)
!7551 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !7128)
!7552 = !DILocation(line: 191, column: 6, scope: !6511, inlinedAt: !7129)
!7553 = !DILocation(line: 192, column: 23, scope: !6510, inlinedAt: !7129)
!7554 = !DILocation(line: 192, column: 27, scope: !6510, inlinedAt: !7129)
!7555 = !DILocation(line: 192, column: 33, scope: !6510, inlinedAt: !7129)
!7556 = !DILocation(line: 192, column: 7, scope: !6510, inlinedAt: !7129)
!7557 = !DILocation(line: 192, column: 5, scope: !6510, inlinedAt: !7129)
!7558 = !DILocation(line: 192, column: 3, scope: !6510, inlinedAt: !7129)
!7559 = !DILocation(line: 193, column: 9, scope: !6511, inlinedAt: !7129)
!7560 = !DILocation(line: 2219, column: 7, scope: !7130)
!7561 = !DILocation(line: 2219, column: 7, scope: !7119)
!7562 = !DILocation(line: 2220, column: 7, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 2219, column: 62)
!7564 = !DILocation(line: 2221, column: 4, scope: !7563)
!7565 = !DILocation(line: 2223, column: 25, scope: !7119)
!7566 = !DILocation(line: 2223, column: 43, scope: !7119)
!7567 = !DILocation(line: 2223, column: 8, scope: !7119)
!7568 = !DILocation(line: 2223, column: 6, scope: !7119)
!7569 = !DILocation(line: 2224, column: 7, scope: !7118)
!7570 = !DILocation(line: 2224, column: 12, scope: !7118)
!7571 = !DILocation(line: 2224, column: 43, scope: !7118)
!7572 = !DILocation(line: 2224, column: 28, scope: !7118)
!7573 = !DILocation(line: 2224, column: 48, scope: !7118)
!7574 = !DILocation(line: 199, column: 6, scope: !6018, inlinedAt: !7117)
!7575 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !7116)
!7576 = !DILocation(line: 0, scope: !6298, inlinedAt: !7116)
!7577 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !7116)
!7578 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !7116)
!7579 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !7116)
!7580 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !7116)
!7581 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !7116)
!7582 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !7116)
!7583 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !7116)
!7584 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !7116)
!7585 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !7116)
!7586 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !7116)
!7587 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !7116)
!7588 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !7116)
!7589 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !7116)
!7590 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !7116)
!7591 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !7116)
!7592 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !7116)
!7593 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !7116)
!7594 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !7116)
!7595 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !7116)
!7596 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !7116)
!7597 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !7116)
!7598 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !7116)
!7599 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !7116)
!7600 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !7116)
!7601 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !7116)
!7602 = !DILocation(line: 199, column: 6, scope: !6020, inlinedAt: !7117)
!7603 = !DILocation(line: 200, column: 21, scope: !6018, inlinedAt: !7117)
!7604 = !DILocation(line: 200, column: 25, scope: !6018, inlinedAt: !7117)
!7605 = !DILocation(line: 200, column: 31, scope: !6018, inlinedAt: !7117)
!7606 = !DILocation(line: 200, column: 7, scope: !6018, inlinedAt: !7117)
!7607 = !DILocation(line: 200, column: 5, scope: !6018, inlinedAt: !7117)
!7608 = !DILocation(line: 200, column: 3, scope: !6018, inlinedAt: !7117)
!7609 = !DILocation(line: 201, column: 9, scope: !6020, inlinedAt: !7117)
!7610 = !DILocation(line: 2224, column: 15, scope: !7118)
!7611 = !DILocation(line: 2224, column: 7, scope: !7119)
!7612 = !DILocation(line: 2225, column: 7, scope: !7118)
!7613 = !DILocation(line: 2225, column: 4, scope: !7118)
!7614 = !DILocation(line: 2226, column: 3, scope: !7119)
!7615 = !DILocalVariable(name: "insnlist", scope: !7096, file: !3, line: 2229, type: !7616)
!7616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "comedi_insnlist", file: !132, line: 507, size: 128, elements: !7617)
!7617 = !{!7618, !7619}
!7618 = !DIDerivedType(tag: DW_TAG_member, name: "n_insns", scope: !7616, file: !132, line: 508, baseType: !7, size: 32)
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !7616, file: !132, line: 509, baseType: !3970, size: 64, offset: 64)
!7620 = !DILocation(line: 2229, column: 26, scope: !7096)
!7621 = !DILocalVariable(name: "insns", scope: !7096, file: !3, line: 2230, type: !3970)
!7622 = !DILocation(line: 2230, column: 23, scope: !7096)
!7623 = !DILocation(line: 2232, column: 22, scope: !7107)
!7624 = !DILocation(line: 2232, column: 48, scope: !7107)
!7625 = !DILocation(line: 2232, column: 33, scope: !7107)
!7626 = !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !7106)
!7627 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !7105)
!7628 = !DILocation(line: 0, scope: !6298, inlinedAt: !7105)
!7629 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !7105)
!7630 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !7105)
!7631 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !7105)
!7632 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !7105)
!7633 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !7105)
!7634 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !7105)
!7635 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !7105)
!7636 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !7105)
!7637 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !7105)
!7638 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !7105)
!7639 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !7105)
!7640 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !7105)
!7641 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !7105)
!7642 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !7105)
!7643 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !7105)
!7644 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !7105)
!7645 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !7105)
!7646 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !7105)
!7647 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !7105)
!7648 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !7105)
!7649 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !7105)
!7650 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !7105)
!7651 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !7105)
!7652 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !7105)
!7653 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !7105)
!7654 = !DILocation(line: 191, column: 6, scope: !6511, inlinedAt: !7106)
!7655 = !DILocation(line: 192, column: 23, scope: !6510, inlinedAt: !7106)
!7656 = !DILocation(line: 192, column: 27, scope: !6510, inlinedAt: !7106)
!7657 = !DILocation(line: 192, column: 33, scope: !6510, inlinedAt: !7106)
!7658 = !DILocation(line: 192, column: 7, scope: !6510, inlinedAt: !7106)
!7659 = !DILocation(line: 192, column: 5, scope: !6510, inlinedAt: !7106)
!7660 = !DILocation(line: 192, column: 3, scope: !6510, inlinedAt: !7106)
!7661 = !DILocation(line: 193, column: 9, scope: !6511, inlinedAt: !7106)
!7662 = !DILocation(line: 2232, column: 7, scope: !7107)
!7663 = !DILocation(line: 2232, column: 7, scope: !7096)
!7664 = !DILocation(line: 2234, column: 7, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7107, file: !3, line: 2233, column: 27)
!7666 = !DILocation(line: 2235, column: 4, scope: !7665)
!7667 = !DILocation(line: 2237, column: 28, scope: !7096)
!7668 = !DILocation(line: 2237, column: 19, scope: !7096)
!7669 = !DILocation(line: 2237, column: 11, scope: !7096)
!7670 = !DILocation(line: 2237, column: 9, scope: !7096)
!7671 = !DILocation(line: 2238, column: 8, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7096, file: !3, line: 2238, column: 7)
!7673 = !DILocation(line: 2238, column: 7, scope: !7096)
!7674 = !DILocation(line: 2239, column: 7, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7672, file: !3, line: 2238, column: 15)
!7676 = !DILocation(line: 2240, column: 4, scope: !7675)
!7677 = !DILocation(line: 2242, column: 22, scope: !7095)
!7678 = !DILocation(line: 2242, column: 38, scope: !7095)
!7679 = !DILocation(line: 2242, column: 29, scope: !7095)
!7680 = !DILocation(line: 2243, column: 34, scope: !7095)
!7681 = !DILocation(line: 2243, column: 25, scope: !7095)
!7682 = !DILocation(line: 2243, column: 23, scope: !7095)
!7683 = !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !7094)
!7684 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !7093)
!7685 = !DILocation(line: 0, scope: !6298, inlinedAt: !7093)
!7686 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !7093)
!7687 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !7093)
!7688 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !7093)
!7689 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !7093)
!7690 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !7093)
!7691 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !7093)
!7692 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !7093)
!7693 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !7093)
!7694 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !7093)
!7695 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !7093)
!7696 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !7093)
!7697 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !7093)
!7698 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !7093)
!7699 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !7093)
!7700 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !7093)
!7701 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !7093)
!7702 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !7093)
!7703 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !7093)
!7704 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !7093)
!7705 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !7093)
!7706 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !7093)
!7707 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !7093)
!7708 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !7093)
!7709 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !7093)
!7710 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !7093)
!7711 = !DILocation(line: 191, column: 6, scope: !6511, inlinedAt: !7094)
!7712 = !DILocation(line: 192, column: 23, scope: !6510, inlinedAt: !7094)
!7713 = !DILocation(line: 192, column: 27, scope: !6510, inlinedAt: !7094)
!7714 = !DILocation(line: 192, column: 33, scope: !6510, inlinedAt: !7094)
!7715 = !DILocation(line: 192, column: 7, scope: !6510, inlinedAt: !7094)
!7716 = !DILocation(line: 192, column: 5, scope: !6510, inlinedAt: !7094)
!7717 = !DILocation(line: 192, column: 3, scope: !6510, inlinedAt: !7094)
!7718 = !DILocation(line: 193, column: 9, scope: !6511, inlinedAt: !7094)
!7719 = !DILocation(line: 2242, column: 7, scope: !7095)
!7720 = !DILocation(line: 2242, column: 7, scope: !7096)
!7721 = !DILocation(line: 2244, column: 7, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7095, file: !3, line: 2243, column: 44)
!7723 = !DILocation(line: 2245, column: 10, scope: !7722)
!7724 = !DILocation(line: 2245, column: 4, scope: !7722)
!7725 = !DILocation(line: 2246, column: 4, scope: !7722)
!7726 = !DILocation(line: 2248, column: 26, scope: !7096)
!7727 = !DILocation(line: 2248, column: 31, scope: !7096)
!7728 = !DILocation(line: 2248, column: 47, scope: !7096)
!7729 = !DILocation(line: 2248, column: 56, scope: !7096)
!7730 = !DILocation(line: 2248, column: 8, scope: !7096)
!7731 = !DILocation(line: 2248, column: 6, scope: !7096)
!7732 = !DILocation(line: 2249, column: 9, scope: !7096)
!7733 = !DILocation(line: 2249, column: 3, scope: !7096)
!7734 = !DILocation(line: 2250, column: 3, scope: !7096)
!7735 = !DILocalVariable(name: "insn", scope: !7083, file: !3, line: 2253, type: !3971)
!7736 = !DILocation(line: 2253, column: 22, scope: !7083)
!7737 = !DILocation(line: 2255, column: 22, scope: !7082)
!7738 = !DILocation(line: 2255, column: 44, scope: !7082)
!7739 = !DILocation(line: 2255, column: 29, scope: !7082)
!7740 = !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !7081)
!7741 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !7080)
!7742 = !DILocation(line: 0, scope: !6298, inlinedAt: !7080)
!7743 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !7080)
!7744 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !7080)
!7745 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !7080)
!7746 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !7080)
!7747 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !7080)
!7748 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !7080)
!7749 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !7080)
!7750 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !7080)
!7751 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !7080)
!7752 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !7080)
!7753 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !7080)
!7754 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !7080)
!7755 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !7080)
!7756 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !7080)
!7757 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !7080)
!7758 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !7080)
!7759 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !7080)
!7760 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !7080)
!7761 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !7080)
!7762 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !7080)
!7763 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !7080)
!7764 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !7080)
!7765 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !7080)
!7766 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !7080)
!7767 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !7080)
!7768 = !DILocation(line: 191, column: 6, scope: !6511, inlinedAt: !7081)
!7769 = !DILocation(line: 192, column: 23, scope: !6510, inlinedAt: !7081)
!7770 = !DILocation(line: 192, column: 27, scope: !6510, inlinedAt: !7081)
!7771 = !DILocation(line: 192, column: 33, scope: !6510, inlinedAt: !7081)
!7772 = !DILocation(line: 192, column: 7, scope: !6510, inlinedAt: !7081)
!7773 = !DILocation(line: 192, column: 5, scope: !6510, inlinedAt: !7081)
!7774 = !DILocation(line: 192, column: 3, scope: !6510, inlinedAt: !7081)
!7775 = !DILocation(line: 193, column: 9, scope: !6511, inlinedAt: !7081)
!7776 = !DILocation(line: 2255, column: 7, scope: !7082)
!7777 = !DILocation(line: 2255, column: 7, scope: !7083)
!7778 = !DILocation(line: 2256, column: 7, scope: !7082)
!7779 = !DILocation(line: 2256, column: 4, scope: !7082)
!7780 = !DILocation(line: 2258, column: 23, scope: !7082)
!7781 = !DILocation(line: 2258, column: 35, scope: !7082)
!7782 = !DILocation(line: 2258, column: 9, scope: !7082)
!7783 = !DILocation(line: 2258, column: 7, scope: !7082)
!7784 = !DILocation(line: 2259, column: 3, scope: !7083)
!7785 = !DILocation(line: 2262, column: 22, scope: !7084)
!7786 = !DILocation(line: 2262, column: 27, scope: !7084)
!7787 = !DILocation(line: 2262, column: 32, scope: !7084)
!7788 = !DILocation(line: 2262, column: 8, scope: !7084)
!7789 = !DILocation(line: 2262, column: 6, scope: !7084)
!7790 = !DILocation(line: 2263, column: 3, scope: !7084)
!7791 = !DILocation(line: 2265, column: 26, scope: !7084)
!7792 = !DILocation(line: 2265, column: 31, scope: !7084)
!7793 = !DILocation(line: 2265, column: 36, scope: !7084)
!7794 = !DILocation(line: 2265, column: 8, scope: !7084)
!7795 = !DILocation(line: 2265, column: 6, scope: !7084)
!7796 = !DILocation(line: 2266, column: 3, scope: !7084)
!7797 = !DILocation(line: 2268, column: 26, scope: !7084)
!7798 = !DILocation(line: 2268, column: 31, scope: !7084)
!7799 = !DILocation(line: 2268, column: 36, scope: !7084)
!7800 = !DILocation(line: 2268, column: 8, scope: !7084)
!7801 = !DILocation(line: 2268, column: 6, scope: !7084)
!7802 = !DILocation(line: 2269, column: 3, scope: !7084)
!7803 = !DILocation(line: 2271, column: 6, scope: !7084)
!7804 = !DILocation(line: 2272, column: 3, scope: !7084)
!7805 = !DILocation(line: 2273, column: 2, scope: !7084)
!7806 = !DILabel(scope: !7078, name: "done", file: !3, line: 2275)
!7807 = !DILocation(line: 2275, column: 1, scope: !7078)
!7808 = !DILocation(line: 2276, column: 16, scope: !7078)
!7809 = !DILocation(line: 2276, column: 21, scope: !7078)
!7810 = !DILocation(line: 2276, column: 2, scope: !7078)
!7811 = !DILocation(line: 2277, column: 9, scope: !7078)
!7812 = !DILocation(line: 2277, column: 2, scope: !7078)
!7813 = !DILocation(line: 2278, column: 1, scope: !7078)
!7814 = distinct !DISubprogram(name: "comedi_mmap", scope: !3, file: !3, line: 2316, type: !2966, scopeLine: 2317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!7815 = !DILocalVariable(name: "file", arg: 1, scope: !7814, file: !3, line: 2316, type: !354)
!7816 = !DILocation(line: 2316, column: 37, scope: !7814)
!7817 = !DILocalVariable(name: "vma", arg: 2, scope: !7814, file: !3, line: 2316, type: !1023)
!7818 = !DILocation(line: 2316, column: 66, scope: !7814)
!7819 = !DILocalVariable(name: "cfp", scope: !7814, file: !3, line: 2318, type: !6113)
!7820 = !DILocation(line: 2318, column: 22, scope: !7814)
!7821 = !DILocation(line: 2318, column: 28, scope: !7814)
!7822 = !DILocation(line: 2318, column: 34, scope: !7814)
!7823 = !DILocalVariable(name: "dev", scope: !7814, file: !3, line: 2319, type: !162)
!7824 = !DILocation(line: 2319, column: 24, scope: !7814)
!7825 = !DILocation(line: 2319, column: 30, scope: !7814)
!7826 = !DILocation(line: 2319, column: 35, scope: !7814)
!7827 = !DILocalVariable(name: "s", scope: !7814, file: !3, line: 2320, type: !3871)
!7828 = !DILocation(line: 2320, column: 27, scope: !7814)
!7829 = !DILocalVariable(name: "async", scope: !7814, file: !3, line: 2321, type: !3882)
!7830 = !DILocation(line: 2321, column: 23, scope: !7814)
!7831 = !DILocalVariable(name: "bm", scope: !7814, file: !3, line: 2322, type: !3888)
!7832 = !DILocation(line: 2322, column: 25, scope: !7814)
!7833 = !DILocalVariable(name: "buf", scope: !7814, file: !3, line: 2323, type: !3893)
!7834 = !DILocation(line: 2323, column: 26, scope: !7814)
!7835 = !DILocalVariable(name: "start", scope: !7814, file: !3, line: 2324, type: !203)
!7836 = !DILocation(line: 2324, column: 16, scope: !7814)
!7837 = !DILocation(line: 2324, column: 24, scope: !7814)
!7838 = !DILocation(line: 2324, column: 29, scope: !7814)
!7839 = !DILocalVariable(name: "size", scope: !7814, file: !3, line: 2325, type: !203)
!7840 = !DILocation(line: 2325, column: 16, scope: !7814)
!7841 = !DILocalVariable(name: "n_pages", scope: !7814, file: !3, line: 2326, type: !166)
!7842 = !DILocation(line: 2326, column: 6, scope: !7814)
!7843 = !DILocalVariable(name: "i", scope: !7814, file: !3, line: 2327, type: !166)
!7844 = !DILocation(line: 2327, column: 6, scope: !7814)
!7845 = !DILocalVariable(name: "retval", scope: !7814, file: !3, line: 2328, type: !166)
!7846 = !DILocation(line: 2328, column: 6, scope: !7814)
!7847 = !DILocation(line: 2336, column: 26, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7814, file: !3, line: 2336, column: 6)
!7849 = !DILocation(line: 2336, column: 31, scope: !7848)
!7850 = !DILocation(line: 2336, column: 7, scope: !7848)
!7851 = !DILocation(line: 2336, column: 6, scope: !7814)
!7852 = !DILocation(line: 2337, column: 3, scope: !7848)
!7853 = !DILocation(line: 2339, column: 7, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7814, file: !3, line: 2339, column: 6)
!7855 = !DILocation(line: 2339, column: 12, scope: !7854)
!7856 = !DILocation(line: 2339, column: 6, scope: !7814)
!7857 = !DILocation(line: 2341, column: 10, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7854, file: !3, line: 2339, column: 22)
!7859 = !DILocation(line: 2342, column: 3, scope: !7858)
!7860 = !DILocation(line: 2345, column: 6, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7814, file: !3, line: 2345, column: 6)
!7862 = !DILocation(line: 2345, column: 11, scope: !7861)
!7863 = !DILocation(line: 2345, column: 20, scope: !7861)
!7864 = !DILocation(line: 2345, column: 6, scope: !7814)
!7865 = !DILocation(line: 2346, column: 35, scope: !7861)
!7866 = !DILocation(line: 2346, column: 7, scope: !7861)
!7867 = !DILocation(line: 2346, column: 5, scope: !7861)
!7868 = !DILocation(line: 2346, column: 3, scope: !7861)
!7869 = !DILocation(line: 2348, column: 34, scope: !7861)
!7870 = !DILocation(line: 2348, column: 7, scope: !7861)
!7871 = !DILocation(line: 2348, column: 5, scope: !7861)
!7872 = !DILocation(line: 2349, column: 7, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7814, file: !3, line: 2349, column: 6)
!7874 = !DILocation(line: 2349, column: 6, scope: !7814)
!7875 = !DILocation(line: 2350, column: 10, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7873, file: !3, line: 2349, column: 10)
!7877 = !DILocation(line: 2351, column: 3, scope: !7876)
!7878 = !DILocation(line: 2354, column: 10, scope: !7814)
!7879 = !DILocation(line: 2354, column: 13, scope: !7814)
!7880 = !DILocation(line: 2354, column: 8, scope: !7814)
!7881 = !DILocation(line: 2355, column: 7, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7814, file: !3, line: 2355, column: 6)
!7883 = !DILocation(line: 2355, column: 6, scope: !7814)
!7884 = !DILocation(line: 2356, column: 10, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7882, file: !3, line: 2355, column: 14)
!7886 = !DILocation(line: 2357, column: 3, scope: !7885)
!7887 = !DILocation(line: 2360, column: 6, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7814, file: !3, line: 2360, column: 6)
!7889 = !DILocation(line: 2360, column: 11, scope: !7888)
!7890 = !DILocation(line: 2360, column: 20, scope: !7888)
!7891 = !DILocation(line: 2360, column: 6, scope: !7814)
!7892 = !DILocation(line: 2362, column: 10, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7888, file: !3, line: 2360, column: 26)
!7894 = !DILocation(line: 2363, column: 3, scope: !7893)
!7895 = !DILocation(line: 2366, column: 9, scope: !7814)
!7896 = !DILocation(line: 2366, column: 14, scope: !7814)
!7897 = !DILocation(line: 2366, column: 23, scope: !7814)
!7898 = !DILocation(line: 2366, column: 28, scope: !7814)
!7899 = !DILocation(line: 2366, column: 21, scope: !7814)
!7900 = !DILocation(line: 2366, column: 7, scope: !7814)
!7901 = !DILocation(line: 2367, column: 6, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7814, file: !3, line: 2367, column: 6)
!7903 = !DILocation(line: 2367, column: 13, scope: !7902)
!7904 = !DILocation(line: 2367, column: 20, scope: !7902)
!7905 = !DILocation(line: 2367, column: 11, scope: !7902)
!7906 = !DILocation(line: 2367, column: 6, scope: !7814)
!7907 = !DILocation(line: 2368, column: 10, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7902, file: !3, line: 2367, column: 36)
!7909 = !DILocation(line: 2369, column: 3, scope: !7908)
!7910 = !DILocation(line: 2371, column: 6, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7814, file: !3, line: 2371, column: 6)
!7912 = !DILocation(line: 2371, column: 6, scope: !7814)
!7913 = !DILocation(line: 2372, column: 10, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7911, file: !3, line: 2371, column: 28)
!7915 = !DILocation(line: 2373, column: 3, scope: !7914)
!7916 = !DILocation(line: 2376, column: 22, scope: !7814)
!7917 = !DILocation(line: 2376, column: 12, scope: !7814)
!7918 = !DILocation(line: 2376, column: 10, scope: !7814)
!7919 = !DILocation(line: 2379, column: 38, scope: !7814)
!7920 = !DILocation(line: 2379, column: 7, scope: !7814)
!7921 = !DILocation(line: 2379, column: 5, scope: !7814)
!7922 = !DILocation(line: 2380, column: 7, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7814, file: !3, line: 2380, column: 6)
!7924 = !DILocation(line: 2380, column: 10, scope: !7923)
!7925 = !DILocation(line: 2380, column: 13, scope: !7923)
!7926 = !DILocation(line: 2380, column: 23, scope: !7923)
!7927 = !DILocation(line: 2380, column: 27, scope: !7923)
!7928 = !DILocation(line: 2380, column: 21, scope: !7923)
!7929 = !DILocation(line: 2380, column: 6, scope: !7814)
!7930 = !DILocation(line: 2381, column: 10, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7923, file: !3, line: 2380, column: 36)
!7932 = !DILocation(line: 2382, column: 3, scope: !7931)
!7933 = !DILocation(line: 2384, column: 6, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7814, file: !3, line: 2384, column: 6)
!7935 = !DILocation(line: 2384, column: 10, scope: !7934)
!7936 = !DILocation(line: 2384, column: 18, scope: !7934)
!7937 = !DILocation(line: 2384, column: 6, scope: !7814)
!7938 = !DILocation(line: 2389, column: 10, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7934, file: !3, line: 2384, column: 31)
!7940 = !DILocation(line: 2389, column: 14, scope: !7939)
!7941 = !DILocation(line: 2389, column: 7, scope: !7939)
!7942 = !DILocation(line: 2390, column: 12, scope: !7939)
!7943 = !DILocation(line: 2390, column: 10, scope: !7939)
!7944 = !DILocation(line: 2392, column: 2, scope: !7939)
!7945 = !DILocation(line: 2393, column: 10, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 2393, column: 3)
!7947 = distinct !DILexicalBlock(scope: !7934, file: !3, line: 2392, column: 9)
!7948 = !DILocation(line: 2393, column: 8, scope: !7946)
!7949 = !DILocation(line: 2393, column: 15, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7946, file: !3, line: 2393, column: 3)
!7951 = !DILocation(line: 2393, column: 19, scope: !7950)
!7952 = !DILocation(line: 2393, column: 17, scope: !7950)
!7953 = !DILocation(line: 2393, column: 3, scope: !7946)
!7954 = !DILocalVariable(name: "pfn", scope: !7955, file: !3, line: 2394, type: !203)
!7955 = distinct !DILexicalBlock(scope: !7950, file: !3, line: 2393, column: 33)
!7956 = !DILocation(line: 2394, column: 18, scope: !7955)
!7957 = !DILocation(line: 2396, column: 11, scope: !7955)
!7958 = !DILocation(line: 2396, column: 15, scope: !7955)
!7959 = !DILocation(line: 2396, column: 25, scope: !7955)
!7960 = !DILocation(line: 2396, column: 8, scope: !7955)
!7961 = !DILocation(line: 2397, column: 10, scope: !7955)
!7962 = !DILocation(line: 2397, column: 8, scope: !7955)
!7963 = !DILocation(line: 2398, column: 29, scope: !7955)
!7964 = !DILocation(line: 2398, column: 34, scope: !7955)
!7965 = !DILocation(line: 2398, column: 41, scope: !7955)
!7966 = !DILocation(line: 2399, column: 8, scope: !7955)
!7967 = !DILocation(line: 2398, column: 13, scope: !7955)
!7968 = !DILocation(line: 2398, column: 11, scope: !7955)
!7969 = !DILocation(line: 2400, column: 8, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7955, file: !3, line: 2400, column: 8)
!7971 = !DILocation(line: 2400, column: 8, scope: !7955)
!7972 = !DILocation(line: 2401, column: 5, scope: !7970)
!7973 = !DILocation(line: 2403, column: 10, scope: !7955)
!7974 = !DILocation(line: 2404, column: 3, scope: !7955)
!7975 = !DILocation(line: 2393, column: 28, scope: !7950)
!7976 = !DILocation(line: 2393, column: 3, scope: !7950)
!7977 = distinct !{!7977, !7953, !7978}
!7978 = !DILocation(line: 2404, column: 3, scope: !7946)
!7979 = !DILocation(line: 2407, column: 6, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7814, file: !3, line: 2407, column: 6)
!7981 = !DILocation(line: 2407, column: 13, scope: !7980)
!7982 = !DILocation(line: 2407, column: 6, scope: !7814)
!7983 = !DILocation(line: 2408, column: 3, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7980, file: !3, line: 2407, column: 19)
!7985 = !DILocation(line: 2408, column: 8, scope: !7984)
!7986 = !DILocation(line: 2408, column: 15, scope: !7984)
!7987 = !DILocation(line: 2409, column: 26, scope: !7984)
!7988 = !DILocation(line: 2409, column: 3, scope: !7984)
!7989 = !DILocation(line: 2409, column: 8, scope: !7984)
!7990 = !DILocation(line: 2409, column: 24, scope: !7984)
!7991 = !DILocation(line: 2411, column: 3, scope: !7984)
!7992 = !DILocation(line: 2411, column: 8, scope: !7984)
!7993 = !DILocation(line: 2411, column: 16, scope: !7984)
!7994 = !DILocation(line: 2411, column: 21, scope: !7984)
!7995 = !DILocation(line: 2412, column: 2, scope: !7984)
!7996 = !DILocation(line: 2407, column: 16, scope: !7980)
!7997 = !DILabel(scope: !7814, name: "done", file: !3, line: 2414)
!7998 = !DILocation(line: 2414, column: 1, scope: !7814)
!7999 = !DILocation(line: 2415, column: 11, scope: !7814)
!8000 = !DILocation(line: 2415, column: 16, scope: !7814)
!8001 = !DILocation(line: 2415, column: 2, scope: !7814)
!8002 = !DILocation(line: 2416, column: 21, scope: !7814)
!8003 = !DILocation(line: 2416, column: 2, scope: !7814)
!8004 = !DILocation(line: 2417, column: 9, scope: !7814)
!8005 = !DILocation(line: 2417, column: 2, scope: !7814)
!8006 = !DILocation(line: 2418, column: 1, scope: !7814)
!8007 = distinct !DISubprogram(name: "comedi_open", scope: !3, file: !3, line: 2734, type: !2971, scopeLine: 2735, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8008 = !DILocalVariable(name: "inode", arg: 1, scope: !8007, file: !3, line: 2734, type: !431)
!8009 = !DILocation(line: 2734, column: 38, scope: !8007)
!8010 = !DILocalVariable(name: "file", arg: 2, scope: !8007, file: !3, line: 2734, type: !354)
!8011 = !DILocation(line: 2734, column: 58, scope: !8007)
!8012 = !DILocalVariable(name: "minor", scope: !8007, file: !3, line: 2736, type: !2868)
!8013 = !DILocation(line: 2736, column: 21, scope: !8007)
!8014 = !DILocation(line: 2736, column: 36, scope: !8007)
!8015 = !DILocation(line: 2736, column: 29, scope: !8007)
!8016 = !DILocalVariable(name: "cfp", scope: !8007, file: !3, line: 2737, type: !6113)
!8017 = !DILocation(line: 2737, column: 22, scope: !8007)
!8018 = !DILocalVariable(name: "dev", scope: !8007, file: !3, line: 2738, type: !162)
!8019 = !DILocation(line: 2738, column: 24, scope: !8007)
!8020 = !DILocation(line: 2738, column: 56, scope: !8007)
!8021 = !DILocation(line: 2738, column: 30, scope: !8007)
!8022 = !DILocalVariable(name: "rc", scope: !8007, file: !3, line: 2739, type: !166)
!8023 = !DILocation(line: 2739, column: 6, scope: !8007)
!8024 = !DILocation(line: 2741, column: 7, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8007, file: !3, line: 2741, column: 6)
!8026 = !DILocation(line: 2741, column: 6, scope: !8007)
!8027 = !DILocation(line: 2742, column: 3, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8029, file: !3, line: 2742, column: 3)
!8029 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 2742, column: 3)
!8030 = distinct !DILexicalBlock(scope: !8025, file: !3, line: 2741, column: 12)
!8031 = !DILocation(line: 2742, column: 3, scope: !8029)
!8032 = !DILocation(line: 2743, column: 3, scope: !8030)
!8033 = !DILocation(line: 2746, column: 8, scope: !8007)
!8034 = !DILocation(line: 2746, column: 6, scope: !8007)
!8035 = !DILocation(line: 2747, column: 7, scope: !8036)
!8036 = distinct !DILexicalBlock(scope: !8007, file: !3, line: 2747, column: 6)
!8037 = !DILocation(line: 2747, column: 6, scope: !8007)
!8038 = !DILocation(line: 2748, column: 18, scope: !8039)
!8039 = distinct !DILexicalBlock(scope: !8036, file: !3, line: 2747, column: 12)
!8040 = !DILocation(line: 2748, column: 3, scope: !8039)
!8041 = !DILocation(line: 2749, column: 3, scope: !8039)
!8042 = !DILocation(line: 2752, column: 13, scope: !8007)
!8043 = !DILocation(line: 2752, column: 2, scope: !8007)
!8044 = !DILocation(line: 2752, column: 7, scope: !8007)
!8045 = !DILocation(line: 2752, column: 11, scope: !8007)
!8046 = !DILocation(line: 2754, column: 14, scope: !8007)
!8047 = !DILocation(line: 2754, column: 19, scope: !8007)
!8048 = !DILocation(line: 2754, column: 2, scope: !8007)
!8049 = !DILocation(line: 2755, column: 7, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !8007, file: !3, line: 2755, column: 6)
!8051 = !DILocation(line: 2755, column: 12, scope: !8050)
!8052 = !DILocation(line: 2755, column: 21, scope: !8050)
!8053 = !DILocation(line: 2755, column: 25, scope: !8050)
!8054 = !DILocation(line: 2755, column: 6, scope: !8007)
!8055 = !DILocation(line: 2757, column: 6, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8050, file: !3, line: 2755, column: 49)
!8057 = !DILocation(line: 2758, column: 3, scope: !8056)
!8058 = !DILocation(line: 2760, column: 6, scope: !8059)
!8059 = distinct !DILexicalBlock(scope: !8007, file: !3, line: 2760, column: 6)
!8060 = !DILocation(line: 2760, column: 11, scope: !8059)
!8061 = !DILocation(line: 2760, column: 20, scope: !8059)
!8062 = !DILocation(line: 2760, column: 23, scope: !8059)
!8063 = !DILocation(line: 2760, column: 28, scope: !8059)
!8064 = !DILocation(line: 2760, column: 38, scope: !8059)
!8065 = !DILocation(line: 2760, column: 6, scope: !8007)
!8066 = !DILocation(line: 2761, column: 23, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 2761, column: 7)
!8068 = distinct !DILexicalBlock(scope: !8059, file: !3, line: 2760, column: 44)
!8069 = !DILocation(line: 2761, column: 28, scope: !8067)
!8070 = !DILocation(line: 2761, column: 36, scope: !8067)
!8071 = !DILocation(line: 2761, column: 8, scope: !8067)
!8072 = !DILocation(line: 2761, column: 7, scope: !8068)
!8073 = !DILocation(line: 2762, column: 7, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8067, file: !3, line: 2761, column: 45)
!8075 = !DILocation(line: 2763, column: 4, scope: !8074)
!8076 = !DILocation(line: 2765, column: 7, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 2765, column: 7)
!8078 = !DILocation(line: 2765, column: 12, scope: !8077)
!8079 = !DILocation(line: 2765, column: 7, scope: !8068)
!8080 = !DILocation(line: 2766, column: 9, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8077, file: !3, line: 2765, column: 18)
!8082 = !DILocation(line: 2766, column: 14, scope: !8081)
!8083 = !DILocation(line: 2766, column: 19, scope: !8081)
!8084 = !DILocation(line: 2766, column: 7, scope: !8081)
!8085 = !DILocation(line: 2767, column: 8, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8081, file: !3, line: 2767, column: 8)
!8087 = !DILocation(line: 2767, column: 11, scope: !8086)
!8088 = !DILocation(line: 2767, column: 8, scope: !8081)
!8089 = !DILocation(line: 2768, column: 16, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8086, file: !3, line: 2767, column: 16)
!8091 = !DILocation(line: 2768, column: 21, scope: !8090)
!8092 = !DILocation(line: 2768, column: 29, scope: !8090)
!8093 = !DILocation(line: 2768, column: 5, scope: !8090)
!8094 = !DILocation(line: 2769, column: 5, scope: !8090)
!8095 = !DILocation(line: 2771, column: 3, scope: !8081)
!8096 = !DILocation(line: 2772, column: 2, scope: !8068)
!8097 = !DILocation(line: 2774, column: 2, scope: !8007)
!8098 = !DILocation(line: 2774, column: 7, scope: !8007)
!8099 = !DILocation(line: 2774, column: 16, scope: !8007)
!8100 = !DILocation(line: 2775, column: 23, scope: !8007)
!8101 = !DILocation(line: 2775, column: 2, scope: !8007)
!8102 = !DILocation(line: 2775, column: 8, scope: !8007)
!8103 = !DILocation(line: 2775, column: 21, scope: !8007)
!8104 = !DILocation(line: 2776, column: 20, scope: !8007)
!8105 = !DILocation(line: 2776, column: 2, scope: !8007)
!8106 = !DILocation(line: 2777, column: 5, scope: !8007)
!8107 = !DILocation(line: 2777, column: 2, scope: !8007)
!8108 = !DILabel(scope: !8007, name: "out", file: !3, line: 2779)
!8109 = !DILocation(line: 2779, column: 1, scope: !8007)
!8110 = !DILocation(line: 2780, column: 16, scope: !8007)
!8111 = !DILocation(line: 2780, column: 21, scope: !8007)
!8112 = !DILocation(line: 2780, column: 2, scope: !8007)
!8113 = !DILocation(line: 2781, column: 6, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8007, file: !3, line: 2781, column: 6)
!8115 = !DILocation(line: 2781, column: 6, scope: !8007)
!8116 = !DILocation(line: 2782, column: 18, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 2781, column: 10)
!8118 = !DILocation(line: 2782, column: 3, scope: !8117)
!8119 = !DILocation(line: 2783, column: 9, scope: !8117)
!8120 = !DILocation(line: 2783, column: 3, scope: !8117)
!8121 = !DILocation(line: 2784, column: 2, scope: !8117)
!8122 = !DILocation(line: 2785, column: 9, scope: !8007)
!8123 = !DILocation(line: 2785, column: 2, scope: !8007)
!8124 = !DILocation(line: 2786, column: 1, scope: !8007)
!8125 = distinct !DISubprogram(name: "comedi_close", scope: !3, file: !3, line: 2796, type: !2971, scopeLine: 2797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8126 = !DILocalVariable(name: "inode", arg: 1, scope: !8125, file: !3, line: 2796, type: !431)
!8127 = !DILocation(line: 2796, column: 39, scope: !8125)
!8128 = !DILocalVariable(name: "file", arg: 2, scope: !8125, file: !3, line: 2796, type: !354)
!8129 = !DILocation(line: 2796, column: 59, scope: !8125)
!8130 = !DILocalVariable(name: "cfp", scope: !8125, file: !3, line: 2798, type: !6113)
!8131 = !DILocation(line: 2798, column: 22, scope: !8125)
!8132 = !DILocation(line: 2798, column: 28, scope: !8125)
!8133 = !DILocation(line: 2798, column: 34, scope: !8125)
!8134 = !DILocalVariable(name: "dev", scope: !8125, file: !3, line: 2799, type: !162)
!8135 = !DILocation(line: 2799, column: 24, scope: !8125)
!8136 = !DILocation(line: 2799, column: 30, scope: !8125)
!8137 = !DILocation(line: 2799, column: 35, scope: !8125)
!8138 = !DILocalVariable(name: "s", scope: !8125, file: !3, line: 2800, type: !3871)
!8139 = !DILocation(line: 2800, column: 27, scope: !8125)
!8140 = !DILocalVariable(name: "i", scope: !8125, file: !3, line: 2801, type: !166)
!8141 = !DILocation(line: 2801, column: 6, scope: !8125)
!8142 = !DILocation(line: 2803, column: 14, scope: !8125)
!8143 = !DILocation(line: 2803, column: 19, scope: !8125)
!8144 = !DILocation(line: 2803, column: 2, scope: !8125)
!8145 = !DILocation(line: 2805, column: 6, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8125, file: !3, line: 2805, column: 6)
!8147 = !DILocation(line: 2805, column: 11, scope: !8146)
!8148 = !DILocation(line: 2805, column: 6, scope: !8125)
!8149 = !DILocation(line: 2806, column: 10, scope: !8150)
!8150 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 2806, column: 3)
!8151 = distinct !DILexicalBlock(scope: !8146, file: !3, line: 2805, column: 23)
!8152 = !DILocation(line: 2806, column: 8, scope: !8150)
!8153 = !DILocation(line: 2806, column: 15, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8150, file: !3, line: 2806, column: 3)
!8155 = !DILocation(line: 2806, column: 19, scope: !8154)
!8156 = !DILocation(line: 2806, column: 24, scope: !8154)
!8157 = !DILocation(line: 2806, column: 17, scope: !8154)
!8158 = !DILocation(line: 2806, column: 3, scope: !8150)
!8159 = !DILocation(line: 2807, column: 9, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8154, file: !3, line: 2806, column: 43)
!8161 = !DILocation(line: 2807, column: 14, scope: !8160)
!8162 = !DILocation(line: 2807, column: 25, scope: !8160)
!8163 = !DILocation(line: 2807, column: 6, scope: !8160)
!8164 = !DILocation(line: 2809, column: 8, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8160, file: !3, line: 2809, column: 8)
!8166 = !DILocation(line: 2809, column: 11, scope: !8165)
!8167 = !DILocation(line: 2809, column: 19, scope: !8165)
!8168 = !DILocation(line: 2809, column: 16, scope: !8165)
!8169 = !DILocation(line: 2809, column: 8, scope: !8160)
!8170 = !DILocation(line: 2810, column: 15, scope: !8165)
!8171 = !DILocation(line: 2810, column: 20, scope: !8165)
!8172 = !DILocation(line: 2810, column: 5, scope: !8165)
!8173 = !DILocation(line: 2811, column: 8, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8160, file: !3, line: 2811, column: 8)
!8175 = !DILocation(line: 2811, column: 11, scope: !8174)
!8176 = !DILocation(line: 2811, column: 19, scope: !8174)
!8177 = !DILocation(line: 2811, column: 16, scope: !8174)
!8178 = !DILocation(line: 2811, column: 8, scope: !8160)
!8179 = !DILocation(line: 2812, column: 5, scope: !8174)
!8180 = !DILocation(line: 2812, column: 8, scope: !8174)
!8181 = !DILocation(line: 2812, column: 13, scope: !8174)
!8182 = !DILocation(line: 2813, column: 3, scope: !8160)
!8183 = !DILocation(line: 2806, column: 39, scope: !8154)
!8184 = !DILocation(line: 2806, column: 3, scope: !8154)
!8185 = distinct !{!8185, !8158, !8186}
!8186 = !DILocation(line: 2813, column: 3, scope: !8150)
!8187 = !DILocation(line: 2814, column: 2, scope: !8151)
!8188 = !DILocation(line: 2815, column: 6, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8125, file: !3, line: 2815, column: 6)
!8190 = !DILocation(line: 2815, column: 11, scope: !8189)
!8191 = !DILocation(line: 2815, column: 20, scope: !8189)
!8192 = !DILocation(line: 2815, column: 23, scope: !8189)
!8193 = !DILocation(line: 2815, column: 28, scope: !8189)
!8194 = !DILocation(line: 2815, column: 38, scope: !8189)
!8195 = !DILocation(line: 2815, column: 6, scope: !8125)
!8196 = !DILocation(line: 2816, column: 7, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8198, file: !3, line: 2816, column: 7)
!8198 = distinct !DILexicalBlock(scope: !8189, file: !3, line: 2815, column: 44)
!8199 = !DILocation(line: 2816, column: 12, scope: !8197)
!8200 = !DILocation(line: 2816, column: 7, scope: !8198)
!8201 = !DILocation(line: 2817, column: 4, scope: !8197)
!8202 = !DILocation(line: 2817, column: 9, scope: !8197)
!8203 = !DILocation(line: 2817, column: 15, scope: !8197)
!8204 = !DILocation(line: 2818, column: 14, scope: !8198)
!8205 = !DILocation(line: 2818, column: 19, scope: !8198)
!8206 = !DILocation(line: 2818, column: 27, scope: !8198)
!8207 = !DILocation(line: 2818, column: 3, scope: !8198)
!8208 = !DILocation(line: 2819, column: 2, scope: !8198)
!8209 = !DILocation(line: 2821, column: 2, scope: !8125)
!8210 = !DILocation(line: 2821, column: 7, scope: !8125)
!8211 = !DILocation(line: 2821, column: 16, scope: !8125)
!8212 = !DILocation(line: 2823, column: 16, scope: !8125)
!8213 = !DILocation(line: 2823, column: 21, scope: !8125)
!8214 = !DILocation(line: 2823, column: 2, scope: !8125)
!8215 = !DILocation(line: 2824, column: 17, scope: !8125)
!8216 = !DILocation(line: 2824, column: 2, scope: !8125)
!8217 = !DILocation(line: 2825, column: 8, scope: !8125)
!8218 = !DILocation(line: 2825, column: 2, scope: !8125)
!8219 = !DILocation(line: 2827, column: 2, scope: !8125)
!8220 = distinct !DISubprogram(name: "comedi_fasync", scope: !3, file: !3, line: 2788, type: !2985, scopeLine: 2789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8221 = !DILocalVariable(name: "fd", arg: 1, scope: !8220, file: !3, line: 2788, type: !166)
!8222 = !DILocation(line: 2788, column: 30, scope: !8220)
!8223 = !DILocalVariable(name: "file", arg: 2, scope: !8220, file: !3, line: 2788, type: !354)
!8224 = !DILocation(line: 2788, column: 47, scope: !8220)
!8225 = !DILocalVariable(name: "on", arg: 3, scope: !8220, file: !3, line: 2788, type: !166)
!8226 = !DILocation(line: 2788, column: 57, scope: !8220)
!8227 = !DILocalVariable(name: "cfp", scope: !8220, file: !3, line: 2790, type: !6113)
!8228 = !DILocation(line: 2790, column: 22, scope: !8220)
!8229 = !DILocation(line: 2790, column: 28, scope: !8220)
!8230 = !DILocation(line: 2790, column: 34, scope: !8220)
!8231 = !DILocalVariable(name: "dev", scope: !8220, file: !3, line: 2791, type: !162)
!8232 = !DILocation(line: 2791, column: 24, scope: !8220)
!8233 = !DILocation(line: 2791, column: 30, scope: !8220)
!8234 = !DILocation(line: 2791, column: 35, scope: !8220)
!8235 = !DILocation(line: 2793, column: 23, scope: !8220)
!8236 = !DILocation(line: 2793, column: 27, scope: !8220)
!8237 = !DILocation(line: 2793, column: 33, scope: !8220)
!8238 = !DILocation(line: 2793, column: 38, scope: !8220)
!8239 = !DILocation(line: 2793, column: 43, scope: !8220)
!8240 = !DILocation(line: 2793, column: 9, scope: !8220)
!8241 = !DILocation(line: 2793, column: 2, scope: !8220)
!8242 = distinct !DISubprogram(name: "comedi_file_read_subdevice", scope: !3, file: !3, line: 321, type: !8243, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8243 = !DISubroutineType(types: !8244)
!8244 = !{!3871, !354}
!8245 = !DILocalVariable(name: "file", arg: 1, scope: !8242, file: !3, line: 321, type: !354)
!8246 = !DILocation(line: 321, column: 73, scope: !8242)
!8247 = !DILocalVariable(name: "cfp", scope: !8242, file: !3, line: 323, type: !6113)
!8248 = !DILocation(line: 323, column: 22, scope: !8242)
!8249 = !DILocation(line: 323, column: 28, scope: !8242)
!8250 = !DILocation(line: 323, column: 34, scope: !8242)
!8251 = !DILocation(line: 325, column: 20, scope: !8242)
!8252 = !DILocation(line: 325, column: 2, scope: !8242)
!8253 = !DILocation(line: 326, column: 9, scope: !8254)
!8254 = distinct !DILexicalBlock(scope: !8242, file: !3, line: 326, column: 9)
!8255 = !DILocation(line: 326, column: 9, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8254, file: !3, line: 326, column: 9)
!8257 = !DILocation(line: 326, column: 2, scope: !8242)
!8258 = distinct !DISubprogram(name: "comedi_is_runflags_in_error", scope: !3, file: !3, line: 659, type: !4468, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8259 = !DILocalVariable(name: "runflags", arg: 1, scope: !8258, file: !3, line: 659, type: !7)
!8260 = !DILocation(line: 659, column: 54, scope: !8258)
!8261 = !DILocation(line: 661, column: 9, scope: !8258)
!8262 = !DILocation(line: 661, column: 18, scope: !8258)
!8263 = !DILocation(line: 661, column: 2, scope: !8258)
!8264 = distinct !DISubprogram(name: "signal_pending", scope: !1801, file: !1801, line: 356, type: !8265, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8265 = !DISubroutineType(types: !8266)
!8266 = !{!166, !1258}
!8267 = !DILocalVariable(name: "p", arg: 1, scope: !8264, file: !1801, line: 356, type: !1258)
!8268 = !DILocation(line: 356, column: 54, scope: !8264)
!8269 = !DILocation(line: 358, column: 9, scope: !8264)
!8270 = !DILocation(line: 358, column: 2, scope: !8264)
!8271 = distinct !DISubprogram(name: "comedi_file_check", scope: !3, file: !3, line: 311, type: !947, scopeLine: 312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8272 = !DILocalVariable(name: "file", arg: 1, scope: !8271, file: !3, line: 311, type: !354)
!8273 = !DILocation(line: 311, column: 44, scope: !8271)
!8274 = !DILocalVariable(name: "cfp", scope: !8271, file: !3, line: 313, type: !6113)
!8275 = !DILocation(line: 313, column: 22, scope: !8271)
!8276 = !DILocation(line: 313, column: 28, scope: !8271)
!8277 = !DILocation(line: 313, column: 34, scope: !8271)
!8278 = !DILocalVariable(name: "dev", scope: !8271, file: !3, line: 314, type: !162)
!8279 = !DILocation(line: 314, column: 24, scope: !8271)
!8280 = !DILocation(line: 314, column: 30, scope: !8271)
!8281 = !DILocation(line: 314, column: 35, scope: !8271)
!8282 = !DILocation(line: 316, column: 6, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8271, file: !3, line: 316, column: 6)
!8284 = !DILocation(line: 316, column: 11, scope: !8283)
!8285 = !DILocation(line: 316, column: 28, scope: !8283)
!8286 = !DILocation(line: 316, column: 33, scope: !8283)
!8287 = !DILocation(line: 316, column: 25, scope: !8283)
!8288 = !DILocation(line: 316, column: 42, scope: !8283)
!8289 = !DILocation(line: 317, column: 6, scope: !8283)
!8290 = !DILocation(line: 317, column: 11, scope: !8283)
!8291 = !DILocation(line: 317, column: 32, scope: !8283)
!8292 = !DILocation(line: 317, column: 37, scope: !8283)
!8293 = !DILocation(line: 317, column: 29, scope: !8283)
!8294 = !DILocation(line: 316, column: 6, scope: !8271)
!8295 = !DILocation(line: 318, column: 21, scope: !8283)
!8296 = !DILocation(line: 318, column: 3, scope: !8283)
!8297 = !DILocation(line: 319, column: 1, scope: !8271)
!8298 = distinct !DISubprogram(name: "comedi_file_reset", scope: !3, file: !3, line: 289, type: !947, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8299 = !DILocalVariable(name: "file", arg: 1, scope: !8298, file: !3, line: 289, type: !354)
!8300 = !DILocation(line: 289, column: 44, scope: !8298)
!8301 = !DILocalVariable(name: "cfp", scope: !8298, file: !3, line: 291, type: !6113)
!8302 = !DILocation(line: 291, column: 22, scope: !8298)
!8303 = !DILocation(line: 291, column: 28, scope: !8298)
!8304 = !DILocation(line: 291, column: 34, scope: !8298)
!8305 = !DILocalVariable(name: "dev", scope: !8298, file: !3, line: 292, type: !162)
!8306 = !DILocation(line: 292, column: 24, scope: !8298)
!8307 = !DILocation(line: 292, column: 30, scope: !8298)
!8308 = !DILocation(line: 292, column: 35, scope: !8298)
!8309 = !DILocalVariable(name: "s", scope: !8298, file: !3, line: 293, type: !3871)
!8310 = !DILocation(line: 293, column: 27, scope: !8298)
!8311 = !DILocalVariable(name: "read_s", scope: !8298, file: !3, line: 293, type: !3871)
!8312 = !DILocation(line: 293, column: 31, scope: !8298)
!8313 = !DILocalVariable(name: "write_s", scope: !8298, file: !3, line: 293, type: !3871)
!8314 = !DILocation(line: 293, column: 40, scope: !8298)
!8315 = !DILocalVariable(name: "minor", scope: !8298, file: !3, line: 294, type: !7)
!8316 = !DILocation(line: 294, column: 15, scope: !8298)
!8317 = !DILocation(line: 294, column: 41, scope: !8298)
!8318 = !DILocation(line: 294, column: 30, scope: !8298)
!8319 = !DILocation(line: 294, column: 23, scope: !8298)
!8320 = !DILocation(line: 296, column: 11, scope: !8298)
!8321 = !DILocation(line: 296, column: 16, scope: !8298)
!8322 = !DILocation(line: 296, column: 9, scope: !8298)
!8323 = !DILocation(line: 297, column: 12, scope: !8298)
!8324 = !DILocation(line: 297, column: 17, scope: !8298)
!8325 = !DILocation(line: 297, column: 10, scope: !8298)
!8326 = !DILocation(line: 298, column: 6, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !8298, file: !3, line: 298, column: 6)
!8328 = !DILocation(line: 298, column: 12, scope: !8327)
!8329 = !DILocation(line: 298, column: 6, scope: !8298)
!8330 = !DILocation(line: 299, column: 35, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8327, file: !3, line: 298, column: 40)
!8332 = !DILocation(line: 299, column: 40, scope: !8331)
!8333 = !DILocation(line: 299, column: 7, scope: !8331)
!8334 = !DILocation(line: 299, column: 5, scope: !8331)
!8335 = !DILocation(line: 300, column: 8, scope: !8336)
!8336 = distinct !DILexicalBlock(scope: !8331, file: !3, line: 300, column: 7)
!8337 = !DILocation(line: 300, column: 10, scope: !8336)
!8338 = !DILocation(line: 300, column: 13, scope: !8336)
!8339 = !DILocation(line: 300, column: 16, scope: !8336)
!8340 = !DILocation(line: 300, column: 29, scope: !8336)
!8341 = !DILocation(line: 300, column: 7, scope: !8331)
!8342 = !DILocation(line: 301, column: 13, scope: !8336)
!8343 = !DILocation(line: 301, column: 11, scope: !8336)
!8344 = !DILocation(line: 301, column: 4, scope: !8336)
!8345 = !DILocation(line: 302, column: 8, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8331, file: !3, line: 302, column: 7)
!8347 = !DILocation(line: 302, column: 10, scope: !8346)
!8348 = !DILocation(line: 302, column: 13, scope: !8346)
!8349 = !DILocation(line: 302, column: 16, scope: !8346)
!8350 = !DILocation(line: 302, column: 29, scope: !8346)
!8351 = !DILocation(line: 302, column: 7, scope: !8331)
!8352 = !DILocation(line: 303, column: 14, scope: !8346)
!8353 = !DILocation(line: 303, column: 12, scope: !8346)
!8354 = !DILocation(line: 303, column: 4, scope: !8346)
!8355 = !DILocation(line: 304, column: 2, scope: !8331)
!8356 = !DILocation(line: 305, column: 23, scope: !8298)
!8357 = !DILocation(line: 305, column: 28, scope: !8298)
!8358 = !DILocation(line: 305, column: 2, scope: !8298)
!8359 = !DILocation(line: 305, column: 7, scope: !8298)
!8360 = !DILocation(line: 305, column: 21, scope: !8298)
!8361 = !DILocation(line: 306, column: 27, scope: !8298)
!8362 = !DILocation(line: 306, column: 32, scope: !8298)
!8363 = !DILocation(line: 306, column: 2, scope: !8298)
!8364 = !DILocation(line: 306, column: 7, scope: !8298)
!8365 = !DILocation(line: 306, column: 25, scope: !8298)
!8366 = !DILocation(line: 307, column: 2, scope: !8298)
!8367 = !DILocation(line: 307, column: 2, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8298, file: !3, line: 307, column: 2)
!8369 = !DILocation(line: 307, column: 2, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8368, file: !3, line: 307, column: 2)
!8371 = !DILocation(line: 307, column: 2, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8368, file: !3, line: 307, column: 2)
!8373 = !DILocation(line: 308, column: 2, scope: !8298)
!8374 = !DILocation(line: 308, column: 2, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8298, file: !3, line: 308, column: 2)
!8376 = !DILocation(line: 308, column: 2, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8375, file: !3, line: 308, column: 2)
!8378 = !DILocation(line: 308, column: 2, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8375, file: !3, line: 308, column: 2)
!8380 = !DILocation(line: 309, column: 1, scope: !8298)
!8381 = distinct !DISubprogram(name: "iminor", scope: !44, file: !44, line: 875, type: !8382, scopeLine: 876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8382 = !DISubroutineType(types: !8383)
!8383 = !{!7, !2811}
!8384 = !DILocalVariable(name: "inode", arg: 1, scope: !8381, file: !44, line: 875, type: !2811)
!8385 = !DILocation(line: 875, column: 51, scope: !8381)
!8386 = !DILocation(line: 877, column: 9, scope: !8381)
!8387 = !DILocation(line: 877, column: 2, scope: !8381)
!8388 = distinct !DISubprogram(name: "file_inode", scope: !44, file: !44, line: 1299, type: !8389, scopeLine: 1300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8389 = !DISubroutineType(types: !8390)
!8390 = !{!431, !8391}
!8391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8392, size: 64)
!8392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !355)
!8393 = !DILocalVariable(name: "f", arg: 1, scope: !8388, file: !44, line: 1299, type: !8391)
!8394 = !DILocation(line: 1299, column: 59, scope: !8388)
!8395 = !DILocation(line: 1301, column: 9, scope: !8388)
!8396 = !DILocation(line: 1301, column: 12, scope: !8388)
!8397 = !DILocation(line: 1301, column: 2, scope: !8388)
!8398 = distinct !DISubprogram(name: "comedi_subdevice_from_minor", scope: !3, file: !3, line: 203, type: !8399, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8399 = !DISubroutineType(types: !8400)
!8400 = !{!3871, !8401, !7}
!8401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8402, size: 64)
!8402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !163)
!8403 = !DILocalVariable(name: "dev", arg: 1, scope: !8398, file: !3, line: 203, type: !8401)
!8404 = !DILocation(line: 203, column: 57, scope: !8398)
!8405 = !DILocalVariable(name: "minor", arg: 2, scope: !8398, file: !3, line: 203, type: !7)
!8406 = !DILocation(line: 203, column: 75, scope: !8398)
!8407 = !DILocalVariable(name: "s", scope: !8398, file: !3, line: 205, type: !3871)
!8408 = !DILocation(line: 205, column: 27, scope: !8398)
!8409 = !DILocalVariable(name: "i", scope: !8398, file: !3, line: 206, type: !7)
!8410 = !DILocation(line: 206, column: 15, scope: !8398)
!8411 = !DILocation(line: 206, column: 19, scope: !8398)
!8412 = !DILocation(line: 206, column: 25, scope: !8398)
!8413 = !DILocation(line: 208, column: 2, scope: !8398)
!8414 = !DILocation(line: 209, column: 35, scope: !8398)
!8415 = !DILocation(line: 209, column: 6, scope: !8398)
!8416 = !DILocation(line: 209, column: 4, scope: !8398)
!8417 = !DILocation(line: 210, column: 6, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 210, column: 6)
!8419 = !DILocation(line: 210, column: 8, scope: !8418)
!8420 = !DILocation(line: 210, column: 11, scope: !8418)
!8421 = !DILocation(line: 210, column: 14, scope: !8418)
!8422 = !DILocation(line: 210, column: 24, scope: !8418)
!8423 = !DILocation(line: 210, column: 21, scope: !8418)
!8424 = !DILocation(line: 210, column: 6, scope: !8398)
!8425 = !DILocation(line: 211, column: 5, scope: !8418)
!8426 = !DILocation(line: 211, column: 3, scope: !8418)
!8427 = !DILocation(line: 212, column: 2, scope: !8398)
!8428 = !DILocation(line: 213, column: 9, scope: !8398)
!8429 = !DILocation(line: 213, column: 2, scope: !8398)
!8430 = distinct !DISubprogram(name: "test_tsk_thread_flag", scope: !903, file: !903, line: 1828, type: !8431, scopeLine: 1829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8431 = !DISubroutineType(types: !8432)
!8432 = !{!166, !1258, !166}
!8433 = !DILocalVariable(name: "tsk", arg: 1, scope: !8430, file: !903, line: 1828, type: !1258)
!8434 = !DILocation(line: 1828, column: 60, scope: !8430)
!8435 = !DILocalVariable(name: "flag", arg: 2, scope: !8430, file: !903, line: 1828, type: !166)
!8436 = !DILocation(line: 1828, column: 69, scope: !8430)
!8437 = !DILocation(line: 1830, column: 46, scope: !8430)
!8438 = !DILocation(line: 1830, column: 29, scope: !8430)
!8439 = !DILocation(line: 1830, column: 52, scope: !8430)
!8440 = !DILocation(line: 1830, column: 9, scope: !8430)
!8441 = !DILocation(line: 1830, column: 2, scope: !8430)
!8442 = distinct !DISubprogram(name: "test_ti_thread_flag", scope: !6013, file: !6013, line: 82, type: !8443, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8443 = !DISubroutineType(types: !8444)
!8444 = !{!166, !4081, !166}
!8445 = !DILocalVariable(name: "ti", arg: 1, scope: !8442, file: !6013, line: 82, type: !4081)
!8446 = !DILocation(line: 82, column: 59, scope: !8442)
!8447 = !DILocalVariable(name: "flag", arg: 2, scope: !8442, file: !6013, line: 82, type: !166)
!8448 = !DILocation(line: 82, column: 67, scope: !8442)
!8449 = !DILocation(line: 84, column: 18, scope: !8442)
!8450 = !DILocation(line: 84, column: 42, scope: !8442)
!8451 = !DILocation(line: 84, column: 46, scope: !8442)
!8452 = !DILocation(line: 84, column: 9, scope: !8442)
!8453 = !DILocation(line: 84, column: 2, scope: !8442)
!8454 = distinct !DISubprogram(name: "task_thread_info", scope: !903, file: !903, line: 1729, type: !8455, scopeLine: 1730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8455 = !DISubroutineType(types: !8456)
!8456 = !{!4081, !1258}
!8457 = !DILocalVariable(name: "task", arg: 1, scope: !8454, file: !903, line: 1729, type: !1258)
!8458 = !DILocation(line: 1729, column: 72, scope: !8454)
!8459 = !DILocation(line: 1731, column: 10, scope: !8454)
!8460 = !DILocation(line: 1731, column: 16, scope: !8454)
!8461 = !DILocation(line: 1731, column: 2, scope: !8454)
!8462 = distinct !DISubprogram(name: "test_bit", scope: !8463, file: !8463, line: 132, type: !8464, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8463 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!8464 = !DISubroutineType(types: !8465)
!8465 = !{!492, !312, !8466}
!8466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8467, size: 64)
!8467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8468)
!8468 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !203)
!8469 = !DILocalVariable(name: "nr", arg: 1, scope: !8470, file: !5721, line: 210, type: !312)
!8470 = distinct !DISubprogram(name: "variable_test_bit", scope: !5721, file: !5721, line: 210, type: !8464, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8471 = !DILocation(line: 210, column: 52, scope: !8470, inlinedAt: !8472)
!8472 = distinct !DILocation(line: 135, column: 9, scope: !8462)
!8473 = !DILocalVariable(name: "addr", arg: 2, scope: !8470, file: !5721, line: 210, type: !8466)
!8474 = !DILocation(line: 210, column: 86, scope: !8470, inlinedAt: !8472)
!8475 = !DILocalVariable(name: "oldbit", scope: !8470, file: !5721, line: 212, type: !492)
!8476 = !DILocation(line: 212, column: 7, scope: !8470, inlinedAt: !8472)
!8477 = !DILocalVariable(name: "nr", arg: 1, scope: !8478, file: !5721, line: 204, type: !312)
!8478 = distinct !DISubprogram(name: "constant_test_bit", scope: !5721, file: !5721, line: 204, type: !8464, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8479 = !DILocation(line: 204, column: 52, scope: !8478, inlinedAt: !8480)
!8480 = distinct !DILocation(line: 135, column: 9, scope: !8462)
!8481 = !DILocalVariable(name: "addr", arg: 2, scope: !8478, file: !5721, line: 204, type: !8466)
!8482 = !DILocation(line: 204, column: 86, scope: !8478, inlinedAt: !8480)
!8483 = !DILocalVariable(name: "v", arg: 1, scope: !8484, file: !5535, line: 69, type: !5538)
!8484 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !5535, file: !5535, line: 69, type: !5536, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8485 = !DILocation(line: 69, column: 73, scope: !8484, inlinedAt: !8486)
!8486 = distinct !DILocation(line: 134, column: 2, scope: !8462)
!8487 = !DILocalVariable(name: "size", arg: 2, scope: !8484, file: !5535, line: 69, type: !324)
!8488 = !DILocation(line: 69, column: 83, scope: !8484, inlinedAt: !8486)
!8489 = !DILocalVariable(name: "nr", arg: 1, scope: !8462, file: !8463, line: 132, type: !312)
!8490 = !DILocation(line: 132, column: 34, scope: !8462)
!8491 = !DILocalVariable(name: "addr", arg: 2, scope: !8462, file: !8463, line: 132, type: !8466)
!8492 = !DILocation(line: 132, column: 68, scope: !8462)
!8493 = !DILocation(line: 134, column: 25, scope: !8462)
!8494 = !DILocation(line: 134, column: 32, scope: !8462)
!8495 = !DILocation(line: 134, column: 30, scope: !8462)
!8496 = !DILocation(line: 71, column: 19, scope: !8484, inlinedAt: !8486)
!8497 = !DILocation(line: 71, column: 22, scope: !8484, inlinedAt: !8486)
!8498 = !DILocation(line: 71, column: 2, scope: !8484, inlinedAt: !8486)
!8499 = !DILocation(line: 72, column: 2, scope: !8484, inlinedAt: !8486)
!8500 = !DILocation(line: 135, column: 9, scope: !8462)
!8501 = !DILocation(line: 206, column: 19, scope: !8478, inlinedAt: !8480)
!8502 = !DILocation(line: 206, column: 22, scope: !8478, inlinedAt: !8480)
!8503 = !DILocation(line: 206, column: 15, scope: !8478, inlinedAt: !8480)
!8504 = !DILocation(line: 207, column: 4, scope: !8478, inlinedAt: !8480)
!8505 = !DILocation(line: 207, column: 9, scope: !8478, inlinedAt: !8480)
!8506 = !DILocation(line: 207, column: 12, scope: !8478, inlinedAt: !8480)
!8507 = !DILocation(line: 206, column: 44, scope: !8478, inlinedAt: !8480)
!8508 = !DILocation(line: 207, column: 37, scope: !8478, inlinedAt: !8480)
!8509 = !DILocation(line: 217, column: 33, scope: !8470, inlinedAt: !8472)
!8510 = !DILocation(line: 217, column: 46, scope: !8470, inlinedAt: !8472)
!8511 = !DILocation(line: 214, column: 2, scope: !8470, inlinedAt: !8472)
!8512 = !{i32 -2147064638, i32 -2147064578}
!8513 = !DILocation(line: 219, column: 9, scope: !8470, inlinedAt: !8472)
!8514 = !DILocation(line: 135, column: 2, scope: !8462)
!8515 = distinct !DISubprogram(name: "kasan_check_read", scope: !5592, file: !5592, line: 34, type: !5593, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8516 = !DILocalVariable(name: "p", arg: 1, scope: !8515, file: !5592, line: 34, type: !5538)
!8517 = !DILocation(line: 34, column: 58, scope: !8515)
!8518 = !DILocalVariable(name: "size", arg: 2, scope: !8515, file: !5592, line: 34, type: !7)
!8519 = !DILocation(line: 34, column: 74, scope: !8515)
!8520 = !DILocation(line: 36, column: 2, scope: !8515)
!8521 = distinct !DISubprogram(name: "copy_overflow", scope: !6013, file: !6013, line: 132, type: !8522, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8522 = !DISubroutineType(types: !8523)
!8523 = !{null, !166, !203}
!8524 = !DILocalVariable(name: "size", arg: 1, scope: !8521, file: !6013, line: 132, type: !166)
!8525 = !DILocation(line: 132, column: 38, scope: !8521)
!8526 = !DILocalVariable(name: "count", arg: 2, scope: !8521, file: !6013, line: 132, type: !203)
!8527 = !DILocation(line: 132, column: 58, scope: !8521)
!8528 = !DILocalVariable(name: "__ret_warn_on", scope: !8529, file: !6013, line: 134, type: !166)
!8529 = distinct !DILexicalBlock(scope: !8521, file: !6013, line: 134, column: 2)
!8530 = !DILocation(line: 134, column: 2, scope: !8529)
!8531 = !DILocation(line: 134, column: 2, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8529, file: !6013, line: 134, column: 2)
!8533 = !DILocation(line: 134, column: 2, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8532, file: !6013, line: 134, column: 2)
!8535 = !DILocation(line: 134, column: 2, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8534, file: !6013, line: 134, column: 2)
!8537 = !DILocation(line: 134, column: 2, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !8534, file: !6013, line: 134, column: 2)
!8539 = !DILocation(line: 134, column: 2, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8538, file: !6013, line: 134, column: 2)
!8541 = !DILocation(line: 134, column: 2, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8538, file: !6013, line: 134, column: 2)
!8543 = !{i32 -2145480321, i32 -2145480292, i32 -2145480246, i32 -2145480188, i32 -2145480134, i32 -2145480080, i32 -2145480025, i32 -2145479994}
!8544 = !DILocation(line: 134, column: 2, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8538, file: !6013, line: 134, column: 2)
!8546 = !{i32 -2145479574, i32 -2145479567, i32 -2145479515, i32 -2145479484, i32 -2145479454}
!8547 = !DILocation(line: 134, column: 2, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8538, file: !6013, line: 134, column: 2)
!8549 = !DILocation(line: 134, column: 2, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8534, file: !6013, line: 134, column: 2)
!8551 = !DILocation(line: 135, column: 1, scope: !8521)
!8552 = distinct !DISubprogram(name: "check_object_size", scope: !6013, file: !6013, line: 122, type: !8553, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8553 = !DISubroutineType(types: !8554)
!8554 = !{null, !2172, !203, !492}
!8555 = !DILocalVariable(name: "ptr", arg: 1, scope: !8552, file: !6013, line: 122, type: !2172)
!8556 = !DILocation(line: 122, column: 50, scope: !8552)
!8557 = !DILocalVariable(name: "n", arg: 2, scope: !8552, file: !6013, line: 122, type: !203)
!8558 = !DILocation(line: 122, column: 69, scope: !8552)
!8559 = !DILocalVariable(name: "to_user", arg: 3, scope: !8552, file: !6013, line: 123, type: !492)
!8560 = !DILocation(line: 123, column: 15, scope: !8552)
!8561 = !DILocation(line: 124, column: 3, scope: !8552)
!8562 = distinct !DISubprogram(name: "comedi_file_write_subdevice", scope: !3, file: !3, line: 329, type: !8243, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8563 = !DILocalVariable(name: "file", arg: 1, scope: !8562, file: !3, line: 329, type: !354)
!8564 = !DILocation(line: 329, column: 74, scope: !8562)
!8565 = !DILocalVariable(name: "cfp", scope: !8562, file: !3, line: 331, type: !6113)
!8566 = !DILocation(line: 331, column: 22, scope: !8562)
!8567 = !DILocation(line: 331, column: 28, scope: !8562)
!8568 = !DILocation(line: 331, column: 34, scope: !8562)
!8569 = !DILocation(line: 333, column: 20, scope: !8562)
!8570 = !DILocation(line: 333, column: 2, scope: !8562)
!8571 = !DILocation(line: 334, column: 9, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8562, file: !3, line: 334, column: 9)
!8573 = !DILocation(line: 334, column: 9, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !8572, file: !3, line: 334, column: 9)
!8575 = !DILocation(line: 334, column: 2, scope: !8562)
!8576 = distinct !DISubprogram(name: "poll_wait", scope: !2950, file: !2950, line: 48, type: !8577, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8577 = !DISubroutineType(types: !8578)
!8578 = !{null, !354, !2957, !6954}
!8579 = !DILocalVariable(name: "filp", arg: 1, scope: !8576, file: !2950, line: 48, type: !354)
!8580 = !DILocation(line: 48, column: 44, scope: !8576)
!8581 = !DILocalVariable(name: "wait_address", arg: 2, scope: !8576, file: !2950, line: 48, type: !2957)
!8582 = !DILocation(line: 48, column: 70, scope: !8576)
!8583 = !DILocalVariable(name: "p", arg: 3, scope: !8576, file: !2950, line: 48, type: !6954)
!8584 = !DILocation(line: 48, column: 96, scope: !8576)
!8585 = !DILocation(line: 50, column: 6, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8576, file: !2950, line: 50, column: 6)
!8587 = !DILocation(line: 50, column: 8, scope: !8586)
!8588 = !DILocation(line: 50, column: 11, scope: !8586)
!8589 = !DILocation(line: 50, column: 14, scope: !8586)
!8590 = !DILocation(line: 50, column: 21, scope: !8586)
!8591 = !DILocation(line: 50, column: 24, scope: !8586)
!8592 = !DILocation(line: 50, column: 6, scope: !8576)
!8593 = !DILocation(line: 51, column: 3, scope: !8586)
!8594 = !DILocation(line: 51, column: 6, scope: !8586)
!8595 = !DILocation(line: 51, column: 13, scope: !8586)
!8596 = !DILocation(line: 51, column: 19, scope: !8586)
!8597 = !DILocation(line: 51, column: 33, scope: !8586)
!8598 = !DILocation(line: 52, column: 1, scope: !8576)
!8599 = distinct !DISubprogram(name: "comedi_bytes_per_sample", scope: !101, file: !101, line: 797, type: !4391, scopeLine: 798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8600 = !DILocalVariable(name: "s", arg: 1, scope: !8599, file: !101, line: 797, type: !3871)
!8601 = !DILocation(line: 797, column: 77, scope: !8599)
!8602 = !DILocation(line: 799, column: 9, scope: !8599)
!8603 = !DILocation(line: 799, column: 12, scope: !8599)
!8604 = !DILocation(line: 799, column: 25, scope: !8599)
!8605 = !DILocation(line: 799, column: 2, scope: !8599)
!8606 = distinct !DISubprogram(name: "do_devconfig_ioctl", scope: !3, file: !3, line: 814, type: !182, scopeLine: 816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8607 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !8608)
!8608 = distinct !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !8609)
!8609 = distinct !DILocation(line: 835, column: 6, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 835, column: 6)
!8611 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !8608)
!8612 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !8608)
!8613 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !8608)
!8614 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !8608)
!8615 = !DILocation(line: 189, column: 22, scope: !6511, inlinedAt: !8609)
!8616 = !DILocation(line: 189, column: 45, scope: !6511, inlinedAt: !8609)
!8617 = !DILocation(line: 189, column: 65, scope: !6511, inlinedAt: !8609)
!8618 = !DILocalVariable(name: "dev", arg: 1, scope: !8606, file: !3, line: 814, type: !162)
!8619 = !DILocation(line: 814, column: 53, scope: !8606)
!8620 = !DILocalVariable(name: "arg", arg: 2, scope: !8606, file: !3, line: 815, type: !184)
!8621 = !DILocation(line: 815, column: 42, scope: !8606)
!8622 = !DILocalVariable(name: "it", scope: !8606, file: !3, line: 817, type: !185)
!8623 = !DILocation(line: 817, column: 26, scope: !8606)
!8624 = !DILocation(line: 819, column: 2, scope: !8606)
!8625 = !DILocation(line: 819, column: 2, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 819, column: 2)
!8627 = !DILocation(line: 820, column: 7, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 820, column: 6)
!8629 = !DILocation(line: 820, column: 6, scope: !8606)
!8630 = !DILocation(line: 821, column: 3, scope: !8628)
!8631 = !DILocation(line: 823, column: 7, scope: !8632)
!8632 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 823, column: 6)
!8633 = !DILocation(line: 823, column: 6, scope: !8606)
!8634 = !DILocation(line: 824, column: 22, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8636, file: !3, line: 824, column: 7)
!8636 = distinct !DILexicalBlock(scope: !8632, file: !3, line: 823, column: 12)
!8637 = !DILocation(line: 824, column: 7, scope: !8635)
!8638 = !DILocation(line: 824, column: 7, scope: !8636)
!8639 = !DILocation(line: 825, column: 4, scope: !8635)
!8640 = !DILocation(line: 826, column: 7, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8636, file: !3, line: 826, column: 7)
!8642 = !DILocation(line: 826, column: 12, scope: !8641)
!8643 = !DILocation(line: 826, column: 7, scope: !8636)
!8644 = !DILocalVariable(name: "driver_module", scope: !8645, file: !3, line: 827, type: !177)
!8645 = distinct !DILexicalBlock(scope: !8641, file: !3, line: 826, column: 22)
!8646 = !DILocation(line: 827, column: 19, scope: !8645)
!8647 = !DILocation(line: 827, column: 35, scope: !8645)
!8648 = !DILocation(line: 827, column: 40, scope: !8645)
!8649 = !DILocation(line: 827, column: 48, scope: !8645)
!8650 = !DILocation(line: 829, column: 25, scope: !8645)
!8651 = !DILocation(line: 829, column: 4, scope: !8645)
!8652 = !DILocation(line: 830, column: 15, scope: !8645)
!8653 = !DILocation(line: 830, column: 4, scope: !8645)
!8654 = !DILocation(line: 831, column: 3, scope: !8645)
!8655 = !DILocation(line: 832, column: 3, scope: !8636)
!8656 = !DILocation(line: 835, column: 21, scope: !8610)
!8657 = !DILocation(line: 835, column: 26, scope: !8610)
!8658 = !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !8609)
!8659 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !8608)
!8660 = !DILocation(line: 0, scope: !6298, inlinedAt: !8608)
!8661 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !8608)
!8662 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !8608)
!8663 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !8608)
!8664 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !8608)
!8665 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !8608)
!8666 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !8608)
!8667 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !8608)
!8668 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !8608)
!8669 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !8608)
!8670 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !8608)
!8671 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !8608)
!8672 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !8608)
!8673 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !8608)
!8674 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !8608)
!8675 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !8608)
!8676 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !8608)
!8677 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !8608)
!8678 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !8608)
!8679 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !8608)
!8680 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !8608)
!8681 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !8608)
!8682 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !8608)
!8683 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !8608)
!8684 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !8608)
!8685 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !8608)
!8686 = !DILocation(line: 191, column: 6, scope: !6511, inlinedAt: !8609)
!8687 = !DILocation(line: 192, column: 23, scope: !6510, inlinedAt: !8609)
!8688 = !DILocation(line: 192, column: 27, scope: !6510, inlinedAt: !8609)
!8689 = !DILocation(line: 192, column: 33, scope: !6510, inlinedAt: !8609)
!8690 = !DILocation(line: 192, column: 7, scope: !6510, inlinedAt: !8609)
!8691 = !DILocation(line: 192, column: 5, scope: !6510, inlinedAt: !8609)
!8692 = !DILocation(line: 192, column: 3, scope: !6510, inlinedAt: !8609)
!8693 = !DILocation(line: 193, column: 9, scope: !6511, inlinedAt: !8609)
!8694 = !DILocation(line: 835, column: 6, scope: !8610)
!8695 = !DILocation(line: 835, column: 6, scope: !8606)
!8696 = !DILocation(line: 836, column: 3, scope: !8610)
!8697 = !DILocation(line: 838, column: 5, scope: !8606)
!8698 = !DILocation(line: 838, column: 2, scope: !8606)
!8699 = !DILocation(line: 838, column: 36, scope: !8606)
!8700 = !DILocation(line: 840, column: 9, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 840, column: 6)
!8702 = !DILocation(line: 840, column: 6, scope: !8701)
!8703 = !DILocation(line: 840, column: 6, scope: !8606)
!8704 = !DILocation(line: 841, column: 3, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8701, file: !3, line: 840, column: 50)
!8706 = !DILocation(line: 843, column: 3, scope: !8705)
!8707 = !DILocation(line: 846, column: 6, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 846, column: 6)
!8709 = !DILocation(line: 846, column: 11, scope: !8708)
!8710 = !DILocation(line: 846, column: 20, scope: !8708)
!8711 = !DILocation(line: 846, column: 17, scope: !8708)
!8712 = !DILocation(line: 846, column: 6, scope: !8606)
!8713 = !DILocation(line: 848, column: 3, scope: !8708)
!8714 = !DILocation(line: 851, column: 30, scope: !8606)
!8715 = !DILocation(line: 851, column: 9, scope: !8606)
!8716 = !DILocation(line: 851, column: 2, scope: !8606)
!8717 = !DILocation(line: 852, column: 1, scope: !8606)
!8718 = distinct !DISubprogram(name: "comedi_clear_board_dev", scope: !3, file: !3, line: 164, type: !8719, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8719 = !DISubroutineType(types: !8720)
!8720 = !{!492, !162}
!8721 = !DILocalVariable(name: "dev", arg: 1, scope: !8718, file: !3, line: 164, type: !162)
!8722 = !DILocation(line: 164, column: 58, scope: !8718)
!8723 = !DILocalVariable(name: "i", scope: !8718, file: !3, line: 166, type: !7)
!8724 = !DILocation(line: 166, column: 15, scope: !8718)
!8725 = !DILocation(line: 166, column: 19, scope: !8718)
!8726 = !DILocation(line: 166, column: 24, scope: !8718)
!8727 = !DILocalVariable(name: "cleared", scope: !8718, file: !3, line: 167, type: !492)
!8728 = !DILocation(line: 167, column: 7, scope: !8718)
!8729 = !DILocation(line: 169, column: 2, scope: !8718)
!8730 = !DILocation(line: 169, column: 2, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8718, file: !3, line: 169, column: 2)
!8732 = !DILocation(line: 170, column: 2, scope: !8718)
!8733 = !DILocation(line: 171, column: 6, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8718, file: !3, line: 171, column: 6)
!8735 = !DILocation(line: 171, column: 38, scope: !8734)
!8736 = !DILocation(line: 171, column: 13, scope: !8734)
!8737 = !DILocation(line: 171, column: 10, scope: !8734)
!8738 = !DILocation(line: 171, column: 6, scope: !8718)
!8739 = !DILocation(line: 172, column: 28, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8734, file: !3, line: 171, column: 42)
!8741 = !DILocation(line: 172, column: 3, scope: !8740)
!8742 = !DILocation(line: 172, column: 31, scope: !8740)
!8743 = !DILocation(line: 173, column: 11, scope: !8740)
!8744 = !DILocation(line: 174, column: 2, scope: !8740)
!8745 = !DILocation(line: 175, column: 2, scope: !8718)
!8746 = !DILocation(line: 176, column: 9, scope: !8718)
!8747 = !DILocation(line: 176, column: 2, scope: !8718)
!8748 = distinct !DISubprogram(name: "do_bufconfig_ioctl", scope: !3, file: !3, line: 867, type: !8749, scopeLine: 869, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8749 = !DISubroutineType(types: !8750)
!8750 = !{!166, !162, !4033}
!8751 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !8752)
!8752 = distinct !DILocation(line: 199, column: 6, scope: !6018, inlinedAt: !8753)
!8753 = distinct !DILocation(line: 910, column: 6, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8748, file: !3, line: 910, column: 6)
!8755 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !8752)
!8756 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !8752)
!8757 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !8752)
!8758 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !8752)
!8759 = !DILocation(line: 197, column: 27, scope: !6020, inlinedAt: !8753)
!8760 = !DILocation(line: 197, column: 43, scope: !6020, inlinedAt: !8753)
!8761 = !DILocation(line: 197, column: 63, scope: !6020, inlinedAt: !8753)
!8762 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !8763)
!8763 = distinct !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !8764)
!8764 = distinct !DILocation(line: 876, column: 6, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !8748, file: !3, line: 876, column: 6)
!8766 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !8763)
!8767 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !8763)
!8768 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !8763)
!8769 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !8763)
!8770 = !DILocation(line: 189, column: 22, scope: !6511, inlinedAt: !8764)
!8771 = !DILocation(line: 189, column: 45, scope: !6511, inlinedAt: !8764)
!8772 = !DILocation(line: 189, column: 65, scope: !6511, inlinedAt: !8764)
!8773 = !DILocalVariable(name: "dev", arg: 1, scope: !8748, file: !3, line: 867, type: !162)
!8774 = !DILocation(line: 867, column: 53, scope: !8748)
!8775 = !DILocalVariable(name: "arg", arg: 2, scope: !8748, file: !3, line: 868, type: !4033)
!8776 = !DILocation(line: 868, column: 42, scope: !8748)
!8777 = !DILocalVariable(name: "bc", scope: !8748, file: !3, line: 870, type: !4034)
!8778 = !DILocation(line: 870, column: 26, scope: !8748)
!8779 = !DILocalVariable(name: "async", scope: !8748, file: !3, line: 871, type: !3882)
!8780 = !DILocation(line: 871, column: 23, scope: !8748)
!8781 = !DILocalVariable(name: "s", scope: !8748, file: !3, line: 872, type: !3871)
!8782 = !DILocation(line: 872, column: 27, scope: !8748)
!8783 = !DILocalVariable(name: "retval", scope: !8748, file: !3, line: 873, type: !166)
!8784 = !DILocation(line: 873, column: 6, scope: !8748)
!8785 = !DILocation(line: 875, column: 2, scope: !8748)
!8786 = !DILocation(line: 875, column: 2, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8748, file: !3, line: 875, column: 2)
!8788 = !DILocation(line: 876, column: 21, scope: !8765)
!8789 = !DILocation(line: 876, column: 26, scope: !8765)
!8790 = !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !8764)
!8791 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !8763)
!8792 = !DILocation(line: 0, scope: !6298, inlinedAt: !8763)
!8793 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !8763)
!8794 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !8763)
!8795 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !8763)
!8796 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !8763)
!8797 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !8763)
!8798 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !8763)
!8799 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !8763)
!8800 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !8763)
!8801 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !8763)
!8802 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !8763)
!8803 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !8763)
!8804 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !8763)
!8805 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !8763)
!8806 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !8763)
!8807 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !8763)
!8808 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !8763)
!8809 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !8763)
!8810 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !8763)
!8811 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !8763)
!8812 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !8763)
!8813 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !8763)
!8814 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !8763)
!8815 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !8763)
!8816 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !8763)
!8817 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !8763)
!8818 = !DILocation(line: 191, column: 6, scope: !6511, inlinedAt: !8764)
!8819 = !DILocation(line: 192, column: 23, scope: !6510, inlinedAt: !8764)
!8820 = !DILocation(line: 192, column: 27, scope: !6510, inlinedAt: !8764)
!8821 = !DILocation(line: 192, column: 33, scope: !6510, inlinedAt: !8764)
!8822 = !DILocation(line: 192, column: 7, scope: !6510, inlinedAt: !8764)
!8823 = !DILocation(line: 192, column: 5, scope: !6510, inlinedAt: !8764)
!8824 = !DILocation(line: 192, column: 3, scope: !6510, inlinedAt: !8764)
!8825 = !DILocation(line: 193, column: 9, scope: !6511, inlinedAt: !8764)
!8826 = !DILocation(line: 876, column: 6, scope: !8765)
!8827 = !DILocation(line: 876, column: 6, scope: !8748)
!8828 = !DILocation(line: 877, column: 3, scope: !8765)
!8829 = !DILocation(line: 879, column: 9, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8748, file: !3, line: 879, column: 6)
!8831 = !DILocation(line: 879, column: 22, scope: !8830)
!8832 = !DILocation(line: 879, column: 27, scope: !8830)
!8833 = !DILocation(line: 879, column: 19, scope: !8830)
!8834 = !DILocation(line: 879, column: 6, scope: !8748)
!8835 = !DILocation(line: 880, column: 3, scope: !8830)
!8836 = !DILocation(line: 882, column: 7, scope: !8748)
!8837 = !DILocation(line: 882, column: 12, scope: !8748)
!8838 = !DILocation(line: 882, column: 26, scope: !8748)
!8839 = !DILocation(line: 882, column: 4, scope: !8748)
!8840 = !DILocation(line: 883, column: 10, scope: !8748)
!8841 = !DILocation(line: 883, column: 13, scope: !8748)
!8842 = !DILocation(line: 883, column: 8, scope: !8748)
!8843 = !DILocation(line: 885, column: 7, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8748, file: !3, line: 885, column: 6)
!8845 = !DILocation(line: 885, column: 6, scope: !8748)
!8846 = !DILocation(line: 888, column: 6, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8844, file: !3, line: 885, column: 14)
!8848 = !DILocation(line: 888, column: 11, scope: !8847)
!8849 = !DILocation(line: 889, column: 6, scope: !8847)
!8850 = !DILocation(line: 889, column: 19, scope: !8847)
!8851 = !DILocation(line: 890, column: 3, scope: !8847)
!8852 = !DILocation(line: 893, column: 9, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8748, file: !3, line: 893, column: 6)
!8854 = !DILocation(line: 893, column: 6, scope: !8853)
!8855 = !DILocation(line: 893, column: 6, scope: !8748)
!8856 = !DILocation(line: 894, column: 8, scope: !8857)
!8857 = distinct !DILexicalBlock(scope: !8858, file: !3, line: 894, column: 7)
!8858 = distinct !DILexicalBlock(scope: !8853, file: !3, line: 893, column: 23)
!8859 = !DILocation(line: 894, column: 7, scope: !8858)
!8860 = !DILocation(line: 895, column: 4, scope: !8857)
!8861 = !DILocation(line: 897, column: 27, scope: !8858)
!8862 = !DILocation(line: 897, column: 3, scope: !8858)
!8863 = !DILocation(line: 897, column: 10, scope: !8858)
!8864 = !DILocation(line: 897, column: 22, scope: !8858)
!8865 = !DILocation(line: 898, column: 2, scope: !8858)
!8866 = !DILocation(line: 900, column: 9, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8748, file: !3, line: 900, column: 6)
!8868 = !DILocation(line: 900, column: 6, scope: !8867)
!8869 = !DILocation(line: 900, column: 6, scope: !8748)
!8870 = !DILocation(line: 901, column: 32, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8867, file: !3, line: 900, column: 15)
!8872 = !DILocation(line: 901, column: 37, scope: !8871)
!8873 = !DILocation(line: 901, column: 43, scope: !8871)
!8874 = !DILocation(line: 901, column: 12, scope: !8871)
!8875 = !DILocation(line: 901, column: 10, scope: !8871)
!8876 = !DILocation(line: 902, column: 7, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8871, file: !3, line: 902, column: 7)
!8878 = !DILocation(line: 902, column: 14, scope: !8877)
!8879 = !DILocation(line: 902, column: 7, scope: !8871)
!8880 = !DILocation(line: 903, column: 11, scope: !8877)
!8881 = !DILocation(line: 903, column: 4, scope: !8877)
!8882 = !DILocation(line: 904, column: 2, scope: !8871)
!8883 = !DILocation(line: 906, column: 12, scope: !8748)
!8884 = !DILocation(line: 906, column: 19, scope: !8748)
!8885 = !DILocation(line: 906, column: 5, scope: !8748)
!8886 = !DILocation(line: 906, column: 10, scope: !8748)
!8887 = !DILocation(line: 907, column: 20, scope: !8748)
!8888 = !DILocation(line: 907, column: 27, scope: !8748)
!8889 = !DILocation(line: 907, column: 5, scope: !8748)
!8890 = !DILocation(line: 907, column: 18, scope: !8748)
!8891 = !DILocation(line: 907, column: 2, scope: !8748)
!8892 = !DILabel(scope: !8748, name: "copyback", file: !3, line: 909)
!8893 = !DILocation(line: 909, column: 1, scope: !8748)
!8894 = !DILocation(line: 910, column: 19, scope: !8754)
!8895 = !DILocation(line: 910, column: 24, scope: !8754)
!8896 = !DILocation(line: 199, column: 6, scope: !6018, inlinedAt: !8753)
!8897 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !8752)
!8898 = !DILocation(line: 0, scope: !6298, inlinedAt: !8752)
!8899 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !8752)
!8900 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !8752)
!8901 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !8752)
!8902 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !8752)
!8903 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !8752)
!8904 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !8752)
!8905 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !8752)
!8906 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !8752)
!8907 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !8752)
!8908 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !8752)
!8909 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !8752)
!8910 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !8752)
!8911 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !8752)
!8912 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !8752)
!8913 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !8752)
!8914 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !8752)
!8915 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !8752)
!8916 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !8752)
!8917 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !8752)
!8918 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !8752)
!8919 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !8752)
!8920 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !8752)
!8921 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !8752)
!8922 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !8752)
!8923 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !8752)
!8924 = !DILocation(line: 199, column: 6, scope: !6020, inlinedAt: !8753)
!8925 = !DILocation(line: 200, column: 21, scope: !6018, inlinedAt: !8753)
!8926 = !DILocation(line: 200, column: 25, scope: !6018, inlinedAt: !8753)
!8927 = !DILocation(line: 200, column: 31, scope: !6018, inlinedAt: !8753)
!8928 = !DILocation(line: 200, column: 7, scope: !6018, inlinedAt: !8753)
!8929 = !DILocation(line: 200, column: 5, scope: !6018, inlinedAt: !8753)
!8930 = !DILocation(line: 200, column: 3, scope: !6018, inlinedAt: !8753)
!8931 = !DILocation(line: 201, column: 9, scope: !6020, inlinedAt: !8753)
!8932 = !DILocation(line: 910, column: 6, scope: !8754)
!8933 = !DILocation(line: 910, column: 6, scope: !8748)
!8934 = !DILocation(line: 911, column: 3, scope: !8754)
!8935 = !DILocation(line: 913, column: 2, scope: !8748)
!8936 = !DILocation(line: 914, column: 1, scope: !8748)
!8937 = distinct !DISubprogram(name: "do_devinfo_ioctl", scope: !3, file: !3, line: 929, type: !8938, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!8938 = !DISubroutineType(types: !8939)
!8939 = !{!166, !162, !4042, !354}
!8940 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !8941)
!8941 = distinct !DILocation(line: 199, column: 6, scope: !6018, inlinedAt: !8942)
!8942 = distinct !DILocation(line: 957, column: 6, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 957, column: 6)
!8944 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !8941)
!8945 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !8941)
!8946 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !8941)
!8947 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !8941)
!8948 = !DILocation(line: 197, column: 27, scope: !6020, inlinedAt: !8942)
!8949 = !DILocation(line: 197, column: 43, scope: !6020, inlinedAt: !8942)
!8950 = !DILocation(line: 197, column: 63, scope: !6020, inlinedAt: !8942)
!8951 = !DILocalVariable(name: "dev", arg: 1, scope: !8937, file: !3, line: 929, type: !162)
!8952 = !DILocation(line: 929, column: 51, scope: !8937)
!8953 = !DILocalVariable(name: "arg", arg: 2, scope: !8937, file: !3, line: 930, type: !4042)
!8954 = !DILocation(line: 930, column: 38, scope: !8937)
!8955 = !DILocalVariable(name: "file", arg: 3, scope: !8937, file: !3, line: 931, type: !354)
!8956 = !DILocation(line: 931, column: 21, scope: !8937)
!8957 = !DILocalVariable(name: "s", scope: !8937, file: !3, line: 933, type: !3871)
!8958 = !DILocation(line: 933, column: 27, scope: !8937)
!8959 = !DILocalVariable(name: "devinfo", scope: !8937, file: !3, line: 934, type: !4043)
!8960 = !DILocation(line: 934, column: 24, scope: !8937)
!8961 = !DILocation(line: 936, column: 2, scope: !8937)
!8962 = !DILocation(line: 936, column: 2, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 936, column: 2)
!8964 = !DILocation(line: 937, column: 2, scope: !8937)
!8965 = !DILocation(line: 940, column: 10, scope: !8937)
!8966 = !DILocation(line: 940, column: 23, scope: !8937)
!8967 = !DILocation(line: 941, column: 22, scope: !8937)
!8968 = !DILocation(line: 941, column: 27, scope: !8937)
!8969 = !DILocation(line: 941, column: 10, scope: !8937)
!8970 = !DILocation(line: 941, column: 20, scope: !8937)
!8971 = !DILocation(line: 942, column: 18, scope: !8937)
!8972 = !DILocation(line: 942, column: 10, scope: !8937)
!8973 = !DILocation(line: 942, column: 31, scope: !8937)
!8974 = !DILocation(line: 942, column: 36, scope: !8937)
!8975 = !DILocation(line: 942, column: 44, scope: !8937)
!8976 = !DILocation(line: 942, column: 2, scope: !8937)
!8977 = !DILocation(line: 943, column: 18, scope: !8937)
!8978 = !DILocation(line: 943, column: 10, scope: !8937)
!8979 = !DILocation(line: 943, column: 30, scope: !8937)
!8980 = !DILocation(line: 943, column: 35, scope: !8937)
!8981 = !DILocation(line: 943, column: 2, scope: !8937)
!8982 = !DILocation(line: 945, column: 33, scope: !8937)
!8983 = !DILocation(line: 945, column: 6, scope: !8937)
!8984 = !DILocation(line: 945, column: 4, scope: !8937)
!8985 = !DILocation(line: 946, column: 6, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 946, column: 6)
!8987 = !DILocation(line: 946, column: 6, scope: !8937)
!8988 = !DILocation(line: 947, column: 28, scope: !8986)
!8989 = !DILocation(line: 947, column: 31, scope: !8986)
!8990 = !DILocation(line: 947, column: 11, scope: !8986)
!8991 = !DILocation(line: 947, column: 26, scope: !8986)
!8992 = !DILocation(line: 947, column: 3, scope: !8986)
!8993 = !DILocation(line: 949, column: 11, scope: !8986)
!8994 = !DILocation(line: 949, column: 26, scope: !8986)
!8995 = !DILocation(line: 951, column: 34, scope: !8937)
!8996 = !DILocation(line: 951, column: 6, scope: !8937)
!8997 = !DILocation(line: 951, column: 4, scope: !8937)
!8998 = !DILocation(line: 952, column: 6, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 952, column: 6)
!9000 = !DILocation(line: 952, column: 6, scope: !8937)
!9001 = !DILocation(line: 953, column: 29, scope: !8999)
!9002 = !DILocation(line: 953, column: 32, scope: !8999)
!9003 = !DILocation(line: 953, column: 11, scope: !8999)
!9004 = !DILocation(line: 953, column: 27, scope: !8999)
!9005 = !DILocation(line: 953, column: 3, scope: !8999)
!9006 = !DILocation(line: 955, column: 11, scope: !8999)
!9007 = !DILocation(line: 955, column: 27, scope: !8999)
!9008 = !DILocation(line: 957, column: 19, scope: !8943)
!9009 = !DILocation(line: 957, column: 24, scope: !8943)
!9010 = !DILocation(line: 199, column: 6, scope: !6018, inlinedAt: !8942)
!9011 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !8941)
!9012 = !DILocation(line: 0, scope: !6298, inlinedAt: !8941)
!9013 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !8941)
!9014 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !8941)
!9015 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !8941)
!9016 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !8941)
!9017 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !8941)
!9018 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !8941)
!9019 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !8941)
!9020 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !8941)
!9021 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !8941)
!9022 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !8941)
!9023 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !8941)
!9024 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !8941)
!9025 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !8941)
!9026 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !8941)
!9027 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !8941)
!9028 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !8941)
!9029 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !8941)
!9030 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !8941)
!9031 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !8941)
!9032 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !8941)
!9033 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !8941)
!9034 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !8941)
!9035 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !8941)
!9036 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !8941)
!9037 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !8941)
!9038 = !DILocation(line: 199, column: 6, scope: !6020, inlinedAt: !8942)
!9039 = !DILocation(line: 200, column: 21, scope: !6018, inlinedAt: !8942)
!9040 = !DILocation(line: 200, column: 25, scope: !6018, inlinedAt: !8942)
!9041 = !DILocation(line: 200, column: 31, scope: !6018, inlinedAt: !8942)
!9042 = !DILocation(line: 200, column: 7, scope: !6018, inlinedAt: !8942)
!9043 = !DILocation(line: 200, column: 5, scope: !6018, inlinedAt: !8942)
!9044 = !DILocation(line: 200, column: 3, scope: !6018, inlinedAt: !8942)
!9045 = !DILocation(line: 201, column: 9, scope: !6020, inlinedAt: !8942)
!9046 = !DILocation(line: 957, column: 6, scope: !8943)
!9047 = !DILocation(line: 957, column: 6, scope: !8937)
!9048 = !DILocation(line: 958, column: 3, scope: !8943)
!9049 = !DILocation(line: 960, column: 2, scope: !8937)
!9050 = !DILocation(line: 961, column: 1, scope: !8937)
!9051 = distinct !DISubprogram(name: "do_subdinfo_ioctl", scope: !3, file: !3, line: 976, type: !9052, scopeLine: 978, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!9052 = !DISubroutineType(types: !9053)
!9053 = !{!166, !162, !4055, !161}
!9054 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !9055)
!9055 = distinct !DILocation(line: 199, column: 6, scope: !6018, inlinedAt: !9056)
!9056 = distinct !DILocation(line: 1030, column: 8, scope: !9051)
!9057 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !9055)
!9058 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !9055)
!9059 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !9055)
!9060 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !9055)
!9061 = !DILocation(line: 197, column: 27, scope: !6020, inlinedAt: !9056)
!9062 = !DILocation(line: 197, column: 43, scope: !6020, inlinedAt: !9056)
!9063 = !DILocation(line: 197, column: 63, scope: !6020, inlinedAt: !9056)
!9064 = !DILocalVariable(name: "dev", arg: 1, scope: !9051, file: !3, line: 976, type: !162)
!9065 = !DILocation(line: 976, column: 52, scope: !9051)
!9066 = !DILocalVariable(name: "arg", arg: 2, scope: !9051, file: !3, line: 977, type: !4055)
!9067 = !DILocation(line: 977, column: 40, scope: !9051)
!9068 = !DILocalVariable(name: "file", arg: 3, scope: !9051, file: !3, line: 977, type: !161)
!9069 = !DILocation(line: 977, column: 51, scope: !9051)
!9070 = !DILocalVariable(name: "ret", scope: !9051, file: !3, line: 979, type: !166)
!9071 = !DILocation(line: 979, column: 6, scope: !9051)
!9072 = !DILocalVariable(name: "i", scope: !9051, file: !3, line: 979, type: !166)
!9073 = !DILocation(line: 979, column: 11, scope: !9051)
!9074 = !DILocalVariable(name: "tmp", scope: !9051, file: !3, line: 980, type: !4055)
!9075 = !DILocation(line: 980, column: 26, scope: !9051)
!9076 = !DILocalVariable(name: "us", scope: !9051, file: !3, line: 980, type: !4055)
!9077 = !DILocation(line: 980, column: 32, scope: !9051)
!9078 = !DILocalVariable(name: "s", scope: !9051, file: !3, line: 981, type: !3871)
!9079 = !DILocation(line: 981, column: 27, scope: !9051)
!9080 = !DILocation(line: 983, column: 2, scope: !9051)
!9081 = !DILocation(line: 983, column: 2, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9051, file: !3, line: 983, column: 2)
!9083 = !DILocation(line: 984, column: 16, scope: !9051)
!9084 = !DILocation(line: 984, column: 21, scope: !9051)
!9085 = !DILocation(line: 984, column: 8, scope: !9051)
!9086 = !DILocation(line: 984, column: 6, scope: !9051)
!9087 = !DILocation(line: 985, column: 7, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9051, file: !3, line: 985, column: 6)
!9089 = !DILocation(line: 985, column: 6, scope: !9051)
!9090 = !DILocation(line: 986, column: 3, scope: !9088)
!9091 = !DILocation(line: 989, column: 9, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9051, file: !3, line: 989, column: 2)
!9093 = !DILocation(line: 989, column: 7, scope: !9092)
!9094 = !DILocation(line: 989, column: 14, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9092, file: !3, line: 989, column: 2)
!9096 = !DILocation(line: 989, column: 18, scope: !9095)
!9097 = !DILocation(line: 989, column: 23, scope: !9095)
!9098 = !DILocation(line: 989, column: 16, scope: !9095)
!9099 = !DILocation(line: 989, column: 2, scope: !9092)
!9100 = !DILocation(line: 990, column: 8, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9095, file: !3, line: 989, column: 42)
!9102 = !DILocation(line: 990, column: 13, scope: !9101)
!9103 = !DILocation(line: 990, column: 24, scope: !9101)
!9104 = !DILocation(line: 990, column: 5, scope: !9101)
!9105 = !DILocation(line: 991, column: 8, scope: !9101)
!9106 = !DILocation(line: 991, column: 14, scope: !9101)
!9107 = !DILocation(line: 991, column: 12, scope: !9101)
!9108 = !DILocation(line: 991, column: 6, scope: !9101)
!9109 = !DILocation(line: 993, column: 14, scope: !9101)
!9110 = !DILocation(line: 993, column: 17, scope: !9101)
!9111 = !DILocation(line: 993, column: 3, scope: !9101)
!9112 = !DILocation(line: 993, column: 7, scope: !9101)
!9113 = !DILocation(line: 993, column: 12, scope: !9101)
!9114 = !DILocation(line: 994, column: 16, scope: !9101)
!9115 = !DILocation(line: 994, column: 19, scope: !9101)
!9116 = !DILocation(line: 994, column: 3, scope: !9101)
!9117 = !DILocation(line: 994, column: 7, scope: !9101)
!9118 = !DILocation(line: 994, column: 14, scope: !9101)
!9119 = !DILocation(line: 995, column: 20, scope: !9101)
!9120 = !DILocation(line: 995, column: 23, scope: !9101)
!9121 = !DILocation(line: 995, column: 3, scope: !9101)
!9122 = !DILocation(line: 995, column: 7, scope: !9101)
!9123 = !DILocation(line: 995, column: 18, scope: !9101)
!9124 = !DILocation(line: 996, column: 35, scope: !9125)
!9125 = distinct !DILexicalBlock(scope: !9101, file: !3, line: 996, column: 7)
!9126 = !DILocation(line: 996, column: 7, scope: !9125)
!9127 = !DILocation(line: 996, column: 7, scope: !9101)
!9128 = !DILocation(line: 997, column: 4, scope: !9125)
!9129 = !DILocation(line: 997, column: 8, scope: !9125)
!9130 = !DILocation(line: 997, column: 19, scope: !9125)
!9131 = !DILocation(line: 999, column: 3, scope: !9101)
!9132 = !DILocation(line: 999, column: 7, scope: !9101)
!9133 = !DILocation(line: 999, column: 18, scope: !9101)
!9134 = !DILocation(line: 1000, column: 22, scope: !9101)
!9135 = !DILocation(line: 1000, column: 25, scope: !9101)
!9136 = !DILocation(line: 1000, column: 3, scope: !9101)
!9137 = !DILocation(line: 1000, column: 7, scope: !9101)
!9138 = !DILocation(line: 1000, column: 20, scope: !9101)
!9139 = !DILocation(line: 1001, column: 17, scope: !9101)
!9140 = !DILocation(line: 1001, column: 20, scope: !9101)
!9141 = !DILocation(line: 1001, column: 3, scope: !9101)
!9142 = !DILocation(line: 1001, column: 7, scope: !9101)
!9143 = !DILocation(line: 1001, column: 15, scope: !9101)
!9144 = !DILocation(line: 1002, column: 7, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9101, file: !3, line: 1002, column: 7)
!9146 = !DILocation(line: 1002, column: 10, scope: !9145)
!9147 = !DILocation(line: 1002, column: 7, scope: !9101)
!9148 = !DILocation(line: 1004, column: 9, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9145, file: !3, line: 1002, column: 23)
!9150 = !DILocation(line: 1004, column: 11, scope: !9149)
!9151 = !DILocation(line: 1004, column: 33, scope: !9149)
!9152 = !DILocation(line: 1004, column: 36, scope: !9149)
!9153 = !DILocation(line: 1004, column: 49, scope: !9149)
!9154 = !DILocation(line: 1004, column: 30, scope: !9149)
!9155 = !DILocation(line: 1003, column: 4, scope: !9149)
!9156 = !DILocation(line: 1003, column: 8, scope: !9149)
!9157 = !DILocation(line: 1003, column: 19, scope: !9149)
!9158 = !DILocation(line: 1005, column: 3, scope: !9149)
!9159 = !DILocation(line: 1006, column: 4, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9145, file: !3, line: 1005, column: 10)
!9161 = !DILocation(line: 1006, column: 8, scope: !9160)
!9162 = !DILocation(line: 1006, column: 19, scope: !9160)
!9163 = !DILocation(line: 1009, column: 7, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9101, file: !3, line: 1009, column: 7)
!9165 = !DILocation(line: 1009, column: 10, scope: !9164)
!9166 = !DILocation(line: 1009, column: 7, scope: !9101)
!9167 = !DILocation(line: 1010, column: 4, scope: !9164)
!9168 = !DILocation(line: 1010, column: 8, scope: !9164)
!9169 = !DILocation(line: 1010, column: 19, scope: !9164)
!9170 = !DILocation(line: 1011, column: 7, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9101, file: !3, line: 1011, column: 7)
!9172 = !DILocation(line: 1011, column: 10, scope: !9171)
!9173 = !DILocation(line: 1011, column: 18, scope: !9171)
!9174 = !DILocation(line: 1011, column: 15, scope: !9171)
!9175 = !DILocation(line: 1011, column: 7, scope: !9101)
!9176 = !DILocation(line: 1012, column: 4, scope: !9171)
!9177 = !DILocation(line: 1012, column: 8, scope: !9171)
!9178 = !DILocation(line: 1012, column: 19, scope: !9171)
!9179 = !DILocation(line: 1013, column: 7, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !9101, file: !3, line: 1013, column: 7)
!9181 = !DILocation(line: 1013, column: 10, scope: !9180)
!9182 = !DILocation(line: 1013, column: 7, scope: !9101)
!9183 = !DILocation(line: 1014, column: 4, scope: !9180)
!9184 = !DILocation(line: 1014, column: 8, scope: !9180)
!9185 = !DILocation(line: 1014, column: 19, scope: !9180)
!9186 = !DILocation(line: 1015, column: 7, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9101, file: !3, line: 1015, column: 7)
!9188 = !DILocation(line: 1015, column: 10, scope: !9187)
!9189 = !DILocation(line: 1015, column: 18, scope: !9187)
!9190 = !DILocation(line: 1015, column: 15, scope: !9187)
!9191 = !DILocation(line: 1015, column: 7, scope: !9101)
!9192 = !DILocation(line: 1016, column: 4, scope: !9187)
!9193 = !DILocation(line: 1016, column: 8, scope: !9187)
!9194 = !DILocation(line: 1016, column: 19, scope: !9187)
!9195 = !DILocation(line: 1017, column: 8, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9101, file: !3, line: 1017, column: 7)
!9197 = !DILocation(line: 1017, column: 11, scope: !9196)
!9198 = !DILocation(line: 1017, column: 19, scope: !9196)
!9199 = !DILocation(line: 1017, column: 22, scope: !9196)
!9200 = !DILocation(line: 1017, column: 25, scope: !9196)
!9201 = !DILocation(line: 1017, column: 7, scope: !9101)
!9202 = !DILocation(line: 1018, column: 4, scope: !9196)
!9203 = !DILocation(line: 1018, column: 8, scope: !9196)
!9204 = !DILocation(line: 1018, column: 19, scope: !9196)
!9205 = !DILocation(line: 1019, column: 7, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9101, file: !3, line: 1019, column: 7)
!9207 = !DILocation(line: 1019, column: 10, scope: !9206)
!9208 = !DILocation(line: 1019, column: 7, scope: !9101)
!9209 = !DILocation(line: 1020, column: 4, scope: !9206)
!9210 = !DILocation(line: 1020, column: 8, scope: !9206)
!9211 = !DILocation(line: 1020, column: 19, scope: !9206)
!9212 = !DILocation(line: 1021, column: 7, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9101, file: !3, line: 1021, column: 7)
!9214 = !DILocation(line: 1021, column: 10, scope: !9213)
!9215 = !DILocation(line: 1021, column: 7, scope: !9101)
!9216 = !DILocation(line: 1022, column: 4, scope: !9213)
!9217 = !DILocation(line: 1022, column: 8, scope: !9213)
!9218 = !DILocation(line: 1022, column: 19, scope: !9213)
!9219 = !DILocation(line: 1024, column: 7, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9101, file: !3, line: 1024, column: 7)
!9221 = !DILocation(line: 1024, column: 10, scope: !9220)
!9222 = !DILocation(line: 1024, column: 20, scope: !9220)
!9223 = !DILocation(line: 1024, column: 7, scope: !9101)
!9224 = !DILocation(line: 1025, column: 4, scope: !9220)
!9225 = !DILocation(line: 1025, column: 8, scope: !9220)
!9226 = !DILocation(line: 1025, column: 26, scope: !9220)
!9227 = !DILocation(line: 1027, column: 4, scope: !9220)
!9228 = !DILocation(line: 1027, column: 8, scope: !9220)
!9229 = !DILocation(line: 1027, column: 26, scope: !9220)
!9230 = !DILocation(line: 1028, column: 2, scope: !9101)
!9231 = !DILocation(line: 989, column: 38, scope: !9095)
!9232 = !DILocation(line: 989, column: 2, scope: !9095)
!9233 = distinct !{!9233, !9099, !9234}
!9234 = !DILocation(line: 1028, column: 2, scope: !9092)
!9235 = !DILocation(line: 1030, column: 21, scope: !9051)
!9236 = !DILocation(line: 1030, column: 26, scope: !9051)
!9237 = !DILocation(line: 1030, column: 31, scope: !9051)
!9238 = !DILocation(line: 1030, column: 36, scope: !9051)
!9239 = !DILocation(line: 1030, column: 49, scope: !9051)
!9240 = !DILocation(line: 199, column: 6, scope: !6018, inlinedAt: !9056)
!9241 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !9055)
!9242 = !DILocation(line: 0, scope: !6298, inlinedAt: !9055)
!9243 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !9055)
!9244 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !9055)
!9245 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !9055)
!9246 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !9055)
!9247 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !9055)
!9248 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !9055)
!9249 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !9055)
!9250 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !9055)
!9251 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !9055)
!9252 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !9055)
!9253 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !9055)
!9254 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !9055)
!9255 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !9055)
!9256 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !9055)
!9257 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !9055)
!9258 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !9055)
!9259 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !9055)
!9260 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !9055)
!9261 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !9055)
!9262 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !9055)
!9263 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !9055)
!9264 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !9055)
!9265 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !9055)
!9266 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !9055)
!9267 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !9055)
!9268 = !DILocation(line: 199, column: 6, scope: !6020, inlinedAt: !9056)
!9269 = !DILocation(line: 200, column: 21, scope: !6018, inlinedAt: !9056)
!9270 = !DILocation(line: 200, column: 25, scope: !6018, inlinedAt: !9056)
!9271 = !DILocation(line: 200, column: 31, scope: !6018, inlinedAt: !9056)
!9272 = !DILocation(line: 200, column: 7, scope: !6018, inlinedAt: !9056)
!9273 = !DILocation(line: 200, column: 5, scope: !6018, inlinedAt: !9056)
!9274 = !DILocation(line: 200, column: 3, scope: !6018, inlinedAt: !9056)
!9275 = !DILocation(line: 201, column: 9, scope: !6020, inlinedAt: !9056)
!9276 = !DILocation(line: 1030, column: 8, scope: !9051)
!9277 = !DILocation(line: 1030, column: 6, scope: !9051)
!9278 = !DILocation(line: 1032, column: 8, scope: !9051)
!9279 = !DILocation(line: 1032, column: 2, scope: !9051)
!9280 = !DILocation(line: 1034, column: 9, scope: !9051)
!9281 = !DILocation(line: 1034, column: 2, scope: !9051)
!9282 = !DILocation(line: 1035, column: 1, scope: !9051)
!9283 = distinct !DISubprogram(name: "do_chaninfo_ioctl", scope: !3, file: !3, line: 1051, type: !9284, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!9284 = !DISubroutineType(types: !9285)
!9285 = !{!166, !162, !9286}
!9286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7286, size: 64)
!9287 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !9288)
!9288 = distinct !DILocation(line: 199, column: 6, scope: !6018, inlinedAt: !9289)
!9289 = distinct !DILocation(line: 1065, column: 7, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 1065, column: 7)
!9291 = distinct !DILexicalBlock(scope: !9292, file: !3, line: 1062, column: 24)
!9292 = distinct !DILexicalBlock(scope: !9283, file: !3, line: 1062, column: 6)
!9293 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !9288)
!9294 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !9288)
!9295 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !9288)
!9296 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !9288)
!9297 = !DILocation(line: 197, column: 27, scope: !6020, inlinedAt: !9289)
!9298 = !DILocation(line: 197, column: 43, scope: !6020, inlinedAt: !9289)
!9299 = !DILocation(line: 197, column: 63, scope: !6020, inlinedAt: !9289)
!9300 = !DILocalVariable(name: "dev", arg: 1, scope: !9283, file: !3, line: 1051, type: !162)
!9301 = !DILocation(line: 1051, column: 52, scope: !9283)
!9302 = !DILocalVariable(name: "it", arg: 2, scope: !9283, file: !3, line: 1052, type: !9286)
!9303 = !DILocation(line: 1052, column: 33, scope: !9283)
!9304 = !DILocalVariable(name: "s", scope: !9283, file: !3, line: 1054, type: !3871)
!9305 = !DILocation(line: 1054, column: 27, scope: !9283)
!9306 = !DILocation(line: 1056, column: 2, scope: !9283)
!9307 = !DILocation(line: 1056, column: 2, scope: !9308)
!9308 = distinct !DILexicalBlock(scope: !9283, file: !3, line: 1056, column: 2)
!9309 = !DILocation(line: 1058, column: 6, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9283, file: !3, line: 1058, column: 6)
!9311 = !DILocation(line: 1058, column: 10, scope: !9310)
!9312 = !DILocation(line: 1058, column: 20, scope: !9310)
!9313 = !DILocation(line: 1058, column: 25, scope: !9310)
!9314 = !DILocation(line: 1058, column: 17, scope: !9310)
!9315 = !DILocation(line: 1058, column: 6, scope: !9283)
!9316 = !DILocation(line: 1059, column: 3, scope: !9310)
!9317 = !DILocation(line: 1060, column: 7, scope: !9283)
!9318 = !DILocation(line: 1060, column: 12, scope: !9283)
!9319 = !DILocation(line: 1060, column: 23, scope: !9283)
!9320 = !DILocation(line: 1060, column: 27, scope: !9283)
!9321 = !DILocation(line: 1060, column: 4, scope: !9283)
!9322 = !DILocation(line: 1062, column: 6, scope: !9292)
!9323 = !DILocation(line: 1062, column: 10, scope: !9292)
!9324 = !DILocation(line: 1062, column: 6, scope: !9283)
!9325 = !DILocation(line: 1063, column: 7, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 1063, column: 7)
!9327 = !DILocation(line: 1063, column: 10, scope: !9326)
!9328 = !DILocation(line: 1063, column: 18, scope: !9326)
!9329 = !DILocation(line: 1063, column: 22, scope: !9326)
!9330 = !DILocation(line: 1063, column: 25, scope: !9326)
!9331 = !DILocation(line: 1063, column: 7, scope: !9291)
!9332 = !DILocation(line: 1064, column: 4, scope: !9326)
!9333 = !DILocation(line: 1065, column: 20, scope: !9290)
!9334 = !DILocation(line: 1065, column: 24, scope: !9290)
!9335 = !DILocation(line: 1065, column: 38, scope: !9290)
!9336 = !DILocation(line: 1065, column: 41, scope: !9290)
!9337 = !DILocation(line: 1066, column: 6, scope: !9290)
!9338 = !DILocation(line: 1066, column: 9, scope: !9290)
!9339 = !DILocation(line: 1066, column: 16, scope: !9290)
!9340 = !DILocation(line: 199, column: 6, scope: !6018, inlinedAt: !9289)
!9341 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !9288)
!9342 = !DILocation(line: 0, scope: !6298, inlinedAt: !9288)
!9343 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !9288)
!9344 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !9288)
!9345 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !9288)
!9346 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !9288)
!9347 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !9288)
!9348 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !9288)
!9349 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !9288)
!9350 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !9288)
!9351 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !9288)
!9352 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !9288)
!9353 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !9288)
!9354 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !9288)
!9355 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !9288)
!9356 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !9288)
!9357 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !9288)
!9358 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !9288)
!9359 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !9288)
!9360 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !9288)
!9361 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !9288)
!9362 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !9288)
!9363 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !9288)
!9364 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !9288)
!9365 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !9288)
!9366 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !9288)
!9367 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !9288)
!9368 = !DILocation(line: 199, column: 6, scope: !6020, inlinedAt: !9289)
!9369 = !DILocation(line: 200, column: 21, scope: !6018, inlinedAt: !9289)
!9370 = !DILocation(line: 200, column: 25, scope: !6018, inlinedAt: !9289)
!9371 = !DILocation(line: 200, column: 31, scope: !6018, inlinedAt: !9289)
!9372 = !DILocation(line: 200, column: 7, scope: !6018, inlinedAt: !9289)
!9373 = !DILocation(line: 200, column: 5, scope: !6018, inlinedAt: !9289)
!9374 = !DILocation(line: 200, column: 3, scope: !6018, inlinedAt: !9289)
!9375 = !DILocation(line: 201, column: 9, scope: !6020, inlinedAt: !9289)
!9376 = !DILocation(line: 1065, column: 7, scope: !9290)
!9377 = !DILocation(line: 1065, column: 7, scope: !9291)
!9378 = !DILocation(line: 1067, column: 4, scope: !9290)
!9379 = !DILocation(line: 1068, column: 2, scope: !9291)
!9380 = !DILocation(line: 1070, column: 6, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9283, file: !3, line: 1070, column: 6)
!9382 = !DILocation(line: 1070, column: 10, scope: !9381)
!9383 = !DILocation(line: 1070, column: 6, scope: !9283)
!9384 = !DILocation(line: 1071, column: 3, scope: !9381)
!9385 = !DILocation(line: 1073, column: 6, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9283, file: !3, line: 1073, column: 6)
!9387 = !DILocation(line: 1073, column: 10, scope: !9386)
!9388 = !DILocation(line: 1073, column: 6, scope: !9283)
!9389 = !DILocalVariable(name: "i", scope: !9390, file: !3, line: 1074, type: !166)
!9390 = distinct !DILexicalBlock(scope: !9386, file: !3, line: 1073, column: 21)
!9391 = !DILocation(line: 1074, column: 7, scope: !9390)
!9392 = !DILocation(line: 1076, column: 8, scope: !9393)
!9393 = distinct !DILexicalBlock(scope: !9390, file: !3, line: 1076, column: 7)
!9394 = !DILocation(line: 1076, column: 11, scope: !9393)
!9395 = !DILocation(line: 1076, column: 7, scope: !9390)
!9396 = !DILocation(line: 1077, column: 4, scope: !9393)
!9397 = !DILocation(line: 1078, column: 10, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9390, file: !3, line: 1078, column: 3)
!9399 = !DILocation(line: 1078, column: 8, scope: !9398)
!9400 = !DILocation(line: 1078, column: 15, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !9398, file: !3, line: 1078, column: 3)
!9402 = !DILocation(line: 1078, column: 19, scope: !9401)
!9403 = !DILocation(line: 1078, column: 22, scope: !9401)
!9404 = !DILocation(line: 1078, column: 17, scope: !9401)
!9405 = !DILocation(line: 1078, column: 3, scope: !9398)
!9406 = !DILocalVariable(name: "x", scope: !9407, file: !3, line: 1079, type: !166)
!9407 = distinct !DILexicalBlock(scope: !9401, file: !3, line: 1078, column: 35)
!9408 = !DILocation(line: 1079, column: 8, scope: !9407)
!9409 = !DILocation(line: 1081, column: 9, scope: !9407)
!9410 = !DILocation(line: 1081, column: 14, scope: !9407)
!9411 = !DILocation(line: 1081, column: 20, scope: !9407)
!9412 = !DILocation(line: 1081, column: 30, scope: !9407)
!9413 = !DILocation(line: 1081, column: 34, scope: !9407)
!9414 = !DILocation(line: 1081, column: 41, scope: !9407)
!9415 = !DILocation(line: 1081, column: 27, scope: !9407)
!9416 = !DILocation(line: 1081, column: 51, scope: !9407)
!9417 = !DILocation(line: 1081, column: 53, scope: !9407)
!9418 = !DILocation(line: 1081, column: 48, scope: !9407)
!9419 = !DILocation(line: 1082, column: 9, scope: !9407)
!9420 = !DILocation(line: 1082, column: 12, scope: !9407)
!9421 = !DILocation(line: 1082, column: 29, scope: !9407)
!9422 = !DILocation(line: 1082, column: 33, scope: !9407)
!9423 = !DILocation(line: 1081, column: 60, scope: !9407)
!9424 = !DILocation(line: 1081, column: 6, scope: !9407)
!9425 = !DILocation(line: 1083, column: 8, scope: !9426)
!9426 = distinct !DILexicalBlock(scope: !9427, file: !3, line: 1083, column: 8)
!9427 = distinct !DILexicalBlock(scope: !9407, file: !3, line: 1083, column: 8)
!9428 = !DILocalVariable(name: "__ret_pu", scope: !9429, file: !3, line: 1083, type: !166)
!9429 = distinct !DILexicalBlock(scope: !9426, file: !3, line: 1083, column: 8)
!9430 = !DILocation(line: 1083, column: 8, scope: !9429)
!9431 = !DILocalVariable(name: "__ptr_pu", scope: !9429, file: !3, line: 1083, type: !161)
!9432 = !DILocalVariable(name: "__val_pu", scope: !9429, file: !3, line: 1083, type: !7)
!9433 = !{i32 -2141768719}
!9434 = !DILocation(line: 1083, column: 8, scope: !9427)
!9435 = !DILocation(line: 1083, column: 8, scope: !9407)
!9436 = !DILocation(line: 1084, column: 5, scope: !9427)
!9437 = !DILocation(line: 1085, column: 3, scope: !9407)
!9438 = !DILocation(line: 1078, column: 31, scope: !9401)
!9439 = !DILocation(line: 1078, column: 3, scope: !9401)
!9440 = distinct !{!9440, !9405, !9441}
!9441 = !DILocation(line: 1085, column: 3, scope: !9398)
!9442 = !DILocation(line: 1086, column: 2, scope: !9390)
!9443 = !DILocation(line: 1088, column: 2, scope: !9283)
!9444 = !DILocation(line: 1089, column: 1, scope: !9283)
!9445 = distinct !DISubprogram(name: "do_bufinfo_ioctl", scope: !3, file: !3, line: 1104, type: !9446, scopeLine: 1106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!9446 = !DISubroutineType(types: !9447)
!9447 = !{!166, !162, !4070, !161}
!9448 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !9449)
!9449 = distinct !DILocation(line: 199, column: 6, scope: !6018, inlinedAt: !9450)
!9450 = distinct !DILocation(line: 1175, column: 6, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9445, file: !3, line: 1175, column: 6)
!9452 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !9449)
!9453 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !9449)
!9454 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !9449)
!9455 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !9449)
!9456 = !DILocation(line: 197, column: 27, scope: !6020, inlinedAt: !9450)
!9457 = !DILocation(line: 197, column: 43, scope: !6020, inlinedAt: !9450)
!9458 = !DILocation(line: 197, column: 63, scope: !6020, inlinedAt: !9450)
!9459 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !9460)
!9460 = distinct !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !9461)
!9461 = distinct !DILocation(line: 1115, column: 6, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9445, file: !3, line: 1115, column: 6)
!9463 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !9460)
!9464 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !9460)
!9465 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !9460)
!9466 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !9460)
!9467 = !DILocation(line: 189, column: 22, scope: !6511, inlinedAt: !9461)
!9468 = !DILocation(line: 189, column: 45, scope: !6511, inlinedAt: !9461)
!9469 = !DILocation(line: 189, column: 65, scope: !6511, inlinedAt: !9461)
!9470 = !DILocalVariable(name: "dev", arg: 1, scope: !9445, file: !3, line: 1104, type: !162)
!9471 = !DILocation(line: 1104, column: 51, scope: !9445)
!9472 = !DILocalVariable(name: "arg", arg: 2, scope: !9445, file: !3, line: 1105, type: !4070)
!9473 = !DILocation(line: 1105, column: 38, scope: !9445)
!9474 = !DILocalVariable(name: "file", arg: 3, scope: !9445, file: !3, line: 1105, type: !161)
!9475 = !DILocation(line: 1105, column: 49, scope: !9445)
!9476 = !DILocalVariable(name: "bi", scope: !9445, file: !3, line: 1107, type: !4071)
!9477 = !DILocation(line: 1107, column: 24, scope: !9445)
!9478 = !DILocalVariable(name: "s", scope: !9445, file: !3, line: 1108, type: !3871)
!9479 = !DILocation(line: 1108, column: 27, scope: !9445)
!9480 = !DILocalVariable(name: "async", scope: !9445, file: !3, line: 1109, type: !3882)
!9481 = !DILocation(line: 1109, column: 23, scope: !9445)
!9482 = !DILocalVariable(name: "runflags", scope: !9445, file: !3, line: 1110, type: !7)
!9483 = !DILocation(line: 1110, column: 15, scope: !9445)
!9484 = !DILocalVariable(name: "retval", scope: !9445, file: !3, line: 1111, type: !166)
!9485 = !DILocation(line: 1111, column: 6, scope: !9445)
!9486 = !DILocalVariable(name: "become_nonbusy", scope: !9445, file: !3, line: 1112, type: !492)
!9487 = !DILocation(line: 1112, column: 7, scope: !9445)
!9488 = !DILocation(line: 1114, column: 2, scope: !9445)
!9489 = !DILocation(line: 1114, column: 2, scope: !9490)
!9490 = distinct !DILexicalBlock(scope: !9445, file: !3, line: 1114, column: 2)
!9491 = !DILocation(line: 1115, column: 21, scope: !9462)
!9492 = !DILocation(line: 1115, column: 26, scope: !9462)
!9493 = !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !9461)
!9494 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !9460)
!9495 = !DILocation(line: 0, scope: !6298, inlinedAt: !9460)
!9496 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !9460)
!9497 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !9460)
!9498 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !9460)
!9499 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !9460)
!9500 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !9460)
!9501 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !9460)
!9502 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !9460)
!9503 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !9460)
!9504 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !9460)
!9505 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !9460)
!9506 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !9460)
!9507 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !9460)
!9508 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !9460)
!9509 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !9460)
!9510 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !9460)
!9511 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !9460)
!9512 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !9460)
!9513 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !9460)
!9514 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !9460)
!9515 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !9460)
!9516 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !9460)
!9517 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !9460)
!9518 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !9460)
!9519 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !9460)
!9520 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !9460)
!9521 = !DILocation(line: 191, column: 6, scope: !6511, inlinedAt: !9461)
!9522 = !DILocation(line: 192, column: 23, scope: !6510, inlinedAt: !9461)
!9523 = !DILocation(line: 192, column: 27, scope: !6510, inlinedAt: !9461)
!9524 = !DILocation(line: 192, column: 33, scope: !6510, inlinedAt: !9461)
!9525 = !DILocation(line: 192, column: 7, scope: !6510, inlinedAt: !9461)
!9526 = !DILocation(line: 192, column: 5, scope: !6510, inlinedAt: !9461)
!9527 = !DILocation(line: 192, column: 3, scope: !6510, inlinedAt: !9461)
!9528 = !DILocation(line: 193, column: 9, scope: !6511, inlinedAt: !9461)
!9529 = !DILocation(line: 1115, column: 6, scope: !9462)
!9530 = !DILocation(line: 1115, column: 6, scope: !9445)
!9531 = !DILocation(line: 1116, column: 3, scope: !9462)
!9532 = !DILocation(line: 1118, column: 9, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9445, file: !3, line: 1118, column: 6)
!9534 = !DILocation(line: 1118, column: 22, scope: !9533)
!9535 = !DILocation(line: 1118, column: 27, scope: !9533)
!9536 = !DILocation(line: 1118, column: 19, scope: !9533)
!9537 = !DILocation(line: 1118, column: 6, scope: !9445)
!9538 = !DILocation(line: 1119, column: 3, scope: !9533)
!9539 = !DILocation(line: 1121, column: 7, scope: !9445)
!9540 = !DILocation(line: 1121, column: 12, scope: !9445)
!9541 = !DILocation(line: 1121, column: 26, scope: !9445)
!9542 = !DILocation(line: 1121, column: 4, scope: !9445)
!9543 = !DILocation(line: 1123, column: 10, scope: !9445)
!9544 = !DILocation(line: 1123, column: 13, scope: !9445)
!9545 = !DILocation(line: 1123, column: 8, scope: !9445)
!9546 = !DILocation(line: 1125, column: 7, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9445, file: !3, line: 1125, column: 6)
!9548 = !DILocation(line: 1125, column: 13, scope: !9547)
!9549 = !DILocation(line: 1125, column: 16, scope: !9547)
!9550 = !DILocation(line: 1125, column: 19, scope: !9547)
!9551 = !DILocation(line: 1125, column: 27, scope: !9547)
!9552 = !DILocation(line: 1125, column: 24, scope: !9547)
!9553 = !DILocation(line: 1125, column: 6, scope: !9445)
!9554 = !DILocation(line: 1126, column: 3, scope: !9547)
!9555 = !DILocation(line: 1128, column: 43, scope: !9445)
!9556 = !DILocation(line: 1128, column: 13, scope: !9445)
!9557 = !DILocation(line: 1128, column: 11, scope: !9445)
!9558 = !DILocation(line: 1129, column: 8, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9445, file: !3, line: 1129, column: 6)
!9560 = !DILocation(line: 1129, column: 15, scope: !9559)
!9561 = !DILocation(line: 1129, column: 19, scope: !9559)
!9562 = !DILocation(line: 1129, column: 25, scope: !9559)
!9563 = !DILocation(line: 1129, column: 6, scope: !9445)
!9564 = !DILocation(line: 1131, column: 10, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9566, file: !3, line: 1131, column: 7)
!9566 = distinct !DILexicalBlock(scope: !9559, file: !3, line: 1129, column: 40)
!9567 = !DILocation(line: 1131, column: 7, scope: !9565)
!9568 = !DILocation(line: 1131, column: 7, scope: !9566)
!9569 = !DILocation(line: 1132, column: 26, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9565, file: !3, line: 1131, column: 22)
!9571 = !DILocation(line: 1132, column: 32, scope: !9570)
!9572 = !DILocation(line: 1132, column: 4, scope: !9570)
!9573 = !DILocation(line: 1133, column: 41, scope: !9570)
!9574 = !DILocation(line: 1133, column: 47, scope: !9570)
!9575 = !DILocation(line: 1133, column: 20, scope: !9570)
!9576 = !DILocation(line: 1133, column: 7, scope: !9570)
!9577 = !DILocation(line: 1133, column: 18, scope: !9570)
!9578 = !DILocation(line: 1134, column: 3, scope: !9570)
!9579 = !DILocation(line: 1140, column: 35, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9566, file: !3, line: 1140, column: 7)
!9581 = !DILocation(line: 1140, column: 7, scope: !9580)
!9582 = !DILocation(line: 1140, column: 38, scope: !9580)
!9583 = !DILocation(line: 1140, column: 43, scope: !9580)
!9584 = !DILocation(line: 1141, column: 35, scope: !9580)
!9585 = !DILocation(line: 1141, column: 8, scope: !9580)
!9586 = !DILocation(line: 1141, column: 45, scope: !9580)
!9587 = !DILocation(line: 1142, column: 11, scope: !9580)
!9588 = !DILocation(line: 1142, column: 22, scope: !9580)
!9589 = !DILocation(line: 1142, column: 27, scope: !9580)
!9590 = !DILocation(line: 1143, column: 37, scope: !9580)
!9591 = !DILocation(line: 1143, column: 9, scope: !9580)
!9592 = !DILocation(line: 1140, column: 7, scope: !9566)
!9593 = !DILocation(line: 1144, column: 19, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9580, file: !3, line: 1143, column: 49)
!9595 = !DILocation(line: 1145, column: 36, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9594, file: !3, line: 1145, column: 8)
!9597 = !DILocation(line: 1145, column: 8, scope: !9596)
!9598 = !DILocation(line: 1145, column: 8, scope: !9594)
!9599 = !DILocation(line: 1146, column: 12, scope: !9596)
!9600 = !DILocation(line: 1146, column: 5, scope: !9596)
!9601 = !DILocation(line: 1147, column: 3, scope: !9594)
!9602 = !DILocation(line: 1148, column: 6, scope: !9566)
!9603 = !DILocation(line: 1148, column: 20, scope: !9566)
!9604 = !DILocation(line: 1149, column: 2, scope: !9566)
!9605 = !DILocation(line: 1151, column: 35, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9607, file: !3, line: 1151, column: 7)
!9607 = distinct !DILexicalBlock(scope: !9559, file: !3, line: 1149, column: 9)
!9608 = !DILocation(line: 1151, column: 8, scope: !9606)
!9609 = !DILocation(line: 1151, column: 7, scope: !9607)
!9610 = !DILocation(line: 1152, column: 7, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9606, file: !3, line: 1151, column: 46)
!9612 = !DILocation(line: 1152, column: 21, scope: !9611)
!9613 = !DILocation(line: 1153, column: 19, scope: !9611)
!9614 = !DILocation(line: 1154, column: 36, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9611, file: !3, line: 1154, column: 8)
!9616 = !DILocation(line: 1154, column: 8, scope: !9615)
!9617 = !DILocation(line: 1154, column: 8, scope: !9611)
!9618 = !DILocation(line: 1155, column: 12, scope: !9615)
!9619 = !DILocation(line: 1155, column: 5, scope: !9615)
!9620 = !DILocation(line: 1156, column: 3, scope: !9611)
!9621 = !DILocation(line: 1156, column: 17, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9606, file: !3, line: 1156, column: 14)
!9623 = !DILocation(line: 1156, column: 14, scope: !9622)
!9624 = !DILocation(line: 1156, column: 14, scope: !9606)
!9625 = !DILocation(line: 1157, column: 27, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !9622, file: !3, line: 1156, column: 32)
!9627 = !DILocation(line: 1157, column: 33, scope: !9626)
!9628 = !DILocation(line: 1157, column: 4, scope: !9626)
!9629 = !DILocation(line: 1159, column: 30, scope: !9626)
!9630 = !DILocation(line: 1159, column: 36, scope: !9626)
!9631 = !DILocation(line: 1159, column: 8, scope: !9626)
!9632 = !DILocation(line: 1158, column: 7, scope: !9626)
!9633 = !DILocation(line: 1158, column: 21, scope: !9626)
!9634 = !DILocation(line: 1160, column: 3, scope: !9626)
!9635 = !DILocation(line: 1161, column: 6, scope: !9607)
!9636 = !DILocation(line: 1161, column: 17, scope: !9607)
!9637 = !DILocation(line: 1164, column: 23, scope: !9445)
!9638 = !DILocation(line: 1164, column: 30, scope: !9445)
!9639 = !DILocation(line: 1164, column: 5, scope: !9445)
!9640 = !DILocation(line: 1164, column: 21, scope: !9445)
!9641 = !DILocation(line: 1165, column: 21, scope: !9445)
!9642 = !DILocation(line: 1165, column: 28, scope: !9445)
!9643 = !DILocation(line: 1165, column: 5, scope: !9445)
!9644 = !DILocation(line: 1165, column: 19, scope: !9445)
!9645 = !DILocation(line: 1166, column: 22, scope: !9445)
!9646 = !DILocation(line: 1166, column: 29, scope: !9445)
!9647 = !DILocation(line: 1166, column: 5, scope: !9445)
!9648 = !DILocation(line: 1166, column: 20, scope: !9445)
!9649 = !DILocation(line: 1167, column: 20, scope: !9445)
!9650 = !DILocation(line: 1167, column: 27, scope: !9445)
!9651 = !DILocation(line: 1167, column: 5, scope: !9445)
!9652 = !DILocation(line: 1167, column: 18, scope: !9445)
!9653 = !DILocation(line: 1169, column: 6, scope: !9654)
!9654 = distinct !DILexicalBlock(scope: !9445, file: !3, line: 1169, column: 6)
!9655 = !DILocation(line: 1169, column: 6, scope: !9445)
!9656 = !DILocation(line: 1170, column: 21, scope: !9654)
!9657 = !DILocation(line: 1170, column: 26, scope: !9654)
!9658 = !DILocation(line: 1170, column: 3, scope: !9654)
!9659 = !DILocation(line: 1172, column: 6, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9445, file: !3, line: 1172, column: 6)
!9661 = !DILocation(line: 1172, column: 6, scope: !9445)
!9662 = !DILocation(line: 1173, column: 10, scope: !9660)
!9663 = !DILocation(line: 1173, column: 3, scope: !9660)
!9664 = !DILocation(line: 1175, column: 19, scope: !9451)
!9665 = !DILocation(line: 1175, column: 24, scope: !9451)
!9666 = !DILocation(line: 199, column: 6, scope: !6018, inlinedAt: !9450)
!9667 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !9449)
!9668 = !DILocation(line: 0, scope: !6298, inlinedAt: !9449)
!9669 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !9449)
!9670 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !9449)
!9671 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !9449)
!9672 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !9449)
!9673 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !9449)
!9674 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !9449)
!9675 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !9449)
!9676 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !9449)
!9677 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !9449)
!9678 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !9449)
!9679 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !9449)
!9680 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !9449)
!9681 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !9449)
!9682 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !9449)
!9683 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !9449)
!9684 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !9449)
!9685 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !9449)
!9686 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !9449)
!9687 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !9449)
!9688 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !9449)
!9689 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !9449)
!9690 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !9449)
!9691 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !9449)
!9692 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !9449)
!9693 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !9449)
!9694 = !DILocation(line: 199, column: 6, scope: !6020, inlinedAt: !9450)
!9695 = !DILocation(line: 200, column: 21, scope: !6018, inlinedAt: !9450)
!9696 = !DILocation(line: 200, column: 25, scope: !6018, inlinedAt: !9450)
!9697 = !DILocation(line: 200, column: 31, scope: !6018, inlinedAt: !9450)
!9698 = !DILocation(line: 200, column: 7, scope: !6018, inlinedAt: !9450)
!9699 = !DILocation(line: 200, column: 5, scope: !6018, inlinedAt: !9450)
!9700 = !DILocation(line: 200, column: 3, scope: !6018, inlinedAt: !9450)
!9701 = !DILocation(line: 201, column: 9, scope: !6020, inlinedAt: !9450)
!9702 = !DILocation(line: 1175, column: 6, scope: !9451)
!9703 = !DILocation(line: 1175, column: 6, scope: !9445)
!9704 = !DILocation(line: 1176, column: 3, scope: !9451)
!9705 = !DILocation(line: 1178, column: 2, scope: !9445)
!9706 = !DILocation(line: 1179, column: 1, scope: !9445)
!9707 = distinct !DISubprogram(name: "do_lock_ioctl", scope: !3, file: !3, line: 1899, type: !9708, scopeLine: 1901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!9708 = !DISubroutineType(types: !9709)
!9709 = !{!166, !162, !203, !161}
!9710 = !DILocation(line: 407, column: 64, scope: !4394, inlinedAt: !9711)
!9711 = distinct !DILocation(line: 1916, column: 2, scope: !9707)
!9712 = !DILocation(line: 407, column: 84, scope: !4394, inlinedAt: !9711)
!9713 = !DILocation(line: 327, column: 67, scope: !4403, inlinedAt: !9714)
!9714 = distinct !DILocation(line: 1911, column: 2, scope: !9715)
!9715 = distinct !DILexicalBlock(scope: !9716, file: !3, line: 1911, column: 2)
!9716 = distinct !DILexicalBlock(scope: !9717, file: !3, line: 1911, column: 2)
!9717 = distinct !DILexicalBlock(scope: !9718, file: !3, line: 1911, column: 2)
!9718 = distinct !DILexicalBlock(scope: !9719, file: !3, line: 1911, column: 2)
!9719 = distinct !DILexicalBlock(scope: !9707, file: !3, line: 1911, column: 2)
!9720 = !DILocalVariable(name: "dev", arg: 1, scope: !9707, file: !3, line: 1899, type: !162)
!9721 = !DILocation(line: 1899, column: 48, scope: !9707)
!9722 = !DILocalVariable(name: "arg", arg: 2, scope: !9707, file: !3, line: 1899, type: !203)
!9723 = !DILocation(line: 1899, column: 67, scope: !9707)
!9724 = !DILocalVariable(name: "file", arg: 3, scope: !9707, file: !3, line: 1900, type: !161)
!9725 = !DILocation(line: 1900, column: 11, scope: !9707)
!9726 = !DILocalVariable(name: "ret", scope: !9707, file: !3, line: 1902, type: !166)
!9727 = !DILocation(line: 1902, column: 6, scope: !9707)
!9728 = !DILocalVariable(name: "flags", scope: !9707, file: !3, line: 1903, type: !203)
!9729 = !DILocation(line: 1903, column: 16, scope: !9707)
!9730 = !DILocalVariable(name: "s", scope: !9707, file: !3, line: 1904, type: !3871)
!9731 = !DILocation(line: 1904, column: 27, scope: !9707)
!9732 = !DILocation(line: 1906, column: 2, scope: !9707)
!9733 = !DILocation(line: 1906, column: 2, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9707, file: !3, line: 1906, column: 2)
!9735 = !DILocation(line: 1907, column: 6, scope: !9736)
!9736 = distinct !DILexicalBlock(scope: !9707, file: !3, line: 1907, column: 6)
!9737 = !DILocation(line: 1907, column: 13, scope: !9736)
!9738 = !DILocation(line: 1907, column: 18, scope: !9736)
!9739 = !DILocation(line: 1907, column: 10, scope: !9736)
!9740 = !DILocation(line: 1907, column: 6, scope: !9707)
!9741 = !DILocation(line: 1908, column: 3, scope: !9736)
!9742 = !DILocation(line: 1909, column: 7, scope: !9707)
!9743 = !DILocation(line: 1909, column: 12, scope: !9707)
!9744 = !DILocation(line: 1909, column: 23, scope: !9707)
!9745 = !DILocation(line: 1909, column: 4, scope: !9707)
!9746 = !DILocation(line: 1911, column: 2, scope: !9707)
!9747 = !DILocation(line: 1911, column: 2, scope: !9719)
!9748 = !DILocalVariable(name: "__dummy", scope: !9749, file: !3, line: 1911, type: !203)
!9749 = distinct !DILexicalBlock(scope: !9718, file: !3, line: 1911, column: 2)
!9750 = !DILocation(line: 1911, column: 2, scope: !9749)
!9751 = !DILocalVariable(name: "__dummy2", scope: !9749, file: !3, line: 1911, type: !203)
!9752 = !DILocation(line: 1911, column: 2, scope: !9718)
!9753 = !DILocation(line: 1911, column: 2, scope: !9717)
!9754 = !DILocation(line: 1911, column: 2, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9717, file: !3, line: 1911, column: 2)
!9756 = !DILocalVariable(name: "__dummy", scope: !9757, file: !3, line: 1911, type: !203)
!9757 = distinct !DILexicalBlock(scope: !9758, file: !3, line: 1911, column: 2)
!9758 = distinct !DILexicalBlock(scope: !9755, file: !3, line: 1911, column: 2)
!9759 = !DILocation(line: 1911, column: 2, scope: !9757)
!9760 = !DILocalVariable(name: "__dummy2", scope: !9757, file: !3, line: 1911, type: !203)
!9761 = !DILocation(line: 1911, column: 2, scope: !9758)
!9762 = !DILocation(line: 1911, column: 2, scope: !9716)
!9763 = !{i32 -2141757064}
!9764 = !DILocation(line: 1911, column: 2, scope: !9715)
!9765 = !DILocation(line: 329, column: 10, scope: !4403, inlinedAt: !9714)
!9766 = !DILocation(line: 329, column: 16, scope: !4403, inlinedAt: !9714)
!9767 = !DILocation(line: 1912, column: 6, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9707, file: !3, line: 1912, column: 6)
!9769 = !DILocation(line: 1912, column: 9, scope: !9768)
!9770 = !DILocation(line: 1912, column: 14, scope: !9768)
!9771 = !DILocation(line: 1912, column: 17, scope: !9768)
!9772 = !DILocation(line: 1912, column: 20, scope: !9768)
!9773 = !DILocation(line: 1912, column: 6, scope: !9707)
!9774 = !DILocation(line: 1913, column: 7, scope: !9768)
!9775 = !DILocation(line: 1913, column: 3, scope: !9768)
!9776 = !DILocation(line: 1915, column: 13, scope: !9768)
!9777 = !DILocation(line: 1915, column: 3, scope: !9768)
!9778 = !DILocation(line: 1915, column: 6, scope: !9768)
!9779 = !DILocation(line: 1915, column: 11, scope: !9768)
!9780 = !DILocation(line: 1916, column: 26, scope: !9707)
!9781 = !DILocation(line: 1916, column: 29, scope: !9707)
!9782 = !DILocation(line: 1916, column: 40, scope: !9707)
!9783 = !DILocation(line: 409, column: 2, scope: !4448, inlinedAt: !9711)
!9784 = !DILocation(line: 409, column: 2, scope: !4453, inlinedAt: !9711)
!9785 = !DILocation(line: 409, column: 2, scope: !4454, inlinedAt: !9711)
!9786 = !DILocation(line: 409, column: 2, scope: !4461, inlinedAt: !9711)
!9787 = !DILocation(line: 409, column: 2, scope: !4464, inlinedAt: !9711)
!9788 = !DILocation(line: 1918, column: 9, scope: !9707)
!9789 = !DILocation(line: 1918, column: 2, scope: !9707)
!9790 = !DILocation(line: 1919, column: 1, scope: !9707)
!9791 = distinct !DISubprogram(name: "do_unlock_ioctl", scope: !3, file: !3, line: 1934, type: !9708, scopeLine: 1936, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!9792 = !DILocalVariable(name: "dev", arg: 1, scope: !9791, file: !3, line: 1934, type: !162)
!9793 = !DILocation(line: 1934, column: 50, scope: !9791)
!9794 = !DILocalVariable(name: "arg", arg: 2, scope: !9791, file: !3, line: 1934, type: !203)
!9795 = !DILocation(line: 1934, column: 69, scope: !9791)
!9796 = !DILocalVariable(name: "file", arg: 3, scope: !9791, file: !3, line: 1935, type: !161)
!9797 = !DILocation(line: 1935, column: 13, scope: !9791)
!9798 = !DILocalVariable(name: "s", scope: !9791, file: !3, line: 1937, type: !3871)
!9799 = !DILocation(line: 1937, column: 27, scope: !9791)
!9800 = !DILocation(line: 1939, column: 2, scope: !9791)
!9801 = !DILocation(line: 1939, column: 2, scope: !9802)
!9802 = distinct !DILexicalBlock(scope: !9791, file: !3, line: 1939, column: 2)
!9803 = !DILocation(line: 1940, column: 6, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9791, file: !3, line: 1940, column: 6)
!9805 = !DILocation(line: 1940, column: 13, scope: !9804)
!9806 = !DILocation(line: 1940, column: 18, scope: !9804)
!9807 = !DILocation(line: 1940, column: 10, scope: !9804)
!9808 = !DILocation(line: 1940, column: 6, scope: !9791)
!9809 = !DILocation(line: 1941, column: 3, scope: !9804)
!9810 = !DILocation(line: 1942, column: 7, scope: !9791)
!9811 = !DILocation(line: 1942, column: 12, scope: !9791)
!9812 = !DILocation(line: 1942, column: 23, scope: !9791)
!9813 = !DILocation(line: 1942, column: 4, scope: !9791)
!9814 = !DILocation(line: 1944, column: 6, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9791, file: !3, line: 1944, column: 6)
!9816 = !DILocation(line: 1944, column: 9, scope: !9815)
!9817 = !DILocation(line: 1944, column: 6, scope: !9791)
!9818 = !DILocation(line: 1945, column: 3, scope: !9815)
!9819 = !DILocation(line: 1947, column: 6, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9791, file: !3, line: 1947, column: 6)
!9821 = !DILocation(line: 1947, column: 9, scope: !9820)
!9822 = !DILocation(line: 1947, column: 14, scope: !9820)
!9823 = !DILocation(line: 1947, column: 17, scope: !9820)
!9824 = !DILocation(line: 1947, column: 20, scope: !9820)
!9825 = !DILocation(line: 1947, column: 28, scope: !9820)
!9826 = !DILocation(line: 1947, column: 25, scope: !9820)
!9827 = !DILocation(line: 1947, column: 6, scope: !9791)
!9828 = !DILocation(line: 1948, column: 3, scope: !9820)
!9829 = !DILocation(line: 1950, column: 6, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9791, file: !3, line: 1950, column: 6)
!9831 = !DILocation(line: 1950, column: 9, scope: !9830)
!9832 = !DILocation(line: 1950, column: 17, scope: !9830)
!9833 = !DILocation(line: 1950, column: 14, scope: !9830)
!9834 = !DILocation(line: 1950, column: 6, scope: !9791)
!9835 = !DILocation(line: 1951, column: 3, scope: !9830)
!9836 = !DILocation(line: 1951, column: 6, scope: !9830)
!9837 = !DILocation(line: 1951, column: 11, scope: !9830)
!9838 = !DILocation(line: 1953, column: 2, scope: !9791)
!9839 = !DILocation(line: 1954, column: 1, scope: !9791)
!9840 = distinct !DISubprogram(name: "do_cancel_ioctl", scope: !3, file: !3, line: 1969, type: !9708, scopeLine: 1971, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!9841 = !DILocalVariable(name: "dev", arg: 1, scope: !9840, file: !3, line: 1969, type: !162)
!9842 = !DILocation(line: 1969, column: 50, scope: !9840)
!9843 = !DILocalVariable(name: "arg", arg: 2, scope: !9840, file: !3, line: 1969, type: !203)
!9844 = !DILocation(line: 1969, column: 69, scope: !9840)
!9845 = !DILocalVariable(name: "file", arg: 3, scope: !9840, file: !3, line: 1970, type: !161)
!9846 = !DILocation(line: 1970, column: 13, scope: !9840)
!9847 = !DILocalVariable(name: "s", scope: !9840, file: !3, line: 1972, type: !3871)
!9848 = !DILocation(line: 1972, column: 27, scope: !9840)
!9849 = !DILocation(line: 1974, column: 2, scope: !9840)
!9850 = !DILocation(line: 1974, column: 2, scope: !9851)
!9851 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 1974, column: 2)
!9852 = !DILocation(line: 1975, column: 6, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 1975, column: 6)
!9854 = !DILocation(line: 1975, column: 13, scope: !9853)
!9855 = !DILocation(line: 1975, column: 18, scope: !9853)
!9856 = !DILocation(line: 1975, column: 10, scope: !9853)
!9857 = !DILocation(line: 1975, column: 6, scope: !9840)
!9858 = !DILocation(line: 1976, column: 3, scope: !9853)
!9859 = !DILocation(line: 1977, column: 7, scope: !9840)
!9860 = !DILocation(line: 1977, column: 12, scope: !9840)
!9861 = !DILocation(line: 1977, column: 23, scope: !9840)
!9862 = !DILocation(line: 1977, column: 4, scope: !9840)
!9863 = !DILocation(line: 1978, column: 7, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 1978, column: 6)
!9865 = !DILocation(line: 1978, column: 10, scope: !9864)
!9866 = !DILocation(line: 1978, column: 6, scope: !9840)
!9867 = !DILocation(line: 1979, column: 3, scope: !9864)
!9868 = !DILocation(line: 1981, column: 7, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 1981, column: 6)
!9870 = !DILocation(line: 1981, column: 10, scope: !9869)
!9871 = !DILocation(line: 1981, column: 6, scope: !9840)
!9872 = !DILocation(line: 1982, column: 3, scope: !9869)
!9873 = !DILocation(line: 1984, column: 6, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 1984, column: 6)
!9875 = !DILocation(line: 1984, column: 9, scope: !9874)
!9876 = !DILocation(line: 1984, column: 17, scope: !9874)
!9877 = !DILocation(line: 1984, column: 14, scope: !9874)
!9878 = !DILocation(line: 1984, column: 6, scope: !9840)
!9879 = !DILocation(line: 1985, column: 3, scope: !9874)
!9880 = !DILocation(line: 1987, column: 19, scope: !9840)
!9881 = !DILocation(line: 1987, column: 24, scope: !9840)
!9882 = !DILocation(line: 1987, column: 9, scope: !9840)
!9883 = !DILocation(line: 1987, column: 2, scope: !9840)
!9884 = !DILocation(line: 1988, column: 1, scope: !9840)
!9885 = distinct !DISubprogram(name: "do_cmd_ioctl", scope: !3, file: !3, line: 1743, type: !9886, scopeLine: 1745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!9886 = !DISubroutineType(types: !9887)
!9887 = !{!166, !162, !3991, !933, !161}
!9888 = !DILocalVariable(name: "dev", arg: 1, scope: !9885, file: !3, line: 1743, type: !162)
!9889 = !DILocation(line: 1743, column: 47, scope: !9885)
!9890 = !DILocalVariable(name: "cmd", arg: 2, scope: !9885, file: !3, line: 1744, type: !3991)
!9891 = !DILocation(line: 1744, column: 23, scope: !9885)
!9892 = !DILocalVariable(name: "copy", arg: 3, scope: !9885, file: !3, line: 1744, type: !933)
!9893 = !DILocation(line: 1744, column: 34, scope: !9885)
!9894 = !DILocalVariable(name: "file", arg: 4, scope: !9885, file: !3, line: 1744, type: !161)
!9895 = !DILocation(line: 1744, column: 46, scope: !9885)
!9896 = !DILocalVariable(name: "s", scope: !9885, file: !3, line: 1746, type: !3871)
!9897 = !DILocation(line: 1746, column: 27, scope: !9885)
!9898 = !DILocalVariable(name: "async", scope: !9885, file: !3, line: 1747, type: !3882)
!9899 = !DILocation(line: 1747, column: 23, scope: !9885)
!9900 = !DILocalVariable(name: "user_chanlist", scope: !9885, file: !3, line: 1748, type: !2724)
!9901 = !DILocation(line: 1748, column: 23, scope: !9885)
!9902 = !DILocalVariable(name: "ret", scope: !9885, file: !3, line: 1749, type: !166)
!9903 = !DILocation(line: 1749, column: 6, scope: !9885)
!9904 = !DILocation(line: 1751, column: 2, scope: !9885)
!9905 = !DILocation(line: 1751, column: 2, scope: !9906)
!9906 = distinct !DILexicalBlock(scope: !9885, file: !3, line: 1751, column: 2)
!9907 = !DILocation(line: 1754, column: 30, scope: !9885)
!9908 = !DILocation(line: 1754, column: 35, scope: !9885)
!9909 = !DILocation(line: 1754, column: 8, scope: !9885)
!9910 = !DILocation(line: 1754, column: 6, scope: !9885)
!9911 = !DILocation(line: 1755, column: 6, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9885, file: !3, line: 1755, column: 6)
!9913 = !DILocation(line: 1755, column: 6, scope: !9885)
!9914 = !DILocation(line: 1756, column: 10, scope: !9912)
!9915 = !DILocation(line: 1756, column: 3, scope: !9912)
!9916 = !DILocation(line: 1759, column: 41, scope: !9885)
!9917 = !DILocation(line: 1759, column: 46, scope: !9885)
!9918 = !DILocation(line: 1759, column: 16, scope: !9885)
!9919 = !DILocation(line: 1761, column: 7, scope: !9885)
!9920 = !DILocation(line: 1761, column: 12, scope: !9885)
!9921 = !DILocation(line: 1761, column: 23, scope: !9885)
!9922 = !DILocation(line: 1761, column: 28, scope: !9885)
!9923 = !DILocation(line: 1761, column: 4, scope: !9885)
!9924 = !DILocation(line: 1762, column: 10, scope: !9885)
!9925 = !DILocation(line: 1762, column: 13, scope: !9885)
!9926 = !DILocation(line: 1762, column: 8, scope: !9885)
!9927 = !DILocation(line: 1765, column: 6, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9885, file: !3, line: 1765, column: 6)
!9929 = !DILocation(line: 1765, column: 9, scope: !9928)
!9930 = !DILocation(line: 1765, column: 14, scope: !9928)
!9931 = !DILocation(line: 1765, column: 17, scope: !9928)
!9932 = !DILocation(line: 1765, column: 20, scope: !9928)
!9933 = !DILocation(line: 1765, column: 28, scope: !9928)
!9934 = !DILocation(line: 1765, column: 25, scope: !9928)
!9935 = !DILocation(line: 1765, column: 6, scope: !9885)
!9936 = !DILocation(line: 1767, column: 3, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9928, file: !3, line: 1765, column: 34)
!9938 = !DILocation(line: 1771, column: 6, scope: !9939)
!9939 = distinct !DILexicalBlock(scope: !9885, file: !3, line: 1771, column: 6)
!9940 = !DILocation(line: 1771, column: 9, scope: !9939)
!9941 = !DILocation(line: 1771, column: 6, scope: !9885)
!9942 = !DILocation(line: 1773, column: 3, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !9939, file: !3, line: 1771, column: 15)
!9944 = !DILocation(line: 1777, column: 6, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9885, file: !3, line: 1777, column: 6)
!9946 = !DILocation(line: 1777, column: 11, scope: !9945)
!9947 = !DILocation(line: 1777, column: 24, scope: !9945)
!9948 = !DILocation(line: 1777, column: 6, scope: !9885)
!9949 = !DILocation(line: 1780, column: 3, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9945, file: !3, line: 1777, column: 29)
!9951 = !DILocation(line: 1783, column: 2, scope: !9885)
!9952 = !DILocation(line: 1783, column: 9, scope: !9885)
!9953 = !DILocation(line: 1783, column: 16, scope: !9885)
!9954 = !DILocation(line: 1783, column: 15, scope: !9885)
!9955 = !DILocation(line: 1784, column: 2, scope: !9885)
!9956 = !DILocation(line: 1784, column: 9, scope: !9885)
!9957 = !DILocation(line: 1784, column: 13, scope: !9885)
!9958 = !DILocation(line: 1784, column: 18, scope: !9885)
!9959 = !DILocation(line: 1787, column: 35, scope: !9885)
!9960 = !DILocation(line: 1787, column: 40, scope: !9885)
!9961 = !DILocation(line: 1787, column: 43, scope: !9885)
!9962 = !DILocation(line: 1787, column: 59, scope: !9885)
!9963 = !DILocation(line: 1787, column: 66, scope: !9885)
!9964 = !DILocation(line: 1787, column: 8, scope: !9885)
!9965 = !DILocation(line: 1787, column: 6, scope: !9885)
!9966 = !DILocation(line: 1788, column: 6, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9885, file: !3, line: 1788, column: 6)
!9968 = !DILocation(line: 1788, column: 6, scope: !9885)
!9969 = !DILocation(line: 1789, column: 3, scope: !9967)
!9970 = !DILocation(line: 1791, column: 8, scope: !9885)
!9971 = !DILocation(line: 1791, column: 11, scope: !9885)
!9972 = !DILocation(line: 1791, column: 22, scope: !9885)
!9973 = !DILocation(line: 1791, column: 27, scope: !9885)
!9974 = !DILocation(line: 1791, column: 31, scope: !9885)
!9975 = !DILocation(line: 1791, column: 38, scope: !9885)
!9976 = !DILocation(line: 1791, column: 6, scope: !9885)
!9977 = !DILocation(line: 1793, column: 6, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9885, file: !3, line: 1793, column: 6)
!9979 = !DILocation(line: 1793, column: 13, scope: !9978)
!9980 = !DILocation(line: 1793, column: 17, scope: !9978)
!9981 = !DILocation(line: 1793, column: 23, scope: !9978)
!9982 = !DILocation(line: 1793, column: 36, scope: !9978)
!9983 = !DILocation(line: 1793, column: 39, scope: !9978)
!9984 = !DILocation(line: 1793, column: 6, scope: !9885)
!9985 = !DILocation(line: 1795, column: 4, scope: !9986)
!9986 = distinct !DILexicalBlock(scope: !9978, file: !3, line: 1793, column: 44)
!9987 = !DILocation(line: 1795, column: 10, scope: !9986)
!9988 = !DILocation(line: 1795, column: 17, scope: !9986)
!9989 = !DILocation(line: 1797, column: 43, scope: !9986)
!9990 = !DILocation(line: 1797, column: 3, scope: !9986)
!9991 = !DILocation(line: 1797, column: 8, scope: !9986)
!9992 = !DILocation(line: 1797, column: 17, scope: !9986)
!9993 = !DILocation(line: 1798, column: 3, scope: !9986)
!9994 = !DILocation(line: 1798, column: 8, scope: !9986)
!9995 = !DILocation(line: 1798, column: 13, scope: !9986)
!9996 = !DILocation(line: 1799, column: 4, scope: !9986)
!9997 = !DILocation(line: 1799, column: 9, scope: !9986)
!9998 = !DILocation(line: 1800, column: 7, scope: !9986)
!9999 = !DILocation(line: 1801, column: 3, scope: !9986)
!10000 = !DILocation(line: 1804, column: 7, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9885, file: !3, line: 1804, column: 6)
!10002 = !DILocation(line: 1804, column: 14, scope: !10001)
!10003 = !DILocation(line: 1804, column: 6, scope: !9885)
!10004 = !DILocation(line: 1805, column: 7, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !10001, file: !3, line: 1804, column: 30)
!10006 = !DILocation(line: 1807, column: 3, scope: !10005)
!10007 = !DILocation(line: 1810, column: 19, scope: !9885)
!10008 = !DILocation(line: 1810, column: 2, scope: !9885)
!10009 = !DILocation(line: 1812, column: 2, scope: !9885)
!10010 = !DILocation(line: 1812, column: 9, scope: !9885)
!10011 = !DILocation(line: 1812, column: 17, scope: !9885)
!10012 = !DILocation(line: 1813, column: 6, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !9885, file: !3, line: 1813, column: 6)
!10014 = !DILocation(line: 1813, column: 13, scope: !10013)
!10015 = !DILocation(line: 1813, column: 17, scope: !10013)
!10016 = !DILocation(line: 1813, column: 23, scope: !10013)
!10017 = !DILocation(line: 1813, column: 6, scope: !9885)
!10018 = !DILocation(line: 1814, column: 3, scope: !10013)
!10019 = !DILocation(line: 1814, column: 10, scope: !10013)
!10020 = !DILocation(line: 1814, column: 18, scope: !10013)
!10021 = !DILocation(line: 1816, column: 35, scope: !9885)
!10022 = !DILocation(line: 1816, column: 2, scope: !9885)
!10023 = !DILocation(line: 1823, column: 12, scope: !9885)
!10024 = !DILocation(line: 1823, column: 2, scope: !9885)
!10025 = !DILocation(line: 1823, column: 5, scope: !9885)
!10026 = !DILocation(line: 1823, column: 10, scope: !9885)
!10027 = !DILocation(line: 1824, column: 8, scope: !9885)
!10028 = !DILocation(line: 1824, column: 11, scope: !9885)
!10029 = !DILocation(line: 1824, column: 18, scope: !9885)
!10030 = !DILocation(line: 1824, column: 23, scope: !9885)
!10031 = !DILocation(line: 1824, column: 6, scope: !9885)
!10032 = !DILocation(line: 1825, column: 6, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !9885, file: !3, line: 1825, column: 6)
!10034 = !DILocation(line: 1825, column: 10, scope: !10033)
!10035 = !DILocation(line: 1825, column: 6, scope: !9885)
!10036 = !DILocation(line: 1826, column: 3, scope: !10033)
!10037 = !DILocation(line: 1825, column: 13, scope: !10033)
!10038 = !DILabel(scope: !9885, name: "cleanup", file: !3, line: 1828)
!10039 = !DILocation(line: 1828, column: 1, scope: !9885)
!10040 = !DILocation(line: 1829, column: 20, scope: !9885)
!10041 = !DILocation(line: 1829, column: 25, scope: !9885)
!10042 = !DILocation(line: 1829, column: 2, scope: !9885)
!10043 = !DILocation(line: 1831, column: 9, scope: !9885)
!10044 = !DILocation(line: 1831, column: 2, scope: !9885)
!10045 = !DILocation(line: 1832, column: 1, scope: !9885)
!10046 = distinct !DISubprogram(name: "do_cmdtest_ioctl", scope: !3, file: !3, line: 1848, type: !9886, scopeLine: 1850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!10047 = !DILocalVariable(name: "dev", arg: 1, scope: !10046, file: !3, line: 1848, type: !162)
!10048 = !DILocation(line: 1848, column: 51, scope: !10046)
!10049 = !DILocalVariable(name: "cmd", arg: 2, scope: !10046, file: !3, line: 1849, type: !3991)
!10050 = !DILocation(line: 1849, column: 27, scope: !10046)
!10051 = !DILocalVariable(name: "copy", arg: 3, scope: !10046, file: !3, line: 1849, type: !933)
!10052 = !DILocation(line: 1849, column: 38, scope: !10046)
!10053 = !DILocalVariable(name: "file", arg: 4, scope: !10046, file: !3, line: 1849, type: !161)
!10054 = !DILocation(line: 1849, column: 50, scope: !10046)
!10055 = !DILocalVariable(name: "s", scope: !10046, file: !3, line: 1851, type: !3871)
!10056 = !DILocation(line: 1851, column: 27, scope: !10046)
!10057 = !DILocalVariable(name: "user_chanlist", scope: !10046, file: !3, line: 1852, type: !2724)
!10058 = !DILocation(line: 1852, column: 23, scope: !10046)
!10059 = !DILocalVariable(name: "ret", scope: !10046, file: !3, line: 1853, type: !166)
!10060 = !DILocation(line: 1853, column: 6, scope: !10046)
!10061 = !DILocation(line: 1855, column: 2, scope: !10046)
!10062 = !DILocation(line: 1855, column: 2, scope: !10063)
!10063 = distinct !DILexicalBlock(scope: !10046, file: !3, line: 1855, column: 2)
!10064 = !DILocation(line: 1858, column: 30, scope: !10046)
!10065 = !DILocation(line: 1858, column: 35, scope: !10046)
!10066 = !DILocation(line: 1858, column: 8, scope: !10046)
!10067 = !DILocation(line: 1858, column: 6, scope: !10046)
!10068 = !DILocation(line: 1859, column: 6, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10046, file: !3, line: 1859, column: 6)
!10070 = !DILocation(line: 1859, column: 6, scope: !10046)
!10071 = !DILocation(line: 1860, column: 10, scope: !10069)
!10072 = !DILocation(line: 1860, column: 3, scope: !10069)
!10073 = !DILocation(line: 1863, column: 41, scope: !10046)
!10074 = !DILocation(line: 1863, column: 46, scope: !10046)
!10075 = !DILocation(line: 1863, column: 16, scope: !10046)
!10076 = !DILocation(line: 1865, column: 7, scope: !10046)
!10077 = !DILocation(line: 1865, column: 12, scope: !10046)
!10078 = !DILocation(line: 1865, column: 23, scope: !10046)
!10079 = !DILocation(line: 1865, column: 28, scope: !10046)
!10080 = !DILocation(line: 1865, column: 4, scope: !10046)
!10081 = !DILocation(line: 1868, column: 6, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !10046, file: !3, line: 1868, column: 6)
!10083 = !DILocation(line: 1868, column: 6, scope: !10046)
!10084 = !DILocation(line: 1870, column: 36, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10082, file: !3, line: 1868, column: 21)
!10086 = !DILocation(line: 1870, column: 41, scope: !10085)
!10087 = !DILocation(line: 1870, column: 44, scope: !10085)
!10088 = !DILocation(line: 1870, column: 59, scope: !10085)
!10089 = !DILocation(line: 1870, column: 9, scope: !10085)
!10090 = !DILocation(line: 1870, column: 7, scope: !10085)
!10091 = !DILocation(line: 1871, column: 7, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10085, file: !3, line: 1871, column: 7)
!10093 = !DILocation(line: 1871, column: 7, scope: !10085)
!10094 = !DILocation(line: 1872, column: 11, scope: !10092)
!10095 = !DILocation(line: 1872, column: 4, scope: !10092)
!10096 = !DILocation(line: 1873, column: 2, scope: !10085)
!10097 = !DILocation(line: 1875, column: 8, scope: !10046)
!10098 = !DILocation(line: 1875, column: 11, scope: !10046)
!10099 = !DILocation(line: 1875, column: 22, scope: !10046)
!10100 = !DILocation(line: 1875, column: 27, scope: !10046)
!10101 = !DILocation(line: 1875, column: 30, scope: !10046)
!10102 = !DILocation(line: 1875, column: 6, scope: !10046)
!10103 = !DILocation(line: 1877, column: 8, scope: !10046)
!10104 = !DILocation(line: 1877, column: 13, scope: !10046)
!10105 = !DILocation(line: 1877, column: 2, scope: !10046)
!10106 = !DILocation(line: 1880, column: 42, scope: !10046)
!10107 = !DILocation(line: 1880, column: 2, scope: !10046)
!10108 = !DILocation(line: 1880, column: 7, scope: !10046)
!10109 = !DILocation(line: 1880, column: 16, scope: !10046)
!10110 = !DILocation(line: 1881, column: 3, scope: !10046)
!10111 = !DILocation(line: 1881, column: 8, scope: !10046)
!10112 = !DILocation(line: 1883, column: 9, scope: !10046)
!10113 = !DILocation(line: 1883, column: 2, scope: !10046)
!10114 = !DILocation(line: 1884, column: 1, scope: !10046)
!10115 = distinct !DISubprogram(name: "kcalloc", scope: !125, file: !125, line: 601, type: !10116, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!10116 = !DISubroutineType(types: !10117)
!10117 = !{!161, !324, !324, !159}
!10118 = !DILocalVariable(name: "n", arg: 1, scope: !10115, file: !125, line: 601, type: !324)
!10119 = !DILocation(line: 601, column: 36, scope: !10115)
!10120 = !DILocalVariable(name: "size", arg: 2, scope: !10115, file: !125, line: 601, type: !324)
!10121 = !DILocation(line: 601, column: 46, scope: !10115)
!10122 = !DILocalVariable(name: "flags", arg: 3, scope: !10115, file: !125, line: 601, type: !159)
!10123 = !DILocation(line: 601, column: 58, scope: !10115)
!10124 = !DILocation(line: 603, column: 23, scope: !10115)
!10125 = !DILocation(line: 603, column: 26, scope: !10115)
!10126 = !DILocation(line: 603, column: 32, scope: !10115)
!10127 = !DILocation(line: 603, column: 38, scope: !10115)
!10128 = !DILocation(line: 603, column: 9, scope: !10115)
!10129 = !DILocation(line: 603, column: 2, scope: !10115)
!10130 = distinct !DISubprogram(name: "do_insnlist_ioctl", scope: !3, file: !3, line: 1522, type: !10131, scopeLine: 1526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!10131 = !DISubroutineType(types: !10132)
!10132 = !{!166, !162, !3970, !7, !161}
!10133 = !DILocation(line: 15, column: 9, scope: !5995, inlinedAt: !10134)
!10134 = distinct !DILocation(line: 1897, column: 9, scope: !10135, inlinedAt: !10136)
!10135 = distinct !DISubprogram(name: "need_resched", scope: !903, file: !903, line: 1895, type: !3253, scopeLine: 1896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!10136 = distinct !DILocation(line: 1575, column: 7, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10138, file: !3, line: 1575, column: 7)
!10138 = distinct !DILexicalBlock(scope: !10139, file: !3, line: 1553, column: 32)
!10139 = distinct !DILexicalBlock(scope: !10140, file: !3, line: 1553, column: 2)
!10140 = distinct !DILexicalBlock(scope: !10130, file: !3, line: 1553, column: 2)
!10141 = !DILocation(line: 15, column: 9, scope: !6006, inlinedAt: !10134)
!10142 = !DILocation(line: 15, column: 9, scope: !6009, inlinedAt: !10134)
!10143 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !10144)
!10144 = distinct !DILocation(line: 199, column: 6, scope: !6018, inlinedAt: !10145)
!10145 = distinct !DILocation(line: 1567, column: 8, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10147, file: !3, line: 1567, column: 8)
!10147 = distinct !DILexicalBlock(scope: !10148, file: !3, line: 1566, column: 39)
!10148 = distinct !DILexicalBlock(scope: !10138, file: !3, line: 1566, column: 7)
!10149 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !10144)
!10150 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !10144)
!10151 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !10144)
!10152 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !10144)
!10153 = !DILocation(line: 197, column: 27, scope: !6020, inlinedAt: !10145)
!10154 = !DILocation(line: 197, column: 43, scope: !6020, inlinedAt: !10145)
!10155 = !DILocation(line: 197, column: 63, scope: !6020, inlinedAt: !10145)
!10156 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !10157)
!10157 = distinct !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !10158)
!10158 = distinct !DILocation(line: 1555, column: 8, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10160, file: !3, line: 1555, column: 8)
!10160 = distinct !DILexicalBlock(scope: !10161, file: !3, line: 1554, column: 40)
!10161 = distinct !DILexicalBlock(scope: !10138, file: !3, line: 1554, column: 7)
!10162 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !10157)
!10163 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !10157)
!10164 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !10157)
!10165 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !10157)
!10166 = !DILocation(line: 189, column: 22, scope: !6511, inlinedAt: !10158)
!10167 = !DILocation(line: 189, column: 45, scope: !6511, inlinedAt: !10158)
!10168 = !DILocation(line: 189, column: 65, scope: !6511, inlinedAt: !10158)
!10169 = !DILocalVariable(name: "dev", arg: 1, scope: !10130, file: !3, line: 1522, type: !162)
!10170 = !DILocation(line: 1522, column: 52, scope: !10130)
!10171 = !DILocalVariable(name: "insns", arg: 2, scope: !10130, file: !3, line: 1523, type: !3970)
!10172 = !DILocation(line: 1523, column: 29, scope: !10130)
!10173 = !DILocalVariable(name: "n_insns", arg: 3, scope: !10130, file: !3, line: 1524, type: !7)
!10174 = !DILocation(line: 1524, column: 22, scope: !10130)
!10175 = !DILocalVariable(name: "file", arg: 4, scope: !10130, file: !3, line: 1525, type: !161)
!10176 = !DILocation(line: 1525, column: 15, scope: !10130)
!10177 = !DILocalVariable(name: "data", scope: !10130, file: !3, line: 1527, type: !2724)
!10178 = !DILocation(line: 1527, column: 16, scope: !10130)
!10179 = !DILocalVariable(name: "max_n_data_required", scope: !10130, file: !3, line: 1528, type: !7)
!10180 = !DILocation(line: 1528, column: 15, scope: !10130)
!10181 = !DILocalVariable(name: "i", scope: !10130, file: !3, line: 1529, type: !166)
!10182 = !DILocation(line: 1529, column: 6, scope: !10130)
!10183 = !DILocalVariable(name: "ret", scope: !10130, file: !3, line: 1530, type: !166)
!10184 = !DILocation(line: 1530, column: 6, scope: !10130)
!10185 = !DILocation(line: 1532, column: 2, scope: !10130)
!10186 = !DILocation(line: 1532, column: 2, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10130, file: !3, line: 1532, column: 2)
!10188 = !DILocation(line: 1535, column: 9, scope: !10189)
!10189 = distinct !DILexicalBlock(scope: !10130, file: !3, line: 1535, column: 2)
!10190 = !DILocation(line: 1535, column: 7, scope: !10189)
!10191 = !DILocation(line: 1535, column: 14, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10189, file: !3, line: 1535, column: 2)
!10193 = !DILocation(line: 1535, column: 18, scope: !10192)
!10194 = !DILocation(line: 1535, column: 16, scope: !10192)
!10195 = !DILocation(line: 1535, column: 2, scope: !10189)
!10196 = !DILocation(line: 1536, column: 7, scope: !10197)
!10197 = distinct !DILexicalBlock(scope: !10198, file: !3, line: 1536, column: 7)
!10198 = distinct !DILexicalBlock(scope: !10192, file: !3, line: 1535, column: 32)
!10199 = !DILocation(line: 1536, column: 13, scope: !10197)
!10200 = !DILocation(line: 1536, column: 16, scope: !10197)
!10201 = !DILocation(line: 1536, column: 18, scope: !10197)
!10202 = !DILocation(line: 1536, column: 7, scope: !10198)
!10203 = !DILocation(line: 1539, column: 8, scope: !10204)
!10204 = distinct !DILexicalBlock(scope: !10197, file: !3, line: 1536, column: 33)
!10205 = !DILocation(line: 1540, column: 4, scope: !10204)
!10206 = !DILocalVariable(name: "__UNIQUE_ID___x244", scope: !10207, file: !3, line: 1542, type: !7)
!10207 = distinct !DILexicalBlock(scope: !10198, file: !3, line: 1542, column: 25)
!10208 = !DILocation(line: 1542, column: 25, scope: !10207)
!10209 = !DILocalVariable(name: "__UNIQUE_ID___y245", scope: !10207, file: !3, line: 1542, type: !7)
!10210 = !DILocation(line: 1542, column: 23, scope: !10198)
!10211 = !DILocation(line: 1543, column: 2, scope: !10198)
!10212 = !DILocation(line: 1535, column: 27, scope: !10192)
!10213 = !DILocation(line: 1535, column: 2, scope: !10192)
!10214 = distinct !{!10214, !10195, !10215}
!10215 = !DILocation(line: 1543, column: 2, scope: !10189)
!10216 = !DILocation(line: 1546, column: 23, scope: !10130)
!10217 = !DILocation(line: 1546, column: 9, scope: !10130)
!10218 = !DILocation(line: 1546, column: 7, scope: !10130)
!10219 = !DILocation(line: 1548, column: 7, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10130, file: !3, line: 1548, column: 6)
!10221 = !DILocation(line: 1548, column: 6, scope: !10130)
!10222 = !DILocation(line: 1549, column: 7, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10220, file: !3, line: 1548, column: 13)
!10224 = !DILocation(line: 1550, column: 3, scope: !10223)
!10225 = !DILocation(line: 1553, column: 9, scope: !10140)
!10226 = !DILocation(line: 1553, column: 7, scope: !10140)
!10227 = !DILocation(line: 1553, column: 14, scope: !10139)
!10228 = !DILocation(line: 1553, column: 18, scope: !10139)
!10229 = !DILocation(line: 1553, column: 16, scope: !10139)
!10230 = !DILocation(line: 1553, column: 2, scope: !10140)
!10231 = !DILocation(line: 1554, column: 7, scope: !10161)
!10232 = !DILocation(line: 1554, column: 13, scope: !10161)
!10233 = !DILocation(line: 1554, column: 16, scope: !10161)
!10234 = !DILocation(line: 1554, column: 21, scope: !10161)
!10235 = !DILocation(line: 1554, column: 7, scope: !10138)
!10236 = !DILocation(line: 1555, column: 23, scope: !10159)
!10237 = !DILocation(line: 1555, column: 29, scope: !10159)
!10238 = !DILocation(line: 1555, column: 35, scope: !10159)
!10239 = !DILocation(line: 1555, column: 38, scope: !10159)
!10240 = !DILocation(line: 1556, column: 9, scope: !10159)
!10241 = !DILocation(line: 1556, column: 15, scope: !10159)
!10242 = !DILocation(line: 1556, column: 18, scope: !10159)
!10243 = !DILocation(line: 1556, column: 20, scope: !10159)
!10244 = !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !10158)
!10245 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !10157)
!10246 = !DILocation(line: 0, scope: !6298, inlinedAt: !10157)
!10247 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !10157)
!10248 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !10157)
!10249 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !10157)
!10250 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !10157)
!10251 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !10157)
!10252 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !10157)
!10253 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !10157)
!10254 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !10157)
!10255 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !10157)
!10256 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !10157)
!10257 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !10157)
!10258 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !10157)
!10259 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !10157)
!10260 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !10157)
!10261 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !10157)
!10262 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !10157)
!10263 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !10157)
!10264 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !10157)
!10265 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !10157)
!10266 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !10157)
!10267 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !10157)
!10268 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !10157)
!10269 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !10157)
!10270 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !10157)
!10271 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !10157)
!10272 = !DILocation(line: 191, column: 6, scope: !6511, inlinedAt: !10158)
!10273 = !DILocation(line: 192, column: 23, scope: !6510, inlinedAt: !10158)
!10274 = !DILocation(line: 192, column: 27, scope: !6510, inlinedAt: !10158)
!10275 = !DILocation(line: 192, column: 33, scope: !6510, inlinedAt: !10158)
!10276 = !DILocation(line: 192, column: 7, scope: !6510, inlinedAt: !10158)
!10277 = !DILocation(line: 192, column: 5, scope: !6510, inlinedAt: !10158)
!10278 = !DILocation(line: 192, column: 3, scope: !6510, inlinedAt: !10158)
!10279 = !DILocation(line: 193, column: 9, scope: !6511, inlinedAt: !10158)
!10280 = !DILocation(line: 1555, column: 8, scope: !10159)
!10281 = !DILocation(line: 1555, column: 8, scope: !10160)
!10282 = !DILocation(line: 1559, column: 9, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10159, file: !3, line: 1556, column: 45)
!10284 = !DILocation(line: 1560, column: 5, scope: !10283)
!10285 = !DILocation(line: 1562, column: 3, scope: !10160)
!10286 = !DILocation(line: 1563, column: 20, scope: !10138)
!10287 = !DILocation(line: 1563, column: 25, scope: !10138)
!10288 = !DILocation(line: 1563, column: 33, scope: !10138)
!10289 = !DILocation(line: 1563, column: 31, scope: !10138)
!10290 = !DILocation(line: 1563, column: 36, scope: !10138)
!10291 = !DILocation(line: 1563, column: 42, scope: !10138)
!10292 = !DILocation(line: 1563, column: 9, scope: !10138)
!10293 = !DILocation(line: 1563, column: 7, scope: !10138)
!10294 = !DILocation(line: 1564, column: 7, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10138, file: !3, line: 1564, column: 7)
!10296 = !DILocation(line: 1564, column: 11, scope: !10295)
!10297 = !DILocation(line: 1564, column: 7, scope: !10138)
!10298 = !DILocation(line: 1565, column: 4, scope: !10295)
!10299 = !DILocation(line: 1566, column: 7, scope: !10148)
!10300 = !DILocation(line: 1566, column: 13, scope: !10148)
!10301 = !DILocation(line: 1566, column: 16, scope: !10148)
!10302 = !DILocation(line: 1566, column: 21, scope: !10148)
!10303 = !DILocation(line: 1566, column: 7, scope: !10138)
!10304 = !DILocation(line: 1567, column: 21, scope: !10146)
!10305 = !DILocation(line: 1567, column: 27, scope: !10146)
!10306 = !DILocation(line: 1567, column: 30, scope: !10146)
!10307 = !DILocation(line: 1567, column: 36, scope: !10146)
!10308 = !DILocation(line: 1568, column: 7, scope: !10146)
!10309 = !DILocation(line: 1568, column: 13, scope: !10146)
!10310 = !DILocation(line: 1568, column: 16, scope: !10146)
!10311 = !DILocation(line: 1568, column: 18, scope: !10146)
!10312 = !DILocation(line: 199, column: 6, scope: !6018, inlinedAt: !10145)
!10313 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !10144)
!10314 = !DILocation(line: 0, scope: !6298, inlinedAt: !10144)
!10315 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !10144)
!10316 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !10144)
!10317 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !10144)
!10318 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !10144)
!10319 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !10144)
!10320 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !10144)
!10321 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !10144)
!10322 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !10144)
!10323 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !10144)
!10324 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !10144)
!10325 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !10144)
!10326 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !10144)
!10327 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !10144)
!10328 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !10144)
!10329 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !10144)
!10330 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !10144)
!10331 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !10144)
!10332 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !10144)
!10333 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !10144)
!10334 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !10144)
!10335 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !10144)
!10336 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !10144)
!10337 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !10144)
!10338 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !10144)
!10339 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !10144)
!10340 = !DILocation(line: 199, column: 6, scope: !6020, inlinedAt: !10145)
!10341 = !DILocation(line: 200, column: 21, scope: !6018, inlinedAt: !10145)
!10342 = !DILocation(line: 200, column: 25, scope: !6018, inlinedAt: !10145)
!10343 = !DILocation(line: 200, column: 31, scope: !6018, inlinedAt: !10145)
!10344 = !DILocation(line: 200, column: 7, scope: !6018, inlinedAt: !10145)
!10345 = !DILocation(line: 200, column: 5, scope: !6018, inlinedAt: !10145)
!10346 = !DILocation(line: 200, column: 3, scope: !6018, inlinedAt: !10145)
!10347 = !DILocation(line: 201, column: 9, scope: !6020, inlinedAt: !10145)
!10348 = !DILocation(line: 1567, column: 8, scope: !10146)
!10349 = !DILocation(line: 1567, column: 8, scope: !10147)
!10350 = !DILocation(line: 1571, column: 9, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10146, file: !3, line: 1568, column: 43)
!10352 = !DILocation(line: 1572, column: 5, scope: !10351)
!10353 = !DILocation(line: 1574, column: 3, scope: !10147)
!10354 = !DILocation(line: 1897, column: 9, scope: !10135, inlinedAt: !10136)
!10355 = !DILocation(line: 1575, column: 7, scope: !10138)
!10356 = !DILocation(line: 1576, column: 4, scope: !10137)
!10357 = !DILocation(line: 1577, column: 2, scope: !10138)
!10358 = !DILocation(line: 1553, column: 27, scope: !10139)
!10359 = !DILocation(line: 1553, column: 2, scope: !10139)
!10360 = distinct !{!10360, !10230, !10361}
!10361 = !DILocation(line: 1577, column: 2, scope: !10140)
!10362 = !DILabel(scope: !10130, name: "error", file: !3, line: 1579)
!10363 = !DILocation(line: 1579, column: 1, scope: !10130)
!10364 = !DILocation(line: 1580, column: 8, scope: !10130)
!10365 = !DILocation(line: 1580, column: 2, scope: !10130)
!10366 = !DILocation(line: 1582, column: 6, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10130, file: !3, line: 1582, column: 6)
!10368 = !DILocation(line: 1582, column: 10, scope: !10367)
!10369 = !DILocation(line: 1582, column: 6, scope: !10130)
!10370 = !DILocation(line: 1583, column: 10, scope: !10367)
!10371 = !DILocation(line: 1583, column: 3, scope: !10367)
!10372 = !DILocation(line: 1584, column: 9, scope: !10130)
!10373 = !DILocation(line: 1584, column: 2, scope: !10130)
!10374 = !DILocation(line: 1585, column: 1, scope: !10130)
!10375 = distinct !DISubprogram(name: "do_insn_ioctl", scope: !3, file: !3, line: 1601, type: !10376, scopeLine: 1603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!10376 = !DISubroutineType(types: !10377)
!10377 = !{!166, !162, !3970, !161}
!10378 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !10379)
!10379 = distinct !DILocation(line: 199, column: 6, scope: !6018, inlinedAt: !10380)
!10380 = distinct !DILocation(line: 1636, column: 7, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !10382, file: !3, line: 1636, column: 7)
!10382 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 1635, column: 35)
!10383 = distinct !DILexicalBlock(scope: !10375, file: !3, line: 1635, column: 6)
!10384 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !10379)
!10385 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !10379)
!10386 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !10379)
!10387 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !10379)
!10388 = !DILocation(line: 197, column: 27, scope: !6020, inlinedAt: !10380)
!10389 = !DILocation(line: 197, column: 43, scope: !6020, inlinedAt: !10380)
!10390 = !DILocation(line: 197, column: 63, scope: !6020, inlinedAt: !10380)
!10391 = !DILocation(line: 138, column: 29, scope: !6012, inlinedAt: !10392)
!10392 = distinct !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !10393)
!10393 = distinct !DILocation(line: 1625, column: 7, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !10395, file: !3, line: 1625, column: 7)
!10395 = distinct !DILexicalBlock(scope: !10396, file: !3, line: 1624, column: 36)
!10396 = distinct !DILexicalBlock(scope: !10375, file: !3, line: 1624, column: 6)
!10397 = !DILocation(line: 138, column: 42, scope: !6012, inlinedAt: !10392)
!10398 = !DILocation(line: 138, column: 54, scope: !6012, inlinedAt: !10392)
!10399 = !DILocation(line: 140, column: 6, scope: !6012, inlinedAt: !10392)
!10400 = !DILocation(line: 150, column: 6, scope: !6034, inlinedAt: !10392)
!10401 = !DILocation(line: 189, column: 22, scope: !6511, inlinedAt: !10393)
!10402 = !DILocation(line: 189, column: 45, scope: !6511, inlinedAt: !10393)
!10403 = !DILocation(line: 189, column: 65, scope: !6511, inlinedAt: !10393)
!10404 = !DILocalVariable(name: "dev", arg: 1, scope: !10375, file: !3, line: 1601, type: !162)
!10405 = !DILocation(line: 1601, column: 48, scope: !10375)
!10406 = !DILocalVariable(name: "insn", arg: 2, scope: !10375, file: !3, line: 1602, type: !3970)
!10407 = !DILocation(line: 1602, column: 25, scope: !10375)
!10408 = !DILocalVariable(name: "file", arg: 3, scope: !10375, file: !3, line: 1602, type: !161)
!10409 = !DILocation(line: 1602, column: 37, scope: !10375)
!10410 = !DILocalVariable(name: "data", scope: !10375, file: !3, line: 1604, type: !2724)
!10411 = !DILocation(line: 1604, column: 16, scope: !10375)
!10412 = !DILocalVariable(name: "n_data", scope: !10375, file: !3, line: 1605, type: !7)
!10413 = !DILocation(line: 1605, column: 15, scope: !10375)
!10414 = !DILocalVariable(name: "ret", scope: !10375, file: !3, line: 1606, type: !166)
!10415 = !DILocation(line: 1606, column: 6, scope: !10375)
!10416 = !DILocation(line: 1608, column: 2, scope: !10375)
!10417 = !DILocation(line: 1608, column: 2, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10375, file: !3, line: 1608, column: 2)
!10419 = !DILocalVariable(name: "__UNIQUE_ID___x246", scope: !10420, file: !3, line: 1610, type: !7)
!10420 = distinct !DILexicalBlock(scope: !10375, file: !3, line: 1610, column: 11)
!10421 = !DILocation(line: 1610, column: 11, scope: !10420)
!10422 = !DILocalVariable(name: "__UNIQUE_ID___y247", scope: !10420, file: !3, line: 1610, type: !7)
!10423 = !DILocation(line: 1610, column: 9, scope: !10375)
!10424 = !DILocation(line: 1613, column: 6, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10375, file: !3, line: 1613, column: 6)
!10426 = !DILocation(line: 1613, column: 12, scope: !10425)
!10427 = !DILocation(line: 1613, column: 14, scope: !10425)
!10428 = !DILocation(line: 1613, column: 6, scope: !10375)
!10429 = !DILocation(line: 1614, column: 3, scope: !10430)
!10430 = distinct !DILexicalBlock(scope: !10425, file: !3, line: 1613, column: 29)
!10431 = !DILocation(line: 1614, column: 9, scope: !10430)
!10432 = !DILocation(line: 1614, column: 11, scope: !10430)
!10433 = !DILocation(line: 1615, column: 10, scope: !10430)
!10434 = !DILocation(line: 1616, column: 2, scope: !10430)
!10435 = !DILocation(line: 1618, column: 23, scope: !10375)
!10436 = !DILocation(line: 1618, column: 9, scope: !10375)
!10437 = !DILocation(line: 1618, column: 7, scope: !10375)
!10438 = !DILocation(line: 1619, column: 7, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10375, file: !3, line: 1619, column: 6)
!10440 = !DILocation(line: 1619, column: 6, scope: !10375)
!10441 = !DILocation(line: 1620, column: 7, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10439, file: !3, line: 1619, column: 13)
!10443 = !DILocation(line: 1621, column: 3, scope: !10442)
!10444 = !DILocation(line: 1624, column: 6, scope: !10396)
!10445 = !DILocation(line: 1624, column: 12, scope: !10396)
!10446 = !DILocation(line: 1624, column: 17, scope: !10396)
!10447 = !DILocation(line: 1624, column: 6, scope: !10375)
!10448 = !DILocation(line: 1625, column: 22, scope: !10394)
!10449 = !DILocation(line: 1626, column: 8, scope: !10394)
!10450 = !DILocation(line: 1626, column: 14, scope: !10394)
!10451 = !DILocation(line: 1627, column: 8, scope: !10394)
!10452 = !DILocation(line: 1627, column: 14, scope: !10394)
!10453 = !DILocation(line: 1627, column: 16, scope: !10394)
!10454 = !DILocation(line: 191, column: 6, scope: !6510, inlinedAt: !10393)
!10455 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !10392)
!10456 = !DILocation(line: 0, scope: !6298, inlinedAt: !10392)
!10457 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !10392)
!10458 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !10392)
!10459 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !10392)
!10460 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !10392)
!10461 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !10392)
!10462 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !10392)
!10463 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !10392)
!10464 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !10392)
!10465 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !10392)
!10466 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !10392)
!10467 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !10392)
!10468 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !10392)
!10469 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !10392)
!10470 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !10392)
!10471 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !10392)
!10472 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !10392)
!10473 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !10392)
!10474 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !10392)
!10475 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !10392)
!10476 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !10392)
!10477 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !10392)
!10478 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !10392)
!10479 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !10392)
!10480 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !10392)
!10481 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !10392)
!10482 = !DILocation(line: 191, column: 6, scope: !6511, inlinedAt: !10393)
!10483 = !DILocation(line: 192, column: 23, scope: !6510, inlinedAt: !10393)
!10484 = !DILocation(line: 192, column: 27, scope: !6510, inlinedAt: !10393)
!10485 = !DILocation(line: 192, column: 33, scope: !6510, inlinedAt: !10393)
!10486 = !DILocation(line: 192, column: 7, scope: !6510, inlinedAt: !10393)
!10487 = !DILocation(line: 192, column: 5, scope: !6510, inlinedAt: !10393)
!10488 = !DILocation(line: 192, column: 3, scope: !6510, inlinedAt: !10393)
!10489 = !DILocation(line: 193, column: 9, scope: !6511, inlinedAt: !10393)
!10490 = !DILocation(line: 1625, column: 7, scope: !10394)
!10491 = !DILocation(line: 1625, column: 7, scope: !10395)
!10492 = !DILocation(line: 1628, column: 8, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10394, file: !3, line: 1627, column: 41)
!10494 = !DILocation(line: 1629, column: 4, scope: !10493)
!10495 = !DILocation(line: 1631, column: 2, scope: !10395)
!10496 = !DILocation(line: 1632, column: 19, scope: !10375)
!10497 = !DILocation(line: 1632, column: 24, scope: !10375)
!10498 = !DILocation(line: 1632, column: 30, scope: !10375)
!10499 = !DILocation(line: 1632, column: 36, scope: !10375)
!10500 = !DILocation(line: 1632, column: 8, scope: !10375)
!10501 = !DILocation(line: 1632, column: 6, scope: !10375)
!10502 = !DILocation(line: 1633, column: 6, scope: !10503)
!10503 = distinct !DILexicalBlock(scope: !10375, file: !3, line: 1633, column: 6)
!10504 = !DILocation(line: 1633, column: 10, scope: !10503)
!10505 = !DILocation(line: 1633, column: 6, scope: !10375)
!10506 = !DILocation(line: 1634, column: 3, scope: !10503)
!10507 = !DILocation(line: 1635, column: 6, scope: !10383)
!10508 = !DILocation(line: 1635, column: 12, scope: !10383)
!10509 = !DILocation(line: 1635, column: 17, scope: !10383)
!10510 = !DILocation(line: 1635, column: 6, scope: !10375)
!10511 = !DILocation(line: 1636, column: 20, scope: !10381)
!10512 = !DILocation(line: 1636, column: 26, scope: !10381)
!10513 = !DILocation(line: 1637, column: 6, scope: !10381)
!10514 = !DILocation(line: 1638, column: 6, scope: !10381)
!10515 = !DILocation(line: 1638, column: 12, scope: !10381)
!10516 = !DILocation(line: 1638, column: 14, scope: !10381)
!10517 = !DILocation(line: 199, column: 6, scope: !6018, inlinedAt: !10380)
!10518 = !DILocation(line: 141, column: 6, scope: !6298, inlinedAt: !10379)
!10519 = !DILocation(line: 0, scope: !6298, inlinedAt: !10379)
!10520 = !DILocation(line: 141, column: 6, scope: !6012, inlinedAt: !10379)
!10521 = !DILocation(line: 142, column: 29, scope: !6302, inlinedAt: !10379)
!10522 = !DILocation(line: 142, column: 8, scope: !6302, inlinedAt: !10379)
!10523 = !DILocation(line: 142, column: 7, scope: !6303, inlinedAt: !10379)
!10524 = !DILocation(line: 143, column: 18, scope: !6302, inlinedAt: !10379)
!10525 = !DILocation(line: 143, column: 22, scope: !6302, inlinedAt: !10379)
!10526 = !DILocation(line: 143, column: 4, scope: !6302, inlinedAt: !10379)
!10527 = !DILocation(line: 144, column: 12, scope: !6310, inlinedAt: !10379)
!10528 = !DILocation(line: 144, column: 12, scope: !6302, inlinedAt: !10379)
!10529 = !DILocation(line: 145, column: 4, scope: !6310, inlinedAt: !10379)
!10530 = !DILocation(line: 147, column: 4, scope: !6310, inlinedAt: !10379)
!10531 = !DILocation(line: 148, column: 3, scope: !6303, inlinedAt: !10379)
!10532 = !DILocation(line: 150, column: 6, scope: !6316, inlinedAt: !10379)
!10533 = !DILocation(line: 150, column: 6, scope: !6318, inlinedAt: !10379)
!10534 = !DILocation(line: 150, column: 6, scope: !6322, inlinedAt: !10379)
!10535 = !DILocation(line: 150, column: 6, scope: !6319, inlinedAt: !10379)
!10536 = !DILocation(line: 150, column: 6, scope: !6035, inlinedAt: !10379)
!10537 = !DILocation(line: 150, column: 6, scope: !6012, inlinedAt: !10379)
!10538 = !DILocation(line: 151, column: 3, scope: !6035, inlinedAt: !10379)
!10539 = !DILocation(line: 152, column: 20, scope: !6012, inlinedAt: !10379)
!10540 = !DILocation(line: 152, column: 26, scope: !6012, inlinedAt: !10379)
!10541 = !DILocation(line: 152, column: 33, scope: !6012, inlinedAt: !10379)
!10542 = !DILocation(line: 152, column: 2, scope: !6012, inlinedAt: !10379)
!10543 = !DILocation(line: 153, column: 2, scope: !6012, inlinedAt: !10379)
!10544 = !DILocation(line: 154, column: 1, scope: !6012, inlinedAt: !10379)
!10545 = !DILocation(line: 199, column: 6, scope: !6020, inlinedAt: !10380)
!10546 = !DILocation(line: 200, column: 21, scope: !6018, inlinedAt: !10380)
!10547 = !DILocation(line: 200, column: 25, scope: !6018, inlinedAt: !10380)
!10548 = !DILocation(line: 200, column: 31, scope: !6018, inlinedAt: !10380)
!10549 = !DILocation(line: 200, column: 7, scope: !6018, inlinedAt: !10380)
!10550 = !DILocation(line: 200, column: 5, scope: !6018, inlinedAt: !10380)
!10551 = !DILocation(line: 200, column: 3, scope: !6018, inlinedAt: !10380)
!10552 = !DILocation(line: 201, column: 9, scope: !6020, inlinedAt: !10380)
!10553 = !DILocation(line: 1636, column: 7, scope: !10381)
!10554 = !DILocation(line: 1636, column: 7, scope: !10382)
!10555 = !DILocation(line: 1639, column: 8, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10381, file: !3, line: 1638, column: 39)
!10557 = !DILocation(line: 1640, column: 4, scope: !10556)
!10558 = !DILocation(line: 1642, column: 2, scope: !10382)
!10559 = !DILocation(line: 1643, column: 8, scope: !10375)
!10560 = !DILocation(line: 1643, column: 14, scope: !10375)
!10561 = !DILocation(line: 1643, column: 6, scope: !10375)
!10562 = !DILocation(line: 1643, column: 2, scope: !10375)
!10563 = !DILabel(scope: !10375, name: "error", file: !3, line: 1645)
!10564 = !DILocation(line: 1645, column: 1, scope: !10375)
!10565 = !DILocation(line: 1646, column: 8, scope: !10375)
!10566 = !DILocation(line: 1646, column: 2, scope: !10375)
!10567 = !DILocation(line: 1648, column: 9, scope: !10375)
!10568 = !DILocation(line: 1648, column: 2, scope: !10375)
!10569 = distinct !DISubprogram(name: "do_poll_ioctl", scope: !3, file: !3, line: 2003, type: !9708, scopeLine: 2005, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!10570 = !DILocalVariable(name: "dev", arg: 1, scope: !10569, file: !3, line: 2003, type: !162)
!10571 = !DILocation(line: 2003, column: 48, scope: !10569)
!10572 = !DILocalVariable(name: "arg", arg: 2, scope: !10569, file: !3, line: 2003, type: !203)
!10573 = !DILocation(line: 2003, column: 67, scope: !10569)
!10574 = !DILocalVariable(name: "file", arg: 3, scope: !10569, file: !3, line: 2004, type: !161)
!10575 = !DILocation(line: 2004, column: 11, scope: !10569)
!10576 = !DILocalVariable(name: "s", scope: !10569, file: !3, line: 2006, type: !3871)
!10577 = !DILocation(line: 2006, column: 27, scope: !10569)
!10578 = !DILocation(line: 2008, column: 2, scope: !10569)
!10579 = !DILocation(line: 2008, column: 2, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !10569, file: !3, line: 2008, column: 2)
!10581 = !DILocation(line: 2009, column: 6, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10569, file: !3, line: 2009, column: 6)
!10583 = !DILocation(line: 2009, column: 13, scope: !10582)
!10584 = !DILocation(line: 2009, column: 18, scope: !10582)
!10585 = !DILocation(line: 2009, column: 10, scope: !10582)
!10586 = !DILocation(line: 2009, column: 6, scope: !10569)
!10587 = !DILocation(line: 2010, column: 3, scope: !10582)
!10588 = !DILocation(line: 2011, column: 7, scope: !10569)
!10589 = !DILocation(line: 2011, column: 12, scope: !10569)
!10590 = !DILocation(line: 2011, column: 23, scope: !10569)
!10591 = !DILocation(line: 2011, column: 4, scope: !10569)
!10592 = !DILocation(line: 2013, column: 7, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10569, file: !3, line: 2013, column: 6)
!10594 = !DILocation(line: 2013, column: 10, scope: !10593)
!10595 = !DILocation(line: 2013, column: 6, scope: !10569)
!10596 = !DILocation(line: 2014, column: 3, scope: !10593)
!10597 = !DILocation(line: 2016, column: 6, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10569, file: !3, line: 2016, column: 6)
!10599 = !DILocation(line: 2016, column: 9, scope: !10598)
!10600 = !DILocation(line: 2016, column: 17, scope: !10598)
!10601 = !DILocation(line: 2016, column: 14, scope: !10598)
!10602 = !DILocation(line: 2016, column: 6, scope: !10569)
!10603 = !DILocation(line: 2017, column: 3, scope: !10598)
!10604 = !DILocation(line: 2019, column: 6, scope: !10605)
!10605 = distinct !DILexicalBlock(scope: !10569, file: !3, line: 2019, column: 6)
!10606 = !DILocation(line: 2019, column: 9, scope: !10605)
!10607 = !DILocation(line: 2019, column: 6, scope: !10569)
!10608 = !DILocation(line: 2020, column: 10, scope: !10605)
!10609 = !DILocation(line: 2020, column: 13, scope: !10605)
!10610 = !DILocation(line: 2020, column: 18, scope: !10605)
!10611 = !DILocation(line: 2020, column: 23, scope: !10605)
!10612 = !DILocation(line: 2020, column: 3, scope: !10605)
!10613 = !DILocation(line: 2022, column: 2, scope: !10569)
!10614 = !DILocation(line: 2023, column: 1, scope: !10569)
!10615 = distinct !DISubprogram(name: "do_setrsubd_ioctl", scope: !3, file: !3, line: 2038, type: !10616, scopeLine: 2040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!10616 = !DISubroutineType(types: !10617)
!10617 = !{!166, !162, !203, !354}
!10618 = !DILocalVariable(name: "dev", arg: 1, scope: !10615, file: !3, line: 2038, type: !162)
!10619 = !DILocation(line: 2038, column: 52, scope: !10615)
!10620 = !DILocalVariable(name: "arg", arg: 2, scope: !10615, file: !3, line: 2038, type: !203)
!10621 = !DILocation(line: 2038, column: 71, scope: !10615)
!10622 = !DILocalVariable(name: "file", arg: 3, scope: !10615, file: !3, line: 2039, type: !354)
!10623 = !DILocation(line: 2039, column: 22, scope: !10615)
!10624 = !DILocalVariable(name: "cfp", scope: !10615, file: !3, line: 2041, type: !6113)
!10625 = !DILocation(line: 2041, column: 22, scope: !10615)
!10626 = !DILocation(line: 2041, column: 28, scope: !10615)
!10627 = !DILocation(line: 2041, column: 34, scope: !10615)
!10628 = !DILocalVariable(name: "s_old", scope: !10615, file: !3, line: 2042, type: !3871)
!10629 = !DILocation(line: 2042, column: 27, scope: !10615)
!10630 = !DILocalVariable(name: "s_new", scope: !10615, file: !3, line: 2042, type: !3871)
!10631 = !DILocation(line: 2042, column: 35, scope: !10615)
!10632 = !DILocation(line: 2044, column: 2, scope: !10615)
!10633 = !DILocation(line: 2044, column: 2, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10615, file: !3, line: 2044, column: 2)
!10635 = !DILocation(line: 2045, column: 6, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10615, file: !3, line: 2045, column: 6)
!10637 = !DILocation(line: 2045, column: 13, scope: !10636)
!10638 = !DILocation(line: 2045, column: 18, scope: !10636)
!10639 = !DILocation(line: 2045, column: 10, scope: !10636)
!10640 = !DILocation(line: 2045, column: 6, scope: !10615)
!10641 = !DILocation(line: 2046, column: 3, scope: !10636)
!10642 = !DILocation(line: 2048, column: 11, scope: !10615)
!10643 = !DILocation(line: 2048, column: 16, scope: !10615)
!10644 = !DILocation(line: 2048, column: 27, scope: !10615)
!10645 = !DILocation(line: 2048, column: 8, scope: !10615)
!10646 = !DILocation(line: 2049, column: 37, scope: !10615)
!10647 = !DILocation(line: 2049, column: 10, scope: !10615)
!10648 = !DILocation(line: 2049, column: 8, scope: !10615)
!10649 = !DILocation(line: 2050, column: 6, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10615, file: !3, line: 2050, column: 6)
!10651 = !DILocation(line: 2050, column: 15, scope: !10650)
!10652 = !DILocation(line: 2050, column: 12, scope: !10650)
!10653 = !DILocation(line: 2050, column: 6, scope: !10615)
!10654 = !DILocation(line: 2051, column: 3, scope: !10650)
!10655 = !DILocation(line: 2053, column: 8, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10615, file: !3, line: 2053, column: 6)
!10657 = !DILocation(line: 2053, column: 15, scope: !10656)
!10658 = !DILocation(line: 2053, column: 28, scope: !10656)
!10659 = !DILocation(line: 2053, column: 6, scope: !10615)
!10660 = !DILocation(line: 2054, column: 3, scope: !10656)
!10661 = !DILocation(line: 2060, column: 6, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10615, file: !3, line: 2060, column: 6)
!10663 = !DILocation(line: 2060, column: 12, scope: !10662)
!10664 = !DILocation(line: 2060, column: 15, scope: !10662)
!10665 = !DILocation(line: 2060, column: 22, scope: !10662)
!10666 = !DILocation(line: 2060, column: 30, scope: !10662)
!10667 = !DILocation(line: 2060, column: 27, scope: !10662)
!10668 = !DILocation(line: 2060, column: 35, scope: !10662)
!10669 = !DILocation(line: 2060, column: 38, scope: !10662)
!10670 = !DILocation(line: 2060, column: 45, scope: !10662)
!10671 = !DILocation(line: 2060, column: 51, scope: !10662)
!10672 = !DILocation(line: 2061, column: 8, scope: !10662)
!10673 = !DILocation(line: 2061, column: 15, scope: !10662)
!10674 = !DILocation(line: 2061, column: 22, scope: !10662)
!10675 = !DILocation(line: 2061, column: 26, scope: !10662)
!10676 = !DILocation(line: 2061, column: 32, scope: !10662)
!10677 = !DILocation(line: 2060, column: 6, scope: !10615)
!10678 = !DILocation(line: 2062, column: 3, scope: !10662)
!10679 = !DILocation(line: 2064, column: 2, scope: !10615)
!10680 = !DILocation(line: 2064, column: 2, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10615, file: !3, line: 2064, column: 2)
!10682 = !DILocation(line: 2064, column: 2, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10681, file: !3, line: 2064, column: 2)
!10684 = !DILocation(line: 2064, column: 2, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10681, file: !3, line: 2064, column: 2)
!10686 = !DILocation(line: 2065, column: 2, scope: !10615)
!10687 = !DILocation(line: 2066, column: 1, scope: !10615)
!10688 = distinct !DISubprogram(name: "do_setwsubd_ioctl", scope: !3, file: !3, line: 2081, type: !10616, scopeLine: 2083, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!10689 = !DILocalVariable(name: "dev", arg: 1, scope: !10688, file: !3, line: 2081, type: !162)
!10690 = !DILocation(line: 2081, column: 52, scope: !10688)
!10691 = !DILocalVariable(name: "arg", arg: 2, scope: !10688, file: !3, line: 2081, type: !203)
!10692 = !DILocation(line: 2081, column: 71, scope: !10688)
!10693 = !DILocalVariable(name: "file", arg: 3, scope: !10688, file: !3, line: 2082, type: !354)
!10694 = !DILocation(line: 2082, column: 22, scope: !10688)
!10695 = !DILocalVariable(name: "cfp", scope: !10688, file: !3, line: 2084, type: !6113)
!10696 = !DILocation(line: 2084, column: 22, scope: !10688)
!10697 = !DILocation(line: 2084, column: 28, scope: !10688)
!10698 = !DILocation(line: 2084, column: 34, scope: !10688)
!10699 = !DILocalVariable(name: "s_old", scope: !10688, file: !3, line: 2085, type: !3871)
!10700 = !DILocation(line: 2085, column: 27, scope: !10688)
!10701 = !DILocalVariable(name: "s_new", scope: !10688, file: !3, line: 2085, type: !3871)
!10702 = !DILocation(line: 2085, column: 35, scope: !10688)
!10703 = !DILocation(line: 2087, column: 2, scope: !10688)
!10704 = !DILocation(line: 2087, column: 2, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10688, file: !3, line: 2087, column: 2)
!10706 = !DILocation(line: 2088, column: 6, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10688, file: !3, line: 2088, column: 6)
!10708 = !DILocation(line: 2088, column: 13, scope: !10707)
!10709 = !DILocation(line: 2088, column: 18, scope: !10707)
!10710 = !DILocation(line: 2088, column: 10, scope: !10707)
!10711 = !DILocation(line: 2088, column: 6, scope: !10688)
!10712 = !DILocation(line: 2089, column: 3, scope: !10707)
!10713 = !DILocation(line: 2091, column: 11, scope: !10688)
!10714 = !DILocation(line: 2091, column: 16, scope: !10688)
!10715 = !DILocation(line: 2091, column: 27, scope: !10688)
!10716 = !DILocation(line: 2091, column: 8, scope: !10688)
!10717 = !DILocation(line: 2092, column: 38, scope: !10688)
!10718 = !DILocation(line: 2092, column: 10, scope: !10688)
!10719 = !DILocation(line: 2092, column: 8, scope: !10688)
!10720 = !DILocation(line: 2093, column: 6, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10688, file: !3, line: 2093, column: 6)
!10722 = !DILocation(line: 2093, column: 15, scope: !10721)
!10723 = !DILocation(line: 2093, column: 12, scope: !10721)
!10724 = !DILocation(line: 2093, column: 6, scope: !10688)
!10725 = !DILocation(line: 2094, column: 3, scope: !10721)
!10726 = !DILocation(line: 2096, column: 8, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10688, file: !3, line: 2096, column: 6)
!10728 = !DILocation(line: 2096, column: 15, scope: !10727)
!10729 = !DILocation(line: 2096, column: 28, scope: !10727)
!10730 = !DILocation(line: 2096, column: 6, scope: !10688)
!10731 = !DILocation(line: 2097, column: 3, scope: !10727)
!10732 = !DILocation(line: 2103, column: 6, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10688, file: !3, line: 2103, column: 6)
!10734 = !DILocation(line: 2103, column: 12, scope: !10733)
!10735 = !DILocation(line: 2103, column: 15, scope: !10733)
!10736 = !DILocation(line: 2103, column: 22, scope: !10733)
!10737 = !DILocation(line: 2103, column: 30, scope: !10733)
!10738 = !DILocation(line: 2103, column: 27, scope: !10733)
!10739 = !DILocation(line: 2103, column: 35, scope: !10733)
!10740 = !DILocation(line: 2103, column: 38, scope: !10733)
!10741 = !DILocation(line: 2103, column: 45, scope: !10733)
!10742 = !DILocation(line: 2103, column: 51, scope: !10733)
!10743 = !DILocation(line: 2104, column: 7, scope: !10733)
!10744 = !DILocation(line: 2104, column: 14, scope: !10733)
!10745 = !DILocation(line: 2104, column: 21, scope: !10733)
!10746 = !DILocation(line: 2104, column: 25, scope: !10733)
!10747 = !DILocation(line: 2104, column: 31, scope: !10733)
!10748 = !DILocation(line: 2103, column: 6, scope: !10688)
!10749 = !DILocation(line: 2105, column: 3, scope: !10733)
!10750 = !DILocation(line: 2107, column: 2, scope: !10688)
!10751 = !DILocation(line: 2107, column: 2, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10688, file: !3, line: 2107, column: 2)
!10753 = !DILocation(line: 2107, column: 2, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10752, file: !3, line: 2107, column: 2)
!10755 = !DILocation(line: 2107, column: 2, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !10752, file: !3, line: 2107, column: 2)
!10757 = !DILocation(line: 2108, column: 2, scope: !10688)
!10758 = !DILocation(line: 2109, column: 1, scope: !10688)
!10759 = distinct !DISubprogram(name: "is_device_busy", scope: !3, file: !3, line: 781, type: !4013, scopeLine: 782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!10760 = !DILocalVariable(name: "dev", arg: 1, scope: !10759, file: !3, line: 781, type: !162)
!10761 = !DILocation(line: 781, column: 49, scope: !10759)
!10762 = !DILocalVariable(name: "s", scope: !10759, file: !3, line: 783, type: !3871)
!10763 = !DILocation(line: 783, column: 27, scope: !10759)
!10764 = !DILocalVariable(name: "i", scope: !10759, file: !3, line: 784, type: !166)
!10765 = !DILocation(line: 784, column: 6, scope: !10759)
!10766 = !DILocation(line: 786, column: 2, scope: !10759)
!10767 = !DILocation(line: 786, column: 2, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10759, file: !3, line: 786, column: 2)
!10769 = !DILocation(line: 787, column: 7, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10759, file: !3, line: 787, column: 6)
!10771 = !DILocation(line: 787, column: 12, scope: !10770)
!10772 = !DILocation(line: 787, column: 6, scope: !10759)
!10773 = !DILocation(line: 788, column: 3, scope: !10770)
!10774 = !DILocation(line: 790, column: 9, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10759, file: !3, line: 790, column: 2)
!10776 = !DILocation(line: 790, column: 7, scope: !10775)
!10777 = !DILocation(line: 790, column: 14, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10775, file: !3, line: 790, column: 2)
!10779 = !DILocation(line: 790, column: 18, scope: !10778)
!10780 = !DILocation(line: 790, column: 23, scope: !10778)
!10781 = !DILocation(line: 790, column: 16, scope: !10778)
!10782 = !DILocation(line: 790, column: 2, scope: !10775)
!10783 = !DILocation(line: 791, column: 8, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10778, file: !3, line: 790, column: 42)
!10785 = !DILocation(line: 791, column: 13, scope: !10784)
!10786 = !DILocation(line: 791, column: 24, scope: !10784)
!10787 = !DILocation(line: 791, column: 5, scope: !10784)
!10788 = !DILocation(line: 792, column: 7, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10784, file: !3, line: 792, column: 7)
!10790 = !DILocation(line: 792, column: 10, scope: !10789)
!10791 = !DILocation(line: 792, column: 7, scope: !10784)
!10792 = !DILocation(line: 793, column: 4, scope: !10789)
!10793 = !DILocation(line: 794, column: 7, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10784, file: !3, line: 794, column: 7)
!10795 = !DILocation(line: 794, column: 10, scope: !10794)
!10796 = !DILocation(line: 794, column: 16, scope: !10794)
!10797 = !DILocation(line: 794, column: 41, scope: !10794)
!10798 = !DILocation(line: 794, column: 19, scope: !10794)
!10799 = !DILocation(line: 794, column: 7, scope: !10784)
!10800 = !DILocation(line: 795, column: 4, scope: !10794)
!10801 = !DILocation(line: 796, column: 2, scope: !10784)
!10802 = !DILocation(line: 790, column: 38, scope: !10778)
!10803 = !DILocation(line: 790, column: 2, scope: !10778)
!10804 = distinct !{!10804, !10782, !10805}
!10805 = !DILocation(line: 796, column: 2, scope: !10775)
!10806 = !DILocation(line: 798, column: 2, scope: !10759)
!10807 = !DILocation(line: 799, column: 1, scope: !10759)
!10808 = distinct !DISubprogram(name: "resize_async_buffer", scope: !3, file: !3, line: 337, type: !3939, scopeLine: 340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!10809 = !DILocalVariable(name: "dev", arg: 1, scope: !10808, file: !3, line: 337, type: !162)
!10810 = !DILocation(line: 337, column: 54, scope: !10808)
!10811 = !DILocalVariable(name: "s", arg: 2, scope: !10808, file: !3, line: 338, type: !3871)
!10812 = !DILocation(line: 338, column: 36, scope: !10808)
!10813 = !DILocalVariable(name: "new_size", arg: 3, scope: !10808, file: !3, line: 339, type: !7)
!10814 = !DILocation(line: 339, column: 24, scope: !10808)
!10815 = !DILocalVariable(name: "async", scope: !10808, file: !3, line: 341, type: !3882)
!10816 = !DILocation(line: 341, column: 23, scope: !10808)
!10817 = !DILocation(line: 341, column: 31, scope: !10808)
!10818 = !DILocation(line: 341, column: 34, scope: !10808)
!10819 = !DILocalVariable(name: "retval", scope: !10808, file: !3, line: 342, type: !166)
!10820 = !DILocation(line: 342, column: 6, scope: !10808)
!10821 = !DILocation(line: 344, column: 2, scope: !10808)
!10822 = !DILocation(line: 344, column: 2, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10808, file: !3, line: 344, column: 2)
!10824 = !DILocation(line: 346, column: 6, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10808, file: !3, line: 346, column: 6)
!10826 = !DILocation(line: 346, column: 17, scope: !10825)
!10827 = !DILocation(line: 346, column: 24, scope: !10825)
!10828 = !DILocation(line: 346, column: 15, scope: !10825)
!10829 = !DILocation(line: 346, column: 6, scope: !10808)
!10830 = !DILocation(line: 347, column: 3, scope: !10825)
!10831 = !DILocation(line: 349, column: 6, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !10808, file: !3, line: 349, column: 6)
!10833 = !DILocation(line: 349, column: 9, scope: !10832)
!10834 = !DILocation(line: 349, column: 6, scope: !10808)
!10835 = !DILocation(line: 352, column: 3, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10832, file: !3, line: 349, column: 15)
!10837 = !DILocation(line: 354, column: 28, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10808, file: !3, line: 354, column: 6)
!10839 = !DILocation(line: 354, column: 6, scope: !10838)
!10840 = !DILocation(line: 354, column: 6, scope: !10808)
!10841 = !DILocation(line: 357, column: 3, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10838, file: !3, line: 354, column: 32)
!10843 = !DILocation(line: 361, column: 14, scope: !10808)
!10844 = !DILocation(line: 361, column: 23, scope: !10808)
!10845 = !DILocation(line: 361, column: 35, scope: !10808)
!10846 = !DILocation(line: 361, column: 40, scope: !10808)
!10847 = !DILocation(line: 361, column: 13, scope: !10808)
!10848 = !DILocation(line: 361, column: 11, scope: !10808)
!10849 = !DILocation(line: 363, column: 28, scope: !10808)
!10850 = !DILocation(line: 363, column: 33, scope: !10808)
!10851 = !DILocation(line: 363, column: 36, scope: !10808)
!10852 = !DILocation(line: 363, column: 11, scope: !10808)
!10853 = !DILocation(line: 363, column: 9, scope: !10808)
!10854 = !DILocation(line: 364, column: 6, scope: !10855)
!10855 = distinct !DILexicalBlock(scope: !10808, file: !3, line: 364, column: 6)
!10856 = !DILocation(line: 364, column: 13, scope: !10855)
!10857 = !DILocation(line: 364, column: 6, scope: !10808)
!10858 = !DILocation(line: 365, column: 10, scope: !10855)
!10859 = !DILocation(line: 365, column: 3, scope: !10855)
!10860 = !DILocation(line: 367, column: 6, scope: !10861)
!10861 = distinct !DILexicalBlock(scope: !10808, file: !3, line: 367, column: 6)
!10862 = !DILocation(line: 367, column: 9, scope: !10861)
!10863 = !DILocation(line: 367, column: 6, scope: !10808)
!10864 = !DILocation(line: 368, column: 12, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10861, file: !3, line: 367, column: 21)
!10866 = !DILocation(line: 368, column: 15, scope: !10865)
!10867 = !DILocation(line: 368, column: 26, scope: !10865)
!10868 = !DILocation(line: 368, column: 31, scope: !10865)
!10869 = !DILocation(line: 368, column: 10, scope: !10865)
!10870 = !DILocation(line: 369, column: 7, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10865, file: !3, line: 369, column: 7)
!10872 = !DILocation(line: 369, column: 14, scope: !10871)
!10873 = !DILocation(line: 369, column: 7, scope: !10865)
!10874 = !DILocation(line: 370, column: 11, scope: !10871)
!10875 = !DILocation(line: 370, column: 4, scope: !10871)
!10876 = !DILocation(line: 371, column: 2, scope: !10865)
!10877 = !DILocation(line: 375, column: 2, scope: !10808)
!10878 = !DILocation(line: 376, column: 1, scope: !10808)
!10879 = distinct !DISubprogram(name: "might_fault", scope: !10880, file: !10880, line: 315, type: !1925, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!10880 = !DIFile(filename: "./include/linux/kernel.h", directory: "/home/lizy2001/genbc/linux")
!10881 = !DILocation(line: 315, column: 40, scope: !10879)
!10882 = distinct !DISubprogram(name: "__comedi_get_user_cmd", scope: !3, file: !3, line: 1651, type: !10883, scopeLine: 1653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!10883 = !DISubroutineType(types: !10884)
!10884 = !{!166, !162, !3991}
!10885 = !DILocalVariable(name: "dev", arg: 1, scope: !10882, file: !3, line: 1651, type: !162)
!10886 = !DILocation(line: 1651, column: 56, scope: !10882)
!10887 = !DILocalVariable(name: "cmd", arg: 2, scope: !10882, file: !3, line: 1652, type: !3991)
!10888 = !DILocation(line: 1652, column: 25, scope: !10882)
!10889 = !DILocalVariable(name: "s", scope: !10882, file: !3, line: 1654, type: !3871)
!10890 = !DILocation(line: 1654, column: 27, scope: !10882)
!10891 = !DILocation(line: 1656, column: 2, scope: !10882)
!10892 = !DILocation(line: 1656, column: 2, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10882, file: !3, line: 1656, column: 2)
!10894 = !DILocation(line: 1657, column: 6, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10882, file: !3, line: 1657, column: 6)
!10896 = !DILocation(line: 1657, column: 11, scope: !10895)
!10897 = !DILocation(line: 1657, column: 21, scope: !10895)
!10898 = !DILocation(line: 1657, column: 26, scope: !10895)
!10899 = !DILocation(line: 1657, column: 18, scope: !10895)
!10900 = !DILocation(line: 1657, column: 6, scope: !10882)
!10901 = !DILocation(line: 1659, column: 3, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10895, file: !3, line: 1657, column: 40)
!10903 = !DILocation(line: 1662, column: 7, scope: !10882)
!10904 = !DILocation(line: 1662, column: 12, scope: !10882)
!10905 = !DILocation(line: 1662, column: 23, scope: !10882)
!10906 = !DILocation(line: 1662, column: 28, scope: !10882)
!10907 = !DILocation(line: 1662, column: 4, scope: !10882)
!10908 = !DILocation(line: 1664, column: 6, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10882, file: !3, line: 1664, column: 6)
!10910 = !DILocation(line: 1664, column: 9, scope: !10909)
!10911 = !DILocation(line: 1664, column: 14, scope: !10909)
!10912 = !DILocation(line: 1664, column: 6, scope: !10882)
!10913 = !DILocation(line: 1667, column: 3, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10909, file: !3, line: 1664, column: 37)
!10915 = !DILocation(line: 1670, column: 7, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10882, file: !3, line: 1670, column: 6)
!10917 = !DILocation(line: 1670, column: 10, scope: !10916)
!10918 = !DILocation(line: 1670, column: 17, scope: !10916)
!10919 = !DILocation(line: 1670, column: 21, scope: !10916)
!10920 = !DILocation(line: 1670, column: 24, scope: !10916)
!10921 = !DILocation(line: 1670, column: 35, scope: !10916)
!10922 = !DILocation(line: 1670, column: 39, scope: !10916)
!10923 = !DILocation(line: 1670, column: 42, scope: !10916)
!10924 = !DILocation(line: 1670, column: 6, scope: !10882)
!10925 = !DILocation(line: 1674, column: 3, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10916, file: !3, line: 1670, column: 49)
!10927 = !DILocation(line: 1678, column: 6, scope: !10928)
!10928 = distinct !DILexicalBlock(scope: !10882, file: !3, line: 1678, column: 6)
!10929 = !DILocation(line: 1678, column: 11, scope: !10928)
!10930 = !DILocation(line: 1678, column: 26, scope: !10928)
!10931 = !DILocation(line: 1678, column: 29, scope: !10928)
!10932 = !DILocation(line: 1678, column: 24, scope: !10928)
!10933 = !DILocation(line: 1678, column: 6, scope: !10882)
!10934 = !DILocation(line: 1681, column: 3, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10928, file: !3, line: 1678, column: 43)
!10936 = !DILocation(line: 1688, column: 10, scope: !10882)
!10937 = !DILocation(line: 1688, column: 13, scope: !10882)
!10938 = !DILocation(line: 1688, column: 26, scope: !10882)
!10939 = !DILocation(line: 1688, column: 2, scope: !10882)
!10940 = !DILocation(line: 1690, column: 3, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10882, file: !3, line: 1688, column: 60)
!10942 = !DILocation(line: 1690, column: 8, scope: !10941)
!10943 = !DILocation(line: 1690, column: 14, scope: !10941)
!10944 = !DILocation(line: 1691, column: 3, scope: !10941)
!10945 = !DILocation(line: 1693, column: 3, scope: !10941)
!10946 = !DILocation(line: 1693, column: 8, scope: !10941)
!10947 = !DILocation(line: 1693, column: 14, scope: !10941)
!10948 = !DILocation(line: 1694, column: 3, scope: !10941)
!10949 = !DILocation(line: 1696, column: 3, scope: !10941)
!10950 = !DILocation(line: 1699, column: 2, scope: !10882)
!10951 = !DILocation(line: 1700, column: 1, scope: !10882)
!10952 = distinct !DISubprogram(name: "__comedi_get_user_chanlist", scope: !3, file: !3, line: 1702, type: !10953, scopeLine: 1706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!10953 = !DISubroutineType(types: !10954)
!10954 = !{!166, !162, !3871, !2724, !3991}
!10955 = !DILocalVariable(name: "dev", arg: 1, scope: !10952, file: !3, line: 1702, type: !162)
!10956 = !DILocation(line: 1702, column: 61, scope: !10952)
!10957 = !DILocalVariable(name: "s", arg: 2, scope: !10952, file: !3, line: 1703, type: !3871)
!10958 = !DILocation(line: 1703, column: 36, scope: !10952)
!10959 = !DILocalVariable(name: "user_chanlist", arg: 3, scope: !10952, file: !3, line: 1704, type: !2724)
!10960 = !DILocation(line: 1704, column: 32, scope: !10952)
!10961 = !DILocalVariable(name: "cmd", arg: 4, scope: !10952, file: !3, line: 1705, type: !3991)
!10962 = !DILocation(line: 1705, column: 30, scope: !10952)
!10963 = !DILocalVariable(name: "chanlist", scope: !10952, file: !3, line: 1707, type: !2724)
!10964 = !DILocation(line: 1707, column: 16, scope: !10952)
!10965 = !DILocalVariable(name: "ret", scope: !10952, file: !3, line: 1708, type: !166)
!10966 = !DILocation(line: 1708, column: 6, scope: !10952)
!10967 = !DILocation(line: 1710, column: 2, scope: !10952)
!10968 = !DILocation(line: 1710, column: 2, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10952, file: !3, line: 1710, column: 2)
!10970 = !DILocation(line: 1711, column: 2, scope: !10952)
!10971 = !DILocation(line: 1711, column: 7, scope: !10952)
!10972 = !DILocation(line: 1711, column: 16, scope: !10952)
!10973 = !DILocation(line: 1712, column: 25, scope: !10952)
!10974 = !DILocation(line: 1713, column: 11, scope: !10952)
!10975 = !DILocation(line: 1713, column: 16, scope: !10952)
!10976 = !DILocation(line: 1713, column: 29, scope: !10952)
!10977 = !DILocation(line: 1712, column: 13, scope: !10952)
!10978 = !DILocation(line: 1712, column: 11, scope: !10952)
!10979 = !DILocation(line: 1714, column: 13, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10952, file: !3, line: 1714, column: 6)
!10981 = !DILocation(line: 1714, column: 6, scope: !10980)
!10982 = !DILocation(line: 1714, column: 6, scope: !10952)
!10983 = !DILocation(line: 1715, column: 18, scope: !10980)
!10984 = !DILocation(line: 1715, column: 10, scope: !10980)
!10985 = !DILocation(line: 1715, column: 3, scope: !10980)
!10986 = !DILocation(line: 1718, column: 30, scope: !10952)
!10987 = !DILocation(line: 1718, column: 33, scope: !10952)
!10988 = !DILocation(line: 1718, column: 38, scope: !10952)
!10989 = !DILocation(line: 1718, column: 52, scope: !10952)
!10990 = !DILocation(line: 1718, column: 8, scope: !10952)
!10991 = !DILocation(line: 1718, column: 6, scope: !10952)
!10992 = !DILocation(line: 1719, column: 6, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10952, file: !3, line: 1719, column: 6)
!10994 = !DILocation(line: 1719, column: 10, scope: !10993)
!10995 = !DILocation(line: 1719, column: 6, scope: !10952)
!10996 = !DILocation(line: 1720, column: 9, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 1719, column: 15)
!10998 = !DILocation(line: 1720, column: 3, scope: !10997)
!10999 = !DILocation(line: 1721, column: 10, scope: !10997)
!11000 = !DILocation(line: 1721, column: 3, scope: !10997)
!11001 = !DILocation(line: 1724, column: 18, scope: !10952)
!11002 = !DILocation(line: 1724, column: 2, scope: !10952)
!11003 = !DILocation(line: 1724, column: 7, scope: !10952)
!11004 = !DILocation(line: 1724, column: 16, scope: !10952)
!11005 = !DILocation(line: 1726, column: 2, scope: !10952)
!11006 = !DILocation(line: 1727, column: 1, scope: !10952)
!11007 = distinct !DISubprogram(name: "kmalloc_array", scope: !125, file: !125, line: 584, type: !10116, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!11008 = !DILocation(line: 445, column: 72, scope: !4536, inlinedAt: !11009)
!11009 = distinct !DILocation(line: 552, column: 10, scope: !4541, inlinedAt: !11010)
!11010 = distinct !DILocation(line: 591, column: 10, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !11007, file: !125, line: 590, column: 6)
!11012 = !DILocation(line: 446, column: 9, scope: !4536, inlinedAt: !11009)
!11013 = !DILocation(line: 446, column: 23, scope: !4536, inlinedAt: !11009)
!11014 = !DILocation(line: 448, column: 8, scope: !4536, inlinedAt: !11009)
!11015 = !DILocation(line: 318, column: 67, scope: !4552, inlinedAt: !11016)
!11016 = distinct !DILocation(line: 553, column: 20, scope: !4541, inlinedAt: !11010)
!11017 = !DILocation(line: 346, column: 58, scope: !4558, inlinedAt: !11018)
!11018 = distinct !DILocation(line: 547, column: 11, scope: !4541, inlinedAt: !11010)
!11019 = !DILocation(line: 472, column: 28, scope: !4564, inlinedAt: !11020)
!11020 = distinct !DILocation(line: 481, column: 9, scope: !4569, inlinedAt: !11021)
!11021 = distinct !DILocation(line: 545, column: 11, scope: !4571, inlinedAt: !11010)
!11022 = !DILocation(line: 472, column: 40, scope: !4564, inlinedAt: !11020)
!11023 = !DILocation(line: 472, column: 60, scope: !4564, inlinedAt: !11020)
!11024 = !DILocation(line: 478, column: 51, scope: !4569, inlinedAt: !11021)
!11025 = !DILocation(line: 478, column: 63, scope: !4569, inlinedAt: !11021)
!11026 = !DILocation(line: 480, column: 15, scope: !4569, inlinedAt: !11021)
!11027 = !DILocation(line: 538, column: 45, scope: !4543, inlinedAt: !11010)
!11028 = !DILocation(line: 538, column: 57, scope: !4543, inlinedAt: !11010)
!11029 = !DILocation(line: 542, column: 16, scope: !4541, inlinedAt: !11010)
!11030 = !DILocalVariable(name: "n", arg: 1, scope: !11007, file: !125, line: 584, type: !324)
!11031 = !DILocation(line: 584, column: 42, scope: !11007)
!11032 = !DILocalVariable(name: "size", arg: 2, scope: !11007, file: !125, line: 584, type: !324)
!11033 = !DILocation(line: 584, column: 52, scope: !11007)
!11034 = !DILocalVariable(name: "flags", arg: 3, scope: !11007, file: !125, line: 584, type: !159)
!11035 = !DILocation(line: 584, column: 64, scope: !11007)
!11036 = !DILocalVariable(name: "bytes", scope: !11007, file: !125, line: 586, type: !324)
!11037 = !DILocation(line: 586, column: 9, scope: !11007)
!11038 = !DILocalVariable(name: "__a", scope: !11039, file: !125, line: 588, type: !324)
!11039 = distinct !DILexicalBlock(scope: !11040, file: !125, line: 588, column: 6)
!11040 = distinct !DILexicalBlock(scope: !11007, file: !125, line: 588, column: 6)
!11041 = !DILocation(line: 588, column: 6, scope: !11039)
!11042 = !DILocalVariable(name: "__b", scope: !11039, file: !125, line: 588, type: !324)
!11043 = !DILocalVariable(name: "__d", scope: !11039, file: !125, line: 588, type: !11044)
!11044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64)
!11045 = !DILocation(line: 588, column: 6, scope: !11040)
!11046 = !DILocation(line: 588, column: 6, scope: !11007)
!11047 = !DILocation(line: 589, column: 3, scope: !11040)
!11048 = !DILocation(line: 590, column: 27, scope: !11011)
!11049 = !DILocation(line: 590, column: 6, scope: !11011)
!11050 = !DILocation(line: 590, column: 30, scope: !11011)
!11051 = !DILocation(line: 590, column: 54, scope: !11011)
!11052 = !DILocation(line: 590, column: 33, scope: !11011)
!11053 = !DILocation(line: 590, column: 6, scope: !11007)
!11054 = !DILocation(line: 591, column: 18, scope: !11011)
!11055 = !DILocation(line: 591, column: 25, scope: !11011)
!11056 = !DILocation(line: 540, column: 27, scope: !4542, inlinedAt: !11010)
!11057 = !DILocation(line: 540, column: 6, scope: !4542, inlinedAt: !11010)
!11058 = !DILocation(line: 540, column: 6, scope: !4543, inlinedAt: !11010)
!11059 = !DILocation(line: 544, column: 7, scope: !4571, inlinedAt: !11010)
!11060 = !DILocation(line: 544, column: 12, scope: !4571, inlinedAt: !11010)
!11061 = !DILocation(line: 544, column: 7, scope: !4541, inlinedAt: !11010)
!11062 = !DILocation(line: 545, column: 25, scope: !4571, inlinedAt: !11010)
!11063 = !DILocation(line: 545, column: 31, scope: !4571, inlinedAt: !11010)
!11064 = !DILocation(line: 480, column: 33, scope: !4569, inlinedAt: !11021)
!11065 = !DILocation(line: 480, column: 23, scope: !4569, inlinedAt: !11021)
!11066 = !DILocation(line: 481, column: 29, scope: !4569, inlinedAt: !11021)
!11067 = !DILocation(line: 481, column: 35, scope: !4569, inlinedAt: !11021)
!11068 = !DILocation(line: 481, column: 42, scope: !4569, inlinedAt: !11021)
!11069 = !DILocation(line: 474, column: 23, scope: !4564, inlinedAt: !11020)
!11070 = !DILocation(line: 474, column: 29, scope: !4564, inlinedAt: !11020)
!11071 = !DILocation(line: 474, column: 36, scope: !4564, inlinedAt: !11020)
!11072 = !DILocation(line: 474, column: 9, scope: !4564, inlinedAt: !11020)
!11073 = !DILocation(line: 545, column: 4, scope: !4571, inlinedAt: !11010)
!11074 = !DILocation(line: 547, column: 25, scope: !4541, inlinedAt: !11010)
!11075 = !DILocation(line: 348, column: 7, scope: !4615, inlinedAt: !11018)
!11076 = !DILocation(line: 348, column: 6, scope: !4558, inlinedAt: !11018)
!11077 = !DILocation(line: 349, column: 3, scope: !4615, inlinedAt: !11018)
!11078 = !DILocation(line: 351, column: 6, scope: !4619, inlinedAt: !11018)
!11079 = !DILocation(line: 351, column: 11, scope: !4619, inlinedAt: !11018)
!11080 = !DILocation(line: 351, column: 6, scope: !4558, inlinedAt: !11018)
!11081 = !DILocation(line: 352, column: 3, scope: !4619, inlinedAt: !11018)
!11082 = !DILocation(line: 354, column: 32, scope: !4624, inlinedAt: !11018)
!11083 = !DILocation(line: 354, column: 37, scope: !4624, inlinedAt: !11018)
!11084 = !DILocation(line: 354, column: 42, scope: !4624, inlinedAt: !11018)
!11085 = !DILocation(line: 354, column: 45, scope: !4624, inlinedAt: !11018)
!11086 = !DILocation(line: 354, column: 50, scope: !4624, inlinedAt: !11018)
!11087 = !DILocation(line: 354, column: 6, scope: !4558, inlinedAt: !11018)
!11088 = !DILocation(line: 355, column: 3, scope: !4624, inlinedAt: !11018)
!11089 = !DILocation(line: 356, column: 32, scope: !4632, inlinedAt: !11018)
!11090 = !DILocation(line: 356, column: 37, scope: !4632, inlinedAt: !11018)
!11091 = !DILocation(line: 356, column: 43, scope: !4632, inlinedAt: !11018)
!11092 = !DILocation(line: 356, column: 46, scope: !4632, inlinedAt: !11018)
!11093 = !DILocation(line: 356, column: 51, scope: !4632, inlinedAt: !11018)
!11094 = !DILocation(line: 356, column: 6, scope: !4558, inlinedAt: !11018)
!11095 = !DILocation(line: 357, column: 3, scope: !4632, inlinedAt: !11018)
!11096 = !DILocation(line: 358, column: 6, scope: !4640, inlinedAt: !11018)
!11097 = !DILocation(line: 358, column: 11, scope: !4640, inlinedAt: !11018)
!11098 = !DILocation(line: 358, column: 6, scope: !4558, inlinedAt: !11018)
!11099 = !DILocation(line: 358, column: 26, scope: !4640, inlinedAt: !11018)
!11100 = !DILocation(line: 359, column: 6, scope: !4645, inlinedAt: !11018)
!11101 = !DILocation(line: 359, column: 11, scope: !4645, inlinedAt: !11018)
!11102 = !DILocation(line: 359, column: 6, scope: !4558, inlinedAt: !11018)
!11103 = !DILocation(line: 359, column: 26, scope: !4645, inlinedAt: !11018)
!11104 = !DILocation(line: 360, column: 6, scope: !4650, inlinedAt: !11018)
!11105 = !DILocation(line: 360, column: 11, scope: !4650, inlinedAt: !11018)
!11106 = !DILocation(line: 360, column: 6, scope: !4558, inlinedAt: !11018)
!11107 = !DILocation(line: 360, column: 26, scope: !4650, inlinedAt: !11018)
!11108 = !DILocation(line: 361, column: 6, scope: !4655, inlinedAt: !11018)
!11109 = !DILocation(line: 361, column: 11, scope: !4655, inlinedAt: !11018)
!11110 = !DILocation(line: 361, column: 6, scope: !4558, inlinedAt: !11018)
!11111 = !DILocation(line: 361, column: 26, scope: !4655, inlinedAt: !11018)
!11112 = !DILocation(line: 362, column: 6, scope: !4660, inlinedAt: !11018)
!11113 = !DILocation(line: 362, column: 11, scope: !4660, inlinedAt: !11018)
!11114 = !DILocation(line: 362, column: 6, scope: !4558, inlinedAt: !11018)
!11115 = !DILocation(line: 362, column: 26, scope: !4660, inlinedAt: !11018)
!11116 = !DILocation(line: 363, column: 6, scope: !4665, inlinedAt: !11018)
!11117 = !DILocation(line: 363, column: 11, scope: !4665, inlinedAt: !11018)
!11118 = !DILocation(line: 363, column: 6, scope: !4558, inlinedAt: !11018)
!11119 = !DILocation(line: 363, column: 26, scope: !4665, inlinedAt: !11018)
!11120 = !DILocation(line: 364, column: 6, scope: !4670, inlinedAt: !11018)
!11121 = !DILocation(line: 364, column: 11, scope: !4670, inlinedAt: !11018)
!11122 = !DILocation(line: 364, column: 6, scope: !4558, inlinedAt: !11018)
!11123 = !DILocation(line: 364, column: 26, scope: !4670, inlinedAt: !11018)
!11124 = !DILocation(line: 365, column: 6, scope: !4675, inlinedAt: !11018)
!11125 = !DILocation(line: 365, column: 11, scope: !4675, inlinedAt: !11018)
!11126 = !DILocation(line: 365, column: 6, scope: !4558, inlinedAt: !11018)
!11127 = !DILocation(line: 365, column: 26, scope: !4675, inlinedAt: !11018)
!11128 = !DILocation(line: 366, column: 6, scope: !4680, inlinedAt: !11018)
!11129 = !DILocation(line: 366, column: 11, scope: !4680, inlinedAt: !11018)
!11130 = !DILocation(line: 366, column: 6, scope: !4558, inlinedAt: !11018)
!11131 = !DILocation(line: 366, column: 26, scope: !4680, inlinedAt: !11018)
!11132 = !DILocation(line: 367, column: 6, scope: !4685, inlinedAt: !11018)
!11133 = !DILocation(line: 367, column: 11, scope: !4685, inlinedAt: !11018)
!11134 = !DILocation(line: 367, column: 6, scope: !4558, inlinedAt: !11018)
!11135 = !DILocation(line: 367, column: 26, scope: !4685, inlinedAt: !11018)
!11136 = !DILocation(line: 368, column: 6, scope: !4690, inlinedAt: !11018)
!11137 = !DILocation(line: 368, column: 11, scope: !4690, inlinedAt: !11018)
!11138 = !DILocation(line: 368, column: 6, scope: !4558, inlinedAt: !11018)
!11139 = !DILocation(line: 368, column: 26, scope: !4690, inlinedAt: !11018)
!11140 = !DILocation(line: 369, column: 6, scope: !4695, inlinedAt: !11018)
!11141 = !DILocation(line: 369, column: 11, scope: !4695, inlinedAt: !11018)
!11142 = !DILocation(line: 369, column: 6, scope: !4558, inlinedAt: !11018)
!11143 = !DILocation(line: 369, column: 26, scope: !4695, inlinedAt: !11018)
!11144 = !DILocation(line: 370, column: 6, scope: !4700, inlinedAt: !11018)
!11145 = !DILocation(line: 370, column: 11, scope: !4700, inlinedAt: !11018)
!11146 = !DILocation(line: 370, column: 6, scope: !4558, inlinedAt: !11018)
!11147 = !DILocation(line: 370, column: 26, scope: !4700, inlinedAt: !11018)
!11148 = !DILocation(line: 371, column: 6, scope: !4705, inlinedAt: !11018)
!11149 = !DILocation(line: 371, column: 11, scope: !4705, inlinedAt: !11018)
!11150 = !DILocation(line: 371, column: 6, scope: !4558, inlinedAt: !11018)
!11151 = !DILocation(line: 371, column: 26, scope: !4705, inlinedAt: !11018)
!11152 = !DILocation(line: 372, column: 6, scope: !4710, inlinedAt: !11018)
!11153 = !DILocation(line: 372, column: 11, scope: !4710, inlinedAt: !11018)
!11154 = !DILocation(line: 372, column: 6, scope: !4558, inlinedAt: !11018)
!11155 = !DILocation(line: 372, column: 26, scope: !4710, inlinedAt: !11018)
!11156 = !DILocation(line: 373, column: 6, scope: !4715, inlinedAt: !11018)
!11157 = !DILocation(line: 373, column: 11, scope: !4715, inlinedAt: !11018)
!11158 = !DILocation(line: 373, column: 6, scope: !4558, inlinedAt: !11018)
!11159 = !DILocation(line: 373, column: 26, scope: !4715, inlinedAt: !11018)
!11160 = !DILocation(line: 374, column: 6, scope: !4720, inlinedAt: !11018)
!11161 = !DILocation(line: 374, column: 11, scope: !4720, inlinedAt: !11018)
!11162 = !DILocation(line: 374, column: 6, scope: !4558, inlinedAt: !11018)
!11163 = !DILocation(line: 374, column: 26, scope: !4720, inlinedAt: !11018)
!11164 = !DILocation(line: 375, column: 6, scope: !4725, inlinedAt: !11018)
!11165 = !DILocation(line: 375, column: 11, scope: !4725, inlinedAt: !11018)
!11166 = !DILocation(line: 375, column: 6, scope: !4558, inlinedAt: !11018)
!11167 = !DILocation(line: 375, column: 27, scope: !4725, inlinedAt: !11018)
!11168 = !DILocation(line: 376, column: 6, scope: !4730, inlinedAt: !11018)
!11169 = !DILocation(line: 376, column: 11, scope: !4730, inlinedAt: !11018)
!11170 = !DILocation(line: 376, column: 6, scope: !4558, inlinedAt: !11018)
!11171 = !DILocation(line: 376, column: 32, scope: !4730, inlinedAt: !11018)
!11172 = !DILocation(line: 377, column: 6, scope: !4735, inlinedAt: !11018)
!11173 = !DILocation(line: 377, column: 11, scope: !4735, inlinedAt: !11018)
!11174 = !DILocation(line: 377, column: 6, scope: !4558, inlinedAt: !11018)
!11175 = !DILocation(line: 377, column: 32, scope: !4735, inlinedAt: !11018)
!11176 = !DILocation(line: 378, column: 6, scope: !4740, inlinedAt: !11018)
!11177 = !DILocation(line: 378, column: 11, scope: !4740, inlinedAt: !11018)
!11178 = !DILocation(line: 378, column: 6, scope: !4558, inlinedAt: !11018)
!11179 = !DILocation(line: 378, column: 32, scope: !4740, inlinedAt: !11018)
!11180 = !DILocation(line: 379, column: 6, scope: !4745, inlinedAt: !11018)
!11181 = !DILocation(line: 379, column: 11, scope: !4745, inlinedAt: !11018)
!11182 = !DILocation(line: 379, column: 6, scope: !4558, inlinedAt: !11018)
!11183 = !DILocation(line: 379, column: 33, scope: !4745, inlinedAt: !11018)
!11184 = !DILocation(line: 380, column: 6, scope: !4750, inlinedAt: !11018)
!11185 = !DILocation(line: 380, column: 11, scope: !4750, inlinedAt: !11018)
!11186 = !DILocation(line: 380, column: 6, scope: !4558, inlinedAt: !11018)
!11187 = !DILocation(line: 380, column: 33, scope: !4750, inlinedAt: !11018)
!11188 = !DILocation(line: 381, column: 6, scope: !4755, inlinedAt: !11018)
!11189 = !DILocation(line: 381, column: 11, scope: !4755, inlinedAt: !11018)
!11190 = !DILocation(line: 381, column: 6, scope: !4558, inlinedAt: !11018)
!11191 = !DILocation(line: 381, column: 33, scope: !4755, inlinedAt: !11018)
!11192 = !DILocation(line: 382, column: 2, scope: !4760, inlinedAt: !11018)
!11193 = !DILocation(line: 382, column: 2, scope: !4764, inlinedAt: !11018)
!11194 = !DILocation(line: 382, column: 2, scope: !4765, inlinedAt: !11018)
!11195 = !DILocation(line: 386, column: 1, scope: !4558, inlinedAt: !11018)
!11196 = !DILocation(line: 547, column: 9, scope: !4541, inlinedAt: !11010)
!11197 = !DILocation(line: 549, column: 8, scope: !4771, inlinedAt: !11010)
!11198 = !DILocation(line: 549, column: 7, scope: !4541, inlinedAt: !11010)
!11199 = !DILocation(line: 550, column: 4, scope: !4771, inlinedAt: !11010)
!11200 = !DILocation(line: 553, column: 33, scope: !4541, inlinedAt: !11010)
!11201 = !DILocation(line: 325, column: 6, scope: !4776, inlinedAt: !11016)
!11202 = !DILocation(line: 325, column: 6, scope: !4552, inlinedAt: !11016)
!11203 = !DILocation(line: 326, column: 3, scope: !4776, inlinedAt: !11016)
!11204 = !DILocation(line: 332, column: 9, scope: !4552, inlinedAt: !11016)
!11205 = !DILocation(line: 332, column: 15, scope: !4552, inlinedAt: !11016)
!11206 = !DILocation(line: 332, column: 2, scope: !4552, inlinedAt: !11016)
!11207 = !DILocation(line: 336, column: 1, scope: !4552, inlinedAt: !11016)
!11208 = !DILocation(line: 553, column: 5, scope: !4541, inlinedAt: !11010)
!11209 = !DILocation(line: 553, column: 41, scope: !4541, inlinedAt: !11010)
!11210 = !DILocation(line: 554, column: 5, scope: !4541, inlinedAt: !11010)
!11211 = !DILocation(line: 554, column: 12, scope: !4541, inlinedAt: !11010)
!11212 = !DILocation(line: 448, column: 31, scope: !4536, inlinedAt: !11009)
!11213 = !DILocation(line: 448, column: 34, scope: !4536, inlinedAt: !11009)
!11214 = !DILocation(line: 448, column: 14, scope: !4536, inlinedAt: !11009)
!11215 = !DILocation(line: 450, column: 22, scope: !4536, inlinedAt: !11009)
!11216 = !DILocation(line: 450, column: 25, scope: !4536, inlinedAt: !11009)
!11217 = !DILocation(line: 450, column: 30, scope: !4536, inlinedAt: !11009)
!11218 = !DILocation(line: 450, column: 36, scope: !4536, inlinedAt: !11009)
!11219 = !DILocation(line: 450, column: 8, scope: !4536, inlinedAt: !11009)
!11220 = !DILocation(line: 450, column: 6, scope: !4536, inlinedAt: !11009)
!11221 = !DILocation(line: 451, column: 9, scope: !4536, inlinedAt: !11009)
!11222 = !DILocation(line: 552, column: 3, scope: !4541, inlinedAt: !11010)
!11223 = !DILocation(line: 557, column: 19, scope: !4543, inlinedAt: !11010)
!11224 = !DILocation(line: 557, column: 25, scope: !4543, inlinedAt: !11010)
!11225 = !DILocation(line: 557, column: 9, scope: !4543, inlinedAt: !11010)
!11226 = !DILocation(line: 557, column: 2, scope: !4543, inlinedAt: !11010)
!11227 = !DILocation(line: 558, column: 1, scope: !4543, inlinedAt: !11010)
!11228 = !DILocation(line: 591, column: 3, scope: !11011)
!11229 = !DILocation(line: 592, column: 19, scope: !11007)
!11230 = !DILocation(line: 592, column: 26, scope: !11007)
!11231 = !DILocation(line: 592, column: 9, scope: !11007)
!11232 = !DILocation(line: 592, column: 2, scope: !11007)
!11233 = !DILocation(line: 593, column: 1, scope: !11007)
!11234 = distinct !DISubprogram(name: "__must_check_overflow", scope: !11235, file: !11235, line: 52, type: !11236, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!11235 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!11236 = !DISubroutineType(types: !11237)
!11237 = !{!492, !492}
!11238 = !DILocalVariable(name: "overflow", arg: 1, scope: !11234, file: !11235, line: 52, type: !492)
!11239 = !DILocation(line: 52, column: 60, scope: !11234)
!11240 = !DILocation(line: 54, column: 9, scope: !11234)
!11241 = !DILocation(line: 54, column: 2, scope: !11234)
!11242 = distinct !DISubprogram(name: "parse_insn", scope: !3, file: !3, line: 1304, type: !11243, scopeLine: 1306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!11243 = !DISubroutineType(types: !11244)
!11244 = !{!166, !162, !3970, !2724, !161}
!11245 = !DILocalVariable(name: "dev", arg: 1, scope: !11242, file: !3, line: 1304, type: !162)
!11246 = !DILocation(line: 1304, column: 45, scope: !11242)
!11247 = !DILocalVariable(name: "insn", arg: 2, scope: !11242, file: !3, line: 1304, type: !3970)
!11248 = !DILocation(line: 1304, column: 70, scope: !11242)
!11249 = !DILocalVariable(name: "data", arg: 3, scope: !11242, file: !3, line: 1305, type: !2724)
!11250 = !DILocation(line: 1305, column: 23, scope: !11242)
!11251 = !DILocalVariable(name: "file", arg: 4, scope: !11242, file: !3, line: 1305, type: !161)
!11252 = !DILocation(line: 1305, column: 35, scope: !11242)
!11253 = !DILocalVariable(name: "s", scope: !11242, file: !3, line: 1307, type: !3871)
!11254 = !DILocation(line: 1307, column: 27, scope: !11242)
!11255 = !DILocalVariable(name: "ret", scope: !11242, file: !3, line: 1308, type: !166)
!11256 = !DILocation(line: 1308, column: 6, scope: !11242)
!11257 = !DILocalVariable(name: "i", scope: !11242, file: !3, line: 1309, type: !166)
!11258 = !DILocation(line: 1309, column: 6, scope: !11242)
!11259 = !DILocation(line: 1311, column: 2, scope: !11242)
!11260 = !DILocation(line: 1311, column: 2, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11242, file: !3, line: 1311, column: 2)
!11262 = !DILocation(line: 1312, column: 6, scope: !11263)
!11263 = distinct !DILexicalBlock(scope: !11242, file: !3, line: 1312, column: 6)
!11264 = !DILocation(line: 1312, column: 12, scope: !11263)
!11265 = !DILocation(line: 1312, column: 17, scope: !11263)
!11266 = !DILocation(line: 1312, column: 6, scope: !11242)
!11267 = !DILocation(line: 1315, column: 11, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11263, file: !3, line: 1312, column: 38)
!11269 = !DILocation(line: 1315, column: 17, scope: !11268)
!11270 = !DILocation(line: 1315, column: 3, scope: !11268)
!11271 = !DILocalVariable(name: "tv", scope: !11272, file: !3, line: 1318, type: !537)
!11272 = distinct !DILexicalBlock(scope: !11273, file: !3, line: 1317, column: 4)
!11273 = distinct !DILexicalBlock(scope: !11268, file: !3, line: 1315, column: 23)
!11274 = !DILocation(line: 1318, column: 23, scope: !11272)
!11275 = !DILocation(line: 1320, column: 9, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11272, file: !3, line: 1320, column: 9)
!11277 = !DILocation(line: 1320, column: 15, scope: !11276)
!11278 = !DILocation(line: 1320, column: 17, scope: !11276)
!11279 = !DILocation(line: 1320, column: 9, scope: !11272)
!11280 = !DILocation(line: 1321, column: 10, scope: !11281)
!11281 = distinct !DILexicalBlock(scope: !11276, file: !3, line: 1320, column: 23)
!11282 = !DILocation(line: 1322, column: 6, scope: !11281)
!11283 = !DILocation(line: 1325, column: 5, scope: !11272)
!11284 = !DILocation(line: 1327, column: 32, scope: !11272)
!11285 = !DILocation(line: 1327, column: 15, scope: !11272)
!11286 = !DILocation(line: 1327, column: 5, scope: !11272)
!11287 = !DILocation(line: 1327, column: 13, scope: !11272)
!11288 = !DILocation(line: 1328, column: 18, scope: !11272)
!11289 = !DILocation(line: 1328, column: 26, scope: !11272)
!11290 = !DILocation(line: 1328, column: 15, scope: !11272)
!11291 = !DILocation(line: 1328, column: 5, scope: !11272)
!11292 = !DILocation(line: 1328, column: 13, scope: !11272)
!11293 = !DILocation(line: 1329, column: 9, scope: !11272)
!11294 = !DILocation(line: 1331, column: 5, scope: !11272)
!11295 = !DILocation(line: 1334, column: 8, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11273, file: !3, line: 1334, column: 8)
!11297 = !DILocation(line: 1334, column: 14, scope: !11296)
!11298 = !DILocation(line: 1334, column: 16, scope: !11296)
!11299 = !DILocation(line: 1334, column: 21, scope: !11296)
!11300 = !DILocation(line: 1334, column: 24, scope: !11296)
!11301 = !DILocation(line: 1334, column: 32, scope: !11296)
!11302 = !DILocation(line: 1334, column: 8, scope: !11273)
!11303 = !DILocation(line: 1335, column: 9, scope: !11304)
!11304 = distinct !DILexicalBlock(scope: !11296, file: !3, line: 1334, column: 43)
!11305 = !DILocation(line: 1336, column: 5, scope: !11304)
!11306 = !DILocation(line: 1338, column: 4, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11308, file: !3, line: 1338, column: 4)
!11308 = distinct !DILexicalBlock(scope: !11273, file: !3, line: 1338, column: 4)
!11309 = !DILocation(line: 1338, column: 4, scope: !11308)
!11310 = !DILocation(line: 1338, column: 4, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11312, file: !3, line: 1338, column: 4)
!11312 = distinct !DILexicalBlock(scope: !11307, file: !3, line: 1338, column: 4)
!11313 = !DILocation(line: 1338, column: 4, scope: !11312)
!11314 = !DILocation(line: 1338, column: 4, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11307, file: !3, line: 1338, column: 4)
!11316 = !DILocation(line: 1339, column: 8, scope: !11273)
!11317 = !DILocation(line: 1340, column: 4, scope: !11273)
!11318 = !DILocation(line: 1342, column: 8, scope: !11319)
!11319 = distinct !DILexicalBlock(scope: !11273, file: !3, line: 1342, column: 8)
!11320 = !DILocation(line: 1342, column: 14, scope: !11319)
!11321 = !DILocation(line: 1342, column: 16, scope: !11319)
!11322 = !DILocation(line: 1342, column: 8, scope: !11273)
!11323 = !DILocation(line: 1343, column: 9, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11319, file: !3, line: 1342, column: 22)
!11325 = !DILocation(line: 1344, column: 5, scope: !11324)
!11326 = !DILocation(line: 1346, column: 8, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11273, file: !3, line: 1346, column: 8)
!11328 = !DILocation(line: 1346, column: 14, scope: !11327)
!11329 = !DILocation(line: 1346, column: 24, scope: !11327)
!11330 = !DILocation(line: 1346, column: 29, scope: !11327)
!11331 = !DILocation(line: 1346, column: 21, scope: !11327)
!11332 = !DILocation(line: 1346, column: 8, scope: !11273)
!11333 = !DILocation(line: 1350, column: 9, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11327, file: !3, line: 1346, column: 43)
!11335 = !DILocation(line: 1351, column: 5, scope: !11334)
!11336 = !DILocation(line: 1353, column: 9, scope: !11273)
!11337 = !DILocation(line: 1353, column: 14, scope: !11273)
!11338 = !DILocation(line: 1353, column: 25, scope: !11273)
!11339 = !DILocation(line: 1353, column: 31, scope: !11273)
!11340 = !DILocation(line: 1353, column: 6, scope: !11273)
!11341 = !DILocation(line: 1354, column: 9, scope: !11342)
!11342 = distinct !DILexicalBlock(scope: !11273, file: !3, line: 1354, column: 8)
!11343 = !DILocation(line: 1354, column: 12, scope: !11342)
!11344 = !DILocation(line: 1354, column: 8, scope: !11273)
!11345 = !DILocation(line: 1356, column: 9, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11342, file: !3, line: 1354, column: 19)
!11347 = !DILocation(line: 1357, column: 5, scope: !11346)
!11348 = !DILocation(line: 1359, column: 9, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11273, file: !3, line: 1359, column: 8)
!11350 = !DILocation(line: 1359, column: 12, scope: !11349)
!11351 = !DILocation(line: 1359, column: 19, scope: !11349)
!11352 = !DILocation(line: 1359, column: 8, scope: !11273)
!11353 = !DILocation(line: 1361, column: 9, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11349, file: !3, line: 1359, column: 28)
!11355 = !DILocation(line: 1362, column: 5, scope: !11354)
!11356 = !DILocation(line: 1364, column: 10, scope: !11273)
!11357 = !DILocation(line: 1364, column: 13, scope: !11273)
!11358 = !DILocation(line: 1364, column: 20, scope: !11273)
!11359 = !DILocation(line: 1364, column: 28, scope: !11273)
!11360 = !DILocation(line: 1364, column: 33, scope: !11273)
!11361 = !DILocation(line: 1364, column: 36, scope: !11273)
!11362 = !DILocation(line: 1364, column: 8, scope: !11273)
!11363 = !DILocation(line: 1365, column: 8, scope: !11364)
!11364 = distinct !DILexicalBlock(scope: !11273, file: !3, line: 1365, column: 8)
!11365 = !DILocation(line: 1365, column: 12, scope: !11364)
!11366 = !DILocation(line: 1365, column: 8, scope: !11273)
!11367 = !DILocation(line: 1366, column: 9, scope: !11364)
!11368 = !DILocation(line: 1366, column: 5, scope: !11364)
!11369 = !DILocation(line: 1367, column: 4, scope: !11273)
!11370 = !DILocation(line: 1369, column: 42, scope: !11273)
!11371 = !DILocation(line: 1369, column: 48, scope: !11273)
!11372 = !DILocation(line: 1369, column: 10, scope: !11273)
!11373 = !DILocation(line: 1369, column: 8, scope: !11273)
!11374 = !DILocation(line: 1370, column: 8, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11273, file: !3, line: 1370, column: 8)
!11376 = !DILocation(line: 1370, column: 8, scope: !11273)
!11377 = !DILocation(line: 1371, column: 5, scope: !11375)
!11378 = !DILocation(line: 1373, column: 8, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11273, file: !3, line: 1373, column: 8)
!11380 = !DILocation(line: 1373, column: 16, scope: !11379)
!11381 = !DILocation(line: 1373, column: 8, scope: !11273)
!11382 = !DILocation(line: 1378, column: 16, scope: !11383)
!11383 = distinct !DILexicalBlock(scope: !11379, file: !3, line: 1373, column: 50)
!11384 = !DILocation(line: 1378, column: 22, scope: !11383)
!11385 = !DILocation(line: 1378, column: 24, scope: !11383)
!11386 = !DILocation(line: 1378, column: 29, scope: !11383)
!11387 = !DILocation(line: 1378, column: 5, scope: !11383)
!11388 = !DILocation(line: 1378, column: 13, scope: !11383)
!11389 = !DILocation(line: 1379, column: 28, scope: !11383)
!11390 = !DILocation(line: 1379, column: 33, scope: !11383)
!11391 = !DILocation(line: 1379, column: 11, scope: !11383)
!11392 = !DILocation(line: 1379, column: 9, scope: !11383)
!11393 = !DILocation(line: 1380, column: 5, scope: !11383)
!11394 = !DILocation(line: 1384, column: 10, scope: !11273)
!11395 = !DILocation(line: 1384, column: 15, scope: !11273)
!11396 = !DILocation(line: 1384, column: 34, scope: !11273)
!11397 = !DILocation(line: 1384, column: 39, scope: !11273)
!11398 = !DILocation(line: 1384, column: 45, scope: !11273)
!11399 = !DILocation(line: 1384, column: 8, scope: !11273)
!11400 = !DILocation(line: 1385, column: 4, scope: !11273)
!11401 = !DILocation(line: 1388, column: 8, scope: !11273)
!11402 = !DILocation(line: 1389, column: 4, scope: !11273)
!11403 = !DILocation(line: 1391, column: 2, scope: !11268)
!11404 = !DILocalVariable(name: "maxdata", scope: !11405, file: !3, line: 1393, type: !7)
!11405 = distinct !DILexicalBlock(scope: !11263, file: !3, line: 1391, column: 9)
!11406 = !DILocation(line: 1393, column: 16, scope: !11405)
!11407 = !DILocation(line: 1395, column: 7, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11405, file: !3, line: 1395, column: 7)
!11409 = !DILocation(line: 1395, column: 13, scope: !11408)
!11410 = !DILocation(line: 1395, column: 23, scope: !11408)
!11411 = !DILocation(line: 1395, column: 28, scope: !11408)
!11412 = !DILocation(line: 1395, column: 20, scope: !11408)
!11413 = !DILocation(line: 1395, column: 7, scope: !11405)
!11414 = !DILocation(line: 1398, column: 8, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11408, file: !3, line: 1395, column: 42)
!11416 = !DILocation(line: 1399, column: 4, scope: !11415)
!11417 = !DILocation(line: 1401, column: 8, scope: !11405)
!11418 = !DILocation(line: 1401, column: 13, scope: !11405)
!11419 = !DILocation(line: 1401, column: 24, scope: !11405)
!11420 = !DILocation(line: 1401, column: 30, scope: !11405)
!11421 = !DILocation(line: 1401, column: 5, scope: !11405)
!11422 = !DILocation(line: 1403, column: 7, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11405, file: !3, line: 1403, column: 7)
!11424 = !DILocation(line: 1403, column: 10, scope: !11423)
!11425 = !DILocation(line: 1403, column: 15, scope: !11423)
!11426 = !DILocation(line: 1403, column: 7, scope: !11405)
!11427 = !DILocation(line: 1406, column: 8, scope: !11428)
!11428 = distinct !DILexicalBlock(scope: !11423, file: !3, line: 1403, column: 38)
!11429 = !DILocation(line: 1407, column: 4, scope: !11428)
!11430 = !DILocation(line: 1411, column: 7, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11405, file: !3, line: 1411, column: 7)
!11432 = !DILocation(line: 1411, column: 10, scope: !11431)
!11433 = !DILocation(line: 1411, column: 15, scope: !11431)
!11434 = !DILocation(line: 1411, column: 18, scope: !11431)
!11435 = !DILocation(line: 1411, column: 21, scope: !11431)
!11436 = !DILocation(line: 1411, column: 29, scope: !11431)
!11437 = !DILocation(line: 1411, column: 26, scope: !11431)
!11438 = !DILocation(line: 1411, column: 7, scope: !11405)
!11439 = !DILocation(line: 1413, column: 8, scope: !11440)
!11440 = distinct !DILexicalBlock(scope: !11431, file: !3, line: 1411, column: 35)
!11441 = !DILocation(line: 1414, column: 4, scope: !11440)
!11442 = !DILocation(line: 1417, column: 31, scope: !11405)
!11443 = !DILocation(line: 1417, column: 38, scope: !11405)
!11444 = !DILocation(line: 1417, column: 44, scope: !11405)
!11445 = !DILocation(line: 1417, column: 9, scope: !11405)
!11446 = !DILocation(line: 1417, column: 7, scope: !11405)
!11447 = !DILocation(line: 1418, column: 7, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11405, file: !3, line: 1418, column: 7)
!11449 = !DILocation(line: 1418, column: 11, scope: !11448)
!11450 = !DILocation(line: 1418, column: 7, scope: !11405)
!11451 = !DILocation(line: 1419, column: 8, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11448, file: !3, line: 1418, column: 16)
!11453 = !DILocation(line: 1421, column: 4, scope: !11452)
!11454 = !DILocation(line: 1424, column: 7, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11405, file: !3, line: 1424, column: 7)
!11456 = !DILocation(line: 1424, column: 10, scope: !11455)
!11457 = !DILocation(line: 1424, column: 7, scope: !11405)
!11458 = !DILocation(line: 1425, column: 8, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11455, file: !3, line: 1424, column: 16)
!11460 = !DILocation(line: 1426, column: 4, scope: !11459)
!11461 = !DILocation(line: 1429, column: 3, scope: !11405)
!11462 = !DILocation(line: 1429, column: 6, scope: !11405)
!11463 = !DILocation(line: 1429, column: 11, scope: !11405)
!11464 = !DILocation(line: 1430, column: 11, scope: !11405)
!11465 = !DILocation(line: 1430, column: 17, scope: !11405)
!11466 = !DILocation(line: 1430, column: 3, scope: !11405)
!11467 = !DILocation(line: 1432, column: 10, scope: !11468)
!11468 = distinct !DILexicalBlock(scope: !11405, file: !3, line: 1430, column: 23)
!11469 = !DILocation(line: 1432, column: 13, scope: !11468)
!11470 = !DILocation(line: 1432, column: 23, scope: !11468)
!11471 = !DILocation(line: 1432, column: 28, scope: !11468)
!11472 = !DILocation(line: 1432, column: 31, scope: !11468)
!11473 = !DILocation(line: 1432, column: 37, scope: !11468)
!11474 = !DILocation(line: 1432, column: 8, scope: !11468)
!11475 = !DILocation(line: 1433, column: 8, scope: !11476)
!11476 = distinct !DILexicalBlock(scope: !11468, file: !3, line: 1433, column: 8)
!11477 = !DILocation(line: 1433, column: 12, scope: !11476)
!11478 = !DILocation(line: 1433, column: 8, scope: !11468)
!11479 = !DILocation(line: 1437, column: 4, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !11476, file: !3, line: 1433, column: 27)
!11481 = !DILocation(line: 1438, column: 4, scope: !11468)
!11482 = !DILocation(line: 1440, column: 14, scope: !11468)
!11483 = !DILocation(line: 1440, column: 17, scope: !11468)
!11484 = !DILocation(line: 1441, column: 10, scope: !11468)
!11485 = !DILocation(line: 1441, column: 13, scope: !11468)
!11486 = !DILocation(line: 1441, column: 26, scope: !11468)
!11487 = !DILocation(line: 1442, column: 10, scope: !11468)
!11488 = !DILocation(line: 1442, column: 13, scope: !11468)
!11489 = !DILocation(line: 1440, column: 12, scope: !11468)
!11490 = !DILocation(line: 1443, column: 11, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11468, file: !3, line: 1443, column: 4)
!11492 = !DILocation(line: 1443, column: 9, scope: !11491)
!11493 = !DILocation(line: 1443, column: 16, scope: !11494)
!11494 = distinct !DILexicalBlock(scope: !11491, file: !3, line: 1443, column: 4)
!11495 = !DILocation(line: 1443, column: 20, scope: !11494)
!11496 = !DILocation(line: 1443, column: 26, scope: !11494)
!11497 = !DILocation(line: 1443, column: 18, scope: !11494)
!11498 = !DILocation(line: 1443, column: 4, scope: !11491)
!11499 = !DILocation(line: 1444, column: 9, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11501, file: !3, line: 1444, column: 9)
!11501 = distinct !DILexicalBlock(scope: !11494, file: !3, line: 1443, column: 34)
!11502 = !DILocation(line: 1444, column: 14, scope: !11500)
!11503 = !DILocation(line: 1444, column: 19, scope: !11500)
!11504 = !DILocation(line: 1444, column: 17, scope: !11500)
!11505 = !DILocation(line: 1444, column: 9, scope: !11501)
!11506 = !DILocation(line: 1445, column: 10, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !11500, file: !3, line: 1444, column: 28)
!11508 = !DILocation(line: 1448, column: 6, scope: !11507)
!11509 = !DILocation(line: 1450, column: 4, scope: !11501)
!11510 = !DILocation(line: 1443, column: 29, scope: !11494)
!11511 = !DILocation(line: 1443, column: 4, scope: !11494)
!11512 = distinct !{!11512, !11498, !11513}
!11513 = !DILocation(line: 1450, column: 4, scope: !11491)
!11514 = !DILocation(line: 1451, column: 8, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11468, file: !3, line: 1451, column: 8)
!11516 = !DILocation(line: 1451, column: 12, scope: !11515)
!11517 = !DILocation(line: 1451, column: 8, scope: !11468)
!11518 = !DILocation(line: 1452, column: 11, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !11515, file: !3, line: 1451, column: 18)
!11520 = !DILocation(line: 1452, column: 14, scope: !11519)
!11521 = !DILocation(line: 1452, column: 25, scope: !11519)
!11522 = !DILocation(line: 1452, column: 30, scope: !11519)
!11523 = !DILocation(line: 1452, column: 33, scope: !11519)
!11524 = !DILocation(line: 1452, column: 39, scope: !11519)
!11525 = !DILocation(line: 1452, column: 9, scope: !11519)
!11526 = !DILocation(line: 1453, column: 9, scope: !11527)
!11527 = distinct !DILexicalBlock(scope: !11519, file: !3, line: 1453, column: 9)
!11528 = !DILocation(line: 1453, column: 13, scope: !11527)
!11529 = !DILocation(line: 1453, column: 9, scope: !11519)
!11530 = !DILocation(line: 1457, column: 5, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11527, file: !3, line: 1453, column: 28)
!11532 = !DILocation(line: 1458, column: 4, scope: !11519)
!11533 = !DILocation(line: 1459, column: 4, scope: !11468)
!11534 = !DILocation(line: 1461, column: 8, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11468, file: !3, line: 1461, column: 8)
!11536 = !DILocation(line: 1461, column: 14, scope: !11535)
!11537 = !DILocation(line: 1461, column: 16, scope: !11535)
!11538 = !DILocation(line: 1461, column: 8, scope: !11468)
!11539 = !DILocation(line: 1462, column: 9, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11535, file: !3, line: 1461, column: 22)
!11541 = !DILocation(line: 1463, column: 4, scope: !11540)
!11542 = !DILocalVariable(name: "orig_mask", scope: !11543, file: !3, line: 1469, type: !7)
!11543 = distinct !DILexicalBlock(scope: !11535, file: !3, line: 1463, column: 11)
!11544 = !DILocation(line: 1469, column: 18, scope: !11543)
!11545 = !DILocation(line: 1469, column: 30, scope: !11543)
!11546 = !DILocalVariable(name: "shift", scope: !11543, file: !3, line: 1470, type: !7)
!11547 = !DILocation(line: 1470, column: 18, scope: !11543)
!11548 = !DILocation(line: 1472, column: 9, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11543, file: !3, line: 1472, column: 9)
!11550 = !DILocation(line: 1472, column: 12, scope: !11549)
!11551 = !DILocation(line: 1472, column: 19, scope: !11549)
!11552 = !DILocation(line: 1472, column: 9, scope: !11543)
!11553 = !DILocation(line: 1473, column: 14, scope: !11554)
!11554 = distinct !DILexicalBlock(scope: !11549, file: !3, line: 1472, column: 26)
!11555 = !DILocation(line: 1473, column: 12, scope: !11554)
!11556 = !DILocation(line: 1474, column: 10, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11554, file: !3, line: 1474, column: 10)
!11558 = !DILocation(line: 1474, column: 16, scope: !11557)
!11559 = !DILocation(line: 1474, column: 10, scope: !11554)
!11560 = !DILocation(line: 1475, column: 7, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11557, file: !3, line: 1474, column: 21)
!11562 = !DILocation(line: 1475, column: 13, scope: !11561)
!11563 = !DILocation(line: 1475, column: 22, scope: !11561)
!11564 = !DILocation(line: 1476, column: 19, scope: !11561)
!11565 = !DILocation(line: 1476, column: 7, scope: !11561)
!11566 = !DILocation(line: 1476, column: 15, scope: !11561)
!11567 = !DILocation(line: 1477, column: 19, scope: !11561)
!11568 = !DILocation(line: 1477, column: 7, scope: !11561)
!11569 = !DILocation(line: 1477, column: 15, scope: !11561)
!11570 = !DILocation(line: 1478, column: 6, scope: !11561)
!11571 = !DILocation(line: 1479, column: 5, scope: !11554)
!11572 = !DILocation(line: 1480, column: 11, scope: !11543)
!11573 = !DILocation(line: 1480, column: 14, scope: !11543)
!11574 = !DILocation(line: 1480, column: 24, scope: !11543)
!11575 = !DILocation(line: 1480, column: 29, scope: !11543)
!11576 = !DILocation(line: 1480, column: 32, scope: !11543)
!11577 = !DILocation(line: 1480, column: 38, scope: !11543)
!11578 = !DILocation(line: 1480, column: 9, scope: !11543)
!11579 = !DILocation(line: 1481, column: 15, scope: !11543)
!11580 = !DILocation(line: 1481, column: 5, scope: !11543)
!11581 = !DILocation(line: 1481, column: 13, scope: !11543)
!11582 = !DILocation(line: 1482, column: 9, scope: !11583)
!11583 = distinct !DILexicalBlock(scope: !11543, file: !3, line: 1482, column: 9)
!11584 = !DILocation(line: 1482, column: 15, scope: !11583)
!11585 = !DILocation(line: 1482, column: 9, scope: !11543)
!11586 = !DILocation(line: 1483, column: 18, scope: !11583)
!11587 = !DILocation(line: 1483, column: 6, scope: !11583)
!11588 = !DILocation(line: 1483, column: 14, scope: !11583)
!11589 = !DILocation(line: 1485, column: 4, scope: !11468)
!11590 = !DILocation(line: 1487, column: 35, scope: !11468)
!11591 = !DILocation(line: 1487, column: 41, scope: !11468)
!11592 = !DILocation(line: 1487, column: 10, scope: !11468)
!11593 = !DILocation(line: 1487, column: 8, scope: !11468)
!11594 = !DILocation(line: 1488, column: 8, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11468, file: !3, line: 1488, column: 8)
!11596 = !DILocation(line: 1488, column: 8, scope: !11468)
!11597 = !DILocation(line: 1489, column: 5, scope: !11595)
!11598 = !DILocation(line: 1490, column: 10, scope: !11468)
!11599 = !DILocation(line: 1490, column: 13, scope: !11468)
!11600 = !DILocation(line: 1490, column: 25, scope: !11468)
!11601 = !DILocation(line: 1490, column: 30, scope: !11468)
!11602 = !DILocation(line: 1490, column: 33, scope: !11468)
!11603 = !DILocation(line: 1490, column: 39, scope: !11468)
!11604 = !DILocation(line: 1490, column: 8, scope: !11468)
!11605 = !DILocation(line: 1491, column: 4, scope: !11468)
!11606 = !DILocation(line: 1493, column: 8, scope: !11468)
!11607 = !DILocation(line: 1494, column: 4, scope: !11468)
!11608 = !DILocation(line: 1497, column: 3, scope: !11405)
!11609 = !DILocation(line: 1497, column: 6, scope: !11405)
!11610 = !DILocation(line: 1497, column: 11, scope: !11405)
!11611 = !DILocation(line: 1312, column: 19, scope: !11263)
!11612 = !DILabel(scope: !11242, name: "out", file: !3, line: 1500)
!11613 = !DILocation(line: 1500, column: 1, scope: !11242)
!11614 = !DILocation(line: 1501, column: 9, scope: !11242)
!11615 = !DILocation(line: 1501, column: 2, scope: !11242)
!11616 = distinct !DISubprogram(name: "check_insn_device_config_length", scope: !3, file: !3, line: 1252, type: !11617, scopeLine: 1254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!11617 = !DISubroutineType(types: !11618)
!11618 = !{!166, !3970, !2724}
!11619 = !DILocalVariable(name: "insn", arg: 1, scope: !11616, file: !3, line: 1252, type: !3970)
!11620 = !DILocation(line: 1252, column: 64, scope: !11616)
!11621 = !DILocalVariable(name: "data", arg: 2, scope: !11616, file: !3, line: 1253, type: !2724)
!11622 = !DILocation(line: 1253, column: 23, scope: !11616)
!11623 = !DILocation(line: 1255, column: 6, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11616, file: !3, line: 1255, column: 6)
!11625 = !DILocation(line: 1255, column: 12, scope: !11624)
!11626 = !DILocation(line: 1255, column: 14, scope: !11624)
!11627 = !DILocation(line: 1255, column: 6, scope: !11616)
!11628 = !DILocation(line: 1256, column: 3, scope: !11624)
!11629 = !DILocation(line: 1258, column: 10, scope: !11616)
!11630 = !DILocation(line: 1258, column: 2, scope: !11616)
!11631 = !DILocation(line: 1262, column: 7, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11633, file: !3, line: 1262, column: 7)
!11633 = distinct !DILexicalBlock(scope: !11616, file: !3, line: 1258, column: 19)
!11634 = !DILocation(line: 1262, column: 13, scope: !11632)
!11635 = !DILocation(line: 1262, column: 15, scope: !11632)
!11636 = !DILocation(line: 1262, column: 7, scope: !11633)
!11637 = !DILocation(line: 1263, column: 4, scope: !11632)
!11638 = !DILocation(line: 1264, column: 3, scope: !11633)
!11639 = !DILocation(line: 1271, column: 7, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11633, file: !3, line: 1271, column: 7)
!11641 = !DILocation(line: 1271, column: 13, scope: !11640)
!11642 = !DILocation(line: 1271, column: 15, scope: !11640)
!11643 = !DILocation(line: 1271, column: 7, scope: !11633)
!11644 = !DILocation(line: 1272, column: 4, scope: !11640)
!11645 = !DILocation(line: 1273, column: 3, scope: !11633)
!11646 = !DILocation(line: 1275, column: 2, scope: !11616)
!11647 = !DILocation(line: 1276, column: 1, scope: !11616)
!11648 = distinct !DISubprogram(name: "get_valid_routes", scope: !3, file: !3, line: 1297, type: !11649, scopeLine: 1298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!11649 = !DISubroutineType(types: !11650)
!11650 = !{!166, !162, !2724}
!11651 = !DILocalVariable(name: "dev", arg: 1, scope: !11648, file: !3, line: 1297, type: !162)
!11652 = !DILocation(line: 1297, column: 51, scope: !11648)
!11653 = !DILocalVariable(name: "data", arg: 2, scope: !11648, file: !3, line: 1297, type: !2724)
!11654 = !DILocation(line: 1297, column: 70, scope: !11648)
!11655 = !DILocation(line: 1299, column: 2, scope: !11648)
!11656 = !DILocation(line: 1299, column: 2, scope: !11657)
!11657 = distinct !DILexicalBlock(scope: !11648, file: !3, line: 1299, column: 2)
!11658 = !DILocation(line: 1300, column: 12, scope: !11648)
!11659 = !DILocation(line: 1300, column: 17, scope: !11648)
!11660 = !DILocation(line: 1300, column: 34, scope: !11648)
!11661 = !DILocation(line: 1300, column: 39, scope: !11648)
!11662 = !DILocation(line: 1300, column: 48, scope: !11648)
!11663 = !DILocation(line: 1300, column: 53, scope: !11648)
!11664 = !DILocation(line: 1300, column: 2, scope: !11648)
!11665 = !DILocation(line: 1300, column: 10, scope: !11648)
!11666 = !DILocation(line: 1301, column: 2, scope: !11648)
!11667 = distinct !DISubprogram(name: "check_insn_config_length", scope: !3, file: !3, line: 1181, type: !11617, scopeLine: 1183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!11668 = !DILocalVariable(name: "insn", arg: 1, scope: !11667, file: !3, line: 1181, type: !3970)
!11669 = !DILocation(line: 1181, column: 57, scope: !11667)
!11670 = !DILocalVariable(name: "data", arg: 2, scope: !11667, file: !3, line: 1182, type: !2724)
!11671 = !DILocation(line: 1182, column: 23, scope: !11667)
!11672 = !DILocation(line: 1184, column: 6, scope: !11673)
!11673 = distinct !DILexicalBlock(scope: !11667, file: !3, line: 1184, column: 6)
!11674 = !DILocation(line: 1184, column: 12, scope: !11673)
!11675 = !DILocation(line: 1184, column: 14, scope: !11673)
!11676 = !DILocation(line: 1184, column: 6, scope: !11667)
!11677 = !DILocation(line: 1185, column: 3, scope: !11673)
!11678 = !DILocation(line: 1187, column: 10, scope: !11667)
!11679 = !DILocation(line: 1187, column: 2, scope: !11667)
!11680 = !DILocation(line: 1192, column: 7, scope: !11681)
!11681 = distinct !DILexicalBlock(scope: !11682, file: !3, line: 1192, column: 7)
!11682 = distinct !DILexicalBlock(scope: !11667, file: !3, line: 1187, column: 19)
!11683 = !DILocation(line: 1192, column: 13, scope: !11681)
!11684 = !DILocation(line: 1192, column: 15, scope: !11681)
!11685 = !DILocation(line: 1192, column: 7, scope: !11682)
!11686 = !DILocation(line: 1193, column: 4, scope: !11681)
!11687 = !DILocation(line: 1194, column: 3, scope: !11682)
!11688 = !DILocation(line: 1209, column: 7, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !11682, file: !3, line: 1209, column: 7)
!11690 = !DILocation(line: 1209, column: 13, scope: !11689)
!11691 = !DILocation(line: 1209, column: 15, scope: !11689)
!11692 = !DILocation(line: 1209, column: 7, scope: !11682)
!11693 = !DILocation(line: 1210, column: 4, scope: !11689)
!11694 = !DILocation(line: 1211, column: 3, scope: !11682)
!11695 = !DILocation(line: 1221, column: 7, scope: !11696)
!11696 = distinct !DILexicalBlock(scope: !11682, file: !3, line: 1221, column: 7)
!11697 = !DILocation(line: 1221, column: 13, scope: !11696)
!11698 = !DILocation(line: 1221, column: 15, scope: !11696)
!11699 = !DILocation(line: 1221, column: 7, scope: !11682)
!11700 = !DILocation(line: 1222, column: 4, scope: !11696)
!11701 = !DILocation(line: 1223, column: 3, scope: !11682)
!11702 = !DILocation(line: 1227, column: 7, scope: !11703)
!11703 = distinct !DILexicalBlock(scope: !11682, file: !3, line: 1227, column: 7)
!11704 = !DILocation(line: 1227, column: 13, scope: !11703)
!11705 = !DILocation(line: 1227, column: 15, scope: !11703)
!11706 = !DILocation(line: 1227, column: 7, scope: !11682)
!11707 = !DILocation(line: 1228, column: 4, scope: !11703)
!11708 = !DILocation(line: 1229, column: 3, scope: !11682)
!11709 = !DILocation(line: 1231, column: 7, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11682, file: !3, line: 1231, column: 7)
!11711 = !DILocation(line: 1231, column: 13, scope: !11710)
!11712 = !DILocation(line: 1231, column: 15, scope: !11710)
!11713 = !DILocation(line: 1231, column: 7, scope: !11682)
!11714 = !DILocation(line: 1232, column: 4, scope: !11710)
!11715 = !DILocation(line: 1233, column: 3, scope: !11682)
!11716 = !DILocation(line: 1235, column: 7, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11682, file: !3, line: 1235, column: 7)
!11718 = !DILocation(line: 1235, column: 13, scope: !11717)
!11719 = !DILocation(line: 1235, column: 15, scope: !11717)
!11720 = !DILocation(line: 1235, column: 7, scope: !11682)
!11721 = !DILocation(line: 1236, column: 4, scope: !11717)
!11722 = !DILocation(line: 1237, column: 3, scope: !11682)
!11723 = !DILocation(line: 1243, column: 3, scope: !11682)
!11724 = !DILocation(line: 1245, column: 3, scope: !11682)
!11725 = !DILocation(line: 1246, column: 3, scope: !11682)
!11726 = !DILocation(line: 1247, column: 3, scope: !11682)
!11727 = !DILocation(line: 1249, column: 2, scope: !11667)
!11728 = !DILocation(line: 1250, column: 1, scope: !11667)
!11729 = distinct !DISubprogram(name: "vma_pages", scope: !14, file: !14, line: 2685, type: !1118, scopeLine: 2686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!11730 = !DILocalVariable(name: "vma", arg: 1, scope: !11729, file: !14, line: 2685, type: !1023)
!11731 = !DILocation(line: 2685, column: 62, scope: !11729)
!11732 = !DILocation(line: 2687, column: 10, scope: !11729)
!11733 = !DILocation(line: 2687, column: 15, scope: !11729)
!11734 = !DILocation(line: 2687, column: 24, scope: !11729)
!11735 = !DILocation(line: 2687, column: 29, scope: !11729)
!11736 = !DILocation(line: 2687, column: 22, scope: !11729)
!11737 = !DILocation(line: 2687, column: 39, scope: !11729)
!11738 = !DILocation(line: 2687, column: 2, scope: !11729)
!11739 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !11740, file: !11740, line: 18, type: !11741, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!11740 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!11741 = !DISubroutineType(types: !11742)
!11742 = !{!203, !203}
!11743 = !DILocalVariable(name: "x", arg: 1, scope: !11739, file: !11740, line: 18, type: !203)
!11744 = !DILocation(line: 18, column: 63, scope: !11739)
!11745 = !DILocalVariable(name: "y", scope: !11739, file: !11740, line: 20, type: !203)
!11746 = !DILocation(line: 20, column: 16, scope: !11739)
!11747 = !DILocation(line: 20, column: 20, scope: !11739)
!11748 = !DILocation(line: 20, column: 22, scope: !11739)
!11749 = !DILocation(line: 23, column: 6, scope: !11739)
!11750 = !DILocation(line: 23, column: 12, scope: !11739)
!11751 = !DILocation(line: 23, column: 16, scope: !11739)
!11752 = !DILocation(line: 23, column: 14, scope: !11739)
!11753 = !DILocation(line: 23, column: 11, scope: !11739)
!11754 = !DILocation(line: 23, column: 21, scope: !11739)
!11755 = !DILocation(line: 23, column: 55, scope: !11739)
!11756 = !DILocation(line: 23, column: 53, scope: !11739)
!11757 = !DILocation(line: 23, column: 8, scope: !11739)
!11758 = !DILocation(line: 23, column: 4, scope: !11739)
!11759 = !DILocation(line: 25, column: 9, scope: !11739)
!11760 = !DILocation(line: 25, column: 2, scope: !11739)
!11761 = distinct !DISubprogram(name: "comedi_vm_open", scope: !3, file: !3, line: 2280, type: !1057, scopeLine: 2281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!11762 = !DILocalVariable(name: "area", arg: 1, scope: !11761, file: !3, line: 2280, type: !1023)
!11763 = !DILocation(line: 2280, column: 51, scope: !11761)
!11764 = !DILocalVariable(name: "bm", scope: !11761, file: !3, line: 2282, type: !3888)
!11765 = !DILocation(line: 2282, column: 25, scope: !11761)
!11766 = !DILocation(line: 2284, column: 7, scope: !11761)
!11767 = !DILocation(line: 2284, column: 13, scope: !11761)
!11768 = !DILocation(line: 2284, column: 5, scope: !11761)
!11769 = !DILocation(line: 2285, column: 21, scope: !11761)
!11770 = !DILocation(line: 2285, column: 2, scope: !11761)
!11771 = !DILocation(line: 2286, column: 1, scope: !11761)
!11772 = distinct !DISubprogram(name: "comedi_vm_close", scope: !3, file: !3, line: 2288, type: !1057, scopeLine: 2289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!11773 = !DILocalVariable(name: "area", arg: 1, scope: !11772, file: !3, line: 2288, type: !1023)
!11774 = !DILocation(line: 2288, column: 52, scope: !11772)
!11775 = !DILocalVariable(name: "bm", scope: !11772, file: !3, line: 2290, type: !3888)
!11776 = !DILocation(line: 2290, column: 25, scope: !11772)
!11777 = !DILocation(line: 2292, column: 7, scope: !11772)
!11778 = !DILocation(line: 2292, column: 13, scope: !11772)
!11779 = !DILocation(line: 2292, column: 5, scope: !11772)
!11780 = !DILocation(line: 2293, column: 21, scope: !11772)
!11781 = !DILocation(line: 2293, column: 2, scope: !11772)
!11782 = !DILocation(line: 2294, column: 1, scope: !11772)
!11783 = distinct !DISubprogram(name: "comedi_vm_access", scope: !3, file: !3, line: 2296, type: !1124, scopeLine: 2298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!11784 = !DILocalVariable(name: "vma", arg: 1, scope: !11783, file: !3, line: 2296, type: !1023)
!11785 = !DILocation(line: 2296, column: 52, scope: !11783)
!11786 = !DILocalVariable(name: "addr", arg: 2, scope: !11783, file: !3, line: 2296, type: !203)
!11787 = !DILocation(line: 2296, column: 71, scope: !11783)
!11788 = !DILocalVariable(name: "buf", arg: 3, scope: !11783, file: !3, line: 2297, type: !161)
!11789 = !DILocation(line: 2297, column: 14, scope: !11783)
!11790 = !DILocalVariable(name: "len", arg: 4, scope: !11783, file: !3, line: 2297, type: !166)
!11791 = !DILocation(line: 2297, column: 23, scope: !11783)
!11792 = !DILocalVariable(name: "write", arg: 5, scope: !11783, file: !3, line: 2297, type: !166)
!11793 = !DILocation(line: 2297, column: 32, scope: !11783)
!11794 = !DILocalVariable(name: "bm", scope: !11783, file: !3, line: 2299, type: !3888)
!11795 = !DILocation(line: 2299, column: 25, scope: !11783)
!11796 = !DILocation(line: 2299, column: 30, scope: !11783)
!11797 = !DILocation(line: 2299, column: 35, scope: !11783)
!11798 = !DILocalVariable(name: "offset", scope: !11783, file: !3, line: 2300, type: !203)
!11799 = !DILocation(line: 2300, column: 16, scope: !11783)
!11800 = !DILocation(line: 2301, column: 6, scope: !11783)
!11801 = !DILocation(line: 2301, column: 13, scope: !11783)
!11802 = !DILocation(line: 2301, column: 18, scope: !11783)
!11803 = !DILocation(line: 2301, column: 11, scope: !11783)
!11804 = !DILocation(line: 2301, column: 30, scope: !11783)
!11805 = !DILocation(line: 2301, column: 35, scope: !11783)
!11806 = !DILocation(line: 2301, column: 44, scope: !11783)
!11807 = !DILocation(line: 2301, column: 27, scope: !11783)
!11808 = !DILocation(line: 2303, column: 6, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11783, file: !3, line: 2303, column: 6)
!11810 = !DILocation(line: 2303, column: 10, scope: !11809)
!11811 = !DILocation(line: 2303, column: 6, scope: !11783)
!11812 = !DILocation(line: 2304, column: 3, scope: !11809)
!11813 = !DILocation(line: 2305, column: 6, scope: !11814)
!11814 = distinct !DILexicalBlock(scope: !11783, file: !3, line: 2305, column: 6)
!11815 = !DILocation(line: 2305, column: 12, scope: !11814)
!11816 = !DILocation(line: 2305, column: 17, scope: !11814)
!11817 = !DILocation(line: 2305, column: 26, scope: !11814)
!11818 = !DILocation(line: 2305, column: 24, scope: !11814)
!11819 = !DILocation(line: 2305, column: 10, scope: !11814)
!11820 = !DILocation(line: 2305, column: 6, scope: !11783)
!11821 = !DILocation(line: 2306, column: 9, scope: !11814)
!11822 = !DILocation(line: 2306, column: 14, scope: !11814)
!11823 = !DILocation(line: 2306, column: 23, scope: !11814)
!11824 = !DILocation(line: 2306, column: 21, scope: !11814)
!11825 = !DILocation(line: 2306, column: 7, scope: !11814)
!11826 = !DILocation(line: 2306, column: 3, scope: !11814)
!11827 = !DILocation(line: 2307, column: 31, scope: !11783)
!11828 = !DILocation(line: 2307, column: 35, scope: !11783)
!11829 = !DILocation(line: 2307, column: 43, scope: !11783)
!11830 = !DILocation(line: 2307, column: 48, scope: !11783)
!11831 = !DILocation(line: 2307, column: 53, scope: !11783)
!11832 = !DILocation(line: 2307, column: 9, scope: !11783)
!11833 = !DILocation(line: 2307, column: 2, scope: !11783)
!11834 = !DILocation(line: 2308, column: 1, scope: !11783)
!11835 = distinct !DISubprogram(name: "try_module_get", scope: !5979, file: !5979, line: 751, type: !11836, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!11836 = !DISubroutineType(types: !11837)
!11837 = !{!492, !177}
!11838 = !DILocalVariable(name: "module", arg: 1, scope: !11835, file: !5979, line: 751, type: !177)
!11839 = !DILocation(line: 751, column: 50, scope: !11835)
!11840 = !DILocation(line: 753, column: 2, scope: !11835)
!11841 = distinct !DISubprogram(name: "max_read_buffer_kb_show", scope: !3, file: !3, line: 380, type: !4253, scopeLine: 382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!11842 = !DILocalVariable(name: "csdev", arg: 1, scope: !11841, file: !3, line: 380, type: !214)
!11843 = !DILocation(line: 380, column: 55, scope: !11841)
!11844 = !DILocalVariable(name: "attr", arg: 2, scope: !11841, file: !3, line: 381, type: !4255)
!11845 = !DILocation(line: 381, column: 37, scope: !11841)
!11846 = !DILocalVariable(name: "buf", arg: 3, scope: !11841, file: !3, line: 381, type: !277)
!11847 = !DILocation(line: 381, column: 49, scope: !11841)
!11848 = !DILocalVariable(name: "minor", scope: !11841, file: !3, line: 383, type: !7)
!11849 = !DILocation(line: 383, column: 15, scope: !11841)
!11850 = !DILocation(line: 383, column: 23, scope: !11841)
!11851 = !DILocalVariable(name: "dev", scope: !11841, file: !3, line: 384, type: !162)
!11852 = !DILocation(line: 384, column: 24, scope: !11841)
!11853 = !DILocalVariable(name: "s", scope: !11841, file: !3, line: 385, type: !3871)
!11854 = !DILocation(line: 385, column: 27, scope: !11841)
!11855 = !DILocalVariable(name: "size", scope: !11841, file: !3, line: 386, type: !7)
!11856 = !DILocation(line: 386, column: 15, scope: !11841)
!11857 = !DILocation(line: 388, column: 34, scope: !11841)
!11858 = !DILocation(line: 388, column: 8, scope: !11841)
!11859 = !DILocation(line: 388, column: 6, scope: !11841)
!11860 = !DILocation(line: 389, column: 7, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11841, file: !3, line: 389, column: 6)
!11862 = !DILocation(line: 389, column: 6, scope: !11841)
!11863 = !DILocation(line: 390, column: 3, scope: !11861)
!11864 = !DILocation(line: 392, column: 14, scope: !11841)
!11865 = !DILocation(line: 392, column: 19, scope: !11841)
!11866 = !DILocation(line: 392, column: 2, scope: !11841)
!11867 = !DILocation(line: 393, column: 28, scope: !11841)
!11868 = !DILocation(line: 393, column: 33, scope: !11841)
!11869 = !DILocation(line: 393, column: 6, scope: !11841)
!11870 = !DILocation(line: 393, column: 4, scope: !11841)
!11871 = !DILocation(line: 394, column: 6, scope: !11872)
!11872 = distinct !DILexicalBlock(scope: !11841, file: !3, line: 394, column: 6)
!11873 = !DILocation(line: 394, column: 8, scope: !11872)
!11874 = !DILocation(line: 394, column: 12, scope: !11872)
!11875 = !DILocation(line: 394, column: 15, scope: !11872)
!11876 = !DILocation(line: 394, column: 28, scope: !11872)
!11877 = !DILocation(line: 394, column: 44, scope: !11872)
!11878 = !DILocation(line: 394, column: 47, scope: !11872)
!11879 = !DILocation(line: 394, column: 50, scope: !11872)
!11880 = !DILocation(line: 394, column: 6, scope: !11841)
!11881 = !DILocation(line: 395, column: 10, scope: !11872)
!11882 = !DILocation(line: 395, column: 13, scope: !11872)
!11883 = !DILocation(line: 395, column: 20, scope: !11872)
!11884 = !DILocation(line: 395, column: 32, scope: !11872)
!11885 = !DILocation(line: 395, column: 8, scope: !11872)
!11886 = !DILocation(line: 395, column: 3, scope: !11872)
!11887 = !DILocation(line: 396, column: 16, scope: !11841)
!11888 = !DILocation(line: 396, column: 21, scope: !11841)
!11889 = !DILocation(line: 396, column: 2, scope: !11841)
!11890 = !DILocation(line: 398, column: 17, scope: !11841)
!11891 = !DILocation(line: 398, column: 2, scope: !11841)
!11892 = !DILocation(line: 399, column: 18, scope: !11841)
!11893 = !DILocation(line: 399, column: 42, scope: !11841)
!11894 = !DILocation(line: 399, column: 9, scope: !11841)
!11895 = !DILocation(line: 399, column: 2, scope: !11841)
!11896 = !DILocation(line: 400, column: 1, scope: !11841)
!11897 = distinct !DISubprogram(name: "max_read_buffer_kb_store", scope: !3, file: !3, line: 402, type: !4258, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!11898 = !DILocalVariable(name: "csdev", arg: 1, scope: !11897, file: !3, line: 402, type: !214)
!11899 = !DILocation(line: 402, column: 56, scope: !11897)
!11900 = !DILocalVariable(name: "attr", arg: 2, scope: !11897, file: !3, line: 403, type: !4255)
!11901 = !DILocation(line: 403, column: 31, scope: !11897)
!11902 = !DILocalVariable(name: "buf", arg: 3, scope: !11897, file: !3, line: 404, type: !173)
!11903 = !DILocation(line: 404, column: 18, scope: !11897)
!11904 = !DILocalVariable(name: "count", arg: 4, scope: !11897, file: !3, line: 404, type: !324)
!11905 = !DILocation(line: 404, column: 30, scope: !11897)
!11906 = !DILocalVariable(name: "minor", scope: !11897, file: !3, line: 406, type: !7)
!11907 = !DILocation(line: 406, column: 15, scope: !11897)
!11908 = !DILocation(line: 406, column: 23, scope: !11897)
!11909 = !DILocalVariable(name: "dev", scope: !11897, file: !3, line: 407, type: !162)
!11910 = !DILocation(line: 407, column: 24, scope: !11897)
!11911 = !DILocalVariable(name: "s", scope: !11897, file: !3, line: 408, type: !3871)
!11912 = !DILocation(line: 408, column: 27, scope: !11897)
!11913 = !DILocalVariable(name: "size", scope: !11897, file: !3, line: 409, type: !7)
!11914 = !DILocation(line: 409, column: 15, scope: !11897)
!11915 = !DILocalVariable(name: "err", scope: !11897, file: !3, line: 410, type: !166)
!11916 = !DILocation(line: 410, column: 6, scope: !11897)
!11917 = !DILocation(line: 412, column: 19, scope: !11897)
!11918 = !DILocation(line: 412, column: 8, scope: !11897)
!11919 = !DILocation(line: 412, column: 6, scope: !11897)
!11920 = !DILocation(line: 413, column: 6, scope: !11921)
!11921 = distinct !DILexicalBlock(scope: !11897, file: !3, line: 413, column: 6)
!11922 = !DILocation(line: 413, column: 6, scope: !11897)
!11923 = !DILocation(line: 414, column: 10, scope: !11921)
!11924 = !DILocation(line: 414, column: 3, scope: !11921)
!11925 = !DILocation(line: 415, column: 6, scope: !11926)
!11926 = distinct !DILexicalBlock(scope: !11897, file: !3, line: 415, column: 6)
!11927 = !DILocation(line: 415, column: 11, scope: !11926)
!11928 = !DILocation(line: 415, column: 6, scope: !11897)
!11929 = !DILocation(line: 416, column: 3, scope: !11926)
!11930 = !DILocation(line: 417, column: 7, scope: !11897)
!11931 = !DILocation(line: 419, column: 34, scope: !11897)
!11932 = !DILocation(line: 419, column: 8, scope: !11897)
!11933 = !DILocation(line: 419, column: 6, scope: !11897)
!11934 = !DILocation(line: 420, column: 7, scope: !11935)
!11935 = distinct !DILexicalBlock(scope: !11897, file: !3, line: 420, column: 6)
!11936 = !DILocation(line: 420, column: 6, scope: !11897)
!11937 = !DILocation(line: 421, column: 3, scope: !11935)
!11938 = !DILocation(line: 423, column: 14, scope: !11897)
!11939 = !DILocation(line: 423, column: 19, scope: !11897)
!11940 = !DILocation(line: 423, column: 2, scope: !11897)
!11941 = !DILocation(line: 424, column: 28, scope: !11897)
!11942 = !DILocation(line: 424, column: 33, scope: !11897)
!11943 = !DILocation(line: 424, column: 6, scope: !11897)
!11944 = !DILocation(line: 424, column: 4, scope: !11897)
!11945 = !DILocation(line: 425, column: 6, scope: !11946)
!11946 = distinct !DILexicalBlock(scope: !11897, file: !3, line: 425, column: 6)
!11947 = !DILocation(line: 425, column: 8, scope: !11946)
!11948 = !DILocation(line: 425, column: 12, scope: !11946)
!11949 = !DILocation(line: 425, column: 15, scope: !11946)
!11950 = !DILocation(line: 425, column: 28, scope: !11946)
!11951 = !DILocation(line: 425, column: 44, scope: !11946)
!11952 = !DILocation(line: 425, column: 47, scope: !11946)
!11953 = !DILocation(line: 425, column: 50, scope: !11946)
!11954 = !DILocation(line: 425, column: 6, scope: !11897)
!11955 = !DILocation(line: 426, column: 27, scope: !11946)
!11956 = !DILocation(line: 426, column: 3, scope: !11946)
!11957 = !DILocation(line: 426, column: 6, scope: !11946)
!11958 = !DILocation(line: 426, column: 13, scope: !11946)
!11959 = !DILocation(line: 426, column: 25, scope: !11946)
!11960 = !DILocation(line: 428, column: 7, scope: !11946)
!11961 = !DILocation(line: 429, column: 16, scope: !11897)
!11962 = !DILocation(line: 429, column: 21, scope: !11897)
!11963 = !DILocation(line: 429, column: 2, scope: !11897)
!11964 = !DILocation(line: 431, column: 17, scope: !11897)
!11965 = !DILocation(line: 431, column: 2, scope: !11897)
!11966 = !DILocation(line: 432, column: 9, scope: !11897)
!11967 = !DILocation(line: 432, column: 15, scope: !11897)
!11968 = !DILocation(line: 432, column: 21, scope: !11897)
!11969 = !DILocation(line: 432, column: 2, scope: !11897)
!11970 = !DILocation(line: 433, column: 1, scope: !11897)
!11971 = distinct !DISubprogram(name: "comedi_read_subdevice", scope: !3, file: !3, line: 262, type: !8399, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!11972 = !DILocalVariable(name: "dev", arg: 1, scope: !11971, file: !3, line: 262, type: !8401)
!11973 = !DILocation(line: 262, column: 51, scope: !11971)
!11974 = !DILocalVariable(name: "minor", arg: 2, scope: !11971, file: !3, line: 262, type: !7)
!11975 = !DILocation(line: 262, column: 69, scope: !11971)
!11976 = !DILocalVariable(name: "s", scope: !11971, file: !3, line: 264, type: !3871)
!11977 = !DILocation(line: 264, column: 27, scope: !11971)
!11978 = !DILocation(line: 266, column: 2, scope: !11971)
!11979 = !DILocation(line: 266, column: 2, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11971, file: !3, line: 266, column: 2)
!11981 = !DILocation(line: 267, column: 6, scope: !11982)
!11982 = distinct !DILexicalBlock(scope: !11971, file: !3, line: 267, column: 6)
!11983 = !DILocation(line: 267, column: 12, scope: !11982)
!11984 = !DILocation(line: 267, column: 6, scope: !11971)
!11985 = !DILocation(line: 268, column: 35, scope: !11986)
!11986 = distinct !DILexicalBlock(scope: !11982, file: !3, line: 267, column: 40)
!11987 = !DILocation(line: 268, column: 40, scope: !11986)
!11988 = !DILocation(line: 268, column: 7, scope: !11986)
!11989 = !DILocation(line: 268, column: 5, scope: !11986)
!11990 = !DILocation(line: 269, column: 8, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11986, file: !3, line: 269, column: 7)
!11992 = !DILocation(line: 269, column: 10, scope: !11991)
!11993 = !DILocation(line: 269, column: 14, scope: !11991)
!11994 = !DILocation(line: 269, column: 17, scope: !11991)
!11995 = !DILocation(line: 269, column: 30, scope: !11991)
!11996 = !DILocation(line: 269, column: 7, scope: !11986)
!11997 = !DILocation(line: 270, column: 11, scope: !11991)
!11998 = !DILocation(line: 270, column: 4, scope: !11991)
!11999 = !DILocation(line: 271, column: 2, scope: !11986)
!12000 = !DILocation(line: 272, column: 9, scope: !11971)
!12001 = !DILocation(line: 272, column: 14, scope: !11971)
!12002 = !DILocation(line: 272, column: 2, scope: !11971)
!12003 = !DILocation(line: 273, column: 1, scope: !11971)
!12004 = distinct !DISubprogram(name: "read_buffer_kb_show", scope: !3, file: !3, line: 436, type: !4253, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!12005 = !DILocalVariable(name: "csdev", arg: 1, scope: !12004, file: !3, line: 436, type: !214)
!12006 = !DILocation(line: 436, column: 51, scope: !12004)
!12007 = !DILocalVariable(name: "attr", arg: 2, scope: !12004, file: !3, line: 437, type: !4255)
!12008 = !DILocation(line: 437, column: 33, scope: !12004)
!12009 = !DILocalVariable(name: "buf", arg: 3, scope: !12004, file: !3, line: 437, type: !277)
!12010 = !DILocation(line: 437, column: 45, scope: !12004)
!12011 = !DILocalVariable(name: "minor", scope: !12004, file: !3, line: 439, type: !7)
!12012 = !DILocation(line: 439, column: 15, scope: !12004)
!12013 = !DILocation(line: 439, column: 23, scope: !12004)
!12014 = !DILocalVariable(name: "dev", scope: !12004, file: !3, line: 440, type: !162)
!12015 = !DILocation(line: 440, column: 24, scope: !12004)
!12016 = !DILocalVariable(name: "s", scope: !12004, file: !3, line: 441, type: !3871)
!12017 = !DILocation(line: 441, column: 27, scope: !12004)
!12018 = !DILocalVariable(name: "size", scope: !12004, file: !3, line: 442, type: !7)
!12019 = !DILocation(line: 442, column: 15, scope: !12004)
!12020 = !DILocation(line: 444, column: 34, scope: !12004)
!12021 = !DILocation(line: 444, column: 8, scope: !12004)
!12022 = !DILocation(line: 444, column: 6, scope: !12004)
!12023 = !DILocation(line: 445, column: 7, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !12004, file: !3, line: 445, column: 6)
!12025 = !DILocation(line: 445, column: 6, scope: !12004)
!12026 = !DILocation(line: 446, column: 3, scope: !12024)
!12027 = !DILocation(line: 448, column: 14, scope: !12004)
!12028 = !DILocation(line: 448, column: 19, scope: !12004)
!12029 = !DILocation(line: 448, column: 2, scope: !12004)
!12030 = !DILocation(line: 449, column: 28, scope: !12004)
!12031 = !DILocation(line: 449, column: 33, scope: !12004)
!12032 = !DILocation(line: 449, column: 6, scope: !12004)
!12033 = !DILocation(line: 449, column: 4, scope: !12004)
!12034 = !DILocation(line: 450, column: 6, scope: !12035)
!12035 = distinct !DILexicalBlock(scope: !12004, file: !3, line: 450, column: 6)
!12036 = !DILocation(line: 450, column: 8, scope: !12035)
!12037 = !DILocation(line: 450, column: 12, scope: !12035)
!12038 = !DILocation(line: 450, column: 15, scope: !12035)
!12039 = !DILocation(line: 450, column: 28, scope: !12035)
!12040 = !DILocation(line: 450, column: 44, scope: !12035)
!12041 = !DILocation(line: 450, column: 47, scope: !12035)
!12042 = !DILocation(line: 450, column: 50, scope: !12035)
!12043 = !DILocation(line: 450, column: 6, scope: !12004)
!12044 = !DILocation(line: 451, column: 10, scope: !12035)
!12045 = !DILocation(line: 451, column: 13, scope: !12035)
!12046 = !DILocation(line: 451, column: 20, scope: !12035)
!12047 = !DILocation(line: 451, column: 35, scope: !12035)
!12048 = !DILocation(line: 451, column: 8, scope: !12035)
!12049 = !DILocation(line: 451, column: 3, scope: !12035)
!12050 = !DILocation(line: 452, column: 16, scope: !12004)
!12051 = !DILocation(line: 452, column: 21, scope: !12004)
!12052 = !DILocation(line: 452, column: 2, scope: !12004)
!12053 = !DILocation(line: 454, column: 17, scope: !12004)
!12054 = !DILocation(line: 454, column: 2, scope: !12004)
!12055 = !DILocation(line: 455, column: 18, scope: !12004)
!12056 = !DILocation(line: 455, column: 42, scope: !12004)
!12057 = !DILocation(line: 455, column: 9, scope: !12004)
!12058 = !DILocation(line: 455, column: 2, scope: !12004)
!12059 = !DILocation(line: 456, column: 1, scope: !12004)
!12060 = distinct !DISubprogram(name: "read_buffer_kb_store", scope: !3, file: !3, line: 458, type: !4258, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!12061 = !DILocalVariable(name: "csdev", arg: 1, scope: !12060, file: !3, line: 458, type: !214)
!12062 = !DILocation(line: 458, column: 52, scope: !12060)
!12063 = !DILocalVariable(name: "attr", arg: 2, scope: !12060, file: !3, line: 459, type: !4255)
!12064 = !DILocation(line: 459, column: 34, scope: !12060)
!12065 = !DILocalVariable(name: "buf", arg: 3, scope: !12060, file: !3, line: 460, type: !173)
!12066 = !DILocation(line: 460, column: 21, scope: !12060)
!12067 = !DILocalVariable(name: "count", arg: 4, scope: !12060, file: !3, line: 460, type: !324)
!12068 = !DILocation(line: 460, column: 33, scope: !12060)
!12069 = !DILocalVariable(name: "minor", scope: !12060, file: !3, line: 462, type: !7)
!12070 = !DILocation(line: 462, column: 15, scope: !12060)
!12071 = !DILocation(line: 462, column: 23, scope: !12060)
!12072 = !DILocalVariable(name: "dev", scope: !12060, file: !3, line: 463, type: !162)
!12073 = !DILocation(line: 463, column: 24, scope: !12060)
!12074 = !DILocalVariable(name: "s", scope: !12060, file: !3, line: 464, type: !3871)
!12075 = !DILocation(line: 464, column: 27, scope: !12060)
!12076 = !DILocalVariable(name: "size", scope: !12060, file: !3, line: 465, type: !7)
!12077 = !DILocation(line: 465, column: 15, scope: !12060)
!12078 = !DILocalVariable(name: "err", scope: !12060, file: !3, line: 466, type: !166)
!12079 = !DILocation(line: 466, column: 6, scope: !12060)
!12080 = !DILocation(line: 468, column: 19, scope: !12060)
!12081 = !DILocation(line: 468, column: 8, scope: !12060)
!12082 = !DILocation(line: 468, column: 6, scope: !12060)
!12083 = !DILocation(line: 469, column: 6, scope: !12084)
!12084 = distinct !DILexicalBlock(scope: !12060, file: !3, line: 469, column: 6)
!12085 = !DILocation(line: 469, column: 6, scope: !12060)
!12086 = !DILocation(line: 470, column: 10, scope: !12084)
!12087 = !DILocation(line: 470, column: 3, scope: !12084)
!12088 = !DILocation(line: 471, column: 6, scope: !12089)
!12089 = distinct !DILexicalBlock(scope: !12060, file: !3, line: 471, column: 6)
!12090 = !DILocation(line: 471, column: 11, scope: !12089)
!12091 = !DILocation(line: 471, column: 6, scope: !12060)
!12092 = !DILocation(line: 472, column: 3, scope: !12089)
!12093 = !DILocation(line: 473, column: 7, scope: !12060)
!12094 = !DILocation(line: 475, column: 34, scope: !12060)
!12095 = !DILocation(line: 475, column: 8, scope: !12060)
!12096 = !DILocation(line: 475, column: 6, scope: !12060)
!12097 = !DILocation(line: 476, column: 7, scope: !12098)
!12098 = distinct !DILexicalBlock(scope: !12060, file: !3, line: 476, column: 6)
!12099 = !DILocation(line: 476, column: 6, scope: !12060)
!12100 = !DILocation(line: 477, column: 3, scope: !12098)
!12101 = !DILocation(line: 479, column: 14, scope: !12060)
!12102 = !DILocation(line: 479, column: 19, scope: !12060)
!12103 = !DILocation(line: 479, column: 2, scope: !12060)
!12104 = !DILocation(line: 480, column: 28, scope: !12060)
!12105 = !DILocation(line: 480, column: 33, scope: !12060)
!12106 = !DILocation(line: 480, column: 6, scope: !12060)
!12107 = !DILocation(line: 480, column: 4, scope: !12060)
!12108 = !DILocation(line: 481, column: 6, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12060, file: !3, line: 481, column: 6)
!12110 = !DILocation(line: 481, column: 8, scope: !12109)
!12111 = !DILocation(line: 481, column: 12, scope: !12109)
!12112 = !DILocation(line: 481, column: 15, scope: !12109)
!12113 = !DILocation(line: 481, column: 28, scope: !12109)
!12114 = !DILocation(line: 481, column: 44, scope: !12109)
!12115 = !DILocation(line: 481, column: 47, scope: !12109)
!12116 = !DILocation(line: 481, column: 50, scope: !12109)
!12117 = !DILocation(line: 481, column: 6, scope: !12060)
!12118 = !DILocation(line: 482, column: 29, scope: !12109)
!12119 = !DILocation(line: 482, column: 34, scope: !12109)
!12120 = !DILocation(line: 482, column: 37, scope: !12109)
!12121 = !DILocation(line: 482, column: 9, scope: !12109)
!12122 = !DILocation(line: 482, column: 7, scope: !12109)
!12123 = !DILocation(line: 482, column: 3, scope: !12109)
!12124 = !DILocation(line: 484, column: 7, scope: !12109)
!12125 = !DILocation(line: 485, column: 16, scope: !12060)
!12126 = !DILocation(line: 485, column: 21, scope: !12060)
!12127 = !DILocation(line: 485, column: 2, scope: !12060)
!12128 = !DILocation(line: 487, column: 17, scope: !12060)
!12129 = !DILocation(line: 487, column: 2, scope: !12060)
!12130 = !DILocation(line: 488, column: 9, scope: !12060)
!12131 = !DILocation(line: 488, column: 15, scope: !12060)
!12132 = !DILocation(line: 488, column: 21, scope: !12060)
!12133 = !DILocation(line: 488, column: 2, scope: !12060)
!12134 = !DILocation(line: 489, column: 1, scope: !12060)
!12135 = distinct !DISubprogram(name: "max_write_buffer_kb_show", scope: !3, file: !3, line: 492, type: !4253, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!12136 = !DILocalVariable(name: "csdev", arg: 1, scope: !12135, file: !3, line: 492, type: !214)
!12137 = !DILocation(line: 492, column: 56, scope: !12135)
!12138 = !DILocalVariable(name: "attr", arg: 2, scope: !12135, file: !3, line: 493, type: !4255)
!12139 = !DILocation(line: 493, column: 31, scope: !12135)
!12140 = !DILocalVariable(name: "buf", arg: 3, scope: !12135, file: !3, line: 494, type: !277)
!12141 = !DILocation(line: 494, column: 12, scope: !12135)
!12142 = !DILocalVariable(name: "minor", scope: !12135, file: !3, line: 496, type: !7)
!12143 = !DILocation(line: 496, column: 15, scope: !12135)
!12144 = !DILocation(line: 496, column: 23, scope: !12135)
!12145 = !DILocalVariable(name: "dev", scope: !12135, file: !3, line: 497, type: !162)
!12146 = !DILocation(line: 497, column: 24, scope: !12135)
!12147 = !DILocalVariable(name: "s", scope: !12135, file: !3, line: 498, type: !3871)
!12148 = !DILocation(line: 498, column: 27, scope: !12135)
!12149 = !DILocalVariable(name: "size", scope: !12135, file: !3, line: 499, type: !7)
!12150 = !DILocation(line: 499, column: 15, scope: !12135)
!12151 = !DILocation(line: 501, column: 34, scope: !12135)
!12152 = !DILocation(line: 501, column: 8, scope: !12135)
!12153 = !DILocation(line: 501, column: 6, scope: !12135)
!12154 = !DILocation(line: 502, column: 7, scope: !12155)
!12155 = distinct !DILexicalBlock(scope: !12135, file: !3, line: 502, column: 6)
!12156 = !DILocation(line: 502, column: 6, scope: !12135)
!12157 = !DILocation(line: 503, column: 3, scope: !12155)
!12158 = !DILocation(line: 505, column: 14, scope: !12135)
!12159 = !DILocation(line: 505, column: 19, scope: !12135)
!12160 = !DILocation(line: 505, column: 2, scope: !12135)
!12161 = !DILocation(line: 506, column: 29, scope: !12135)
!12162 = !DILocation(line: 506, column: 34, scope: !12135)
!12163 = !DILocation(line: 506, column: 6, scope: !12135)
!12164 = !DILocation(line: 506, column: 4, scope: !12135)
!12165 = !DILocation(line: 507, column: 6, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12135, file: !3, line: 507, column: 6)
!12167 = !DILocation(line: 507, column: 8, scope: !12166)
!12168 = !DILocation(line: 507, column: 12, scope: !12166)
!12169 = !DILocation(line: 507, column: 15, scope: !12166)
!12170 = !DILocation(line: 507, column: 28, scope: !12166)
!12171 = !DILocation(line: 507, column: 45, scope: !12166)
!12172 = !DILocation(line: 507, column: 48, scope: !12166)
!12173 = !DILocation(line: 507, column: 51, scope: !12166)
!12174 = !DILocation(line: 507, column: 6, scope: !12135)
!12175 = !DILocation(line: 508, column: 10, scope: !12166)
!12176 = !DILocation(line: 508, column: 13, scope: !12166)
!12177 = !DILocation(line: 508, column: 20, scope: !12166)
!12178 = !DILocation(line: 508, column: 32, scope: !12166)
!12179 = !DILocation(line: 508, column: 8, scope: !12166)
!12180 = !DILocation(line: 508, column: 3, scope: !12166)
!12181 = !DILocation(line: 509, column: 16, scope: !12135)
!12182 = !DILocation(line: 509, column: 21, scope: !12135)
!12183 = !DILocation(line: 509, column: 2, scope: !12135)
!12184 = !DILocation(line: 511, column: 17, scope: !12135)
!12185 = !DILocation(line: 511, column: 2, scope: !12135)
!12186 = !DILocation(line: 512, column: 18, scope: !12135)
!12187 = !DILocation(line: 512, column: 42, scope: !12135)
!12188 = !DILocation(line: 512, column: 9, scope: !12135)
!12189 = !DILocation(line: 512, column: 2, scope: !12135)
!12190 = !DILocation(line: 513, column: 1, scope: !12135)
!12191 = distinct !DISubprogram(name: "max_write_buffer_kb_store", scope: !3, file: !3, line: 515, type: !4258, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!12192 = !DILocalVariable(name: "csdev", arg: 1, scope: !12191, file: !3, line: 515, type: !214)
!12193 = !DILocation(line: 515, column: 57, scope: !12191)
!12194 = !DILocalVariable(name: "attr", arg: 2, scope: !12191, file: !3, line: 516, type: !4255)
!12195 = !DILocation(line: 516, column: 32, scope: !12191)
!12196 = !DILocalVariable(name: "buf", arg: 3, scope: !12191, file: !3, line: 517, type: !173)
!12197 = !DILocation(line: 517, column: 19, scope: !12191)
!12198 = !DILocalVariable(name: "count", arg: 4, scope: !12191, file: !3, line: 517, type: !324)
!12199 = !DILocation(line: 517, column: 31, scope: !12191)
!12200 = !DILocalVariable(name: "minor", scope: !12191, file: !3, line: 519, type: !7)
!12201 = !DILocation(line: 519, column: 15, scope: !12191)
!12202 = !DILocation(line: 519, column: 23, scope: !12191)
!12203 = !DILocalVariable(name: "dev", scope: !12191, file: !3, line: 520, type: !162)
!12204 = !DILocation(line: 520, column: 24, scope: !12191)
!12205 = !DILocalVariable(name: "s", scope: !12191, file: !3, line: 521, type: !3871)
!12206 = !DILocation(line: 521, column: 27, scope: !12191)
!12207 = !DILocalVariable(name: "size", scope: !12191, file: !3, line: 522, type: !7)
!12208 = !DILocation(line: 522, column: 15, scope: !12191)
!12209 = !DILocalVariable(name: "err", scope: !12191, file: !3, line: 523, type: !166)
!12210 = !DILocation(line: 523, column: 6, scope: !12191)
!12211 = !DILocation(line: 525, column: 19, scope: !12191)
!12212 = !DILocation(line: 525, column: 8, scope: !12191)
!12213 = !DILocation(line: 525, column: 6, scope: !12191)
!12214 = !DILocation(line: 526, column: 6, scope: !12215)
!12215 = distinct !DILexicalBlock(scope: !12191, file: !3, line: 526, column: 6)
!12216 = !DILocation(line: 526, column: 6, scope: !12191)
!12217 = !DILocation(line: 527, column: 10, scope: !12215)
!12218 = !DILocation(line: 527, column: 3, scope: !12215)
!12219 = !DILocation(line: 528, column: 6, scope: !12220)
!12220 = distinct !DILexicalBlock(scope: !12191, file: !3, line: 528, column: 6)
!12221 = !DILocation(line: 528, column: 11, scope: !12220)
!12222 = !DILocation(line: 528, column: 6, scope: !12191)
!12223 = !DILocation(line: 529, column: 3, scope: !12220)
!12224 = !DILocation(line: 530, column: 7, scope: !12191)
!12225 = !DILocation(line: 532, column: 34, scope: !12191)
!12226 = !DILocation(line: 532, column: 8, scope: !12191)
!12227 = !DILocation(line: 532, column: 6, scope: !12191)
!12228 = !DILocation(line: 533, column: 7, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12191, file: !3, line: 533, column: 6)
!12230 = !DILocation(line: 533, column: 6, scope: !12191)
!12231 = !DILocation(line: 534, column: 3, scope: !12229)
!12232 = !DILocation(line: 536, column: 14, scope: !12191)
!12233 = !DILocation(line: 536, column: 19, scope: !12191)
!12234 = !DILocation(line: 536, column: 2, scope: !12191)
!12235 = !DILocation(line: 537, column: 29, scope: !12191)
!12236 = !DILocation(line: 537, column: 34, scope: !12191)
!12237 = !DILocation(line: 537, column: 6, scope: !12191)
!12238 = !DILocation(line: 537, column: 4, scope: !12191)
!12239 = !DILocation(line: 538, column: 6, scope: !12240)
!12240 = distinct !DILexicalBlock(scope: !12191, file: !3, line: 538, column: 6)
!12241 = !DILocation(line: 538, column: 8, scope: !12240)
!12242 = !DILocation(line: 538, column: 12, scope: !12240)
!12243 = !DILocation(line: 538, column: 15, scope: !12240)
!12244 = !DILocation(line: 538, column: 28, scope: !12240)
!12245 = !DILocation(line: 538, column: 45, scope: !12240)
!12246 = !DILocation(line: 538, column: 48, scope: !12240)
!12247 = !DILocation(line: 538, column: 51, scope: !12240)
!12248 = !DILocation(line: 538, column: 6, scope: !12191)
!12249 = !DILocation(line: 539, column: 27, scope: !12240)
!12250 = !DILocation(line: 539, column: 3, scope: !12240)
!12251 = !DILocation(line: 539, column: 6, scope: !12240)
!12252 = !DILocation(line: 539, column: 13, scope: !12240)
!12253 = !DILocation(line: 539, column: 25, scope: !12240)
!12254 = !DILocation(line: 541, column: 7, scope: !12240)
!12255 = !DILocation(line: 542, column: 16, scope: !12191)
!12256 = !DILocation(line: 542, column: 21, scope: !12191)
!12257 = !DILocation(line: 542, column: 2, scope: !12191)
!12258 = !DILocation(line: 544, column: 17, scope: !12191)
!12259 = !DILocation(line: 544, column: 2, scope: !12191)
!12260 = !DILocation(line: 545, column: 9, scope: !12191)
!12261 = !DILocation(line: 545, column: 15, scope: !12191)
!12262 = !DILocation(line: 545, column: 21, scope: !12191)
!12263 = !DILocation(line: 545, column: 2, scope: !12191)
!12264 = !DILocation(line: 546, column: 1, scope: !12191)
!12265 = distinct !DISubprogram(name: "comedi_write_subdevice", scope: !3, file: !3, line: 276, type: !8399, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!12266 = !DILocalVariable(name: "dev", arg: 1, scope: !12265, file: !3, line: 276, type: !8401)
!12267 = !DILocation(line: 276, column: 52, scope: !12265)
!12268 = !DILocalVariable(name: "minor", arg: 2, scope: !12265, file: !3, line: 276, type: !7)
!12269 = !DILocation(line: 276, column: 70, scope: !12265)
!12270 = !DILocalVariable(name: "s", scope: !12265, file: !3, line: 278, type: !3871)
!12271 = !DILocation(line: 278, column: 27, scope: !12265)
!12272 = !DILocation(line: 280, column: 2, scope: !12265)
!12273 = !DILocation(line: 280, column: 2, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12265, file: !3, line: 280, column: 2)
!12275 = !DILocation(line: 281, column: 6, scope: !12276)
!12276 = distinct !DILexicalBlock(scope: !12265, file: !3, line: 281, column: 6)
!12277 = !DILocation(line: 281, column: 12, scope: !12276)
!12278 = !DILocation(line: 281, column: 6, scope: !12265)
!12279 = !DILocation(line: 282, column: 35, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12276, file: !3, line: 281, column: 40)
!12281 = !DILocation(line: 282, column: 40, scope: !12280)
!12282 = !DILocation(line: 282, column: 7, scope: !12280)
!12283 = !DILocation(line: 282, column: 5, scope: !12280)
!12284 = !DILocation(line: 283, column: 8, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12280, file: !3, line: 283, column: 7)
!12286 = !DILocation(line: 283, column: 10, scope: !12285)
!12287 = !DILocation(line: 283, column: 14, scope: !12285)
!12288 = !DILocation(line: 283, column: 17, scope: !12285)
!12289 = !DILocation(line: 283, column: 30, scope: !12285)
!12290 = !DILocation(line: 283, column: 7, scope: !12280)
!12291 = !DILocation(line: 284, column: 11, scope: !12285)
!12292 = !DILocation(line: 284, column: 4, scope: !12285)
!12293 = !DILocation(line: 285, column: 2, scope: !12280)
!12294 = !DILocation(line: 286, column: 9, scope: !12265)
!12295 = !DILocation(line: 286, column: 14, scope: !12265)
!12296 = !DILocation(line: 286, column: 2, scope: !12265)
!12297 = !DILocation(line: 287, column: 1, scope: !12265)
!12298 = distinct !DISubprogram(name: "write_buffer_kb_show", scope: !3, file: !3, line: 549, type: !4253, scopeLine: 551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!12299 = !DILocalVariable(name: "csdev", arg: 1, scope: !12298, file: !3, line: 549, type: !214)
!12300 = !DILocation(line: 549, column: 52, scope: !12298)
!12301 = !DILocalVariable(name: "attr", arg: 2, scope: !12298, file: !3, line: 550, type: !4255)
!12302 = !DILocation(line: 550, column: 34, scope: !12298)
!12303 = !DILocalVariable(name: "buf", arg: 3, scope: !12298, file: !3, line: 550, type: !277)
!12304 = !DILocation(line: 550, column: 46, scope: !12298)
!12305 = !DILocalVariable(name: "minor", scope: !12298, file: !3, line: 552, type: !7)
!12306 = !DILocation(line: 552, column: 15, scope: !12298)
!12307 = !DILocation(line: 552, column: 23, scope: !12298)
!12308 = !DILocalVariable(name: "dev", scope: !12298, file: !3, line: 553, type: !162)
!12309 = !DILocation(line: 553, column: 24, scope: !12298)
!12310 = !DILocalVariable(name: "s", scope: !12298, file: !3, line: 554, type: !3871)
!12311 = !DILocation(line: 554, column: 27, scope: !12298)
!12312 = !DILocalVariable(name: "size", scope: !12298, file: !3, line: 555, type: !7)
!12313 = !DILocation(line: 555, column: 15, scope: !12298)
!12314 = !DILocation(line: 557, column: 34, scope: !12298)
!12315 = !DILocation(line: 557, column: 8, scope: !12298)
!12316 = !DILocation(line: 557, column: 6, scope: !12298)
!12317 = !DILocation(line: 558, column: 7, scope: !12318)
!12318 = distinct !DILexicalBlock(scope: !12298, file: !3, line: 558, column: 6)
!12319 = !DILocation(line: 558, column: 6, scope: !12298)
!12320 = !DILocation(line: 559, column: 3, scope: !12318)
!12321 = !DILocation(line: 561, column: 14, scope: !12298)
!12322 = !DILocation(line: 561, column: 19, scope: !12298)
!12323 = !DILocation(line: 561, column: 2, scope: !12298)
!12324 = !DILocation(line: 562, column: 29, scope: !12298)
!12325 = !DILocation(line: 562, column: 34, scope: !12298)
!12326 = !DILocation(line: 562, column: 6, scope: !12298)
!12327 = !DILocation(line: 562, column: 4, scope: !12298)
!12328 = !DILocation(line: 563, column: 6, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12298, file: !3, line: 563, column: 6)
!12330 = !DILocation(line: 563, column: 8, scope: !12329)
!12331 = !DILocation(line: 563, column: 12, scope: !12329)
!12332 = !DILocation(line: 563, column: 15, scope: !12329)
!12333 = !DILocation(line: 563, column: 28, scope: !12329)
!12334 = !DILocation(line: 563, column: 45, scope: !12329)
!12335 = !DILocation(line: 563, column: 48, scope: !12329)
!12336 = !DILocation(line: 563, column: 51, scope: !12329)
!12337 = !DILocation(line: 563, column: 6, scope: !12298)
!12338 = !DILocation(line: 564, column: 10, scope: !12329)
!12339 = !DILocation(line: 564, column: 13, scope: !12329)
!12340 = !DILocation(line: 564, column: 20, scope: !12329)
!12341 = !DILocation(line: 564, column: 35, scope: !12329)
!12342 = !DILocation(line: 564, column: 8, scope: !12329)
!12343 = !DILocation(line: 564, column: 3, scope: !12329)
!12344 = !DILocation(line: 565, column: 16, scope: !12298)
!12345 = !DILocation(line: 565, column: 21, scope: !12298)
!12346 = !DILocation(line: 565, column: 2, scope: !12298)
!12347 = !DILocation(line: 567, column: 17, scope: !12298)
!12348 = !DILocation(line: 567, column: 2, scope: !12298)
!12349 = !DILocation(line: 568, column: 18, scope: !12298)
!12350 = !DILocation(line: 568, column: 42, scope: !12298)
!12351 = !DILocation(line: 568, column: 9, scope: !12298)
!12352 = !DILocation(line: 568, column: 2, scope: !12298)
!12353 = !DILocation(line: 569, column: 1, scope: !12298)
!12354 = distinct !DISubprogram(name: "write_buffer_kb_store", scope: !3, file: !3, line: 571, type: !4258, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!12355 = !DILocalVariable(name: "csdev", arg: 1, scope: !12354, file: !3, line: 571, type: !214)
!12356 = !DILocation(line: 571, column: 53, scope: !12354)
!12357 = !DILocalVariable(name: "attr", arg: 2, scope: !12354, file: !3, line: 572, type: !4255)
!12358 = !DILocation(line: 572, column: 35, scope: !12354)
!12359 = !DILocalVariable(name: "buf", arg: 3, scope: !12354, file: !3, line: 573, type: !173)
!12360 = !DILocation(line: 573, column: 22, scope: !12354)
!12361 = !DILocalVariable(name: "count", arg: 4, scope: !12354, file: !3, line: 573, type: !324)
!12362 = !DILocation(line: 573, column: 34, scope: !12354)
!12363 = !DILocalVariable(name: "minor", scope: !12354, file: !3, line: 575, type: !7)
!12364 = !DILocation(line: 575, column: 15, scope: !12354)
!12365 = !DILocation(line: 575, column: 23, scope: !12354)
!12366 = !DILocalVariable(name: "dev", scope: !12354, file: !3, line: 576, type: !162)
!12367 = !DILocation(line: 576, column: 24, scope: !12354)
!12368 = !DILocalVariable(name: "s", scope: !12354, file: !3, line: 577, type: !3871)
!12369 = !DILocation(line: 577, column: 27, scope: !12354)
!12370 = !DILocalVariable(name: "size", scope: !12354, file: !3, line: 578, type: !7)
!12371 = !DILocation(line: 578, column: 15, scope: !12354)
!12372 = !DILocalVariable(name: "err", scope: !12354, file: !3, line: 579, type: !166)
!12373 = !DILocation(line: 579, column: 6, scope: !12354)
!12374 = !DILocation(line: 581, column: 19, scope: !12354)
!12375 = !DILocation(line: 581, column: 8, scope: !12354)
!12376 = !DILocation(line: 581, column: 6, scope: !12354)
!12377 = !DILocation(line: 582, column: 6, scope: !12378)
!12378 = distinct !DILexicalBlock(scope: !12354, file: !3, line: 582, column: 6)
!12379 = !DILocation(line: 582, column: 6, scope: !12354)
!12380 = !DILocation(line: 583, column: 10, scope: !12378)
!12381 = !DILocation(line: 583, column: 3, scope: !12378)
!12382 = !DILocation(line: 584, column: 6, scope: !12383)
!12383 = distinct !DILexicalBlock(scope: !12354, file: !3, line: 584, column: 6)
!12384 = !DILocation(line: 584, column: 11, scope: !12383)
!12385 = !DILocation(line: 584, column: 6, scope: !12354)
!12386 = !DILocation(line: 585, column: 3, scope: !12383)
!12387 = !DILocation(line: 586, column: 7, scope: !12354)
!12388 = !DILocation(line: 588, column: 34, scope: !12354)
!12389 = !DILocation(line: 588, column: 8, scope: !12354)
!12390 = !DILocation(line: 588, column: 6, scope: !12354)
!12391 = !DILocation(line: 589, column: 7, scope: !12392)
!12392 = distinct !DILexicalBlock(scope: !12354, file: !3, line: 589, column: 6)
!12393 = !DILocation(line: 589, column: 6, scope: !12354)
!12394 = !DILocation(line: 590, column: 3, scope: !12392)
!12395 = !DILocation(line: 592, column: 14, scope: !12354)
!12396 = !DILocation(line: 592, column: 19, scope: !12354)
!12397 = !DILocation(line: 592, column: 2, scope: !12354)
!12398 = !DILocation(line: 593, column: 29, scope: !12354)
!12399 = !DILocation(line: 593, column: 34, scope: !12354)
!12400 = !DILocation(line: 593, column: 6, scope: !12354)
!12401 = !DILocation(line: 593, column: 4, scope: !12354)
!12402 = !DILocation(line: 594, column: 6, scope: !12403)
!12403 = distinct !DILexicalBlock(scope: !12354, file: !3, line: 594, column: 6)
!12404 = !DILocation(line: 594, column: 8, scope: !12403)
!12405 = !DILocation(line: 594, column: 12, scope: !12403)
!12406 = !DILocation(line: 594, column: 15, scope: !12403)
!12407 = !DILocation(line: 594, column: 28, scope: !12403)
!12408 = !DILocation(line: 594, column: 45, scope: !12403)
!12409 = !DILocation(line: 594, column: 48, scope: !12403)
!12410 = !DILocation(line: 594, column: 51, scope: !12403)
!12411 = !DILocation(line: 594, column: 6, scope: !12354)
!12412 = !DILocation(line: 595, column: 29, scope: !12403)
!12413 = !DILocation(line: 595, column: 34, scope: !12403)
!12414 = !DILocation(line: 595, column: 37, scope: !12403)
!12415 = !DILocation(line: 595, column: 9, scope: !12403)
!12416 = !DILocation(line: 595, column: 7, scope: !12403)
!12417 = !DILocation(line: 595, column: 3, scope: !12403)
!12418 = !DILocation(line: 597, column: 7, scope: !12403)
!12419 = !DILocation(line: 598, column: 16, scope: !12354)
!12420 = !DILocation(line: 598, column: 21, scope: !12354)
!12421 = !DILocation(line: 598, column: 2, scope: !12354)
!12422 = !DILocation(line: 600, column: 17, scope: !12354)
!12423 = !DILocation(line: 600, column: 2, scope: !12354)
!12424 = !DILocation(line: 601, column: 9, scope: !12354)
!12425 = !DILocation(line: 601, column: 15, scope: !12354)
!12426 = !DILocation(line: 601, column: 21, scope: !12354)
!12427 = !DILocation(line: 601, column: 2, scope: !12354)
!12428 = !DILocation(line: 602, column: 1, scope: !12354)
!12429 = distinct !DISubprogram(name: "comedi_clear_board_minor", scope: !3, file: !3, line: 179, type: !4327, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !250)
!12430 = !DILocalVariable(name: "minor", arg: 1, scope: !12429, file: !3, line: 179, type: !7)
!12431 = !DILocation(line: 179, column: 68, scope: !12429)
!12432 = !DILocalVariable(name: "dev", scope: !12429, file: !3, line: 181, type: !162)
!12433 = !DILocation(line: 181, column: 24, scope: !12429)
!12434 = !DILocation(line: 183, column: 2, scope: !12429)
!12435 = !DILocation(line: 184, column: 33, scope: !12429)
!12436 = !DILocation(line: 184, column: 8, scope: !12429)
!12437 = !DILocation(line: 184, column: 6, scope: !12429)
!12438 = !DILocation(line: 185, column: 27, scope: !12429)
!12439 = !DILocation(line: 185, column: 2, scope: !12429)
!12440 = !DILocation(line: 185, column: 34, scope: !12429)
!12441 = !DILocation(line: 186, column: 2, scope: !12429)
!12442 = !DILocation(line: 187, column: 9, scope: !12429)
!12443 = !DILocation(line: 187, column: 2, scope: !12429)
