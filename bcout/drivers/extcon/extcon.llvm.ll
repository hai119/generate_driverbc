; ModuleID = '../bcout/drivers/extcon/extcon.llvm.bc'
source_filename = "drivers/extcon/extcon.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_extcon_class_init6:\09\09\09"
module asm ".long\09extcon_class_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.spinlock = type { %union.anon.3 }
%union.anon.3 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.atomic_t = type { i32 }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.module = type opaque
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.attribute = type { i8*, i16 }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.61, %struct.list_head, %struct.list_head, %union.anon.62 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.59 }
%union.anon.59 = type { %struct.anon.60 }
%struct.anon.60 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type opaque
%struct.page = type { i64, %union.anon.1, %union.anon.51, %struct.atomic_t, [8 x i8] }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.51 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.52, i32 }
%union.anon.52 = type { %struct.kuid_t }
%struct.kuid_t = type { i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.45, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.15, [0 x i64] }
%struct.anon.15 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.16, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.16 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.22, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.23, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.24, %union.anon.28, %struct.key_restriction* }
%union.anon.22 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.23 = type { i64 }
%struct.kgid_t = type { i32 }
%union.anon.24 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.25, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.25 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.28 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.31, %union.anon.32, i32 }
%struct.request_queue = type opaque
%union.anon.31 = type { %struct.list_head }
%union.anon.32 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.33 }
%struct.anon.33 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.37 }
%struct.anon.37 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.44, i32, [12 x i8] }
%union.anon.44 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.45 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type opaque
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.46, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.49 }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { i64, i64 }
%union.anon.49 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.61 = type { %struct.list_head }
%union.anon.62 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.53, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.54, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.55, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.58, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.53 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.54 = type { %struct.callback_head }
%union.anon.55 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.58 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.56 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.56 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.30 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.30 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.63, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.63 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.subsys_private = type opaque
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.pte_t = type { i64 }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.__extcon_info = type { i32, i32, i8* }
%struct.kmem_cache = type opaque
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.extcon_dev = type { i8*, i32*, i32*, %struct.device, %struct.raw_notifier_head, %struct.raw_notifier_head*, %struct.list_head, i32, %struct.spinlock, i32, %struct.device_type, %struct.extcon_cable*, %struct.attribute_group, %struct.attribute**, %struct.device_attribute* }
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.extcon_cable = type { %struct.extcon_dev*, i32, %struct.attribute_group, %struct.device_attribute, %struct.device_attribute, [3 x %struct.attribute*], [3 x %union.extcon_property_value], [1 x %union.extcon_property_value], [1 x %union.extcon_property_value], [2 x %union.extcon_property_value], [1 x i64], [1 x i64], [1 x i64], [1 x i64] }
%union.extcon_property_value = type { i32 }

@.str = private unnamed_addr constant [35 x i8] c"out of memory in extcon_set_state\0A\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"NAME=%s\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"STATE=%s\00", align 1
@extcon_dev_list_lock = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @extcon_dev_list_lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @extcon_dev_list_lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !0
@extcon_dev_list = internal global %struct.list_head { %struct.list_head* @extcon_dev_list, %struct.list_head* @extcon_dev_list }, align 8, !dbg !3717
@extcon_dev_register.edev_no = internal global %struct.atomic_t { i32 -1 }, align 4, !dbg !3671
@extcon_class = internal global %struct.class* null, align 8, !dbg !3706
@.str.3 = private unnamed_addr constant [47 x i8] c"exceed the maximum number of supported cables\0A\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"extcon device name is null\0A\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"extcon%lu\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"cable.%d\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"state\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"0x%x\00", align 1
@muex_name = internal global i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.45, i32 0, i32 0), align 8, !dbg !3735
@.str.10 = private unnamed_addr constant [38 x i8] c"Failed to unregister extcon_dev (%s)\0A\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"extcon\00", align 1
@__UNIQUE_ID___addressable_extcon_class_init209 = internal global i8* bitcast (i32 ()* @extcon_class_init to i8*), section ".discard.addressable", align 8, !dbg !3676
@__exitcall_extcon_class_exit = internal global void ()* @extcon_class_exit, section ".exitcall.exit", align 8, !dbg !3678
@__UNIQUE_ID_author210 = internal constant [56 x i8] c"extcon_core.author=Chanwoo Choi <cw00.choi@samsung.com>\00", section ".modinfo", align 1, !dbg !3683
@__UNIQUE_ID_author211 = internal constant [59 x i8] c"extcon_core.author=MyungJoo Ham <myungjoo.ham@samsung.com>\00", section ".modinfo", align 1, !dbg !3688
@__UNIQUE_ID_description212 = internal constant [62 x i8] c"extcon_core.description=External Connector (extcon) framework\00", section ".modinfo", align 1, !dbg !3693
@__UNIQUE_ID_file213 = internal constant [44 x i8] c"extcon_core.file=drivers/extcon/extcon-core\00", section ".modinfo", align 1, !dbg !3698
@__UNIQUE_ID_license214 = internal constant [27 x i8] c"extcon_core.license=GPL v2\00", section ".modinfo", align 1, !dbg !3701
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.12 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"%u\0A\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"%s=%d\0A\00", align 1
@extcon_info = internal constant [64 x %struct.__extcon_info] [%struct.__extcon_info { i32 16, i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i32 0, i32 0) }, %struct.__extcon_info { i32 1, i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0) }, %struct.__extcon_info { i32 1, i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i32 0, i32 0) }, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info { i32 3, i32 5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i32 0, i32 0) }, %struct.__extcon_info { i32 3, i32 6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i32 0, i32 0) }, %struct.__extcon_info { i32 3, i32 7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i32 0, i32 0) }, %struct.__extcon_info { i32 3, i32 8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0) }, %struct.__extcon_info { i32 3, i32 9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i32 0, i32 0) }, %struct.__extcon_info { i32 3, i32 10, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i32 0, i32 0) }, %struct.__extcon_info { i32 2, i32 11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i32 0, i32 0) }, %struct.__extcon_info { i32 3, i32 12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0) }, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info { i32 4, i32 20, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.26, i32 0, i32 0) }, %struct.__extcon_info { i32 4, i32 21, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.27, i32 0, i32 0) }, %struct.__extcon_info { i32 4, i32 22, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0) }, %struct.__extcon_info { i32 4, i32 23, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i32 0, i32 0) }, %struct.__extcon_info { i32 4, i32 24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0) }, %struct.__extcon_info { i32 4, i32 25, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i32 0, i32 0) }, %struct.__extcon_info { i32 4, i32 26, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i32 0, i32 0) }, %struct.__extcon_info { i32 4, i32 27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i32 0, i32 0) }, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info { i32 8, i32 40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i32 0, i32 0) }, %struct.__extcon_info { i32 8, i32 41, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i32 0, i32 0) }, %struct.__extcon_info { i32 8, i32 42, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i32 0, i32 0) }, %struct.__extcon_info { i32 8, i32 43, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i32 0, i32 0) }, %struct.__extcon_info { i32 9, i32 44, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i32 0, i32 0) }, %struct.__extcon_info { i32 9, i32 45, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i32 0, i32 0) }, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info zeroinitializer, %struct.__extcon_info { i32 16, i32 60, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i32 0, i32 0) }, %struct.__extcon_info { i32 16, i32 61, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0) }, %struct.__extcon_info { i32 16, i32 62, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.42, i32 0, i32 0) }, %struct.__extcon_info zeroinitializer], align 16, !dbg !3708
@.str.15 = private unnamed_addr constant [5 x i8] c"NONE\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"USB\00", align 1
@.str.17 = private unnamed_addr constant [9 x i8] c"USB-HOST\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"SDP\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"DCP\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"CDP\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"ACA\00", align 1
@.str.22 = private unnamed_addr constant [13 x i8] c"FAST-CHARGER\00", align 1
@.str.23 = private unnamed_addr constant [13 x i8] c"SLOW-CHARGER\00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"WPT\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"PD\00", align 1
@.str.26 = private unnamed_addr constant [11 x i8] c"MICROPHONE\00", align 1
@.str.27 = private unnamed_addr constant [10 x i8] c"HEADPHONE\00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"LINE-IN\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"LINE-OUT\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"VIDEO-IN\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"VIDEO-OUT\00", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"SPDIF-IN\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"SPDIF-OUT\00", align 1
@.str.34 = private unnamed_addr constant [5 x i8] c"HDMI\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"MHL\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"DVI\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"VGA\00", align 1
@.str.38 = private unnamed_addr constant [3 x i8] c"DP\00", align 1
@.str.39 = private unnamed_addr constant [4 x i8] c"HMD\00", align 1
@.str.40 = private unnamed_addr constant [5 x i8] c"DOCK\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"JIG\00", align 1
@.str.42 = private unnamed_addr constant [11 x i8] c"MECHANICAL\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.43 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@create_extcon_class.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !3719
@extcon_groups = internal global [2 x %struct.attribute_group*] [%struct.attribute_group* @extcon_group, %struct.attribute_group* null], align 16, !dbg !3724
@extcon_group = internal constant %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([3 x %struct.attribute*], [3 x %struct.attribute*]* @extcon_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !3727
@extcon_attrs = internal global [3 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_state, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_name, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !3729
@dev_attr_state = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @state_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3731
@dev_attr_name = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @name_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !3733
@.str.44 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.45 = private unnamed_addr constant [19 x i8] c"mutually_exclusive\00", align 1
@llvm.used = appending global [8 x i8*] [i8* bitcast (i8** @__UNIQUE_ID___addressable_extcon_class_init209 to i8*), i8* bitcast (void ()* @extcon_class_exit to i8*), i8* bitcast (void ()** @__exitcall_extcon_class_exit to i8*), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__UNIQUE_ID_author210, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__UNIQUE_ID_author211, i32 0, i32 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__UNIQUE_ID_description212, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @__UNIQUE_ID_file213, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__UNIQUE_ID_license214, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @extcon_sync(%struct.extcon_dev* %edev, i32 %id) #0 !dbg !3743 {
entry:
  %lock.addr.i127 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i127, metadata !3746, metadata !DIExpression()), !dbg !3752
  %flags.addr.i128 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i128, metadata !3756, metadata !DIExpression()), !dbg !3757
  %tmp.i129 = alloca i32, align 4
  %tmp8.i130 = alloca i32, align 4
  %lock.addr.i125 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i125, metadata !3758, metadata !DIExpression()), !dbg !3763
  %lock.addr.i120 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i120, metadata !3746, metadata !DIExpression()), !dbg !3770
  %flags.addr.i121 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i121, metadata !3756, metadata !DIExpression()), !dbg !3772
  %tmp.i122 = alloca i32, align 4
  %tmp8.i123 = alloca i32, align 4
  %lock.addr.i118 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i118, metadata !3746, metadata !DIExpression()), !dbg !3773
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !3756, metadata !DIExpression()), !dbg !3775
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !3758, metadata !DIExpression()), !dbg !3776
  %retval = alloca i32, align 4
  %edev.addr = alloca %struct.extcon_dev*, align 8
  %id.addr = alloca i32, align 4
  %name_buf = alloca [120 x i8], align 16
  %state_buf = alloca [120 x i8], align 16
  %prop_buf = alloca i8*, align 8
  %envp = alloca [3 x i8*], align 16
  %env_offset = alloca i32, align 4
  %length = alloca i32, align 4
  %index = alloca i32, align 4
  %state = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  %__dummy34 = alloca i64, align 8
  %__dummy235 = alloca i64, align 8
  %tmp38 = alloca i32, align 4
  %__dummy42 = alloca i64, align 8
  %__dummy243 = alloca i64, align 8
  %tmp46 = alloca i32, align 4
  store %struct.extcon_dev* %edev, %struct.extcon_dev** %edev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev.addr, metadata !3783, metadata !DIExpression()), !dbg !3784
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !3785, metadata !DIExpression()), !dbg !3786
  call void @llvm.dbg.declare(metadata [120 x i8]* %name_buf, metadata !3787, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.declare(metadata [120 x i8]* %state_buf, metadata !3792, metadata !DIExpression()), !dbg !3793
  call void @llvm.dbg.declare(metadata i8** %prop_buf, metadata !3794, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.declare(metadata [3 x i8*]* %envp, metadata !3796, metadata !DIExpression()), !dbg !3797
  call void @llvm.dbg.declare(metadata i32* %env_offset, metadata !3798, metadata !DIExpression()), !dbg !3799
  store i32 0, i32* %env_offset, align 4, !dbg !3799
  call void @llvm.dbg.declare(metadata i32* %length, metadata !3800, metadata !DIExpression()), !dbg !3801
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3802, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.declare(metadata i32* %state, metadata !3804, metadata !DIExpression()), !dbg !3805
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !3806, metadata !DIExpression()), !dbg !3807
  %0 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !3808
  %tobool = icmp ne %struct.extcon_dev* %0, null, !dbg !3808
  br i1 %tobool, label %if.end, label %if.then, !dbg !3810

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !3811
  br label %return, !dbg !3811

if.end:                                           ; preds = %entry
  %1 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !3812
  %2 = load i32, i32* %id.addr, align 4, !dbg !3813
  %call = call i32 @find_cable_index_by_id(%struct.extcon_dev* %1, i32 %2) #11, !dbg !3814
  store i32 %call, i32* %index, align 4, !dbg !3815
  %3 = load i32, i32* %index, align 4, !dbg !3816
  %cmp = icmp slt i32 %3, 0, !dbg !3818
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !3819

if.then1:                                         ; preds = %if.end
  %4 = load i32, i32* %index, align 4, !dbg !3820
  store i32 %4, i32* %retval, align 4, !dbg !3821
  br label %return, !dbg !3821

if.end2:                                          ; preds = %if.end
  br label %do.body, !dbg !3822

do.body:                                          ; preds = %if.end2
  br label %do.body3, !dbg !3823

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !3824, metadata !DIExpression()), !dbg !3826
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !3827, metadata !DIExpression()), !dbg !3826
  %cmp4 = icmp eq i64* %__dummy, %__dummy2, !dbg !3826
  %conv = zext i1 %cmp4 to i32, !dbg !3826
  store i32 1, i32* %tmp, align 4, !dbg !3826
  %5 = load i32, i32* %tmp, align 4, !dbg !3826
  br label %do.body5, !dbg !3828

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !3829

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !3830

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !3832, metadata !DIExpression()), !dbg !3835
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !3836, metadata !DIExpression()), !dbg !3835
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !3835
  %conv11 = zext i1 %cmp10 to i32, !dbg !3835
  store i32 1, i32* %tmp12, align 4, !dbg !3835
  %6 = load i32, i32* %tmp12, align 4, !dbg !3835
  %call13 = call i64 @arch_local_irq_save() #11, !dbg !3837
  store i64 %call13, i64* %flags, align 8, !dbg !3837
  br label %do.end, !dbg !3837

do.end:                                           ; preds = %do.body7
  br label %do.end14, !dbg !3830

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !3829

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !3838, !srcloc !3839
  br label %do.body16, !dbg !3838

do.body16:                                        ; preds = %do.body15
  %7 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !3840
  %lock = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %7, i32 0, i32 8, !dbg !3840
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !3841
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !3842
  %rlock.i = bitcast %union.anon.3* %9 to %struct.raw_spinlock*, !dbg !3842
  br label %do.end18, !dbg !3840

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !3838

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !3829

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !3828

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !3823

do.end22:                                         ; preds = %do.end21
  %10 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !3843
  %state23 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %10, i32 0, i32 9, !dbg !3844
  %11 = load i32, i32* %state23, align 4, !dbg !3844
  %conv24 = zext i32 %11 to i64, !dbg !3843
  %12 = load i32, i32* %index, align 4, !dbg !3845
  %sh_prom = zext i32 %12 to i64, !dbg !3845
  %shl = shl i64 1, %sh_prom, !dbg !3845
  %and = and i64 %conv24, %shl, !dbg !3846
  %tobool25 = icmp ne i64 %and, 0, !dbg !3847
  %lnot = xor i1 %tobool25, true, !dbg !3847
  %lnot26 = xor i1 %lnot, true, !dbg !3848
  %lnot.ext = zext i1 %lnot26 to i32, !dbg !3848
  store i32 %lnot.ext, i32* %state, align 4, !dbg !3849
  %13 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !3850
  %lock27 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %13, i32 0, i32 8, !dbg !3851
  %14 = load i64, i64* %flags, align 8, !dbg !3852
  store %struct.spinlock* %lock27, %struct.spinlock** %lock.addr.i120, align 8
  store i64 %14, i64* %flags.addr.i121, align 8
  call void @llvm.dbg.declare(metadata !162, metadata !3853, metadata !DIExpression()) #7, !dbg !3856
  call void @llvm.dbg.declare(metadata !162, metadata !3857, metadata !DIExpression()) #7, !dbg !3856
  store i32 1, i32* %tmp.i122, align 4, !dbg !3856
  %15 = load i32, i32* %tmp.i122, align 4, !dbg !3856
  call void @llvm.dbg.declare(metadata !162, metadata !3858, metadata !DIExpression()) #7, !dbg !3863
  call void @llvm.dbg.declare(metadata !162, metadata !3864, metadata !DIExpression()) #7, !dbg !3863
  store i32 1, i32* %tmp8.i123, align 4, !dbg !3863
  %16 = load i32, i32* %tmp8.i123, align 4, !dbg !3863
  %17 = load i64, i64* %flags.addr.i121, align 8, !dbg !3865
  call void @arch_local_irq_restore(i64 %17) #12, !dbg !3865
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !3866, !srcloc !3868
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i120, align 8, !dbg !3869
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !3869
  %rlock.i124 = bitcast %union.anon.3* %19 to %struct.raw_spinlock*, !dbg !3869
  %20 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !3871
  %nh = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %20, i32 0, i32 5, !dbg !3872
  %21 = load %struct.raw_notifier_head*, %struct.raw_notifier_head** %nh, align 8, !dbg !3872
  %22 = load i32, i32* %index, align 4, !dbg !3873
  %idxprom = sext i32 %22 to i64, !dbg !3871
  %arrayidx = getelementptr %struct.raw_notifier_head, %struct.raw_notifier_head* %21, i64 %idxprom, !dbg !3871
  %23 = load i32, i32* %state, align 4, !dbg !3874
  %conv28 = sext i32 %23 to i64, !dbg !3874
  %24 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !3875
  %25 = bitcast %struct.extcon_dev* %24 to i8*, !dbg !3875
  %call29 = call i32 @raw_notifier_call_chain(%struct.raw_notifier_head* %arrayidx, i64 %conv28, i8* %25) #11, !dbg !3876
  %26 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !3877
  %nh_all = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %26, i32 0, i32 4, !dbg !3878
  %27 = load i32, i32* %state, align 4, !dbg !3879
  %conv30 = sext i32 %27 to i64, !dbg !3879
  %28 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !3880
  %29 = bitcast %struct.extcon_dev* %28 to i8*, !dbg !3880
  %call31 = call i32 @raw_notifier_call_chain(%struct.raw_notifier_head* %nh_all, i64 %conv30, i8* %29) #11, !dbg !3881
  br label %do.body32, !dbg !3882

do.body32:                                        ; preds = %do.end22
  br label %do.body33, !dbg !3883

do.body33:                                        ; preds = %do.body32
  call void @llvm.dbg.declare(metadata i64* %__dummy34, metadata !3884, metadata !DIExpression()), !dbg !3886
  call void @llvm.dbg.declare(metadata i64* %__dummy235, metadata !3887, metadata !DIExpression()), !dbg !3886
  %cmp36 = icmp eq i64* %__dummy34, %__dummy235, !dbg !3886
  %conv37 = zext i1 %cmp36 to i32, !dbg !3886
  store i32 1, i32* %tmp38, align 4, !dbg !3886
  %30 = load i32, i32* %tmp38, align 4, !dbg !3886
  br label %do.body39, !dbg !3888

do.body39:                                        ; preds = %do.body33
  br label %do.body40, !dbg !3889

do.body40:                                        ; preds = %do.body39
  br label %do.body41, !dbg !3890

do.body41:                                        ; preds = %do.body40
  call void @llvm.dbg.declare(metadata i64* %__dummy42, metadata !3892, metadata !DIExpression()), !dbg !3895
  call void @llvm.dbg.declare(metadata i64* %__dummy243, metadata !3896, metadata !DIExpression()), !dbg !3895
  %cmp44 = icmp eq i64* %__dummy42, %__dummy243, !dbg !3895
  %conv45 = zext i1 %cmp44 to i32, !dbg !3895
  store i32 1, i32* %tmp46, align 4, !dbg !3895
  %31 = load i32, i32* %tmp46, align 4, !dbg !3895
  %call47 = call i64 @arch_local_irq_save() #11, !dbg !3897
  store i64 %call47, i64* %flags, align 8, !dbg !3897
  br label %do.end48, !dbg !3897

do.end48:                                         ; preds = %do.body41
  br label %do.end49, !dbg !3890

do.end49:                                         ; preds = %do.end48
  br label %do.body50, !dbg !3889

do.body50:                                        ; preds = %do.end49
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !3898, !srcloc !3899
  br label %do.body51, !dbg !3898

do.body51:                                        ; preds = %do.body50
  %32 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !3900
  %lock52 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %32, i32 0, i32 8, !dbg !3900
  store %struct.spinlock* %lock52, %struct.spinlock** %lock.addr.i125, align 8
  %33 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i125, align 8, !dbg !3901
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0, !dbg !3902
  %rlock.i126 = bitcast %union.anon.3* %34 to %struct.raw_spinlock*, !dbg !3902
  br label %do.end54, !dbg !3900

do.end54:                                         ; preds = %do.body51
  br label %do.end55, !dbg !3898

do.end55:                                         ; preds = %do.end54
  br label %do.end56, !dbg !3889

do.end56:                                         ; preds = %do.end55
  br label %do.end57, !dbg !3888

do.end57:                                         ; preds = %do.end56
  br label %do.end58, !dbg !3883

do.end58:                                         ; preds = %do.end57
  %call59 = call i64 @get_zeroed_page(i32 2592) #11, !dbg !3903
  %35 = inttoptr i64 %call59 to i8*, !dbg !3904
  store i8* %35, i8** %prop_buf, align 8, !dbg !3905
  %36 = load i8*, i8** %prop_buf, align 8, !dbg !3906
  %tobool60 = icmp ne i8* %36, null, !dbg !3906
  br i1 %tobool60, label %if.end65, label %if.then61, !dbg !3907

if.then61:                                        ; preds = %do.end58
  %37 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !3908
  %lock62 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %37, i32 0, i32 8, !dbg !3909
  %38 = load i64, i64* %flags, align 8, !dbg !3910
  store %struct.spinlock* %lock62, %struct.spinlock** %lock.addr.i127, align 8
  store i64 %38, i64* %flags.addr.i128, align 8
  call void @llvm.dbg.declare(metadata !162, metadata !3853, metadata !DIExpression()) #7, !dbg !3911
  call void @llvm.dbg.declare(metadata !162, metadata !3857, metadata !DIExpression()) #7, !dbg !3911
  store i32 1, i32* %tmp.i129, align 4, !dbg !3911
  %39 = load i32, i32* %tmp.i129, align 4, !dbg !3911
  call void @llvm.dbg.declare(metadata !162, metadata !3858, metadata !DIExpression()) #7, !dbg !3912
  call void @llvm.dbg.declare(metadata !162, metadata !3864, metadata !DIExpression()) #7, !dbg !3912
  store i32 1, i32* %tmp8.i130, align 4, !dbg !3912
  %40 = load i32, i32* %tmp8.i130, align 4, !dbg !3912
  %41 = load i64, i64* %flags.addr.i128, align 8, !dbg !3913
  call void @arch_local_irq_restore(i64 %41) #12, !dbg !3913
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !3914, !srcloc !3868
  %42 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i127, align 8, !dbg !3915
  %43 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %42, i32 0, i32 0, !dbg !3915
  %rlock.i131 = bitcast %union.anon.3* %43 to %struct.raw_spinlock*, !dbg !3915
  %44 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !3916
  %dev = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %44, i32 0, i32 3, !dbg !3916
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0)) #13, !dbg !3916
  %45 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !3917
  %dev63 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %45, i32 0, i32 3, !dbg !3918
  %kobj = getelementptr inbounds %struct.device, %struct.device* %dev63, i32 0, i32 0, !dbg !3919
  %call64 = call i32 @kobject_uevent(%struct.kobject* %kobj, i32 2) #11, !dbg !3920
  store i32 -12, i32* %retval, align 4, !dbg !3921
  br label %return, !dbg !3921

if.end65:                                         ; preds = %do.end58
  %46 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !3922
  %dev66 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %46, i32 0, i32 3, !dbg !3923
  %47 = load i8*, i8** %prop_buf, align 8, !dbg !3924
  %call67 = call i64 @name_show(%struct.device* %dev66, %struct.device_attribute* null, i8* %47) #11, !dbg !3925
  %conv68 = trunc i64 %call67 to i32, !dbg !3925
  store i32 %conv68, i32* %length, align 4, !dbg !3926
  %48 = load i32, i32* %length, align 4, !dbg !3927
  %cmp69 = icmp sgt i32 %48, 0, !dbg !3929
  br i1 %cmp69, label %if.then71, label %if.end86, !dbg !3930

if.then71:                                        ; preds = %if.end65
  %49 = load i8*, i8** %prop_buf, align 8, !dbg !3931
  %50 = load i32, i32* %length, align 4, !dbg !3934
  %sub = sub i32 %50, 1, !dbg !3935
  %idxprom72 = sext i32 %sub to i64, !dbg !3931
  %arrayidx73 = getelementptr i8, i8* %49, i64 %idxprom72, !dbg !3931
  %51 = load i8, i8* %arrayidx73, align 1, !dbg !3931
  %conv74 = sext i8 %51 to i32, !dbg !3931
  %cmp75 = icmp eq i32 %conv74, 10, !dbg !3936
  br i1 %cmp75, label %if.then77, label %if.end81, !dbg !3937

if.then77:                                        ; preds = %if.then71
  %52 = load i8*, i8** %prop_buf, align 8, !dbg !3938
  %53 = load i32, i32* %length, align 4, !dbg !3939
  %sub78 = sub i32 %53, 1, !dbg !3940
  %idxprom79 = sext i32 %sub78 to i64, !dbg !3938
  %arrayidx80 = getelementptr i8, i8* %52, i64 %idxprom79, !dbg !3938
  store i8 0, i8* %arrayidx80, align 1, !dbg !3941
  br label %if.end81, !dbg !3938

if.end81:                                         ; preds = %if.then77, %if.then71
  %arraydecay = getelementptr inbounds [120 x i8], [120 x i8]* %name_buf, i64 0, i64 0, !dbg !3942
  %54 = load i8*, i8** %prop_buf, align 8, !dbg !3943
  %call82 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 120, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i8* %54) #11, !dbg !3944
  %arraydecay83 = getelementptr inbounds [120 x i8], [120 x i8]* %name_buf, i64 0, i64 0, !dbg !3945
  %55 = load i32, i32* %env_offset, align 4, !dbg !3946
  %inc = add i32 %55, 1, !dbg !3946
  store i32 %inc, i32* %env_offset, align 4, !dbg !3946
  %idxprom84 = sext i32 %55 to i64, !dbg !3947
  %arrayidx85 = getelementptr [3 x i8*], [3 x i8*]* %envp, i64 0, i64 %idxprom84, !dbg !3947
  store i8* %arraydecay83, i8** %arrayidx85, align 8, !dbg !3948
  br label %if.end86, !dbg !3949

if.end86:                                         ; preds = %if.end81, %if.end65
  %56 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !3950
  %dev87 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %56, i32 0, i32 3, !dbg !3951
  %57 = load i8*, i8** %prop_buf, align 8, !dbg !3952
  %call88 = call i64 @state_show(%struct.device* %dev87, %struct.device_attribute* null, i8* %57) #11, !dbg !3953
  %conv89 = trunc i64 %call88 to i32, !dbg !3953
  store i32 %conv89, i32* %length, align 4, !dbg !3954
  %58 = load i32, i32* %length, align 4, !dbg !3955
  %cmp90 = icmp sgt i32 %58, 0, !dbg !3957
  br i1 %cmp90, label %if.then92, label %if.end110, !dbg !3958

if.then92:                                        ; preds = %if.end86
  %59 = load i8*, i8** %prop_buf, align 8, !dbg !3959
  %60 = load i32, i32* %length, align 4, !dbg !3962
  %sub93 = sub i32 %60, 1, !dbg !3963
  %idxprom94 = sext i32 %sub93 to i64, !dbg !3959
  %arrayidx95 = getelementptr i8, i8* %59, i64 %idxprom94, !dbg !3959
  %61 = load i8, i8* %arrayidx95, align 1, !dbg !3959
  %conv96 = sext i8 %61 to i32, !dbg !3959
  %cmp97 = icmp eq i32 %conv96, 10, !dbg !3964
  br i1 %cmp97, label %if.then99, label %if.end103, !dbg !3965

if.then99:                                        ; preds = %if.then92
  %62 = load i8*, i8** %prop_buf, align 8, !dbg !3966
  %63 = load i32, i32* %length, align 4, !dbg !3967
  %sub100 = sub i32 %63, 1, !dbg !3968
  %idxprom101 = sext i32 %sub100 to i64, !dbg !3966
  %arrayidx102 = getelementptr i8, i8* %62, i64 %idxprom101, !dbg !3966
  store i8 0, i8* %arrayidx102, align 1, !dbg !3969
  br label %if.end103, !dbg !3966

if.end103:                                        ; preds = %if.then99, %if.then92
  %arraydecay104 = getelementptr inbounds [120 x i8], [120 x i8]* %state_buf, i64 0, i64 0, !dbg !3970
  %64 = load i8*, i8** %prop_buf, align 8, !dbg !3971
  %call105 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay104, i64 120, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8* %64) #11, !dbg !3972
  %arraydecay106 = getelementptr inbounds [120 x i8], [120 x i8]* %state_buf, i64 0, i64 0, !dbg !3973
  %65 = load i32, i32* %env_offset, align 4, !dbg !3974
  %inc107 = add i32 %65, 1, !dbg !3974
  store i32 %inc107, i32* %env_offset, align 4, !dbg !3974
  %idxprom108 = sext i32 %65 to i64, !dbg !3975
  %arrayidx109 = getelementptr [3 x i8*], [3 x i8*]* %envp, i64 0, i64 %idxprom108, !dbg !3975
  store i8* %arraydecay106, i8** %arrayidx109, align 8, !dbg !3976
  br label %if.end110, !dbg !3977

if.end110:                                        ; preds = %if.end103, %if.end86
  %66 = load i32, i32* %env_offset, align 4, !dbg !3978
  %idxprom111 = sext i32 %66 to i64, !dbg !3979
  %arrayidx112 = getelementptr [3 x i8*], [3 x i8*]* %envp, i64 0, i64 %idxprom111, !dbg !3979
  store i8* null, i8** %arrayidx112, align 8, !dbg !3980
  %67 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !3981
  %lock113 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %67, i32 0, i32 8, !dbg !3982
  %68 = load i64, i64* %flags, align 8, !dbg !3983
  store %struct.spinlock* %lock113, %struct.spinlock** %lock.addr.i118, align 8
  store i64 %68, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !162, metadata !3853, metadata !DIExpression()) #7, !dbg !3984
  call void @llvm.dbg.declare(metadata !162, metadata !3857, metadata !DIExpression()) #7, !dbg !3984
  store i32 1, i32* %tmp.i, align 4, !dbg !3984
  %69 = load i32, i32* %tmp.i, align 4, !dbg !3984
  call void @llvm.dbg.declare(metadata !162, metadata !3858, metadata !DIExpression()) #7, !dbg !3985
  call void @llvm.dbg.declare(metadata !162, metadata !3864, metadata !DIExpression()) #7, !dbg !3985
  store i32 1, i32* %tmp8.i, align 4, !dbg !3985
  %70 = load i32, i32* %tmp8.i, align 4, !dbg !3985
  %71 = load i64, i64* %flags.addr.i, align 8, !dbg !3986
  call void @arch_local_irq_restore(i64 %71) #12, !dbg !3986
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !3987, !srcloc !3868
  %72 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i118, align 8, !dbg !3988
  %73 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %72, i32 0, i32 0, !dbg !3988
  %rlock.i119 = bitcast %union.anon.3* %73 to %struct.raw_spinlock*, !dbg !3988
  %74 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !3989
  %dev114 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %74, i32 0, i32 3, !dbg !3990
  %kobj115 = getelementptr inbounds %struct.device, %struct.device* %dev114, i32 0, i32 0, !dbg !3991
  %arraydecay116 = getelementptr inbounds [3 x i8*], [3 x i8*]* %envp, i64 0, i64 0, !dbg !3992
  %call117 = call i32 @kobject_uevent_env(%struct.kobject* %kobj115, i32 2, i8** %arraydecay116) #11, !dbg !3993
  %75 = load i8*, i8** %prop_buf, align 8, !dbg !3994
  %76 = ptrtoint i8* %75 to i64, !dbg !3994
  call void @free_pages(i64 %76, i32 0) #11, !dbg !3994
  store i32 0, i32* %retval, align 4, !dbg !3995
  br label %return, !dbg !3995

return:                                           ; preds = %if.end110, %if.then61, %if.then1, %if.then
  %77 = load i32, i32* %retval, align 4, !dbg !3996
  ret i32 %77, !dbg !3996
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @find_cable_index_by_id(%struct.extcon_dev* %edev, i32 %id) #0 !dbg !3997 {
entry:
  %retval = alloca i32, align 4
  %edev.addr = alloca %struct.extcon_dev*, align 8
  %id.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.extcon_dev* %edev, %struct.extcon_dev** %edev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev.addr, metadata !4000, metadata !DIExpression()), !dbg !4001
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !4002, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4004, metadata !DIExpression()), !dbg !4005
  store i32 0, i32* %i, align 4, !dbg !4006
  br label %for.cond, !dbg !4008

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4009
  %1 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4011
  %max_supported = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %1, i32 0, i32 7, !dbg !4012
  %2 = load i32, i32* %max_supported, align 8, !dbg !4012
  %cmp = icmp slt i32 %0, %2, !dbg !4013
  br i1 %cmp, label %for.body, label %for.end, !dbg !4014

for.body:                                         ; preds = %for.cond
  %3 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4015
  %supported_cable = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %3, i32 0, i32 1, !dbg !4018
  %4 = load i32*, i32** %supported_cable, align 8, !dbg !4018
  %5 = load i32, i32* %i, align 4, !dbg !4019
  %idxprom = sext i32 %5 to i64, !dbg !4015
  %arrayidx = getelementptr i32, i32* %4, i64 %idxprom, !dbg !4015
  %6 = load i32, i32* %arrayidx, align 4, !dbg !4015
  %7 = load i32, i32* %id.addr, align 4, !dbg !4020
  %cmp1 = icmp eq i32 %6, %7, !dbg !4021
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4022

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !4023
  store i32 %8, i32* %retval, align 4, !dbg !4024
  br label %return, !dbg !4024

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4025

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4, !dbg !4026
  %inc = add i32 %9, 1, !dbg !4026
  store i32 %inc, i32* %i, align 4, !dbg !4026
  br label %for.cond, !dbg !4027, !llvm.loop !4028

for.end:                                          ; preds = %for.cond
  store i32 -22, i32* %retval, align 4, !dbg !4030
  br label %return, !dbg !4030

return:                                           ; preds = %for.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !4031
  ret i32 %10, !dbg !4031
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !4032 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !4036, metadata !DIExpression()), !dbg !4037
  %call = call i64 @arch_local_save_flags() #11, !dbg !4038
  store i64 %call, i64* %f, align 8, !dbg !4039
  call void @arch_local_irq_disable() #11, !dbg !4040
  %0 = load i64, i64* %f, align 8, !dbg !4041
  ret i64 %0, !dbg !4042
}

; Function Attrs: noredzone
declare dso_local i32 @raw_notifier_call_chain(%struct.raw_notifier_head*, i64, i8*) #2

; Function Attrs: noredzone
declare dso_local i64 @get_zeroed_page(i32) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local i32 @kobject_uevent(%struct.kobject*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @name_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !4043 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %edev = alloca %struct.extcon_dev*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4044, metadata !DIExpression()), !dbg !4045
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !4046, metadata !DIExpression()), !dbg !4047
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !4048, metadata !DIExpression()), !dbg !4049
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev, metadata !4050, metadata !DIExpression()), !dbg !4051
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4052
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #11, !dbg !4053
  %1 = bitcast i8* %call to %struct.extcon_dev*, !dbg !4053
  store %struct.extcon_dev* %1, %struct.extcon_dev** %edev, align 8, !dbg !4051
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !4054
  %3 = load %struct.extcon_dev*, %struct.extcon_dev** %edev, align 8, !dbg !4055
  %name = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %3, i32 0, i32 0, !dbg !4056
  %4 = load i8*, i8** %name, align 8, !dbg !4056
  %call1 = call i32 (i8*, i8*, ...) @sprintf(i8* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* %4) #11, !dbg !4057
  %conv = sext i32 %call1 to i64, !dbg !4057
  ret i64 %conv, !dbg !4058
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @state_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !4059 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %count = alloca i32, align 4
  %edev = alloca %struct.extcon_dev*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4060, metadata !DIExpression()), !dbg !4061
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !4062, metadata !DIExpression()), !dbg !4063
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !4064, metadata !DIExpression()), !dbg !4065
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4066, metadata !DIExpression()), !dbg !4067
  call void @llvm.dbg.declare(metadata i32* %count, metadata !4068, metadata !DIExpression()), !dbg !4069
  store i32 0, i32* %count, align 4, !dbg !4069
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev, metadata !4070, metadata !DIExpression()), !dbg !4071
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4072
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #11, !dbg !4073
  %1 = bitcast i8* %call to %struct.extcon_dev*, !dbg !4073
  store %struct.extcon_dev* %1, %struct.extcon_dev** %edev, align 8, !dbg !4071
  %2 = load %struct.extcon_dev*, %struct.extcon_dev** %edev, align 8, !dbg !4074
  %max_supported = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %2, i32 0, i32 7, !dbg !4076
  %3 = load i32, i32* %max_supported, align 8, !dbg !4076
  %cmp = icmp eq i32 %3, 0, !dbg !4077
  br i1 %cmp, label %if.then, label %if.end, !dbg !4078

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !4079
  %5 = load %struct.extcon_dev*, %struct.extcon_dev** %edev, align 8, !dbg !4080
  %state = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %5, i32 0, i32 9, !dbg !4081
  %6 = load i32, i32* %state, align 4, !dbg !4081
  %call1 = call i32 (i8*, i8*, ...) @sprintf(i8* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i32 %6) #11, !dbg !4082
  %conv = sext i32 %call1 to i64, !dbg !4082
  store i64 %conv, i64* %retval, align 8, !dbg !4083
  br label %return, !dbg !4083

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !4084
  br label %for.cond, !dbg !4086

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %i, align 4, !dbg !4087
  %8 = load %struct.extcon_dev*, %struct.extcon_dev** %edev, align 8, !dbg !4089
  %max_supported2 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %8, i32 0, i32 7, !dbg !4090
  %9 = load i32, i32* %max_supported2, align 8, !dbg !4090
  %cmp3 = icmp slt i32 %7, %9, !dbg !4091
  br i1 %cmp3, label %for.body, label %for.end, !dbg !4092

for.body:                                         ; preds = %for.cond
  %10 = load i8*, i8** %buf.addr, align 8, !dbg !4093
  %11 = load i32, i32* %count, align 4, !dbg !4095
  %idx.ext = sext i32 %11 to i64, !dbg !4096
  %add.ptr = getelementptr i8, i8* %10, i64 %idx.ext, !dbg !4096
  %12 = load %struct.extcon_dev*, %struct.extcon_dev** %edev, align 8, !dbg !4097
  %supported_cable = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %12, i32 0, i32 1, !dbg !4098
  %13 = load i32*, i32** %supported_cable, align 8, !dbg !4098
  %14 = load i32, i32* %i, align 4, !dbg !4099
  %idxprom = sext i32 %14 to i64, !dbg !4097
  %arrayidx = getelementptr i32, i32* %13, i64 %idxprom, !dbg !4097
  %15 = load i32, i32* %arrayidx, align 4, !dbg !4097
  %idxprom5 = zext i32 %15 to i64, !dbg !4100
  %arrayidx6 = getelementptr [64 x %struct.__extcon_info], [64 x %struct.__extcon_info]* @extcon_info, i64 0, i64 %idxprom5, !dbg !4100
  %name = getelementptr inbounds %struct.__extcon_info, %struct.__extcon_info* %arrayidx6, i32 0, i32 2, !dbg !4101
  %16 = load i8*, i8** %name, align 8, !dbg !4101
  %17 = load %struct.extcon_dev*, %struct.extcon_dev** %edev, align 8, !dbg !4102
  %state7 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %17, i32 0, i32 9, !dbg !4103
  %18 = load i32, i32* %state7, align 4, !dbg !4103
  %conv8 = zext i32 %18 to i64, !dbg !4102
  %19 = load i32, i32* %i, align 4, !dbg !4104
  %sh_prom = zext i32 %19 to i64, !dbg !4104
  %shl = shl i64 1, %sh_prom, !dbg !4104
  %and = and i64 %conv8, %shl, !dbg !4105
  %tobool = icmp ne i64 %and, 0, !dbg !4106
  %lnot = xor i1 %tobool, true, !dbg !4106
  %lnot9 = xor i1 %lnot, true, !dbg !4107
  %lnot.ext = zext i1 %lnot9 to i32, !dbg !4107
  %call10 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0), i8* %16, i32 %lnot.ext) #11, !dbg !4108
  %20 = load i32, i32* %count, align 4, !dbg !4109
  %add = add i32 %20, %call10, !dbg !4109
  store i32 %add, i32* %count, align 4, !dbg !4109
  br label %for.inc, !dbg !4110

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !4111
  %inc = add i32 %21, 1, !dbg !4111
  store i32 %inc, i32* %i, align 4, !dbg !4111
  br label %for.cond, !dbg !4112, !llvm.loop !4113

for.end:                                          ; preds = %for.cond
  %22 = load i32, i32* %count, align 4, !dbg !4115
  %conv11 = sext i32 %22 to i64, !dbg !4115
  store i64 %conv11, i64* %retval, align 8, !dbg !4116
  br label %return, !dbg !4116

return:                                           ; preds = %for.end, %if.then
  %23 = load i64, i64* %retval, align 8, !dbg !4117
  ret i64 %23, !dbg !4117
}

; Function Attrs: noredzone
declare dso_local i32 @kobject_uevent_env(%struct.kobject*, i32, i8**) #2

; Function Attrs: noredzone
declare dso_local void @free_pages(i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @extcon_get_state(%struct.extcon_dev* %edev, i32 %id) #0 !dbg !4118 {
entry:
  %lock.addr.i26 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i26, metadata !3746, metadata !DIExpression()), !dbg !4119
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !3756, metadata !DIExpression()), !dbg !4121
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !3758, metadata !DIExpression()), !dbg !4122
  %retval = alloca i32, align 4
  %edev.addr = alloca %struct.extcon_dev*, align 8
  %id.addr = alloca i32, align 4
  %index = alloca i32, align 4
  %state = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  store %struct.extcon_dev* %edev, %struct.extcon_dev** %edev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev.addr, metadata !4129, metadata !DIExpression()), !dbg !4130
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !4131, metadata !DIExpression()), !dbg !4132
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4133, metadata !DIExpression()), !dbg !4134
  call void @llvm.dbg.declare(metadata i32* %state, metadata !4135, metadata !DIExpression()), !dbg !4136
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4137, metadata !DIExpression()), !dbg !4138
  %0 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4139
  %tobool = icmp ne %struct.extcon_dev* %0, null, !dbg !4139
  br i1 %tobool, label %if.end, label %if.then, !dbg !4141

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !4142
  br label %return, !dbg !4142

if.end:                                           ; preds = %entry
  %1 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4143
  %2 = load i32, i32* %id.addr, align 4, !dbg !4144
  %call = call i32 @find_cable_index_by_id(%struct.extcon_dev* %1, i32 %2) #11, !dbg !4145
  store i32 %call, i32* %index, align 4, !dbg !4146
  %3 = load i32, i32* %index, align 4, !dbg !4147
  %cmp = icmp slt i32 %3, 0, !dbg !4149
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !4150

if.then1:                                         ; preds = %if.end
  %4 = load i32, i32* %index, align 4, !dbg !4151
  store i32 %4, i32* %retval, align 4, !dbg !4152
  br label %return, !dbg !4152

if.end2:                                          ; preds = %if.end
  br label %do.body, !dbg !4153

do.body:                                          ; preds = %if.end2
  br label %do.body3, !dbg !4154

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4155, metadata !DIExpression()), !dbg !4157
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4158, metadata !DIExpression()), !dbg !4157
  %cmp4 = icmp eq i64* %__dummy, %__dummy2, !dbg !4157
  %conv = zext i1 %cmp4 to i32, !dbg !4157
  store i32 1, i32* %tmp, align 4, !dbg !4157
  %5 = load i32, i32* %tmp, align 4, !dbg !4157
  br label %do.body5, !dbg !4159

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !4160

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !4161

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !4163, metadata !DIExpression()), !dbg !4166
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !4167, metadata !DIExpression()), !dbg !4166
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !4166
  %conv11 = zext i1 %cmp10 to i32, !dbg !4166
  store i32 1, i32* %tmp12, align 4, !dbg !4166
  %6 = load i32, i32* %tmp12, align 4, !dbg !4166
  %call13 = call i64 @arch_local_irq_save() #11, !dbg !4168
  store i64 %call13, i64* %flags, align 8, !dbg !4168
  br label %do.end, !dbg !4168

do.end:                                           ; preds = %do.body7
  br label %do.end14, !dbg !4161

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !4160

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4169, !srcloc !4170
  br label %do.body16, !dbg !4169

do.body16:                                        ; preds = %do.body15
  %7 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4171
  %lock = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %7, i32 0, i32 8, !dbg !4171
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4172
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !4173
  %rlock.i = bitcast %union.anon.3* %9 to %struct.raw_spinlock*, !dbg !4173
  br label %do.end18, !dbg !4171

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !4169

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !4160

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !4159

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !4154

do.end22:                                         ; preds = %do.end21
  %10 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4174
  %11 = load i32, i32* %index, align 4, !dbg !4175
  %call23 = call zeroext i1 @is_extcon_attached(%struct.extcon_dev* %10, i32 %11) #11, !dbg !4176
  %conv24 = zext i1 %call23 to i32, !dbg !4176
  store i32 %conv24, i32* %state, align 4, !dbg !4177
  %12 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4178
  %lock25 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %12, i32 0, i32 8, !dbg !4179
  %13 = load i64, i64* %flags, align 8, !dbg !4180
  store %struct.spinlock* %lock25, %struct.spinlock** %lock.addr.i26, align 8
  store i64 %13, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !162, metadata !3853, metadata !DIExpression()) #7, !dbg !4181
  call void @llvm.dbg.declare(metadata !162, metadata !3857, metadata !DIExpression()) #7, !dbg !4181
  store i32 1, i32* %tmp.i, align 4, !dbg !4181
  %14 = load i32, i32* %tmp.i, align 4, !dbg !4181
  call void @llvm.dbg.declare(metadata !162, metadata !3858, metadata !DIExpression()) #7, !dbg !4182
  call void @llvm.dbg.declare(metadata !162, metadata !3864, metadata !DIExpression()) #7, !dbg !4182
  store i32 1, i32* %tmp8.i, align 4, !dbg !4182
  %15 = load i32, i32* %tmp8.i, align 4, !dbg !4182
  %16 = load i64, i64* %flags.addr.i, align 8, !dbg !4183
  call void @arch_local_irq_restore(i64 %16) #12, !dbg !4183
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4184, !srcloc !3868
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i26, align 8, !dbg !4185
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !4185
  %rlock.i27 = bitcast %union.anon.3* %18 to %struct.raw_spinlock*, !dbg !4185
  %19 = load i32, i32* %state, align 4, !dbg !4186
  store i32 %19, i32* %retval, align 4, !dbg !4187
  br label %return, !dbg !4187

return:                                           ; preds = %do.end22, %if.then1, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !4188
  ret i32 %20, !dbg !4188
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_extcon_attached(%struct.extcon_dev* %edev, i32 %index) #0 !dbg !4189 {
entry:
  %edev.addr = alloca %struct.extcon_dev*, align 8
  %index.addr = alloca i32, align 4
  store %struct.extcon_dev* %edev, %struct.extcon_dev** %edev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev.addr, metadata !4192, metadata !DIExpression()), !dbg !4193
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4194, metadata !DIExpression()), !dbg !4195
  %0 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4196
  %state = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %0, i32 0, i32 9, !dbg !4197
  %1 = load i32, i32* %state, align 4, !dbg !4197
  %conv = zext i32 %1 to i64, !dbg !4196
  %2 = load i32, i32* %index.addr, align 4, !dbg !4198
  %sh_prom = zext i32 %2 to i64, !dbg !4198
  %shl = shl i64 1, %sh_prom, !dbg !4198
  %and = and i64 %conv, %shl, !dbg !4199
  %tobool = icmp ne i64 %and, 0, !dbg !4200
  %lnot = xor i1 %tobool, true, !dbg !4200
  %lnot1 = xor i1 %lnot, true, !dbg !4201
  ret i1 %lnot1, !dbg !4202
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @extcon_set_state(%struct.extcon_dev* %edev, i32 %id, i1 zeroext %state) #0 !dbg !4203 {
entry:
  %lock.addr.i59 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i59, metadata !3746, metadata !DIExpression()), !dbg !4206
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !3756, metadata !DIExpression()), !dbg !4208
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !3758, metadata !DIExpression()), !dbg !4209
  %retval = alloca i32, align 4
  %edev.addr = alloca %struct.extcon_dev*, align 8
  %id.addr = alloca i32, align 4
  %state.addr = alloca i8, align 1
  %flags = alloca i64, align 8
  %index = alloca i32, align 4
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  store %struct.extcon_dev* %edev, %struct.extcon_dev** %edev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev.addr, metadata !4216, metadata !DIExpression()), !dbg !4217
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !4218, metadata !DIExpression()), !dbg !4219
  %frombool = zext i1 %state to i8
  store i8 %frombool, i8* %state.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %state.addr, metadata !4220, metadata !DIExpression()), !dbg !4221
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4222, metadata !DIExpression()), !dbg !4223
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4224, metadata !DIExpression()), !dbg !4225
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4226, metadata !DIExpression()), !dbg !4227
  store i32 0, i32* %ret, align 4, !dbg !4227
  %0 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4228
  %tobool = icmp ne %struct.extcon_dev* %0, null, !dbg !4228
  br i1 %tobool, label %if.end, label %if.then, !dbg !4230

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !4231
  br label %return, !dbg !4231

if.end:                                           ; preds = %entry
  %1 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4232
  %2 = load i32, i32* %id.addr, align 4, !dbg !4233
  %call = call i32 @find_cable_index_by_id(%struct.extcon_dev* %1, i32 %2) #11, !dbg !4234
  store i32 %call, i32* %index, align 4, !dbg !4235
  %3 = load i32, i32* %index, align 4, !dbg !4236
  %cmp = icmp slt i32 %3, 0, !dbg !4238
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !4239

if.then1:                                         ; preds = %if.end
  %4 = load i32, i32* %index, align 4, !dbg !4240
  store i32 %4, i32* %retval, align 4, !dbg !4241
  br label %return, !dbg !4241

if.end2:                                          ; preds = %if.end
  br label %do.body, !dbg !4242

do.body:                                          ; preds = %if.end2
  br label %do.body3, !dbg !4243

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4244, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4247, metadata !DIExpression()), !dbg !4246
  %cmp4 = icmp eq i64* %__dummy, %__dummy2, !dbg !4246
  %conv = zext i1 %cmp4 to i32, !dbg !4246
  store i32 1, i32* %tmp, align 4, !dbg !4246
  %5 = load i32, i32* %tmp, align 4, !dbg !4246
  br label %do.body5, !dbg !4248

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !4249

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !4250

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !4252, metadata !DIExpression()), !dbg !4255
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !4256, metadata !DIExpression()), !dbg !4255
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !4255
  %conv11 = zext i1 %cmp10 to i32, !dbg !4255
  store i32 1, i32* %tmp12, align 4, !dbg !4255
  %6 = load i32, i32* %tmp12, align 4, !dbg !4255
  %call13 = call i64 @arch_local_irq_save() #11, !dbg !4257
  store i64 %call13, i64* %flags, align 8, !dbg !4257
  br label %do.end, !dbg !4257

do.end:                                           ; preds = %do.body7
  br label %do.end14, !dbg !4250

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !4249

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4258, !srcloc !4259
  br label %do.body16, !dbg !4258

do.body16:                                        ; preds = %do.body15
  %7 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4260
  %lock = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %7, i32 0, i32 8, !dbg !4260
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4261
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !4262
  %rlock.i = bitcast %union.anon.3* %9 to %struct.raw_spinlock*, !dbg !4262
  br label %do.end18, !dbg !4260

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !4258

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !4249

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !4248

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !4243

do.end22:                                         ; preds = %do.end21
  %10 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4263
  %11 = load i32, i32* %index, align 4, !dbg !4265
  %12 = load i8, i8* %state.addr, align 1, !dbg !4266
  %tobool23 = trunc i8 %12 to i1, !dbg !4266
  %call24 = call zeroext i1 @is_extcon_changed(%struct.extcon_dev* %10, i32 %11, i1 zeroext %tobool23) #11, !dbg !4267
  br i1 %call24, label %if.end26, label %if.then25, !dbg !4268

if.then25:                                        ; preds = %do.end22
  br label %out, !dbg !4269

if.end26:                                         ; preds = %do.end22
  %13 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4270
  %14 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4272
  %state27 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %14, i32 0, i32 9, !dbg !4273
  %15 = load i32, i32* %state27, align 4, !dbg !4273
  %conv28 = zext i32 %15 to i64, !dbg !4272
  %16 = load i32, i32* %index, align 4, !dbg !4274
  %sh_prom = zext i32 %16 to i64, !dbg !4274
  %shl = shl i64 1, %sh_prom, !dbg !4274
  %neg = xor i64 %shl, -1, !dbg !4275
  %and = and i64 %conv28, %neg, !dbg !4276
  %17 = load i8, i8* %state.addr, align 1, !dbg !4277
  %tobool29 = trunc i8 %17 to i1, !dbg !4277
  %conv30 = zext i1 %tobool29 to i64, !dbg !4277
  %18 = load i32, i32* %index, align 4, !dbg !4278
  %sh_prom31 = zext i32 %18 to i64, !dbg !4278
  %shl32 = shl i64 1, %sh_prom31, !dbg !4278
  %and33 = and i64 %conv30, %shl32, !dbg !4279
  %or = or i64 %and, %and33, !dbg !4280
  %conv34 = trunc i64 %or to i32, !dbg !4281
  %call35 = call i32 @check_mutually_exclusive(%struct.extcon_dev* %13, i32 %conv34) #11, !dbg !4282
  %tobool36 = icmp ne i32 %call35, 0, !dbg !4282
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !4283

if.then37:                                        ; preds = %if.end26
  store i32 -1, i32* %ret, align 4, !dbg !4284
  br label %out, !dbg !4286

if.end38:                                         ; preds = %if.end26
  %19 = load i8, i8* %state.addr, align 1, !dbg !4287
  %tobool39 = trunc i8 %19 to i1, !dbg !4287
  br i1 %tobool39, label %if.end41, label %if.then40, !dbg !4289

if.then40:                                        ; preds = %if.end38
  %20 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4290
  %21 = load i32, i32* %id.addr, align 4, !dbg !4291
  %22 = load i32, i32* %index, align 4, !dbg !4292
  call void @init_property(%struct.extcon_dev* %20, i32 %21, i32 %22) #11, !dbg !4293
  br label %if.end41, !dbg !4293

if.end41:                                         ; preds = %if.then40, %if.end38
  %23 = load i8, i8* %state.addr, align 1, !dbg !4294
  %tobool42 = trunc i8 %23 to i1, !dbg !4294
  br i1 %tobool42, label %if.then43, label %if.else, !dbg !4296

if.then43:                                        ; preds = %if.end41
  %24 = load i32, i32* %index, align 4, !dbg !4297
  %sh_prom44 = zext i32 %24 to i64, !dbg !4297
  %shl45 = shl i64 1, %sh_prom44, !dbg !4297
  %25 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4298
  %state46 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %25, i32 0, i32 9, !dbg !4299
  %26 = load i32, i32* %state46, align 4, !dbg !4300
  %conv47 = zext i32 %26 to i64, !dbg !4300
  %or48 = or i64 %conv47, %shl45, !dbg !4300
  %conv49 = trunc i64 %or48 to i32, !dbg !4300
  store i32 %conv49, i32* %state46, align 4, !dbg !4300
  br label %if.end57, !dbg !4298

if.else:                                          ; preds = %if.end41
  %27 = load i32, i32* %index, align 4, !dbg !4301
  %sh_prom50 = zext i32 %27 to i64, !dbg !4301
  %shl51 = shl i64 1, %sh_prom50, !dbg !4301
  %neg52 = xor i64 %shl51, -1, !dbg !4302
  %28 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4303
  %state53 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %28, i32 0, i32 9, !dbg !4304
  %29 = load i32, i32* %state53, align 4, !dbg !4305
  %conv54 = zext i32 %29 to i64, !dbg !4305
  %and55 = and i64 %conv54, %neg52, !dbg !4305
  %conv56 = trunc i64 %and55 to i32, !dbg !4305
  store i32 %conv56, i32* %state53, align 4, !dbg !4305
  br label %if.end57

if.end57:                                         ; preds = %if.else, %if.then43
  br label %out, !dbg !4294

out:                                              ; preds = %if.end57, %if.then37, %if.then25
  call void @llvm.dbg.label(metadata !4306), !dbg !4307
  %30 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4308
  %lock58 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %30, i32 0, i32 8, !dbg !4309
  %31 = load i64, i64* %flags, align 8, !dbg !4310
  store %struct.spinlock* %lock58, %struct.spinlock** %lock.addr.i59, align 8
  store i64 %31, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !162, metadata !3853, metadata !DIExpression()) #7, !dbg !4311
  call void @llvm.dbg.declare(metadata !162, metadata !3857, metadata !DIExpression()) #7, !dbg !4311
  store i32 1, i32* %tmp.i, align 4, !dbg !4311
  %32 = load i32, i32* %tmp.i, align 4, !dbg !4311
  call void @llvm.dbg.declare(metadata !162, metadata !3858, metadata !DIExpression()) #7, !dbg !4312
  call void @llvm.dbg.declare(metadata !162, metadata !3864, metadata !DIExpression()) #7, !dbg !4312
  store i32 1, i32* %tmp8.i, align 4, !dbg !4312
  %33 = load i32, i32* %tmp8.i, align 4, !dbg !4312
  %34 = load i64, i64* %flags.addr.i, align 8, !dbg !4313
  call void @arch_local_irq_restore(i64 %34) #12, !dbg !4313
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4314, !srcloc !3868
  %35 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i59, align 8, !dbg !4315
  %36 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %35, i32 0, i32 0, !dbg !4315
  %rlock.i60 = bitcast %union.anon.3* %36 to %struct.raw_spinlock*, !dbg !4315
  %37 = load i32, i32* %ret, align 4, !dbg !4316
  store i32 %37, i32* %retval, align 4, !dbg !4317
  br label %return, !dbg !4317

return:                                           ; preds = %out, %if.then1, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !4318
  ret i32 %38, !dbg !4318
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_extcon_changed(%struct.extcon_dev* %edev, i32 %index, i1 zeroext %new_state) #0 !dbg !4319 {
entry:
  %edev.addr = alloca %struct.extcon_dev*, align 8
  %index.addr = alloca i32, align 4
  %new_state.addr = alloca i8, align 1
  %state = alloca i32, align 4
  store %struct.extcon_dev* %edev, %struct.extcon_dev** %edev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev.addr, metadata !4322, metadata !DIExpression()), !dbg !4323
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4324, metadata !DIExpression()), !dbg !4325
  %frombool = zext i1 %new_state to i8
  store i8 %frombool, i8* %new_state.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %new_state.addr, metadata !4326, metadata !DIExpression()), !dbg !4327
  call void @llvm.dbg.declare(metadata i32* %state, metadata !4328, metadata !DIExpression()), !dbg !4329
  %0 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4330
  %state1 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %0, i32 0, i32 9, !dbg !4331
  %1 = load i32, i32* %state1, align 4, !dbg !4331
  %conv = zext i32 %1 to i64, !dbg !4330
  %2 = load i32, i32* %index.addr, align 4, !dbg !4332
  %sh_prom = zext i32 %2 to i64, !dbg !4332
  %shl = shl i64 1, %sh_prom, !dbg !4332
  %and = and i64 %conv, %shl, !dbg !4333
  %tobool = icmp ne i64 %and, 0, !dbg !4334
  %lnot = xor i1 %tobool, true, !dbg !4334
  %lnot2 = xor i1 %lnot, true, !dbg !4335
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !4335
  store i32 %lnot.ext, i32* %state, align 4, !dbg !4329
  %3 = load i32, i32* %state, align 4, !dbg !4336
  %4 = load i8, i8* %new_state.addr, align 1, !dbg !4337
  %tobool3 = trunc i8 %4 to i1, !dbg !4337
  %conv4 = zext i1 %tobool3 to i32, !dbg !4337
  %cmp = icmp ne i32 %3, %conv4, !dbg !4338
  ret i1 %cmp, !dbg !4339
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @check_mutually_exclusive(%struct.extcon_dev* %edev, i32 %new_state) #0 !dbg !4340 {
entry:
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !4343, metadata !DIExpression()), !dbg !4348
  %res.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i, metadata !4353, metadata !DIExpression()), !dbg !4354
  %retval = alloca i32, align 4
  %edev.addr = alloca %struct.extcon_dev*, align 8
  %new_state.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %weight = alloca i32, align 4
  %correspondants = alloca i32, align 4
  store %struct.extcon_dev* %edev, %struct.extcon_dev** %edev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev.addr, metadata !4355, metadata !DIExpression()), !dbg !4356
  store i32 %new_state, i32* %new_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_state.addr, metadata !4357, metadata !DIExpression()), !dbg !4358
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4359, metadata !DIExpression()), !dbg !4360
  store i32 0, i32* %i, align 4, !dbg !4360
  %0 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4361
  %mutually_exclusive = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %0, i32 0, i32 2, !dbg !4363
  %1 = load i32*, i32** %mutually_exclusive, align 8, !dbg !4363
  %tobool = icmp ne i32* %1, null, !dbg !4361
  br i1 %tobool, label %if.end, label %if.then, !dbg !4364

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4365
  br label %return, !dbg !4365

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !4366
  br label %for.cond, !dbg !4367

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4368
  %mutually_exclusive1 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %2, i32 0, i32 2, !dbg !4369
  %3 = load i32*, i32** %mutually_exclusive1, align 8, !dbg !4369
  %4 = load i32, i32* %i, align 4, !dbg !4370
  %idxprom = sext i32 %4 to i64, !dbg !4368
  %arrayidx = getelementptr i32, i32* %3, i64 %idxprom, !dbg !4368
  %5 = load i32, i32* %arrayidx, align 4, !dbg !4368
  %tobool2 = icmp ne i32 %5, 0, !dbg !4371
  br i1 %tobool2, label %for.body, label %for.end, !dbg !4371

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %weight, metadata !4372, metadata !DIExpression()), !dbg !4373
  call void @llvm.dbg.declare(metadata i32* %correspondants, metadata !4374, metadata !DIExpression()), !dbg !4375
  %6 = load i32, i32* %new_state.addr, align 4, !dbg !4376
  %7 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4377
  %mutually_exclusive3 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %7, i32 0, i32 2, !dbg !4378
  %8 = load i32*, i32** %mutually_exclusive3, align 8, !dbg !4378
  %9 = load i32, i32* %i, align 4, !dbg !4379
  %idxprom4 = sext i32 %9 to i64, !dbg !4377
  %arrayidx5 = getelementptr i32, i32* %8, i64 %idxprom4, !dbg !4377
  %10 = load i32, i32* %arrayidx5, align 4, !dbg !4377
  %and = and i32 %6, %10, !dbg !4380
  store i32 %and, i32* %correspondants, align 4, !dbg !4375
  %11 = load i32, i32* %correspondants, align 4, !dbg !4381
  %12 = call i1 @llvm.is.constant.i32(i32 %11), !dbg !4381
  br i1 %12, label %cond.true, label %cond.false, !dbg !4381

cond.true:                                        ; preds = %for.body
  %13 = load i32, i32* %correspondants, align 4, !dbg !4381
  %conv = zext i32 %13 to i64, !dbg !4381
  %and6 = and i64 %conv, 1, !dbg !4381
  %tobool7 = icmp ne i64 %and6, 0, !dbg !4381
  %lnot = xor i1 %tobool7, true, !dbg !4381
  %lnot8 = xor i1 %lnot, true, !dbg !4381
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !4381
  %14 = load i32, i32* %correspondants, align 4, !dbg !4381
  %conv9 = zext i32 %14 to i64, !dbg !4381
  %and10 = and i64 %conv9, 2, !dbg !4381
  %tobool11 = icmp ne i64 %and10, 0, !dbg !4381
  %lnot12 = xor i1 %tobool11, true, !dbg !4381
  %lnot14 = xor i1 %lnot12, true, !dbg !4381
  %lnot.ext15 = zext i1 %lnot14 to i32, !dbg !4381
  %add = add i32 %lnot.ext, %lnot.ext15, !dbg !4381
  %15 = load i32, i32* %correspondants, align 4, !dbg !4381
  %conv16 = zext i32 %15 to i64, !dbg !4381
  %and17 = and i64 %conv16, 4, !dbg !4381
  %tobool18 = icmp ne i64 %and17, 0, !dbg !4381
  %lnot19 = xor i1 %tobool18, true, !dbg !4381
  %lnot21 = xor i1 %lnot19, true, !dbg !4381
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !4381
  %add23 = add i32 %add, %lnot.ext22, !dbg !4381
  %16 = load i32, i32* %correspondants, align 4, !dbg !4381
  %conv24 = zext i32 %16 to i64, !dbg !4381
  %and25 = and i64 %conv24, 8, !dbg !4381
  %tobool26 = icmp ne i64 %and25, 0, !dbg !4381
  %lnot27 = xor i1 %tobool26, true, !dbg !4381
  %lnot29 = xor i1 %lnot27, true, !dbg !4381
  %lnot.ext30 = zext i1 %lnot29 to i32, !dbg !4381
  %add31 = add i32 %add23, %lnot.ext30, !dbg !4381
  %17 = load i32, i32* %correspondants, align 4, !dbg !4381
  %conv32 = zext i32 %17 to i64, !dbg !4381
  %and33 = and i64 %conv32, 16, !dbg !4381
  %tobool34 = icmp ne i64 %and33, 0, !dbg !4381
  %lnot35 = xor i1 %tobool34, true, !dbg !4381
  %lnot37 = xor i1 %lnot35, true, !dbg !4381
  %lnot.ext38 = zext i1 %lnot37 to i32, !dbg !4381
  %add39 = add i32 %add31, %lnot.ext38, !dbg !4381
  %18 = load i32, i32* %correspondants, align 4, !dbg !4381
  %conv40 = zext i32 %18 to i64, !dbg !4381
  %and41 = and i64 %conv40, 32, !dbg !4381
  %tobool42 = icmp ne i64 %and41, 0, !dbg !4381
  %lnot43 = xor i1 %tobool42, true, !dbg !4381
  %lnot45 = xor i1 %lnot43, true, !dbg !4381
  %lnot.ext46 = zext i1 %lnot45 to i32, !dbg !4381
  %add47 = add i32 %add39, %lnot.ext46, !dbg !4381
  %19 = load i32, i32* %correspondants, align 4, !dbg !4381
  %conv48 = zext i32 %19 to i64, !dbg !4381
  %and49 = and i64 %conv48, 64, !dbg !4381
  %tobool50 = icmp ne i64 %and49, 0, !dbg !4381
  %lnot51 = xor i1 %tobool50, true, !dbg !4381
  %lnot53 = xor i1 %lnot51, true, !dbg !4381
  %lnot.ext54 = zext i1 %lnot53 to i32, !dbg !4381
  %add55 = add i32 %add47, %lnot.ext54, !dbg !4381
  %20 = load i32, i32* %correspondants, align 4, !dbg !4381
  %conv56 = zext i32 %20 to i64, !dbg !4381
  %and57 = and i64 %conv56, 128, !dbg !4381
  %tobool58 = icmp ne i64 %and57, 0, !dbg !4381
  %lnot59 = xor i1 %tobool58, true, !dbg !4381
  %lnot61 = xor i1 %lnot59, true, !dbg !4381
  %lnot.ext62 = zext i1 %lnot61 to i32, !dbg !4381
  %add63 = add i32 %add55, %lnot.ext62, !dbg !4381
  %21 = load i32, i32* %correspondants, align 4, !dbg !4381
  %shr = lshr i32 %21, 8, !dbg !4381
  %conv64 = zext i32 %shr to i64, !dbg !4381
  %and65 = and i64 %conv64, 1, !dbg !4381
  %tobool66 = icmp ne i64 %and65, 0, !dbg !4381
  %lnot67 = xor i1 %tobool66, true, !dbg !4381
  %lnot69 = xor i1 %lnot67, true, !dbg !4381
  %lnot.ext70 = zext i1 %lnot69 to i32, !dbg !4381
  %22 = load i32, i32* %correspondants, align 4, !dbg !4381
  %shr71 = lshr i32 %22, 8, !dbg !4381
  %conv72 = zext i32 %shr71 to i64, !dbg !4381
  %and73 = and i64 %conv72, 2, !dbg !4381
  %tobool74 = icmp ne i64 %and73, 0, !dbg !4381
  %lnot75 = xor i1 %tobool74, true, !dbg !4381
  %lnot77 = xor i1 %lnot75, true, !dbg !4381
  %lnot.ext78 = zext i1 %lnot77 to i32, !dbg !4381
  %add79 = add i32 %lnot.ext70, %lnot.ext78, !dbg !4381
  %23 = load i32, i32* %correspondants, align 4, !dbg !4381
  %shr80 = lshr i32 %23, 8, !dbg !4381
  %conv81 = zext i32 %shr80 to i64, !dbg !4381
  %and82 = and i64 %conv81, 4, !dbg !4381
  %tobool83 = icmp ne i64 %and82, 0, !dbg !4381
  %lnot84 = xor i1 %tobool83, true, !dbg !4381
  %lnot86 = xor i1 %lnot84, true, !dbg !4381
  %lnot.ext87 = zext i1 %lnot86 to i32, !dbg !4381
  %add88 = add i32 %add79, %lnot.ext87, !dbg !4381
  %24 = load i32, i32* %correspondants, align 4, !dbg !4381
  %shr89 = lshr i32 %24, 8, !dbg !4381
  %conv90 = zext i32 %shr89 to i64, !dbg !4381
  %and91 = and i64 %conv90, 8, !dbg !4381
  %tobool92 = icmp ne i64 %and91, 0, !dbg !4381
  %lnot93 = xor i1 %tobool92, true, !dbg !4381
  %lnot95 = xor i1 %lnot93, true, !dbg !4381
  %lnot.ext96 = zext i1 %lnot95 to i32, !dbg !4381
  %add97 = add i32 %add88, %lnot.ext96, !dbg !4381
  %25 = load i32, i32* %correspondants, align 4, !dbg !4381
  %shr98 = lshr i32 %25, 8, !dbg !4381
  %conv99 = zext i32 %shr98 to i64, !dbg !4381
  %and100 = and i64 %conv99, 16, !dbg !4381
  %tobool101 = icmp ne i64 %and100, 0, !dbg !4381
  %lnot102 = xor i1 %tobool101, true, !dbg !4381
  %lnot104 = xor i1 %lnot102, true, !dbg !4381
  %lnot.ext105 = zext i1 %lnot104 to i32, !dbg !4381
  %add106 = add i32 %add97, %lnot.ext105, !dbg !4381
  %26 = load i32, i32* %correspondants, align 4, !dbg !4381
  %shr107 = lshr i32 %26, 8, !dbg !4381
  %conv108 = zext i32 %shr107 to i64, !dbg !4381
  %and109 = and i64 %conv108, 32, !dbg !4381
  %tobool110 = icmp ne i64 %and109, 0, !dbg !4381
  %lnot111 = xor i1 %tobool110, true, !dbg !4381
  %lnot113 = xor i1 %lnot111, true, !dbg !4381
  %lnot.ext114 = zext i1 %lnot113 to i32, !dbg !4381
  %add115 = add i32 %add106, %lnot.ext114, !dbg !4381
  %27 = load i32, i32* %correspondants, align 4, !dbg !4381
  %shr116 = lshr i32 %27, 8, !dbg !4381
  %conv117 = zext i32 %shr116 to i64, !dbg !4381
  %and118 = and i64 %conv117, 64, !dbg !4381
  %tobool119 = icmp ne i64 %and118, 0, !dbg !4381
  %lnot120 = xor i1 %tobool119, true, !dbg !4381
  %lnot122 = xor i1 %lnot120, true, !dbg !4381
  %lnot.ext123 = zext i1 %lnot122 to i32, !dbg !4381
  %add124 = add i32 %add115, %lnot.ext123, !dbg !4381
  %28 = load i32, i32* %correspondants, align 4, !dbg !4381
  %shr125 = lshr i32 %28, 8, !dbg !4381
  %conv126 = zext i32 %shr125 to i64, !dbg !4381
  %and127 = and i64 %conv126, 128, !dbg !4381
  %tobool128 = icmp ne i64 %and127, 0, !dbg !4381
  %lnot129 = xor i1 %tobool128, true, !dbg !4381
  %lnot131 = xor i1 %lnot129, true, !dbg !4381
  %lnot.ext132 = zext i1 %lnot131 to i32, !dbg !4381
  %add133 = add i32 %add124, %lnot.ext132, !dbg !4381
  %add134 = add i32 %add63, %add133, !dbg !4381
  %29 = load i32, i32* %correspondants, align 4, !dbg !4381
  %shr135 = lshr i32 %29, 16, !dbg !4381
  %conv136 = zext i32 %shr135 to i64, !dbg !4381
  %and137 = and i64 %conv136, 1, !dbg !4381
  %tobool138 = icmp ne i64 %and137, 0, !dbg !4381
  %lnot139 = xor i1 %tobool138, true, !dbg !4381
  %lnot141 = xor i1 %lnot139, true, !dbg !4381
  %lnot.ext142 = zext i1 %lnot141 to i32, !dbg !4381
  %30 = load i32, i32* %correspondants, align 4, !dbg !4381
  %shr143 = lshr i32 %30, 16, !dbg !4381
  %conv144 = zext i32 %shr143 to i64, !dbg !4381
  %and145 = and i64 %conv144, 2, !dbg !4381
  %tobool146 = icmp ne i64 %and145, 0, !dbg !4381
  %lnot147 = xor i1 %tobool146, true, !dbg !4381
  %lnot149 = xor i1 %lnot147, true, !dbg !4381
  %lnot.ext150 = zext i1 %lnot149 to i32, !dbg !4381
  %add151 = add i32 %lnot.ext142, %lnot.ext150, !dbg !4381
  %31 = load i32, i32* %correspondants, align 4, !dbg !4381
  %shr152 = lshr i32 %31, 16, !dbg !4381
  %conv153 = zext i32 %shr152 to i64, !dbg !4381
  %and154 = and i64 %conv153, 4, !dbg !4381
  %tobool155 = icmp ne i64 %and154, 0, !dbg !4381
  %lnot156 = xor i1 %tobool155, true, !dbg !4381
  %lnot158 = xor i1 %lnot156, true, !dbg !4381
  %lnot.ext159 = zext i1 %lnot158 to i32, !dbg !4381
  %add160 = add i32 %add151, %lnot.ext159, !dbg !4381
  %32 = load i32, i32* %correspondants, align 4, !dbg !4381
  %shr161 = lshr i32 %32, 16, !dbg !4381
  %conv162 = zext i32 %shr161 to i64, !dbg !4381
  %and163 = and i64 %conv162, 8, !dbg !4381
  %tobool164 = icmp ne i64 %and163, 0, !dbg !4381
  %lnot165 = xor i1 %tobool164, true, !dbg !4381
  %lnot167 = xor i1 %lnot165, true, !dbg !4381
  %lnot.ext168 = zext i1 %lnot167 to i32, !dbg !4381
  %add169 = add i32 %add160, %lnot.ext168, !dbg !4381
  %33 = load i32, i32* %correspondants, align 4, !dbg !4381
  %shr170 = lshr i32 %33, 16, !dbg !4381
  %conv171 = zext i32 %shr170 to i64, !dbg !4381
  %and172 = and i64 %conv171, 16, !dbg !4381
  %tobool173 = icmp ne i64 %and172, 0, !dbg !4381
  %lnot174 = xor i1 %tobool173, true, !dbg !4381
  %lnot176 = xor i1 %lnot174, true, !dbg !4381
  %lnot.ext177 = zext i1 %lnot176 to i32, !dbg !4381
  %add178 = add i32 %add169, %lnot.ext177, !dbg !4381
  %34 = load i32, i32* %correspondants, align 4, !dbg !4381
  %shr179 = lshr i32 %34, 16, !dbg !4381
  %conv180 = zext i32 %shr179 to i64, !dbg !4381
  %and181 = and i64 %conv180, 32, !dbg !4381
  %tobool182 = icmp ne i64 %and181, 0, !dbg !4381
  %lnot183 = xor i1 %tobool182, true, !dbg !4381
  %lnot185 = xor i1 %lnot183, true, !dbg !4381
  %lnot.ext186 = zext i1 %lnot185 to i32, !dbg !4381
  %add187 = add i32 %add178, %lnot.ext186, !dbg !4381
  %35 = load i32, i32* %correspondants, align 4, !dbg !4381
  %shr188 = lshr i32 %35, 16, !dbg !4381
  %conv189 = zext i32 %shr188 to i64, !dbg !4381
  %and190 = and i64 %conv189, 64, !dbg !4381
  %tobool191 = icmp ne i64 %and190, 0, !dbg !4381
  %lnot192 = xor i1 %tobool191, true, !dbg !4381
  %lnot194 = xor i1 %lnot192, true, !dbg !4381
  %lnot.ext195 = zext i1 %lnot194 to i32, !dbg !4381
  %add196 = add i32 %add187, %lnot.ext195, !dbg !4381
  %36 = load i32, i32* %correspondants, align 4, !dbg !4381
  %shr197 = lshr i32 %36, 16, !dbg !4381
  %conv198 = zext i32 %shr197 to i64, !dbg !4381
  %and199 = and i64 %conv198, 128, !dbg !4381
  %tobool200 = icmp ne i64 %and199, 0, !dbg !4381
  %lnot201 = xor i1 %tobool200, true, !dbg !4381
  %lnot203 = xor i1 %lnot201, true, !dbg !4381
  %lnot.ext204 = zext i1 %lnot203 to i32, !dbg !4381
  %add205 = add i32 %add196, %lnot.ext204, !dbg !4381
  %37 = load i32, i32* %correspondants, align 4, !dbg !4381
  %shr206 = lshr i32 %37, 16, !dbg !4381
  %shr207 = lshr i32 %shr206, 8, !dbg !4381
  %conv208 = zext i32 %shr207 to i64, !dbg !4381
  %and209 = and i64 %conv208, 1, !dbg !4381
  %tobool210 = icmp ne i64 %and209, 0, !dbg !4381
  %lnot211 = xor i1 %tobool210, true, !dbg !4381
  %lnot213 = xor i1 %lnot211, true, !dbg !4381
  %lnot.ext214 = zext i1 %lnot213 to i32, !dbg !4381
  %38 = load i32, i32* %correspondants, align 4, !dbg !4381
  %shr215 = lshr i32 %38, 16, !dbg !4381
  %shr216 = lshr i32 %shr215, 8, !dbg !4381
  %conv217 = zext i32 %shr216 to i64, !dbg !4381
  %and218 = and i64 %conv217, 2, !dbg !4381
  %tobool219 = icmp ne i64 %and218, 0, !dbg !4381
  %lnot220 = xor i1 %tobool219, true, !dbg !4381
  %lnot222 = xor i1 %lnot220, true, !dbg !4381
  %lnot.ext223 = zext i1 %lnot222 to i32, !dbg !4381
  %add224 = add i32 %lnot.ext214, %lnot.ext223, !dbg !4381
  %39 = load i32, i32* %correspondants, align 4, !dbg !4381
  %shr225 = lshr i32 %39, 16, !dbg !4381
  %shr226 = lshr i32 %shr225, 8, !dbg !4381
  %conv227 = zext i32 %shr226 to i64, !dbg !4381
  %and228 = and i64 %conv227, 4, !dbg !4381
  %tobool229 = icmp ne i64 %and228, 0, !dbg !4381
  %lnot230 = xor i1 %tobool229, true, !dbg !4381
  %lnot232 = xor i1 %lnot230, true, !dbg !4381
  %lnot.ext233 = zext i1 %lnot232 to i32, !dbg !4381
  %add234 = add i32 %add224, %lnot.ext233, !dbg !4381
  %40 = load i32, i32* %correspondants, align 4, !dbg !4381
  %shr235 = lshr i32 %40, 16, !dbg !4381
  %shr236 = lshr i32 %shr235, 8, !dbg !4381
  %conv237 = zext i32 %shr236 to i64, !dbg !4381
  %and238 = and i64 %conv237, 8, !dbg !4381
  %tobool239 = icmp ne i64 %and238, 0, !dbg !4381
  %lnot240 = xor i1 %tobool239, true, !dbg !4381
  %lnot242 = xor i1 %lnot240, true, !dbg !4381
  %lnot.ext243 = zext i1 %lnot242 to i32, !dbg !4381
  %add244 = add i32 %add234, %lnot.ext243, !dbg !4381
  %41 = load i32, i32* %correspondants, align 4, !dbg !4381
  %shr245 = lshr i32 %41, 16, !dbg !4381
  %shr246 = lshr i32 %shr245, 8, !dbg !4381
  %conv247 = zext i32 %shr246 to i64, !dbg !4381
  %and248 = and i64 %conv247, 16, !dbg !4381
  %tobool249 = icmp ne i64 %and248, 0, !dbg !4381
  %lnot250 = xor i1 %tobool249, true, !dbg !4381
  %lnot252 = xor i1 %lnot250, true, !dbg !4381
  %lnot.ext253 = zext i1 %lnot252 to i32, !dbg !4381
  %add254 = add i32 %add244, %lnot.ext253, !dbg !4381
  %42 = load i32, i32* %correspondants, align 4, !dbg !4381
  %shr255 = lshr i32 %42, 16, !dbg !4381
  %shr256 = lshr i32 %shr255, 8, !dbg !4381
  %conv257 = zext i32 %shr256 to i64, !dbg !4381
  %and258 = and i64 %conv257, 32, !dbg !4381
  %tobool259 = icmp ne i64 %and258, 0, !dbg !4381
  %lnot260 = xor i1 %tobool259, true, !dbg !4381
  %lnot262 = xor i1 %lnot260, true, !dbg !4381
  %lnot.ext263 = zext i1 %lnot262 to i32, !dbg !4381
  %add264 = add i32 %add254, %lnot.ext263, !dbg !4381
  %43 = load i32, i32* %correspondants, align 4, !dbg !4381
  %shr265 = lshr i32 %43, 16, !dbg !4381
  %shr266 = lshr i32 %shr265, 8, !dbg !4381
  %conv267 = zext i32 %shr266 to i64, !dbg !4381
  %and268 = and i64 %conv267, 64, !dbg !4381
  %tobool269 = icmp ne i64 %and268, 0, !dbg !4381
  %lnot270 = xor i1 %tobool269, true, !dbg !4381
  %lnot272 = xor i1 %lnot270, true, !dbg !4381
  %lnot.ext273 = zext i1 %lnot272 to i32, !dbg !4381
  %add274 = add i32 %add264, %lnot.ext273, !dbg !4381
  %44 = load i32, i32* %correspondants, align 4, !dbg !4381
  %shr275 = lshr i32 %44, 16, !dbg !4381
  %shr276 = lshr i32 %shr275, 8, !dbg !4381
  %conv277 = zext i32 %shr276 to i64, !dbg !4381
  %and278 = and i64 %conv277, 128, !dbg !4381
  %tobool279 = icmp ne i64 %and278, 0, !dbg !4381
  %lnot280 = xor i1 %tobool279, true, !dbg !4381
  %lnot282 = xor i1 %lnot280, true, !dbg !4381
  %lnot.ext283 = zext i1 %lnot282 to i32, !dbg !4381
  %add284 = add i32 %add274, %lnot.ext283, !dbg !4381
  %add285 = add i32 %add205, %add284, !dbg !4381
  %add286 = add i32 %add134, %add285, !dbg !4381
  br label %cond.end, !dbg !4381

cond.false:                                       ; preds = %for.body
  %45 = load i32, i32* %correspondants, align 4, !dbg !4381
  store i32 %45, i32* %w.addr.i, align 4
  %46 = load i32, i32* %w.addr.i, align 4, !dbg !4382
  %47 = call i32 asm "# ALT: oldnstr\0A661:\0A\09call __sw_hweight32\0A662:\0A# ALT: padding\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 4*32+23)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A# ALT: replacement 1\0A6641:\0A\09popcntl $1, $0\0A6651:\0A.popsection\0A", "={ax},{di},~{dirflag},~{fpsr},~{flags}"(i32 %46) #14, !dbg !4383, !srcloc !4384
  store i32 %47, i32* %res.i, align 4, !dbg !4383
  %48 = load i32, i32* %res.i, align 4, !dbg !4385
  br label %cond.end, !dbg !4381

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add286, %cond.true ], [ %48, %cond.false ], !dbg !4381
  store i32 %cond, i32* %weight, align 4, !dbg !4386
  %49 = load i32, i32* %weight, align 4, !dbg !4387
  %cmp = icmp sgt i32 %49, 1, !dbg !4389
  br i1 %cmp, label %if.then288, label %if.end290, !dbg !4390

if.then288:                                       ; preds = %cond.end
  %50 = load i32, i32* %i, align 4, !dbg !4391
  %add289 = add i32 %50, 1, !dbg !4392
  store i32 %add289, i32* %retval, align 4, !dbg !4393
  br label %return, !dbg !4393

if.end290:                                        ; preds = %cond.end
  br label %for.inc, !dbg !4394

for.inc:                                          ; preds = %if.end290
  %51 = load i32, i32* %i, align 4, !dbg !4395
  %inc = add i32 %51, 1, !dbg !4395
  store i32 %inc, i32* %i, align 4, !dbg !4395
  br label %for.cond, !dbg !4396, !llvm.loop !4397

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !4399
  br label %return, !dbg !4399

return:                                           ; preds = %for.end, %if.then288, %if.then
  %52 = load i32, i32* %retval, align 4, !dbg !4400
  ret i32 %52, !dbg !4400
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @init_property(%struct.extcon_dev* %edev, i32 %id, i32 %index) #0 !dbg !4401 {
entry:
  %edev.addr = alloca %struct.extcon_dev*, align 8
  %id.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %type = alloca i32, align 4
  %cable = alloca %struct.extcon_cable*, align 8
  store %struct.extcon_dev* %edev, %struct.extcon_dev** %edev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev.addr, metadata !4404, metadata !DIExpression()), !dbg !4405
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !4406, metadata !DIExpression()), !dbg !4407
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4408, metadata !DIExpression()), !dbg !4409
  call void @llvm.dbg.declare(metadata i32* %type, metadata !4410, metadata !DIExpression()), !dbg !4411
  %0 = load i32, i32* %id.addr, align 4, !dbg !4412
  %idxprom = zext i32 %0 to i64, !dbg !4413
  %arrayidx = getelementptr [64 x %struct.__extcon_info], [64 x %struct.__extcon_info]* @extcon_info, i64 0, i64 %idxprom, !dbg !4413
  %type1 = getelementptr inbounds %struct.__extcon_info, %struct.__extcon_info* %arrayidx, i32 0, i32 0, !dbg !4414
  %1 = load i32, i32* %type1, align 16, !dbg !4414
  store i32 %1, i32* %type, align 4, !dbg !4411
  call void @llvm.dbg.declare(metadata %struct.extcon_cable** %cable, metadata !4415, metadata !DIExpression()), !dbg !4416
  %2 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4417
  %cables = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %2, i32 0, i32 11, !dbg !4418
  %3 = load %struct.extcon_cable*, %struct.extcon_cable** %cables, align 8, !dbg !4418
  %4 = load i32, i32* %index.addr, align 4, !dbg !4419
  %idxprom2 = sext i32 %4 to i64, !dbg !4417
  %arrayidx3 = getelementptr %struct.extcon_cable, %struct.extcon_cable* %3, i64 %idxprom2, !dbg !4417
  store %struct.extcon_cable* %arrayidx3, %struct.extcon_cable** %cable, align 8, !dbg !4416
  %5 = load i32, i32* %type, align 4, !dbg !4420
  %conv = zext i32 %5 to i64, !dbg !4420
  %and = and i64 1, %conv, !dbg !4422
  %tobool = icmp ne i64 %and, 0, !dbg !4422
  br i1 %tobool, label %if.then, label %if.end, !dbg !4423

if.then:                                          ; preds = %entry
  %6 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !4424
  %usb_propval = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %6, i32 0, i32 6, !dbg !4425
  %arraydecay = getelementptr inbounds [3 x %union.extcon_property_value], [3 x %union.extcon_property_value]* %usb_propval, i64 0, i64 0, !dbg !4426
  %7 = bitcast %union.extcon_property_value* %arraydecay to i8*, !dbg !4426
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 12, i1 false), !dbg !4426
  br label %if.end, !dbg !4426

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %type, align 4, !dbg !4427
  %conv4 = zext i32 %8 to i64, !dbg !4427
  %and5 = and i64 2, %conv4, !dbg !4429
  %tobool6 = icmp ne i64 %and5, 0, !dbg !4429
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !4430

if.then7:                                         ; preds = %if.end
  %9 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !4431
  %chg_propval = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %9, i32 0, i32 7, !dbg !4432
  %arraydecay8 = getelementptr inbounds [1 x %union.extcon_property_value], [1 x %union.extcon_property_value]* %chg_propval, i64 0, i64 0, !dbg !4433
  %10 = bitcast %union.extcon_property_value* %arraydecay8 to i8*, !dbg !4433
  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 4, i1 false), !dbg !4433
  br label %if.end9, !dbg !4433

if.end9:                                          ; preds = %if.then7, %if.end
  %11 = load i32, i32* %type, align 4, !dbg !4434
  %conv10 = zext i32 %11 to i64, !dbg !4434
  %and11 = and i64 4, %conv10, !dbg !4436
  %tobool12 = icmp ne i64 %and11, 0, !dbg !4436
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !4437

if.then13:                                        ; preds = %if.end9
  %12 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !4438
  %jack_propval = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %12, i32 0, i32 8, !dbg !4439
  %arraydecay14 = getelementptr inbounds [1 x %union.extcon_property_value], [1 x %union.extcon_property_value]* %jack_propval, i64 0, i64 0, !dbg !4440
  %13 = bitcast %union.extcon_property_value* %arraydecay14 to i8*, !dbg !4440
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 4, i1 false), !dbg !4440
  br label %if.end15, !dbg !4440

if.end15:                                         ; preds = %if.then13, %if.end9
  %14 = load i32, i32* %type, align 4, !dbg !4441
  %conv16 = zext i32 %14 to i64, !dbg !4441
  %and17 = and i64 8, %conv16, !dbg !4443
  %tobool18 = icmp ne i64 %and17, 0, !dbg !4443
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !4444

if.then19:                                        ; preds = %if.end15
  %15 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !4445
  %disp_propval = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %15, i32 0, i32 9, !dbg !4446
  %arraydecay20 = getelementptr inbounds [2 x %union.extcon_property_value], [2 x %union.extcon_property_value]* %disp_propval, i64 0, i64 0, !dbg !4447
  %16 = bitcast %union.extcon_property_value* %arraydecay20 to i8*, !dbg !4447
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 8, i1 false), !dbg !4447
  br label %if.end21, !dbg !4447

if.end21:                                         ; preds = %if.then19, %if.end15
  ret void, !dbg !4448
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @extcon_set_state_sync(%struct.extcon_dev* %edev, i32 %id, i1 zeroext %state) #0 !dbg !4449 {
entry:
  %lock.addr.i34 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i34, metadata !3746, metadata !DIExpression()), !dbg !4450
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !3756, metadata !DIExpression()), !dbg !4452
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !3758, metadata !DIExpression()), !dbg !4453
  %retval = alloca i32, align 4
  %edev.addr = alloca %struct.extcon_dev*, align 8
  %id.addr = alloca i32, align 4
  %state.addr = alloca i8, align 1
  %ret = alloca i32, align 4
  %index = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.extcon_dev* %edev, %struct.extcon_dev** %edev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev.addr, metadata !4460, metadata !DIExpression()), !dbg !4461
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !4462, metadata !DIExpression()), !dbg !4463
  %frombool = zext i1 %state to i8
  store i8 %frombool, i8* %state.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %state.addr, metadata !4464, metadata !DIExpression()), !dbg !4465
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4466, metadata !DIExpression()), !dbg !4467
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4468, metadata !DIExpression()), !dbg !4469
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4470, metadata !DIExpression()), !dbg !4471
  %0 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4472
  %1 = load i32, i32* %id.addr, align 4, !dbg !4473
  %call = call i32 @find_cable_index_by_id(%struct.extcon_dev* %0, i32 %1) #11, !dbg !4474
  store i32 %call, i32* %index, align 4, !dbg !4475
  %2 = load i32, i32* %index, align 4, !dbg !4476
  %cmp = icmp slt i32 %2, 0, !dbg !4478
  br i1 %cmp, label %if.then, label %if.end, !dbg !4479

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %index, align 4, !dbg !4480
  store i32 %3, i32* %retval, align 4, !dbg !4481
  br label %return, !dbg !4481

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !4482

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !4483

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4484, metadata !DIExpression()), !dbg !4486
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4487, metadata !DIExpression()), !dbg !4486
  %cmp2 = icmp eq i64* %__dummy, %__dummy2, !dbg !4486
  %conv = zext i1 %cmp2 to i32, !dbg !4486
  store i32 1, i32* %tmp, align 4, !dbg !4486
  %4 = load i32, i32* %tmp, align 4, !dbg !4486
  br label %do.body3, !dbg !4488

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !4489

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !4490

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !4492, metadata !DIExpression()), !dbg !4495
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !4496, metadata !DIExpression()), !dbg !4495
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !4495
  %conv9 = zext i1 %cmp8 to i32, !dbg !4495
  store i32 1, i32* %tmp10, align 4, !dbg !4495
  %5 = load i32, i32* %tmp10, align 4, !dbg !4495
  %call11 = call i64 @arch_local_irq_save() #11, !dbg !4497
  store i64 %call11, i64* %flags, align 8, !dbg !4497
  br label %do.end, !dbg !4497

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !4490

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !4489

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4498, !srcloc !4499
  br label %do.body14, !dbg !4498

do.body14:                                        ; preds = %do.body13
  %6 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4500
  %lock = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %6, i32 0, i32 8, !dbg !4500
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4501
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !4502
  %rlock.i = bitcast %union.anon.3* %8 to %struct.raw_spinlock*, !dbg !4502
  br label %do.end16, !dbg !4500

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !4498

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !4489

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !4488

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !4483

do.end20:                                         ; preds = %do.end19
  %9 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4503
  %10 = load i32, i32* %index, align 4, !dbg !4504
  %11 = load i8, i8* %state.addr, align 1, !dbg !4505
  %tobool = trunc i8 %11 to i1, !dbg !4505
  %call21 = call zeroext i1 @is_extcon_changed(%struct.extcon_dev* %9, i32 %10, i1 zeroext %tobool) #11, !dbg !4506
  %conv22 = zext i1 %call21 to i32, !dbg !4506
  store i32 %conv22, i32* %ret, align 4, !dbg !4507
  %12 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4508
  %lock23 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %12, i32 0, i32 8, !dbg !4509
  %13 = load i64, i64* %flags, align 8, !dbg !4510
  store %struct.spinlock* %lock23, %struct.spinlock** %lock.addr.i34, align 8
  store i64 %13, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !162, metadata !3853, metadata !DIExpression()) #7, !dbg !4511
  call void @llvm.dbg.declare(metadata !162, metadata !3857, metadata !DIExpression()) #7, !dbg !4511
  store i32 1, i32* %tmp.i, align 4, !dbg !4511
  %14 = load i32, i32* %tmp.i, align 4, !dbg !4511
  call void @llvm.dbg.declare(metadata !162, metadata !3858, metadata !DIExpression()) #7, !dbg !4512
  call void @llvm.dbg.declare(metadata !162, metadata !3864, metadata !DIExpression()) #7, !dbg !4512
  store i32 1, i32* %tmp8.i, align 4, !dbg !4512
  %15 = load i32, i32* %tmp8.i, align 4, !dbg !4512
  %16 = load i64, i64* %flags.addr.i, align 8, !dbg !4513
  call void @arch_local_irq_restore(i64 %16) #12, !dbg !4513
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4514, !srcloc !3868
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i34, align 8, !dbg !4515
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !4515
  %rlock.i35 = bitcast %union.anon.3* %18 to %struct.raw_spinlock*, !dbg !4515
  %19 = load i32, i32* %ret, align 4, !dbg !4516
  %tobool24 = icmp ne i32 %19, 0, !dbg !4516
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !4518

if.then25:                                        ; preds = %do.end20
  store i32 0, i32* %retval, align 4, !dbg !4519
  br label %return, !dbg !4519

if.end26:                                         ; preds = %do.end20
  %20 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4520
  %21 = load i32, i32* %id.addr, align 4, !dbg !4521
  %22 = load i8, i8* %state.addr, align 1, !dbg !4522
  %tobool27 = trunc i8 %22 to i1, !dbg !4522
  %call28 = call i32 @extcon_set_state(%struct.extcon_dev* %20, i32 %21, i1 zeroext %tobool27) #11, !dbg !4523
  store i32 %call28, i32* %ret, align 4, !dbg !4524
  %23 = load i32, i32* %ret, align 4, !dbg !4525
  %cmp29 = icmp slt i32 %23, 0, !dbg !4527
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !4528

if.then31:                                        ; preds = %if.end26
  %24 = load i32, i32* %ret, align 4, !dbg !4529
  store i32 %24, i32* %retval, align 4, !dbg !4530
  br label %return, !dbg !4530

if.end32:                                         ; preds = %if.end26
  %25 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4531
  %26 = load i32, i32* %id.addr, align 4, !dbg !4532
  %call33 = call i32 @extcon_sync(%struct.extcon_dev* %25, i32 %26) #11, !dbg !4533
  store i32 %call33, i32* %retval, align 4, !dbg !4534
  br label %return, !dbg !4534

return:                                           ; preds = %if.end32, %if.then31, %if.then25, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !4535
  ret i32 %27, !dbg !4535
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @extcon_get_property(%struct.extcon_dev* %edev, i32 %id, i32 %prop, %union.extcon_property_value* %prop_val) #0 !dbg !4536 {
entry:
  %lock.addr.i57 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i57, metadata !3746, metadata !DIExpression()), !dbg !4540
  %flags.addr.i58 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i58, metadata !3756, metadata !DIExpression()), !dbg !4544
  %tmp.i59 = alloca i32, align 4
  %tmp8.i60 = alloca i32, align 4
  %lock.addr.i52 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i52, metadata !3746, metadata !DIExpression()), !dbg !4545
  %flags.addr.i53 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i53, metadata !3756, metadata !DIExpression()), !dbg !4549
  %tmp.i54 = alloca i32, align 4
  %tmp8.i55 = alloca i32, align 4
  %lock.addr.i50 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i50, metadata !3746, metadata !DIExpression()), !dbg !4550
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !3756, metadata !DIExpression()), !dbg !4552
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !3758, metadata !DIExpression()), !dbg !4553
  %retval = alloca i32, align 4
  %edev.addr = alloca %struct.extcon_dev*, align 8
  %id.addr = alloca i32, align 4
  %prop.addr = alloca i32, align 4
  %prop_val.addr = alloca %union.extcon_property_value*, align 8
  %cable = alloca %struct.extcon_cable*, align 8
  %flags = alloca i64, align 8
  %index = alloca i32, align 4
  %ret = alloca i32, align 4
  %.compoundliteral = alloca %union.extcon_property_value, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy11 = alloca i64, align 8
  %__dummy212 = alloca i64, align 8
  %tmp15 = alloca i32, align 4
  store %struct.extcon_dev* %edev, %struct.extcon_dev** %edev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev.addr, metadata !4560, metadata !DIExpression()), !dbg !4561
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !4562, metadata !DIExpression()), !dbg !4563
  store i32 %prop, i32* %prop.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prop.addr, metadata !4564, metadata !DIExpression()), !dbg !4565
  store %union.extcon_property_value* %prop_val, %union.extcon_property_value** %prop_val.addr, align 8
  call void @llvm.dbg.declare(metadata %union.extcon_property_value** %prop_val.addr, metadata !4566, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.declare(metadata %struct.extcon_cable** %cable, metadata !4568, metadata !DIExpression()), !dbg !4569
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4570, metadata !DIExpression()), !dbg !4571
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4572, metadata !DIExpression()), !dbg !4573
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4574, metadata !DIExpression()), !dbg !4575
  store i32 0, i32* %ret, align 4, !dbg !4575
  %0 = load %union.extcon_property_value*, %union.extcon_property_value** %prop_val.addr, align 8, !dbg !4576
  %intval = bitcast %union.extcon_property_value* %.compoundliteral to i32*, !dbg !4577
  store i32 0, i32* %intval, align 4, !dbg !4577
  %1 = bitcast %union.extcon_property_value* %0 to i8*, !dbg !4578
  %2 = bitcast %union.extcon_property_value* %.compoundliteral to i8*, !dbg !4578
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %2, i64 4, i1 false), !dbg !4578
  %3 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4579
  %tobool = icmp ne %struct.extcon_dev* %3, null, !dbg !4579
  br i1 %tobool, label %if.end, label %if.then, !dbg !4581

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !4582
  br label %return, !dbg !4582

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %id.addr, align 4, !dbg !4583
  %5 = load i32, i32* %prop.addr, align 4, !dbg !4585
  %call = call zeroext i1 @is_extcon_property_supported(i32 %4, i32 %5) #11, !dbg !4586
  br i1 %call, label %if.end2, label %if.then1, !dbg !4587

if.then1:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !4588
  br label %return, !dbg !4588

if.end2:                                          ; preds = %if.end
  %6 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4589
  %7 = load i32, i32* %id.addr, align 4, !dbg !4590
  %call3 = call i32 @find_cable_index_by_id(%struct.extcon_dev* %6, i32 %7) #11, !dbg !4591
  store i32 %call3, i32* %index, align 4, !dbg !4592
  %8 = load i32, i32* %index, align 4, !dbg !4593
  %cmp = icmp slt i32 %8, 0, !dbg !4595
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !4596

if.then4:                                         ; preds = %if.end2
  %9 = load i32, i32* %index, align 4, !dbg !4597
  store i32 %9, i32* %retval, align 4, !dbg !4598
  br label %return, !dbg !4598

if.end5:                                          ; preds = %if.end2
  br label %do.body, !dbg !4599

do.body:                                          ; preds = %if.end5
  br label %do.body6, !dbg !4600

do.body6:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4601, metadata !DIExpression()), !dbg !4603
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4604, metadata !DIExpression()), !dbg !4603
  %cmp7 = icmp eq i64* %__dummy, %__dummy2, !dbg !4603
  %conv = zext i1 %cmp7 to i32, !dbg !4603
  store i32 1, i32* %tmp, align 4, !dbg !4603
  %10 = load i32, i32* %tmp, align 4, !dbg !4603
  br label %do.body8, !dbg !4605

do.body8:                                         ; preds = %do.body6
  br label %do.body9, !dbg !4606

do.body9:                                         ; preds = %do.body8
  br label %do.body10, !dbg !4607

do.body10:                                        ; preds = %do.body9
  call void @llvm.dbg.declare(metadata i64* %__dummy11, metadata !4609, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.declare(metadata i64* %__dummy212, metadata !4613, metadata !DIExpression()), !dbg !4612
  %cmp13 = icmp eq i64* %__dummy11, %__dummy212, !dbg !4612
  %conv14 = zext i1 %cmp13 to i32, !dbg !4612
  store i32 1, i32* %tmp15, align 4, !dbg !4612
  %11 = load i32, i32* %tmp15, align 4, !dbg !4612
  %call16 = call i64 @arch_local_irq_save() #11, !dbg !4614
  store i64 %call16, i64* %flags, align 8, !dbg !4614
  br label %do.end, !dbg !4614

do.end:                                           ; preds = %do.body10
  br label %do.end17, !dbg !4607

do.end17:                                         ; preds = %do.end
  br label %do.body18, !dbg !4606

do.body18:                                        ; preds = %do.end17
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4615, !srcloc !4616
  br label %do.body19, !dbg !4615

do.body19:                                        ; preds = %do.body18
  %12 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4617
  %lock = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %12, i32 0, i32 8, !dbg !4617
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4618
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !4619
  %rlock.i = bitcast %union.anon.3* %14 to %struct.raw_spinlock*, !dbg !4619
  br label %do.end21, !dbg !4617

do.end21:                                         ; preds = %do.body19
  br label %do.end22, !dbg !4615

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !4606

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !4605

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !4600

do.end25:                                         ; preds = %do.end24
  %15 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4620
  %16 = load i32, i32* %id.addr, align 4, !dbg !4621
  %17 = load i32, i32* %index, align 4, !dbg !4622
  %18 = load i32, i32* %prop.addr, align 4, !dbg !4623
  %call26 = call i32 @is_extcon_property_capability(%struct.extcon_dev* %15, i32 %16, i32 %17, i32 %18) #11, !dbg !4624
  %tobool27 = icmp ne i32 %call26, 0, !dbg !4624
  br i1 %tobool27, label %if.end30, label %if.then28, !dbg !4625

if.then28:                                        ; preds = %do.end25
  %19 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4626
  %lock29 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %19, i32 0, i32 8, !dbg !4627
  %20 = load i64, i64* %flags, align 8, !dbg !4628
  store %struct.spinlock* %lock29, %struct.spinlock** %lock.addr.i52, align 8
  store i64 %20, i64* %flags.addr.i53, align 8
  call void @llvm.dbg.declare(metadata !162, metadata !3853, metadata !DIExpression()) #7, !dbg !4629
  call void @llvm.dbg.declare(metadata !162, metadata !3857, metadata !DIExpression()) #7, !dbg !4629
  store i32 1, i32* %tmp.i54, align 4, !dbg !4629
  %21 = load i32, i32* %tmp.i54, align 4, !dbg !4629
  call void @llvm.dbg.declare(metadata !162, metadata !3858, metadata !DIExpression()) #7, !dbg !4630
  call void @llvm.dbg.declare(metadata !162, metadata !3864, metadata !DIExpression()) #7, !dbg !4630
  store i32 1, i32* %tmp8.i55, align 4, !dbg !4630
  %22 = load i32, i32* %tmp8.i55, align 4, !dbg !4630
  %23 = load i64, i64* %flags.addr.i53, align 8, !dbg !4631
  call void @arch_local_irq_restore(i64 %23) #12, !dbg !4631
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4632, !srcloc !3868
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i52, align 8, !dbg !4633
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !4633
  %rlock.i56 = bitcast %union.anon.3* %25 to %struct.raw_spinlock*, !dbg !4633
  store i32 -1, i32* %retval, align 4, !dbg !4634
  br label %return, !dbg !4634

if.end30:                                         ; preds = %do.end25
  %26 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4635
  %27 = load i32, i32* %index, align 4, !dbg !4636
  %call31 = call zeroext i1 @is_extcon_attached(%struct.extcon_dev* %26, i32 %27) #11, !dbg !4637
  br i1 %call31, label %if.end34, label %if.then32, !dbg !4638

if.then32:                                        ; preds = %if.end30
  %28 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4639
  %lock33 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %28, i32 0, i32 8, !dbg !4640
  %29 = load i64, i64* %flags, align 8, !dbg !4641
  store %struct.spinlock* %lock33, %struct.spinlock** %lock.addr.i57, align 8
  store i64 %29, i64* %flags.addr.i58, align 8
  call void @llvm.dbg.declare(metadata !162, metadata !3853, metadata !DIExpression()) #7, !dbg !4642
  call void @llvm.dbg.declare(metadata !162, metadata !3857, metadata !DIExpression()) #7, !dbg !4642
  store i32 1, i32* %tmp.i59, align 4, !dbg !4642
  %30 = load i32, i32* %tmp.i59, align 4, !dbg !4642
  call void @llvm.dbg.declare(metadata !162, metadata !3858, metadata !DIExpression()) #7, !dbg !4643
  call void @llvm.dbg.declare(metadata !162, metadata !3864, metadata !DIExpression()) #7, !dbg !4643
  store i32 1, i32* %tmp8.i60, align 4, !dbg !4643
  %31 = load i32, i32* %tmp8.i60, align 4, !dbg !4643
  %32 = load i64, i64* %flags.addr.i58, align 8, !dbg !4644
  call void @arch_local_irq_restore(i64 %32) #12, !dbg !4644
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4645, !srcloc !3868
  %33 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i57, align 8, !dbg !4646
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0, !dbg !4646
  %rlock.i61 = bitcast %union.anon.3* %34 to %struct.raw_spinlock*, !dbg !4646
  store i32 0, i32* %retval, align 4, !dbg !4647
  br label %return, !dbg !4647

if.end34:                                         ; preds = %if.end30
  %35 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4648
  %cables = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %35, i32 0, i32 11, !dbg !4649
  %36 = load %struct.extcon_cable*, %struct.extcon_cable** %cables, align 8, !dbg !4649
  %37 = load i32, i32* %index, align 4, !dbg !4650
  %idxprom = sext i32 %37 to i64, !dbg !4648
  %arrayidx = getelementptr %struct.extcon_cable, %struct.extcon_cable* %36, i64 %idxprom, !dbg !4648
  store %struct.extcon_cable* %arrayidx, %struct.extcon_cable** %cable, align 8, !dbg !4651
  %38 = load i32, i32* %prop.addr, align 4, !dbg !4652
  switch i32 %38, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 50, label %sw.bb37
    i32 100, label %sw.bb41
    i32 150, label %sw.bb45
    i32 151, label %sw.bb45
  ], !dbg !4653

sw.bb:                                            ; preds = %if.end34, %if.end34, %if.end34
  %39 = load %union.extcon_property_value*, %union.extcon_property_value** %prop_val.addr, align 8, !dbg !4654
  %40 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !4656
  %usb_propval = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %40, i32 0, i32 6, !dbg !4657
  %41 = load i32, i32* %prop.addr, align 4, !dbg !4658
  %sub = sub i32 %41, 0, !dbg !4659
  %idxprom35 = zext i32 %sub to i64, !dbg !4656
  %arrayidx36 = getelementptr [3 x %union.extcon_property_value], [3 x %union.extcon_property_value]* %usb_propval, i64 0, i64 %idxprom35, !dbg !4656
  %42 = bitcast %union.extcon_property_value* %39 to i8*, !dbg !4656
  %43 = bitcast %union.extcon_property_value* %arrayidx36 to i8*, !dbg !4656
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %42, i8* align 4 %43, i64 4, i1 false), !dbg !4656
  br label %sw.epilog, !dbg !4660

sw.bb37:                                          ; preds = %if.end34
  %44 = load %union.extcon_property_value*, %union.extcon_property_value** %prop_val.addr, align 8, !dbg !4661
  %45 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !4662
  %chg_propval = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %45, i32 0, i32 7, !dbg !4663
  %46 = load i32, i32* %prop.addr, align 4, !dbg !4664
  %sub38 = sub i32 %46, 50, !dbg !4665
  %idxprom39 = zext i32 %sub38 to i64, !dbg !4662
  %arrayidx40 = getelementptr [1 x %union.extcon_property_value], [1 x %union.extcon_property_value]* %chg_propval, i64 0, i64 %idxprom39, !dbg !4662
  %47 = bitcast %union.extcon_property_value* %44 to i8*, !dbg !4662
  %48 = bitcast %union.extcon_property_value* %arrayidx40 to i8*, !dbg !4662
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* align 4 %48, i64 4, i1 false), !dbg !4662
  br label %sw.epilog, !dbg !4666

sw.bb41:                                          ; preds = %if.end34
  %49 = load %union.extcon_property_value*, %union.extcon_property_value** %prop_val.addr, align 8, !dbg !4667
  %50 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !4668
  %jack_propval = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %50, i32 0, i32 8, !dbg !4669
  %51 = load i32, i32* %prop.addr, align 4, !dbg !4670
  %sub42 = sub i32 %51, 100, !dbg !4671
  %idxprom43 = zext i32 %sub42 to i64, !dbg !4668
  %arrayidx44 = getelementptr [1 x %union.extcon_property_value], [1 x %union.extcon_property_value]* %jack_propval, i64 0, i64 %idxprom43, !dbg !4668
  %52 = bitcast %union.extcon_property_value* %49 to i8*, !dbg !4668
  %53 = bitcast %union.extcon_property_value* %arrayidx44 to i8*, !dbg !4668
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* align 4 %53, i64 4, i1 false), !dbg !4668
  br label %sw.epilog, !dbg !4672

sw.bb45:                                          ; preds = %if.end34, %if.end34
  %54 = load %union.extcon_property_value*, %union.extcon_property_value** %prop_val.addr, align 8, !dbg !4673
  %55 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !4674
  %disp_propval = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %55, i32 0, i32 9, !dbg !4675
  %56 = load i32, i32* %prop.addr, align 4, !dbg !4676
  %sub46 = sub i32 %56, 150, !dbg !4677
  %idxprom47 = zext i32 %sub46 to i64, !dbg !4674
  %arrayidx48 = getelementptr [2 x %union.extcon_property_value], [2 x %union.extcon_property_value]* %disp_propval, i64 0, i64 %idxprom47, !dbg !4674
  %57 = bitcast %union.extcon_property_value* %54 to i8*, !dbg !4674
  %58 = bitcast %union.extcon_property_value* %arrayidx48 to i8*, !dbg !4674
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* align 4 %58, i64 4, i1 false), !dbg !4674
  br label %sw.epilog, !dbg !4678

sw.default:                                       ; preds = %if.end34
  store i32 -22, i32* %ret, align 4, !dbg !4679
  br label %sw.epilog, !dbg !4680

sw.epilog:                                        ; preds = %sw.default, %sw.bb45, %sw.bb41, %sw.bb37, %sw.bb
  %59 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4681
  %lock49 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %59, i32 0, i32 8, !dbg !4682
  %60 = load i64, i64* %flags, align 8, !dbg !4683
  store %struct.spinlock* %lock49, %struct.spinlock** %lock.addr.i50, align 8
  store i64 %60, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !162, metadata !3853, metadata !DIExpression()) #7, !dbg !4684
  call void @llvm.dbg.declare(metadata !162, metadata !3857, metadata !DIExpression()) #7, !dbg !4684
  store i32 1, i32* %tmp.i, align 4, !dbg !4684
  %61 = load i32, i32* %tmp.i, align 4, !dbg !4684
  call void @llvm.dbg.declare(metadata !162, metadata !3858, metadata !DIExpression()) #7, !dbg !4685
  call void @llvm.dbg.declare(metadata !162, metadata !3864, metadata !DIExpression()) #7, !dbg !4685
  store i32 1, i32* %tmp8.i, align 4, !dbg !4685
  %62 = load i32, i32* %tmp8.i, align 4, !dbg !4685
  %63 = load i64, i64* %flags.addr.i, align 8, !dbg !4686
  call void @arch_local_irq_restore(i64 %63) #12, !dbg !4686
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4687, !srcloc !3868
  %64 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i50, align 8, !dbg !4688
  %65 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %64, i32 0, i32 0, !dbg !4688
  %rlock.i51 = bitcast %union.anon.3* %65 to %struct.raw_spinlock*, !dbg !4688
  %66 = load i32, i32* %ret, align 4, !dbg !4689
  store i32 %66, i32* %retval, align 4, !dbg !4690
  br label %return, !dbg !4690

return:                                           ; preds = %sw.epilog, %if.then32, %if.then28, %if.then4, %if.then1, %if.then
  %67 = load i32, i32* %retval, align 4, !dbg !4691
  ret i32 %67, !dbg !4691
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_extcon_property_supported(i32 %id, i32 %prop) #0 !dbg !4692 {
entry:
  %retval = alloca i1, align 1
  %id.addr = alloca i32, align 4
  %prop.addr = alloca i32, align 4
  %type = alloca i32, align 4
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !4695, metadata !DIExpression()), !dbg !4696
  store i32 %prop, i32* %prop.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prop.addr, metadata !4697, metadata !DIExpression()), !dbg !4698
  call void @llvm.dbg.declare(metadata i32* %type, metadata !4699, metadata !DIExpression()), !dbg !4700
  %0 = load i32, i32* %prop.addr, align 4, !dbg !4701
  %call = call i32 @get_extcon_type(i32 %0) #11, !dbg !4702
  store i32 %call, i32* %type, align 4, !dbg !4703
  %1 = load i32, i32* %type, align 4, !dbg !4704
  %cmp = icmp slt i32 %1, 0, !dbg !4706
  br i1 %cmp, label %if.then, label %if.end, !dbg !4707

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !4708
  br label %return, !dbg !4708

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %id.addr, align 4, !dbg !4709
  %idxprom = zext i32 %2 to i64, !dbg !4710
  %arrayidx = getelementptr [64 x %struct.__extcon_info], [64 x %struct.__extcon_info]* @extcon_info, i64 0, i64 %idxprom, !dbg !4710
  %type1 = getelementptr inbounds %struct.__extcon_info, %struct.__extcon_info* %arrayidx, i32 0, i32 0, !dbg !4711
  %3 = load i32, i32* %type1, align 16, !dbg !4711
  %4 = load i32, i32* %type, align 4, !dbg !4712
  %and = and i32 %3, %4, !dbg !4713
  %tobool = icmp ne i32 %and, 0, !dbg !4714
  %lnot = xor i1 %tobool, true, !dbg !4714
  %lnot2 = xor i1 %lnot, true, !dbg !4715
  store i1 %lnot2, i1* %retval, align 1, !dbg !4716
  br label %return, !dbg !4716

return:                                           ; preds = %if.end, %if.then
  %5 = load i1, i1* %retval, align 1, !dbg !4717
  ret i1 %5, !dbg !4717
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @is_extcon_property_capability(%struct.extcon_dev* %edev, i32 %id, i32 %index, i32 %prop) #0 !dbg !4718 {
entry:
  %retval = alloca i32, align 4
  %edev.addr = alloca %struct.extcon_dev*, align 8
  %id.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %prop.addr = alloca i32, align 4
  %cable = alloca %struct.extcon_cable*, align 8
  %type = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.extcon_dev* %edev, %struct.extcon_dev** %edev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev.addr, metadata !4721, metadata !DIExpression()), !dbg !4722
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !4723, metadata !DIExpression()), !dbg !4724
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4725, metadata !DIExpression()), !dbg !4726
  store i32 %prop, i32* %prop.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prop.addr, metadata !4727, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.declare(metadata %struct.extcon_cable** %cable, metadata !4729, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.declare(metadata i32* %type, metadata !4731, metadata !DIExpression()), !dbg !4732
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4733, metadata !DIExpression()), !dbg !4734
  %0 = load i32, i32* %prop.addr, align 4, !dbg !4735
  %call = call i32 @get_extcon_type(i32 %0) #11, !dbg !4736
  store i32 %call, i32* %type, align 4, !dbg !4737
  %1 = load i32, i32* %type, align 4, !dbg !4738
  %cmp = icmp slt i32 %1, 0, !dbg !4740
  br i1 %cmp, label %if.then, label %if.end, !dbg !4741

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %type, align 4, !dbg !4742
  store i32 %2, i32* %retval, align 4, !dbg !4743
  br label %return, !dbg !4743

if.end:                                           ; preds = %entry
  %3 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4744
  %cables = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %3, i32 0, i32 11, !dbg !4745
  %4 = load %struct.extcon_cable*, %struct.extcon_cable** %cables, align 8, !dbg !4745
  %5 = load i32, i32* %index.addr, align 4, !dbg !4746
  %idxprom = sext i32 %5 to i64, !dbg !4744
  %arrayidx = getelementptr %struct.extcon_cable, %struct.extcon_cable* %4, i64 %idxprom, !dbg !4744
  store %struct.extcon_cable* %arrayidx, %struct.extcon_cable** %cable, align 8, !dbg !4747
  %6 = load i32, i32* %type, align 4, !dbg !4748
  switch i32 %6, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 4, label %sw.bb9
    i32 8, label %sw.bb15
  ], !dbg !4749

sw.bb:                                            ; preds = %if.end
  %7 = load i32, i32* %prop.addr, align 4, !dbg !4750
  %sub = sub i32 %7, 0, !dbg !4752
  %conv = zext i32 %sub to i64, !dbg !4750
  %8 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !4753
  %usb_bits = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %8, i32 0, i32 10, !dbg !4754
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %usb_bits, i64 0, i64 0, !dbg !4753
  %call1 = call zeroext i1 @test_bit(i64 %conv, i64* %arraydecay) #11, !dbg !4755
  %conv2 = zext i1 %call1 to i32, !dbg !4755
  store i32 %conv2, i32* %ret, align 4, !dbg !4756
  br label %sw.epilog, !dbg !4757

sw.bb3:                                           ; preds = %if.end
  %9 = load i32, i32* %prop.addr, align 4, !dbg !4758
  %sub4 = sub i32 %9, 50, !dbg !4759
  %conv5 = zext i32 %sub4 to i64, !dbg !4758
  %10 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !4760
  %chg_bits = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %10, i32 0, i32 11, !dbg !4761
  %arraydecay6 = getelementptr inbounds [1 x i64], [1 x i64]* %chg_bits, i64 0, i64 0, !dbg !4760
  %call7 = call zeroext i1 @test_bit(i64 %conv5, i64* %arraydecay6) #11, !dbg !4762
  %conv8 = zext i1 %call7 to i32, !dbg !4762
  store i32 %conv8, i32* %ret, align 4, !dbg !4763
  br label %sw.epilog, !dbg !4764

sw.bb9:                                           ; preds = %if.end
  %11 = load i32, i32* %prop.addr, align 4, !dbg !4765
  %sub10 = sub i32 %11, 100, !dbg !4766
  %conv11 = zext i32 %sub10 to i64, !dbg !4765
  %12 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !4767
  %jack_bits = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %12, i32 0, i32 12, !dbg !4768
  %arraydecay12 = getelementptr inbounds [1 x i64], [1 x i64]* %jack_bits, i64 0, i64 0, !dbg !4767
  %call13 = call zeroext i1 @test_bit(i64 %conv11, i64* %arraydecay12) #11, !dbg !4769
  %conv14 = zext i1 %call13 to i32, !dbg !4769
  store i32 %conv14, i32* %ret, align 4, !dbg !4770
  br label %sw.epilog, !dbg !4771

sw.bb15:                                          ; preds = %if.end
  %13 = load i32, i32* %prop.addr, align 4, !dbg !4772
  %sub16 = sub i32 %13, 150, !dbg !4773
  %conv17 = zext i32 %sub16 to i64, !dbg !4772
  %14 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !4774
  %disp_bits = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %14, i32 0, i32 13, !dbg !4775
  %arraydecay18 = getelementptr inbounds [1 x i64], [1 x i64]* %disp_bits, i64 0, i64 0, !dbg !4774
  %call19 = call zeroext i1 @test_bit(i64 %conv17, i64* %arraydecay18) #11, !dbg !4776
  %conv20 = zext i1 %call19 to i32, !dbg !4776
  store i32 %conv20, i32* %ret, align 4, !dbg !4777
  br label %sw.epilog, !dbg !4778

sw.default:                                       ; preds = %if.end
  store i32 -22, i32* %ret, align 4, !dbg !4779
  br label %sw.epilog, !dbg !4780

sw.epilog:                                        ; preds = %sw.default, %sw.bb15, %sw.bb9, %sw.bb3, %sw.bb
  %15 = load i32, i32* %ret, align 4, !dbg !4781
  store i32 %15, i32* %retval, align 4, !dbg !4782
  br label %return, !dbg !4782

return:                                           ; preds = %sw.epilog, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !4783
  ret i32 %16, !dbg !4783
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @extcon_set_property(%struct.extcon_dev* %edev, i32 %id, i32 %prop, i32 %prop_val.coerce) #0 !dbg !4784 {
entry:
  %lock.addr.i48 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i48, metadata !3746, metadata !DIExpression()), !dbg !4787
  %flags.addr.i49 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i49, metadata !3756, metadata !DIExpression()), !dbg !4791
  %tmp.i50 = alloca i32, align 4
  %tmp8.i51 = alloca i32, align 4
  %lock.addr.i46 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i46, metadata !3746, metadata !DIExpression()), !dbg !4792
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !3756, metadata !DIExpression()), !dbg !4794
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !3758, metadata !DIExpression()), !dbg !4795
  %retval = alloca i32, align 4
  %prop_val = alloca %union.extcon_property_value, align 4
  %edev.addr = alloca %struct.extcon_dev*, align 8
  %id.addr = alloca i32, align 4
  %prop.addr = alloca i32, align 4
  %cable = alloca %struct.extcon_cable*, align 8
  %flags = alloca i64, align 8
  %index = alloca i32, align 4
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy11 = alloca i64, align 8
  %__dummy212 = alloca i64, align 8
  %tmp15 = alloca i32, align 4
  %coerce.dive = getelementptr inbounds %union.extcon_property_value, %union.extcon_property_value* %prop_val, i32 0, i32 0
  store i32 %prop_val.coerce, i32* %coerce.dive, align 4
  store %struct.extcon_dev* %edev, %struct.extcon_dev** %edev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev.addr, metadata !4802, metadata !DIExpression()), !dbg !4803
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !4804, metadata !DIExpression()), !dbg !4805
  store i32 %prop, i32* %prop.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prop.addr, metadata !4806, metadata !DIExpression()), !dbg !4807
  call void @llvm.dbg.declare(metadata %union.extcon_property_value* %prop_val, metadata !4808, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.declare(metadata %struct.extcon_cable** %cable, metadata !4810, metadata !DIExpression()), !dbg !4811
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4812, metadata !DIExpression()), !dbg !4813
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4814, metadata !DIExpression()), !dbg !4815
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4816, metadata !DIExpression()), !dbg !4817
  store i32 0, i32* %ret, align 4, !dbg !4817
  %0 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4818
  %tobool = icmp ne %struct.extcon_dev* %0, null, !dbg !4818
  br i1 %tobool, label %if.end, label %if.then, !dbg !4820

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !4821
  br label %return, !dbg !4821

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %id.addr, align 4, !dbg !4822
  %2 = load i32, i32* %prop.addr, align 4, !dbg !4824
  %call = call zeroext i1 @is_extcon_property_supported(i32 %1, i32 %2) #11, !dbg !4825
  br i1 %call, label %if.end2, label %if.then1, !dbg !4826

if.then1:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !4827
  br label %return, !dbg !4827

if.end2:                                          ; preds = %if.end
  %3 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4828
  %4 = load i32, i32* %id.addr, align 4, !dbg !4829
  %call3 = call i32 @find_cable_index_by_id(%struct.extcon_dev* %3, i32 %4) #11, !dbg !4830
  store i32 %call3, i32* %index, align 4, !dbg !4831
  %5 = load i32, i32* %index, align 4, !dbg !4832
  %cmp = icmp slt i32 %5, 0, !dbg !4834
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !4835

if.then4:                                         ; preds = %if.end2
  %6 = load i32, i32* %index, align 4, !dbg !4836
  store i32 %6, i32* %retval, align 4, !dbg !4837
  br label %return, !dbg !4837

if.end5:                                          ; preds = %if.end2
  br label %do.body, !dbg !4838

do.body:                                          ; preds = %if.end5
  br label %do.body6, !dbg !4839

do.body6:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4840, metadata !DIExpression()), !dbg !4842
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4843, metadata !DIExpression()), !dbg !4842
  %cmp7 = icmp eq i64* %__dummy, %__dummy2, !dbg !4842
  %conv = zext i1 %cmp7 to i32, !dbg !4842
  store i32 1, i32* %tmp, align 4, !dbg !4842
  %7 = load i32, i32* %tmp, align 4, !dbg !4842
  br label %do.body8, !dbg !4844

do.body8:                                         ; preds = %do.body6
  br label %do.body9, !dbg !4845

do.body9:                                         ; preds = %do.body8
  br label %do.body10, !dbg !4846

do.body10:                                        ; preds = %do.body9
  call void @llvm.dbg.declare(metadata i64* %__dummy11, metadata !4848, metadata !DIExpression()), !dbg !4851
  call void @llvm.dbg.declare(metadata i64* %__dummy212, metadata !4852, metadata !DIExpression()), !dbg !4851
  %cmp13 = icmp eq i64* %__dummy11, %__dummy212, !dbg !4851
  %conv14 = zext i1 %cmp13 to i32, !dbg !4851
  store i32 1, i32* %tmp15, align 4, !dbg !4851
  %8 = load i32, i32* %tmp15, align 4, !dbg !4851
  %call16 = call i64 @arch_local_irq_save() #11, !dbg !4853
  store i64 %call16, i64* %flags, align 8, !dbg !4853
  br label %do.end, !dbg !4853

do.end:                                           ; preds = %do.body10
  br label %do.end17, !dbg !4846

do.end17:                                         ; preds = %do.end
  br label %do.body18, !dbg !4845

do.body18:                                        ; preds = %do.end17
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4854, !srcloc !4855
  br label %do.body19, !dbg !4854

do.body19:                                        ; preds = %do.body18
  %9 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4856
  %lock = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %9, i32 0, i32 8, !dbg !4856
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4857
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !4858
  %rlock.i = bitcast %union.anon.3* %11 to %struct.raw_spinlock*, !dbg !4858
  br label %do.end21, !dbg !4856

do.end21:                                         ; preds = %do.body19
  br label %do.end22, !dbg !4854

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !4845

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !4844

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !4839

do.end25:                                         ; preds = %do.end24
  %12 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4859
  %13 = load i32, i32* %id.addr, align 4, !dbg !4860
  %14 = load i32, i32* %index, align 4, !dbg !4861
  %15 = load i32, i32* %prop.addr, align 4, !dbg !4862
  %call26 = call i32 @is_extcon_property_capability(%struct.extcon_dev* %12, i32 %13, i32 %14, i32 %15) #11, !dbg !4863
  %tobool27 = icmp ne i32 %call26, 0, !dbg !4863
  br i1 %tobool27, label %if.end30, label %if.then28, !dbg !4864

if.then28:                                        ; preds = %do.end25
  %16 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4865
  %lock29 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %16, i32 0, i32 8, !dbg !4866
  %17 = load i64, i64* %flags, align 8, !dbg !4867
  store %struct.spinlock* %lock29, %struct.spinlock** %lock.addr.i48, align 8
  store i64 %17, i64* %flags.addr.i49, align 8
  call void @llvm.dbg.declare(metadata !162, metadata !3853, metadata !DIExpression()) #7, !dbg !4868
  call void @llvm.dbg.declare(metadata !162, metadata !3857, metadata !DIExpression()) #7, !dbg !4868
  store i32 1, i32* %tmp.i50, align 4, !dbg !4868
  %18 = load i32, i32* %tmp.i50, align 4, !dbg !4868
  call void @llvm.dbg.declare(metadata !162, metadata !3858, metadata !DIExpression()) #7, !dbg !4869
  call void @llvm.dbg.declare(metadata !162, metadata !3864, metadata !DIExpression()) #7, !dbg !4869
  store i32 1, i32* %tmp8.i51, align 4, !dbg !4869
  %19 = load i32, i32* %tmp8.i51, align 4, !dbg !4869
  %20 = load i64, i64* %flags.addr.i49, align 8, !dbg !4870
  call void @arch_local_irq_restore(i64 %20) #12, !dbg !4870
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4871, !srcloc !3868
  %21 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i48, align 8, !dbg !4872
  %22 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %21, i32 0, i32 0, !dbg !4872
  %rlock.i52 = bitcast %union.anon.3* %22 to %struct.raw_spinlock*, !dbg !4872
  store i32 -1, i32* %retval, align 4, !dbg !4873
  br label %return, !dbg !4873

if.end30:                                         ; preds = %do.end25
  %23 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4874
  %cables = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %23, i32 0, i32 11, !dbg !4875
  %24 = load %struct.extcon_cable*, %struct.extcon_cable** %cables, align 8, !dbg !4875
  %25 = load i32, i32* %index, align 4, !dbg !4876
  %idxprom = sext i32 %25 to i64, !dbg !4874
  %arrayidx = getelementptr %struct.extcon_cable, %struct.extcon_cable* %24, i64 %idxprom, !dbg !4874
  store %struct.extcon_cable* %arrayidx, %struct.extcon_cable** %cable, align 8, !dbg !4877
  %26 = load i32, i32* %prop.addr, align 4, !dbg !4878
  switch i32 %26, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 50, label %sw.bb33
    i32 100, label %sw.bb37
    i32 150, label %sw.bb41
    i32 151, label %sw.bb41
  ], !dbg !4879

sw.bb:                                            ; preds = %if.end30, %if.end30, %if.end30
  %27 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !4880
  %usb_propval = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %27, i32 0, i32 6, !dbg !4882
  %28 = load i32, i32* %prop.addr, align 4, !dbg !4883
  %sub = sub i32 %28, 0, !dbg !4884
  %idxprom31 = zext i32 %sub to i64, !dbg !4880
  %arrayidx32 = getelementptr [3 x %union.extcon_property_value], [3 x %union.extcon_property_value]* %usb_propval, i64 0, i64 %idxprom31, !dbg !4880
  %29 = bitcast %union.extcon_property_value* %arrayidx32 to i8*, !dbg !4885
  %30 = bitcast %union.extcon_property_value* %prop_val to i8*, !dbg !4885
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %30, i64 4, i1 false), !dbg !4885
  br label %sw.epilog, !dbg !4886

sw.bb33:                                          ; preds = %if.end30
  %31 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !4887
  %chg_propval = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %31, i32 0, i32 7, !dbg !4888
  %32 = load i32, i32* %prop.addr, align 4, !dbg !4889
  %sub34 = sub i32 %32, 50, !dbg !4890
  %idxprom35 = zext i32 %sub34 to i64, !dbg !4887
  %arrayidx36 = getelementptr [1 x %union.extcon_property_value], [1 x %union.extcon_property_value]* %chg_propval, i64 0, i64 %idxprom35, !dbg !4887
  %33 = bitcast %union.extcon_property_value* %arrayidx36 to i8*, !dbg !4891
  %34 = bitcast %union.extcon_property_value* %prop_val to i8*, !dbg !4891
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 4 %34, i64 4, i1 false), !dbg !4891
  br label %sw.epilog, !dbg !4892

sw.bb37:                                          ; preds = %if.end30
  %35 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !4893
  %jack_propval = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %35, i32 0, i32 8, !dbg !4894
  %36 = load i32, i32* %prop.addr, align 4, !dbg !4895
  %sub38 = sub i32 %36, 100, !dbg !4896
  %idxprom39 = zext i32 %sub38 to i64, !dbg !4893
  %arrayidx40 = getelementptr [1 x %union.extcon_property_value], [1 x %union.extcon_property_value]* %jack_propval, i64 0, i64 %idxprom39, !dbg !4893
  %37 = bitcast %union.extcon_property_value* %arrayidx40 to i8*, !dbg !4897
  %38 = bitcast %union.extcon_property_value* %prop_val to i8*, !dbg !4897
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* align 4 %38, i64 4, i1 false), !dbg !4897
  br label %sw.epilog, !dbg !4898

sw.bb41:                                          ; preds = %if.end30, %if.end30
  %39 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !4899
  %disp_propval = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %39, i32 0, i32 9, !dbg !4900
  %40 = load i32, i32* %prop.addr, align 4, !dbg !4901
  %sub42 = sub i32 %40, 150, !dbg !4902
  %idxprom43 = zext i32 %sub42 to i64, !dbg !4899
  %arrayidx44 = getelementptr [2 x %union.extcon_property_value], [2 x %union.extcon_property_value]* %disp_propval, i64 0, i64 %idxprom43, !dbg !4899
  %41 = bitcast %union.extcon_property_value* %arrayidx44 to i8*, !dbg !4903
  %42 = bitcast %union.extcon_property_value* %prop_val to i8*, !dbg !4903
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 4 %42, i64 4, i1 false), !dbg !4903
  br label %sw.epilog, !dbg !4904

sw.default:                                       ; preds = %if.end30
  store i32 -22, i32* %ret, align 4, !dbg !4905
  br label %sw.epilog, !dbg !4906

sw.epilog:                                        ; preds = %sw.default, %sw.bb41, %sw.bb37, %sw.bb33, %sw.bb
  %43 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4907
  %lock45 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %43, i32 0, i32 8, !dbg !4908
  %44 = load i64, i64* %flags, align 8, !dbg !4909
  store %struct.spinlock* %lock45, %struct.spinlock** %lock.addr.i46, align 8
  store i64 %44, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !162, metadata !3853, metadata !DIExpression()) #7, !dbg !4910
  call void @llvm.dbg.declare(metadata !162, metadata !3857, metadata !DIExpression()) #7, !dbg !4910
  store i32 1, i32* %tmp.i, align 4, !dbg !4910
  %45 = load i32, i32* %tmp.i, align 4, !dbg !4910
  call void @llvm.dbg.declare(metadata !162, metadata !3858, metadata !DIExpression()) #7, !dbg !4911
  call void @llvm.dbg.declare(metadata !162, metadata !3864, metadata !DIExpression()) #7, !dbg !4911
  store i32 1, i32* %tmp8.i, align 4, !dbg !4911
  %46 = load i32, i32* %tmp8.i, align 4, !dbg !4911
  %47 = load i64, i64* %flags.addr.i, align 8, !dbg !4912
  call void @arch_local_irq_restore(i64 %47) #12, !dbg !4912
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4913, !srcloc !3868
  %48 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i46, align 8, !dbg !4914
  %49 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %48, i32 0, i32 0, !dbg !4914
  %rlock.i47 = bitcast %union.anon.3* %49 to %struct.raw_spinlock*, !dbg !4914
  %50 = load i32, i32* %ret, align 4, !dbg !4915
  store i32 %50, i32* %retval, align 4, !dbg !4916
  br label %return, !dbg !4916

return:                                           ; preds = %sw.epilog, %if.then28, %if.then4, %if.then1, %if.then
  %51 = load i32, i32* %retval, align 4, !dbg !4917
  ret i32 %51, !dbg !4917
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @extcon_set_property_sync(%struct.extcon_dev* %edev, i32 %id, i32 %prop, i32 %prop_val.coerce) #0 !dbg !4918 {
entry:
  %retval = alloca i32, align 4
  %prop_val = alloca %union.extcon_property_value, align 4
  %edev.addr = alloca %struct.extcon_dev*, align 8
  %id.addr = alloca i32, align 4
  %prop.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %coerce.dive = getelementptr inbounds %union.extcon_property_value, %union.extcon_property_value* %prop_val, i32 0, i32 0
  store i32 %prop_val.coerce, i32* %coerce.dive, align 4
  store %struct.extcon_dev* %edev, %struct.extcon_dev** %edev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev.addr, metadata !4919, metadata !DIExpression()), !dbg !4920
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !4921, metadata !DIExpression()), !dbg !4922
  store i32 %prop, i32* %prop.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prop.addr, metadata !4923, metadata !DIExpression()), !dbg !4924
  call void @llvm.dbg.declare(metadata %union.extcon_property_value* %prop_val, metadata !4925, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4927, metadata !DIExpression()), !dbg !4928
  %0 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4929
  %1 = load i32, i32* %id.addr, align 4, !dbg !4930
  %2 = load i32, i32* %prop.addr, align 4, !dbg !4931
  %coerce.dive1 = getelementptr inbounds %union.extcon_property_value, %union.extcon_property_value* %prop_val, i32 0, i32 0, !dbg !4932
  %3 = load i32, i32* %coerce.dive1, align 4, !dbg !4932
  %call = call i32 @extcon_set_property(%struct.extcon_dev* %0, i32 %1, i32 %2, i32 %3) #11, !dbg !4932
  store i32 %call, i32* %ret, align 4, !dbg !4933
  %4 = load i32, i32* %ret, align 4, !dbg !4934
  %cmp = icmp slt i32 %4, 0, !dbg !4936
  br i1 %cmp, label %if.then, label %if.end, !dbg !4937

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %ret, align 4, !dbg !4938
  store i32 %5, i32* %retval, align 4, !dbg !4939
  br label %return, !dbg !4939

if.end:                                           ; preds = %entry
  %6 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4940
  %7 = load i32, i32* %id.addr, align 4, !dbg !4941
  %call2 = call i32 @extcon_sync(%struct.extcon_dev* %6, i32 %7) #11, !dbg !4942
  store i32 %call2, i32* %retval, align 4, !dbg !4943
  br label %return, !dbg !4943

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !4944
  ret i32 %8, !dbg !4944
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @extcon_get_property_capability(%struct.extcon_dev* %edev, i32 %id, i32 %prop) #0 !dbg !4945 {
entry:
  %retval = alloca i32, align 4
  %edev.addr = alloca %struct.extcon_dev*, align 8
  %id.addr = alloca i32, align 4
  %prop.addr = alloca i32, align 4
  %index = alloca i32, align 4
  store %struct.extcon_dev* %edev, %struct.extcon_dev** %edev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev.addr, metadata !4948, metadata !DIExpression()), !dbg !4949
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !4950, metadata !DIExpression()), !dbg !4951
  store i32 %prop, i32* %prop.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prop.addr, metadata !4952, metadata !DIExpression()), !dbg !4953
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4954, metadata !DIExpression()), !dbg !4955
  %0 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4956
  %tobool = icmp ne %struct.extcon_dev* %0, null, !dbg !4956
  br i1 %tobool, label %if.end, label %if.then, !dbg !4958

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !4959
  br label %return, !dbg !4959

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %id.addr, align 4, !dbg !4960
  %2 = load i32, i32* %prop.addr, align 4, !dbg !4962
  %call = call zeroext i1 @is_extcon_property_supported(i32 %1, i32 %2) #11, !dbg !4963
  br i1 %call, label %if.end2, label %if.then1, !dbg !4964

if.then1:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !4965
  br label %return, !dbg !4965

if.end2:                                          ; preds = %if.end
  %3 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4966
  %4 = load i32, i32* %id.addr, align 4, !dbg !4967
  %call3 = call i32 @find_cable_index_by_id(%struct.extcon_dev* %3, i32 %4) #11, !dbg !4968
  store i32 %call3, i32* %index, align 4, !dbg !4969
  %5 = load i32, i32* %index, align 4, !dbg !4970
  %cmp = icmp slt i32 %5, 0, !dbg !4972
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !4973

if.then4:                                         ; preds = %if.end2
  %6 = load i32, i32* %index, align 4, !dbg !4974
  store i32 %6, i32* %retval, align 4, !dbg !4975
  br label %return, !dbg !4975

if.end5:                                          ; preds = %if.end2
  %7 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4976
  %8 = load i32, i32* %id.addr, align 4, !dbg !4977
  %9 = load i32, i32* %index, align 4, !dbg !4978
  %10 = load i32, i32* %prop.addr, align 4, !dbg !4979
  %call6 = call i32 @is_extcon_property_capability(%struct.extcon_dev* %7, i32 %8, i32 %9, i32 %10) #11, !dbg !4980
  store i32 %call6, i32* %retval, align 4, !dbg !4981
  br label %return, !dbg !4981

return:                                           ; preds = %if.end5, %if.then4, %if.then1, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !4982
  ret i32 %11, !dbg !4982
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @extcon_set_property_capability(%struct.extcon_dev* %edev, i32 %id, i32 %prop) #0 !dbg !4983 {
entry:
  %retval = alloca i32, align 4
  %edev.addr = alloca %struct.extcon_dev*, align 8
  %id.addr = alloca i32, align 4
  %prop.addr = alloca i32, align 4
  %cable = alloca %struct.extcon_cable*, align 8
  %index = alloca i32, align 4
  %type = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.extcon_dev* %edev, %struct.extcon_dev** %edev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev.addr, metadata !4984, metadata !DIExpression()), !dbg !4985
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !4986, metadata !DIExpression()), !dbg !4987
  store i32 %prop, i32* %prop.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prop.addr, metadata !4988, metadata !DIExpression()), !dbg !4989
  call void @llvm.dbg.declare(metadata %struct.extcon_cable** %cable, metadata !4990, metadata !DIExpression()), !dbg !4991
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4992, metadata !DIExpression()), !dbg !4993
  call void @llvm.dbg.declare(metadata i32* %type, metadata !4994, metadata !DIExpression()), !dbg !4995
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4996, metadata !DIExpression()), !dbg !4997
  store i32 0, i32* %ret, align 4, !dbg !4997
  %0 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !4998
  %tobool = icmp ne %struct.extcon_dev* %0, null, !dbg !4998
  br i1 %tobool, label %if.end, label %if.then, !dbg !5000

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !5001
  br label %return, !dbg !5001

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %id.addr, align 4, !dbg !5002
  %2 = load i32, i32* %prop.addr, align 4, !dbg !5004
  %call = call zeroext i1 @is_extcon_property_supported(i32 %1, i32 %2) #11, !dbg !5005
  br i1 %call, label %if.end2, label %if.then1, !dbg !5006

if.then1:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !5007
  br label %return, !dbg !5007

if.end2:                                          ; preds = %if.end
  %3 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5008
  %4 = load i32, i32* %id.addr, align 4, !dbg !5009
  %call3 = call i32 @find_cable_index_by_id(%struct.extcon_dev* %3, i32 %4) #11, !dbg !5010
  store i32 %call3, i32* %index, align 4, !dbg !5011
  %5 = load i32, i32* %index, align 4, !dbg !5012
  %cmp = icmp slt i32 %5, 0, !dbg !5014
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !5015

if.then4:                                         ; preds = %if.end2
  %6 = load i32, i32* %index, align 4, !dbg !5016
  store i32 %6, i32* %retval, align 4, !dbg !5017
  br label %return, !dbg !5017

if.end5:                                          ; preds = %if.end2
  %7 = load i32, i32* %prop.addr, align 4, !dbg !5018
  %call6 = call i32 @get_extcon_type(i32 %7) #11, !dbg !5019
  store i32 %call6, i32* %type, align 4, !dbg !5020
  %8 = load i32, i32* %type, align 4, !dbg !5021
  %cmp7 = icmp slt i32 %8, 0, !dbg !5023
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !5024

if.then8:                                         ; preds = %if.end5
  %9 = load i32, i32* %type, align 4, !dbg !5025
  store i32 %9, i32* %retval, align 4, !dbg !5026
  br label %return, !dbg !5026

if.end9:                                          ; preds = %if.end5
  %10 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5027
  %cables = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %10, i32 0, i32 11, !dbg !5028
  %11 = load %struct.extcon_cable*, %struct.extcon_cable** %cables, align 8, !dbg !5028
  %12 = load i32, i32* %index, align 4, !dbg !5029
  %idxprom = sext i32 %12 to i64, !dbg !5027
  %arrayidx = getelementptr %struct.extcon_cable, %struct.extcon_cable* %11, i64 %idxprom, !dbg !5027
  store %struct.extcon_cable* %arrayidx, %struct.extcon_cable** %cable, align 8, !dbg !5030
  %13 = load i32, i32* %type, align 4, !dbg !5031
  switch i32 %13, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb10
    i32 4, label %sw.bb14
    i32 8, label %sw.bb18
  ], !dbg !5032

sw.bb:                                            ; preds = %if.end9
  %14 = load i32, i32* %prop.addr, align 4, !dbg !5033
  %sub = sub i32 %14, 0, !dbg !5035
  %conv = zext i32 %sub to i64, !dbg !5033
  %15 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !5036
  %usb_bits = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %15, i32 0, i32 10, !dbg !5037
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %usb_bits, i64 0, i64 0, !dbg !5036
  call void @__set_bit(i64 %conv, i64* %arraydecay) #11, !dbg !5038
  br label %sw.epilog, !dbg !5039

sw.bb10:                                          ; preds = %if.end9
  %16 = load i32, i32* %prop.addr, align 4, !dbg !5040
  %sub11 = sub i32 %16, 50, !dbg !5041
  %conv12 = zext i32 %sub11 to i64, !dbg !5040
  %17 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !5042
  %chg_bits = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %17, i32 0, i32 11, !dbg !5043
  %arraydecay13 = getelementptr inbounds [1 x i64], [1 x i64]* %chg_bits, i64 0, i64 0, !dbg !5042
  call void @__set_bit(i64 %conv12, i64* %arraydecay13) #11, !dbg !5044
  br label %sw.epilog, !dbg !5045

sw.bb14:                                          ; preds = %if.end9
  %18 = load i32, i32* %prop.addr, align 4, !dbg !5046
  %sub15 = sub i32 %18, 100, !dbg !5047
  %conv16 = zext i32 %sub15 to i64, !dbg !5046
  %19 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !5048
  %jack_bits = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %19, i32 0, i32 12, !dbg !5049
  %arraydecay17 = getelementptr inbounds [1 x i64], [1 x i64]* %jack_bits, i64 0, i64 0, !dbg !5048
  call void @__set_bit(i64 %conv16, i64* %arraydecay17) #11, !dbg !5050
  br label %sw.epilog, !dbg !5051

sw.bb18:                                          ; preds = %if.end9
  %20 = load i32, i32* %prop.addr, align 4, !dbg !5052
  %sub19 = sub i32 %20, 150, !dbg !5053
  %conv20 = zext i32 %sub19 to i64, !dbg !5052
  %21 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !5054
  %disp_bits = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %21, i32 0, i32 13, !dbg !5055
  %arraydecay21 = getelementptr inbounds [1 x i64], [1 x i64]* %disp_bits, i64 0, i64 0, !dbg !5054
  call void @__set_bit(i64 %conv20, i64* %arraydecay21) #11, !dbg !5056
  br label %sw.epilog, !dbg !5057

sw.default:                                       ; preds = %if.end9
  store i32 -22, i32* %ret, align 4, !dbg !5058
  br label %sw.epilog, !dbg !5059

sw.epilog:                                        ; preds = %sw.default, %sw.bb18, %sw.bb14, %sw.bb10, %sw.bb
  %22 = load i32, i32* %ret, align 4, !dbg !5060
  store i32 %22, i32* %retval, align 4, !dbg !5061
  br label %return, !dbg !5061

return:                                           ; preds = %sw.epilog, %if.then8, %if.then4, %if.then1, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !5062
  ret i32 %23, !dbg !5062
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_extcon_type(i32 %prop) #0 !dbg !5063 {
entry:
  %retval = alloca i32, align 4
  %prop.addr = alloca i32, align 4
  store i32 %prop, i32* %prop.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prop.addr, metadata !5066, metadata !DIExpression()), !dbg !5067
  %0 = load i32, i32* %prop.addr, align 4, !dbg !5068
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 50, label %sw.bb1
    i32 100, label %sw.bb2
    i32 150, label %sw.bb3
    i32 151, label %sw.bb3
  ], !dbg !5069

sw.bb:                                            ; preds = %entry, %entry, %entry
  store i32 1, i32* %retval, align 4, !dbg !5070
  br label %return, !dbg !5070

sw.bb1:                                           ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !5072
  br label %return, !dbg !5072

sw.bb2:                                           ; preds = %entry
  store i32 4, i32* %retval, align 4, !dbg !5073
  br label %return, !dbg !5073

sw.bb3:                                           ; preds = %entry, %entry
  store i32 8, i32* %retval, align 4, !dbg !5074
  br label %return, !dbg !5074

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !5075
  br label %return, !dbg !5075

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i32, i32* %retval, align 4, !dbg !5076
  ret i32 %1, !dbg !5076
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__set_bit(i64 %nr, i64* %addr) #0 !dbg !5077 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !5083, metadata !DIExpression()), !dbg !5086
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !5088, metadata !DIExpression()), !dbg !5089
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !5090, metadata !DIExpression()), !dbg !5098
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5100, metadata !DIExpression()), !dbg !5101
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !5102, metadata !DIExpression()), !dbg !5103
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !5104, metadata !DIExpression()), !dbg !5105
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !5106
  %1 = load i64, i64* %nr.addr, align 8, !dbg !5107
  %div = sdiv i64 %1, 64, !dbg !5107
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !5108
  %2 = bitcast i64* %add.ptr to i8*, !dbg !5106
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !5109
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5110
  %conv.i = trunc i64 %4 to i32, !dbg !5110
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !5111
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !5112
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !5112
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #12, !dbg !5112
  %7 = load i64, i64* %nr.addr, align 8, !dbg !5113
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !5114
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !5115
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !5116
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #7, !dbg !5117, !srcloc !5118
  ret void, !dbg !5119
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.extcon_dev* @extcon_get_extcon_dev(i8* %extcon_name) #0 !dbg !5120 {
entry:
  %retval = alloca %struct.extcon_dev*, align 8
  %extcon_name.addr = alloca i8*, align 8
  %sd = alloca %struct.extcon_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.extcon_dev*, align 8
  %__mptr6 = alloca i8*, align 8
  %tmp10 = alloca %struct.extcon_dev*, align 8
  store i8* %extcon_name, i8** %extcon_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %extcon_name.addr, metadata !5123, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %sd, metadata !5125, metadata !DIExpression()), !dbg !5126
  %0 = load i8*, i8** %extcon_name.addr, align 8, !dbg !5127
  %tobool = icmp ne i8* %0, null, !dbg !5127
  br i1 %tobool, label %if.end, label %if.then, !dbg !5129

if.then:                                          ; preds = %entry
  %call = call i8* @ERR_PTR(i64 -22) #11, !dbg !5130
  %1 = bitcast i8* %call to %struct.extcon_dev*, !dbg !5130
  store %struct.extcon_dev* %1, %struct.extcon_dev** %retval, align 8, !dbg !5131
  br label %return, !dbg !5131

if.end:                                           ; preds = %entry
  call void @mutex_lock(%struct.mutex* @extcon_dev_list_lock) #11, !dbg !5132
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5133, metadata !DIExpression()), !dbg !5136
  %2 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @extcon_dev_list, i32 0, i32 0), align 8, !dbg !5136
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !5136
  store i8* %3, i8** %__mptr, align 8, !dbg !5136
  br label %do.body, !dbg !5136

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !5137

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !5136
  %add.ptr = getelementptr i8, i8* %4, i64 -736, !dbg !5136
  %5 = bitcast i8* %add.ptr to %struct.extcon_dev*, !dbg !5136
  store %struct.extcon_dev* %5, %struct.extcon_dev** %tmp, align 8, !dbg !5137
  %6 = load %struct.extcon_dev*, %struct.extcon_dev** %tmp, align 8, !dbg !5136
  store %struct.extcon_dev* %6, %struct.extcon_dev** %sd, align 8, !dbg !5139
  br label %for.cond, !dbg !5139

for.cond:                                         ; preds = %do.end9, %do.end
  %7 = load %struct.extcon_dev*, %struct.extcon_dev** %sd, align 8, !dbg !5140
  %entry1 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %7, i32 0, i32 6, !dbg !5140
  %cmp = icmp eq %struct.list_head* %entry1, @extcon_dev_list, !dbg !5140
  %lnot = xor i1 %cmp, true, !dbg !5140
  br i1 %lnot, label %for.body, label %for.end, !dbg !5139

for.body:                                         ; preds = %for.cond
  %8 = load %struct.extcon_dev*, %struct.extcon_dev** %sd, align 8, !dbg !5142
  %name = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %8, i32 0, i32 0, !dbg !5145
  %9 = load i8*, i8** %name, align 8, !dbg !5145
  %10 = load i8*, i8** %extcon_name.addr, align 8, !dbg !5146
  %call2 = call i32 @strcmp(i8* %9, i8* %10) #11, !dbg !5147
  %tobool3 = icmp ne i32 %call2, 0, !dbg !5147
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !5148

if.then4:                                         ; preds = %for.body
  br label %out, !dbg !5149

if.end5:                                          ; preds = %for.body
  br label %for.inc, !dbg !5150

for.inc:                                          ; preds = %if.end5
  call void @llvm.dbg.declare(metadata i8** %__mptr6, metadata !5151, metadata !DIExpression()), !dbg !5153
  %11 = load %struct.extcon_dev*, %struct.extcon_dev** %sd, align 8, !dbg !5153
  %entry7 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %11, i32 0, i32 6, !dbg !5153
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry7, i32 0, i32 0, !dbg !5153
  %12 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5153
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !5153
  store i8* %13, i8** %__mptr6, align 8, !dbg !5153
  br label %do.body8, !dbg !5153

do.body8:                                         ; preds = %for.inc
  br label %do.end9, !dbg !5154

do.end9:                                          ; preds = %do.body8
  %14 = load i8*, i8** %__mptr6, align 8, !dbg !5153
  %add.ptr11 = getelementptr i8, i8* %14, i64 -736, !dbg !5153
  %15 = bitcast i8* %add.ptr11 to %struct.extcon_dev*, !dbg !5153
  store %struct.extcon_dev* %15, %struct.extcon_dev** %tmp10, align 8, !dbg !5154
  %16 = load %struct.extcon_dev*, %struct.extcon_dev** %tmp10, align 8, !dbg !5153
  store %struct.extcon_dev* %16, %struct.extcon_dev** %sd, align 8, !dbg !5140
  br label %for.cond, !dbg !5140, !llvm.loop !5156

for.end:                                          ; preds = %for.cond
  store %struct.extcon_dev* null, %struct.extcon_dev** %sd, align 8, !dbg !5158
  br label %out, !dbg !5159

out:                                              ; preds = %for.end, %if.then4
  call void @llvm.dbg.label(metadata !5160), !dbg !5161
  call void @mutex_unlock(%struct.mutex* @extcon_dev_list_lock) #11, !dbg !5162
  %17 = load %struct.extcon_dev*, %struct.extcon_dev** %sd, align 8, !dbg !5163
  store %struct.extcon_dev* %17, %struct.extcon_dev** %retval, align 8, !dbg !5164
  br label %return, !dbg !5164

return:                                           ; preds = %out, %if.then
  %18 = load %struct.extcon_dev*, %struct.extcon_dev** %retval, align 8, !dbg !5165
  ret %struct.extcon_dev* %18, !dbg !5165
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !5166 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !5170, metadata !DIExpression()), !dbg !5171
  %0 = load i64, i64* %error.addr, align 8, !dbg !5172
  %1 = inttoptr i64 %0 to i8*, !dbg !5173
  ret i8* %1, !dbg !5174
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) #2

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @extcon_register_notifier(%struct.extcon_dev* %edev, i32 %id, %struct.notifier_block* %nb) #0 !dbg !5175 {
entry:
  %lock.addr.i26 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i26, metadata !3746, metadata !DIExpression()), !dbg !5178
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !3756, metadata !DIExpression()), !dbg !5180
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !3758, metadata !DIExpression()), !dbg !5181
  %retval = alloca i32, align 4
  %edev.addr = alloca %struct.extcon_dev*, align 8
  %id.addr = alloca i32, align 4
  %nb.addr = alloca %struct.notifier_block*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %idx = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  store %struct.extcon_dev* %edev, %struct.extcon_dev** %edev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev.addr, metadata !5188, metadata !DIExpression()), !dbg !5189
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !5190, metadata !DIExpression()), !dbg !5191
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !5192, metadata !DIExpression()), !dbg !5193
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5194, metadata !DIExpression()), !dbg !5195
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5196, metadata !DIExpression()), !dbg !5197
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !5198, metadata !DIExpression()), !dbg !5199
  %0 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5200
  %tobool = icmp ne %struct.extcon_dev* %0, null, !dbg !5200
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5202

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !5203
  %tobool1 = icmp ne %struct.notifier_block* %1, null, !dbg !5203
  br i1 %tobool1, label %if.end, label %if.then, !dbg !5204

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !5205
  br label %return, !dbg !5205

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5206
  %3 = load i32, i32* %id.addr, align 4, !dbg !5207
  %call = call i32 @find_cable_index_by_id(%struct.extcon_dev* %2, i32 %3) #11, !dbg !5208
  store i32 %call, i32* %idx, align 4, !dbg !5209
  %4 = load i32, i32* %idx, align 4, !dbg !5210
  %cmp = icmp slt i32 %4, 0, !dbg !5212
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !5213

if.then2:                                         ; preds = %if.end
  %5 = load i32, i32* %idx, align 4, !dbg !5214
  store i32 %5, i32* %retval, align 4, !dbg !5215
  br label %return, !dbg !5215

if.end3:                                          ; preds = %if.end
  br label %do.body, !dbg !5216

do.body:                                          ; preds = %if.end3
  br label %do.body4, !dbg !5217

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5218, metadata !DIExpression()), !dbg !5220
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5221, metadata !DIExpression()), !dbg !5220
  %cmp5 = icmp eq i64* %__dummy, %__dummy2, !dbg !5220
  %conv = zext i1 %cmp5 to i32, !dbg !5220
  store i32 1, i32* %tmp, align 4, !dbg !5220
  %6 = load i32, i32* %tmp, align 4, !dbg !5220
  br label %do.body6, !dbg !5222

do.body6:                                         ; preds = %do.body4
  br label %do.body7, !dbg !5223

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !5224

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !5226, metadata !DIExpression()), !dbg !5229
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !5230, metadata !DIExpression()), !dbg !5229
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !5229
  %conv12 = zext i1 %cmp11 to i32, !dbg !5229
  store i32 1, i32* %tmp13, align 4, !dbg !5229
  %7 = load i32, i32* %tmp13, align 4, !dbg !5229
  %call14 = call i64 @arch_local_irq_save() #11, !dbg !5231
  store i64 %call14, i64* %flags, align 8, !dbg !5231
  br label %do.end, !dbg !5231

do.end:                                           ; preds = %do.body8
  br label %do.end15, !dbg !5224

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !5223

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5232, !srcloc !5233
  br label %do.body17, !dbg !5232

do.body17:                                        ; preds = %do.body16
  %8 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5234
  %lock = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %8, i32 0, i32 8, !dbg !5234
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5235
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !5236
  %rlock.i = bitcast %union.anon.3* %10 to %struct.raw_spinlock*, !dbg !5236
  br label %do.end19, !dbg !5234

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !5232

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !5223

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !5222

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !5217

do.end23:                                         ; preds = %do.end22
  %11 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5237
  %nh = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %11, i32 0, i32 5, !dbg !5238
  %12 = load %struct.raw_notifier_head*, %struct.raw_notifier_head** %nh, align 8, !dbg !5238
  %13 = load i32, i32* %idx, align 4, !dbg !5239
  %idxprom = sext i32 %13 to i64, !dbg !5237
  %arrayidx = getelementptr %struct.raw_notifier_head, %struct.raw_notifier_head* %12, i64 %idxprom, !dbg !5237
  %14 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !5240
  %call24 = call i32 @raw_notifier_chain_register(%struct.raw_notifier_head* %arrayidx, %struct.notifier_block* %14) #11, !dbg !5241
  store i32 %call24, i32* %ret, align 4, !dbg !5242
  %15 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5243
  %lock25 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %15, i32 0, i32 8, !dbg !5244
  %16 = load i64, i64* %flags, align 8, !dbg !5245
  store %struct.spinlock* %lock25, %struct.spinlock** %lock.addr.i26, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !162, metadata !3853, metadata !DIExpression()) #7, !dbg !5246
  call void @llvm.dbg.declare(metadata !162, metadata !3857, metadata !DIExpression()) #7, !dbg !5246
  store i32 1, i32* %tmp.i, align 4, !dbg !5246
  %17 = load i32, i32* %tmp.i, align 4, !dbg !5246
  call void @llvm.dbg.declare(metadata !162, metadata !3858, metadata !DIExpression()) #7, !dbg !5247
  call void @llvm.dbg.declare(metadata !162, metadata !3864, metadata !DIExpression()) #7, !dbg !5247
  store i32 1, i32* %tmp8.i, align 4, !dbg !5247
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !5247
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !5248
  call void @arch_local_irq_restore(i64 %19) #12, !dbg !5248
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5249, !srcloc !3868
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i26, align 8, !dbg !5250
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !5250
  %rlock.i27 = bitcast %union.anon.3* %21 to %struct.raw_spinlock*, !dbg !5250
  %22 = load i32, i32* %ret, align 4, !dbg !5251
  store i32 %22, i32* %retval, align 4, !dbg !5252
  br label %return, !dbg !5252

return:                                           ; preds = %do.end23, %if.then2, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !5253
  ret i32 %23, !dbg !5253
}

; Function Attrs: noredzone
declare dso_local i32 @raw_notifier_chain_register(%struct.raw_notifier_head*, %struct.notifier_block*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @extcon_unregister_notifier(%struct.extcon_dev* %edev, i32 %id, %struct.notifier_block* %nb) #0 !dbg !5254 {
entry:
  %lock.addr.i26 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i26, metadata !3746, metadata !DIExpression()), !dbg !5255
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !3756, metadata !DIExpression()), !dbg !5257
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !3758, metadata !DIExpression()), !dbg !5258
  %retval = alloca i32, align 4
  %edev.addr = alloca %struct.extcon_dev*, align 8
  %id.addr = alloca i32, align 4
  %nb.addr = alloca %struct.notifier_block*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %idx = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  store %struct.extcon_dev* %edev, %struct.extcon_dev** %edev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev.addr, metadata !5265, metadata !DIExpression()), !dbg !5266
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !5267, metadata !DIExpression()), !dbg !5268
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !5269, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5271, metadata !DIExpression()), !dbg !5272
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5273, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !5275, metadata !DIExpression()), !dbg !5276
  %0 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5277
  %tobool = icmp ne %struct.extcon_dev* %0, null, !dbg !5277
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5279

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !5280
  %tobool1 = icmp ne %struct.notifier_block* %1, null, !dbg !5280
  br i1 %tobool1, label %if.end, label %if.then, !dbg !5281

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !5282
  br label %return, !dbg !5282

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5283
  %3 = load i32, i32* %id.addr, align 4, !dbg !5284
  %call = call i32 @find_cable_index_by_id(%struct.extcon_dev* %2, i32 %3) #11, !dbg !5285
  store i32 %call, i32* %idx, align 4, !dbg !5286
  %4 = load i32, i32* %idx, align 4, !dbg !5287
  %cmp = icmp slt i32 %4, 0, !dbg !5289
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !5290

if.then2:                                         ; preds = %if.end
  %5 = load i32, i32* %idx, align 4, !dbg !5291
  store i32 %5, i32* %retval, align 4, !dbg !5292
  br label %return, !dbg !5292

if.end3:                                          ; preds = %if.end
  br label %do.body, !dbg !5293

do.body:                                          ; preds = %if.end3
  br label %do.body4, !dbg !5294

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5295, metadata !DIExpression()), !dbg !5297
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5298, metadata !DIExpression()), !dbg !5297
  %cmp5 = icmp eq i64* %__dummy, %__dummy2, !dbg !5297
  %conv = zext i1 %cmp5 to i32, !dbg !5297
  store i32 1, i32* %tmp, align 4, !dbg !5297
  %6 = load i32, i32* %tmp, align 4, !dbg !5297
  br label %do.body6, !dbg !5299

do.body6:                                         ; preds = %do.body4
  br label %do.body7, !dbg !5300

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !5301

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !5303, metadata !DIExpression()), !dbg !5306
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !5307, metadata !DIExpression()), !dbg !5306
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !5306
  %conv12 = zext i1 %cmp11 to i32, !dbg !5306
  store i32 1, i32* %tmp13, align 4, !dbg !5306
  %7 = load i32, i32* %tmp13, align 4, !dbg !5306
  %call14 = call i64 @arch_local_irq_save() #11, !dbg !5308
  store i64 %call14, i64* %flags, align 8, !dbg !5308
  br label %do.end, !dbg !5308

do.end:                                           ; preds = %do.body8
  br label %do.end15, !dbg !5301

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !5300

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5309, !srcloc !5310
  br label %do.body17, !dbg !5309

do.body17:                                        ; preds = %do.body16
  %8 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5311
  %lock = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %8, i32 0, i32 8, !dbg !5311
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5312
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !5313
  %rlock.i = bitcast %union.anon.3* %10 to %struct.raw_spinlock*, !dbg !5313
  br label %do.end19, !dbg !5311

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !5309

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !5300

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !5299

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !5294

do.end23:                                         ; preds = %do.end22
  %11 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5314
  %nh = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %11, i32 0, i32 5, !dbg !5315
  %12 = load %struct.raw_notifier_head*, %struct.raw_notifier_head** %nh, align 8, !dbg !5315
  %13 = load i32, i32* %idx, align 4, !dbg !5316
  %idxprom = sext i32 %13 to i64, !dbg !5314
  %arrayidx = getelementptr %struct.raw_notifier_head, %struct.raw_notifier_head* %12, i64 %idxprom, !dbg !5314
  %14 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !5317
  %call24 = call i32 @raw_notifier_chain_unregister(%struct.raw_notifier_head* %arrayidx, %struct.notifier_block* %14) #11, !dbg !5318
  store i32 %call24, i32* %ret, align 4, !dbg !5319
  %15 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5320
  %lock25 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %15, i32 0, i32 8, !dbg !5321
  %16 = load i64, i64* %flags, align 8, !dbg !5322
  store %struct.spinlock* %lock25, %struct.spinlock** %lock.addr.i26, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !162, metadata !3853, metadata !DIExpression()) #7, !dbg !5323
  call void @llvm.dbg.declare(metadata !162, metadata !3857, metadata !DIExpression()) #7, !dbg !5323
  store i32 1, i32* %tmp.i, align 4, !dbg !5323
  %17 = load i32, i32* %tmp.i, align 4, !dbg !5323
  call void @llvm.dbg.declare(metadata !162, metadata !3858, metadata !DIExpression()) #7, !dbg !5324
  call void @llvm.dbg.declare(metadata !162, metadata !3864, metadata !DIExpression()) #7, !dbg !5324
  store i32 1, i32* %tmp8.i, align 4, !dbg !5324
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !5324
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !5325
  call void @arch_local_irq_restore(i64 %19) #12, !dbg !5325
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5326, !srcloc !3868
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i26, align 8, !dbg !5327
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !5327
  %rlock.i27 = bitcast %union.anon.3* %21 to %struct.raw_spinlock*, !dbg !5327
  %22 = load i32, i32* %ret, align 4, !dbg !5328
  store i32 %22, i32* %retval, align 4, !dbg !5329
  br label %return, !dbg !5329

return:                                           ; preds = %do.end23, %if.then2, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !5330
  ret i32 %23, !dbg !5330
}

; Function Attrs: noredzone
declare dso_local i32 @raw_notifier_chain_unregister(%struct.raw_notifier_head*, %struct.notifier_block*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @extcon_register_notifier_all(%struct.extcon_dev* %edev, %struct.notifier_block* %nb) #0 !dbg !5331 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !3746, metadata !DIExpression()), !dbg !5334
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !3756, metadata !DIExpression()), !dbg !5336
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !3758, metadata !DIExpression()), !dbg !5337
  %retval = alloca i32, align 4
  %edev.addr = alloca %struct.extcon_dev*, align 8
  %nb.addr = alloca %struct.notifier_block*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.extcon_dev* %edev, %struct.extcon_dev** %edev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev.addr, metadata !5344, metadata !DIExpression()), !dbg !5345
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !5346, metadata !DIExpression()), !dbg !5347
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5348, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5350, metadata !DIExpression()), !dbg !5351
  %0 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5352
  %tobool = icmp ne %struct.extcon_dev* %0, null, !dbg !5352
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5354

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !5355
  %tobool1 = icmp ne %struct.notifier_block* %1, null, !dbg !5355
  br i1 %tobool1, label %if.end, label %if.then, !dbg !5356

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !5357
  br label %return, !dbg !5357

if.end:                                           ; preds = %lor.lhs.false
  br label %do.body, !dbg !5358

do.body:                                          ; preds = %if.end
  br label %do.body2, !dbg !5359

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5360, metadata !DIExpression()), !dbg !5362
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5363, metadata !DIExpression()), !dbg !5362
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5362
  %conv = zext i1 %cmp to i32, !dbg !5362
  store i32 1, i32* %tmp, align 4, !dbg !5362
  %2 = load i32, i32* %tmp, align 4, !dbg !5362
  br label %do.body3, !dbg !5364

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !5365

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !5366

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !5368, metadata !DIExpression()), !dbg !5371
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !5372, metadata !DIExpression()), !dbg !5371
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !5371
  %conv9 = zext i1 %cmp8 to i32, !dbg !5371
  store i32 1, i32* %tmp10, align 4, !dbg !5371
  %3 = load i32, i32* %tmp10, align 4, !dbg !5371
  %call = call i64 @arch_local_irq_save() #11, !dbg !5373
  store i64 %call, i64* %flags, align 8, !dbg !5373
  br label %do.end, !dbg !5373

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !5366

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !5365

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5374, !srcloc !5375
  br label %do.body13, !dbg !5374

do.body13:                                        ; preds = %do.body12
  %4 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5376
  %lock = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %4, i32 0, i32 8, !dbg !5376
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5377
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !5378
  %rlock.i = bitcast %union.anon.3* %6 to %struct.raw_spinlock*, !dbg !5378
  br label %do.end15, !dbg !5376

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !5374

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !5365

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !5364

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !5359

do.end19:                                         ; preds = %do.end18
  %7 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5379
  %nh_all = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %7, i32 0, i32 4, !dbg !5380
  %8 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !5381
  %call20 = call i32 @raw_notifier_chain_register(%struct.raw_notifier_head* %nh_all, %struct.notifier_block* %8) #11, !dbg !5382
  store i32 %call20, i32* %ret, align 4, !dbg !5383
  %9 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5384
  %lock21 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %9, i32 0, i32 8, !dbg !5385
  %10 = load i64, i64* %flags, align 8, !dbg !5386
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %10, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !162, metadata !3853, metadata !DIExpression()) #7, !dbg !5387
  call void @llvm.dbg.declare(metadata !162, metadata !3857, metadata !DIExpression()) #7, !dbg !5387
  store i32 1, i32* %tmp.i, align 4, !dbg !5387
  %11 = load i32, i32* %tmp.i, align 4, !dbg !5387
  call void @llvm.dbg.declare(metadata !162, metadata !3858, metadata !DIExpression()) #7, !dbg !5388
  call void @llvm.dbg.declare(metadata !162, metadata !3864, metadata !DIExpression()) #7, !dbg !5388
  store i32 1, i32* %tmp8.i, align 4, !dbg !5388
  %12 = load i32, i32* %tmp8.i, align 4, !dbg !5388
  %13 = load i64, i64* %flags.addr.i, align 8, !dbg !5389
  call void @arch_local_irq_restore(i64 %13) #12, !dbg !5389
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5390, !srcloc !3868
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !5391
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !5391
  %rlock.i23 = bitcast %union.anon.3* %15 to %struct.raw_spinlock*, !dbg !5391
  %16 = load i32, i32* %ret, align 4, !dbg !5392
  store i32 %16, i32* %retval, align 4, !dbg !5393
  br label %return, !dbg !5393

return:                                           ; preds = %do.end19, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !5394
  ret i32 %17, !dbg !5394
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @extcon_unregister_notifier_all(%struct.extcon_dev* %edev, %struct.notifier_block* %nb) #0 !dbg !5395 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !3746, metadata !DIExpression()), !dbg !5396
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !3756, metadata !DIExpression()), !dbg !5398
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !3758, metadata !DIExpression()), !dbg !5399
  %retval = alloca i32, align 4
  %edev.addr = alloca %struct.extcon_dev*, align 8
  %nb.addr = alloca %struct.notifier_block*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.extcon_dev* %edev, %struct.extcon_dev** %edev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev.addr, metadata !5406, metadata !DIExpression()), !dbg !5407
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !5408, metadata !DIExpression()), !dbg !5409
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5410, metadata !DIExpression()), !dbg !5411
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5412, metadata !DIExpression()), !dbg !5413
  %0 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5414
  %tobool = icmp ne %struct.extcon_dev* %0, null, !dbg !5414
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5416

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !5417
  %tobool1 = icmp ne %struct.notifier_block* %1, null, !dbg !5417
  br i1 %tobool1, label %if.end, label %if.then, !dbg !5418

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !5419
  br label %return, !dbg !5419

if.end:                                           ; preds = %lor.lhs.false
  br label %do.body, !dbg !5420

do.body:                                          ; preds = %if.end
  br label %do.body2, !dbg !5421

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5422, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5425, metadata !DIExpression()), !dbg !5424
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5424
  %conv = zext i1 %cmp to i32, !dbg !5424
  store i32 1, i32* %tmp, align 4, !dbg !5424
  %2 = load i32, i32* %tmp, align 4, !dbg !5424
  br label %do.body3, !dbg !5426

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !5427

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !5428

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !5430, metadata !DIExpression()), !dbg !5433
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !5434, metadata !DIExpression()), !dbg !5433
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !5433
  %conv9 = zext i1 %cmp8 to i32, !dbg !5433
  store i32 1, i32* %tmp10, align 4, !dbg !5433
  %3 = load i32, i32* %tmp10, align 4, !dbg !5433
  %call = call i64 @arch_local_irq_save() #11, !dbg !5435
  store i64 %call, i64* %flags, align 8, !dbg !5435
  br label %do.end, !dbg !5435

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !5428

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !5427

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5436, !srcloc !5437
  br label %do.body13, !dbg !5436

do.body13:                                        ; preds = %do.body12
  %4 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5438
  %lock = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %4, i32 0, i32 8, !dbg !5438
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5439
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !5440
  %rlock.i = bitcast %union.anon.3* %6 to %struct.raw_spinlock*, !dbg !5440
  br label %do.end15, !dbg !5438

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !5436

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !5427

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !5426

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !5421

do.end19:                                         ; preds = %do.end18
  %7 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5441
  %nh_all = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %7, i32 0, i32 4, !dbg !5442
  %8 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !5443
  %call20 = call i32 @raw_notifier_chain_unregister(%struct.raw_notifier_head* %nh_all, %struct.notifier_block* %8) #11, !dbg !5444
  store i32 %call20, i32* %ret, align 4, !dbg !5445
  %9 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5446
  %lock21 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %9, i32 0, i32 8, !dbg !5447
  %10 = load i64, i64* %flags, align 8, !dbg !5448
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %10, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !162, metadata !3853, metadata !DIExpression()) #7, !dbg !5449
  call void @llvm.dbg.declare(metadata !162, metadata !3857, metadata !DIExpression()) #7, !dbg !5449
  store i32 1, i32* %tmp.i, align 4, !dbg !5449
  %11 = load i32, i32* %tmp.i, align 4, !dbg !5449
  call void @llvm.dbg.declare(metadata !162, metadata !3858, metadata !DIExpression()) #7, !dbg !5450
  call void @llvm.dbg.declare(metadata !162, metadata !3864, metadata !DIExpression()) #7, !dbg !5450
  store i32 1, i32* %tmp8.i, align 4, !dbg !5450
  %12 = load i32, i32* %tmp8.i, align 4, !dbg !5450
  %13 = load i64, i64* %flags.addr.i, align 8, !dbg !5451
  call void @arch_local_irq_restore(i64 %13) #12, !dbg !5451
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5452, !srcloc !3868
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !5453
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !5453
  %rlock.i23 = bitcast %union.anon.3* %15 to %struct.raw_spinlock*, !dbg !5453
  %16 = load i32, i32* %ret, align 4, !dbg !5454
  store i32 %16, i32* %retval, align 4, !dbg !5455
  br label %return, !dbg !5455

return:                                           ; preds = %do.end19, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !5456
  ret i32 %17, !dbg !5456
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.extcon_dev* @extcon_dev_allocate(i32* %supported_cable) #0 !dbg !5457 {
entry:
  %retval = alloca %struct.extcon_dev*, align 8
  %supported_cable.addr = alloca i32*, align 8
  %edev = alloca %struct.extcon_dev*, align 8
  store i32* %supported_cable, i32** %supported_cable.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %supported_cable.addr, metadata !5460, metadata !DIExpression()), !dbg !5461
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev, metadata !5462, metadata !DIExpression()), !dbg !5463
  %0 = load i32*, i32** %supported_cable.addr, align 8, !dbg !5464
  %tobool = icmp ne i32* %0, null, !dbg !5464
  br i1 %tobool, label %if.end, label %if.then, !dbg !5466

if.then:                                          ; preds = %entry
  %call = call i8* @ERR_PTR(i64 -22) #11, !dbg !5467
  %1 = bitcast i8* %call to %struct.extcon_dev*, !dbg !5467
  store %struct.extcon_dev* %1, %struct.extcon_dev** %retval, align 8, !dbg !5468
  br label %return, !dbg !5468

if.end:                                           ; preds = %entry
  %call1 = call i8* @kzalloc(i64 872, i32 3264) #11, !dbg !5469
  %2 = bitcast i8* %call1 to %struct.extcon_dev*, !dbg !5469
  store %struct.extcon_dev* %2, %struct.extcon_dev** %edev, align 8, !dbg !5470
  %3 = load %struct.extcon_dev*, %struct.extcon_dev** %edev, align 8, !dbg !5471
  %tobool2 = icmp ne %struct.extcon_dev* %3, null, !dbg !5471
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !5473

if.then3:                                         ; preds = %if.end
  %call4 = call i8* @ERR_PTR(i64 -12) #11, !dbg !5474
  %4 = bitcast i8* %call4 to %struct.extcon_dev*, !dbg !5474
  store %struct.extcon_dev* %4, %struct.extcon_dev** %retval, align 8, !dbg !5475
  br label %return, !dbg !5475

if.end5:                                          ; preds = %if.end
  %5 = load %struct.extcon_dev*, %struct.extcon_dev** %edev, align 8, !dbg !5476
  %max_supported = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %5, i32 0, i32 7, !dbg !5477
  store i32 0, i32* %max_supported, align 8, !dbg !5478
  %6 = load i32*, i32** %supported_cable.addr, align 8, !dbg !5479
  %7 = load %struct.extcon_dev*, %struct.extcon_dev** %edev, align 8, !dbg !5480
  %supported_cable6 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %7, i32 0, i32 1, !dbg !5481
  store i32* %6, i32** %supported_cable6, align 8, !dbg !5482
  %8 = load %struct.extcon_dev*, %struct.extcon_dev** %edev, align 8, !dbg !5483
  store %struct.extcon_dev* %8, %struct.extcon_dev** %retval, align 8, !dbg !5484
  br label %return, !dbg !5484

return:                                           ; preds = %if.end5, %if.then3, %if.then
  %9 = load %struct.extcon_dev*, %struct.extcon_dev** %retval, align 8, !dbg !5485
  ret %struct.extcon_dev* %9, !dbg !5485
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !5486 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5489, metadata !DIExpression()), !dbg !5493
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5499, metadata !DIExpression()), !dbg !5500
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5501, metadata !DIExpression()), !dbg !5502
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5503, metadata !DIExpression()), !dbg !5504
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5505, metadata !DIExpression()), !dbg !5509
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5511, metadata !DIExpression()), !dbg !5515
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5517, metadata !DIExpression()), !dbg !5521
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5526, metadata !DIExpression()), !dbg !5527
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5528, metadata !DIExpression()), !dbg !5529
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5530, metadata !DIExpression()), !dbg !5531
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5532, metadata !DIExpression()), !dbg !5533
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5534, metadata !DIExpression()), !dbg !5535
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5536, metadata !DIExpression()), !dbg !5537
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5538, metadata !DIExpression()), !dbg !5539
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5540, metadata !DIExpression()), !dbg !5541
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5542, metadata !DIExpression()), !dbg !5543
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5544, metadata !DIExpression()), !dbg !5545
  %0 = load i64, i64* %size.addr, align 8, !dbg !5546
  %1 = load i32, i32* %flags.addr, align 4, !dbg !5547
  %or = or i32 %1, 256, !dbg !5548
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !5549
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #7, !dbg !5550
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !5551

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5552
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !5553
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5554

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !5555
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !5556
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5557
  %call.i.i = call i32 @get_order(i64 %7) #15, !dbg !5558
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !5535
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !5559
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5560
  %10 = load i32, i32* %order.i.i, align 4, !dbg !5561
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5562
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5563
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !5564
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !5565
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5565
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !5565
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5565
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !5565
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !5566
  br label %kmalloc.exit, !dbg !5566

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !5567
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5568
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !5568
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5570

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5571
  br label %kmalloc_index.exit.i, !dbg !5571

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5572
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !5574
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5575

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5576
  br label %kmalloc_index.exit.i, !dbg !5576

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5577
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !5579
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5580

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5581
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !5582
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5583

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5584
  br label %kmalloc_index.exit.i, !dbg !5584

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5585
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !5587
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5588

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5589
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !5590
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5591

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5592
  br label %kmalloc_index.exit.i, !dbg !5592

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5593
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !5595
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5596

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5597
  br label %kmalloc_index.exit.i, !dbg !5597

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5598
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !5600
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5601

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5602
  br label %kmalloc_index.exit.i, !dbg !5602

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5603
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !5605
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5606

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5607
  br label %kmalloc_index.exit.i, !dbg !5607

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5608
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !5610
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5611

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5612
  br label %kmalloc_index.exit.i, !dbg !5612

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5613
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !5615
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5616

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !5617
  br label %kmalloc_index.exit.i, !dbg !5617

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5618
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !5620
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !5621

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !5622
  br label %kmalloc_index.exit.i, !dbg !5622

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5623
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !5625
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !5626

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !5627
  br label %kmalloc_index.exit.i, !dbg !5627

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5628
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !5630
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !5631

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !5632
  br label %kmalloc_index.exit.i, !dbg !5632

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5633
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !5635
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !5636

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !5637
  br label %kmalloc_index.exit.i, !dbg !5637

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5638
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !5640
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !5641

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !5642
  br label %kmalloc_index.exit.i, !dbg !5642

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5643
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !5645
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !5646

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !5647
  br label %kmalloc_index.exit.i, !dbg !5647

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5648
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !5650
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !5651

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !5652
  br label %kmalloc_index.exit.i, !dbg !5652

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5653
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !5655
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !5656

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !5657
  br label %kmalloc_index.exit.i, !dbg !5657

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5658
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !5660
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !5661

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !5662
  br label %kmalloc_index.exit.i, !dbg !5662

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5663
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !5665
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !5666

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !5667
  br label %kmalloc_index.exit.i, !dbg !5667

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5668
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !5670
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !5671

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !5672
  br label %kmalloc_index.exit.i, !dbg !5672

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5673
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !5675
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !5676

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !5677
  br label %kmalloc_index.exit.i, !dbg !5677

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5678
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !5680
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !5681

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !5682
  br label %kmalloc_index.exit.i, !dbg !5682

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5683
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !5685
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !5686

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !5687
  br label %kmalloc_index.exit.i, !dbg !5687

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5688
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !5690
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !5691

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !5692
  br label %kmalloc_index.exit.i, !dbg !5692

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5693
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !5695
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !5696

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !5697
  br label %kmalloc_index.exit.i, !dbg !5697

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5698
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !5700
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !5701

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !5702
  br label %kmalloc_index.exit.i, !dbg !5702

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5703
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !5705
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !5706

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !5707
  br label %kmalloc_index.exit.i, !dbg !5707

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5708
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !5710
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !5711

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !5712
  br label %kmalloc_index.exit.i, !dbg !5712

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !5713, !srcloc !5716
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 202) #7, !dbg !5717, !srcloc !5720
  unreachable, !dbg !5721

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !5722
  store i32 %45, i32* %index.i, align 4, !dbg !5723
  %46 = load i32, i32* %index.i, align 4, !dbg !5724
  %tobool.i = icmp ne i32 %46, 0, !dbg !5724
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !5726

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !5727
  br label %kmalloc.exit, !dbg !5727

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !5728
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5729
  %and.i.i = and i32 %48, 17, !dbg !5729
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !5729
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !5729
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !5729
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5729
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !5731

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !5732
  br label %kmalloc_type.exit.i, !dbg !5732

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5733
  %and2.i.i = and i32 %49, 1, !dbg !5734
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !5733
  %50 = zext i1 %tobool3.i.i to i64, !dbg !5733
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !5733
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !5735
  br label %kmalloc_type.exit.i, !dbg !5735

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !5736
  %idxprom.i = zext i32 %51 to i64, !dbg !5737
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !5737
  %52 = load i32, i32* %index.i, align 4, !dbg !5738
  %idxprom6.i = zext i32 %52 to i64, !dbg !5737
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !5737
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !5737
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !5739
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !5740
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5741
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5742
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !5743
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !5743
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !5743
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !5743
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !5743
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !5504
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5744
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !5745
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !5746
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5747
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !5748
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !5749
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !5750
  store i8* %62, i8** %retval.i, align 8, !dbg !5751
  br label %kmalloc.exit, !dbg !5751

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !5752
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !5753
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !5754
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !5754
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !5754
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !5754
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !5754
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !5755
  br label %kmalloc.exit, !dbg !5755

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !5756
  ret i8* %65, !dbg !5757
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @extcon_dev_free(%struct.extcon_dev* %edev) #0 !dbg !5758 {
entry:
  %edev.addr = alloca %struct.extcon_dev*, align 8
  store %struct.extcon_dev* %edev, %struct.extcon_dev** %edev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev.addr, metadata !5761, metadata !DIExpression()), !dbg !5762
  %0 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5763
  %1 = bitcast %struct.extcon_dev* %0 to i8*, !dbg !5763
  call void @kfree(i8* %1) #11, !dbg !5764
  ret void, !dbg !5765
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @extcon_dev_register(%struct.extcon_dev* %edev) #0 !dbg !3673 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !3758, metadata !DIExpression()), !dbg !5766
  %i.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i, metadata !5769, metadata !DIExpression()), !dbg !5775
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !5785, metadata !DIExpression()), !dbg !5786
  %__ret.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i.i, metadata !5787, metadata !DIExpression()), !dbg !5789
  %tmp.i.i.i = alloca i32, align 4
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5790, metadata !DIExpression()), !dbg !5791
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5792, metadata !DIExpression()), !dbg !5794
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5796, metadata !DIExpression()), !dbg !5797
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5798, metadata !DIExpression()), !dbg !5799
  %retval = alloca i32, align 4
  %edev.addr = alloca %struct.extcon_dev*, align 8
  %ret = alloca i32, align 4
  %index = alloca i32, align 4
  %str = alloca i8*, align 8
  %cable = alloca %struct.extcon_cable*, align 8
  %name93 = alloca i8*, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  store %struct.extcon_dev* %edev, %struct.extcon_dev** %edev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev.addr, metadata !5800, metadata !DIExpression()), !dbg !5801
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5802, metadata !DIExpression()), !dbg !5803
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5804, metadata !DIExpression()), !dbg !5805
  store i32 0, i32* %index, align 4, !dbg !5805
  %0 = load %struct.class*, %struct.class** @extcon_class, align 8, !dbg !5806
  %tobool = icmp ne %struct.class* %0, null, !dbg !5806
  br i1 %tobool, label %if.end2, label %if.then, !dbg !5808

if.then:                                          ; preds = %entry
  %call = call i32 @create_extcon_class() #11, !dbg !5809
  store i32 %call, i32* %ret, align 4, !dbg !5811
  %1 = load i32, i32* %ret, align 4, !dbg !5812
  %cmp = icmp slt i32 %1, 0, !dbg !5814
  br i1 %cmp, label %if.then1, label %if.end, !dbg !5815

if.then1:                                         ; preds = %if.then
  %2 = load i32, i32* %ret, align 4, !dbg !5816
  store i32 %2, i32* %retval, align 4, !dbg !5817
  br label %return, !dbg !5817

if.end:                                           ; preds = %if.then
  br label %if.end2, !dbg !5818

if.end2:                                          ; preds = %if.end, %entry
  %3 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5819
  %tobool3 = icmp ne %struct.extcon_dev* %3, null, !dbg !5819
  br i1 %tobool3, label %lor.lhs.false, label %if.then5, !dbg !5821

lor.lhs.false:                                    ; preds = %if.end2
  %4 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5822
  %supported_cable = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %4, i32 0, i32 1, !dbg !5823
  %5 = load i32*, i32** %supported_cable, align 8, !dbg !5823
  %tobool4 = icmp ne i32* %5, null, !dbg !5822
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !5824

if.then5:                                         ; preds = %lor.lhs.false, %if.end2
  store i32 -22, i32* %retval, align 4, !dbg !5825
  br label %return, !dbg !5825

if.end6:                                          ; preds = %lor.lhs.false
  br label %for.cond, !dbg !5826

for.cond:                                         ; preds = %for.inc, %if.end6
  %6 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5827
  %supported_cable7 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %6, i32 0, i32 1, !dbg !5830
  %7 = load i32*, i32** %supported_cable7, align 8, !dbg !5830
  %8 = load i32, i32* %index, align 4, !dbg !5831
  %idxprom = sext i32 %8 to i64, !dbg !5827
  %arrayidx = getelementptr i32, i32* %7, i64 %idxprom, !dbg !5827
  %9 = load i32, i32* %arrayidx, align 4, !dbg !5827
  %cmp8 = icmp ne i32 %9, 0, !dbg !5832
  br i1 %cmp8, label %for.body, label %for.end, !dbg !5833

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !5833

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %index, align 4, !dbg !5834
  %inc = add i32 %10, 1, !dbg !5834
  store i32 %inc, i32* %index, align 4, !dbg !5834
  br label %for.cond, !dbg !5835, !llvm.loop !5836

for.end:                                          ; preds = %for.cond
  %11 = load i32, i32* %index, align 4, !dbg !5838
  %12 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5839
  %max_supported = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %12, i32 0, i32 7, !dbg !5840
  store i32 %11, i32* %max_supported, align 8, !dbg !5841
  %13 = load i32, i32* %index, align 4, !dbg !5842
  %cmp9 = icmp sgt i32 %13, 32, !dbg !5844
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !5845

if.then10:                                        ; preds = %for.end
  %14 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5846
  %dev = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %14, i32 0, i32 3, !dbg !5846
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.3, i64 0, i64 0)) #13, !dbg !5846
  store i32 -22, i32* %retval, align 4, !dbg !5848
  br label %return, !dbg !5848

if.end11:                                         ; preds = %for.end
  %15 = load %struct.class*, %struct.class** @extcon_class, align 8, !dbg !5849
  %16 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5850
  %dev12 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %16, i32 0, i32 3, !dbg !5851
  %class = getelementptr inbounds %struct.device, %struct.device* %dev12, i32 0, i32 29, !dbg !5852
  store %struct.class* %15, %struct.class** %class, align 8, !dbg !5853
  %17 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5854
  %dev13 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %17, i32 0, i32 3, !dbg !5855
  %release = getelementptr inbounds %struct.device, %struct.device* %dev13, i32 0, i32 31, !dbg !5856
  store void (%struct.device*)* @extcon_dev_release, void (%struct.device*)** %release, align 8, !dbg !5857
  %18 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5858
  %dev14 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %18, i32 0, i32 3, !dbg !5859
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev14, i32 0, i32 1, !dbg !5860
  %19 = load %struct.device*, %struct.device** %parent, align 8, !dbg !5860
  %call15 = call i8* @dev_name(%struct.device* %19) #11, !dbg !5861
  %20 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5862
  %name = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %20, i32 0, i32 0, !dbg !5863
  store i8* %call15, i8** %name, align 8, !dbg !5864
  %21 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5865
  %name16 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %21, i32 0, i32 0, !dbg !5867
  %22 = load i8*, i8** %name16, align 8, !dbg !5867
  %call17 = call zeroext i1 @IS_ERR_OR_NULL(i8* %22) #11, !dbg !5868
  br i1 %call17, label %if.then18, label %if.end20, !dbg !5869

if.then18:                                        ; preds = %if.end11
  %23 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5870
  %dev19 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %23, i32 0, i32 3, !dbg !5870
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev19, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0)) #13, !dbg !5870
  store i32 -22, i32* %retval, align 4, !dbg !5872
  br label %return, !dbg !5872

if.end20:                                         ; preds = %if.end11
  %24 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5873
  %dev21 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %24, i32 0, i32 3, !dbg !5874
  store %struct.atomic_t* @extcon_dev_register.edev_no, %struct.atomic_t** %v.addr.i, align 8
  %25 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5875
  %26 = bitcast %struct.atomic_t* %25 to i8*, !dbg !5875
  store i8* %26, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %27 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5876
  %28 = load i64, i64* %size.addr.i.i, align 8, !dbg !5877
  %conv.i.i = trunc i64 %28 to i32, !dbg !5877
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %27, i32 %conv.i.i) #12, !dbg !5878
  %29 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5879
  %30 = load i64, i64* %size.addr.i.i, align 8, !dbg !5879
  call void @kcsan_check_access(i8* %29, i64 %30, i32 7) #12, !dbg !5879
  %31 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5880
  store %struct.atomic_t* %31, %struct.atomic_t** %v.addr.i1.i, align 8
  %32 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !5881
  store i32 1, i32* %i.addr.i.i.i, align 4
  store %struct.atomic_t* %32, %struct.atomic_t** %v.addr.i.i.i, align 8
  %33 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !5882
  %34 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !5789
  store i32 %34, i32* %__ret.i.i.i, align 4, !dbg !5789
  %35 = load i32, i32* %__ret.i.i.i, align 4, !dbg !5789
  %36 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !5789
  %counter.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %36, i32 0, i32 0, !dbg !5789
  %37 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i.i, i32 %35, i32* %counter.i.i.i) #7, !dbg !5789, !srcloc !5883
  store i32 %37, i32* %__ret.i.i.i, align 4, !dbg !5789
  %38 = load i32, i32* %__ret.i.i.i, align 4, !dbg !5789
  store i32 %38, i32* %tmp.i.i.i, align 4, !dbg !5789
  %39 = load i32, i32* %tmp.i.i.i, align 4, !dbg !5789
  %add.i.i.i = add i32 %33, %39, !dbg !5884
  %conv = sext i32 %add.i.i.i to i64, !dbg !5885
  %call23 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %dev21, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i64 %conv) #11, !dbg !5886
  %40 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5887
  %max_supported24 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %40, i32 0, i32 7, !dbg !5889
  %41 = load i32, i32* %max_supported24, align 8, !dbg !5889
  %tobool25 = icmp ne i32 %41, 0, !dbg !5887
  br i1 %tobool25, label %if.then26, label %if.end88, !dbg !5890

if.then26:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata i8** %str, metadata !5891, metadata !DIExpression()), !dbg !5893
  call void @llvm.dbg.declare(metadata %struct.extcon_cable** %cable, metadata !5894, metadata !DIExpression()), !dbg !5895
  %42 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5896
  %max_supported27 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %42, i32 0, i32 7, !dbg !5897
  %43 = load i32, i32* %max_supported27, align 8, !dbg !5897
  %conv28 = sext i32 %43 to i64, !dbg !5896
  %call29 = call i8* @kcalloc(i64 %conv28, i64 208, i32 3264) #11, !dbg !5898
  %44 = bitcast i8* %call29 to %struct.extcon_cable*, !dbg !5898
  %45 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5899
  %cables = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %45, i32 0, i32 11, !dbg !5900
  store %struct.extcon_cable* %44, %struct.extcon_cable** %cables, align 8, !dbg !5901
  %46 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5902
  %cables30 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %46, i32 0, i32 11, !dbg !5904
  %47 = load %struct.extcon_cable*, %struct.extcon_cable** %cables30, align 8, !dbg !5904
  %tobool31 = icmp ne %struct.extcon_cable* %47, null, !dbg !5902
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !5905

if.then32:                                        ; preds = %if.then26
  store i32 -12, i32* %ret, align 4, !dbg !5906
  br label %err_sysfs_alloc, !dbg !5908

if.end33:                                         ; preds = %if.then26
  store i32 0, i32* %index, align 4, !dbg !5909
  br label %for.cond34, !dbg !5911

for.cond34:                                       ; preds = %for.inc85, %if.end33
  %48 = load i32, i32* %index, align 4, !dbg !5912
  %49 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5914
  %max_supported35 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %49, i32 0, i32 7, !dbg !5915
  %50 = load i32, i32* %max_supported35, align 8, !dbg !5915
  %cmp36 = icmp slt i32 %48, %50, !dbg !5916
  br i1 %cmp36, label %for.body38, label %for.end87, !dbg !5917

for.body38:                                       ; preds = %for.cond34
  %51 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5918
  %cables39 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %51, i32 0, i32 11, !dbg !5920
  %52 = load %struct.extcon_cable*, %struct.extcon_cable** %cables39, align 8, !dbg !5920
  %53 = load i32, i32* %index, align 4, !dbg !5921
  %idxprom40 = sext i32 %53 to i64, !dbg !5918
  %arrayidx41 = getelementptr %struct.extcon_cable, %struct.extcon_cable* %52, i64 %idxprom40, !dbg !5918
  store %struct.extcon_cable* %arrayidx41, %struct.extcon_cable** %cable, align 8, !dbg !5922
  %54 = load i32, i32* %index, align 4, !dbg !5923
  %call42 = call noalias i8* (i32, i8*, ...) @kasprintf(i32 3264, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 %54) #11, !dbg !5924
  store i8* %call42, i8** %str, align 8, !dbg !5925
  %55 = load i8*, i8** %str, align 8, !dbg !5926
  %tobool43 = icmp ne i8* %55, null, !dbg !5926
  br i1 %tobool43, label %if.end56, label %if.then44, !dbg !5928

if.then44:                                        ; preds = %for.body38
  %56 = load i32, i32* %index, align 4, !dbg !5929
  %dec = add i32 %56, -1, !dbg !5929
  store i32 %dec, i32* %index, align 4, !dbg !5929
  br label %for.cond45, !dbg !5932

for.cond45:                                       ; preds = %for.inc53, %if.then44
  %57 = load i32, i32* %index, align 4, !dbg !5933
  %cmp46 = icmp sge i32 %57, 0, !dbg !5935
  br i1 %cmp46, label %for.body48, label %for.end55, !dbg !5936

for.body48:                                       ; preds = %for.cond45
  %58 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5937
  %cables49 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %58, i32 0, i32 11, !dbg !5939
  %59 = load %struct.extcon_cable*, %struct.extcon_cable** %cables49, align 8, !dbg !5939
  %60 = load i32, i32* %index, align 4, !dbg !5940
  %idxprom50 = sext i32 %60 to i64, !dbg !5937
  %arrayidx51 = getelementptr %struct.extcon_cable, %struct.extcon_cable* %59, i64 %idxprom50, !dbg !5937
  store %struct.extcon_cable* %arrayidx51, %struct.extcon_cable** %cable, align 8, !dbg !5941
  %61 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !5942
  %attr_g = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %61, i32 0, i32 2, !dbg !5943
  %name52 = getelementptr inbounds %struct.attribute_group, %struct.attribute_group* %attr_g, i32 0, i32 0, !dbg !5944
  %62 = load i8*, i8** %name52, align 8, !dbg !5944
  call void @kfree(i8* %62) #11, !dbg !5945
  br label %for.inc53, !dbg !5946

for.inc53:                                        ; preds = %for.body48
  %63 = load i32, i32* %index, align 4, !dbg !5947
  %dec54 = add i32 %63, -1, !dbg !5947
  store i32 %dec54, i32* %index, align 4, !dbg !5947
  br label %for.cond45, !dbg !5948, !llvm.loop !5949

for.end55:                                        ; preds = %for.cond45
  store i32 -12, i32* %ret, align 4, !dbg !5951
  br label %err_alloc_cables, !dbg !5952

if.end56:                                         ; preds = %for.body38
  %64 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !5953
  %65 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !5954
  %edev57 = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %65, i32 0, i32 0, !dbg !5955
  store %struct.extcon_dev* %64, %struct.extcon_dev** %edev57, align 8, !dbg !5956
  %66 = load i32, i32* %index, align 4, !dbg !5957
  %67 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !5958
  %cable_index = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %67, i32 0, i32 1, !dbg !5959
  store i32 %66, i32* %cable_index, align 8, !dbg !5960
  %68 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !5961
  %attr_name = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %68, i32 0, i32 3, !dbg !5962
  %attr = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %attr_name, i32 0, i32 0, !dbg !5963
  %69 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !5964
  %attrs = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %69, i32 0, i32 5, !dbg !5965
  %arrayidx58 = getelementptr [3 x %struct.attribute*], [3 x %struct.attribute*]* %attrs, i64 0, i64 0, !dbg !5964
  store %struct.attribute* %attr, %struct.attribute** %arrayidx58, align 8, !dbg !5966
  %70 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !5967
  %attr_state = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %70, i32 0, i32 4, !dbg !5968
  %attr59 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %attr_state, i32 0, i32 0, !dbg !5969
  %71 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !5970
  %attrs60 = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %71, i32 0, i32 5, !dbg !5971
  %arrayidx61 = getelementptr [3 x %struct.attribute*], [3 x %struct.attribute*]* %attrs60, i64 0, i64 1, !dbg !5970
  store %struct.attribute* %attr59, %struct.attribute** %arrayidx61, align 8, !dbg !5972
  %72 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !5973
  %attrs62 = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %72, i32 0, i32 5, !dbg !5974
  %arrayidx63 = getelementptr [3 x %struct.attribute*], [3 x %struct.attribute*]* %attrs62, i64 0, i64 2, !dbg !5973
  store %struct.attribute* null, %struct.attribute** %arrayidx63, align 8, !dbg !5975
  %73 = load i8*, i8** %str, align 8, !dbg !5976
  %74 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !5977
  %attr_g64 = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %74, i32 0, i32 2, !dbg !5978
  %name65 = getelementptr inbounds %struct.attribute_group, %struct.attribute_group* %attr_g64, i32 0, i32 0, !dbg !5979
  store i8* %73, i8** %name65, align 8, !dbg !5980
  %75 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !5981
  %attrs66 = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %75, i32 0, i32 5, !dbg !5982
  %arraydecay = getelementptr inbounds [3 x %struct.attribute*], [3 x %struct.attribute*]* %attrs66, i64 0, i64 0, !dbg !5981
  %76 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !5983
  %attr_g67 = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %76, i32 0, i32 2, !dbg !5984
  %attrs68 = getelementptr inbounds %struct.attribute_group, %struct.attribute_group* %attr_g67, i32 0, i32 3, !dbg !5985
  store %struct.attribute** %arraydecay, %struct.attribute*** %attrs68, align 8, !dbg !5986
  br label %do.body, !dbg !5987

do.body:                                          ; preds = %if.end56
  br label %do.end, !dbg !5988

do.end:                                           ; preds = %do.body
  %77 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !5990
  %attr_name69 = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %77, i32 0, i32 3, !dbg !5991
  %attr70 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %attr_name69, i32 0, i32 0, !dbg !5992
  %name71 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr70, i32 0, i32 0, !dbg !5993
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i8** %name71, align 8, !dbg !5994
  %78 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !5995
  %attr_name72 = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %78, i32 0, i32 3, !dbg !5996
  %attr73 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %attr_name72, i32 0, i32 0, !dbg !5997
  %mode = getelementptr inbounds %struct.attribute, %struct.attribute* %attr73, i32 0, i32 1, !dbg !5998
  store i16 292, i16* %mode, align 8, !dbg !5999
  %79 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !6000
  %attr_name74 = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %79, i32 0, i32 3, !dbg !6001
  %show = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %attr_name74, i32 0, i32 1, !dbg !6002
  store i64 (%struct.device*, %struct.device_attribute*, i8*)* @cable_name_show, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show, align 8, !dbg !6003
  br label %do.body75, !dbg !6004

do.body75:                                        ; preds = %do.end
  br label %do.end76, !dbg !6005

do.end76:                                         ; preds = %do.body75
  %80 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !6007
  %attr_state77 = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %80, i32 0, i32 4, !dbg !6008
  %attr78 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %attr_state77, i32 0, i32 0, !dbg !6009
  %name79 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr78, i32 0, i32 0, !dbg !6010
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i8** %name79, align 8, !dbg !6011
  %81 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !6012
  %attr_state80 = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %81, i32 0, i32 4, !dbg !6013
  %attr81 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %attr_state80, i32 0, i32 0, !dbg !6014
  %mode82 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr81, i32 0, i32 1, !dbg !6015
  store i16 292, i16* %mode82, align 8, !dbg !6016
  %82 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !6017
  %attr_state83 = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %82, i32 0, i32 4, !dbg !6018
  %show84 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %attr_state83, i32 0, i32 1, !dbg !6019
  store i64 (%struct.device*, %struct.device_attribute*, i8*)* @cable_state_show, i64 (%struct.device*, %struct.device_attribute*, i8*)** %show84, align 8, !dbg !6020
  br label %for.inc85, !dbg !6021

for.inc85:                                        ; preds = %do.end76
  %83 = load i32, i32* %index, align 4, !dbg !6022
  %inc86 = add i32 %83, 1, !dbg !6022
  store i32 %inc86, i32* %index, align 4, !dbg !6022
  br label %for.cond34, !dbg !6023, !llvm.loop !6024

for.end87:                                        ; preds = %for.cond34
  br label %if.end88, !dbg !6026

if.end88:                                         ; preds = %for.end87, %if.end20
  %84 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6027
  %max_supported89 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %84, i32 0, i32 7, !dbg !6029
  %85 = load i32, i32* %max_supported89, align 8, !dbg !6029
  %tobool90 = icmp ne i32 %85, 0, !dbg !6027
  br i1 %tobool90, label %land.lhs.true, label %if.end170, !dbg !6030

land.lhs.true:                                    ; preds = %if.end88
  %86 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6031
  %mutually_exclusive = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %86, i32 0, i32 2, !dbg !6032
  %87 = load i32*, i32** %mutually_exclusive, align 8, !dbg !6032
  %tobool91 = icmp ne i32* %87, null, !dbg !6031
  br i1 %tobool91, label %if.then92, label %if.end170, !dbg !6033

if.then92:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %name93, metadata !6034, metadata !DIExpression()), !dbg !6036
  store i32 0, i32* %index, align 4, !dbg !6037
  br label %for.cond94, !dbg !6039

for.cond94:                                       ; preds = %for.inc100, %if.then92
  %88 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6040
  %mutually_exclusive95 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %88, i32 0, i32 2, !dbg !6042
  %89 = load i32*, i32** %mutually_exclusive95, align 8, !dbg !6042
  %90 = load i32, i32* %index, align 4, !dbg !6043
  %idxprom96 = sext i32 %90 to i64, !dbg !6040
  %arrayidx97 = getelementptr i32, i32* %89, i64 %idxprom96, !dbg !6040
  %91 = load i32, i32* %arrayidx97, align 4, !dbg !6040
  %tobool98 = icmp ne i32 %91, 0, !dbg !6044
  br i1 %tobool98, label %for.body99, label %for.end102, !dbg !6044

for.body99:                                       ; preds = %for.cond94
  br label %for.inc100, !dbg !6044

for.inc100:                                       ; preds = %for.body99
  %92 = load i32, i32* %index, align 4, !dbg !6045
  %inc101 = add i32 %92, 1, !dbg !6045
  store i32 %inc101, i32* %index, align 4, !dbg !6045
  br label %for.cond94, !dbg !6046, !llvm.loop !6047

for.end102:                                       ; preds = %for.cond94
  %93 = load i32, i32* %index, align 4, !dbg !6049
  %add = add i32 %93, 1, !dbg !6050
  %conv103 = sext i32 %add to i64, !dbg !6049
  %call104 = call i8* @kcalloc(i64 %conv103, i64 8, i32 3264) #11, !dbg !6051
  %94 = bitcast i8* %call104 to %struct.attribute**, !dbg !6051
  %95 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6052
  %attrs_muex = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %95, i32 0, i32 13, !dbg !6053
  store %struct.attribute** %94, %struct.attribute*** %attrs_muex, align 8, !dbg !6054
  %96 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6055
  %attrs_muex105 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %96, i32 0, i32 13, !dbg !6057
  %97 = load %struct.attribute**, %struct.attribute*** %attrs_muex105, align 8, !dbg !6057
  %tobool106 = icmp ne %struct.attribute** %97, null, !dbg !6055
  br i1 %tobool106, label %if.end108, label %if.then107, !dbg !6058

if.then107:                                       ; preds = %for.end102
  store i32 -12, i32* %ret, align 4, !dbg !6059
  br label %err_muex, !dbg !6061

if.end108:                                        ; preds = %for.end102
  %98 = load i32, i32* %index, align 4, !dbg !6062
  %conv109 = sext i32 %98 to i64, !dbg !6062
  %call110 = call i8* @kcalloc(i64 %conv109, i64 32, i32 3264) #11, !dbg !6063
  %99 = bitcast i8* %call110 to %struct.device_attribute*, !dbg !6063
  %100 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6064
  %d_attrs_muex = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %100, i32 0, i32 14, !dbg !6065
  store %struct.device_attribute* %99, %struct.device_attribute** %d_attrs_muex, align 8, !dbg !6066
  %101 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6067
  %d_attrs_muex111 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %101, i32 0, i32 14, !dbg !6069
  %102 = load %struct.device_attribute*, %struct.device_attribute** %d_attrs_muex111, align 8, !dbg !6069
  %tobool112 = icmp ne %struct.device_attribute* %102, null, !dbg !6067
  br i1 %tobool112, label %if.end115, label %if.then113, !dbg !6070

if.then113:                                       ; preds = %if.end108
  store i32 -12, i32* %ret, align 4, !dbg !6071
  %103 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6073
  %attrs_muex114 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %103, i32 0, i32 13, !dbg !6074
  %104 = load %struct.attribute**, %struct.attribute*** %attrs_muex114, align 8, !dbg !6074
  %105 = bitcast %struct.attribute** %104 to i8*, !dbg !6073
  call void @kfree(i8* %105) #11, !dbg !6075
  br label %err_muex, !dbg !6076

if.end115:                                        ; preds = %if.end108
  store i32 0, i32* %index, align 4, !dbg !6077
  br label %for.cond116, !dbg !6079

for.cond116:                                      ; preds = %for.inc163, %if.end115
  %106 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6080
  %mutually_exclusive117 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %106, i32 0, i32 2, !dbg !6082
  %107 = load i32*, i32** %mutually_exclusive117, align 8, !dbg !6082
  %108 = load i32, i32* %index, align 4, !dbg !6083
  %idxprom118 = sext i32 %108 to i64, !dbg !6080
  %arrayidx119 = getelementptr i32, i32* %107, i64 %idxprom118, !dbg !6080
  %109 = load i32, i32* %arrayidx119, align 4, !dbg !6080
  %tobool120 = icmp ne i32 %109, 0, !dbg !6084
  br i1 %tobool120, label %for.body121, label %for.end165, !dbg !6084

for.body121:                                      ; preds = %for.cond116
  %110 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6085
  %mutually_exclusive122 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %110, i32 0, i32 2, !dbg !6087
  %111 = load i32*, i32** %mutually_exclusive122, align 8, !dbg !6087
  %112 = load i32, i32* %index, align 4, !dbg !6088
  %idxprom123 = sext i32 %112 to i64, !dbg !6085
  %arrayidx124 = getelementptr i32, i32* %111, i64 %idxprom123, !dbg !6085
  %113 = load i32, i32* %arrayidx124, align 4, !dbg !6085
  %call125 = call noalias i8* (i32, i8*, ...) @kasprintf(i32 3264, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i32 %113) #11, !dbg !6089
  store i8* %call125, i8** %name93, align 8, !dbg !6090
  %114 = load i8*, i8** %name93, align 8, !dbg !6091
  %tobool126 = icmp ne i8* %114, null, !dbg !6091
  br i1 %tobool126, label %if.end143, label %if.then127, !dbg !6093

if.then127:                                       ; preds = %for.body121
  %115 = load i32, i32* %index, align 4, !dbg !6094
  %dec128 = add i32 %115, -1, !dbg !6094
  store i32 %dec128, i32* %index, align 4, !dbg !6094
  br label %for.cond129, !dbg !6097

for.cond129:                                      ; preds = %for.inc138, %if.then127
  %116 = load i32, i32* %index, align 4, !dbg !6098
  %cmp130 = icmp sge i32 %116, 0, !dbg !6100
  br i1 %cmp130, label %for.body132, label %for.end140, !dbg !6101

for.body132:                                      ; preds = %for.cond129
  %117 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6102
  %d_attrs_muex133 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %117, i32 0, i32 14, !dbg !6104
  %118 = load %struct.device_attribute*, %struct.device_attribute** %d_attrs_muex133, align 8, !dbg !6104
  %119 = load i32, i32* %index, align 4, !dbg !6105
  %idxprom134 = sext i32 %119 to i64, !dbg !6102
  %arrayidx135 = getelementptr %struct.device_attribute, %struct.device_attribute* %118, i64 %idxprom134, !dbg !6102
  %attr136 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx135, i32 0, i32 0, !dbg !6106
  %name137 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr136, i32 0, i32 0, !dbg !6107
  %120 = load i8*, i8** %name137, align 8, !dbg !6107
  call void @kfree(i8* %120) #11, !dbg !6108
  br label %for.inc138, !dbg !6109

for.inc138:                                       ; preds = %for.body132
  %121 = load i32, i32* %index, align 4, !dbg !6110
  %dec139 = add i32 %121, -1, !dbg !6110
  store i32 %dec139, i32* %index, align 4, !dbg !6110
  br label %for.cond129, !dbg !6111, !llvm.loop !6112

for.end140:                                       ; preds = %for.cond129
  %122 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6114
  %d_attrs_muex141 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %122, i32 0, i32 14, !dbg !6115
  %123 = load %struct.device_attribute*, %struct.device_attribute** %d_attrs_muex141, align 8, !dbg !6115
  %124 = bitcast %struct.device_attribute* %123 to i8*, !dbg !6114
  call void @kfree(i8* %124) #11, !dbg !6116
  %125 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6117
  %attrs_muex142 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %125, i32 0, i32 13, !dbg !6118
  %126 = load %struct.attribute**, %struct.attribute*** %attrs_muex142, align 8, !dbg !6118
  %127 = bitcast %struct.attribute** %126 to i8*, !dbg !6117
  call void @kfree(i8* %127) #11, !dbg !6119
  store i32 -12, i32* %ret, align 4, !dbg !6120
  br label %err_muex, !dbg !6121

if.end143:                                        ; preds = %for.body121
  br label %do.body144, !dbg !6122

do.body144:                                       ; preds = %if.end143
  br label %do.end145, !dbg !6123

do.end145:                                        ; preds = %do.body144
  %128 = load i8*, i8** %name93, align 8, !dbg !6125
  %129 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6126
  %d_attrs_muex146 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %129, i32 0, i32 14, !dbg !6127
  %130 = load %struct.device_attribute*, %struct.device_attribute** %d_attrs_muex146, align 8, !dbg !6127
  %131 = load i32, i32* %index, align 4, !dbg !6128
  %idxprom147 = sext i32 %131 to i64, !dbg !6126
  %arrayidx148 = getelementptr %struct.device_attribute, %struct.device_attribute* %130, i64 %idxprom147, !dbg !6126
  %attr149 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx148, i32 0, i32 0, !dbg !6129
  %name150 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr149, i32 0, i32 0, !dbg !6130
  store i8* %128, i8** %name150, align 8, !dbg !6131
  %132 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6132
  %d_attrs_muex151 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %132, i32 0, i32 14, !dbg !6133
  %133 = load %struct.device_attribute*, %struct.device_attribute** %d_attrs_muex151, align 8, !dbg !6133
  %134 = load i32, i32* %index, align 4, !dbg !6134
  %idxprom152 = sext i32 %134 to i64, !dbg !6132
  %arrayidx153 = getelementptr %struct.device_attribute, %struct.device_attribute* %133, i64 %idxprom152, !dbg !6132
  %attr154 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx153, i32 0, i32 0, !dbg !6135
  %mode155 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr154, i32 0, i32 1, !dbg !6136
  store i16 0, i16* %mode155, align 8, !dbg !6137
  %135 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6138
  %d_attrs_muex156 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %135, i32 0, i32 14, !dbg !6139
  %136 = load %struct.device_attribute*, %struct.device_attribute** %d_attrs_muex156, align 8, !dbg !6139
  %137 = load i32, i32* %index, align 4, !dbg !6140
  %idxprom157 = sext i32 %137 to i64, !dbg !6138
  %arrayidx158 = getelementptr %struct.device_attribute, %struct.device_attribute* %136, i64 %idxprom157, !dbg !6138
  %attr159 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx158, i32 0, i32 0, !dbg !6141
  %138 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6142
  %attrs_muex160 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %138, i32 0, i32 13, !dbg !6143
  %139 = load %struct.attribute**, %struct.attribute*** %attrs_muex160, align 8, !dbg !6143
  %140 = load i32, i32* %index, align 4, !dbg !6144
  %idxprom161 = sext i32 %140 to i64, !dbg !6142
  %arrayidx162 = getelementptr %struct.attribute*, %struct.attribute** %139, i64 %idxprom161, !dbg !6142
  store %struct.attribute* %attr159, %struct.attribute** %arrayidx162, align 8, !dbg !6145
  br label %for.inc163, !dbg !6146

for.inc163:                                       ; preds = %do.end145
  %141 = load i32, i32* %index, align 4, !dbg !6147
  %inc164 = add i32 %141, 1, !dbg !6147
  store i32 %inc164, i32* %index, align 4, !dbg !6147
  br label %for.cond116, !dbg !6148, !llvm.loop !6149

for.end165:                                       ; preds = %for.cond116
  %142 = load i8*, i8** @muex_name, align 8, !dbg !6151
  %143 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6152
  %attr_g_muex = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %143, i32 0, i32 12, !dbg !6153
  %name166 = getelementptr inbounds %struct.attribute_group, %struct.attribute_group* %attr_g_muex, i32 0, i32 0, !dbg !6154
  store i8* %142, i8** %name166, align 8, !dbg !6155
  %144 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6156
  %attrs_muex167 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %144, i32 0, i32 13, !dbg !6157
  %145 = load %struct.attribute**, %struct.attribute*** %attrs_muex167, align 8, !dbg !6157
  %146 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6158
  %attr_g_muex168 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %146, i32 0, i32 12, !dbg !6159
  %attrs169 = getelementptr inbounds %struct.attribute_group, %struct.attribute_group* %attr_g_muex168, i32 0, i32 3, !dbg !6160
  store %struct.attribute** %145, %struct.attribute*** %attrs169, align 8, !dbg !6161
  br label %if.end170, !dbg !6162

if.end170:                                        ; preds = %for.end165, %land.lhs.true, %if.end88
  %147 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6163
  %max_supported171 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %147, i32 0, i32 7, !dbg !6165
  %148 = load i32, i32* %max_supported171, align 8, !dbg !6165
  %tobool172 = icmp ne i32 %148, 0, !dbg !6163
  br i1 %tobool172, label %if.then173, label %if.end216, !dbg !6166

if.then173:                                       ; preds = %if.end170
  %149 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6167
  %max_supported174 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %149, i32 0, i32 7, !dbg !6169
  %150 = load i32, i32* %max_supported174, align 8, !dbg !6169
  %add175 = add i32 %150, 2, !dbg !6170
  %conv176 = sext i32 %add175 to i64, !dbg !6167
  %call177 = call i8* @kcalloc(i64 %conv176, i64 8, i32 3264) #11, !dbg !6171
  %151 = bitcast i8* %call177 to %struct.attribute_group**, !dbg !6171
  %152 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6172
  %extcon_dev_type = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %152, i32 0, i32 10, !dbg !6173
  %groups = getelementptr inbounds %struct.device_type, %struct.device_type* %extcon_dev_type, i32 0, i32 1, !dbg !6174
  store %struct.attribute_group** %151, %struct.attribute_group*** %groups, align 8, !dbg !6175
  %153 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6176
  %extcon_dev_type178 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %153, i32 0, i32 10, !dbg !6178
  %groups179 = getelementptr inbounds %struct.device_type, %struct.device_type* %extcon_dev_type178, i32 0, i32 1, !dbg !6179
  %154 = load %struct.attribute_group**, %struct.attribute_group*** %groups179, align 8, !dbg !6179
  %tobool180 = icmp ne %struct.attribute_group** %154, null, !dbg !6176
  br i1 %tobool180, label %if.end182, label %if.then181, !dbg !6180

if.then181:                                       ; preds = %if.then173
  store i32 -12, i32* %ret, align 4, !dbg !6181
  br label %err_alloc_groups, !dbg !6183

if.end182:                                        ; preds = %if.then173
  %155 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6184
  %dev183 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %155, i32 0, i32 3, !dbg !6185
  %call184 = call i8* @dev_name(%struct.device* %dev183) #11, !dbg !6186
  %156 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6187
  %extcon_dev_type185 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %156, i32 0, i32 10, !dbg !6188
  %name186 = getelementptr inbounds %struct.device_type, %struct.device_type* %extcon_dev_type185, i32 0, i32 0, !dbg !6189
  store i8* %call184, i8** %name186, align 8, !dbg !6190
  %157 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6191
  %extcon_dev_type187 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %157, i32 0, i32 10, !dbg !6192
  %release188 = getelementptr inbounds %struct.device_type, %struct.device_type* %extcon_dev_type187, i32 0, i32 4, !dbg !6193
  store void (%struct.device*)* @dummy_sysfs_dev_release, void (%struct.device*)** %release188, align 8, !dbg !6194
  store i32 0, i32* %index, align 4, !dbg !6195
  br label %for.cond189, !dbg !6197

for.cond189:                                      ; preds = %for.inc202, %if.end182
  %158 = load i32, i32* %index, align 4, !dbg !6198
  %159 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6200
  %max_supported190 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %159, i32 0, i32 7, !dbg !6201
  %160 = load i32, i32* %max_supported190, align 8, !dbg !6201
  %cmp191 = icmp slt i32 %158, %160, !dbg !6202
  br i1 %cmp191, label %for.body193, label %for.end204, !dbg !6203

for.body193:                                      ; preds = %for.cond189
  %161 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6204
  %cables194 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %161, i32 0, i32 11, !dbg !6205
  %162 = load %struct.extcon_cable*, %struct.extcon_cable** %cables194, align 8, !dbg !6205
  %163 = load i32, i32* %index, align 4, !dbg !6206
  %idxprom195 = sext i32 %163 to i64, !dbg !6204
  %arrayidx196 = getelementptr %struct.extcon_cable, %struct.extcon_cable* %162, i64 %idxprom195, !dbg !6204
  %attr_g197 = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %arrayidx196, i32 0, i32 2, !dbg !6207
  %164 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6208
  %extcon_dev_type198 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %164, i32 0, i32 10, !dbg !6209
  %groups199 = getelementptr inbounds %struct.device_type, %struct.device_type* %extcon_dev_type198, i32 0, i32 1, !dbg !6210
  %165 = load %struct.attribute_group**, %struct.attribute_group*** %groups199, align 8, !dbg !6210
  %166 = load i32, i32* %index, align 4, !dbg !6211
  %idxprom200 = sext i32 %166 to i64, !dbg !6208
  %arrayidx201 = getelementptr %struct.attribute_group*, %struct.attribute_group** %165, i64 %idxprom200, !dbg !6208
  store %struct.attribute_group* %attr_g197, %struct.attribute_group** %arrayidx201, align 8, !dbg !6212
  br label %for.inc202, !dbg !6208

for.inc202:                                       ; preds = %for.body193
  %167 = load i32, i32* %index, align 4, !dbg !6213
  %inc203 = add i32 %167, 1, !dbg !6213
  store i32 %inc203, i32* %index, align 4, !dbg !6213
  br label %for.cond189, !dbg !6214, !llvm.loop !6215

for.end204:                                       ; preds = %for.cond189
  %168 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6217
  %mutually_exclusive205 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %168, i32 0, i32 2, !dbg !6219
  %169 = load i32*, i32** %mutually_exclusive205, align 8, !dbg !6219
  %tobool206 = icmp ne i32* %169, null, !dbg !6217
  br i1 %tobool206, label %if.then207, label %if.end213, !dbg !6220

if.then207:                                       ; preds = %for.end204
  %170 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6221
  %attr_g_muex208 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %170, i32 0, i32 12, !dbg !6222
  %171 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6223
  %extcon_dev_type209 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %171, i32 0, i32 10, !dbg !6224
  %groups210 = getelementptr inbounds %struct.device_type, %struct.device_type* %extcon_dev_type209, i32 0, i32 1, !dbg !6225
  %172 = load %struct.attribute_group**, %struct.attribute_group*** %groups210, align 8, !dbg !6225
  %173 = load i32, i32* %index, align 4, !dbg !6226
  %idxprom211 = sext i32 %173 to i64, !dbg !6223
  %arrayidx212 = getelementptr %struct.attribute_group*, %struct.attribute_group** %172, i64 %idxprom211, !dbg !6223
  store %struct.attribute_group* %attr_g_muex208, %struct.attribute_group** %arrayidx212, align 8, !dbg !6227
  br label %if.end213, !dbg !6223

if.end213:                                        ; preds = %if.then207, %for.end204
  %174 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6228
  %extcon_dev_type214 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %174, i32 0, i32 10, !dbg !6229
  %175 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6230
  %dev215 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %175, i32 0, i32 3, !dbg !6231
  %type = getelementptr inbounds %struct.device, %struct.device* %dev215, i32 0, i32 4, !dbg !6232
  store %struct.device_type* %extcon_dev_type214, %struct.device_type** %type, align 8, !dbg !6233
  br label %if.end216, !dbg !6234

if.end216:                                        ; preds = %if.end213, %if.end170
  %176 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6235
  %dev217 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %176, i32 0, i32 3, !dbg !6236
  %call218 = call i32 @device_register(%struct.device* %dev217) #11, !dbg !6237
  store i32 %call218, i32* %ret, align 4, !dbg !6238
  %177 = load i32, i32* %ret, align 4, !dbg !6239
  %tobool219 = icmp ne i32 %177, 0, !dbg !6239
  br i1 %tobool219, label %if.then220, label %if.end222, !dbg !6241

if.then220:                                       ; preds = %if.end216
  %178 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6242
  %dev221 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %178, i32 0, i32 3, !dbg !6244
  call void @put_device(%struct.device* %dev221) #11, !dbg !6245
  br label %err_dev, !dbg !6246

if.end222:                                        ; preds = %if.end216
  br label %do.body223, !dbg !6247

do.body223:                                       ; preds = %if.end222
  %179 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6248
  %lock = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %179, i32 0, i32 8, !dbg !6248
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %180 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6249
  %181 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %180, i32 0, i32 0, !dbg !6250
  %rlock.i = bitcast %union.anon.3* %181 to %struct.raw_spinlock*, !dbg !6250
  %182 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6248
  %lock225 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %182, i32 0, i32 8, !dbg !6248
  %183 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !6248
  %rlock = bitcast %union.anon.3* %183 to %struct.raw_spinlock*, !dbg !6248
  %184 = bitcast %struct.spinlock* %lock225 to i8*, !dbg !6248
  %185 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !6248
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %184, i8* align 1 %185, i64 0, i1 false), !dbg !6248
  br label %do.end226, !dbg !6248

do.end226:                                        ; preds = %do.body223
  %186 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6251
  %dev227 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %186, i32 0, i32 3, !dbg !6252
  %187 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6253
  %max_supported228 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %187, i32 0, i32 7, !dbg !6254
  %188 = load i32, i32* %max_supported228, align 8, !dbg !6254
  %conv229 = sext i32 %188 to i64, !dbg !6253
  %call230 = call i8* @devm_kcalloc(%struct.device* %dev227, i64 %conv229, i64 8, i32 3264) #11, !dbg !6255
  %189 = bitcast i8* %call230 to %struct.raw_notifier_head*, !dbg !6255
  %190 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6256
  %nh = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %190, i32 0, i32 5, !dbg !6257
  store %struct.raw_notifier_head* %189, %struct.raw_notifier_head** %nh, align 8, !dbg !6258
  %191 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6259
  %nh231 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %191, i32 0, i32 5, !dbg !6261
  %192 = load %struct.raw_notifier_head*, %struct.raw_notifier_head** %nh231, align 8, !dbg !6261
  %tobool232 = icmp ne %struct.raw_notifier_head* %192, null, !dbg !6259
  br i1 %tobool232, label %if.end234, label %if.then233, !dbg !6262

if.then233:                                       ; preds = %do.end226
  store i32 -12, i32* %ret, align 4, !dbg !6263
  br label %err_dev, !dbg !6265

if.end234:                                        ; preds = %do.end226
  store i32 0, i32* %index, align 4, !dbg !6266
  br label %for.cond235, !dbg !6268

for.cond235:                                      ; preds = %for.inc245, %if.end234
  %193 = load i32, i32* %index, align 4, !dbg !6269
  %194 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6271
  %max_supported236 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %194, i32 0, i32 7, !dbg !6272
  %195 = load i32, i32* %max_supported236, align 8, !dbg !6272
  %cmp237 = icmp slt i32 %193, %195, !dbg !6273
  br i1 %cmp237, label %for.body239, label %for.end247, !dbg !6274

for.body239:                                      ; preds = %for.cond235
  br label %do.body240, !dbg !6275

do.body240:                                       ; preds = %for.body239
  %196 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6276
  %nh241 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %196, i32 0, i32 5, !dbg !6276
  %197 = load %struct.raw_notifier_head*, %struct.raw_notifier_head** %nh241, align 8, !dbg !6276
  %198 = load i32, i32* %index, align 4, !dbg !6276
  %idxprom242 = sext i32 %198 to i64, !dbg !6276
  %arrayidx243 = getelementptr %struct.raw_notifier_head, %struct.raw_notifier_head* %197, i64 %idxprom242, !dbg !6276
  %head = getelementptr inbounds %struct.raw_notifier_head, %struct.raw_notifier_head* %arrayidx243, i32 0, i32 0, !dbg !6276
  store %struct.notifier_block* null, %struct.notifier_block** %head, align 8, !dbg !6276
  br label %do.end244, !dbg !6276

do.end244:                                        ; preds = %do.body240
  br label %for.inc245, !dbg !6276

for.inc245:                                       ; preds = %do.end244
  %199 = load i32, i32* %index, align 4, !dbg !6278
  %inc246 = add i32 %199, 1, !dbg !6278
  store i32 %inc246, i32* %index, align 4, !dbg !6278
  br label %for.cond235, !dbg !6279, !llvm.loop !6280

for.end247:                                       ; preds = %for.cond235
  br label %do.body248, !dbg !6282

do.body248:                                       ; preds = %for.end247
  %200 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6283
  %nh_all = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %200, i32 0, i32 4, !dbg !6283
  %head249 = getelementptr inbounds %struct.raw_notifier_head, %struct.raw_notifier_head* %nh_all, i32 0, i32 0, !dbg !6283
  store %struct.notifier_block* null, %struct.notifier_block** %head249, align 8, !dbg !6283
  br label %do.end250, !dbg !6283

do.end250:                                        ; preds = %do.body248
  %201 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6285
  %dev251 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %201, i32 0, i32 3, !dbg !6286
  %202 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6287
  %203 = bitcast %struct.extcon_dev* %202 to i8*, !dbg !6287
  call void @dev_set_drvdata(%struct.device* %dev251, i8* %203) #11, !dbg !6288
  %204 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6289
  %state = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %204, i32 0, i32 9, !dbg !6290
  store i32 0, i32* %state, align 4, !dbg !6291
  call void @mutex_lock(%struct.mutex* @extcon_dev_list_lock) #11, !dbg !6292
  %205 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6293
  %entry252 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %205, i32 0, i32 6, !dbg !6294
  call void @list_add(%struct.list_head* %entry252, %struct.list_head* @extcon_dev_list) #11, !dbg !6295
  call void @mutex_unlock(%struct.mutex* @extcon_dev_list_lock) #11, !dbg !6296
  store i32 0, i32* %retval, align 4, !dbg !6297
  br label %return, !dbg !6297

err_dev:                                          ; preds = %if.then233, %if.then220
  call void @llvm.dbg.label(metadata !6298), !dbg !6299
  %206 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6300
  %max_supported253 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %206, i32 0, i32 7, !dbg !6302
  %207 = load i32, i32* %max_supported253, align 8, !dbg !6302
  %tobool254 = icmp ne i32 %207, 0, !dbg !6300
  br i1 %tobool254, label %if.then255, label %if.end258, !dbg !6303

if.then255:                                       ; preds = %err_dev
  %208 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6304
  %extcon_dev_type256 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %208, i32 0, i32 10, !dbg !6305
  %groups257 = getelementptr inbounds %struct.device_type, %struct.device_type* %extcon_dev_type256, i32 0, i32 1, !dbg !6306
  %209 = load %struct.attribute_group**, %struct.attribute_group*** %groups257, align 8, !dbg !6306
  %210 = bitcast %struct.attribute_group** %209 to i8*, !dbg !6304
  call void @kfree(i8* %210) #11, !dbg !6307
  br label %if.end258, !dbg !6307

if.end258:                                        ; preds = %if.then255, %err_dev
  br label %err_alloc_groups, !dbg !6302

err_alloc_groups:                                 ; preds = %if.end258, %if.then181
  call void @llvm.dbg.label(metadata !6308), !dbg !6309
  %211 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6310
  %max_supported259 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %211, i32 0, i32 7, !dbg !6312
  %212 = load i32, i32* %max_supported259, align 8, !dbg !6312
  %tobool260 = icmp ne i32 %212, 0, !dbg !6310
  br i1 %tobool260, label %land.lhs.true261, label %if.end281, !dbg !6313

land.lhs.true261:                                 ; preds = %err_alloc_groups
  %213 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6314
  %mutually_exclusive262 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %213, i32 0, i32 2, !dbg !6315
  %214 = load i32*, i32** %mutually_exclusive262, align 8, !dbg !6315
  %tobool263 = icmp ne i32* %214, null, !dbg !6314
  br i1 %tobool263, label %if.then264, label %if.end281, !dbg !6316

if.then264:                                       ; preds = %land.lhs.true261
  store i32 0, i32* %index, align 4, !dbg !6317
  br label %for.cond265, !dbg !6320

for.cond265:                                      ; preds = %for.inc276, %if.then264
  %215 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6321
  %mutually_exclusive266 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %215, i32 0, i32 2, !dbg !6323
  %216 = load i32*, i32** %mutually_exclusive266, align 8, !dbg !6323
  %217 = load i32, i32* %index, align 4, !dbg !6324
  %idxprom267 = sext i32 %217 to i64, !dbg !6321
  %arrayidx268 = getelementptr i32, i32* %216, i64 %idxprom267, !dbg !6321
  %218 = load i32, i32* %arrayidx268, align 4, !dbg !6321
  %tobool269 = icmp ne i32 %218, 0, !dbg !6325
  br i1 %tobool269, label %for.body270, label %for.end278, !dbg !6325

for.body270:                                      ; preds = %for.cond265
  %219 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6326
  %d_attrs_muex271 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %219, i32 0, i32 14, !dbg !6327
  %220 = load %struct.device_attribute*, %struct.device_attribute** %d_attrs_muex271, align 8, !dbg !6327
  %221 = load i32, i32* %index, align 4, !dbg !6328
  %idxprom272 = sext i32 %221 to i64, !dbg !6326
  %arrayidx273 = getelementptr %struct.device_attribute, %struct.device_attribute* %220, i64 %idxprom272, !dbg !6326
  %attr274 = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx273, i32 0, i32 0, !dbg !6329
  %name275 = getelementptr inbounds %struct.attribute, %struct.attribute* %attr274, i32 0, i32 0, !dbg !6330
  %222 = load i8*, i8** %name275, align 8, !dbg !6330
  call void @kfree(i8* %222) #11, !dbg !6331
  br label %for.inc276, !dbg !6331

for.inc276:                                       ; preds = %for.body270
  %223 = load i32, i32* %index, align 4, !dbg !6332
  %inc277 = add i32 %223, 1, !dbg !6332
  store i32 %inc277, i32* %index, align 4, !dbg !6332
  br label %for.cond265, !dbg !6333, !llvm.loop !6334

for.end278:                                       ; preds = %for.cond265
  %224 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6336
  %d_attrs_muex279 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %224, i32 0, i32 14, !dbg !6337
  %225 = load %struct.device_attribute*, %struct.device_attribute** %d_attrs_muex279, align 8, !dbg !6337
  %226 = bitcast %struct.device_attribute* %225 to i8*, !dbg !6336
  call void @kfree(i8* %226) #11, !dbg !6338
  %227 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6339
  %attrs_muex280 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %227, i32 0, i32 13, !dbg !6340
  %228 = load %struct.attribute**, %struct.attribute*** %attrs_muex280, align 8, !dbg !6340
  %229 = bitcast %struct.attribute** %228 to i8*, !dbg !6339
  call void @kfree(i8* %229) #11, !dbg !6341
  br label %if.end281, !dbg !6342

if.end281:                                        ; preds = %for.end278, %land.lhs.true261, %err_alloc_groups
  br label %err_muex, !dbg !6315

err_muex:                                         ; preds = %if.end281, %for.end140, %if.then113, %if.then107
  call void @llvm.dbg.label(metadata !6343), !dbg !6344
  store i32 0, i32* %index, align 4, !dbg !6345
  br label %for.cond282, !dbg !6347

for.cond282:                                      ; preds = %for.inc292, %err_muex
  %230 = load i32, i32* %index, align 4, !dbg !6348
  %231 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6350
  %max_supported283 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %231, i32 0, i32 7, !dbg !6351
  %232 = load i32, i32* %max_supported283, align 8, !dbg !6351
  %cmp284 = icmp slt i32 %230, %232, !dbg !6352
  br i1 %cmp284, label %for.body286, label %for.end294, !dbg !6353

for.body286:                                      ; preds = %for.cond282
  %233 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6354
  %cables287 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %233, i32 0, i32 11, !dbg !6355
  %234 = load %struct.extcon_cable*, %struct.extcon_cable** %cables287, align 8, !dbg !6355
  %235 = load i32, i32* %index, align 4, !dbg !6356
  %idxprom288 = sext i32 %235 to i64, !dbg !6354
  %arrayidx289 = getelementptr %struct.extcon_cable, %struct.extcon_cable* %234, i64 %idxprom288, !dbg !6354
  %attr_g290 = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %arrayidx289, i32 0, i32 2, !dbg !6357
  %name291 = getelementptr inbounds %struct.attribute_group, %struct.attribute_group* %attr_g290, i32 0, i32 0, !dbg !6358
  %236 = load i8*, i8** %name291, align 8, !dbg !6358
  call void @kfree(i8* %236) #11, !dbg !6359
  br label %for.inc292, !dbg !6359

for.inc292:                                       ; preds = %for.body286
  %237 = load i32, i32* %index, align 4, !dbg !6360
  %inc293 = add i32 %237, 1, !dbg !6360
  store i32 %inc293, i32* %index, align 4, !dbg !6360
  br label %for.cond282, !dbg !6361, !llvm.loop !6362

for.end294:                                       ; preds = %for.cond282
  br label %err_alloc_cables, !dbg !6363

err_alloc_cables:                                 ; preds = %for.end294, %for.end55
  call void @llvm.dbg.label(metadata !6364), !dbg !6365
  %238 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6366
  %max_supported295 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %238, i32 0, i32 7, !dbg !6368
  %239 = load i32, i32* %max_supported295, align 8, !dbg !6368
  %tobool296 = icmp ne i32 %239, 0, !dbg !6366
  br i1 %tobool296, label %if.then297, label %if.end299, !dbg !6369

if.then297:                                       ; preds = %err_alloc_cables
  %240 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6370
  %cables298 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %240, i32 0, i32 11, !dbg !6371
  %241 = load %struct.extcon_cable*, %struct.extcon_cable** %cables298, align 8, !dbg !6371
  %242 = bitcast %struct.extcon_cable* %241 to i8*, !dbg !6370
  call void @kfree(i8* %242) #11, !dbg !6372
  br label %if.end299, !dbg !6372

if.end299:                                        ; preds = %if.then297, %err_alloc_cables
  br label %err_sysfs_alloc, !dbg !6368

err_sysfs_alloc:                                  ; preds = %if.end299, %if.then32
  call void @llvm.dbg.label(metadata !6373), !dbg !6374
  %243 = load i32, i32* %ret, align 4, !dbg !6375
  store i32 %243, i32* %retval, align 4, !dbg !6376
  br label %return, !dbg !6376

return:                                           ; preds = %err_sysfs_alloc, %do.end250, %if.then18, %if.then10, %if.then5, %if.then1
  %244 = load i32, i32* %retval, align 4, !dbg !6377
  ret i32 %244, !dbg !6377
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @create_extcon_class() #0 !dbg !3721 {
entry:
  %retval = alloca i32, align 4
  %tmp = alloca %struct.class*, align 8
  %0 = load %struct.class*, %struct.class** @extcon_class, align 8, !dbg !6378
  %tobool = icmp ne %struct.class* %0, null, !dbg !6378
  br i1 %tobool, label %if.end4, label %if.then, !dbg !6380

if.then:                                          ; preds = %entry
  %call = call %struct.class* @__class_create(%struct.module* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), %struct.lock_class_key* @create_extcon_class.__key) #11, !dbg !6381
  store %struct.class* %call, %struct.class** %tmp, align 8, !dbg !6381
  %1 = load %struct.class*, %struct.class** %tmp, align 8, !dbg !6381
  store %struct.class* %1, %struct.class** @extcon_class, align 8, !dbg !6384
  %2 = load %struct.class*, %struct.class** @extcon_class, align 8, !dbg !6385
  %3 = bitcast %struct.class* %2 to i8*, !dbg !6385
  %call1 = call zeroext i1 @IS_ERR(i8* %3) #11, !dbg !6387
  br i1 %call1, label %if.then2, label %if.end, !dbg !6388

if.then2:                                         ; preds = %if.then
  %4 = load %struct.class*, %struct.class** @extcon_class, align 8, !dbg !6389
  %5 = bitcast %struct.class* %4 to i8*, !dbg !6389
  %call3 = call i64 @PTR_ERR(i8* %5) #11, !dbg !6390
  %conv = trunc i64 %call3 to i32, !dbg !6390
  store i32 %conv, i32* %retval, align 4, !dbg !6391
  br label %return, !dbg !6391

if.end:                                           ; preds = %if.then
  %6 = load %struct.class*, %struct.class** @extcon_class, align 8, !dbg !6392
  %dev_groups = getelementptr inbounds %struct.class, %struct.class* %6, i32 0, i32 3, !dbg !6393
  store %struct.attribute_group** getelementptr inbounds ([2 x %struct.attribute_group*], [2 x %struct.attribute_group*]* @extcon_groups, i64 0, i64 0), %struct.attribute_group*** %dev_groups, align 8, !dbg !6394
  br label %if.end4, !dbg !6395

if.end4:                                          ; preds = %if.end, %entry
  store i32 0, i32* %retval, align 4, !dbg !6396
  br label %return, !dbg !6396

return:                                           ; preds = %if.end4, %if.then2
  %7 = load i32, i32* %retval, align 4, !dbg !6397
  ret i32 %7, !dbg !6397
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @extcon_dev_release(%struct.device* %dev) #0 !dbg !6398 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6399, metadata !DIExpression()), !dbg !6400
  ret void, !dbg !6401
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !6402 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6405, metadata !DIExpression()), !dbg !6406
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6407
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !6409
  %1 = load i8*, i8** %init_name, align 8, !dbg !6409
  %tobool = icmp ne i8* %1, null, !dbg !6407
  br i1 %tobool, label %if.then, label %if.end, !dbg !6410

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6411
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !6412
  %3 = load i8*, i8** %init_name1, align 8, !dbg !6412
  store i8* %3, i8** %retval, align 8, !dbg !6413
  br label %return, !dbg !6413

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6414
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !6415
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #11, !dbg !6416
  store i8* %call, i8** %retval, align 8, !dbg !6417
  br label %return, !dbg !6417

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !6418
  ret i8* %5, !dbg !6418
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR_OR_NULL(i8* %ptr) #0 !dbg !6419 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6422, metadata !DIExpression()), !dbg !6423
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !6424
  %tobool = icmp ne i8* %0, null, !dbg !6424
  %lnot = xor i1 %tobool, true, !dbg !6424
  %lnot1 = xor i1 %lnot, true, !dbg !6424
  %lnot2 = xor i1 %lnot1, true, !dbg !6424
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !6424
  %conv = sext i32 %lnot.ext to i64, !dbg !6424
  %tobool3 = icmp ne i64 %conv, 0, !dbg !6424
  br i1 %tobool3, label %lor.end, label %lor.rhs, !dbg !6425

lor.rhs:                                          ; preds = %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !6426
  %2 = ptrtoint i8* %1 to i64, !dbg !6426
  %3 = inttoptr i64 %2 to i8*, !dbg !6426
  %4 = ptrtoint i8* %3 to i64, !dbg !6426
  %cmp = icmp uge i64 %4, -4095, !dbg !6426
  %lnot5 = xor i1 %cmp, true, !dbg !6426
  %lnot7 = xor i1 %lnot5, true, !dbg !6426
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !6426
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !6426
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !6425
  br label %lor.end, !dbg !6425

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i1 [ true, %entry ], [ %tobool10, %lor.rhs ]
  ret i1 %5, !dbg !6427
}

; Function Attrs: noredzone
declare dso_local i32 @dev_set_name(%struct.device*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #0 !dbg !6428 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !6431, metadata !DIExpression()), !dbg !6432
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6433, metadata !DIExpression()), !dbg !6434
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6435, metadata !DIExpression()), !dbg !6436
  %0 = load i64, i64* %n.addr, align 8, !dbg !6437
  %1 = load i64, i64* %size.addr, align 8, !dbg !6438
  %2 = load i32, i32* %flags.addr, align 4, !dbg !6439
  %or = or i32 %2, 256, !dbg !6440
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #11, !dbg !6441
  ret i8* %call, !dbg !6442
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kasprintf(i32, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @cable_name_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !6443 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %cable = alloca %struct.extcon_cable*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.extcon_cable*, align 8
  %i = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6444, metadata !DIExpression()), !dbg !6445
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !6446, metadata !DIExpression()), !dbg !6447
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6448, metadata !DIExpression()), !dbg !6449
  call void @llvm.dbg.declare(metadata %struct.extcon_cable** %cable, metadata !6450, metadata !DIExpression()), !dbg !6451
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6452, metadata !DIExpression()), !dbg !6454
  %0 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !6454
  %1 = bitcast %struct.device_attribute* %0 to i8*, !dbg !6454
  store i8* %1, i8** %__mptr, align 8, !dbg !6454
  br label %do.body, !dbg !6454

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6455

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6454
  %add.ptr = getelementptr i8, i8* %2, i64 -56, !dbg !6454
  %3 = bitcast i8* %add.ptr to %struct.extcon_cable*, !dbg !6454
  store %struct.extcon_cable* %3, %struct.extcon_cable** %tmp, align 8, !dbg !6455
  %4 = load %struct.extcon_cable*, %struct.extcon_cable** %tmp, align 8, !dbg !6454
  store %struct.extcon_cable* %4, %struct.extcon_cable** %cable, align 8, !dbg !6451
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6457, metadata !DIExpression()), !dbg !6458
  %5 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !6459
  %cable_index = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %5, i32 0, i32 1, !dbg !6460
  %6 = load i32, i32* %cable_index, align 8, !dbg !6460
  store i32 %6, i32* %i, align 4, !dbg !6458
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !6461
  %8 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !6462
  %edev = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %8, i32 0, i32 0, !dbg !6463
  %9 = load %struct.extcon_dev*, %struct.extcon_dev** %edev, align 8, !dbg !6463
  %supported_cable = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %9, i32 0, i32 1, !dbg !6464
  %10 = load i32*, i32** %supported_cable, align 8, !dbg !6464
  %11 = load i32, i32* %i, align 4, !dbg !6465
  %idxprom = sext i32 %11 to i64, !dbg !6462
  %arrayidx = getelementptr i32, i32* %10, i64 %idxprom, !dbg !6462
  %12 = load i32, i32* %arrayidx, align 4, !dbg !6462
  %idxprom1 = zext i32 %12 to i64, !dbg !6466
  %arrayidx2 = getelementptr [64 x %struct.__extcon_info], [64 x %struct.__extcon_info]* @extcon_info, i64 0, i64 %idxprom1, !dbg !6466
  %name = getelementptr inbounds %struct.__extcon_info, %struct.__extcon_info* %arrayidx2, i32 0, i32 2, !dbg !6467
  %13 = load i8*, i8** %name, align 8, !dbg !6467
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* %13) #11, !dbg !6468
  %conv = sext i32 %call to i64, !dbg !6468
  ret i64 %conv, !dbg !6469
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @cable_state_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !6470 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %cable = alloca %struct.extcon_cable*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.extcon_cable*, align 8
  %i = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6471, metadata !DIExpression()), !dbg !6472
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !6473, metadata !DIExpression()), !dbg !6474
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6475, metadata !DIExpression()), !dbg !6476
  call void @llvm.dbg.declare(metadata %struct.extcon_cable** %cable, metadata !6477, metadata !DIExpression()), !dbg !6478
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6479, metadata !DIExpression()), !dbg !6481
  %0 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !6481
  %1 = bitcast %struct.device_attribute* %0 to i8*, !dbg !6481
  store i8* %1, i8** %__mptr, align 8, !dbg !6481
  br label %do.body, !dbg !6481

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6482

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6481
  %add.ptr = getelementptr i8, i8* %2, i64 -88, !dbg !6481
  %3 = bitcast i8* %add.ptr to %struct.extcon_cable*, !dbg !6481
  store %struct.extcon_cable* %3, %struct.extcon_cable** %tmp, align 8, !dbg !6482
  %4 = load %struct.extcon_cable*, %struct.extcon_cable** %tmp, align 8, !dbg !6481
  store %struct.extcon_cable* %4, %struct.extcon_cable** %cable, align 8, !dbg !6478
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6484, metadata !DIExpression()), !dbg !6485
  %5 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !6486
  %cable_index = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %5, i32 0, i32 1, !dbg !6487
  %6 = load i32, i32* %cable_index, align 8, !dbg !6487
  store i32 %6, i32* %i, align 4, !dbg !6485
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !6488
  %8 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !6489
  %edev = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %8, i32 0, i32 0, !dbg !6490
  %9 = load %struct.extcon_dev*, %struct.extcon_dev** %edev, align 8, !dbg !6490
  %10 = load %struct.extcon_cable*, %struct.extcon_cable** %cable, align 8, !dbg !6491
  %edev1 = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %10, i32 0, i32 0, !dbg !6492
  %11 = load %struct.extcon_dev*, %struct.extcon_dev** %edev1, align 8, !dbg !6492
  %supported_cable = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %11, i32 0, i32 1, !dbg !6493
  %12 = load i32*, i32** %supported_cable, align 8, !dbg !6493
  %13 = load i32, i32* %i, align 4, !dbg !6494
  %idxprom = sext i32 %13 to i64, !dbg !6491
  %arrayidx = getelementptr i32, i32* %12, i64 %idxprom, !dbg !6491
  %14 = load i32, i32* %arrayidx, align 4, !dbg !6491
  %call = call i32 @extcon_get_state(%struct.extcon_dev* %9, i32 %14) #11, !dbg !6495
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), i32 %call) #11, !dbg !6496
  %conv = sext i32 %call2 to i64, !dbg !6496
  ret i64 %conv, !dbg !6497
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dummy_sysfs_dev_release(%struct.device* %dev) #0 !dbg !6498 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6499, metadata !DIExpression()), !dbg !6500
  ret void, !dbg !6501
}

; Function Attrs: noredzone
declare dso_local i32 @device_register(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @put_device(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kcalloc(%struct.device* %dev, i64 %n, i64 %size, i32 %flags) #0 !dbg !6502 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6505, metadata !DIExpression()), !dbg !6506
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !6507, metadata !DIExpression()), !dbg !6508
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6509, metadata !DIExpression()), !dbg !6510
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6511, metadata !DIExpression()), !dbg !6512
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6513
  %1 = load i64, i64* %n.addr, align 8, !dbg !6514
  %2 = load i64, i64* %size.addr, align 8, !dbg !6515
  %3 = load i32, i32* %flags.addr, align 4, !dbg !6516
  %or = or i32 %3, 256, !dbg !6517
  %call = call i8* @devm_kmalloc_array(%struct.device* %0, i64 %1, i64 %2, i32 %or) #11, !dbg !6518
  ret i8* %call, !dbg !6519
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #0 !dbg !6520 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6523, metadata !DIExpression()), !dbg !6524
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6525, metadata !DIExpression()), !dbg !6526
  %0 = load i8*, i8** %data.addr, align 8, !dbg !6527
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6528
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !6529
  store i8* %0, i8** %driver_data, align 8, !dbg !6530
  ret void, !dbg !6531
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !6532 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !6536, metadata !DIExpression()), !dbg !6537
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !6538, metadata !DIExpression()), !dbg !6539
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6540
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6541
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6542
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !6543
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6543
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #11, !dbg !6544
  ret void, !dbg !6545
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @extcon_dev_unregister(%struct.extcon_dev* %edev) #0 !dbg !6546 {
entry:
  %edev.addr = alloca %struct.extcon_dev*, align 8
  %index = alloca i32, align 4
  store %struct.extcon_dev* %edev, %struct.extcon_dev** %edev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev.addr, metadata !6547, metadata !DIExpression()), !dbg !6548
  call void @llvm.dbg.declare(metadata i32* %index, metadata !6549, metadata !DIExpression()), !dbg !6550
  %0 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6551
  %tobool = icmp ne %struct.extcon_dev* %0, null, !dbg !6551
  br i1 %tobool, label %if.end, label %if.then, !dbg !6553

if.then:                                          ; preds = %entry
  br label %return, !dbg !6554

if.end:                                           ; preds = %entry
  call void @mutex_lock(%struct.mutex* @extcon_dev_list_lock) #11, !dbg !6555
  %1 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6556
  %entry1 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %1, i32 0, i32 6, !dbg !6557
  call void @list_del(%struct.list_head* %entry1) #11, !dbg !6558
  call void @mutex_unlock(%struct.mutex* @extcon_dev_list_lock) #11, !dbg !6559
  %2 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6560
  %dev = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %2, i32 0, i32 3, !dbg !6562
  %call = call %struct.device* @get_device(%struct.device* %dev) #11, !dbg !6563
  %3 = bitcast %struct.device* %call to i8*, !dbg !6563
  %call2 = call zeroext i1 @IS_ERR_OR_NULL(i8* %3) #11, !dbg !6564
  br i1 %call2, label %if.then3, label %if.end7, !dbg !6565

if.then3:                                         ; preds = %if.end
  %4 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6566
  %dev4 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %4, i32 0, i32 3, !dbg !6566
  %5 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6566
  %dev5 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %5, i32 0, i32 3, !dbg !6566
  %call6 = call i8* @dev_name(%struct.device* %dev5) #11, !dbg !6566
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i64 0, i64 0), i8* %call6) #13, !dbg !6566
  br label %return, !dbg !6568

if.end7:                                          ; preds = %if.end
  %6 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6569
  %dev8 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %6, i32 0, i32 3, !dbg !6570
  call void @device_unregister(%struct.device* %dev8) #11, !dbg !6571
  %7 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6572
  %mutually_exclusive = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %7, i32 0, i32 2, !dbg !6574
  %8 = load i32*, i32** %mutually_exclusive, align 8, !dbg !6574
  %tobool9 = icmp ne i32* %8, null, !dbg !6572
  br i1 %tobool9, label %land.lhs.true, label %if.end17, !dbg !6575

land.lhs.true:                                    ; preds = %if.end7
  %9 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6576
  %max_supported = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %9, i32 0, i32 7, !dbg !6577
  %10 = load i32, i32* %max_supported, align 8, !dbg !6577
  %tobool10 = icmp ne i32 %10, 0, !dbg !6576
  br i1 %tobool10, label %if.then11, label %if.end17, !dbg !6578

if.then11:                                        ; preds = %land.lhs.true
  store i32 0, i32* %index, align 4, !dbg !6579
  br label %for.cond, !dbg !6582

for.cond:                                         ; preds = %for.inc, %if.then11
  %11 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6583
  %mutually_exclusive12 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %11, i32 0, i32 2, !dbg !6585
  %12 = load i32*, i32** %mutually_exclusive12, align 8, !dbg !6585
  %13 = load i32, i32* %index, align 4, !dbg !6586
  %idxprom = sext i32 %13 to i64, !dbg !6583
  %arrayidx = getelementptr i32, i32* %12, i64 %idxprom, !dbg !6583
  %14 = load i32, i32* %arrayidx, align 4, !dbg !6583
  %tobool13 = icmp ne i32 %14, 0, !dbg !6587
  br i1 %tobool13, label %for.body, label %for.end, !dbg !6587

for.body:                                         ; preds = %for.cond
  %15 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6588
  %d_attrs_muex = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %15, i32 0, i32 14, !dbg !6589
  %16 = load %struct.device_attribute*, %struct.device_attribute** %d_attrs_muex, align 8, !dbg !6589
  %17 = load i32, i32* %index, align 4, !dbg !6590
  %idxprom14 = sext i32 %17 to i64, !dbg !6588
  %arrayidx15 = getelementptr %struct.device_attribute, %struct.device_attribute* %16, i64 %idxprom14, !dbg !6588
  %attr = getelementptr inbounds %struct.device_attribute, %struct.device_attribute* %arrayidx15, i32 0, i32 0, !dbg !6591
  %name = getelementptr inbounds %struct.attribute, %struct.attribute* %attr, i32 0, i32 0, !dbg !6592
  %18 = load i8*, i8** %name, align 8, !dbg !6592
  call void @kfree(i8* %18) #11, !dbg !6593
  br label %for.inc, !dbg !6593

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %index, align 4, !dbg !6594
  %inc = add i32 %19, 1, !dbg !6594
  store i32 %inc, i32* %index, align 4, !dbg !6594
  br label %for.cond, !dbg !6595, !llvm.loop !6596

for.end:                                          ; preds = %for.cond
  %20 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6598
  %d_attrs_muex16 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %20, i32 0, i32 14, !dbg !6599
  %21 = load %struct.device_attribute*, %struct.device_attribute** %d_attrs_muex16, align 8, !dbg !6599
  %22 = bitcast %struct.device_attribute* %21 to i8*, !dbg !6598
  call void @kfree(i8* %22) #11, !dbg !6600
  %23 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6601
  %attrs_muex = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %23, i32 0, i32 13, !dbg !6602
  %24 = load %struct.attribute**, %struct.attribute*** %attrs_muex, align 8, !dbg !6602
  %25 = bitcast %struct.attribute** %24 to i8*, !dbg !6601
  call void @kfree(i8* %25) #11, !dbg !6603
  br label %if.end17, !dbg !6604

if.end17:                                         ; preds = %for.end, %land.lhs.true, %if.end7
  store i32 0, i32* %index, align 4, !dbg !6605
  br label %for.cond18, !dbg !6607

for.cond18:                                       ; preds = %for.inc24, %if.end17
  %26 = load i32, i32* %index, align 4, !dbg !6608
  %27 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6610
  %max_supported19 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %27, i32 0, i32 7, !dbg !6611
  %28 = load i32, i32* %max_supported19, align 8, !dbg !6611
  %cmp = icmp slt i32 %26, %28, !dbg !6612
  br i1 %cmp, label %for.body20, label %for.end26, !dbg !6613

for.body20:                                       ; preds = %for.cond18
  %29 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6614
  %cables = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %29, i32 0, i32 11, !dbg !6615
  %30 = load %struct.extcon_cable*, %struct.extcon_cable** %cables, align 8, !dbg !6615
  %31 = load i32, i32* %index, align 4, !dbg !6616
  %idxprom21 = sext i32 %31 to i64, !dbg !6614
  %arrayidx22 = getelementptr %struct.extcon_cable, %struct.extcon_cable* %30, i64 %idxprom21, !dbg !6614
  %attr_g = getelementptr inbounds %struct.extcon_cable, %struct.extcon_cable* %arrayidx22, i32 0, i32 2, !dbg !6617
  %name23 = getelementptr inbounds %struct.attribute_group, %struct.attribute_group* %attr_g, i32 0, i32 0, !dbg !6618
  %32 = load i8*, i8** %name23, align 8, !dbg !6618
  call void @kfree(i8* %32) #11, !dbg !6619
  br label %for.inc24, !dbg !6619

for.inc24:                                        ; preds = %for.body20
  %33 = load i32, i32* %index, align 4, !dbg !6620
  %inc25 = add i32 %33, 1, !dbg !6620
  store i32 %inc25, i32* %index, align 4, !dbg !6620
  br label %for.cond18, !dbg !6621, !llvm.loop !6622

for.end26:                                        ; preds = %for.cond18
  %34 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6624
  %max_supported27 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %34, i32 0, i32 7, !dbg !6626
  %35 = load i32, i32* %max_supported27, align 8, !dbg !6626
  %tobool28 = icmp ne i32 %35, 0, !dbg !6624
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !6627

if.then29:                                        ; preds = %for.end26
  %36 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6628
  %extcon_dev_type = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %36, i32 0, i32 10, !dbg !6630
  %groups = getelementptr inbounds %struct.device_type, %struct.device_type* %extcon_dev_type, i32 0, i32 1, !dbg !6631
  %37 = load %struct.attribute_group**, %struct.attribute_group*** %groups, align 8, !dbg !6631
  %38 = bitcast %struct.attribute_group** %37 to i8*, !dbg !6628
  call void @kfree(i8* %38) #11, !dbg !6632
  %39 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6633
  %cables30 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %39, i32 0, i32 11, !dbg !6634
  %40 = load %struct.extcon_cable*, %struct.extcon_cable** %cables30, align 8, !dbg !6634
  %41 = bitcast %struct.extcon_cable* %40 to i8*, !dbg !6633
  call void @kfree(i8* %41) #11, !dbg !6635
  br label %if.end31, !dbg !6636

if.end31:                                         ; preds = %if.then29, %for.end26
  %42 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6637
  %dev32 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %42, i32 0, i32 3, !dbg !6638
  call void @put_device(%struct.device* %dev32) #11, !dbg !6639
  br label %return, !dbg !6640

return:                                           ; preds = %if.end31, %if.then3, %if.then
  ret void, !dbg !6640
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !6641 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !6644, metadata !DIExpression()), !dbg !6645
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6646
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !6647
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6648
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !6649
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !6650
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6651
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !6652
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !6653
  ret void, !dbg !6654
}

; Function Attrs: noredzone
declare dso_local %struct.device* @get_device(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @device_unregister(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.extcon_dev* @extcon_find_edev_by_node(%struct.device_node* %node) #0 !dbg !6655 {
entry:
  %node.addr = alloca %struct.device_node*, align 8
  %edev = alloca %struct.extcon_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.extcon_dev*, align 8
  %__mptr5 = alloca i8*, align 8
  %tmp9 = alloca %struct.extcon_dev*, align 8
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !6658, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev, metadata !6660, metadata !DIExpression()), !dbg !6661
  call void @mutex_lock(%struct.mutex* @extcon_dev_list_lock) #11, !dbg !6662
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6663, metadata !DIExpression()), !dbg !6666
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @extcon_dev_list, i32 0, i32 0), align 8, !dbg !6666
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !6666
  store i8* %1, i8** %__mptr, align 8, !dbg !6666
  br label %do.body, !dbg !6666

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6667

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6666
  %add.ptr = getelementptr i8, i8* %2, i64 -736, !dbg !6666
  %3 = bitcast i8* %add.ptr to %struct.extcon_dev*, !dbg !6666
  store %struct.extcon_dev* %3, %struct.extcon_dev** %tmp, align 8, !dbg !6667
  %4 = load %struct.extcon_dev*, %struct.extcon_dev** %tmp, align 8, !dbg !6666
  store %struct.extcon_dev* %4, %struct.extcon_dev** %edev, align 8, !dbg !6669
  br label %for.cond, !dbg !6669

for.cond:                                         ; preds = %do.end8, %do.end
  %5 = load %struct.extcon_dev*, %struct.extcon_dev** %edev, align 8, !dbg !6670
  %entry1 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %5, i32 0, i32 6, !dbg !6670
  %cmp = icmp eq %struct.list_head* %entry1, @extcon_dev_list, !dbg !6670
  %lnot = xor i1 %cmp, true, !dbg !6670
  br i1 %lnot, label %for.body, label %for.end, !dbg !6669

for.body:                                         ; preds = %for.cond
  %6 = load %struct.extcon_dev*, %struct.extcon_dev** %edev, align 8, !dbg !6672
  %dev = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %6, i32 0, i32 3, !dbg !6674
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !6675
  %7 = load %struct.device*, %struct.device** %parent, align 8, !dbg !6675
  %tobool = icmp ne %struct.device* %7, null, !dbg !6672
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6676

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.extcon_dev*, %struct.extcon_dev** %edev, align 8, !dbg !6677
  %dev2 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %8, i32 0, i32 3, !dbg !6678
  %parent3 = getelementptr inbounds %struct.device, %struct.device* %dev2, i32 0, i32 1, !dbg !6679
  %9 = load %struct.device*, %struct.device** %parent3, align 8, !dbg !6679
  %of_node = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 23, !dbg !6680
  %10 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !6680
  %11 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !6681
  %cmp4 = icmp eq %struct.device_node* %10, %11, !dbg !6682
  br i1 %cmp4, label %if.then, label %if.end, !dbg !6683

if.then:                                          ; preds = %land.lhs.true
  br label %out, !dbg !6684

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !6681

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr5, metadata !6685, metadata !DIExpression()), !dbg !6687
  %12 = load %struct.extcon_dev*, %struct.extcon_dev** %edev, align 8, !dbg !6687
  %entry6 = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %12, i32 0, i32 6, !dbg !6687
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry6, i32 0, i32 0, !dbg !6687
  %13 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6687
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !6687
  store i8* %14, i8** %__mptr5, align 8, !dbg !6687
  br label %do.body7, !dbg !6687

do.body7:                                         ; preds = %for.inc
  br label %do.end8, !dbg !6688

do.end8:                                          ; preds = %do.body7
  %15 = load i8*, i8** %__mptr5, align 8, !dbg !6687
  %add.ptr10 = getelementptr i8, i8* %15, i64 -736, !dbg !6687
  %16 = bitcast i8* %add.ptr10 to %struct.extcon_dev*, !dbg !6687
  store %struct.extcon_dev* %16, %struct.extcon_dev** %tmp9, align 8, !dbg !6688
  %17 = load %struct.extcon_dev*, %struct.extcon_dev** %tmp9, align 8, !dbg !6687
  store %struct.extcon_dev* %17, %struct.extcon_dev** %edev, align 8, !dbg !6670
  br label %for.cond, !dbg !6670, !llvm.loop !6690

for.end:                                          ; preds = %for.cond
  %call = call i8* @ERR_PTR(i64 -517) #11, !dbg !6692
  %18 = bitcast i8* %call to %struct.extcon_dev*, !dbg !6692
  store %struct.extcon_dev* %18, %struct.extcon_dev** %edev, align 8, !dbg !6693
  br label %out, !dbg !6694

out:                                              ; preds = %for.end, %if.then
  call void @llvm.dbg.label(metadata !6695), !dbg !6696
  call void @mutex_unlock(%struct.mutex* @extcon_dev_list_lock) #11, !dbg !6697
  %19 = load %struct.extcon_dev*, %struct.extcon_dev** %edev, align 8, !dbg !6698
  ret %struct.extcon_dev* %19, !dbg !6699
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.extcon_dev* @extcon_get_edev_by_phandle(%struct.device* %dev, i32 %index) #0 !dbg !6700 {
entry:
  %retval = alloca %struct.extcon_dev*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %index.addr = alloca i32, align 4
  %node = alloca %struct.device_node*, align 8
  %edev = alloca %struct.extcon_dev*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6703, metadata !DIExpression()), !dbg !6704
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6705, metadata !DIExpression()), !dbg !6706
  call void @llvm.dbg.declare(metadata %struct.device_node** %node, metadata !6707, metadata !DIExpression()), !dbg !6708
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev, metadata !6709, metadata !DIExpression()), !dbg !6710
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6711
  %tobool = icmp ne %struct.device* %0, null, !dbg !6711
  br i1 %tobool, label %if.end, label %if.then, !dbg !6713

if.then:                                          ; preds = %entry
  %call = call i8* @ERR_PTR(i64 -22) #11, !dbg !6714
  %1 = bitcast i8* %call to %struct.extcon_dev*, !dbg !6714
  store %struct.extcon_dev* %1, %struct.extcon_dev** %retval, align 8, !dbg !6715
  br label %return, !dbg !6715

if.end:                                           ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6716
  %of_node = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 23, !dbg !6718
  %3 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !6718
  %tobool1 = icmp ne %struct.device_node* %3, null, !dbg !6716
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !6719

if.then2:                                         ; preds = %if.end
  %call3 = call i8* @ERR_PTR(i64 -22) #11, !dbg !6720
  %4 = bitcast i8* %call3 to %struct.extcon_dev*, !dbg !6720
  store %struct.extcon_dev* %4, %struct.extcon_dev** %retval, align 8, !dbg !6722
  br label %return, !dbg !6722

if.end4:                                          ; preds = %if.end
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6723
  %of_node5 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 23, !dbg !6724
  %6 = load %struct.device_node*, %struct.device_node** %of_node5, align 8, !dbg !6724
  %7 = load i32, i32* %index.addr, align 4, !dbg !6725
  %call6 = call %struct.device_node* @of_parse_phandle(%struct.device_node* %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), i32 %7) #11, !dbg !6726
  store %struct.device_node* %call6, %struct.device_node** %node, align 8, !dbg !6727
  %8 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !6728
  %tobool7 = icmp ne %struct.device_node* %8, null, !dbg !6728
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !6730

if.then8:                                         ; preds = %if.end4
  %call9 = call i8* @ERR_PTR(i64 -19) #11, !dbg !6731
  %9 = bitcast i8* %call9 to %struct.extcon_dev*, !dbg !6731
  store %struct.extcon_dev* %9, %struct.extcon_dev** %retval, align 8, !dbg !6733
  br label %return, !dbg !6733

if.end10:                                         ; preds = %if.end4
  %10 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !6734
  %call11 = call %struct.extcon_dev* @extcon_find_edev_by_node(%struct.device_node* %10) #11, !dbg !6735
  store %struct.extcon_dev* %call11, %struct.extcon_dev** %edev, align 8, !dbg !6736
  %11 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !6737
  call void @of_node_put(%struct.device_node* %11) #11, !dbg !6738
  %12 = load %struct.extcon_dev*, %struct.extcon_dev** %edev, align 8, !dbg !6739
  store %struct.extcon_dev* %12, %struct.extcon_dev** %retval, align 8, !dbg !6740
  br label %return, !dbg !6740

return:                                           ; preds = %if.end10, %if.then8, %if.then2, %if.then
  %13 = load %struct.extcon_dev*, %struct.extcon_dev** %retval, align 8, !dbg !6741
  ret %struct.extcon_dev* %13, !dbg !6741
}

; Function Attrs: noredzone
declare dso_local %struct.device_node* @of_parse_phandle(%struct.device_node*, i8*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @of_node_put(%struct.device_node* %node) #0 !dbg !6742 {
entry:
  %node.addr = alloca %struct.device_node*, align 8
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !6745, metadata !DIExpression()), !dbg !6746
  ret void, !dbg !6747
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @extcon_get_edev_name(%struct.extcon_dev* %edev) #0 !dbg !6748 {
entry:
  %edev.addr = alloca %struct.extcon_dev*, align 8
  store %struct.extcon_dev* %edev, %struct.extcon_dev** %edev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.extcon_dev** %edev.addr, metadata !6751, metadata !DIExpression()), !dbg !6752
  %0 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6753
  %tobool = icmp ne %struct.extcon_dev* %0, null, !dbg !6753
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6754

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !6754

cond.false:                                       ; preds = %entry
  %1 = load %struct.extcon_dev*, %struct.extcon_dev** %edev.addr, align 8, !dbg !6755
  %name = getelementptr inbounds %struct.extcon_dev, %struct.extcon_dev* %1, i32 0, i32 0, !dbg !6756
  %2 = load i8*, i8** %name, align 8, !dbg !6756
  br label %cond.end, !dbg !6754

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ null, %cond.true ], [ %2, %cond.false ], !dbg !6754
  ret i8* %cond, !dbg !6757
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @extcon_class_init() #5 section ".init.text" !dbg !6758 {
entry:
  %call = call i32 @create_extcon_class() #11, !dbg !6759
  ret i32 %call, !dbg !6760
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @extcon_class_exit() #5 section ".exit.text" !dbg !6761 {
entry:
  %0 = load %struct.class*, %struct.class** @extcon_class, align 8, !dbg !6762
  call void @class_destroy(%struct.class* %0) #11, !dbg !6763
  ret void, !dbg !6764
}

; Function Attrs: noredzone
declare dso_local void @class_destroy(%struct.class*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !6765 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !6766, metadata !DIExpression()), !dbg !6768
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6769, metadata !DIExpression()), !dbg !6768
  %0 = load i64, i64* %__edi, align 8, !dbg !6768
  store i64 %0, i64* %__edi, align 8, !dbg !6768
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6770, metadata !DIExpression()), !dbg !6768
  %1 = load i64, i64* %__esi, align 8, !dbg !6768
  store i64 %1, i64* %__esi, align 8, !dbg !6768
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6771, metadata !DIExpression()), !dbg !6768
  %2 = load i64, i64* %__edx, align 8, !dbg !6768
  store i64 %2, i64* %__edx, align 8, !dbg !6768
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6772, metadata !DIExpression()), !dbg !6768
  %3 = load i64, i64* %__ecx, align 8, !dbg !6768
  store i64 %3, i64* %__ecx, align 8, !dbg !6768
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6773, metadata !DIExpression()), !dbg !6768
  %4 = load i64, i64* %__eax, align 8, !dbg !6768
  store i64 %4, i64* %__eax, align 8, !dbg !6768
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !6768
  %6 = call i64 @llvm.read_register.i64(metadata !3737), !dbg !6774
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #7, !dbg !6774, !srcloc !6777
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !6774
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !6774
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6774
  call void @llvm.write_register.i64(metadata !3737, i64 %asmresult1), !dbg !6774
  %8 = load i64, i64* %__eax, align 8, !dbg !6774
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !6778, metadata !DIExpression()), !dbg !6780
  store i64 -1, i64* %__mask, align 8, !dbg !6780
  %9 = load i64, i64* %__mask, align 8, !dbg !6780
  store i64 %9, i64* %tmp, align 8, !dbg !6780
  %10 = load i64, i64* %tmp, align 8, !dbg !6780
  %and = and i64 %8, %10, !dbg !6774
  store i64 %and, i64* %__ret, align 8, !dbg !6774
  %11 = load i64, i64* %__ret, align 8, !dbg !6768
  store i64 %11, i64* %tmp2, align 8, !dbg !6781
  %12 = load i64, i64* %tmp2, align 8, !dbg !6768
  ret i64 %12, !dbg !6782
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !6783 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6784, metadata !DIExpression()), !dbg !6786
  %0 = load i64, i64* %__edi, align 8, !dbg !6786
  store i64 %0, i64* %__edi, align 8, !dbg !6786
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6787, metadata !DIExpression()), !dbg !6786
  %1 = load i64, i64* %__esi, align 8, !dbg !6786
  store i64 %1, i64* %__esi, align 8, !dbg !6786
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6788, metadata !DIExpression()), !dbg !6786
  %2 = load i64, i64* %__edx, align 8, !dbg !6786
  store i64 %2, i64* %__edx, align 8, !dbg !6786
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6789, metadata !DIExpression()), !dbg !6786
  %3 = load i64, i64* %__ecx, align 8, !dbg !6786
  store i64 %3, i64* %__ecx, align 8, !dbg !6786
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6790, metadata !DIExpression()), !dbg !6786
  %4 = load i64, i64* %__eax, align 8, !dbg !6786
  store i64 %4, i64* %__eax, align 8, !dbg !6786
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !6786
  %6 = call i64 @llvm.read_register.i64(metadata !3737), !dbg !6786
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #7, !dbg !6786, !srcloc !6791
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !6786
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !6786
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6786
  call void @llvm.write_register.i64(metadata !3737, i64 %asmresult1), !dbg !6786
  ret void, !dbg !6792
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #6

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !6793 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !6796, metadata !DIExpression()), !dbg !6797
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6798, metadata !DIExpression()), !dbg !6800
  %0 = load i64, i64* %__edi, align 8, !dbg !6800
  store i64 %0, i64* %__edi, align 8, !dbg !6800
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6801, metadata !DIExpression()), !dbg !6800
  %1 = load i64, i64* %__esi, align 8, !dbg !6800
  store i64 %1, i64* %__esi, align 8, !dbg !6800
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6802, metadata !DIExpression()), !dbg !6800
  %2 = load i64, i64* %__edx, align 8, !dbg !6800
  store i64 %2, i64* %__edx, align 8, !dbg !6800
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6803, metadata !DIExpression()), !dbg !6800
  %3 = load i64, i64* %__ecx, align 8, !dbg !6800
  store i64 %3, i64* %__ecx, align 8, !dbg !6800
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6804, metadata !DIExpression()), !dbg !6800
  %4 = load i64, i64* %__eax, align 8, !dbg !6800
  store i64 %4, i64* %__eax, align 8, !dbg !6800
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !6800
  %6 = call i64 @llvm.read_register.i64(metadata !3737), !dbg !6800
  %7 = load i64, i64* %f.addr, align 8, !dbg !6800
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #7, !dbg !6800, !srcloc !6805
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !6800
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !6800
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6800
  call void @llvm.write_register.i64(metadata !3737, i64 %asmresult1), !dbg !6800
  ret void, !dbg !6806
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #0 !dbg !6807 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6810, metadata !DIExpression()), !dbg !6811
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6812
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !6813
  %1 = load i8*, i8** %driver_data, align 8, !dbg !6813
  ret i8* %1, !dbg !6814
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #8

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #0 !dbg !6815 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !6820, metadata !DIExpression()), !dbg !6822
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !6824, metadata !DIExpression()), !dbg !6825
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !6826, metadata !DIExpression()), !dbg !6827
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !6828, metadata !DIExpression()), !dbg !6830
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !6832, metadata !DIExpression()), !dbg !6833
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !6834, metadata !DIExpression()), !dbg !6836
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6838, metadata !DIExpression()), !dbg !6839
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !6840, metadata !DIExpression()), !dbg !6841
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !6842, metadata !DIExpression()), !dbg !6843
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !6844
  %1 = load i64, i64* %nr.addr, align 8, !dbg !6845
  %div = sdiv i64 %1, 64, !dbg !6845
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !6846
  %2 = bitcast i64* %add.ptr to i8*, !dbg !6844
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !6847
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !6848
  %conv.i = trunc i64 %4 to i32, !dbg !6848
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #12, !dbg !6849
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !6850
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !6850
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #12, !dbg !6850
  %7 = load i64, i64* %nr.addr, align 8, !dbg !6851
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !6851
  br i1 %8, label %cond.true, label %cond.false, !dbg !6851

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !6851
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !6851
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !6852
  %and.i = and i64 %11, 63, !dbg !6853
  %shl.i = shl i64 1, %and.i, !dbg !6854
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !6855
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !6856
  %shr.i = ashr i64 %13, 6, !dbg !6857
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !6855
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !6855
  %and1.i = and i64 %shl.i, %14, !dbg !6858
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !6859
  %conv = zext i1 %cmp.i to i32, !dbg !6851
  br label %cond.end, !dbg !6851

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !6851
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !6851
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !6860
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !6861
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #7, !dbg !6862, !srcloc !6863
  store i8 %19, i8* %oldbit.i, align 1, !dbg !6862
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !6864
  %tobool.i = trunc i8 %20 to i1, !dbg !6864
  %conv2 = zext i1 %tobool.i to i32, !dbg !6851
  br label %cond.end, !dbg !6851

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !6851
  %tobool = icmp ne i32 %cond, 0, !dbg !6851
  ret i1 %tobool, !dbg !6865
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !6866 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !6870, metadata !DIExpression()), !dbg !6871
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !6872, metadata !DIExpression()), !dbg !6873
  ret i1 true, !dbg !6874
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !6875 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6879, metadata !DIExpression()), !dbg !6880
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6881, metadata !DIExpression()), !dbg !6882
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6883, metadata !DIExpression()), !dbg !6884
  ret void, !dbg !6885
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !6886 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !6887, metadata !DIExpression()), !dbg !6888
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !6889, metadata !DIExpression()), !dbg !6890
  ret i1 true, !dbg !6891
}

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #9

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #10 !dbg !6892 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !6896, metadata !DIExpression()), !dbg !6900
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !6902, metadata !DIExpression()), !dbg !6903
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6904, metadata !DIExpression()), !dbg !6905
  %0 = load i64, i64* %size.addr, align 8, !dbg !6906
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !6908
  br i1 %1, label %if.then, label %if.end447, !dbg !6909

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !6910
  %tobool = icmp ne i64 %2, 0, !dbg !6910
  br i1 %tobool, label %if.end, label %if.then1, !dbg !6913

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !6914
  br label %return, !dbg !6914

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !6915
  %cmp = icmp ult i64 %3, 4096, !dbg !6917
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !6918

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6919
  br label %return, !dbg !6919

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub = sub i64 %4, 1, !dbg !6920
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !6920
  br i1 %5, label %cond.true, label %cond.false442, !dbg !6920

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub4 = sub i64 %6, 1, !dbg !6920
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !6920
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !6920

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub6 = sub i64 %8, 1, !dbg !6920
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !6920
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !6920

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !6920

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub9 = sub i64 %9, 1, !dbg !6920
  %and = and i64 %sub9, -9223372036854775808, !dbg !6920
  %tobool10 = icmp ne i64 %and, 0, !dbg !6920
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !6920

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !6920

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub13 = sub i64 %10, 1, !dbg !6920
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !6920
  %tobool15 = icmp ne i64 %and14, 0, !dbg !6920
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !6920

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !6920

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub18 = sub i64 %11, 1, !dbg !6920
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !6920
  %tobool20 = icmp ne i64 %and19, 0, !dbg !6920
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !6920

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !6920

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub23 = sub i64 %12, 1, !dbg !6920
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !6920
  %tobool25 = icmp ne i64 %and24, 0, !dbg !6920
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !6920

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !6920

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub28 = sub i64 %13, 1, !dbg !6920
  %and29 = and i64 %sub28, 576460752303423488, !dbg !6920
  %tobool30 = icmp ne i64 %and29, 0, !dbg !6920
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !6920

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !6920

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub33 = sub i64 %14, 1, !dbg !6920
  %and34 = and i64 %sub33, 288230376151711744, !dbg !6920
  %tobool35 = icmp ne i64 %and34, 0, !dbg !6920
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !6920

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !6920

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub38 = sub i64 %15, 1, !dbg !6920
  %and39 = and i64 %sub38, 144115188075855872, !dbg !6920
  %tobool40 = icmp ne i64 %and39, 0, !dbg !6920
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !6920

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !6920

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub43 = sub i64 %16, 1, !dbg !6920
  %and44 = and i64 %sub43, 72057594037927936, !dbg !6920
  %tobool45 = icmp ne i64 %and44, 0, !dbg !6920
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !6920

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !6920

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub48 = sub i64 %17, 1, !dbg !6920
  %and49 = and i64 %sub48, 36028797018963968, !dbg !6920
  %tobool50 = icmp ne i64 %and49, 0, !dbg !6920
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !6920

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !6920

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub53 = sub i64 %18, 1, !dbg !6920
  %and54 = and i64 %sub53, 18014398509481984, !dbg !6920
  %tobool55 = icmp ne i64 %and54, 0, !dbg !6920
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !6920

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !6920

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub58 = sub i64 %19, 1, !dbg !6920
  %and59 = and i64 %sub58, 9007199254740992, !dbg !6920
  %tobool60 = icmp ne i64 %and59, 0, !dbg !6920
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !6920

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !6920

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub63 = sub i64 %20, 1, !dbg !6920
  %and64 = and i64 %sub63, 4503599627370496, !dbg !6920
  %tobool65 = icmp ne i64 %and64, 0, !dbg !6920
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !6920

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !6920

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub68 = sub i64 %21, 1, !dbg !6920
  %and69 = and i64 %sub68, 2251799813685248, !dbg !6920
  %tobool70 = icmp ne i64 %and69, 0, !dbg !6920
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !6920

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !6920

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub73 = sub i64 %22, 1, !dbg !6920
  %and74 = and i64 %sub73, 1125899906842624, !dbg !6920
  %tobool75 = icmp ne i64 %and74, 0, !dbg !6920
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !6920

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !6920

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub78 = sub i64 %23, 1, !dbg !6920
  %and79 = and i64 %sub78, 562949953421312, !dbg !6920
  %tobool80 = icmp ne i64 %and79, 0, !dbg !6920
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !6920

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !6920

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub83 = sub i64 %24, 1, !dbg !6920
  %and84 = and i64 %sub83, 281474976710656, !dbg !6920
  %tobool85 = icmp ne i64 %and84, 0, !dbg !6920
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !6920

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !6920

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub88 = sub i64 %25, 1, !dbg !6920
  %and89 = and i64 %sub88, 140737488355328, !dbg !6920
  %tobool90 = icmp ne i64 %and89, 0, !dbg !6920
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !6920

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !6920

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub93 = sub i64 %26, 1, !dbg !6920
  %and94 = and i64 %sub93, 70368744177664, !dbg !6920
  %tobool95 = icmp ne i64 %and94, 0, !dbg !6920
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !6920

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !6920

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub98 = sub i64 %27, 1, !dbg !6920
  %and99 = and i64 %sub98, 35184372088832, !dbg !6920
  %tobool100 = icmp ne i64 %and99, 0, !dbg !6920
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !6920

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !6920

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub103 = sub i64 %28, 1, !dbg !6920
  %and104 = and i64 %sub103, 17592186044416, !dbg !6920
  %tobool105 = icmp ne i64 %and104, 0, !dbg !6920
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !6920

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !6920

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub108 = sub i64 %29, 1, !dbg !6920
  %and109 = and i64 %sub108, 8796093022208, !dbg !6920
  %tobool110 = icmp ne i64 %and109, 0, !dbg !6920
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !6920

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !6920

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub113 = sub i64 %30, 1, !dbg !6920
  %and114 = and i64 %sub113, 4398046511104, !dbg !6920
  %tobool115 = icmp ne i64 %and114, 0, !dbg !6920
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !6920

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !6920

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub118 = sub i64 %31, 1, !dbg !6920
  %and119 = and i64 %sub118, 2199023255552, !dbg !6920
  %tobool120 = icmp ne i64 %and119, 0, !dbg !6920
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !6920

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !6920

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub123 = sub i64 %32, 1, !dbg !6920
  %and124 = and i64 %sub123, 1099511627776, !dbg !6920
  %tobool125 = icmp ne i64 %and124, 0, !dbg !6920
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !6920

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !6920

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub128 = sub i64 %33, 1, !dbg !6920
  %and129 = and i64 %sub128, 549755813888, !dbg !6920
  %tobool130 = icmp ne i64 %and129, 0, !dbg !6920
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !6920

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !6920

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub133 = sub i64 %34, 1, !dbg !6920
  %and134 = and i64 %sub133, 274877906944, !dbg !6920
  %tobool135 = icmp ne i64 %and134, 0, !dbg !6920
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !6920

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !6920

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub138 = sub i64 %35, 1, !dbg !6920
  %and139 = and i64 %sub138, 137438953472, !dbg !6920
  %tobool140 = icmp ne i64 %and139, 0, !dbg !6920
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !6920

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !6920

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub143 = sub i64 %36, 1, !dbg !6920
  %and144 = and i64 %sub143, 68719476736, !dbg !6920
  %tobool145 = icmp ne i64 %and144, 0, !dbg !6920
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !6920

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !6920

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub148 = sub i64 %37, 1, !dbg !6920
  %and149 = and i64 %sub148, 34359738368, !dbg !6920
  %tobool150 = icmp ne i64 %and149, 0, !dbg !6920
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !6920

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !6920

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub153 = sub i64 %38, 1, !dbg !6920
  %and154 = and i64 %sub153, 17179869184, !dbg !6920
  %tobool155 = icmp ne i64 %and154, 0, !dbg !6920
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !6920

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !6920

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub158 = sub i64 %39, 1, !dbg !6920
  %and159 = and i64 %sub158, 8589934592, !dbg !6920
  %tobool160 = icmp ne i64 %and159, 0, !dbg !6920
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !6920

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !6920

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub163 = sub i64 %40, 1, !dbg !6920
  %and164 = and i64 %sub163, 4294967296, !dbg !6920
  %tobool165 = icmp ne i64 %and164, 0, !dbg !6920
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !6920

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !6920

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub168 = sub i64 %41, 1, !dbg !6920
  %and169 = and i64 %sub168, 2147483648, !dbg !6920
  %tobool170 = icmp ne i64 %and169, 0, !dbg !6920
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !6920

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !6920

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub173 = sub i64 %42, 1, !dbg !6920
  %and174 = and i64 %sub173, 1073741824, !dbg !6920
  %tobool175 = icmp ne i64 %and174, 0, !dbg !6920
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !6920

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !6920

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub178 = sub i64 %43, 1, !dbg !6920
  %and179 = and i64 %sub178, 536870912, !dbg !6920
  %tobool180 = icmp ne i64 %and179, 0, !dbg !6920
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !6920

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !6920

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub183 = sub i64 %44, 1, !dbg !6920
  %and184 = and i64 %sub183, 268435456, !dbg !6920
  %tobool185 = icmp ne i64 %and184, 0, !dbg !6920
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !6920

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !6920

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub188 = sub i64 %45, 1, !dbg !6920
  %and189 = and i64 %sub188, 134217728, !dbg !6920
  %tobool190 = icmp ne i64 %and189, 0, !dbg !6920
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !6920

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !6920

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub193 = sub i64 %46, 1, !dbg !6920
  %and194 = and i64 %sub193, 67108864, !dbg !6920
  %tobool195 = icmp ne i64 %and194, 0, !dbg !6920
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !6920

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !6920

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub198 = sub i64 %47, 1, !dbg !6920
  %and199 = and i64 %sub198, 33554432, !dbg !6920
  %tobool200 = icmp ne i64 %and199, 0, !dbg !6920
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !6920

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !6920

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub203 = sub i64 %48, 1, !dbg !6920
  %and204 = and i64 %sub203, 16777216, !dbg !6920
  %tobool205 = icmp ne i64 %and204, 0, !dbg !6920
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !6920

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !6920

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub208 = sub i64 %49, 1, !dbg !6920
  %and209 = and i64 %sub208, 8388608, !dbg !6920
  %tobool210 = icmp ne i64 %and209, 0, !dbg !6920
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !6920

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !6920

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub213 = sub i64 %50, 1, !dbg !6920
  %and214 = and i64 %sub213, 4194304, !dbg !6920
  %tobool215 = icmp ne i64 %and214, 0, !dbg !6920
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !6920

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !6920

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub218 = sub i64 %51, 1, !dbg !6920
  %and219 = and i64 %sub218, 2097152, !dbg !6920
  %tobool220 = icmp ne i64 %and219, 0, !dbg !6920
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !6920

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !6920

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub223 = sub i64 %52, 1, !dbg !6920
  %and224 = and i64 %sub223, 1048576, !dbg !6920
  %tobool225 = icmp ne i64 %and224, 0, !dbg !6920
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !6920

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !6920

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub228 = sub i64 %53, 1, !dbg !6920
  %and229 = and i64 %sub228, 524288, !dbg !6920
  %tobool230 = icmp ne i64 %and229, 0, !dbg !6920
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !6920

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !6920

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub233 = sub i64 %54, 1, !dbg !6920
  %and234 = and i64 %sub233, 262144, !dbg !6920
  %tobool235 = icmp ne i64 %and234, 0, !dbg !6920
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !6920

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !6920

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub238 = sub i64 %55, 1, !dbg !6920
  %and239 = and i64 %sub238, 131072, !dbg !6920
  %tobool240 = icmp ne i64 %and239, 0, !dbg !6920
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !6920

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !6920

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub243 = sub i64 %56, 1, !dbg !6920
  %and244 = and i64 %sub243, 65536, !dbg !6920
  %tobool245 = icmp ne i64 %and244, 0, !dbg !6920
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !6920

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !6920

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub248 = sub i64 %57, 1, !dbg !6920
  %and249 = and i64 %sub248, 32768, !dbg !6920
  %tobool250 = icmp ne i64 %and249, 0, !dbg !6920
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !6920

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !6920

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub253 = sub i64 %58, 1, !dbg !6920
  %and254 = and i64 %sub253, 16384, !dbg !6920
  %tobool255 = icmp ne i64 %and254, 0, !dbg !6920
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !6920

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !6920

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub258 = sub i64 %59, 1, !dbg !6920
  %and259 = and i64 %sub258, 8192, !dbg !6920
  %tobool260 = icmp ne i64 %and259, 0, !dbg !6920
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !6920

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !6920

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub263 = sub i64 %60, 1, !dbg !6920
  %and264 = and i64 %sub263, 4096, !dbg !6920
  %tobool265 = icmp ne i64 %and264, 0, !dbg !6920
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !6920

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !6920

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub268 = sub i64 %61, 1, !dbg !6920
  %and269 = and i64 %sub268, 2048, !dbg !6920
  %tobool270 = icmp ne i64 %and269, 0, !dbg !6920
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !6920

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !6920

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub273 = sub i64 %62, 1, !dbg !6920
  %and274 = and i64 %sub273, 1024, !dbg !6920
  %tobool275 = icmp ne i64 %and274, 0, !dbg !6920
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !6920

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !6920

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub278 = sub i64 %63, 1, !dbg !6920
  %and279 = and i64 %sub278, 512, !dbg !6920
  %tobool280 = icmp ne i64 %and279, 0, !dbg !6920
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !6920

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !6920

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub283 = sub i64 %64, 1, !dbg !6920
  %and284 = and i64 %sub283, 256, !dbg !6920
  %tobool285 = icmp ne i64 %and284, 0, !dbg !6920
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !6920

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !6920

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub288 = sub i64 %65, 1, !dbg !6920
  %and289 = and i64 %sub288, 128, !dbg !6920
  %tobool290 = icmp ne i64 %and289, 0, !dbg !6920
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !6920

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !6920

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub293 = sub i64 %66, 1, !dbg !6920
  %and294 = and i64 %sub293, 64, !dbg !6920
  %tobool295 = icmp ne i64 %and294, 0, !dbg !6920
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !6920

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !6920

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub298 = sub i64 %67, 1, !dbg !6920
  %and299 = and i64 %sub298, 32, !dbg !6920
  %tobool300 = icmp ne i64 %and299, 0, !dbg !6920
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !6920

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !6920

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub303 = sub i64 %68, 1, !dbg !6920
  %and304 = and i64 %sub303, 16, !dbg !6920
  %tobool305 = icmp ne i64 %and304, 0, !dbg !6920
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !6920

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !6920

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub308 = sub i64 %69, 1, !dbg !6920
  %and309 = and i64 %sub308, 8, !dbg !6920
  %tobool310 = icmp ne i64 %and309, 0, !dbg !6920
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !6920

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !6920

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub313 = sub i64 %70, 1, !dbg !6920
  %and314 = and i64 %sub313, 4, !dbg !6920
  %tobool315 = icmp ne i64 %and314, 0, !dbg !6920
  %71 = zext i1 %tobool315 to i64, !dbg !6920
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !6920
  br label %cond.end, !dbg !6920

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !6920
  br label %cond.end317, !dbg !6920

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !6920
  br label %cond.end319, !dbg !6920

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !6920
  br label %cond.end321, !dbg !6920

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !6920
  br label %cond.end323, !dbg !6920

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !6920
  br label %cond.end325, !dbg !6920

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !6920
  br label %cond.end327, !dbg !6920

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !6920
  br label %cond.end329, !dbg !6920

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !6920
  br label %cond.end331, !dbg !6920

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !6920
  br label %cond.end333, !dbg !6920

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !6920
  br label %cond.end335, !dbg !6920

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !6920
  br label %cond.end337, !dbg !6920

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !6920
  br label %cond.end339, !dbg !6920

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !6920
  br label %cond.end341, !dbg !6920

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !6920
  br label %cond.end343, !dbg !6920

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !6920
  br label %cond.end345, !dbg !6920

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !6920
  br label %cond.end347, !dbg !6920

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !6920
  br label %cond.end349, !dbg !6920

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !6920
  br label %cond.end351, !dbg !6920

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !6920
  br label %cond.end353, !dbg !6920

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !6920
  br label %cond.end355, !dbg !6920

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !6920
  br label %cond.end357, !dbg !6920

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !6920
  br label %cond.end359, !dbg !6920

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !6920
  br label %cond.end361, !dbg !6920

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !6920
  br label %cond.end363, !dbg !6920

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !6920
  br label %cond.end365, !dbg !6920

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !6920
  br label %cond.end367, !dbg !6920

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !6920
  br label %cond.end369, !dbg !6920

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !6920
  br label %cond.end371, !dbg !6920

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !6920
  br label %cond.end373, !dbg !6920

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !6920
  br label %cond.end375, !dbg !6920

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !6920
  br label %cond.end377, !dbg !6920

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !6920
  br label %cond.end379, !dbg !6920

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !6920
  br label %cond.end381, !dbg !6920

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !6920
  br label %cond.end383, !dbg !6920

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !6920
  br label %cond.end385, !dbg !6920

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !6920
  br label %cond.end387, !dbg !6920

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !6920
  br label %cond.end389, !dbg !6920

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !6920
  br label %cond.end391, !dbg !6920

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !6920
  br label %cond.end393, !dbg !6920

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !6920
  br label %cond.end395, !dbg !6920

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !6920
  br label %cond.end397, !dbg !6920

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !6920
  br label %cond.end399, !dbg !6920

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !6920
  br label %cond.end401, !dbg !6920

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !6920
  br label %cond.end403, !dbg !6920

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !6920
  br label %cond.end405, !dbg !6920

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !6920
  br label %cond.end407, !dbg !6920

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !6920
  br label %cond.end409, !dbg !6920

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !6920
  br label %cond.end411, !dbg !6920

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !6920
  br label %cond.end413, !dbg !6920

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !6920
  br label %cond.end415, !dbg !6920

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !6920
  br label %cond.end417, !dbg !6920

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !6920
  br label %cond.end419, !dbg !6920

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !6920
  br label %cond.end421, !dbg !6920

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !6920
  br label %cond.end423, !dbg !6920

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !6920
  br label %cond.end425, !dbg !6920

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !6920
  br label %cond.end427, !dbg !6920

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !6920
  br label %cond.end429, !dbg !6920

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !6920
  br label %cond.end431, !dbg !6920

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !6920
  br label %cond.end433, !dbg !6920

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !6920
  br label %cond.end435, !dbg !6920

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !6920
  br label %cond.end437, !dbg !6920

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !6920
  br label %cond.end440, !dbg !6920

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !6920

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !6920
  br label %cond.end444, !dbg !6920

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !6920
  %sub443 = sub i64 %72, 1, !dbg !6920
  %call = call i32 @__ilog2_u64(i64 %sub443) #15, !dbg !6920
  br label %cond.end444, !dbg !6920

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !6920
  %sub446 = sub i32 %cond445, 12, !dbg !6921
  %add = add i32 %sub446, 1, !dbg !6922
  store i32 %add, i32* %retval, align 4, !dbg !6923
  br label %return, !dbg !6923

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !6924
  %dec = add i64 %73, -1, !dbg !6924
  store i64 %dec, i64* %size.addr, align 8, !dbg !6924
  %74 = load i64, i64* %size.addr, align 8, !dbg !6925
  %shr = lshr i64 %74, 12, !dbg !6925
  store i64 %shr, i64* %size.addr, align 8, !dbg !6925
  %75 = load i64, i64* %size.addr, align 8, !dbg !6926
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !6903
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !6927
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !6928
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #6, !dbg !6927, !srcloc !6929
  store i32 %78, i32* %bitpos.i, align 4, !dbg !6927
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !6930
  %add.i = add i32 %79, 1, !dbg !6931
  store i32 %add.i, i32* %retval, align 4, !dbg !6932
  br label %return, !dbg !6932

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !6933
  ret i32 %80, !dbg !6933
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #10 !dbg !6934 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !6896, metadata !DIExpression()), !dbg !6938
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !6902, metadata !DIExpression()), !dbg !6940
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !6941, metadata !DIExpression()), !dbg !6942
  %0 = load i64, i64* %n.addr, align 8, !dbg !6943
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !6940
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !6944
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !6945
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #6, !dbg !6944, !srcloc !6929
  store i32 %3, i32* %bitpos.i, align 4, !dbg !6944
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !6946
  %add.i = add i32 %4, 1, !dbg !6947
  %sub = sub i32 %add.i, 1, !dbg !6948
  ret i32 %sub, !dbg !6949
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !6950 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !6954, metadata !DIExpression()), !dbg !6955
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !6956, metadata !DIExpression()), !dbg !6957
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6958, metadata !DIExpression()), !dbg !6959
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6960, metadata !DIExpression()), !dbg !6961
  %0 = load i8*, i8** %object.addr, align 8, !dbg !6962
  ret i8* %0, !dbg !6963
}

; Function Attrs: noredzone
declare dso_local %struct.class* @__class_create(%struct.module*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !6964 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6965, metadata !DIExpression()), !dbg !6966
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !6967
  %1 = ptrtoint i8* %0 to i64, !dbg !6967
  %2 = inttoptr i64 %1 to i8*, !dbg !6967
  %3 = ptrtoint i8* %2 to i64, !dbg !6967
  %cmp = icmp uge i64 %3, -4095, !dbg !6967
  %lnot = xor i1 %cmp, true, !dbg !6967
  %lnot1 = xor i1 %lnot, true, !dbg !6967
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6967
  %conv = sext i32 %lnot.ext to i64, !dbg !6967
  %tobool = icmp ne i64 %conv, 0, !dbg !6967
  ret i1 %tobool, !dbg !6968
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !6969 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6972, metadata !DIExpression()), !dbg !6973
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !6974
  %1 = ptrtoint i8* %0 to i64, !dbg !6975
  ret i64 %1, !dbg !6976
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !6977 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !6982, metadata !DIExpression()), !dbg !6983
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !6984
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !6985
  %1 = load i8*, i8** %name, align 8, !dbg !6985
  ret i8* %1, !dbg !6986
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !6987 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5489, metadata !DIExpression()), !dbg !6988
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5499, metadata !DIExpression()), !dbg !6992
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5501, metadata !DIExpression()), !dbg !6993
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5503, metadata !DIExpression()), !dbg !6994
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5505, metadata !DIExpression()), !dbg !6995
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5511, metadata !DIExpression()), !dbg !6997
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5517, metadata !DIExpression()), !dbg !6999
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5526, metadata !DIExpression()), !dbg !7002
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5528, metadata !DIExpression()), !dbg !7003
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5530, metadata !DIExpression()), !dbg !7004
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5532, metadata !DIExpression()), !dbg !7005
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5534, metadata !DIExpression()), !dbg !7006
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5536, metadata !DIExpression()), !dbg !7007
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5538, metadata !DIExpression()), !dbg !7008
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5540, metadata !DIExpression()), !dbg !7009
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !7010, metadata !DIExpression()), !dbg !7011
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7012, metadata !DIExpression()), !dbg !7013
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7014, metadata !DIExpression()), !dbg !7015
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !7016, metadata !DIExpression()), !dbg !7017
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !7018, metadata !DIExpression()), !dbg !7021
  %0 = load i64, i64* %n.addr, align 8, !dbg !7021
  store i64 %0, i64* %__a, align 8, !dbg !7021
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !7022, metadata !DIExpression()), !dbg !7021
  %1 = load i64, i64* %size.addr, align 8, !dbg !7021
  store i64 %1, i64* %__b, align 8, !dbg !7021
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !7023, metadata !DIExpression()), !dbg !7021
  store i64* %bytes, i64** %__d, align 8, !dbg !7021
  %cmp = icmp eq i64* %__a, %__b, !dbg !7021
  %conv = zext i1 %cmp to i32, !dbg !7021
  %2 = load i64*, i64** %__d, align 8, !dbg !7021
  %cmp1 = icmp eq i64* %__a, %2, !dbg !7021
  %conv2 = zext i1 %cmp1 to i32, !dbg !7021
  %3 = load i64, i64* %__a, align 8, !dbg !7021
  %4 = load i64, i64* %__b, align 8, !dbg !7021
  %5 = load i64*, i64** %__d, align 8, !dbg !7021
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !7021
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !7021
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !7021
  store i64 %8, i64* %5, align 8, !dbg !7021
  %frombool = zext i1 %7 to i8, !dbg !7021
  store i8 %frombool, i8* %tmp, align 1, !dbg !7021
  %9 = load i8, i8* %tmp, align 1, !dbg !7021
  %tobool = trunc i8 %9 to i1, !dbg !7021
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !7025
  %lnot = xor i1 %call, true, !dbg !7025
  %lnot3 = xor i1 %lnot, true, !dbg !7025
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !7025
  %conv4 = sext i32 %lnot.ext to i64, !dbg !7025
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !7025
  br i1 %tobool5, label %if.then, label %if.end, !dbg !7026

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !7027
  br label %return, !dbg !7027

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !7028
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !7029
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !7030

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !7031
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !7032
  br i1 %13, label %if.then6, label %if.end8, !dbg !7033

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !7034
  %15 = load i32, i32* %flags.addr, align 4, !dbg !7035
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !7036
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #7, !dbg !7037
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !7038

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !7039
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !7040
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7041

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !7042
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !7043
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !7044
  %call.i.i = call i32 @get_order(i64 %21) #15, !dbg !7045
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !7006
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !7046
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !7047
  %24 = load i32, i32* %order.i.i, align 4, !dbg !7048
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !7049
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !7050
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !7051
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #12, !dbg !7052
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !7052
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !7052
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !7052
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !7052
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !7053
  br label %kmalloc.exit, !dbg !7053

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !7054
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7055
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !7055
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !7056

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !7057
  br label %kmalloc_index.exit.i, !dbg !7057

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7058
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !7059
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !7060

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7061
  br label %kmalloc_index.exit.i, !dbg !7061

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7062
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !7063
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !7064

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7065
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !7066
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !7067

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !7068
  br label %kmalloc_index.exit.i, !dbg !7068

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7069
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !7070
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7071

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7072
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !7073
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7074

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !7075
  br label %kmalloc_index.exit.i, !dbg !7075

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7076
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !7077
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7078

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7079
  br label %kmalloc_index.exit.i, !dbg !7079

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7080
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !7081
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !7082

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !7083
  br label %kmalloc_index.exit.i, !dbg !7083

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7084
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !7085
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !7086

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !7087
  br label %kmalloc_index.exit.i, !dbg !7087

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7088
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !7089
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !7090

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !7091
  br label %kmalloc_index.exit.i, !dbg !7091

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7092
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !7093
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !7094

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !7095
  br label %kmalloc_index.exit.i, !dbg !7095

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7096
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !7097
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !7098

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !7099
  br label %kmalloc_index.exit.i, !dbg !7099

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7100
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !7101
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !7102

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !7103
  br label %kmalloc_index.exit.i, !dbg !7103

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7104
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !7105
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !7106

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !7107
  br label %kmalloc_index.exit.i, !dbg !7107

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7108
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !7109
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !7110

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !7111
  br label %kmalloc_index.exit.i, !dbg !7111

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7112
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !7113
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !7114

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !7115
  br label %kmalloc_index.exit.i, !dbg !7115

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7116
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !7117
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !7118

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !7119
  br label %kmalloc_index.exit.i, !dbg !7119

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7120
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !7121
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !7122

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !7123
  br label %kmalloc_index.exit.i, !dbg !7123

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7124
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !7125
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !7126

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !7127
  br label %kmalloc_index.exit.i, !dbg !7127

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7128
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !7129
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !7130

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !7131
  br label %kmalloc_index.exit.i, !dbg !7131

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7132
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !7133
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !7134

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !7135
  br label %kmalloc_index.exit.i, !dbg !7135

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7136
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !7137
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !7138

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !7139
  br label %kmalloc_index.exit.i, !dbg !7139

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7140
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !7141
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !7142

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !7143
  br label %kmalloc_index.exit.i, !dbg !7143

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7144
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !7145
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !7146

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !7147
  br label %kmalloc_index.exit.i, !dbg !7147

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7148
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !7149
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !7150

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !7151
  br label %kmalloc_index.exit.i, !dbg !7151

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7152
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !7153
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !7154

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !7155
  br label %kmalloc_index.exit.i, !dbg !7155

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7156
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !7157
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !7158

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !7159
  br label %kmalloc_index.exit.i, !dbg !7159

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7160
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !7161
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !7162

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !7163
  br label %kmalloc_index.exit.i, !dbg !7163

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7164
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !7165
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !7166

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !7167
  br label %kmalloc_index.exit.i, !dbg !7167

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7168
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !7169
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !7170

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !7171
  br label %kmalloc_index.exit.i, !dbg !7171

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !7172, !srcloc !5716
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 202) #7, !dbg !7173, !srcloc !5720
  unreachable, !dbg !7174

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !7175
  store i32 %59, i32* %index.i, align 4, !dbg !7176
  %60 = load i32, i32* %index.i, align 4, !dbg !7177
  %tobool.i = icmp ne i32 %60, 0, !dbg !7177
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !7178

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !7179
  br label %kmalloc.exit, !dbg !7179

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !7180
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7181
  %and.i.i = and i32 %62, 17, !dbg !7181
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !7181
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !7181
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !7181
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7181
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !7182

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !7183
  br label %kmalloc_type.exit.i, !dbg !7183

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7184
  %and2.i.i = and i32 %63, 1, !dbg !7185
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !7184
  %64 = zext i1 %tobool3.i.i to i64, !dbg !7184
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !7184
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !7186
  br label %kmalloc_type.exit.i, !dbg !7186

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !7187
  %idxprom.i = zext i32 %65 to i64, !dbg !7188
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !7188
  %66 = load i32, i32* %index.i, align 4, !dbg !7189
  %idxprom6.i = zext i32 %66 to i64, !dbg !7188
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !7188
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !7188
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !7190
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !7191
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7192
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7193
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #12, !dbg !7194
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !7194
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !7194
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !7194
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !7194
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !6994
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7195
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !7196
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !7197
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7198
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #12, !dbg !7199
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !7200
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !7201
  store i8* %76, i8** %retval.i, align 8, !dbg !7202
  br label %kmalloc.exit, !dbg !7202

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !7203
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !7204
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #12, !dbg !7205
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !7205
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !7205
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !7205
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !7205
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !7206
  br label %kmalloc.exit, !dbg !7206

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !7207
  store i8* %79, i8** %retval, align 8, !dbg !7208
  br label %return, !dbg !7208

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !7209
  %81 = load i32, i32* %flags.addr, align 4, !dbg !7210
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #11, !dbg !7211
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !7211
  %maskedptr = and i64 %ptrint, 7, !dbg !7211
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !7211
  call void @llvm.assume(i1 %maskcond), !dbg !7211
  store i8* %call9, i8** %retval, align 8, !dbg !7212
  br label %return, !dbg !7212

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !7213
  ret i8* %82, !dbg !7213
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !7214 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !7218, metadata !DIExpression()), !dbg !7219
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !7220
  %tobool = trunc i8 %0 to i1, !dbg !7220
  %lnot = xor i1 %tobool, true, !dbg !7220
  %lnot1 = xor i1 %lnot, true, !dbg !7220
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7220
  %conv = sext i32 %lnot.ext to i64, !dbg !7220
  %tobool2 = icmp ne i64 %conv, 0, !dbg !7220
  ret i1 %tobool2, !dbg !7221
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kmalloc_array(%struct.device* %dev, i64 %n, i64 %size, i32 %flags) #0 !dbg !7222 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7223, metadata !DIExpression()), !dbg !7224
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !7225, metadata !DIExpression()), !dbg !7226
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7227, metadata !DIExpression()), !dbg !7228
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7229, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !7231, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !7233, metadata !DIExpression()), !dbg !7236
  %0 = load i64, i64* %n.addr, align 8, !dbg !7236
  store i64 %0, i64* %__a, align 8, !dbg !7236
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !7237, metadata !DIExpression()), !dbg !7236
  %1 = load i64, i64* %size.addr, align 8, !dbg !7236
  store i64 %1, i64* %__b, align 8, !dbg !7236
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !7238, metadata !DIExpression()), !dbg !7236
  store i64* %bytes, i64** %__d, align 8, !dbg !7236
  %cmp = icmp eq i64* %__a, %__b, !dbg !7236
  %conv = zext i1 %cmp to i32, !dbg !7236
  %2 = load i64*, i64** %__d, align 8, !dbg !7236
  %cmp1 = icmp eq i64* %__a, %2, !dbg !7236
  %conv2 = zext i1 %cmp1 to i32, !dbg !7236
  %3 = load i64, i64* %__a, align 8, !dbg !7236
  %4 = load i64, i64* %__b, align 8, !dbg !7236
  %5 = load i64*, i64** %__d, align 8, !dbg !7236
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !7236
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !7236
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !7236
  store i64 %8, i64* %5, align 8, !dbg !7236
  %frombool = zext i1 %7 to i8, !dbg !7236
  store i8 %frombool, i8* %tmp, align 1, !dbg !7236
  %9 = load i8, i8* %tmp, align 1, !dbg !7236
  %tobool = trunc i8 %9 to i1, !dbg !7236
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !7239
  %lnot = xor i1 %call, true, !dbg !7239
  %lnot3 = xor i1 %lnot, true, !dbg !7239
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !7239
  %conv4 = sext i32 %lnot.ext to i64, !dbg !7239
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !7239
  br i1 %tobool5, label %if.then, label %if.end, !dbg !7240

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !7241
  br label %return, !dbg !7241

if.end:                                           ; preds = %entry
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7242
  %11 = load i64, i64* %bytes, align 8, !dbg !7243
  %12 = load i32, i32* %flags.addr, align 4, !dbg !7244
  %call6 = call noalias i8* @devm_kmalloc(%struct.device* %10, i64 %11, i32 %12) #11, !dbg !7245
  store i8* %call6, i8** %retval, align 8, !dbg !7246
  br label %return, !dbg !7246

return:                                           ; preds = %if.end, %if.then
  %13 = load i8*, i8** %retval, align 8, !dbg !7247
  ret i8* %13, !dbg !7247
}

; Function Attrs: noredzone
declare dso_local noalias i8* @devm_kmalloc(%struct.device*, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !7248 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7251, metadata !DIExpression()), !dbg !7252
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7253, metadata !DIExpression()), !dbg !7254
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7255, metadata !DIExpression()), !dbg !7256
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7257
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7259
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7260
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !7261
  br i1 %call, label %if.end, label %if.then, !dbg !7262

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !7263

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7264
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7265
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !7266
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !7267
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7268
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7269
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !7270
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !7271
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7272
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7273
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !7274
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !7275
  br label %do.body, !dbg !7276

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !7277

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !7279

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !7277

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7281
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7281
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !7281
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !7281
  br label %do.end7, !dbg !7281

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !7277

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !7283
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !7284 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7287, metadata !DIExpression()), !dbg !7288
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7289, metadata !DIExpression()), !dbg !7290
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7291, metadata !DIExpression()), !dbg !7292
  ret i1 true, !dbg !7293
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !7294 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !7295, metadata !DIExpression()), !dbg !7296
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7297
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #11, !dbg !7299
  br i1 %call, label %if.end, label %if.then, !dbg !7300

if.then:                                          ; preds = %entry
  br label %return, !dbg !7301

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7302
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7303
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !7303
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7304
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !7305
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7305
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #11, !dbg !7306
  br label %return, !dbg !7307

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7307
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !7308 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !7311, metadata !DIExpression()), !dbg !7312
  ret i1 true, !dbg !7313
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !7314 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7315, metadata !DIExpression()), !dbg !7316
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7317, metadata !DIExpression()), !dbg !7318
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7319
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7320
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7321
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !7322
  br label %do.body, !dbg !7323

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !7324

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !7326

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !7324

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7328
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7328
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !7328
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !7328
  br label %do.end5, !dbg !7328

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !7324

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !7330
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone willreturn }
attributes #9 = { nounwind willreturn }
attributes #10 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noredzone }
attributes #12 = { noredzone nounwind }
attributes #13 = { cold noredzone }
attributes #14 = { nounwind readnone }
attributes #15 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!3737}
!llvm.module.flags = !{!3738, !3739, !3740, !3741}
!llvm.ident = !{!3742}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "extcon_dev_list_lock", scope: !2, file: !3, line: 224, type: !1006, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !103, globals: !3670, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/extcon/extcon.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !18, !24, !30, !39, !47, !53, !59, !66, !74, !80, !91, !96}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !14, line: 65, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17}
!16 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !19, line: 16, baseType: !7, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22, !23}
!21 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !25, line: 54, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !31, line: 296, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36, !37, !38}
!33 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!35 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!36 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!37 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!38 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !40, line: 9, baseType: !7, size: 32, elements: !41)
!40 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!41 = !{!42, !43, !44, !45, !46}
!42 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!43 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!44 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!45 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!46 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !48, line: 26, baseType: !7, size: 32, elements: !49)
!48 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!49 = !{!50, !51, !52}
!50 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !54, line: 44, baseType: !7, size: 32, elements: !55)
!54 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!55 = !{!56, !57, !58}
!56 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!57 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!58 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !60, line: 343, baseType: !7, size: 32, elements: !61)
!60 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!61 = !{!62, !63, !64, !65}
!62 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!63 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!64 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!65 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !67, line: 524, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71, !72, !73}
!69 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!72 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!73 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!74 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !67, line: 502, baseType: !7, size: 32, elements: !75)
!75 = !{!76, !77, !78, !79}
!76 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!77 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!78 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!79 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!80 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobject_action", file: !81, line: 53, baseType: !7, size: 32, elements: !82)
!81 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!82 = !{!83, !84, !85, !86, !87, !88, !89, !90}
!83 = !DIEnumerator(name: "KOBJ_ADD", value: 0, isUnsigned: true)
!84 = !DIEnumerator(name: "KOBJ_REMOVE", value: 1, isUnsigned: true)
!85 = !DIEnumerator(name: "KOBJ_CHANGE", value: 2, isUnsigned: true)
!86 = !DIEnumerator(name: "KOBJ_MOVE", value: 3, isUnsigned: true)
!87 = !DIEnumerator(name: "KOBJ_ONLINE", value: 4, isUnsigned: true)
!88 = !DIEnumerator(name: "KOBJ_OFFLINE", value: 5, isUnsigned: true)
!89 = !DIEnumerator(name: "KOBJ_BIND", value: 6, isUnsigned: true)
!90 = !DIEnumerator(name: "KOBJ_UNBIND", value: 7, isUnsigned: true)
!91 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !92, line: 10, baseType: !7, size: 32, elements: !93)
!92 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!93 = !{!94, !95}
!94 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!95 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !97, line: 305, baseType: !7, size: 32, elements: !98)
!97 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!98 = !{!99, !100, !101, !102}
!99 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!100 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!101 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!102 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!103 = !{!104, !106, !108, !109, !110, !7, !3666, !3667, !543, !224, !3626, !3668}
!104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !105, size: 64)
!105 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !107, line: 148, baseType: !7)
!107 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!108 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 64)
!111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extcon_dev", file: !112, line: 41, size: 6976, elements: !113)
!112 = !DIFile(filename: "drivers/extcon/extcon.h", directory: "/home/lizy2001/genbc/linux")
!113 = !{!114, !117, !120, !127, !3603, !3618, !3620, !3621, !3622, !3623, !3624, !3625, !3663, !3664, !3665}
!114 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !111, file: !112, line: 43, baseType: !115, size: 64)
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64)
!116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !105)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "supported_cable", scope: !111, file: !112, line: 44, baseType: !118, size: 64, offset: 64)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64)
!119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "mutually_exclusive", scope: !111, file: !112, line: 45, baseType: !121, size: 64, offset: 128)
!121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 64)
!122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !123)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !124, line: 21, baseType: !125)
!124 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!125 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !126, line: 27, baseType: !7)
!126 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!127 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !111, file: !112, line: 48, baseType: !128, size: 5568, offset: 192)
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !60, line: 461, size: 5568, elements: !129)
!129 = !{!130, !3134, !3136, !3139, !3140, !3191, !3282, !3283, !3284, !3285, !3286, !3295, !3400, !3413, !3416, !3417, !3421, !3423, !3424, !3425, !3429, !3435, !3436, !3439, !3554, !3555, !3556, !3557, !3558, !3559, !3591, !3592, !3593, !3596, !3599, !3600, !3601, !3602}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !128, file: !60, line: 462, baseType: !131, size: 512)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !81, line: 64, size: 512, elements: !132)
!132 = !{!133, !134, !140, !142, !202, !2985, !3124, !3129, !3130, !3131, !3132, !3133}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !131, file: !81, line: 65, baseType: !115, size: 64)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !131, file: !81, line: 66, baseType: !135, size: 128, offset: 64)
!135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !107, line: 178, size: 128, elements: !136)
!136 = !{!137, !139}
!137 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !135, file: !107, line: 179, baseType: !138, size: 64)
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 64)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !135, file: !107, line: 179, baseType: !138, size: 64, offset: 64)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !131, file: !81, line: 67, baseType: !141, size: 64, offset: 192)
!141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 64)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !131, file: !81, line: 68, baseType: !143, size: 64, offset: 256)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64)
!144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !81, line: 192, size: 704, elements: !145)
!145 = !{!146, !147, !163, !164}
!146 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !144, file: !81, line: 193, baseType: !135, size: 128)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !144, file: !81, line: 194, baseType: !148, offset: 128)
!148 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !149, line: 83, baseType: !150)
!149 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !149, line: 71, elements: !151)
!151 = !{!152}
!152 = !DIDerivedType(tag: DW_TAG_member, scope: !150, file: !149, line: 72, baseType: !153)
!153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !150, file: !149, line: 72, elements: !154)
!154 = !{!155}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !153, file: !149, line: 73, baseType: !156)
!156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !149, line: 20, elements: !157)
!157 = !{!158}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !156, file: !149, line: 21, baseType: !159)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !160, line: 25, baseType: !161)
!160 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!161 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !160, line: 25, elements: !162)
!162 = !{}
!163 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !144, file: !81, line: 195, baseType: !131, size: 512, offset: 128)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !144, file: !81, line: 196, baseType: !165, size: 64, offset: 640)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 64)
!166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !167)
!167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !81, line: 156, size: 192, elements: !168)
!168 = !{!169, !175, !180}
!169 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !167, file: !81, line: 157, baseType: !170, size: 64)
!170 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !171)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 64)
!172 = !DISubroutineType(types: !173)
!173 = !{!174, !143, !141}
!174 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !167, file: !81, line: 158, baseType: !176, size: 64, offset: 64)
!176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !177)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 64)
!178 = !DISubroutineType(types: !179)
!179 = !{!115, !143, !141}
!180 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !167, file: !81, line: 159, baseType: !181, size: 64, offset: 128)
!181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !182)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!183 = !DISubroutineType(types: !184)
!184 = !{!174, !143, !141, !185}
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 64)
!186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !81, line: 148, size: 20736, elements: !187)
!187 = !{!188, !192, !196, !197, !201}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !186, file: !81, line: 149, baseType: !189, size: 192)
!189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !104, size: 192, elements: !190)
!190 = !{!191}
!191 = !DISubrange(count: 3)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !186, file: !81, line: 150, baseType: !193, size: 4096, offset: 192)
!193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !104, size: 4096, elements: !194)
!194 = !{!195}
!195 = !DISubrange(count: 64)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !186, file: !81, line: 151, baseType: !174, size: 32, offset: 4288)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !186, file: !81, line: 152, baseType: !198, size: 16384, offset: 4320)
!198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 16384, elements: !199)
!199 = !{!200}
!200 = !DISubrange(count: 2048)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !186, file: !81, line: 153, baseType: !174, size: 32, offset: 20704)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !131, file: !81, line: 69, baseType: !203, size: 64, offset: 320)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64)
!204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !81, line: 138, size: 448, elements: !205)
!205 = !{!206, !210, !239, !241, !2945, !2975, !2979}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !204, file: !81, line: 139, baseType: !207, size: 64)
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 64)
!208 = !DISubroutineType(types: !209)
!209 = !{null, !141}
!210 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !204, file: !81, line: 140, baseType: !211, size: 64, offset: 64)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 64)
!212 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !213)
!213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !214, line: 230, size: 128, elements: !215)
!214 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!215 = !{!216, !232}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !213, file: !214, line: 231, baseType: !217, size: 64)
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 64)
!218 = !DISubroutineType(types: !219)
!219 = !{!220, !141, !225, !104}
!220 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !107, line: 60, baseType: !221)
!221 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !222, line: 73, baseType: !223)
!222 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!223 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !222, line: 15, baseType: !224)
!224 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64)
!226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !214, line: 30, size: 128, elements: !227)
!227 = !{!228, !229}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !226, file: !214, line: 31, baseType: !115, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !226, file: !214, line: 32, baseType: !230, size: 16, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !107, line: 19, baseType: !231)
!231 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !213, file: !214, line: 232, baseType: !233, size: 64, offset: 64)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64)
!234 = !DISubroutineType(types: !235)
!235 = !{!220, !141, !225, !115, !236}
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !107, line: 55, baseType: !237)
!237 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !222, line: 72, baseType: !238)
!238 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !222, line: 16, baseType: !108)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !204, file: !81, line: 141, baseType: !240, size: 64, offset: 128)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !225, size: 64)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !204, file: !81, line: 142, baseType: !242, size: 64, offset: 192)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64)
!244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !245)
!245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !214, line: 84, size: 320, elements: !246)
!246 = !{!247, !248, !252, !2942, !2943}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !245, file: !214, line: 85, baseType: !115, size: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !245, file: !214, line: 86, baseType: !249, size: 64, offset: 64)
!249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 64)
!250 = !DISubroutineType(types: !251)
!251 = !{!230, !141, !225, !174}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !245, file: !214, line: 88, baseType: !253, size: 64, offset: 128)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!254 = !DISubroutineType(types: !255)
!255 = !{!230, !141, !256, !174}
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 64)
!257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !214, line: 168, size: 448, elements: !258)
!258 = !{!259, !260, !261, !262, !2937, !2938}
!259 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !257, file: !214, line: 169, baseType: !226, size: 128)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !257, file: !214, line: 170, baseType: !236, size: 64, offset: 128)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !257, file: !214, line: 171, baseType: !109, size: 64, offset: 192)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !257, file: !214, line: 172, baseType: !263, size: 64, offset: 256)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!264 = !DISubroutineType(types: !265)
!265 = !{!220, !266, !141, !256, !104, !441, !236}
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64)
!267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !31, line: 916, size: 1856, align: 32, elements: !268)
!268 = !{!269, !287, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2920, !2921, !2930, !2931, !2932, !2933, !2934, !2935, !2936}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !267, file: !31, line: 920, baseType: !270, size: 128)
!270 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !267, file: !31, line: 917, size: 128, elements: !271)
!271 = !{!272, !278}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !270, file: !31, line: 918, baseType: !273, size: 64)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !274, line: 58, size: 64, elements: !275)
!274 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!275 = !{!276}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !273, file: !274, line: 59, baseType: !277, size: 64)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !270, file: !31, line: 919, baseType: !279, size: 128, align: 64)
!279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !107, line: 216, size: 128, align: 64, elements: !280)
!280 = !{!281, !283}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !279, file: !107, line: 217, baseType: !282, size: 64)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !279, file: !107, line: 218, baseType: !284, size: 64, offset: 64)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!285 = !DISubroutineType(types: !286)
!286 = !{null, !282}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !267, file: !31, line: 921, baseType: !288, size: 128, offset: 128)
!288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !289, line: 8, size: 128, elements: !290)
!289 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!290 = !{!291, !295}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !288, file: !289, line: 9, baseType: !292, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !294, line: 18, flags: DIFlagFwdDecl)
!294 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!295 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !288, file: !289, line: 10, baseType: !296, size: 64, offset: 64)
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !294, line: 89, size: 1536, elements: !298)
!298 = !{!299, !300, !310, !318, !319, !338, !2870, !2872, !2884, !2885, !2886, !2887, !2888, !2894, !2895, !2896}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !297, file: !294, line: 91, baseType: !7, size: 32)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !297, file: !294, line: 92, baseType: !301, size: 32, offset: 32)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !302, line: 277, baseType: !303)
!302 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !302, line: 277, size: 32, elements: !304)
!304 = !{!305}
!305 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !303, file: !302, line: 277, baseType: !306, size: 32)
!306 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !302, line: 70, baseType: !307)
!307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !302, line: 65, size: 32, elements: !308)
!308 = !{!309}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !307, file: !302, line: 66, baseType: !7, size: 32)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !297, file: !294, line: 93, baseType: !311, size: 128, offset: 64)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !312, line: 38, size: 128, elements: !313)
!312 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!313 = !{!314, !316}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !311, file: !312, line: 39, baseType: !315, size: 64)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !311, file: !312, line: 39, baseType: !317, size: 64, offset: 64)
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !297, file: !294, line: 94, baseType: !296, size: 64, offset: 192)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !297, file: !294, line: 95, baseType: !320, size: 128, offset: 256)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !294, line: 47, size: 128, elements: !321)
!321 = !{!322, !334}
!322 = !DIDerivedType(tag: DW_TAG_member, scope: !320, file: !294, line: 48, baseType: !323, size: 64)
!323 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !320, file: !294, line: 48, size: 64, elements: !324)
!324 = !{!325, !330}
!325 = !DIDerivedType(tag: DW_TAG_member, scope: !323, file: !294, line: 49, baseType: !326, size: 64)
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !323, file: !294, line: 49, size: 64, elements: !327)
!327 = !{!328, !329}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !326, file: !294, line: 50, baseType: !123, size: 32)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !326, file: !294, line: 50, baseType: !123, size: 32, offset: 32)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !323, file: !294, line: 52, baseType: !331, size: 64)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !124, line: 23, baseType: !332)
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !126, line: 31, baseType: !333)
!333 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !320, file: !294, line: 54, baseType: !335, size: 64, offset: 64)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !337)
!337 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !297, file: !294, line: 96, baseType: !339, size: 64, offset: 384)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !31, line: 610, size: 4224, elements: !341)
!341 = !{!342, !343, !344, !352, !359, !360, !508, !2582, !2583, !2584, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2846, !2854, !2855, !2856, !2866, !2867, !2868, !2869}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !340, file: !31, line: 611, baseType: !230, size: 16)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !340, file: !31, line: 612, baseType: !231, size: 16, offset: 16)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !340, file: !31, line: 613, baseType: !345, size: 32, offset: 32)
!345 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !346, line: 23, baseType: !347)
!346 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !346, line: 21, size: 32, elements: !348)
!348 = !{!349}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !347, file: !346, line: 22, baseType: !350, size: 32)
!350 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !107, line: 32, baseType: !351)
!351 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !222, line: 49, baseType: !7)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !340, file: !31, line: 614, baseType: !353, size: 32, offset: 64)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !346, line: 28, baseType: !354)
!354 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !346, line: 26, size: 32, elements: !355)
!355 = !{!356}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !354, file: !346, line: 27, baseType: !357, size: 32)
!357 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !107, line: 33, baseType: !358)
!358 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !222, line: 50, baseType: !7)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !340, file: !31, line: 615, baseType: !7, size: 32, offset: 96)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !340, file: !31, line: 622, baseType: !361, size: 64, offset: 128)
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 64)
!362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !363)
!363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !31, line: 1864, size: 1536, align: 512, elements: !364)
!364 = !{!365, !369, !382, !386, !392, !396, !402, !406, !410, !414, !418, !419, !425, !429, !455, !484, !488, !494, !499, !503, !504}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !363, file: !31, line: 1865, baseType: !366, size: 64)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!367 = !DISubroutineType(types: !368)
!368 = !{!296, !339, !296, !7}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !363, file: !31, line: 1866, baseType: !370, size: 64, offset: 64)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!371 = !DISubroutineType(types: !372)
!372 = !{!115, !296, !339, !373}
!373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 64)
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !375, line: 10, size: 128, elements: !376)
!375 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!376 = !{!377, !381}
!377 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !374, file: !375, line: 11, baseType: !378, size: 64)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!379 = !DISubroutineType(types: !380)
!380 = !{null, !109}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !374, file: !375, line: 12, baseType: !109, size: 64, offset: 64)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !363, file: !31, line: 1867, baseType: !383, size: 64, offset: 128)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!384 = !DISubroutineType(types: !385)
!385 = !{!174, !339, !174}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !363, file: !31, line: 1868, baseType: !387, size: 64, offset: 192)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!388 = !DISubroutineType(types: !389)
!389 = !{!390, !339, !174}
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64)
!391 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !31, line: 581, flags: DIFlagFwdDecl)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !363, file: !31, line: 1870, baseType: !393, size: 64, offset: 256)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = !DISubroutineType(types: !395)
!395 = !{!174, !296, !104, !174}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !363, file: !31, line: 1872, baseType: !397, size: 64, offset: 320)
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 64)
!398 = !DISubroutineType(types: !399)
!399 = !{!174, !339, !296, !230, !400}
!400 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !107, line: 30, baseType: !401)
!401 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !363, file: !31, line: 1873, baseType: !403, size: 64, offset: 384)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64)
!404 = !DISubroutineType(types: !405)
!405 = !{!174, !296, !339, !296}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !363, file: !31, line: 1874, baseType: !407, size: 64, offset: 448)
!407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!408 = !DISubroutineType(types: !409)
!409 = !{!174, !339, !296}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !363, file: !31, line: 1875, baseType: !411, size: 64, offset: 512)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!412 = !DISubroutineType(types: !413)
!413 = !{!174, !339, !296, !115}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !363, file: !31, line: 1876, baseType: !415, size: 64, offset: 576)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = !DISubroutineType(types: !417)
!417 = !{!174, !339, !296, !230}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !363, file: !31, line: 1877, baseType: !407, size: 64, offset: 640)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !363, file: !31, line: 1878, baseType: !420, size: 64, offset: 704)
!420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 64)
!421 = !DISubroutineType(types: !422)
!422 = !{!174, !339, !296, !230, !423}
!423 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !107, line: 16, baseType: !424)
!424 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !107, line: 13, baseType: !123)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !363, file: !31, line: 1879, baseType: !426, size: 64, offset: 768)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!427 = !DISubroutineType(types: !428)
!428 = !{!174, !339, !296, !339, !296, !7}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !363, file: !31, line: 1881, baseType: !430, size: 64, offset: 832)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!431 = !DISubroutineType(types: !432)
!432 = !{!174, !296, !433}
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !31, line: 219, size: 640, elements: !435)
!435 = !{!436, !437, !438, !439, !440, !444, !452, !453, !454}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !434, file: !31, line: 220, baseType: !7, size: 32)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !434, file: !31, line: 221, baseType: !230, size: 16, offset: 32)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !434, file: !31, line: 222, baseType: !345, size: 32, offset: 64)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !434, file: !31, line: 223, baseType: !353, size: 32, offset: 96)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !434, file: !31, line: 224, baseType: !441, size: 64, offset: 128)
!441 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !107, line: 46, baseType: !442)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !222, line: 88, baseType: !443)
!443 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !434, file: !31, line: 225, baseType: !445, size: 128, offset: 192)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !446, line: 13, size: 128, elements: !447)
!446 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!447 = !{!448, !451}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !445, file: !446, line: 14, baseType: !449, size: 64)
!449 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !446, line: 8, baseType: !450)
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !126, line: 30, baseType: !443)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !445, file: !446, line: 15, baseType: !224, size: 64, offset: 64)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !434, file: !31, line: 226, baseType: !445, size: 128, offset: 320)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !434, file: !31, line: 227, baseType: !445, size: 128, offset: 448)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !434, file: !31, line: 234, baseType: !266, size: 64, offset: 576)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !363, file: !31, line: 1882, baseType: !456, size: 64, offset: 896)
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!457 = !DISubroutineType(types: !458)
!458 = !{!174, !459, !461, !123, !7}
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!460 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !288)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !463, line: 22, size: 1152, elements: !464)
!463 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!464 = !{!465, !466, !467, !468, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !462, file: !463, line: 23, baseType: !123, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !462, file: !463, line: 24, baseType: !230, size: 16, offset: 32)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !462, file: !463, line: 25, baseType: !7, size: 32, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !462, file: !463, line: 26, baseType: !469, size: 32, offset: 96)
!469 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !107, line: 104, baseType: !123)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !462, file: !463, line: 27, baseType: !331, size: 64, offset: 128)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !462, file: !463, line: 28, baseType: !331, size: 64, offset: 192)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !462, file: !463, line: 37, baseType: !331, size: 64, offset: 256)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !462, file: !463, line: 38, baseType: !423, size: 32, offset: 320)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !462, file: !463, line: 39, baseType: !423, size: 32, offset: 352)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !462, file: !463, line: 40, baseType: !345, size: 32, offset: 384)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !462, file: !463, line: 41, baseType: !353, size: 32, offset: 416)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !462, file: !463, line: 42, baseType: !441, size: 64, offset: 448)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !462, file: !463, line: 43, baseType: !445, size: 128, offset: 512)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !462, file: !463, line: 44, baseType: !445, size: 128, offset: 640)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !462, file: !463, line: 45, baseType: !445, size: 128, offset: 768)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !462, file: !463, line: 46, baseType: !445, size: 128, offset: 896)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !462, file: !463, line: 47, baseType: !331, size: 64, offset: 1024)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !462, file: !463, line: 48, baseType: !331, size: 64, offset: 1088)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !363, file: !31, line: 1883, baseType: !485, size: 64, offset: 960)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64)
!486 = !DISubroutineType(types: !487)
!487 = !{!220, !296, !104, !236}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !363, file: !31, line: 1884, baseType: !489, size: 64, offset: 1024)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!490 = !DISubroutineType(types: !491)
!491 = !{!174, !339, !492, !331, !331}
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !31, line: 50, flags: DIFlagFwdDecl)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !363, file: !31, line: 1886, baseType: !495, size: 64, offset: 1088)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!496 = !DISubroutineType(types: !497)
!497 = !{!174, !339, !498, !174}
!498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !363, file: !31, line: 1887, baseType: !500, size: 64, offset: 1152)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = !DISubroutineType(types: !502)
!502 = !{!174, !339, !296, !266, !7, !230}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !363, file: !31, line: 1890, baseType: !415, size: 64, offset: 1216)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !363, file: !31, line: 1891, baseType: !505, size: 64, offset: 1280)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64)
!506 = !DISubroutineType(types: !507)
!507 = !{!174, !339, !390, !174}
!508 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !340, file: !31, line: 623, baseType: !509, size: 64, offset: 192)
!509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 64)
!510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !31, line: 1416, size: 9472, elements: !511)
!511 = !{!512, !513, !514, !515, !516, !517, !567, !2189, !2271, !2354, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2370, !2374, !2375, !2378, !2379, !2382, !2383, !2384, !2425, !2452, !2453, !2454, !2455, !2456, !2457, !2460, !2462, !2469, !2470, !2472, !2473, !2474, !2533, !2534, !2549, !2550, !2551, !2552, !2553, !2556, !2557, !2558, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581}
!512 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !510, file: !31, line: 1417, baseType: !135, size: 128)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !510, file: !31, line: 1418, baseType: !423, size: 32, offset: 128)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !510, file: !31, line: 1419, baseType: !337, size: 8, offset: 160)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !510, file: !31, line: 1420, baseType: !108, size: 64, offset: 192)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !510, file: !31, line: 1421, baseType: !441, size: 64, offset: 256)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !510, file: !31, line: 1422, baseType: !518, size: 64, offset: 320)
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 64)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !31, line: 2228, size: 576, elements: !520)
!520 = !{!521, !522, !523, !530, !534, !538, !542, !546, !547, !557, !560, !561, !562, !564, !565, !566}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !519, file: !31, line: 2229, baseType: !115, size: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !519, file: !31, line: 2230, baseType: !174, size: 32, offset: 64)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !519, file: !31, line: 2238, baseType: !524, size: 64, offset: 128)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64)
!525 = !DISubroutineType(types: !526)
!526 = !{!174, !527}
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64)
!528 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !529, line: 28, flags: DIFlagFwdDecl)
!529 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!530 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !519, file: !31, line: 2239, baseType: !531, size: 64, offset: 192)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !533)
!533 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !31, line: 70, flags: DIFlagFwdDecl)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !519, file: !31, line: 2240, baseType: !535, size: 64, offset: 256)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64)
!536 = !DISubroutineType(types: !537)
!537 = !{!296, !518, !174, !115, !109}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !519, file: !31, line: 2242, baseType: !539, size: 64, offset: 320)
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64)
!540 = !DISubroutineType(types: !541)
!541 = !{null, !509}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !519, file: !31, line: 2243, baseType: !543, size: 64, offset: 384)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !545, line: 76, flags: DIFlagFwdDecl)
!545 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!546 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !519, file: !31, line: 2244, baseType: !518, size: 64, offset: 448)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !519, file: !31, line: 2245, baseType: !548, size: 64, offset: 512)
!548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !107, line: 182, size: 64, elements: !549)
!549 = !{!550}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !548, file: !107, line: 183, baseType: !551, size: 64)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !107, line: 186, size: 128, elements: !553)
!553 = !{!554, !555}
!554 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !552, file: !107, line: 187, baseType: !551, size: 64)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !552, file: !107, line: 187, baseType: !556, size: 64, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 64)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !519, file: !31, line: 2247, baseType: !558, offset: 576)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !559, line: 187, elements: !162)
!559 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!560 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !519, file: !31, line: 2248, baseType: !558, offset: 576)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !519, file: !31, line: 2249, baseType: !558, offset: 576)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !519, file: !31, line: 2250, baseType: !563, offset: 576)
!563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !558, elements: !190)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !519, file: !31, line: 2252, baseType: !558, offset: 576)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !519, file: !31, line: 2253, baseType: !558, offset: 576)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !519, file: !31, line: 2254, baseType: !558, offset: 576)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !510, file: !31, line: 1423, baseType: !568, size: 64, offset: 384)
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 64)
!569 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !570)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !31, line: 1935, size: 1472, elements: !571)
!571 = !{!572, !576, !580, !581, !585, !591, !595, !596, !597, !601, !605, !606, !607, !608, !614, !619, !620, !627, !628, !629, !630, !2173, !2188}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !570, file: !31, line: 1936, baseType: !573, size: 64)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 64)
!574 = !DISubroutineType(types: !575)
!575 = !{!339, !509}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !570, file: !31, line: 1937, baseType: !577, size: 64, offset: 64)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = !DISubroutineType(types: !579)
!579 = !{null, !339}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !570, file: !31, line: 1938, baseType: !577, size: 64, offset: 128)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !570, file: !31, line: 1940, baseType: !582, size: 64, offset: 192)
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 64)
!583 = !DISubroutineType(types: !584)
!584 = !{null, !339, !174}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !570, file: !31, line: 1941, baseType: !586, size: 64, offset: 256)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 64)
!587 = !DISubroutineType(types: !588)
!588 = !{!174, !339, !589}
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 64)
!590 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !31, line: 289, flags: DIFlagFwdDecl)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !570, file: !31, line: 1942, baseType: !592, size: 64, offset: 320)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64)
!593 = !DISubroutineType(types: !594)
!594 = !{!174, !339}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !570, file: !31, line: 1943, baseType: !577, size: 64, offset: 384)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !570, file: !31, line: 1944, baseType: !539, size: 64, offset: 448)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !570, file: !31, line: 1945, baseType: !598, size: 64, offset: 512)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!599 = !DISubroutineType(types: !600)
!600 = !{!174, !509, !174}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !570, file: !31, line: 1946, baseType: !602, size: 64, offset: 576)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!603 = !DISubroutineType(types: !604)
!604 = !{!174, !509}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !570, file: !31, line: 1947, baseType: !602, size: 64, offset: 640)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !570, file: !31, line: 1948, baseType: !602, size: 64, offset: 704)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !570, file: !31, line: 1949, baseType: !602, size: 64, offset: 768)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !570, file: !31, line: 1950, baseType: !609, size: 64, offset: 832)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = !DISubroutineType(types: !611)
!611 = !{!174, !296, !612}
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!613 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !31, line: 57, flags: DIFlagFwdDecl)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !570, file: !31, line: 1951, baseType: !615, size: 64, offset: 896)
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !616, size: 64)
!616 = !DISubroutineType(types: !617)
!617 = !{!174, !509, !618, !104}
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !570, file: !31, line: 1952, baseType: !539, size: 64, offset: 960)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !570, file: !31, line: 1954, baseType: !621, size: 64, offset: 1024)
!621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!622 = !DISubroutineType(types: !623)
!623 = !{!174, !624, !296}
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !626, line: 539, flags: DIFlagFwdDecl)
!626 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!627 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !570, file: !31, line: 1955, baseType: !621, size: 64, offset: 1088)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !570, file: !31, line: 1956, baseType: !621, size: 64, offset: 1152)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !570, file: !31, line: 1957, baseType: !621, size: 64, offset: 1216)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !570, file: !31, line: 1963, baseType: !631, size: 64, offset: 1280)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!632 = !DISubroutineType(types: !633)
!633 = !{!174, !509, !634, !106}
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !636, line: 68, size: 512, align: 128, elements: !637)
!636 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!637 = !{!638, !639, !2165, !2172}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !635, file: !636, line: 69, baseType: !108, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, scope: !635, file: !636, line: 77, baseType: !640, size: 320, offset: 64)
!640 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !635, file: !636, line: 77, size: 320, elements: !641)
!641 = !{!642, !829, !834, !862, !870, !876, !2157, !2164}
!642 = !DIDerivedType(tag: DW_TAG_member, scope: !640, file: !636, line: 78, baseType: !643, size: 320)
!643 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !640, file: !636, line: 78, size: 320, elements: !644)
!644 = !{!645, !646, !827, !828}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !643, file: !636, line: 84, baseType: !135, size: 128)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !643, file: !636, line: 86, baseType: !647, size: 64, offset: 128)
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !31, line: 451, size: 1216, align: 64, elements: !649)
!649 = !{!650, !651, !658, !659, !664, !679, !695, !696, !697, !698, !820, !821, !824, !825, !826}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !648, file: !31, line: 452, baseType: !339, size: 64)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !648, file: !31, line: 453, baseType: !652, size: 128, offset: 64)
!652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !653, line: 292, size: 128, elements: !654)
!653 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!654 = !{!655, !656, !657}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !652, file: !653, line: 293, baseType: !148)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !652, file: !653, line: 295, baseType: !106, size: 32)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !652, file: !653, line: 296, baseType: !109, size: 64, offset: 64)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !648, file: !31, line: 454, baseType: !106, size: 32, offset: 192)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !648, file: !31, line: 455, baseType: !660, size: 32, offset: 224)
!660 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !107, line: 168, baseType: !661)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !107, line: 166, size: 32, elements: !662)
!662 = !{!663}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !661, file: !107, line: 167, baseType: !174, size: 32)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !648, file: !31, line: 460, baseType: !665, size: 128, offset: 256)
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !666, line: 125, size: 128, elements: !667)
!666 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!667 = !{!668, !678}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !665, file: !666, line: 126, baseType: !669, size: 64)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !666, line: 31, size: 64, elements: !670)
!670 = !{!671}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !669, file: !666, line: 32, baseType: !672, size: 64)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !666, line: 24, size: 192, align: 64, elements: !674)
!674 = !{!675, !676, !677}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !673, file: !666, line: 25, baseType: !108, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !673, file: !666, line: 26, baseType: !672, size: 64, offset: 64)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !673, file: !666, line: 27, baseType: !672, size: 64, offset: 128)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !665, file: !666, line: 127, baseType: !672, size: 64, offset: 64)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !648, file: !31, line: 461, baseType: !680, size: 256, offset: 384)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !681, line: 35, size: 256, elements: !682)
!681 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!682 = !{!683, !691, !692, !694}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !680, file: !681, line: 36, baseType: !684, size: 64)
!684 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !685, line: 13, baseType: !686)
!685 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!686 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !107, line: 175, baseType: !687)
!687 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !107, line: 173, size: 64, elements: !688)
!688 = !{!689}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !687, file: !107, line: 174, baseType: !690, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !124, line: 22, baseType: !450)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !680, file: !681, line: 42, baseType: !684, size: 64, offset: 64)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !680, file: !681, line: 46, baseType: !693, offset: 128)
!693 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !149, line: 29, baseType: !156)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !680, file: !681, line: 47, baseType: !135, size: 128, offset: 128)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !648, file: !31, line: 462, baseType: !108, size: 64, offset: 640)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !648, file: !31, line: 463, baseType: !108, size: 64, offset: 704)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !648, file: !31, line: 464, baseType: !108, size: 64, offset: 768)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !648, file: !31, line: 465, baseType: !699, size: 64, offset: 832)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !701)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !31, line: 367, size: 1408, elements: !702)
!702 = !{!703, !707, !711, !715, !719, !723, !729, !735, !739, !744, !748, !752, !756, !784, !788, !794, !795, !796, !800, !805, !809, !816}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !701, file: !31, line: 368, baseType: !704, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = !DISubroutineType(types: !706)
!706 = !{!174, !634, !589}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !701, file: !31, line: 369, baseType: !708, size: 64, offset: 64)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DISubroutineType(types: !710)
!710 = !{!174, !266, !634}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !701, file: !31, line: 372, baseType: !712, size: 64, offset: 128)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = !DISubroutineType(types: !714)
!714 = !{!174, !647, !589}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !701, file: !31, line: 375, baseType: !716, size: 64, offset: 192)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!717 = !DISubroutineType(types: !718)
!718 = !{!174, !634}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !701, file: !31, line: 381, baseType: !720, size: 64, offset: 256)
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64)
!721 = !DISubroutineType(types: !722)
!722 = !{!174, !266, !647, !138, !7}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !701, file: !31, line: 383, baseType: !724, size: 64, offset: 320)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = !DISubroutineType(types: !726)
!726 = !{null, !727}
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !31, line: 290, flags: DIFlagFwdDecl)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !701, file: !31, line: 385, baseType: !730, size: 64, offset: 384)
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = !DISubroutineType(types: !732)
!732 = !{!174, !266, !647, !441, !7, !7, !733, !734}
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !701, file: !31, line: 388, baseType: !736, size: 64, offset: 448)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DISubroutineType(types: !738)
!738 = !{!174, !266, !647, !441, !7, !7, !634, !109}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !701, file: !31, line: 393, baseType: !740, size: 64, offset: 512)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = !DISubroutineType(types: !742)
!742 = !{!743, !647, !743}
!743 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !107, line: 125, baseType: !331)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !701, file: !31, line: 394, baseType: !745, size: 64, offset: 576)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 64)
!746 = !DISubroutineType(types: !747)
!747 = !{null, !634, !7, !7}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !701, file: !31, line: 395, baseType: !749, size: 64, offset: 640)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!750 = !DISubroutineType(types: !751)
!751 = !{!174, !634, !106}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !701, file: !31, line: 396, baseType: !753, size: 64, offset: 704)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = !DISubroutineType(types: !755)
!755 = !{null, !634}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !701, file: !31, line: 397, baseType: !757, size: 64, offset: 768)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!758 = !DISubroutineType(types: !759)
!759 = !{!220, !760, !782}
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !31, line: 320, size: 384, elements: !762)
!762 = !{!763, !764, !765, !769, !770, !771, !774, !775}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !761, file: !31, line: 321, baseType: !266, size: 64)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !761, file: !31, line: 326, baseType: !441, size: 64, offset: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !761, file: !31, line: 327, baseType: !766, size: 64, offset: 128)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = !DISubroutineType(types: !768)
!768 = !{null, !760, !224, !224}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !761, file: !31, line: 328, baseType: !109, size: 64, offset: 192)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !761, file: !31, line: 329, baseType: !174, size: 32, offset: 256)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !761, file: !31, line: 330, baseType: !772, size: 16, offset: 288)
!772 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !124, line: 19, baseType: !773)
!773 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !126, line: 24, baseType: !231)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !761, file: !31, line: 331, baseType: !772, size: 16, offset: 304)
!775 = !DIDerivedType(tag: DW_TAG_member, scope: !761, file: !31, line: 332, baseType: !776, size: 64, offset: 320)
!776 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !761, file: !31, line: 332, size: 64, elements: !777)
!777 = !{!778, !779}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !776, file: !31, line: 333, baseType: !7, size: 32)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !776, file: !31, line: 334, baseType: !780, size: 64)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !31, line: 334, flags: DIFlagFwdDecl)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !31, line: 64, flags: DIFlagFwdDecl)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !701, file: !31, line: 402, baseType: !785, size: 64, offset: 832)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = !DISubroutineType(types: !787)
!787 = !{!174, !647, !634, !634, !5}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !701, file: !31, line: 404, baseType: !789, size: 64, offset: 896)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = !DISubroutineType(types: !791)
!791 = !{!400, !634, !792}
!792 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !793, line: 305, baseType: !7)
!793 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!794 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !701, file: !31, line: 405, baseType: !753, size: 64, offset: 960)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !701, file: !31, line: 406, baseType: !716, size: 64, offset: 1024)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !701, file: !31, line: 407, baseType: !797, size: 64, offset: 1088)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = !DISubroutineType(types: !799)
!799 = !{!174, !634, !108, !108}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !701, file: !31, line: 409, baseType: !801, size: 64, offset: 1152)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = !DISubroutineType(types: !803)
!803 = !{null, !634, !804, !804}
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !701, file: !31, line: 410, baseType: !806, size: 64, offset: 1216)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DISubroutineType(types: !808)
!808 = !{!174, !647, !634}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !701, file: !31, line: 413, baseType: !810, size: 64, offset: 1280)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = !DISubroutineType(types: !812)
!812 = !{!174, !813, !266, !815}
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !31, line: 61, flags: DIFlagFwdDecl)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !701, file: !31, line: 415, baseType: !817, size: 64, offset: 1344)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = !DISubroutineType(types: !819)
!819 = !{null, !266}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !648, file: !31, line: 466, baseType: !108, size: 64, offset: 896)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !648, file: !31, line: 467, baseType: !822, size: 32, offset: 960)
!822 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !823, line: 8, baseType: !123)
!823 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!824 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !648, file: !31, line: 468, baseType: !148, offset: 992)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !648, file: !31, line: 469, baseType: !135, size: 128, offset: 1024)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !648, file: !31, line: 470, baseType: !109, size: 64, offset: 1152)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !643, file: !636, line: 87, baseType: !108, size: 64, offset: 192)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !643, file: !636, line: 94, baseType: !108, size: 64, offset: 256)
!829 = !DIDerivedType(tag: DW_TAG_member, scope: !640, file: !636, line: 96, baseType: !830, size: 64)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !640, file: !636, line: 96, size: 64, elements: !831)
!831 = !{!832}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !830, file: !636, line: 101, baseType: !833, size: 64)
!833 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !107, line: 143, baseType: !331)
!834 = !DIDerivedType(tag: DW_TAG_member, scope: !640, file: !636, line: 103, baseType: !835, size: 320)
!835 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !640, file: !636, line: 103, size: 320, elements: !836)
!836 = !{!837, !847, !850, !851}
!837 = !DIDerivedType(tag: DW_TAG_member, scope: !835, file: !636, line: 104, baseType: !838, size: 128)
!838 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !835, file: !636, line: 104, size: 128, elements: !839)
!839 = !{!840, !841}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !838, file: !636, line: 105, baseType: !135, size: 128)
!841 = !DIDerivedType(tag: DW_TAG_member, scope: !838, file: !636, line: 106, baseType: !842, size: 128)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !838, file: !636, line: 106, size: 128, elements: !843)
!843 = !{!844, !845, !846}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !842, file: !636, line: 107, baseType: !634, size: 64)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !842, file: !636, line: 109, baseType: !174, size: 32, offset: 64)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !842, file: !636, line: 110, baseType: !174, size: 32, offset: 96)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !835, file: !636, line: 117, baseType: !848, size: 64, offset: 128)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !636, line: 117, flags: DIFlagFwdDecl)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !835, file: !636, line: 119, baseType: !109, size: 64, offset: 192)
!851 = !DIDerivedType(tag: DW_TAG_member, scope: !835, file: !636, line: 120, baseType: !852, size: 64, offset: 256)
!852 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !835, file: !636, line: 120, size: 64, elements: !853)
!853 = !{!854, !855, !856}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !852, file: !636, line: 121, baseType: !109, size: 64)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !852, file: !636, line: 122, baseType: !108, size: 64)
!856 = !DIDerivedType(tag: DW_TAG_member, scope: !852, file: !636, line: 123, baseType: !857, size: 32)
!857 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !852, file: !636, line: 123, size: 32, elements: !858)
!858 = !{!859, !860, !861}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !857, file: !636, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !857, file: !636, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !857, file: !636, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!862 = !DIDerivedType(tag: DW_TAG_member, scope: !640, file: !636, line: 130, baseType: !863, size: 192)
!863 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !640, file: !636, line: 130, size: 192, elements: !864)
!864 = !{!865, !866, !867, !868, !869}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !863, file: !636, line: 131, baseType: !108, size: 64)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !863, file: !636, line: 134, baseType: !337, size: 8, offset: 64)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !863, file: !636, line: 135, baseType: !337, size: 8, offset: 72)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !863, file: !636, line: 136, baseType: !660, size: 32, offset: 96)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !863, file: !636, line: 137, baseType: !7, size: 32, offset: 128)
!870 = !DIDerivedType(tag: DW_TAG_member, scope: !640, file: !636, line: 139, baseType: !871, size: 256)
!871 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !640, file: !636, line: 139, size: 256, elements: !872)
!872 = !{!873, !874, !875}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !871, file: !636, line: 140, baseType: !108, size: 64)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !871, file: !636, line: 141, baseType: !660, size: 32, offset: 64)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !871, file: !636, line: 143, baseType: !135, size: 128, offset: 128)
!876 = !DIDerivedType(tag: DW_TAG_member, scope: !640, file: !636, line: 145, baseType: !877, size: 256)
!877 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !640, file: !636, line: 145, size: 256, elements: !878)
!878 = !{!879, !880, !882, !883, !2156}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !877, file: !636, line: 146, baseType: !108, size: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !877, file: !636, line: 147, baseType: !881, size: 64, offset: 64)
!881 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !626, line: 509, baseType: !634)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !877, file: !636, line: 148, baseType: !108, size: 64, offset: 128)
!883 = !DIDerivedType(tag: DW_TAG_member, scope: !877, file: !636, line: 149, baseType: !884, size: 64, offset: 192)
!884 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !877, file: !636, line: 149, size: 64, elements: !885)
!885 = !{!886, !2155}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !884, file: !636, line: 150, baseType: !887, size: 64)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !636, line: 388, size: 7296, elements: !889)
!889 = !{!890, !2151}
!890 = !DIDerivedType(tag: DW_TAG_member, scope: !888, file: !636, line: 389, baseType: !891, size: 7296)
!891 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !888, file: !636, line: 389, size: 7296, elements: !892)
!892 = !{!893, !931, !932, !933, !937, !938, !939, !940, !941, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !982, !990, !993, !1039, !1040, !2135, !2136, !2139, !2140, !2141, !2144, !2145, !2146, !2149, !2150}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !891, file: !636, line: 390, baseType: !894, size: 64)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !636, line: 305, size: 1472, elements: !896)
!896 = !{!897, !898, !899, !900, !901, !902, !903, !904, !911, !912, !917, !918, !921, !925, !926, !927, !928, !929}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !895, file: !636, line: 308, baseType: !108, size: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !895, file: !636, line: 309, baseType: !108, size: 64, offset: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !895, file: !636, line: 313, baseType: !894, size: 64, offset: 128)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !895, file: !636, line: 313, baseType: !894, size: 64, offset: 192)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !895, file: !636, line: 315, baseType: !673, size: 192, align: 64, offset: 256)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !895, file: !636, line: 323, baseType: !108, size: 64, offset: 448)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !895, file: !636, line: 327, baseType: !887, size: 64, offset: 512)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !895, file: !636, line: 333, baseType: !905, size: 64, offset: 576)
!905 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !626, line: 284, baseType: !906)
!906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !626, line: 284, size: 64, elements: !907)
!907 = !{!908}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !906, file: !626, line: 284, baseType: !909, size: 64)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !910, line: 19, baseType: !108)
!910 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!911 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !895, file: !636, line: 334, baseType: !108, size: 64, offset: 640)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !895, file: !636, line: 343, baseType: !913, size: 256, offset: 704)
!913 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !895, file: !636, line: 340, size: 256, elements: !914)
!914 = !{!915, !916}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !913, file: !636, line: 341, baseType: !673, size: 192, align: 64)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !913, file: !636, line: 342, baseType: !108, size: 64, offset: 192)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !895, file: !636, line: 351, baseType: !135, size: 128, offset: 960)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !895, file: !636, line: 353, baseType: !919, size: 64, offset: 1088)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64)
!920 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !636, line: 353, flags: DIFlagFwdDecl)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !895, file: !636, line: 356, baseType: !922, size: 64, offset: 1152)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!923 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !924)
!924 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !636, line: 356, flags: DIFlagFwdDecl)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !895, file: !636, line: 359, baseType: !108, size: 64, offset: 1216)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !895, file: !636, line: 361, baseType: !266, size: 64, offset: 1280)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !895, file: !636, line: 362, baseType: !109, size: 64, offset: 1344)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !895, file: !636, line: 365, baseType: !684, size: 64, offset: 1408)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !895, file: !636, line: 373, baseType: !930, offset: 1472)
!930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !636, line: 296, elements: !162)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !891, file: !636, line: 391, baseType: !669, size: 64, offset: 64)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !891, file: !636, line: 392, baseType: !331, size: 64, offset: 128)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !891, file: !636, line: 394, baseType: !934, size: 64, offset: 192)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = !DISubroutineType(types: !936)
!936 = !{!108, !266, !108, !108, !108, !108}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !891, file: !636, line: 398, baseType: !108, size: 64, offset: 256)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !891, file: !636, line: 399, baseType: !108, size: 64, offset: 320)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !891, file: !636, line: 405, baseType: !108, size: 64, offset: 384)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !891, file: !636, line: 406, baseType: !108, size: 64, offset: 448)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !891, file: !636, line: 407, baseType: !942, size: 64, offset: 512)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64)
!943 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !626, line: 286, baseType: !944)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !626, line: 286, size: 64, elements: !945)
!945 = !{!946}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !944, file: !626, line: 286, baseType: !947, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !910, line: 18, baseType: !108)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !891, file: !636, line: 416, baseType: !660, size: 32, offset: 576)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !891, file: !636, line: 428, baseType: !660, size: 32, offset: 608)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !891, file: !636, line: 437, baseType: !660, size: 32, offset: 640)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !891, file: !636, line: 447, baseType: !660, size: 32, offset: 672)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !891, file: !636, line: 450, baseType: !684, size: 64, offset: 704)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !891, file: !636, line: 452, baseType: !174, size: 32, offset: 768)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !891, file: !636, line: 454, baseType: !148, offset: 800)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !891, file: !636, line: 457, baseType: !680, size: 256, offset: 832)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !891, file: !636, line: 459, baseType: !135, size: 128, offset: 1088)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !891, file: !636, line: 466, baseType: !108, size: 64, offset: 1216)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !891, file: !636, line: 467, baseType: !108, size: 64, offset: 1280)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !891, file: !636, line: 469, baseType: !108, size: 64, offset: 1344)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !891, file: !636, line: 470, baseType: !108, size: 64, offset: 1408)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !891, file: !636, line: 471, baseType: !686, size: 64, offset: 1472)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !891, file: !636, line: 472, baseType: !108, size: 64, offset: 1536)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !891, file: !636, line: 473, baseType: !108, size: 64, offset: 1600)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !891, file: !636, line: 474, baseType: !108, size: 64, offset: 1664)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !891, file: !636, line: 475, baseType: !108, size: 64, offset: 1728)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !891, file: !636, line: 477, baseType: !148, offset: 1792)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !891, file: !636, line: 478, baseType: !108, size: 64, offset: 1792)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !891, file: !636, line: 478, baseType: !108, size: 64, offset: 1856)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !891, file: !636, line: 478, baseType: !108, size: 64, offset: 1920)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !891, file: !636, line: 478, baseType: !108, size: 64, offset: 1984)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !891, file: !636, line: 479, baseType: !108, size: 64, offset: 2048)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !891, file: !636, line: 479, baseType: !108, size: 64, offset: 2112)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !891, file: !636, line: 479, baseType: !108, size: 64, offset: 2176)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !891, file: !636, line: 480, baseType: !108, size: 64, offset: 2240)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !891, file: !636, line: 480, baseType: !108, size: 64, offset: 2304)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !891, file: !636, line: 480, baseType: !108, size: 64, offset: 2368)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !891, file: !636, line: 480, baseType: !108, size: 64, offset: 2432)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !891, file: !636, line: 482, baseType: !979, size: 2816, offset: 2496)
!979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 2816, elements: !980)
!980 = !{!981}
!981 = !DISubrange(count: 44)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !891, file: !636, line: 488, baseType: !983, size: 256, offset: 5312)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !984, line: 60, size: 256, elements: !985)
!984 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!985 = !{!986}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !983, file: !984, line: 61, baseType: !987, size: 256)
!987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 256, elements: !988)
!988 = !{!989}
!989 = !DISubrange(count: 4)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !891, file: !636, line: 490, baseType: !991, size: 64, offset: 5568)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!992 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !636, line: 490, flags: DIFlagFwdDecl)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !891, file: !636, line: 493, baseType: !994, size: 896, offset: 5632)
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !995, line: 53, baseType: !996)
!995 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !995, line: 13, size: 896, elements: !997)
!997 = !{!998, !999, !1000, !1001, !1004, !1005, !1012, !1013, !1033, !1034, !1035}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !996, file: !995, line: 18, baseType: !331, size: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !996, file: !995, line: 28, baseType: !686, size: 64, offset: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !996, file: !995, line: 31, baseType: !680, size: 256, offset: 128)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !996, file: !995, line: 32, baseType: !1002, size: 64, offset: 384)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!1003 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !995, line: 32, flags: DIFlagFwdDecl)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !996, file: !995, line: 37, baseType: !231, size: 16, offset: 448)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !996, file: !995, line: 40, baseType: !1006, size: 192, offset: 512)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1007, line: 53, size: 192, elements: !1008)
!1007 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1008 = !{!1009, !1010, !1011}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1006, file: !1007, line: 54, baseType: !684, size: 64)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1006, file: !1007, line: 55, baseType: !148, offset: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1006, file: !1007, line: 59, baseType: !135, size: 128, offset: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !996, file: !995, line: 41, baseType: !109, size: 64, offset: 704)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !996, file: !995, line: 42, baseType: !1014, size: 64, offset: 768)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1016)
!1016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1017, line: 13, size: 896, elements: !1018)
!1017 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1018 = !{!1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1016, file: !1017, line: 14, baseType: !109, size: 64)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1016, file: !1017, line: 15, baseType: !108, size: 64, offset: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1016, file: !1017, line: 17, baseType: !108, size: 64, offset: 128)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1016, file: !1017, line: 17, baseType: !108, size: 64, offset: 192)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1016, file: !1017, line: 19, baseType: !224, size: 64, offset: 256)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1016, file: !1017, line: 21, baseType: !224, size: 64, offset: 320)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1016, file: !1017, line: 22, baseType: !224, size: 64, offset: 384)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1016, file: !1017, line: 23, baseType: !224, size: 64, offset: 448)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1016, file: !1017, line: 24, baseType: !224, size: 64, offset: 512)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1016, file: !1017, line: 25, baseType: !224, size: 64, offset: 576)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1016, file: !1017, line: 26, baseType: !224, size: 64, offset: 640)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1016, file: !1017, line: 27, baseType: !224, size: 64, offset: 704)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1016, file: !1017, line: 28, baseType: !224, size: 64, offset: 768)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1016, file: !1017, line: 29, baseType: !224, size: 64, offset: 832)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !996, file: !995, line: 44, baseType: !660, size: 32, offset: 832)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !996, file: !995, line: 50, baseType: !772, size: 16, offset: 864)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !996, file: !995, line: 51, baseType: !1036, size: 16, offset: 880)
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !124, line: 18, baseType: !1037)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !126, line: 23, baseType: !1038)
!1038 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !891, file: !636, line: 495, baseType: !108, size: 64, offset: 6528)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !891, file: !636, line: 497, baseType: !1041, size: 64, offset: 6592)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !636, line: 381, size: 384, elements: !1043)
!1043 = !{!1044, !1045, !2134}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1042, file: !636, line: 382, baseType: !660, size: 32)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1042, file: !636, line: 383, baseType: !1046, size: 128, offset: 64)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !636, line: 376, size: 128, elements: !1047)
!1047 = !{!1048, !2132}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1046, file: !636, line: 377, baseType: !1049, size: 64)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1051, line: 640, size: 48640, elements: !1052)
!1051 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1052 = !{!1053, !1059, !1061, !1062, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1079, !1097, !1108, !1193, !1194, !1195, !1206, !1207, !1209, !1210, !1211, !1212, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1291, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1329, !1331, !1332, !1333, !1345, !1346, !1347, !1348, !1349, !1350, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1374, !1379, !1563, !1564, !1565, !1566, !1570, !1573, !1576, !1579, !1582, !1586, !1687, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1733, !1734, !1735, !1736, !1737, !1742, !1743, !1744, !1747, !1748, !1751, !1754, !1757, !1760, !1803, !1806, !1807, !1886, !1887, !1890, !1891, !1894, !1895, !1896, !1900, !1901, !1902, !1915, !1916, !1917, !1927, !1932, !1935, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1050, file: !1051, line: 646, baseType: !1054, size: 128)
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1055, line: 56, size: 128, elements: !1056)
!1055 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1056 = !{!1057, !1058}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1054, file: !1055, line: 57, baseType: !108, size: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1054, file: !1055, line: 58, baseType: !123, size: 32, offset: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1050, file: !1051, line: 649, baseType: !1060, size: 64, offset: 128)
!1060 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !224)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1050, file: !1051, line: 657, baseType: !109, size: 64, offset: 192)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1050, file: !1051, line: 658, baseType: !1063, size: 32, offset: 256)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1064, line: 113, baseType: !1065)
!1064 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1064, line: 111, size: 32, elements: !1066)
!1066 = !{!1067}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1065, file: !1064, line: 112, baseType: !660, size: 32)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1050, file: !1051, line: 660, baseType: !7, size: 32, offset: 288)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1050, file: !1051, line: 661, baseType: !7, size: 32, offset: 320)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1050, file: !1051, line: 684, baseType: !174, size: 32, offset: 352)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1050, file: !1051, line: 686, baseType: !174, size: 32, offset: 384)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1050, file: !1051, line: 687, baseType: !174, size: 32, offset: 416)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1050, file: !1051, line: 688, baseType: !174, size: 32, offset: 448)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1050, file: !1051, line: 689, baseType: !7, size: 32, offset: 480)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1050, file: !1051, line: 691, baseType: !1076, size: 64, offset: 512)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64)
!1077 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1078)
!1078 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1051, line: 691, flags: DIFlagFwdDecl)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1050, file: !1051, line: 692, baseType: !1080, size: 832, offset: 576)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1051, line: 451, size: 832, elements: !1081)
!1081 = !{!1082, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1080, file: !1051, line: 453, baseType: !1083, size: 128)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1051, line: 325, size: 128, elements: !1084)
!1084 = !{!1085, !1086}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1083, file: !1051, line: 326, baseType: !108, size: 64)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1083, file: !1051, line: 327, baseType: !123, size: 32, offset: 64)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1080, file: !1051, line: 454, baseType: !673, size: 192, align: 64, offset: 128)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1080, file: !1051, line: 455, baseType: !135, size: 128, offset: 320)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1080, file: !1051, line: 456, baseType: !7, size: 32, offset: 448)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1080, file: !1051, line: 458, baseType: !331, size: 64, offset: 512)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1080, file: !1051, line: 459, baseType: !331, size: 64, offset: 576)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1080, file: !1051, line: 460, baseType: !331, size: 64, offset: 640)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1080, file: !1051, line: 461, baseType: !331, size: 64, offset: 704)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1080, file: !1051, line: 463, baseType: !331, size: 64, offset: 768)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1080, file: !1051, line: 465, baseType: !1096, offset: 832)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1051, line: 415, elements: !162)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1050, file: !1051, line: 693, baseType: !1098, size: 384, offset: 1408)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1051, line: 489, size: 384, elements: !1099)
!1099 = !{!1100, !1101, !1102, !1103, !1104, !1105, !1106}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1098, file: !1051, line: 490, baseType: !135, size: 128)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1098, file: !1051, line: 491, baseType: !108, size: 64, offset: 128)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1098, file: !1051, line: 492, baseType: !108, size: 64, offset: 192)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1098, file: !1051, line: 493, baseType: !7, size: 32, offset: 256)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1098, file: !1051, line: 494, baseType: !231, size: 16, offset: 288)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1098, file: !1051, line: 495, baseType: !231, size: 16, offset: 304)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1098, file: !1051, line: 497, baseType: !1107, size: 64, offset: 320)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1050, file: !1051, line: 697, baseType: !1109, size: 1792, offset: 1792)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1051, line: 507, size: 1792, elements: !1110)
!1110 = !{!1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1190, !1191}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1109, file: !1051, line: 508, baseType: !673, size: 192, align: 64)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1109, file: !1051, line: 515, baseType: !331, size: 64, offset: 192)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1109, file: !1051, line: 516, baseType: !331, size: 64, offset: 256)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1109, file: !1051, line: 517, baseType: !331, size: 64, offset: 320)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1109, file: !1051, line: 518, baseType: !331, size: 64, offset: 384)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1109, file: !1051, line: 519, baseType: !331, size: 64, offset: 448)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1109, file: !1051, line: 526, baseType: !690, size: 64, offset: 512)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1109, file: !1051, line: 527, baseType: !331, size: 64, offset: 576)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1109, file: !1051, line: 528, baseType: !7, size: 32, offset: 640)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1109, file: !1051, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1109, file: !1051, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1109, file: !1051, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1109, file: !1051, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1109, file: !1051, line: 563, baseType: !1125, size: 512, offset: 704)
!1125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !14, line: 118, size: 512, elements: !1126)
!1126 = !{!1127, !1135, !1136, !1141, !1184, !1187, !1188, !1189}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1125, file: !14, line: 119, baseType: !1128, size: 256)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1129, line: 9, size: 256, elements: !1130)
!1129 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1130 = !{!1131, !1132}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1128, file: !1129, line: 10, baseType: !673, size: 192, align: 64)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1128, file: !1129, line: 11, baseType: !1133, size: 64, offset: 192)
!1133 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1134, line: 29, baseType: !690)
!1134 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1125, file: !14, line: 120, baseType: !1133, size: 64, offset: 256)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1125, file: !14, line: 121, baseType: !1137, size: 64, offset: 320)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = !DISubroutineType(types: !1139)
!1139 = !{!13, !1140}
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1125, file: !14, line: 122, baseType: !1142, size: 64, offset: 384)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !14, line: 159, size: 512, align: 512, elements: !1144)
!1144 = !{!1145, !1165, !1166, !1169, !1174, !1175, !1179, !1183}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1143, file: !14, line: 160, baseType: !1146, size: 64)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64)
!1147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !14, line: 214, size: 4608, align: 512, elements: !1148)
!1148 = !{!1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1147, file: !14, line: 215, baseType: !693)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1147, file: !14, line: 216, baseType: !7, size: 32)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1147, file: !14, line: 217, baseType: !7, size: 32, offset: 32)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1147, file: !14, line: 218, baseType: !7, size: 32, offset: 64)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1147, file: !14, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1147, file: !14, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1147, file: !14, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1147, file: !14, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1147, file: !14, line: 233, baseType: !1133, size: 64, offset: 128)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1147, file: !14, line: 234, baseType: !1140, size: 64, offset: 192)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1147, file: !14, line: 235, baseType: !1133, size: 64, offset: 256)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1147, file: !14, line: 236, baseType: !1140, size: 64, offset: 320)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1147, file: !14, line: 237, baseType: !1162, size: 4096, offset: 512)
!1162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1143, size: 4096, elements: !1163)
!1163 = !{!1164}
!1164 = !DISubrange(count: 8)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1143, file: !14, line: 161, baseType: !7, size: 32, offset: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1143, file: !14, line: 162, baseType: !1167, size: 32, offset: 96)
!1167 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !107, line: 27, baseType: !1168)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !222, line: 96, baseType: !174)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1143, file: !14, line: 163, baseType: !1170, size: 32, offset: 128)
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !302, line: 276, baseType: !1171)
!1171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !302, line: 276, size: 32, elements: !1172)
!1172 = !{!1173}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1171, file: !302, line: 276, baseType: !306, size: 32)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1143, file: !14, line: 164, baseType: !1140, size: 64, offset: 192)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1143, file: !14, line: 165, baseType: !1176, size: 128, offset: 256)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1129, line: 14, size: 128, elements: !1177)
!1177 = !{!1178}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1176, file: !1129, line: 15, baseType: !665, size: 128)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1143, file: !14, line: 166, baseType: !1180, size: 64, offset: 384)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{!1133}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1143, file: !14, line: 167, baseType: !1133, size: 64, offset: 448)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1125, file: !14, line: 123, baseType: !1185, size: 8, offset: 448)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !124, line: 17, baseType: !1186)
!1186 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !126, line: 21, baseType: !337)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1125, file: !14, line: 124, baseType: !1185, size: 8, offset: 456)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1125, file: !14, line: 125, baseType: !1185, size: 8, offset: 464)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1125, file: !14, line: 126, baseType: !1185, size: 8, offset: 472)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1109, file: !1051, line: 572, baseType: !1125, size: 512, offset: 1216)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1109, file: !1051, line: 580, baseType: !1192, size: 64, offset: 1728)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1050, file: !1051, line: 721, baseType: !7, size: 32, offset: 3584)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1050, file: !1051, line: 722, baseType: !174, size: 32, offset: 3616)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1050, file: !1051, line: 723, baseType: !1196, size: 64, offset: 3648)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64)
!1197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1198)
!1198 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1199, line: 17, baseType: !1200)
!1199 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1199, line: 17, size: 64, elements: !1201)
!1201 = !{!1202}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1200, file: !1199, line: 17, baseType: !1203, size: 64)
!1203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 64, elements: !1204)
!1204 = !{!1205}
!1205 = !DISubrange(count: 1)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1050, file: !1051, line: 724, baseType: !1198, size: 64, offset: 3712)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1050, file: !1051, line: 749, baseType: !1208, offset: 3776)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1051, line: 290, elements: !162)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1050, file: !1051, line: 751, baseType: !135, size: 128, offset: 3776)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1050, file: !1051, line: 757, baseType: !887, size: 64, offset: 3904)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1050, file: !1051, line: 758, baseType: !887, size: 64, offset: 3968)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1050, file: !1051, line: 761, baseType: !1213, size: 320, offset: 4032)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !984, line: 34, size: 320, elements: !1214)
!1214 = !{!1215, !1216}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1213, file: !984, line: 35, baseType: !331, size: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1213, file: !984, line: 36, baseType: !1217, size: 256, offset: 64)
!1217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !894, size: 256, elements: !988)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1050, file: !1051, line: 766, baseType: !174, size: 32, offset: 4352)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1050, file: !1051, line: 767, baseType: !174, size: 32, offset: 4384)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1050, file: !1051, line: 768, baseType: !174, size: 32, offset: 4416)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1050, file: !1051, line: 770, baseType: !174, size: 32, offset: 4448)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1050, file: !1051, line: 772, baseType: !108, size: 64, offset: 4480)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1050, file: !1051, line: 775, baseType: !7, size: 32, offset: 4544)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1050, file: !1051, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1050, file: !1051, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1050, file: !1051, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1050, file: !1051, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1050, file: !1051, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1050, file: !1051, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1050, file: !1051, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1050, file: !1051, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1050, file: !1051, line: 831, baseType: !108, size: 64, offset: 4672)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1050, file: !1051, line: 833, baseType: !1234, size: 384, offset: 4736)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !19, line: 25, size: 384, elements: !1235)
!1235 = !{!1236, !1241}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1234, file: !19, line: 26, baseType: !1237, size: 64)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{!224, !1240}
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, scope: !1234, file: !19, line: 27, baseType: !1242, size: 320, offset: 64)
!1242 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1234, file: !19, line: 27, size: 320, elements: !1243)
!1243 = !{!1244, !1254, !1281}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1242, file: !19, line: 36, baseType: !1245, size: 320)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1242, file: !19, line: 29, size: 320, elements: !1246)
!1246 = !{!1247, !1249, !1250, !1251, !1252, !1253}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1245, file: !19, line: 30, baseType: !1248, size: 64)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1245, file: !19, line: 31, baseType: !123, size: 32, offset: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1245, file: !19, line: 32, baseType: !123, size: 32, offset: 96)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1245, file: !19, line: 33, baseType: !123, size: 32, offset: 128)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1245, file: !19, line: 34, baseType: !331, size: 64, offset: 192)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1245, file: !19, line: 35, baseType: !1248, size: 64, offset: 256)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1242, file: !19, line: 46, baseType: !1255, size: 192)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1242, file: !19, line: 38, size: 192, elements: !1256)
!1256 = !{!1257, !1258, !1259, !1280}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1255, file: !19, line: 39, baseType: !1167, size: 32)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1255, file: !19, line: 40, baseType: !18, size: 32, offset: 32)
!1259 = !DIDerivedType(tag: DW_TAG_member, scope: !1255, file: !19, line: 41, baseType: !1260, size: 64, offset: 64)
!1260 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1255, file: !19, line: 41, size: 64, elements: !1261)
!1261 = !{!1262, !1270}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1260, file: !19, line: 42, baseType: !1263, size: 64)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1265, line: 7, size: 128, elements: !1266)
!1265 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1266 = !{!1267, !1269}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1264, file: !1265, line: 8, baseType: !1268, size: 64)
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !222, line: 93, baseType: !443)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1264, file: !1265, line: 9, baseType: !443, size: 64, offset: 64)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1260, file: !19, line: 43, baseType: !1271, size: 64)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 64)
!1272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1273, line: 7, size: 64, elements: !1274)
!1273 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1274 = !{!1275, !1279}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1272, file: !1273, line: 8, baseType: !1276, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1273, line: 5, baseType: !1277)
!1277 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !124, line: 20, baseType: !1278)
!1278 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !126, line: 26, baseType: !174)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1272, file: !1273, line: 9, baseType: !1277, size: 32, offset: 32)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1255, file: !19, line: 45, baseType: !331, size: 64, offset: 128)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1242, file: !19, line: 54, baseType: !1282, size: 256)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1242, file: !19, line: 48, size: 256, elements: !1283)
!1283 = !{!1284, !1287, !1288, !1289, !1290}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1282, file: !19, line: 49, baseType: !1285, size: 64)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64)
!1286 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !19, line: 14, flags: DIFlagFwdDecl)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1282, file: !19, line: 50, baseType: !174, size: 32, offset: 64)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1282, file: !19, line: 51, baseType: !174, size: 32, offset: 96)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1282, file: !19, line: 52, baseType: !108, size: 64, offset: 128)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1282, file: !19, line: 53, baseType: !108, size: 64, offset: 192)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1050, file: !1051, line: 835, baseType: !1292, size: 32, offset: 5120)
!1292 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !107, line: 22, baseType: !1293)
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !222, line: 28, baseType: !174)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1050, file: !1051, line: 836, baseType: !1292, size: 32, offset: 5152)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1050, file: !1051, line: 840, baseType: !108, size: 64, offset: 5184)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1050, file: !1051, line: 849, baseType: !1049, size: 64, offset: 5248)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1050, file: !1051, line: 852, baseType: !1049, size: 64, offset: 5312)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1050, file: !1051, line: 857, baseType: !135, size: 128, offset: 5376)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1050, file: !1051, line: 858, baseType: !135, size: 128, offset: 5504)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1050, file: !1051, line: 859, baseType: !1049, size: 64, offset: 5632)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1050, file: !1051, line: 867, baseType: !135, size: 128, offset: 5696)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1050, file: !1051, line: 868, baseType: !135, size: 128, offset: 5824)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1050, file: !1051, line: 871, baseType: !1304, size: 64, offset: 5952)
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 64)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !40, line: 59, size: 768, elements: !1306)
!1306 = !{!1307, !1308, !1309, !1310, !1312, !1313, !1320, !1321}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1305, file: !40, line: 61, baseType: !1063, size: 32)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1305, file: !40, line: 62, baseType: !7, size: 32, offset: 32)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1305, file: !40, line: 63, baseType: !148, offset: 64)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1305, file: !40, line: 65, baseType: !1311, size: 256, offset: 64)
!1311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !548, size: 256, elements: !988)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1305, file: !40, line: 66, baseType: !548, size: 64, offset: 320)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1305, file: !40, line: 68, baseType: !1314, size: 128, offset: 384)
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1315, line: 40, baseType: !1316)
!1315 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1315, line: 36, size: 128, elements: !1317)
!1317 = !{!1318, !1319}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1316, file: !1315, line: 37, baseType: !148)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1316, file: !1315, line: 38, baseType: !135, size: 128)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1305, file: !40, line: 69, baseType: !279, size: 128, align: 64, offset: 512)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1305, file: !40, line: 70, baseType: !1322, size: 128, offset: 640)
!1322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1323, size: 128, elements: !1204)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !40, line: 54, size: 128, elements: !1324)
!1324 = !{!1325, !1326}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1323, file: !40, line: 55, baseType: !174, size: 32)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1323, file: !40, line: 56, baseType: !1327, size: 64, offset: 64)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !40, line: 56, flags: DIFlagFwdDecl)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1050, file: !1051, line: 872, baseType: !1330, size: 512, offset: 6016)
!1330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !552, size: 512, elements: !988)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1050, file: !1051, line: 873, baseType: !135, size: 128, offset: 6528)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1050, file: !1051, line: 874, baseType: !135, size: 128, offset: 6656)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1050, file: !1051, line: 876, baseType: !1334, size: 64, offset: 6784)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1336, line: 26, size: 192, elements: !1337)
!1336 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1337 = !{!1338, !1339}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1335, file: !1336, line: 27, baseType: !7, size: 32)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1335, file: !1336, line: 28, baseType: !1340, size: 128, offset: 64)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1341, line: 43, size: 128, elements: !1342)
!1341 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1342 = !{!1343, !1344}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1340, file: !1341, line: 44, baseType: !693)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1340, file: !1341, line: 45, baseType: !135, size: 128)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1050, file: !1051, line: 879, baseType: !618, size: 64, offset: 6848)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1050, file: !1051, line: 882, baseType: !618, size: 64, offset: 6912)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1050, file: !1051, line: 884, baseType: !331, size: 64, offset: 6976)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1050, file: !1051, line: 885, baseType: !331, size: 64, offset: 7040)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1050, file: !1051, line: 890, baseType: !331, size: 64, offset: 7104)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1050, file: !1051, line: 891, baseType: !1351, size: 128, offset: 7168)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1051, line: 242, size: 128, elements: !1352)
!1352 = !{!1353, !1354, !1355}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1351, file: !1051, line: 244, baseType: !331, size: 64)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1351, file: !1051, line: 245, baseType: !331, size: 64, offset: 64)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1351, file: !1051, line: 246, baseType: !693, offset: 128)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1050, file: !1051, line: 900, baseType: !108, size: 64, offset: 7296)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1050, file: !1051, line: 901, baseType: !108, size: 64, offset: 7360)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1050, file: !1051, line: 904, baseType: !331, size: 64, offset: 7424)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1050, file: !1051, line: 907, baseType: !331, size: 64, offset: 7488)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1050, file: !1051, line: 910, baseType: !108, size: 64, offset: 7552)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1050, file: !1051, line: 911, baseType: !108, size: 64, offset: 7616)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1050, file: !1051, line: 914, baseType: !1363, size: 640, offset: 7680)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1364, line: 123, size: 640, elements: !1365)
!1364 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1365 = !{!1366, !1372, !1373}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1363, file: !1364, line: 124, baseType: !1367, size: 576)
!1367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1368, size: 576, elements: !190)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1364, line: 108, size: 192, elements: !1369)
!1369 = !{!1370, !1371}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1368, file: !1364, line: 109, baseType: !331, size: 64)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1368, file: !1364, line: 110, baseType: !1176, size: 128, offset: 64)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1363, file: !1364, line: 125, baseType: !7, size: 32, offset: 576)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1363, file: !1364, line: 126, baseType: !7, size: 32, offset: 608)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1050, file: !1051, line: 917, baseType: !1375, size: 192, offset: 8320)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1364, line: 134, size: 192, elements: !1376)
!1376 = !{!1377, !1378}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1375, file: !1364, line: 135, baseType: !279, size: 128, align: 64)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1375, file: !1364, line: 136, baseType: !7, size: 32, offset: 128)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1050, file: !1051, line: 923, baseType: !1380, size: 64, offset: 8512)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 64)
!1381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1382)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1383, line: 111, size: 1280, elements: !1384)
!1383 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1384 = !{!1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1404, !1405, !1406, !1407, !1408, !1409, !1516, !1517, !1518, !1519, !1545, !1548, !1558}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1382, file: !1383, line: 112, baseType: !660, size: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1382, file: !1383, line: 120, baseType: !345, size: 32, offset: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1382, file: !1383, line: 121, baseType: !353, size: 32, offset: 64)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1382, file: !1383, line: 122, baseType: !345, size: 32, offset: 96)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1382, file: !1383, line: 123, baseType: !353, size: 32, offset: 128)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1382, file: !1383, line: 124, baseType: !345, size: 32, offset: 160)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1382, file: !1383, line: 125, baseType: !353, size: 32, offset: 192)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1382, file: !1383, line: 126, baseType: !345, size: 32, offset: 224)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1382, file: !1383, line: 127, baseType: !353, size: 32, offset: 256)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1382, file: !1383, line: 128, baseType: !7, size: 32, offset: 288)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1382, file: !1383, line: 129, baseType: !1396, size: 64, offset: 320)
!1396 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1397, line: 26, baseType: !1398)
!1397 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1397, line: 24, size: 64, elements: !1399)
!1399 = !{!1400}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1398, file: !1397, line: 25, baseType: !1401, size: 64)
!1401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 64, elements: !1402)
!1402 = !{!1403}
!1403 = !DISubrange(count: 2)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1382, file: !1383, line: 130, baseType: !1396, size: 64, offset: 384)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1382, file: !1383, line: 131, baseType: !1396, size: 64, offset: 448)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1382, file: !1383, line: 132, baseType: !1396, size: 64, offset: 512)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1382, file: !1383, line: 133, baseType: !1396, size: 64, offset: 576)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1382, file: !1383, line: 135, baseType: !337, size: 8, offset: 640)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1382, file: !1383, line: 137, baseType: !1410, size: 64, offset: 704)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1412, line: 189, size: 1664, elements: !1413)
!1412 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1413 = !{!1414, !1415, !1418, !1423, !1424, !1427, !1428, !1433, !1434, !1435, !1436, !1438, !1439, !1440, !1441, !1442, !1480, !1501}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1411, file: !1412, line: 190, baseType: !1063, size: 32)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1411, file: !1412, line: 191, baseType: !1416, size: 32, offset: 32)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1412, line: 28, baseType: !1417)
!1417 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !107, line: 98, baseType: !1277)
!1418 = !DIDerivedType(tag: DW_TAG_member, scope: !1411, file: !1412, line: 192, baseType: !1419, size: 192, offset: 64)
!1419 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1411, file: !1412, line: 192, size: 192, elements: !1420)
!1420 = !{!1421, !1422}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1419, file: !1412, line: 193, baseType: !135, size: 128)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1419, file: !1412, line: 194, baseType: !673, size: 192, align: 64)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1411, file: !1412, line: 199, baseType: !680, size: 256, offset: 256)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1411, file: !1412, line: 200, baseType: !1425, size: 64, offset: 512)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 64)
!1426 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1412, line: 200, flags: DIFlagFwdDecl)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1411, file: !1412, line: 201, baseType: !109, size: 64, offset: 576)
!1428 = !DIDerivedType(tag: DW_TAG_member, scope: !1411, file: !1412, line: 202, baseType: !1429, size: 64, offset: 640)
!1429 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1411, file: !1412, line: 202, size: 64, elements: !1430)
!1430 = !{!1431, !1432}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1429, file: !1412, line: 203, baseType: !449, size: 64)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1429, file: !1412, line: 204, baseType: !449, size: 64)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1411, file: !1412, line: 206, baseType: !449, size: 64, offset: 704)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1411, file: !1412, line: 207, baseType: !345, size: 32, offset: 768)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1411, file: !1412, line: 208, baseType: !353, size: 32, offset: 800)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1411, file: !1412, line: 209, baseType: !1437, size: 32, offset: 832)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1412, line: 31, baseType: !469)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1411, file: !1412, line: 210, baseType: !231, size: 16, offset: 864)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1411, file: !1412, line: 211, baseType: !231, size: 16, offset: 880)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1411, file: !1412, line: 215, baseType: !1038, size: 16, offset: 896)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1411, file: !1412, line: 222, baseType: !108, size: 64, offset: 960)
!1442 = !DIDerivedType(tag: DW_TAG_member, scope: !1411, file: !1412, line: 239, baseType: !1443, size: 320, offset: 1024)
!1443 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1411, file: !1412, line: 239, size: 320, elements: !1444)
!1444 = !{!1445, !1472}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1443, file: !1412, line: 240, baseType: !1446, size: 320)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1412, line: 108, size: 320, elements: !1447)
!1447 = !{!1448, !1449, !1461, !1464, !1471}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1446, file: !1412, line: 110, baseType: !108, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, scope: !1446, file: !1412, line: 111, baseType: !1450, size: 64, offset: 64)
!1450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1446, file: !1412, line: 111, size: 64, elements: !1451)
!1451 = !{!1452, !1460}
!1452 = !DIDerivedType(tag: DW_TAG_member, scope: !1450, file: !1412, line: 112, baseType: !1453, size: 64)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1450, file: !1412, line: 112, size: 64, elements: !1454)
!1454 = !{!1455, !1456}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1453, file: !1412, line: 114, baseType: !772, size: 16)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1453, file: !1412, line: 115, baseType: !1457, size: 48, offset: 16)
!1457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 48, elements: !1458)
!1458 = !{!1459}
!1459 = !DISubrange(count: 6)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1450, file: !1412, line: 121, baseType: !108, size: 64)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1446, file: !1412, line: 123, baseType: !1462, size: 64, offset: 128)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64)
!1463 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1412, line: 96, flags: DIFlagFwdDecl)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1446, file: !1412, line: 124, baseType: !1465, size: 64, offset: 192)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1412, line: 102, size: 192, elements: !1467)
!1467 = !{!1468, !1469, !1470}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1466, file: !1412, line: 103, baseType: !279, size: 128, align: 64)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1466, file: !1412, line: 104, baseType: !1063, size: 32, offset: 128)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1466, file: !1412, line: 105, baseType: !400, size: 8, offset: 160)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1446, file: !1412, line: 125, baseType: !115, size: 64, offset: 256)
!1472 = !DIDerivedType(tag: DW_TAG_member, scope: !1443, file: !1412, line: 241, baseType: !1473, size: 320)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1443, file: !1412, line: 241, size: 320, elements: !1474)
!1474 = !{!1475, !1476, !1477, !1478, !1479}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1473, file: !1412, line: 242, baseType: !108, size: 64)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1473, file: !1412, line: 243, baseType: !108, size: 64, offset: 64)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1473, file: !1412, line: 244, baseType: !1462, size: 64, offset: 128)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1473, file: !1412, line: 245, baseType: !1465, size: 64, offset: 192)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1473, file: !1412, line: 246, baseType: !104, size: 64, offset: 256)
!1480 = !DIDerivedType(tag: DW_TAG_member, scope: !1411, file: !1412, line: 254, baseType: !1481, size: 256, offset: 1344)
!1481 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1411, file: !1412, line: 254, size: 256, elements: !1482)
!1482 = !{!1483, !1489}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1481, file: !1412, line: 255, baseType: !1484, size: 256)
!1484 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1412, line: 128, size: 256, elements: !1485)
!1485 = !{!1486, !1487}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1484, file: !1412, line: 129, baseType: !109, size: 64)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1484, file: !1412, line: 130, baseType: !1488, size: 256)
!1488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !109, size: 256, elements: !988)
!1489 = !DIDerivedType(tag: DW_TAG_member, scope: !1481, file: !1412, line: 256, baseType: !1490, size: 256)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1481, file: !1412, line: 256, size: 256, elements: !1491)
!1491 = !{!1492, !1493}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1490, file: !1412, line: 258, baseType: !135, size: 128)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1490, file: !1412, line: 259, baseType: !1494, size: 128, offset: 128)
!1494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1495, line: 22, size: 128, elements: !1496)
!1495 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1496 = !{!1497, !1500}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1494, file: !1495, line: 23, baseType: !1498, size: 64)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 64)
!1499 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1495, line: 23, flags: DIFlagFwdDecl)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1494, file: !1495, line: 24, baseType: !108, size: 64, offset: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1411, file: !1412, line: 274, baseType: !1502, size: 64, offset: 1600)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 64)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1412, line: 170, size: 192, elements: !1504)
!1504 = !{!1505, !1514, !1515}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1503, file: !1412, line: 171, baseType: !1506, size: 64)
!1506 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1412, line: 165, baseType: !1507)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 64)
!1508 = !DISubroutineType(types: !1509)
!1509 = !{!174, !1410, !1510, !1512, !1410}
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64)
!1511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1463)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 64)
!1513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1484)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1503, file: !1412, line: 172, baseType: !1410, size: 64, offset: 64)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1503, file: !1412, line: 173, baseType: !1462, size: 64, offset: 128)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1382, file: !1383, line: 138, baseType: !1410, size: 64, offset: 768)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1382, file: !1383, line: 139, baseType: !1410, size: 64, offset: 832)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1382, file: !1383, line: 140, baseType: !1410, size: 64, offset: 896)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1382, file: !1383, line: 145, baseType: !1520, size: 64, offset: 960)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1522, line: 13, size: 896, elements: !1523)
!1522 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1523 = !{!1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1521, file: !1522, line: 14, baseType: !1063, size: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1521, file: !1522, line: 15, baseType: !660, size: 32, offset: 32)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1521, file: !1522, line: 16, baseType: !660, size: 32, offset: 64)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1521, file: !1522, line: 21, baseType: !684, size: 64, offset: 128)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1521, file: !1522, line: 27, baseType: !108, size: 64, offset: 192)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1521, file: !1522, line: 28, baseType: !108, size: 64, offset: 256)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1521, file: !1522, line: 29, baseType: !684, size: 64, offset: 320)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1521, file: !1522, line: 32, baseType: !552, size: 128, offset: 384)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1521, file: !1522, line: 33, baseType: !345, size: 32, offset: 512)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1521, file: !1522, line: 37, baseType: !684, size: 64, offset: 576)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1521, file: !1522, line: 44, baseType: !1535, size: 256, offset: 640)
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1536, line: 15, size: 256, elements: !1537)
!1536 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1537 = !{!1538, !1539, !1540, !1541, !1542, !1543, !1544}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1535, file: !1536, line: 16, baseType: !693)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1535, file: !1536, line: 18, baseType: !174, size: 32)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1535, file: !1536, line: 19, baseType: !174, size: 32, offset: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1535, file: !1536, line: 20, baseType: !174, size: 32, offset: 64)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1535, file: !1536, line: 21, baseType: !174, size: 32, offset: 96)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1535, file: !1536, line: 22, baseType: !108, size: 64, offset: 128)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1535, file: !1536, line: 23, baseType: !108, size: 64, offset: 192)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1382, file: !1383, line: 146, baseType: !1546, size: 64, offset: 1024)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64)
!1547 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !346, line: 18, flags: DIFlagFwdDecl)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1382, file: !1383, line: 147, baseType: !1549, size: 64, offset: 1088)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 64)
!1550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1383, line: 25, size: 64, elements: !1551)
!1551 = !{!1552, !1553, !1554}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1550, file: !1383, line: 26, baseType: !660, size: 32)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1550, file: !1383, line: 27, baseType: !174, size: 32, offset: 32)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1550, file: !1383, line: 28, baseType: !1555, offset: 64)
!1555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !353, elements: !1556)
!1556 = !{!1557}
!1557 = !DISubrange(count: 0)
!1558 = !DIDerivedType(tag: DW_TAG_member, scope: !1382, file: !1383, line: 149, baseType: !1559, size: 128, offset: 1152)
!1559 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1382, file: !1383, line: 149, size: 128, elements: !1560)
!1560 = !{!1561, !1562}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1559, file: !1383, line: 150, baseType: !174, size: 32)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1559, file: !1383, line: 151, baseType: !279, size: 128, align: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1050, file: !1051, line: 926, baseType: !1380, size: 64, offset: 8576)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1050, file: !1051, line: 929, baseType: !1380, size: 64, offset: 8640)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1050, file: !1051, line: 933, baseType: !1410, size: 64, offset: 8704)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1050, file: !1051, line: 943, baseType: !1567, size: 128, offset: 8768)
!1567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 128, elements: !1568)
!1568 = !{!1569}
!1569 = !DISubrange(count: 16)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1050, file: !1051, line: 945, baseType: !1571, size: 64, offset: 8896)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1051, line: 49, flags: DIFlagFwdDecl)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1050, file: !1051, line: 956, baseType: !1574, size: 64, offset: 8960)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64)
!1575 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1051, line: 45, flags: DIFlagFwdDecl)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1050, file: !1051, line: 959, baseType: !1577, size: 64, offset: 9024)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64)
!1578 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1051, line: 959, flags: DIFlagFwdDecl)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1050, file: !1051, line: 962, baseType: !1580, size: 64, offset: 9088)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64)
!1581 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1051, line: 66, flags: DIFlagFwdDecl)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1050, file: !1051, line: 966, baseType: !1583, size: 64, offset: 9152)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 64)
!1584 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1585, line: 35, flags: DIFlagFwdDecl)
!1585 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1050, file: !1051, line: 969, baseType: !1587, size: 64, offset: 9216)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1589, line: 82, size: 7296, elements: !1590)
!1589 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1590 = !{!1591, !1592, !1593, !1594, !1595, !1596, !1597, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1626, !1635, !1636, !1638, !1639, !1640, !1643, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1673, !1674, !1681, !1682, !1683, !1684, !1685, !1686}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1588, file: !1589, line: 83, baseType: !1063, size: 32)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1588, file: !1589, line: 84, baseType: !660, size: 32, offset: 32)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1588, file: !1589, line: 85, baseType: !174, size: 32, offset: 64)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1588, file: !1589, line: 86, baseType: !135, size: 128, offset: 128)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1588, file: !1589, line: 88, baseType: !1314, size: 128, offset: 256)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1588, file: !1589, line: 91, baseType: !1049, size: 64, offset: 384)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1588, file: !1589, line: 94, baseType: !1598, size: 192, offset: 448)
!1598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1599, line: 30, size: 192, elements: !1600)
!1599 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1600 = !{!1601, !1602}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1598, file: !1599, line: 31, baseType: !135, size: 128)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1598, file: !1599, line: 32, baseType: !1603, size: 64, offset: 128)
!1603 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1604, line: 25, baseType: !1605)
!1604 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1605 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1604, line: 23, size: 64, elements: !1606)
!1606 = !{!1607}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1605, file: !1604, line: 24, baseType: !1203, size: 64)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1588, file: !1589, line: 97, baseType: !548, size: 64, offset: 640)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1588, file: !1589, line: 100, baseType: !174, size: 32, offset: 704)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1588, file: !1589, line: 106, baseType: !174, size: 32, offset: 736)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1588, file: !1589, line: 107, baseType: !1049, size: 64, offset: 768)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1588, file: !1589, line: 110, baseType: !174, size: 32, offset: 832)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1588, file: !1589, line: 111, baseType: !7, size: 32, offset: 864)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1588, file: !1589, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1588, file: !1589, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1588, file: !1589, line: 128, baseType: !174, size: 32, offset: 928)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1588, file: !1589, line: 129, baseType: !135, size: 128, offset: 960)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1588, file: !1589, line: 132, baseType: !1125, size: 512, offset: 1088)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1588, file: !1589, line: 133, baseType: !1133, size: 64, offset: 1600)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1588, file: !1589, line: 140, baseType: !1621, size: 256, offset: 1664)
!1621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1622, size: 256, elements: !1402)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1589, line: 38, size: 128, elements: !1623)
!1623 = !{!1624, !1625}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1622, file: !1589, line: 39, baseType: !331, size: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1622, file: !1589, line: 40, baseType: !331, size: 64, offset: 64)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1588, file: !1589, line: 146, baseType: !1627, size: 192, offset: 1920)
!1627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1589, line: 66, size: 192, elements: !1628)
!1628 = !{!1629}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1627, file: !1589, line: 67, baseType: !1630, size: 192)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1589, line: 47, size: 192, elements: !1631)
!1631 = !{!1632, !1633, !1634}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1630, file: !1589, line: 48, baseType: !686, size: 64)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1630, file: !1589, line: 49, baseType: !686, size: 64, offset: 64)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1630, file: !1589, line: 50, baseType: !686, size: 64, offset: 128)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1588, file: !1589, line: 150, baseType: !1363, size: 640, offset: 2112)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1588, file: !1589, line: 153, baseType: !1637, size: 256, offset: 2752)
!1637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1304, size: 256, elements: !988)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1588, file: !1589, line: 159, baseType: !1304, size: 64, offset: 3008)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1588, file: !1589, line: 162, baseType: !174, size: 32, offset: 3072)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1588, file: !1589, line: 164, baseType: !1641, size: 64, offset: 3136)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 64)
!1642 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1589, line: 164, flags: DIFlagFwdDecl)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1588, file: !1589, line: 175, baseType: !1644, size: 32, offset: 3200)
!1644 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !302, line: 805, baseType: !1645)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !302, line: 798, size: 32, elements: !1646)
!1646 = !{!1647, !1648}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1645, file: !302, line: 803, baseType: !301, size: 32)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1645, file: !302, line: 804, baseType: !148, offset: 32)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1588, file: !1589, line: 176, baseType: !331, size: 64, offset: 3264)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1588, file: !1589, line: 176, baseType: !331, size: 64, offset: 3328)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1588, file: !1589, line: 176, baseType: !331, size: 64, offset: 3392)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1588, file: !1589, line: 176, baseType: !331, size: 64, offset: 3456)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1588, file: !1589, line: 177, baseType: !331, size: 64, offset: 3520)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1588, file: !1589, line: 178, baseType: !331, size: 64, offset: 3584)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1588, file: !1589, line: 179, baseType: !1351, size: 128, offset: 3648)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1588, file: !1589, line: 180, baseType: !108, size: 64, offset: 3776)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1588, file: !1589, line: 180, baseType: !108, size: 64, offset: 3840)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1588, file: !1589, line: 180, baseType: !108, size: 64, offset: 3904)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1588, file: !1589, line: 180, baseType: !108, size: 64, offset: 3968)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1588, file: !1589, line: 181, baseType: !108, size: 64, offset: 4032)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1588, file: !1589, line: 181, baseType: !108, size: 64, offset: 4096)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1588, file: !1589, line: 181, baseType: !108, size: 64, offset: 4160)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1588, file: !1589, line: 181, baseType: !108, size: 64, offset: 4224)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1588, file: !1589, line: 182, baseType: !108, size: 64, offset: 4288)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1588, file: !1589, line: 182, baseType: !108, size: 64, offset: 4352)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1588, file: !1589, line: 182, baseType: !108, size: 64, offset: 4416)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1588, file: !1589, line: 182, baseType: !108, size: 64, offset: 4480)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1588, file: !1589, line: 183, baseType: !108, size: 64, offset: 4544)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1588, file: !1589, line: 183, baseType: !108, size: 64, offset: 4608)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1588, file: !1589, line: 184, baseType: !1671, offset: 4672)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1672, line: 12, elements: !162)
!1672 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1588, file: !1589, line: 192, baseType: !333, size: 64, offset: 4672)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1588, file: !1589, line: 203, baseType: !1675, size: 2048, offset: 4736)
!1675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1676, size: 2048, elements: !1568)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1677, line: 43, size: 128, elements: !1678)
!1677 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1678 = !{!1679, !1680}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1676, file: !1677, line: 44, baseType: !238, size: 64)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1676, file: !1677, line: 45, baseType: !238, size: 64, offset: 64)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1588, file: !1589, line: 220, baseType: !400, size: 8, offset: 6784)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1588, file: !1589, line: 221, baseType: !1038, size: 16, offset: 6800)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1588, file: !1589, line: 222, baseType: !1038, size: 16, offset: 6816)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1588, file: !1589, line: 224, baseType: !887, size: 64, offset: 6848)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1588, file: !1589, line: 227, baseType: !1006, size: 192, offset: 6912)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1588, file: !1589, line: 233, baseType: !1006, size: 192, offset: 7104)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1050, file: !1051, line: 970, baseType: !1688, size: 64, offset: 9280)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 64)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1589, line: 20, size: 16576, elements: !1690)
!1690 = !{!1691, !1692, !1693, !1694}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1689, file: !1589, line: 21, baseType: !148)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1689, file: !1589, line: 22, baseType: !1063, size: 32)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1689, file: !1589, line: 23, baseType: !1314, size: 128, offset: 64)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1689, file: !1589, line: 24, baseType: !1695, size: 16384, offset: 192)
!1695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1696, size: 16384, elements: !194)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1599, line: 49, size: 256, elements: !1697)
!1697 = !{!1698}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1696, file: !1599, line: 50, baseType: !1699, size: 256)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1599, line: 35, size: 256, elements: !1700)
!1700 = !{!1701, !1708, !1709, !1715}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1699, file: !1599, line: 37, baseType: !1702, size: 64)
!1702 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1703, line: 19, baseType: !1704)
!1703 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64)
!1705 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1703, line: 18, baseType: !1706)
!1706 = !DISubroutineType(types: !1707)
!1707 = !{null, !174}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1699, file: !1599, line: 38, baseType: !108, size: 64, offset: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1699, file: !1599, line: 44, baseType: !1710, size: 64, offset: 128)
!1710 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1703, line: 22, baseType: !1711)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 64)
!1712 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1703, line: 21, baseType: !1713)
!1713 = !DISubroutineType(types: !1714)
!1714 = !{null}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1699, file: !1599, line: 46, baseType: !1603, size: 64, offset: 192)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1050, file: !1051, line: 971, baseType: !1603, size: 64, offset: 9344)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1050, file: !1051, line: 972, baseType: !1603, size: 64, offset: 9408)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1050, file: !1051, line: 974, baseType: !1603, size: 64, offset: 9472)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1050, file: !1051, line: 975, baseType: !1598, size: 192, offset: 9536)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1050, file: !1051, line: 976, baseType: !108, size: 64, offset: 9728)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1050, file: !1051, line: 977, baseType: !236, size: 64, offset: 9792)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1050, file: !1051, line: 978, baseType: !7, size: 32, offset: 9856)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1050, file: !1051, line: 980, baseType: !282, size: 64, offset: 9920)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1050, file: !1051, line: 989, baseType: !1725, size: 128, offset: 9984)
!1725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1726, line: 35, size: 128, elements: !1727)
!1726 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1727 = !{!1728, !1729, !1730}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1725, file: !1726, line: 36, baseType: !174, size: 32)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1725, file: !1726, line: 37, baseType: !660, size: 32, offset: 32)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1725, file: !1726, line: 38, baseType: !1731, size: 64, offset: 64)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64)
!1732 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1726, line: 23, flags: DIFlagFwdDecl)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1050, file: !1051, line: 992, baseType: !331, size: 64, offset: 10112)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1050, file: !1051, line: 993, baseType: !331, size: 64, offset: 10176)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1050, file: !1051, line: 996, baseType: !148, offset: 10240)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1050, file: !1051, line: 999, baseType: !693, offset: 10240)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1050, file: !1051, line: 1001, baseType: !1738, size: 64, offset: 10240)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1051, line: 636, size: 64, elements: !1739)
!1739 = !{!1740}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1738, file: !1051, line: 637, baseType: !1741, size: 64)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1050, file: !1051, line: 1005, baseType: !665, size: 128, offset: 10304)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1050, file: !1051, line: 1007, baseType: !1049, size: 64, offset: 10432)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1050, file: !1051, line: 1009, baseType: !1745, size: 64, offset: 10496)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64)
!1746 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1051, line: 1009, flags: DIFlagFwdDecl)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1050, file: !1051, line: 1043, baseType: !109, size: 64, offset: 10560)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1050, file: !1051, line: 1046, baseType: !1749, size: 64, offset: 10624)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 64)
!1750 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1051, line: 41, flags: DIFlagFwdDecl)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1050, file: !1051, line: 1050, baseType: !1752, size: 64, offset: 10688)
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 64)
!1753 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1051, line: 42, flags: DIFlagFwdDecl)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1050, file: !1051, line: 1054, baseType: !1755, size: 64, offset: 10752)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 64)
!1756 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1051, line: 55, flags: DIFlagFwdDecl)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1050, file: !1051, line: 1056, baseType: !1758, size: 64, offset: 10816)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64)
!1759 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1051, line: 40, flags: DIFlagFwdDecl)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1050, file: !1051, line: 1058, baseType: !1761, size: 64, offset: 10880)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1763, line: 99, size: 704, elements: !1764)
!1763 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1764 = !{!1765, !1766, !1767, !1768, !1769, !1770, !1771, !1790, !1791}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1762, file: !1763, line: 100, baseType: !684, size: 64)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1762, file: !1763, line: 101, baseType: !660, size: 32, offset: 64)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1762, file: !1763, line: 102, baseType: !660, size: 32, offset: 96)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1762, file: !1763, line: 105, baseType: !148, offset: 128)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1762, file: !1763, line: 107, baseType: !231, size: 16, offset: 128)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1762, file: !1763, line: 109, baseType: !652, size: 128, offset: 192)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1762, file: !1763, line: 110, baseType: !1772, size: 64, offset: 320)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1763, line: 73, size: 448, elements: !1774)
!1774 = !{!1775, !1778, !1779, !1784, !1789}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1773, file: !1763, line: 74, baseType: !1776, size: 64)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64)
!1777 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !1763, line: 74, flags: DIFlagFwdDecl)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !1773, file: !1763, line: 75, baseType: !1761, size: 64, offset: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, scope: !1773, file: !1763, line: 83, baseType: !1780, size: 128, offset: 128)
!1780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1773, file: !1763, line: 83, size: 128, elements: !1781)
!1781 = !{!1782, !1783}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !1780, file: !1763, line: 84, baseType: !135, size: 128)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !1780, file: !1763, line: 85, baseType: !848, size: 64)
!1784 = !DIDerivedType(tag: DW_TAG_member, scope: !1773, file: !1763, line: 87, baseType: !1785, size: 128, offset: 256)
!1785 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1773, file: !1763, line: 87, size: 128, elements: !1786)
!1786 = !{!1787, !1788}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !1785, file: !1763, line: 88, baseType: !552, size: 128)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !1785, file: !1763, line: 89, baseType: !279, size: 128, align: 64)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1773, file: !1763, line: 92, baseType: !7, size: 32, offset: 384)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1762, file: !1763, line: 111, baseType: !548, size: 64, offset: 384)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1762, file: !1763, line: 113, baseType: !1792, size: 256, offset: 448)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1793, line: 102, size: 256, elements: !1794)
!1793 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1794 = !{!1795, !1796, !1797}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1792, file: !1793, line: 103, baseType: !684, size: 64)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1792, file: !1793, line: 104, baseType: !135, size: 128, offset: 64)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1792, file: !1793, line: 105, baseType: !1798, size: 64, offset: 192)
!1798 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1793, line: 21, baseType: !1799)
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 64)
!1800 = !DISubroutineType(types: !1801)
!1801 = !{null, !1802}
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1050, file: !1051, line: 1061, baseType: !1804, size: 64, offset: 10944)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64)
!1805 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1051, line: 43, flags: DIFlagFwdDecl)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1050, file: !1051, line: 1064, baseType: !108, size: 64, offset: 11008)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1050, file: !1051, line: 1065, baseType: !1808, size: 64, offset: 11072)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1599, line: 14, baseType: !1810)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1599, line: 12, size: 384, elements: !1811)
!1811 = !{!1812}
!1812 = !DIDerivedType(tag: DW_TAG_member, scope: !1810, file: !1599, line: 13, baseType: !1813, size: 384)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1810, file: !1599, line: 13, size: 384, elements: !1814)
!1814 = !{!1815, !1816, !1817, !1818}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !1813, file: !1599, line: 13, baseType: !174, size: 32)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !1813, file: !1599, line: 13, baseType: !174, size: 32, offset: 32)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !1813, file: !1599, line: 13, baseType: !174, size: 32, offset: 64)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !1813, file: !1599, line: 13, baseType: !1819, size: 256, offset: 128)
!1819 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !1820, line: 32, size: 256, elements: !1821)
!1820 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!1821 = !{!1822, !1827, !1840, !1846, !1855, !1875, !1880}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !1819, file: !1820, line: 37, baseType: !1823, size: 64)
!1823 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1819, file: !1820, line: 34, size: 64, elements: !1824)
!1824 = !{!1825, !1826}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1823, file: !1820, line: 35, baseType: !1293, size: 32)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1823, file: !1820, line: 36, baseType: !351, size: 32, offset: 32)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !1819, file: !1820, line: 45, baseType: !1828, size: 192)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1819, file: !1820, line: 40, size: 192, elements: !1829)
!1829 = !{!1830, !1832, !1833, !1839}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !1828, file: !1820, line: 41, baseType: !1831, size: 32)
!1831 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !222, line: 95, baseType: !174)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !1828, file: !1820, line: 42, baseType: !174, size: 32, offset: 32)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1828, file: !1820, line: 43, baseType: !1834, size: 64, offset: 64)
!1834 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !1820, line: 11, baseType: !1835)
!1835 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !1820, line: 8, size: 64, elements: !1836)
!1836 = !{!1837, !1838}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !1835, file: !1820, line: 9, baseType: !174, size: 32)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !1835, file: !1820, line: 10, baseType: !109, size: 64)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !1828, file: !1820, line: 44, baseType: !174, size: 32, offset: 128)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !1819, file: !1820, line: 52, baseType: !1841, size: 128)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1819, file: !1820, line: 48, size: 128, elements: !1842)
!1842 = !{!1843, !1844, !1845}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1841, file: !1820, line: 49, baseType: !1293, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1841, file: !1820, line: 50, baseType: !351, size: 32, offset: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1841, file: !1820, line: 51, baseType: !1834, size: 64, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !1819, file: !1820, line: 61, baseType: !1847, size: 256)
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1819, file: !1820, line: 55, size: 256, elements: !1848)
!1848 = !{!1849, !1850, !1851, !1852, !1854}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1847, file: !1820, line: 56, baseType: !1293, size: 32)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1847, file: !1820, line: 57, baseType: !351, size: 32, offset: 32)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !1847, file: !1820, line: 58, baseType: !174, size: 32, offset: 64)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !1847, file: !1820, line: 59, baseType: !1853, size: 64, offset: 128)
!1853 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !222, line: 94, baseType: !223)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !1847, file: !1820, line: 60, baseType: !1853, size: 64, offset: 192)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !1819, file: !1820, line: 95, baseType: !1856, size: 256)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1819, file: !1820, line: 64, size: 256, elements: !1857)
!1857 = !{!1858, !1859}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !1856, file: !1820, line: 65, baseType: !109, size: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, scope: !1856, file: !1820, line: 77, baseType: !1860, size: 192, offset: 64)
!1860 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1856, file: !1820, line: 77, size: 192, elements: !1861)
!1861 = !{!1862, !1863, !1870}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !1860, file: !1820, line: 82, baseType: !1038, size: 16)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !1860, file: !1820, line: 88, baseType: !1864, size: 192)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1860, file: !1820, line: 84, size: 192, elements: !1865)
!1865 = !{!1866, !1868, !1869}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !1864, file: !1820, line: 85, baseType: !1867, size: 64)
!1867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 64, elements: !1163)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !1864, file: !1820, line: 86, baseType: !109, size: 64, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !1864, file: !1820, line: 87, baseType: !109, size: 64, offset: 128)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !1860, file: !1820, line: 93, baseType: !1871, size: 96)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1860, file: !1820, line: 90, size: 96, elements: !1872)
!1872 = !{!1873, !1874}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !1871, file: !1820, line: 91, baseType: !1867, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !1871, file: !1820, line: 92, baseType: !125, size: 32, offset: 64)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !1819, file: !1820, line: 101, baseType: !1876, size: 128)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1819, file: !1820, line: 98, size: 128, elements: !1877)
!1877 = !{!1878, !1879}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !1876, file: !1820, line: 99, baseType: !224, size: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !1876, file: !1820, line: 100, baseType: !174, size: 32, offset: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !1819, file: !1820, line: 108, baseType: !1881, size: 128)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1819, file: !1820, line: 104, size: 128, elements: !1882)
!1882 = !{!1883, !1884, !1885}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !1881, file: !1820, line: 105, baseType: !109, size: 64)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !1881, file: !1820, line: 106, baseType: !174, size: 32, offset: 64)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !1881, file: !1820, line: 107, baseType: !7, size: 32, offset: 96)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1050, file: !1051, line: 1067, baseType: !1671, offset: 11136)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1050, file: !1051, line: 1099, baseType: !1888, size: 64, offset: 11136)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!1889 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1051, line: 56, flags: DIFlagFwdDecl)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1050, file: !1051, line: 1103, baseType: !135, size: 128, offset: 11200)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1050, file: !1051, line: 1104, baseType: !1892, size: 64, offset: 11328)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64)
!1893 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1051, line: 46, flags: DIFlagFwdDecl)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1050, file: !1051, line: 1105, baseType: !1006, size: 192, offset: 11392)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1050, file: !1051, line: 1106, baseType: !7, size: 32, offset: 11584)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1050, file: !1051, line: 1109, baseType: !1897, size: 128, offset: 11648)
!1897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1898, size: 128, elements: !1402)
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 64)
!1899 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1051, line: 51, flags: DIFlagFwdDecl)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1050, file: !1051, line: 1110, baseType: !1006, size: 192, offset: 11776)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1050, file: !1051, line: 1111, baseType: !135, size: 128, offset: 11968)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1050, file: !1051, line: 1173, baseType: !1903, size: 64, offset: 12096)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 64)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !1905, line: 62, size: 256, align: 256, elements: !1906)
!1905 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!1906 = !{!1907, !1908, !1909, !1914}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !1904, file: !1905, line: 75, baseType: !125, size: 32)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !1904, file: !1905, line: 90, baseType: !125, size: 32, offset: 32)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !1904, file: !1905, line: 124, baseType: !1910, size: 64, offset: 64)
!1910 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1904, file: !1905, line: 109, size: 64, elements: !1911)
!1911 = !{!1912, !1913}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !1910, file: !1905, line: 110, baseType: !332, size: 64)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1910, file: !1905, line: 112, baseType: !332, size: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1904, file: !1905, line: 144, baseType: !125, size: 32, offset: 128)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1050, file: !1051, line: 1174, baseType: !123, size: 32, offset: 12160)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1050, file: !1051, line: 1179, baseType: !108, size: 64, offset: 12224)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1050, file: !1051, line: 1182, baseType: !1918, size: 128, offset: 12288)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !984, line: 76, size: 128, elements: !1919)
!1919 = !{!1920, !1925, !1926}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1918, file: !984, line: 85, baseType: !1921, size: 64)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !1922, line: 7, size: 64, elements: !1923)
!1922 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!1923 = !{!1924}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !1921, file: !1922, line: 12, baseType: !1200, size: 64)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !1918, file: !984, line: 88, baseType: !400, size: 8, offset: 64)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !1918, file: !984, line: 95, baseType: !400, size: 8, offset: 72)
!1927 = !DIDerivedType(tag: DW_TAG_member, scope: !1050, file: !1051, line: 1184, baseType: !1928, size: 128, offset: 12416)
!1928 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1050, file: !1051, line: 1184, size: 128, elements: !1929)
!1929 = !{!1930, !1931}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !1928, file: !1051, line: 1185, baseType: !1063, size: 32)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1928, file: !1051, line: 1186, baseType: !279, size: 128, align: 64)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1050, file: !1051, line: 1190, baseType: !1933, size: 64, offset: 12544)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!1934 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1051, line: 53, flags: DIFlagFwdDecl)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1050, file: !1051, line: 1192, baseType: !1936, size: 128, offset: 12608)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !984, line: 64, size: 128, elements: !1937)
!1937 = !{!1938, !1939, !1940}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1936, file: !984, line: 65, baseType: !634, size: 64)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1936, file: !984, line: 67, baseType: !125, size: 32, offset: 64)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1936, file: !984, line: 68, baseType: !125, size: 32, offset: 96)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1050, file: !1051, line: 1206, baseType: !174, size: 32, offset: 12736)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1050, file: !1051, line: 1207, baseType: !174, size: 32, offset: 12768)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1050, file: !1051, line: 1209, baseType: !108, size: 64, offset: 12800)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1050, file: !1051, line: 1219, baseType: !331, size: 64, offset: 12864)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1050, file: !1051, line: 1220, baseType: !331, size: 64, offset: 12928)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1050, file: !1051, line: 1317, baseType: !174, size: 32, offset: 12992)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1050, file: !1051, line: 1319, baseType: !1049, size: 64, offset: 13056)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1050, file: !1051, line: 1322, baseType: !1949, size: 64, offset: 13120)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 64)
!1950 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !1051, line: 1322, flags: DIFlagFwdDecl)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1050, file: !1051, line: 1326, baseType: !1063, size: 32, offset: 13184)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1050, file: !1051, line: 1342, baseType: !109, size: 64, offset: 13248)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1050, file: !1051, line: 1343, baseType: !332, size: 64, offset: 13312)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1050, file: !1051, line: 1344, baseType: !331, size: 64, offset: 13376)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1050, file: !1051, line: 1345, baseType: !332, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1050, file: !1051, line: 1346, baseType: !332, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1050, file: !1051, line: 1347, baseType: !332, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1050, file: !1051, line: 1348, baseType: !279, size: 128, align: 64, offset: 13504)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1050, file: !1051, line: 1358, baseType: !1960, size: 34816, offset: 13824)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !1961, line: 485, size: 34816, elements: !1962)
!1961 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!1962 = !{!1963, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1992, !1993, !1994, !1995, !1996, !1997, !2000, !2001, !2002}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !1960, file: !1961, line: 487, baseType: !1964, size: 192)
!1964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1965, size: 192, elements: !190)
!1965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !1966, line: 16, size: 64, elements: !1967)
!1966 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!1967 = !{!1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !1965, file: !1966, line: 17, baseType: !772, size: 16)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !1965, file: !1966, line: 18, baseType: !772, size: 16, offset: 16)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !1965, file: !1966, line: 19, baseType: !772, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1965, file: !1966, line: 19, baseType: !772, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !1965, file: !1966, line: 19, baseType: !772, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !1965, file: !1966, line: 19, baseType: !772, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1965, file: !1966, line: 19, baseType: !772, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !1965, file: !1966, line: 20, baseType: !772, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !1965, file: !1966, line: 20, baseType: !772, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1965, file: !1966, line: 20, baseType: !772, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !1965, file: !1966, line: 20, baseType: !772, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1965, file: !1966, line: 20, baseType: !772, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !1965, file: !1966, line: 20, baseType: !772, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !1960, file: !1961, line: 491, baseType: !108, size: 64, offset: 192)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1960, file: !1961, line: 495, baseType: !231, size: 16, offset: 256)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1960, file: !1961, line: 496, baseType: !231, size: 16, offset: 272)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !1960, file: !1961, line: 497, baseType: !231, size: 16, offset: 288)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !1960, file: !1961, line: 498, baseType: !231, size: 16, offset: 304)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !1960, file: !1961, line: 502, baseType: !108, size: 64, offset: 320)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1960, file: !1961, line: 503, baseType: !108, size: 64, offset: 384)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !1960, file: !1961, line: 514, baseType: !1989, size: 256, offset: 448)
!1989 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1990, size: 256, elements: !988)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 64)
!1991 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !1961, line: 483, flags: DIFlagFwdDecl)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !1960, file: !1961, line: 516, baseType: !108, size: 64, offset: 704)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !1960, file: !1961, line: 518, baseType: !108, size: 64, offset: 768)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !1960, file: !1961, line: 520, baseType: !108, size: 64, offset: 832)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !1960, file: !1961, line: 521, baseType: !108, size: 64, offset: 896)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !1960, file: !1961, line: 522, baseType: !108, size: 64, offset: 960)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !1960, file: !1961, line: 528, baseType: !1998, size: 64, offset: 1024)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !1961, line: 10, flags: DIFlagFwdDecl)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !1960, file: !1961, line: 535, baseType: !108, size: 64, offset: 1088)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !1960, file: !1961, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !1960, file: !1961, line: 540, baseType: !2003, size: 33280, offset: 1536)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2004, line: 317, size: 33280, elements: !2005)
!2004 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2005 = !{!2006, !2007, !2008}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2003, file: !2004, line: 330, baseType: !7, size: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2003, file: !2004, line: 337, baseType: !108, size: 64, offset: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2003, file: !2004, line: 348, baseType: !2009, size: 32768, offset: 512)
!2009 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2004, line: 304, size: 32768, elements: !2010)
!2010 = !{!2011, !2026, !2065, !2115, !2128}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2009, file: !2004, line: 305, baseType: !2012, size: 896)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2004, line: 12, size: 896, elements: !2013)
!2013 = !{!2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2025}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2012, file: !2004, line: 13, baseType: !123, size: 32)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2012, file: !2004, line: 14, baseType: !123, size: 32, offset: 32)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2012, file: !2004, line: 15, baseType: !123, size: 32, offset: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2012, file: !2004, line: 16, baseType: !123, size: 32, offset: 96)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2012, file: !2004, line: 17, baseType: !123, size: 32, offset: 128)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2012, file: !2004, line: 18, baseType: !123, size: 32, offset: 160)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2012, file: !2004, line: 19, baseType: !123, size: 32, offset: 192)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2012, file: !2004, line: 22, baseType: !2022, size: 640, offset: 224)
!2022 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, size: 640, elements: !2023)
!2023 = !{!2024}
!2024 = !DISubrange(count: 20)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2012, file: !2004, line: 25, baseType: !123, size: 32, offset: 864)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2009, file: !2004, line: 306, baseType: !2027, size: 4096, align: 128)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2004, line: 34, size: 4096, align: 128, elements: !2028)
!2028 = !{!2029, !2030, !2031, !2032, !2033, !2048, !2049, !2050, !2054, !2056, !2060}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2027, file: !2004, line: 35, baseType: !772, size: 16)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2027, file: !2004, line: 36, baseType: !772, size: 16, offset: 16)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2027, file: !2004, line: 37, baseType: !772, size: 16, offset: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2027, file: !2004, line: 38, baseType: !772, size: 16, offset: 48)
!2033 = !DIDerivedType(tag: DW_TAG_member, scope: !2027, file: !2004, line: 39, baseType: !2034, size: 128, offset: 64)
!2034 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2027, file: !2004, line: 39, size: 128, elements: !2035)
!2035 = !{!2036, !2041}
!2036 = !DIDerivedType(tag: DW_TAG_member, scope: !2034, file: !2004, line: 40, baseType: !2037, size: 128)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2034, file: !2004, line: 40, size: 128, elements: !2038)
!2038 = !{!2039, !2040}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2037, file: !2004, line: 41, baseType: !331, size: 64)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2037, file: !2004, line: 42, baseType: !331, size: 64, offset: 64)
!2041 = !DIDerivedType(tag: DW_TAG_member, scope: !2034, file: !2004, line: 44, baseType: !2042, size: 128)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2034, file: !2004, line: 44, size: 128, elements: !2043)
!2043 = !{!2044, !2045, !2046, !2047}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2042, file: !2004, line: 45, baseType: !123, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2042, file: !2004, line: 46, baseType: !123, size: 32, offset: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2042, file: !2004, line: 47, baseType: !123, size: 32, offset: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2042, file: !2004, line: 48, baseType: !123, size: 32, offset: 96)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2027, file: !2004, line: 51, baseType: !123, size: 32, offset: 192)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2027, file: !2004, line: 52, baseType: !123, size: 32, offset: 224)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2027, file: !2004, line: 55, baseType: !2051, size: 1024, offset: 256)
!2051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, size: 1024, elements: !2052)
!2052 = !{!2053}
!2053 = !DISubrange(count: 32)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2027, file: !2004, line: 58, baseType: !2055, size: 2048, offset: 1280)
!2055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, size: 2048, elements: !194)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2027, file: !2004, line: 60, baseType: !2057, size: 384, offset: 3328)
!2057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, size: 384, elements: !2058)
!2058 = !{!2059}
!2059 = !DISubrange(count: 12)
!2060 = !DIDerivedType(tag: DW_TAG_member, scope: !2027, file: !2004, line: 62, baseType: !2061, size: 384, offset: 3712)
!2061 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2027, file: !2004, line: 62, size: 384, elements: !2062)
!2062 = !{!2063, !2064}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2061, file: !2004, line: 63, baseType: !2057, size: 384)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2061, file: !2004, line: 64, baseType: !2057, size: 384)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2009, file: !2004, line: 307, baseType: !2066, size: 1088)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2004, line: 79, size: 1088, elements: !2067)
!2067 = !{!2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2114}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2066, file: !2004, line: 80, baseType: !123, size: 32)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2066, file: !2004, line: 81, baseType: !123, size: 32, offset: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2066, file: !2004, line: 82, baseType: !123, size: 32, offset: 64)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2066, file: !2004, line: 83, baseType: !123, size: 32, offset: 96)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2066, file: !2004, line: 84, baseType: !123, size: 32, offset: 128)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2066, file: !2004, line: 85, baseType: !123, size: 32, offset: 160)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2066, file: !2004, line: 86, baseType: !123, size: 32, offset: 192)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2066, file: !2004, line: 88, baseType: !2022, size: 640, offset: 224)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2066, file: !2004, line: 89, baseType: !1185, size: 8, offset: 864)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2066, file: !2004, line: 90, baseType: !1185, size: 8, offset: 872)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2066, file: !2004, line: 91, baseType: !1185, size: 8, offset: 880)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2066, file: !2004, line: 92, baseType: !1185, size: 8, offset: 888)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2066, file: !2004, line: 93, baseType: !1185, size: 8, offset: 896)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2066, file: !2004, line: 94, baseType: !1185, size: 8, offset: 904)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2066, file: !2004, line: 95, baseType: !2083, size: 64, offset: 960)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2085, line: 11, size: 128, elements: !2086)
!2085 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2086 = !{!2087, !2088}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2084, file: !2085, line: 12, baseType: !224, size: 64)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2084, file: !2085, line: 13, baseType: !2089, size: 64, offset: 64)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 64)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2091, line: 56, size: 1344, elements: !2092)
!2091 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2092 = !{!2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2090, file: !2091, line: 61, baseType: !108, size: 64)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2090, file: !2091, line: 62, baseType: !108, size: 64, offset: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2090, file: !2091, line: 63, baseType: !108, size: 64, offset: 128)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2090, file: !2091, line: 64, baseType: !108, size: 64, offset: 192)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2090, file: !2091, line: 65, baseType: !108, size: 64, offset: 256)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2090, file: !2091, line: 66, baseType: !108, size: 64, offset: 320)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2090, file: !2091, line: 68, baseType: !108, size: 64, offset: 384)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2090, file: !2091, line: 69, baseType: !108, size: 64, offset: 448)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2090, file: !2091, line: 70, baseType: !108, size: 64, offset: 512)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2090, file: !2091, line: 71, baseType: !108, size: 64, offset: 576)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2090, file: !2091, line: 72, baseType: !108, size: 64, offset: 640)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2090, file: !2091, line: 73, baseType: !108, size: 64, offset: 704)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2090, file: !2091, line: 74, baseType: !108, size: 64, offset: 768)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2090, file: !2091, line: 75, baseType: !108, size: 64, offset: 832)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2090, file: !2091, line: 76, baseType: !108, size: 64, offset: 896)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2090, file: !2091, line: 81, baseType: !108, size: 64, offset: 960)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2090, file: !2091, line: 83, baseType: !108, size: 64, offset: 1024)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2090, file: !2091, line: 84, baseType: !108, size: 64, offset: 1088)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2090, file: !2091, line: 85, baseType: !108, size: 64, offset: 1152)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2090, file: !2091, line: 86, baseType: !108, size: 64, offset: 1216)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2090, file: !2091, line: 87, baseType: !108, size: 64, offset: 1280)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2066, file: !2004, line: 96, baseType: !123, size: 32, offset: 1024)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2009, file: !2004, line: 308, baseType: !2116, size: 4608, align: 512)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2004, line: 289, size: 4608, align: 512, elements: !2117)
!2117 = !{!2118, !2119, !2126}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2116, file: !2004, line: 290, baseType: !2027, size: 4096, align: 128)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2116, file: !2004, line: 291, baseType: !2120, size: 512, offset: 4096)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2004, line: 268, size: 512, elements: !2121)
!2121 = !{!2122, !2123, !2124}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2120, file: !2004, line: 269, baseType: !331, size: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2120, file: !2004, line: 270, baseType: !331, size: 64, offset: 64)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2120, file: !2004, line: 271, baseType: !2125, size: 384, offset: 128)
!2125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 384, elements: !1458)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2116, file: !2004, line: 292, baseType: !2127, offset: 4608)
!2127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1185, elements: !1556)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2009, file: !2004, line: 309, baseType: !2129, size: 32768)
!2129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1185, size: 32768, elements: !2130)
!2130 = !{!2131}
!2131 = !DISubrange(count: 4096)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1046, file: !636, line: 378, baseType: !2133, size: 64, offset: 64)
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1042, file: !636, line: 384, baseType: !1335, size: 192, offset: 192)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !891, file: !636, line: 500, baseType: !148, offset: 6656)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !891, file: !636, line: 501, baseType: !2137, size: 64, offset: 6656)
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2138, size: 64)
!2138 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !636, line: 387, flags: DIFlagFwdDecl)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !891, file: !636, line: 516, baseType: !1546, size: 64, offset: 6720)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !891, file: !636, line: 519, baseType: !266, size: 64, offset: 6784)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !891, file: !636, line: 521, baseType: !2142, size: 64, offset: 6848)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 64)
!2143 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !636, line: 521, flags: DIFlagFwdDecl)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !891, file: !636, line: 545, baseType: !660, size: 32, offset: 6912)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !891, file: !636, line: 548, baseType: !400, size: 8, offset: 6944)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !891, file: !636, line: 550, baseType: !2147, offset: 6952)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2148, line: 142, elements: !162)
!2148 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !891, file: !636, line: 554, baseType: !1792, size: 256, offset: 6976)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !891, file: !636, line: 557, baseType: !123, size: 32, offset: 7232)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !888, file: !636, line: 565, baseType: !2152, offset: 7296)
!2152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, elements: !2153)
!2153 = !{!2154}
!2154 = !DISubrange(count: -1)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !884, file: !636, line: 151, baseType: !660, size: 32)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !877, file: !636, line: 156, baseType: !148, offset: 256)
!2157 = !DIDerivedType(tag: DW_TAG_member, scope: !640, file: !636, line: 159, baseType: !2158, size: 128)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !640, file: !636, line: 159, size: 128, elements: !2159)
!2159 = !{!2160, !2163}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2158, file: !636, line: 161, baseType: !2161, size: 64)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 64)
!2162 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !636, line: 161, flags: DIFlagFwdDecl)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2158, file: !636, line: 162, baseType: !109, size: 64, offset: 64)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !640, file: !636, line: 176, baseType: !279, size: 128, align: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, scope: !635, file: !636, line: 179, baseType: !2166, size: 32, offset: 384)
!2166 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !635, file: !636, line: 179, size: 32, elements: !2167)
!2167 = !{!2168, !2169, !2170, !2171}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2166, file: !636, line: 184, baseType: !660, size: 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2166, file: !636, line: 192, baseType: !7, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2166, file: !636, line: 194, baseType: !7, size: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2166, file: !636, line: 195, baseType: !174, size: 32)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !635, file: !636, line: 199, baseType: !660, size: 32, offset: 416)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !570, file: !31, line: 1964, baseType: !2174, size: 64, offset: 1344)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 64)
!2175 = !DISubroutineType(types: !2176)
!2176 = !{!224, !509, !2177}
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 64)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2179, line: 12, size: 256, elements: !2180)
!2179 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2180 = !{!2181, !2182, !2183, !2184, !2185}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2178, file: !2179, line: 13, baseType: !106, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2178, file: !2179, line: 16, baseType: !174, size: 32, offset: 32)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2178, file: !2179, line: 23, baseType: !108, size: 64, offset: 64)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2178, file: !2179, line: 30, baseType: !108, size: 64, offset: 128)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2178, file: !2179, line: 33, baseType: !2186, size: 64, offset: 192)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 64)
!2187 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !636, line: 27, flags: DIFlagFwdDecl)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !570, file: !31, line: 1966, baseType: !2174, size: 64, offset: 1408)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !510, file: !31, line: 1424, baseType: !2190, size: 64, offset: 448)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 64)
!2191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2192)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !25, line: 322, size: 704, elements: !2193)
!2193 = !{!2194, !2240, !2244, !2248, !2249, !2250, !2251, !2252, !2257, !2262, !2266}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2192, file: !25, line: 323, baseType: !2195, size: 64)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2196 = !DISubroutineType(types: !2197)
!2197 = !{!174, !2198}
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !25, line: 294, size: 1600, elements: !2200)
!2200 = !{!2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2225, !2226, !2227}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2199, file: !25, line: 295, baseType: !552, size: 128)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2199, file: !25, line: 296, baseType: !135, size: 128, offset: 128)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2199, file: !25, line: 297, baseType: !135, size: 128, offset: 256)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2199, file: !25, line: 298, baseType: !135, size: 128, offset: 384)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2199, file: !25, line: 299, baseType: !1006, size: 192, offset: 512)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2199, file: !25, line: 300, baseType: !148, offset: 704)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2199, file: !25, line: 301, baseType: !660, size: 32, offset: 704)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2199, file: !25, line: 302, baseType: !509, size: 64, offset: 768)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2199, file: !25, line: 303, baseType: !2210, size: 64, offset: 832)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !25, line: 68, size: 64, elements: !2211)
!2211 = !{!2212, !2224}
!2212 = !DIDerivedType(tag: DW_TAG_member, scope: !2210, file: !25, line: 69, baseType: !2213, size: 32)
!2213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2210, file: !25, line: 69, size: 32, elements: !2214)
!2214 = !{!2215, !2216, !2217}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2213, file: !25, line: 70, baseType: !345, size: 32)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2213, file: !25, line: 71, baseType: !353, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2213, file: !25, line: 72, baseType: !2218, size: 32)
!2218 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2219, line: 24, baseType: !2220)
!2219 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2220 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2219, line: 22, size: 32, elements: !2221)
!2221 = !{!2222}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2220, file: !2219, line: 23, baseType: !2223, size: 32)
!2223 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2219, line: 20, baseType: !351)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2210, file: !25, line: 74, baseType: !24, size: 32, offset: 32)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2199, file: !25, line: 304, baseType: !441, size: 64, offset: 896)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2199, file: !25, line: 305, baseType: !108, size: 64, offset: 960)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2199, file: !25, line: 306, baseType: !2228, size: 576, offset: 1024)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !25, line: 205, size: 576, elements: !2229)
!2229 = !{!2230, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2228, file: !25, line: 206, baseType: !2231, size: 64)
!2231 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !25, line: 66, baseType: !443)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2228, file: !25, line: 207, baseType: !2231, size: 64, offset: 64)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2228, file: !25, line: 208, baseType: !2231, size: 64, offset: 128)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2228, file: !25, line: 209, baseType: !2231, size: 64, offset: 192)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2228, file: !25, line: 210, baseType: !2231, size: 64, offset: 256)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2228, file: !25, line: 211, baseType: !2231, size: 64, offset: 320)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2228, file: !25, line: 212, baseType: !2231, size: 64, offset: 384)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2228, file: !25, line: 213, baseType: !449, size: 64, offset: 448)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2228, file: !25, line: 214, baseType: !449, size: 64, offset: 512)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2192, file: !25, line: 324, baseType: !2241, size: 64, offset: 64)
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 64)
!2242 = !DISubroutineType(types: !2243)
!2243 = !{!2198, !509, !174}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2192, file: !25, line: 325, baseType: !2245, size: 64, offset: 128)
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 64)
!2246 = !DISubroutineType(types: !2247)
!2247 = !{null, !2198}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2192, file: !25, line: 326, baseType: !2195, size: 64, offset: 192)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2192, file: !25, line: 327, baseType: !2195, size: 64, offset: 256)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2192, file: !25, line: 328, baseType: !2195, size: 64, offset: 320)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2192, file: !25, line: 329, baseType: !598, size: 64, offset: 384)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2192, file: !25, line: 332, baseType: !2253, size: 64, offset: 448)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 64)
!2254 = !DISubroutineType(types: !2255)
!2255 = !{!2256, !339}
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 64)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2192, file: !25, line: 333, baseType: !2258, size: 64, offset: 512)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 64)
!2259 = !DISubroutineType(types: !2260)
!2260 = !{!174, !339, !2261}
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 64)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2192, file: !25, line: 335, baseType: !2263, size: 64, offset: 576)
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 64)
!2264 = !DISubroutineType(types: !2265)
!2265 = !{!174, !339, !2256}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2192, file: !25, line: 337, baseType: !2267, size: 64, offset: 640)
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2268, size: 64)
!2268 = !DISubroutineType(types: !2269)
!2269 = !{!174, !509, !2270}
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 64)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !510, file: !31, line: 1425, baseType: !2272, size: 64, offset: 512)
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 64)
!2273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2274)
!2274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !25, line: 428, size: 704, elements: !2275)
!2275 = !{!2276, !2280, !2281, !2285, !2286, !2287, !2302, !2325, !2329, !2330, !2353}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2274, file: !25, line: 429, baseType: !2277, size: 64)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 64)
!2278 = !DISubroutineType(types: !2279)
!2279 = !{!174, !509, !174, !174, !459}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2274, file: !25, line: 430, baseType: !598, size: 64, offset: 64)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2274, file: !25, line: 431, baseType: !2282, size: 64, offset: 128)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 64)
!2283 = !DISubroutineType(types: !2284)
!2284 = !{!174, !509, !7}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2274, file: !25, line: 432, baseType: !2282, size: 64, offset: 192)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2274, file: !25, line: 433, baseType: !598, size: 64, offset: 256)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2274, file: !25, line: 434, baseType: !2288, size: 64, offset: 320)
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 64)
!2289 = !DISubroutineType(types: !2290)
!2290 = !{!174, !509, !174, !2291}
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 64)
!2292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !25, line: 415, size: 256, elements: !2293)
!2293 = !{!2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2292, file: !25, line: 416, baseType: !174, size: 32)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2292, file: !25, line: 417, baseType: !7, size: 32, offset: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2292, file: !25, line: 418, baseType: !7, size: 32, offset: 64)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2292, file: !25, line: 420, baseType: !7, size: 32, offset: 96)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2292, file: !25, line: 421, baseType: !7, size: 32, offset: 128)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2292, file: !25, line: 422, baseType: !7, size: 32, offset: 160)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2292, file: !25, line: 423, baseType: !7, size: 32, offset: 192)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2292, file: !25, line: 424, baseType: !7, size: 32, offset: 224)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2274, file: !25, line: 435, baseType: !2303, size: 64, offset: 384)
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2304, size: 64)
!2304 = !DISubroutineType(types: !2305)
!2305 = !{!174, !509, !2210, !2306}
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2307, size: 64)
!2307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !25, line: 343, size: 960, elements: !2308)
!2308 = !{!2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324}
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2307, file: !25, line: 344, baseType: !174, size: 32)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2307, file: !25, line: 345, baseType: !331, size: 64, offset: 64)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2307, file: !25, line: 346, baseType: !331, size: 64, offset: 128)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2307, file: !25, line: 347, baseType: !331, size: 64, offset: 192)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2307, file: !25, line: 348, baseType: !331, size: 64, offset: 256)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2307, file: !25, line: 349, baseType: !331, size: 64, offset: 320)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2307, file: !25, line: 350, baseType: !331, size: 64, offset: 384)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2307, file: !25, line: 351, baseType: !690, size: 64, offset: 448)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2307, file: !25, line: 353, baseType: !690, size: 64, offset: 512)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2307, file: !25, line: 354, baseType: !174, size: 32, offset: 576)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2307, file: !25, line: 355, baseType: !174, size: 32, offset: 608)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2307, file: !25, line: 356, baseType: !331, size: 64, offset: 640)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2307, file: !25, line: 357, baseType: !331, size: 64, offset: 704)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2307, file: !25, line: 358, baseType: !331, size: 64, offset: 768)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2307, file: !25, line: 359, baseType: !690, size: 64, offset: 832)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2307, file: !25, line: 360, baseType: !174, size: 32, offset: 896)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2274, file: !25, line: 436, baseType: !2326, size: 64, offset: 448)
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 64)
!2327 = !DISubroutineType(types: !2328)
!2328 = !{!174, !509, !2270, !2306}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2274, file: !25, line: 438, baseType: !2303, size: 64, offset: 512)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2274, file: !25, line: 439, baseType: !2331, size: 64, offset: 576)
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 64)
!2332 = !DISubroutineType(types: !2333)
!2333 = !{!174, !509, !2334}
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 64)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !25, line: 409, size: 1408, elements: !2336)
!2336 = !{!2337, !2338}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2335, file: !25, line: 410, baseType: !7, size: 32)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2335, file: !25, line: 411, baseType: !2339, size: 1344, offset: 64)
!2339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2340, size: 1344, elements: !190)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !25, line: 395, size: 448, elements: !2341)
!2341 = !{!2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2352}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2340, file: !25, line: 396, baseType: !7, size: 32)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2340, file: !25, line: 397, baseType: !7, size: 32, offset: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2340, file: !25, line: 399, baseType: !7, size: 32, offset: 64)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2340, file: !25, line: 400, baseType: !7, size: 32, offset: 96)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2340, file: !25, line: 401, baseType: !7, size: 32, offset: 128)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2340, file: !25, line: 402, baseType: !7, size: 32, offset: 160)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2340, file: !25, line: 403, baseType: !7, size: 32, offset: 192)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2340, file: !25, line: 404, baseType: !333, size: 64, offset: 256)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2340, file: !25, line: 405, baseType: !2351, size: 64, offset: 320)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !107, line: 126, baseType: !331)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2340, file: !25, line: 406, baseType: !2351, size: 64, offset: 384)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2274, file: !25, line: 440, baseType: !2282, size: 64, offset: 640)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !510, file: !31, line: 1426, baseType: !2355, size: 64, offset: 576)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 64)
!2356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2357)
!2357 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !31, line: 49, flags: DIFlagFwdDecl)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !510, file: !31, line: 1427, baseType: !108, size: 64, offset: 640)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !510, file: !31, line: 1428, baseType: !108, size: 64, offset: 704)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !510, file: !31, line: 1429, baseType: !108, size: 64, offset: 768)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !510, file: !31, line: 1430, baseType: !296, size: 64, offset: 832)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !510, file: !31, line: 1431, baseType: !680, size: 256, offset: 896)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !510, file: !31, line: 1432, baseType: !174, size: 32, offset: 1152)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !510, file: !31, line: 1433, baseType: !660, size: 32, offset: 1184)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !510, file: !31, line: 1437, baseType: !2366, size: 64, offset: 1216)
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 64)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2368, size: 64)
!2368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2369)
!2369 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !31, line: 1437, flags: DIFlagFwdDecl)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !510, file: !31, line: 1449, baseType: !2371, size: 64, offset: 1280)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !312, line: 34, size: 64, elements: !2372)
!2372 = !{!2373}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2371, file: !312, line: 35, baseType: !315, size: 64)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !510, file: !31, line: 1450, baseType: !135, size: 128, offset: 1344)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !510, file: !31, line: 1451, baseType: !2376, size: 64, offset: 1472)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 64)
!2377 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !31, line: 699, flags: DIFlagFwdDecl)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !510, file: !31, line: 1452, baseType: !1758, size: 64, offset: 1536)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !510, file: !31, line: 1453, baseType: !2380, size: 64, offset: 1600)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64)
!2381 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !31, line: 1453, flags: DIFlagFwdDecl)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !510, file: !31, line: 1454, baseType: !552, size: 128, offset: 1664)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !510, file: !31, line: 1455, baseType: !7, size: 32, offset: 1792)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !510, file: !31, line: 1456, baseType: !2385, size: 2432, offset: 1856)
!2385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !25, line: 518, size: 2432, elements: !2386)
!2386 = !{!2387, !2388, !2389, !2391, !2423}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2385, file: !25, line: 519, baseType: !7, size: 32)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2385, file: !25, line: 520, baseType: !680, size: 256, offset: 64)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2385, file: !25, line: 521, baseType: !2390, size: 192, offset: 320)
!2390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !339, size: 192, elements: !190)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2385, file: !25, line: 522, baseType: !2392, size: 1728, offset: 512)
!2392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2393, size: 1728, elements: !190)
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !25, line: 222, size: 576, elements: !2394)
!2394 = !{!2395, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2393, file: !25, line: 223, baseType: !2396, size: 64)
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 64)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !25, line: 443, size: 256, elements: !2398)
!2398 = !{!2399, !2400, !2413, !2414}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2397, file: !25, line: 444, baseType: !174, size: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2397, file: !25, line: 445, baseType: !2401, size: 64, offset: 64)
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 64)
!2402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2403)
!2403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !25, line: 310, size: 512, elements: !2404)
!2404 = !{!2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2403, file: !25, line: 311, baseType: !598, size: 64)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2403, file: !25, line: 312, baseType: !598, size: 64, offset: 64)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2403, file: !25, line: 313, baseType: !598, size: 64, offset: 128)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2403, file: !25, line: 314, baseType: !598, size: 64, offset: 192)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2403, file: !25, line: 315, baseType: !2195, size: 64, offset: 256)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2403, file: !25, line: 316, baseType: !2195, size: 64, offset: 320)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2403, file: !25, line: 317, baseType: !2195, size: 64, offset: 384)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2403, file: !25, line: 318, baseType: !2267, size: 64, offset: 448)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2397, file: !25, line: 446, baseType: !543, size: 64, offset: 128)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2397, file: !25, line: 447, baseType: !2396, size: 64, offset: 192)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2393, file: !25, line: 224, baseType: !174, size: 32, offset: 64)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2393, file: !25, line: 226, baseType: !135, size: 128, offset: 128)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2393, file: !25, line: 227, baseType: !108, size: 64, offset: 256)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2393, file: !25, line: 228, baseType: !7, size: 32, offset: 320)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2393, file: !25, line: 229, baseType: !7, size: 32, offset: 352)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2393, file: !25, line: 230, baseType: !2231, size: 64, offset: 384)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2393, file: !25, line: 231, baseType: !2231, size: 64, offset: 448)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2393, file: !25, line: 232, baseType: !109, size: 64, offset: 512)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2385, file: !25, line: 523, baseType: !2424, size: 192, offset: 2240)
!2424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2401, size: 192, elements: !190)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !510, file: !31, line: 1458, baseType: !2426, size: 2112, offset: 4288)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !31, line: 1410, size: 2112, elements: !2427)
!2427 = !{!2428, !2429, !2430}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2426, file: !31, line: 1411, baseType: !174, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2426, file: !31, line: 1412, baseType: !1314, size: 128, offset: 64)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2426, file: !31, line: 1413, baseType: !2431, size: 1920, offset: 192)
!2431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2432, size: 1920, elements: !190)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2433, line: 12, size: 640, elements: !2434)
!2433 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2434 = !{!2435, !2443, !2445, !2450, !2451}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2432, file: !2433, line: 13, baseType: !2436, size: 320)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2437, line: 17, size: 320, elements: !2438)
!2437 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2438 = !{!2439, !2440, !2441, !2442}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2436, file: !2437, line: 18, baseType: !174, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2436, file: !2437, line: 19, baseType: !174, size: 32, offset: 32)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2436, file: !2437, line: 20, baseType: !1314, size: 128, offset: 64)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2436, file: !2437, line: 22, baseType: !279, size: 128, align: 64, offset: 192)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2432, file: !2433, line: 14, baseType: !2444, size: 64, offset: 320)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2432, file: !2433, line: 15, baseType: !2446, size: 64, offset: 384)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2447, line: 16, size: 64, elements: !2448)
!2447 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2448 = !{!2449}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2446, file: !2447, line: 17, baseType: !1049, size: 64)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2432, file: !2433, line: 16, baseType: !1314, size: 128, offset: 448)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2432, file: !2433, line: 17, baseType: !660, size: 32, offset: 576)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !510, file: !31, line: 1465, baseType: !109, size: 64, offset: 6400)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !510, file: !31, line: 1468, baseType: !123, size: 32, offset: 6464)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !510, file: !31, line: 1470, baseType: !449, size: 64, offset: 6528)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !510, file: !31, line: 1471, baseType: !449, size: 64, offset: 6592)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !510, file: !31, line: 1473, baseType: !125, size: 32, offset: 6656)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !510, file: !31, line: 1474, baseType: !2458, size: 64, offset: 6720)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 64)
!2459 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !31, line: 603, flags: DIFlagFwdDecl)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !510, file: !31, line: 1477, baseType: !2461, size: 256, offset: 6784)
!2461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 256, elements: !2052)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !510, file: !31, line: 1478, baseType: !2463, size: 128, offset: 7040)
!2463 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2464, line: 18, baseType: !2465)
!2464 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2464, line: 16, size: 128, elements: !2466)
!2466 = !{!2467}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2465, file: !2464, line: 17, baseType: !2468, size: 128)
!2468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1186, size: 128, elements: !1568)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !510, file: !31, line: 1480, baseType: !7, size: 32, offset: 7168)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !510, file: !31, line: 1481, baseType: !2471, size: 32, offset: 7200)
!2471 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !107, line: 150, baseType: !7)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !510, file: !31, line: 1487, baseType: !1006, size: 192, offset: 7232)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !510, file: !31, line: 1493, baseType: !115, size: 64, offset: 7424)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !510, file: !31, line: 1495, baseType: !2475, size: 64, offset: 7488)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 64)
!2476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2477)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !294, line: 135, size: 1024, align: 512, elements: !2478)
!2478 = !{!2479, !2483, !2484, !2491, !2497, !2501, !2505, !2509, !2510, !2514, !2518, !2523, !2527}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2477, file: !294, line: 136, baseType: !2480, size: 64)
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 64)
!2481 = !DISubroutineType(types: !2482)
!2482 = !{!174, !296, !7}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2477, file: !294, line: 137, baseType: !2480, size: 64, offset: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2477, file: !294, line: 138, baseType: !2485, size: 64, offset: 128)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 64)
!2486 = !DISubroutineType(types: !2487)
!2487 = !{!174, !2488, !2490}
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 64)
!2489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !297)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2477, file: !294, line: 139, baseType: !2492, size: 64, offset: 192)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 64)
!2493 = !DISubroutineType(types: !2494)
!2494 = !{!174, !2488, !7, !115, !2495}
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 64)
!2496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !320)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2477, file: !294, line: 141, baseType: !2498, size: 64, offset: 256)
!2498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2499, size: 64)
!2499 = !DISubroutineType(types: !2500)
!2500 = !{!174, !2488}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2477, file: !294, line: 142, baseType: !2502, size: 64, offset: 320)
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 64)
!2503 = !DISubroutineType(types: !2504)
!2504 = !{!174, !296}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2477, file: !294, line: 143, baseType: !2506, size: 64, offset: 384)
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 64)
!2507 = !DISubroutineType(types: !2508)
!2508 = !{null, !296}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2477, file: !294, line: 144, baseType: !2506, size: 64, offset: 448)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2477, file: !294, line: 145, baseType: !2511, size: 64, offset: 512)
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2512, size: 64)
!2512 = !DISubroutineType(types: !2513)
!2513 = !{null, !296, !339}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2477, file: !294, line: 146, baseType: !2515, size: 64, offset: 576)
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2516, size: 64)
!2516 = !DISubroutineType(types: !2517)
!2517 = !{!104, !296, !104, !174}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2477, file: !294, line: 147, baseType: !2519, size: 64, offset: 640)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 64)
!2520 = !DISubroutineType(types: !2521)
!2521 = !{!292, !2522}
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2477, file: !294, line: 148, baseType: !2524, size: 64, offset: 704)
!2524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2525, size: 64)
!2525 = !DISubroutineType(types: !2526)
!2526 = !{!174, !459, !400}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2477, file: !294, line: 149, baseType: !2528, size: 64, offset: 768)
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 64)
!2529 = !DISubroutineType(types: !2530)
!2530 = !{!296, !296, !2531}
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!2532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !340)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !510, file: !31, line: 1500, baseType: !174, size: 32, offset: 7552)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !510, file: !31, line: 1502, baseType: !2535, size: 448, offset: 7616)
!2535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2179, line: 60, size: 448, elements: !2536)
!2536 = !{!2537, !2542, !2543, !2544, !2545, !2546, !2547}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2535, file: !2179, line: 61, baseType: !2538, size: 64)
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 64)
!2539 = !DISubroutineType(types: !2540)
!2540 = !{!108, !2541, !2177}
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2535, size: 64)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2535, file: !2179, line: 63, baseType: !2538, size: 64, offset: 64)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2535, file: !2179, line: 66, baseType: !224, size: 64, offset: 128)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2535, file: !2179, line: 67, baseType: !174, size: 32, offset: 192)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2535, file: !2179, line: 68, baseType: !7, size: 32, offset: 224)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2535, file: !2179, line: 71, baseType: !135, size: 128, offset: 256)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2535, file: !2179, line: 77, baseType: !2548, size: 64, offset: 384)
!2548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !510, file: !31, line: 1505, baseType: !684, size: 64, offset: 8064)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !510, file: !31, line: 1508, baseType: !684, size: 64, offset: 8128)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !510, file: !31, line: 1511, baseType: !174, size: 32, offset: 8192)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !510, file: !31, line: 1514, baseType: !822, size: 32, offset: 8224)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !510, file: !31, line: 1517, baseType: !2554, size: 64, offset: 8256)
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 64)
!2555 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1793, line: 18, flags: DIFlagFwdDecl)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !510, file: !31, line: 1518, baseType: !548, size: 64, offset: 8320)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !510, file: !31, line: 1525, baseType: !1546, size: 64, offset: 8384)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !510, file: !31, line: 1532, baseType: !2559, size: 64, offset: 8448)
!2559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2560, line: 52, size: 64, elements: !2561)
!2560 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2561 = !{!2562}
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2559, file: !2560, line: 53, baseType: !2563, size: 64)
!2563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2564, size: 64)
!2564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2560, line: 40, size: 256, elements: !2565)
!2565 = !{!2566, !2567, !2572}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2564, file: !2560, line: 42, baseType: !148)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2564, file: !2560, line: 44, baseType: !2568, size: 192)
!2568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2560, line: 28, size: 192, elements: !2569)
!2569 = !{!2570, !2571}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2568, file: !2560, line: 29, baseType: !135, size: 128)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2568, file: !2560, line: 31, baseType: !224, size: 64, offset: 128)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2564, file: !2560, line: 49, baseType: !224, size: 64, offset: 192)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !510, file: !31, line: 1533, baseType: !2559, size: 64, offset: 8512)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !510, file: !31, line: 1534, baseType: !279, size: 128, align: 64, offset: 8576)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !510, file: !31, line: 1535, baseType: !1792, size: 256, offset: 8704)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !510, file: !31, line: 1537, baseType: !1006, size: 192, offset: 8960)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !510, file: !31, line: 1542, baseType: !174, size: 32, offset: 9152)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !510, file: !31, line: 1545, baseType: !148, offset: 9184)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !510, file: !31, line: 1546, baseType: !135, size: 128, offset: 9216)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !510, file: !31, line: 1548, baseType: !148, offset: 9344)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !510, file: !31, line: 1549, baseType: !135, size: 128, offset: 9344)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !340, file: !31, line: 624, baseType: !647, size: 64, offset: 256)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !340, file: !31, line: 631, baseType: !108, size: 64, offset: 320)
!2584 = !DIDerivedType(tag: DW_TAG_member, scope: !340, file: !31, line: 639, baseType: !2585, size: 32, offset: 384)
!2585 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !340, file: !31, line: 639, size: 32, elements: !2586)
!2586 = !{!2587, !2588}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2585, file: !31, line: 640, baseType: !119, size: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2585, file: !31, line: 641, baseType: !7, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !340, file: !31, line: 643, baseType: !423, size: 32, offset: 416)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !340, file: !31, line: 644, baseType: !441, size: 64, offset: 448)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !340, file: !31, line: 645, baseType: !445, size: 128, offset: 512)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !340, file: !31, line: 646, baseType: !445, size: 128, offset: 640)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !340, file: !31, line: 647, baseType: !445, size: 128, offset: 768)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !340, file: !31, line: 648, baseType: !148, offset: 896)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !340, file: !31, line: 649, baseType: !231, size: 16, offset: 896)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !340, file: !31, line: 650, baseType: !1185, size: 8, offset: 912)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !340, file: !31, line: 651, baseType: !1185, size: 8, offset: 920)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !340, file: !31, line: 652, baseType: !2351, size: 64, offset: 960)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !340, file: !31, line: 659, baseType: !108, size: 64, offset: 1024)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !340, file: !31, line: 660, baseType: !680, size: 256, offset: 1088)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !340, file: !31, line: 662, baseType: !108, size: 64, offset: 1344)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !340, file: !31, line: 663, baseType: !108, size: 64, offset: 1408)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !340, file: !31, line: 665, baseType: !552, size: 128, offset: 1472)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !340, file: !31, line: 666, baseType: !135, size: 128, offset: 1600)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !340, file: !31, line: 675, baseType: !135, size: 128, offset: 1728)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !340, file: !31, line: 676, baseType: !135, size: 128, offset: 1856)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !340, file: !31, line: 677, baseType: !135, size: 128, offset: 1984)
!2608 = !DIDerivedType(tag: DW_TAG_member, scope: !340, file: !31, line: 678, baseType: !2609, size: 128, offset: 2112)
!2609 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !340, file: !31, line: 678, size: 128, elements: !2610)
!2610 = !{!2611, !2612}
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2609, file: !31, line: 679, baseType: !548, size: 64)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2609, file: !31, line: 680, baseType: !279, size: 128, align: 64)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !340, file: !31, line: 682, baseType: !686, size: 64, offset: 2240)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !340, file: !31, line: 683, baseType: !686, size: 64, offset: 2304)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !340, file: !31, line: 684, baseType: !660, size: 32, offset: 2368)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !340, file: !31, line: 685, baseType: !660, size: 32, offset: 2400)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !340, file: !31, line: 686, baseType: !660, size: 32, offset: 2432)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !340, file: !31, line: 688, baseType: !660, size: 32, offset: 2464)
!2619 = !DIDerivedType(tag: DW_TAG_member, scope: !340, file: !31, line: 690, baseType: !2620, size: 64, offset: 2496)
!2620 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !340, file: !31, line: 690, size: 64, elements: !2621)
!2621 = !{!2622, !2845}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2620, file: !31, line: 691, baseType: !2623, size: 64)
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2624, size: 64)
!2624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2625)
!2625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !31, line: 1822, size: 2048, elements: !2626)
!2626 = !{!2627, !2628, !2632, !2637, !2641, !2642, !2643, !2647, !2660, !2661, !2669, !2673, !2674, !2678, !2679, !2683, !2688, !2689, !2693, !2697, !2805, !2809, !2810, !2814, !2815, !2819, !2823, !2828, !2832, !2836, !2840, !2844}
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2625, file: !31, line: 1823, baseType: !543, size: 64)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2625, file: !31, line: 1824, baseType: !2629, size: 64, offset: 64)
!2629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2630, size: 64)
!2630 = !DISubroutineType(types: !2631)
!2631 = !{!441, !266, !441, !174}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2625, file: !31, line: 1825, baseType: !2633, size: 64, offset: 128)
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 64)
!2634 = !DISubroutineType(types: !2635)
!2635 = !{!220, !266, !104, !236, !2636}
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2625, file: !31, line: 1826, baseType: !2638, size: 64, offset: 192)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 64)
!2639 = !DISubroutineType(types: !2640)
!2640 = !{!220, !266, !115, !236, !2636}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2625, file: !31, line: 1827, baseType: !757, size: 64, offset: 256)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2625, file: !31, line: 1828, baseType: !757, size: 64, offset: 320)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2625, file: !31, line: 1829, baseType: !2644, size: 64, offset: 384)
!2644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2645, size: 64)
!2645 = !DISubroutineType(types: !2646)
!2646 = !{!174, !760, !400}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2625, file: !31, line: 1830, baseType: !2648, size: 64, offset: 448)
!2648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2649, size: 64)
!2649 = !DISubroutineType(types: !2650)
!2650 = !{!174, !266, !2651}
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 64)
!2652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !31, line: 1776, size: 128, elements: !2653)
!2653 = !{!2654, !2659}
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2652, file: !31, line: 1777, baseType: !2655, size: 64)
!2655 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !31, line: 1773, baseType: !2656)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 64)
!2657 = !DISubroutineType(types: !2658)
!2658 = !{!174, !2651, !115, !174, !441, !331, !7}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2652, file: !31, line: 1778, baseType: !441, size: 64, offset: 64)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2625, file: !31, line: 1831, baseType: !2648, size: 64, offset: 512)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2625, file: !31, line: 1832, baseType: !2662, size: 64, offset: 576)
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 64)
!2663 = !DISubroutineType(types: !2664)
!2664 = !{!2665, !266, !2667}
!2665 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2666, line: 52, baseType: !7)
!2666 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2668, size: 64)
!2668 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !529, line: 27, flags: DIFlagFwdDecl)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2625, file: !31, line: 1833, baseType: !2670, size: 64, offset: 640)
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 64)
!2671 = !DISubroutineType(types: !2672)
!2672 = !{!224, !266, !7, !108}
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2625, file: !31, line: 1834, baseType: !2670, size: 64, offset: 704)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2625, file: !31, line: 1835, baseType: !2675, size: 64, offset: 768)
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 64)
!2676 = !DISubroutineType(types: !2677)
!2677 = !{!174, !266, !894}
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2625, file: !31, line: 1836, baseType: !108, size: 64, offset: 832)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2625, file: !31, line: 1837, baseType: !2680, size: 64, offset: 896)
!2680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2681, size: 64)
!2681 = !DISubroutineType(types: !2682)
!2682 = !{!174, !339, !266}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2625, file: !31, line: 1838, baseType: !2684, size: 64, offset: 960)
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 64)
!2685 = !DISubroutineType(types: !2686)
!2686 = !{!174, !266, !2687}
!2687 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !31, line: 1007, baseType: !109)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2625, file: !31, line: 1839, baseType: !2680, size: 64, offset: 1024)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2625, file: !31, line: 1840, baseType: !2690, size: 64, offset: 1088)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 64)
!2691 = !DISubroutineType(types: !2692)
!2692 = !{!174, !266, !441, !441, !174}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2625, file: !31, line: 1841, baseType: !2694, size: 64, offset: 1152)
!2694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2695, size: 64)
!2695 = !DISubroutineType(types: !2696)
!2696 = !{!174, !174, !266, !174}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2625, file: !31, line: 1842, baseType: !2698, size: 64, offset: 1216)
!2698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2699, size: 64)
!2699 = !DISubroutineType(types: !2700)
!2700 = !{!174, !266, !174, !2701}
!2701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2702, size: 64)
!2702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !31, line: 1062, size: 1664, elements: !2703)
!2703 = !{!2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2735, !2736, !2737, !2750, !2781}
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !2702, file: !31, line: 1063, baseType: !2701, size: 64)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !2702, file: !31, line: 1064, baseType: !135, size: 128, offset: 64)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !2702, file: !31, line: 1065, baseType: !552, size: 128, offset: 192)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !2702, file: !31, line: 1066, baseType: !135, size: 128, offset: 320)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !2702, file: !31, line: 1069, baseType: !135, size: 128, offset: 448)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !2702, file: !31, line: 1072, baseType: !2687, size: 64, offset: 576)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !2702, file: !31, line: 1073, baseType: !7, size: 32, offset: 640)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !2702, file: !31, line: 1074, baseType: !337, size: 8, offset: 672)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !2702, file: !31, line: 1075, baseType: !7, size: 32, offset: 704)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !2702, file: !31, line: 1076, baseType: !174, size: 32, offset: 736)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !2702, file: !31, line: 1077, baseType: !1314, size: 128, offset: 768)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !2702, file: !31, line: 1078, baseType: !266, size: 64, offset: 896)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !2702, file: !31, line: 1079, baseType: !441, size: 64, offset: 960)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !2702, file: !31, line: 1080, baseType: !441, size: 64, offset: 1024)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !2702, file: !31, line: 1082, baseType: !2719, size: 64, offset: 1088)
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 64)
!2720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !31, line: 1314, size: 320, elements: !2721)
!2721 = !{!2722, !2730, !2731, !2732, !2733, !2734}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !2720, file: !31, line: 1315, baseType: !2723)
!2723 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2724, line: 20, baseType: !2725)
!2724 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2725 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2724, line: 11, elements: !2726)
!2726 = !{!2727}
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2725, file: !2724, line: 12, baseType: !2728)
!2728 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !160, line: 33, baseType: !2729)
!2729 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !160, line: 31, elements: !162)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2720, file: !31, line: 1316, baseType: !174, size: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !2720, file: !31, line: 1317, baseType: !174, size: 32, offset: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !2720, file: !31, line: 1318, baseType: !2719, size: 64, offset: 64)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !2720, file: !31, line: 1319, baseType: !266, size: 64, offset: 128)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !2720, file: !31, line: 1320, baseType: !279, size: 128, align: 64, offset: 192)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !2702, file: !31, line: 1084, baseType: !108, size: 64, offset: 1152)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !2702, file: !31, line: 1085, baseType: !108, size: 64, offset: 1216)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !2702, file: !31, line: 1087, baseType: !2738, size: 64, offset: 1280)
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2739, size: 64)
!2739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2740)
!2740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !31, line: 1011, size: 128, elements: !2741)
!2741 = !{!2742, !2746}
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !2740, file: !31, line: 1012, baseType: !2743, size: 64)
!2743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2744, size: 64)
!2744 = !DISubroutineType(types: !2745)
!2745 = !{null, !2701, !2701}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !2740, file: !31, line: 1013, baseType: !2747, size: 64, offset: 64)
!2747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2748, size: 64)
!2748 = !DISubroutineType(types: !2749)
!2749 = !{null, !2701}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !2702, file: !31, line: 1088, baseType: !2751, size: 64, offset: 1344)
!2751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2752, size: 64)
!2752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2753)
!2753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !31, line: 1016, size: 512, elements: !2754)
!2754 = !{!2755, !2759, !2763, !2764, !2768, !2772, !2776, !2780}
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !2753, file: !31, line: 1017, baseType: !2756, size: 64)
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2757, size: 64)
!2757 = !DISubroutineType(types: !2758)
!2758 = !{!2687, !2687}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !2753, file: !31, line: 1018, baseType: !2760, size: 64, offset: 64)
!2760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2761, size: 64)
!2761 = !DISubroutineType(types: !2762)
!2762 = !{null, !2687}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !2753, file: !31, line: 1019, baseType: !2747, size: 64, offset: 128)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !2753, file: !31, line: 1020, baseType: !2765, size: 64, offset: 192)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 64)
!2766 = !DISubroutineType(types: !2767)
!2767 = !{!174, !2701, !174}
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !2753, file: !31, line: 1021, baseType: !2769, size: 64, offset: 256)
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2770, size: 64)
!2770 = !DISubroutineType(types: !2771)
!2771 = !{!400, !2701}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !2753, file: !31, line: 1022, baseType: !2773, size: 64, offset: 320)
!2773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2774, size: 64)
!2774 = !DISubroutineType(types: !2775)
!2775 = !{!174, !2701, !174, !138}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !2753, file: !31, line: 1023, baseType: !2777, size: 64, offset: 384)
!2777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2778, size: 64)
!2778 = !DISubroutineType(types: !2779)
!2779 = !{null, !2701, !734}
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !2753, file: !31, line: 1024, baseType: !2769, size: 64, offset: 448)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !2702, file: !31, line: 1097, baseType: !2782, size: 256, offset: 1408)
!2782 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2702, file: !31, line: 1089, size: 256, elements: !2783)
!2783 = !{!2784, !2793, !2799}
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !2782, file: !31, line: 1090, baseType: !2785, size: 256)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !2786, line: 10, size: 256, elements: !2787)
!2786 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!2787 = !{!2788, !2789, !2792}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2785, file: !2786, line: 11, baseType: !123, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2785, file: !2786, line: 12, baseType: !2790, size: 64, offset: 64)
!2790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2791, size: 64)
!2791 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !2786, line: 5, flags: DIFlagFwdDecl)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2785, file: !2786, line: 13, baseType: !135, size: 128, offset: 128)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !2782, file: !31, line: 1091, baseType: !2794, size: 64)
!2794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !2786, line: 17, size: 64, elements: !2795)
!2795 = !{!2796}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2794, file: !2786, line: 18, baseType: !2797, size: 64)
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2798, size: 64)
!2798 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !2786, line: 16, flags: DIFlagFwdDecl)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !2782, file: !31, line: 1096, baseType: !2800, size: 192)
!2800 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2782, file: !31, line: 1092, size: 192, elements: !2801)
!2801 = !{!2802, !2803, !2804}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !2800, file: !31, line: 1093, baseType: !135, size: 128)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2800, file: !31, line: 1094, baseType: !174, size: 32, offset: 128)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !2800, file: !31, line: 1095, baseType: !7, size: 32, offset: 160)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2625, file: !31, line: 1843, baseType: !2806, size: 64, offset: 1280)
!2806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2807, size: 64)
!2807 = !DISubroutineType(types: !2808)
!2808 = !{!220, !266, !634, !174, !236, !2636, !174}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2625, file: !31, line: 1844, baseType: !934, size: 64, offset: 1344)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2625, file: !31, line: 1845, baseType: !2811, size: 64, offset: 1408)
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2812, size: 64)
!2812 = !DISubroutineType(types: !2813)
!2813 = !{!174, !174}
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2625, file: !31, line: 1846, baseType: !2698, size: 64, offset: 1472)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2625, file: !31, line: 1847, baseType: !2816, size: 64, offset: 1536)
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2817 = !DISubroutineType(types: !2818)
!2818 = !{!220, !1933, !266, !2636, !236, !7}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2625, file: !31, line: 1848, baseType: !2820, size: 64, offset: 1600)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64)
!2821 = !DISubroutineType(types: !2822)
!2822 = !{!220, !266, !2636, !1933, !236, !7}
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2625, file: !31, line: 1849, baseType: !2824, size: 64, offset: 1664)
!2824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2825, size: 64)
!2825 = !DISubroutineType(types: !2826)
!2826 = !{!174, !266, !224, !2827, !734}
!2827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2701, size: 64)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2625, file: !31, line: 1850, baseType: !2829, size: 64, offset: 1728)
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 64)
!2830 = !DISubroutineType(types: !2831)
!2831 = !{!224, !266, !174, !441, !441}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2625, file: !31, line: 1852, baseType: !2833, size: 64, offset: 1792)
!2833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2834, size: 64)
!2834 = !DISubroutineType(types: !2835)
!2835 = !{null, !624, !266}
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2625, file: !31, line: 1856, baseType: !2837, size: 64, offset: 1856)
!2837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2838, size: 64)
!2838 = !DISubroutineType(types: !2839)
!2839 = !{!220, !266, !441, !266, !441, !236, !7}
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2625, file: !31, line: 1858, baseType: !2841, size: 64, offset: 1920)
!2841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2842, size: 64)
!2842 = !DISubroutineType(types: !2843)
!2843 = !{!441, !266, !441, !266, !441, !441, !7}
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2625, file: !31, line: 1861, baseType: !2690, size: 64, offset: 1984)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2620, file: !31, line: 692, baseType: !577, size: 64)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !340, file: !31, line: 694, baseType: !2847, size: 64, offset: 2560)
!2847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2848, size: 64)
!2848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !31, line: 1100, size: 384, elements: !2849)
!2849 = !{!2850, !2851, !2852, !2853}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !2848, file: !31, line: 1101, baseType: !148)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !2848, file: !31, line: 1102, baseType: !135, size: 128)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !2848, file: !31, line: 1103, baseType: !135, size: 128, offset: 128)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !2848, file: !31, line: 1104, baseType: !135, size: 128, offset: 256)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !340, file: !31, line: 695, baseType: !648, size: 1216, align: 64, offset: 2624)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !340, file: !31, line: 696, baseType: !135, size: 128, offset: 3840)
!2856 = !DIDerivedType(tag: DW_TAG_member, scope: !340, file: !31, line: 697, baseType: !2857, size: 64, offset: 3968)
!2857 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !340, file: !31, line: 697, size: 64, elements: !2858)
!2858 = !{!2859, !2860, !2861, !2864, !2865}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !2857, file: !31, line: 698, baseType: !1933, size: 64)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !2857, file: !31, line: 699, baseType: !2376, size: 64)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !2857, file: !31, line: 700, baseType: !2862, size: 64)
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 64)
!2863 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !31, line: 700, flags: DIFlagFwdDecl)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !2857, file: !31, line: 701, baseType: !104, size: 64)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !2857, file: !31, line: 702, baseType: !7, size: 32)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !340, file: !31, line: 705, baseType: !125, size: 32, offset: 4032)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !340, file: !31, line: 708, baseType: !125, size: 32, offset: 4064)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !340, file: !31, line: 709, baseType: !2458, size: 64, offset: 4096)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !340, file: !31, line: 720, baseType: !109, size: 64, offset: 4160)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !297, file: !294, line: 98, baseType: !2871, size: 256, offset: 448)
!2871 = !DICompositeType(tag: DW_TAG_array_type, baseType: !337, size: 256, elements: !2052)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !297, file: !294, line: 101, baseType: !2873, size: 32, offset: 704)
!2873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !2874, line: 25, size: 32, elements: !2875)
!2874 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!2875 = !{!2876}
!2876 = !DIDerivedType(tag: DW_TAG_member, scope: !2873, file: !2874, line: 26, baseType: !2877, size: 32)
!2877 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2873, file: !2874, line: 26, size: 32, elements: !2878)
!2878 = !{!2879}
!2879 = !DIDerivedType(tag: DW_TAG_member, scope: !2877, file: !2874, line: 30, baseType: !2880, size: 32)
!2880 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2877, file: !2874, line: 30, size: 32, elements: !2881)
!2881 = !{!2882, !2883}
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2880, file: !2874, line: 31, baseType: !148)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2880, file: !2874, line: 32, baseType: !174, size: 32)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !297, file: !294, line: 102, baseType: !2475, size: 64, offset: 768)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !297, file: !294, line: 103, baseType: !509, size: 64, offset: 832)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !297, file: !294, line: 104, baseType: !108, size: 64, offset: 896)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !297, file: !294, line: 105, baseType: !109, size: 64, offset: 960)
!2888 = !DIDerivedType(tag: DW_TAG_member, scope: !297, file: !294, line: 107, baseType: !2889, size: 128, offset: 1024)
!2889 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !297, file: !294, line: 107, size: 128, elements: !2890)
!2890 = !{!2891, !2892}
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !2889, file: !294, line: 108, baseType: !135, size: 128)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !2889, file: !294, line: 109, baseType: !2893, size: 64)
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 64)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !297, file: !294, line: 111, baseType: !135, size: 128, offset: 1152)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !297, file: !294, line: 112, baseType: !135, size: 128, offset: 1280)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !297, file: !294, line: 120, baseType: !2897, size: 128, offset: 1408)
!2897 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !297, file: !294, line: 116, size: 128, elements: !2898)
!2898 = !{!2899, !2900, !2901}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !2897, file: !294, line: 117, baseType: !552, size: 128)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !2897, file: !294, line: 118, baseType: !311, size: 128)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !2897, file: !294, line: 119, baseType: !279, size: 128, align: 64)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !267, file: !31, line: 922, baseType: !339, size: 64, offset: 256)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !267, file: !31, line: 923, baseType: !2623, size: 64, offset: 320)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !267, file: !31, line: 929, baseType: !148, offset: 384)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !267, file: !31, line: 930, baseType: !30, size: 32, offset: 384)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !267, file: !31, line: 931, baseType: !684, size: 64, offset: 448)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !267, file: !31, line: 932, baseType: !7, size: 32, offset: 512)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !267, file: !31, line: 933, baseType: !2471, size: 32, offset: 544)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !267, file: !31, line: 934, baseType: !1006, size: 192, offset: 576)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !267, file: !31, line: 935, baseType: !441, size: 64, offset: 768)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !267, file: !31, line: 936, baseType: !2912, size: 192, offset: 832)
!2912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !31, line: 885, size: 192, elements: !2913)
!2913 = !{!2914, !2915, !2916, !2917, !2918, !2919}
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2912, file: !31, line: 886, baseType: !2723)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2912, file: !31, line: 887, baseType: !1304, size: 64)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !2912, file: !31, line: 888, baseType: !39, size: 32, offset: 64)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2912, file: !31, line: 889, baseType: !345, size: 32, offset: 96)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2912, file: !31, line: 889, baseType: !345, size: 32, offset: 128)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !2912, file: !31, line: 890, baseType: !174, size: 32, offset: 160)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !267, file: !31, line: 937, baseType: !1380, size: 64, offset: 1024)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !267, file: !31, line: 938, baseType: !2922, size: 256, offset: 1088)
!2922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !31, line: 896, size: 256, elements: !2923)
!2923 = !{!2924, !2925, !2926, !2927, !2928, !2929}
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2922, file: !31, line: 897, baseType: !108, size: 64)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2922, file: !31, line: 898, baseType: !7, size: 32, offset: 64)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !2922, file: !31, line: 899, baseType: !7, size: 32, offset: 96)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !2922, file: !31, line: 902, baseType: !7, size: 32, offset: 128)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !2922, file: !31, line: 903, baseType: !7, size: 32, offset: 160)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !2922, file: !31, line: 904, baseType: !441, size: 64, offset: 192)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !267, file: !31, line: 940, baseType: !331, size: 64, offset: 1344)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !267, file: !31, line: 945, baseType: !109, size: 64, offset: 1408)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !267, file: !31, line: 949, baseType: !135, size: 128, offset: 1472)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !267, file: !31, line: 950, baseType: !135, size: 128, offset: 1600)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !267, file: !31, line: 952, baseType: !647, size: 64, offset: 1728)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !267, file: !31, line: 953, baseType: !822, size: 32, offset: 1792)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !267, file: !31, line: 954, baseType: !822, size: 32, offset: 1824)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !257, file: !214, line: 174, baseType: !263, size: 64, offset: 320)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !257, file: !214, line: 176, baseType: !2939, size: 64, offset: 384)
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 64)
!2940 = !DISubroutineType(types: !2941)
!2941 = !{!174, !266, !141, !256, !894}
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !245, file: !214, line: 90, baseType: !240, size: 64, offset: 192)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !245, file: !214, line: 91, baseType: !2944, size: 64, offset: 256)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !204, file: !81, line: 143, baseType: !2946, size: 64, offset: 256)
!2946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2947, size: 64)
!2947 = !DISubroutineType(types: !2948)
!2948 = !{!2949, !141}
!2949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2950, size: 64)
!2950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2951)
!2951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !48, line: 39, size: 384, elements: !2952)
!2952 = !{!2953, !2954, !2958, !2962, !2970, !2974}
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2951, file: !48, line: 40, baseType: !47, size: 32)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !2951, file: !48, line: 41, baseType: !2955, size: 64, offset: 64)
!2955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2956, size: 64)
!2956 = !DISubroutineType(types: !2957)
!2957 = !{!400}
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !2951, file: !48, line: 42, baseType: !2959, size: 64, offset: 128)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 64)
!2960 = !DISubroutineType(types: !2961)
!2961 = !{!109}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !2951, file: !48, line: 43, baseType: !2963, size: 64, offset: 192)
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 64)
!2964 = !DISubroutineType(types: !2965)
!2965 = !{!2966, !2968}
!2966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 64)
!2967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2969, size: 64)
!2969 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !48, line: 19, flags: DIFlagFwdDecl)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !2951, file: !48, line: 44, baseType: !2971, size: 64, offset: 256)
!2971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2972, size: 64)
!2972 = !DISubroutineType(types: !2973)
!2973 = !{!2966}
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !2951, file: !48, line: 45, baseType: !378, size: 64, offset: 320)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !204, file: !81, line: 144, baseType: !2976, size: 64, offset: 320)
!2976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2977, size: 64)
!2977 = !DISubroutineType(types: !2978)
!2978 = !{!2966, !141}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !204, file: !81, line: 145, baseType: !2980, size: 64, offset: 384)
!2980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2981, size: 64)
!2981 = !DISubroutineType(types: !2982)
!2982 = !{null, !141, !2983, !2984}
!2983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!2984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !131, file: !81, line: 70, baseType: !2986, size: 64, offset: 384)
!2986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2987, size: 64)
!2987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !529, line: 123, size: 1024, elements: !2988)
!2988 = !{!2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !3117, !3118, !3119, !3120, !3121}
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2987, file: !529, line: 124, baseType: !660, size: 32)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2987, file: !529, line: 125, baseType: !660, size: 32, offset: 32)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2987, file: !529, line: 135, baseType: !2986, size: 64, offset: 64)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2987, file: !529, line: 136, baseType: !115, size: 64, offset: 128)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2987, file: !529, line: 138, baseType: !673, size: 192, align: 64, offset: 192)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2987, file: !529, line: 140, baseType: !2966, size: 64, offset: 384)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2987, file: !529, line: 141, baseType: !7, size: 32, offset: 448)
!2996 = !DIDerivedType(tag: DW_TAG_member, scope: !2987, file: !529, line: 142, baseType: !2997, size: 256, offset: 512)
!2997 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2987, file: !529, line: 142, size: 256, elements: !2998)
!2998 = !{!2999, !3045, !3049}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2997, file: !529, line: 143, baseType: !3000, size: 192)
!3000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !529, line: 91, size: 192, elements: !3001)
!3001 = !{!3002, !3003, !3004}
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3000, file: !529, line: 92, baseType: !108, size: 64)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3000, file: !529, line: 94, baseType: !669, size: 64, offset: 64)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3000, file: !529, line: 100, baseType: !3005, size: 64, offset: 128)
!3005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3006, size: 64)
!3006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !529, line: 180, size: 704, elements: !3007)
!3007 = !{!3008, !3009, !3010, !3017, !3018, !3019, !3043, !3044}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3006, file: !529, line: 182, baseType: !2986, size: 64)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3006, file: !529, line: 183, baseType: !7, size: 32, offset: 64)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3006, file: !529, line: 186, baseType: !3011, size: 192, offset: 128)
!3011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3012, line: 19, size: 192, elements: !3013)
!3012 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3013 = !{!3014, !3015, !3016}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3011, file: !3012, line: 20, baseType: !652, size: 128)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3011, file: !3012, line: 21, baseType: !7, size: 32, offset: 128)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3011, file: !3012, line: 22, baseType: !7, size: 32, offset: 160)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3006, file: !529, line: 187, baseType: !123, size: 32, offset: 320)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3006, file: !529, line: 188, baseType: !123, size: 32, offset: 352)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3006, file: !529, line: 189, baseType: !3020, size: 64, offset: 384)
!3020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3021, size: 64)
!3021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !529, line: 168, size: 320, elements: !3022)
!3022 = !{!3023, !3027, !3031, !3035, !3039}
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3021, file: !529, line: 169, baseType: !3024, size: 64)
!3024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3025, size: 64)
!3025 = !DISubroutineType(types: !3026)
!3026 = !{!174, !624, !3005}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3021, file: !529, line: 171, baseType: !3028, size: 64, offset: 64)
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = !DISubroutineType(types: !3030)
!3030 = !{!174, !2986, !115, !230}
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3021, file: !529, line: 173, baseType: !3032, size: 64, offset: 128)
!3032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 64)
!3033 = !DISubroutineType(types: !3034)
!3034 = !{!174, !2986}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3021, file: !529, line: 174, baseType: !3036, size: 64, offset: 192)
!3036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3037, size: 64)
!3037 = !DISubroutineType(types: !3038)
!3038 = !{!174, !2986, !2986, !115}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3021, file: !529, line: 176, baseType: !3040, size: 64, offset: 256)
!3040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3041, size: 64)
!3041 = !DISubroutineType(types: !3042)
!3042 = !{!174, !624, !2986, !3005}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3006, file: !529, line: 192, baseType: !135, size: 128, offset: 448)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3006, file: !529, line: 194, baseType: !1314, size: 128, offset: 576)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !2997, file: !529, line: 144, baseType: !3046, size: 64)
!3046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !529, line: 103, size: 64, elements: !3047)
!3047 = !{!3048}
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3046, file: !529, line: 104, baseType: !2986, size: 64)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2997, file: !529, line: 145, baseType: !3050, size: 256)
!3050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !529, line: 107, size: 256, elements: !3051)
!3051 = !{!3052, !3112, !3115, !3116}
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3050, file: !529, line: 108, baseType: !3053, size: 64)
!3053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3054, size: 64)
!3054 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3055)
!3055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !529, line: 217, size: 768, elements: !3056)
!3056 = !{!3057, !3077, !3081, !3085, !3089, !3093, !3097, !3101, !3102, !3103, !3104, !3108}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3055, file: !529, line: 222, baseType: !3058, size: 64)
!3058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3059, size: 64)
!3059 = !DISubroutineType(types: !3060)
!3060 = !{!174, !3061}
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 64)
!3062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !529, line: 197, size: 1088, elements: !3063)
!3063 = !{!3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076}
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3062, file: !529, line: 199, baseType: !2986, size: 64)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3062, file: !529, line: 200, baseType: !266, size: 64, offset: 64)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3062, file: !529, line: 201, baseType: !624, size: 64, offset: 128)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3062, file: !529, line: 202, baseType: !109, size: 64, offset: 192)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3062, file: !529, line: 205, baseType: !1006, size: 192, offset: 256)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3062, file: !529, line: 206, baseType: !1006, size: 192, offset: 448)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3062, file: !529, line: 207, baseType: !174, size: 32, offset: 640)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3062, file: !529, line: 208, baseType: !135, size: 128, offset: 704)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3062, file: !529, line: 209, baseType: !104, size: 64, offset: 832)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3062, file: !529, line: 211, baseType: !236, size: 64, offset: 896)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3062, file: !529, line: 212, baseType: !400, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3062, file: !529, line: 213, baseType: !400, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3062, file: !529, line: 214, baseType: !922, size: 64, offset: 1024)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3055, file: !529, line: 223, baseType: !3078, size: 64, offset: 64)
!3078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3079, size: 64)
!3079 = !DISubroutineType(types: !3080)
!3080 = !{null, !3061}
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3055, file: !529, line: 236, baseType: !3082, size: 64, offset: 128)
!3082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3083, size: 64)
!3083 = !DISubroutineType(types: !3084)
!3084 = !{!174, !624, !109}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3055, file: !529, line: 238, baseType: !3086, size: 64, offset: 192)
!3086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3087, size: 64)
!3087 = !DISubroutineType(types: !3088)
!3088 = !{!109, !624, !2636}
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3055, file: !529, line: 239, baseType: !3090, size: 64, offset: 256)
!3090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3091, size: 64)
!3091 = !DISubroutineType(types: !3092)
!3092 = !{!109, !624, !109, !2636}
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3055, file: !529, line: 240, baseType: !3094, size: 64, offset: 320)
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3095, size: 64)
!3095 = !DISubroutineType(types: !3096)
!3096 = !{null, !624, !109}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3055, file: !529, line: 242, baseType: !3098, size: 64, offset: 384)
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3099, size: 64)
!3099 = !DISubroutineType(types: !3100)
!3100 = !{!220, !3061, !104, !236, !441}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3055, file: !529, line: 252, baseType: !236, size: 64, offset: 448)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3055, file: !529, line: 259, baseType: !400, size: 8, offset: 512)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3055, file: !529, line: 260, baseType: !3098, size: 64, offset: 576)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3055, file: !529, line: 263, baseType: !3105, size: 64, offset: 640)
!3105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3106, size: 64)
!3106 = !DISubroutineType(types: !3107)
!3107 = !{!2665, !3061, !2667}
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3055, file: !529, line: 266, baseType: !3109, size: 64, offset: 704)
!3109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3110, size: 64)
!3110 = !DISubroutineType(types: !3111)
!3111 = !{!174, !3061, !894}
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3050, file: !529, line: 109, baseType: !3113, size: 64, offset: 64)
!3113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3114, size: 64)
!3114 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !529, line: 31, flags: DIFlagFwdDecl)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3050, file: !529, line: 110, baseType: !441, size: 64, offset: 128)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3050, file: !529, line: 111, baseType: !2986, size: 64, offset: 192)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2987, file: !529, line: 148, baseType: !109, size: 64, offset: 768)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2987, file: !529, line: 154, baseType: !331, size: 64, offset: 832)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2987, file: !529, line: 156, baseType: !231, size: 16, offset: 896)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2987, file: !529, line: 157, baseType: !230, size: 16, offset: 912)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !2987, file: !529, line: 158, baseType: !3122, size: 64, offset: 960)
!3122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3123, size: 64)
!3123 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !529, line: 32, flags: DIFlagFwdDecl)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !131, file: !81, line: 71, baseType: !3125, size: 32, offset: 448)
!3125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3126, line: 19, size: 32, elements: !3127)
!3126 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3127 = !{!3128}
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3125, file: !3126, line: 20, baseType: !1063, size: 32)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !131, file: !81, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !131, file: !81, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !131, file: !81, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !131, file: !81, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !131, file: !81, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !128, file: !60, line: 463, baseType: !3135, size: 64, offset: 512)
!3135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 64)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !128, file: !60, line: 465, baseType: !3137, size: 64, offset: 576)
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3138, size: 64)
!3138 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !60, line: 36, flags: DIFlagFwdDecl)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !128, file: !60, line: 467, baseType: !115, size: 64, offset: 640)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !128, file: !60, line: 468, baseType: !3141, size: 64, offset: 704)
!3141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 64)
!3142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3143)
!3143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !60, line: 87, size: 384, elements: !3144)
!3144 = !{!3145, !3146, !3147, !3151, !3156, !3160}
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3143, file: !60, line: 88, baseType: !115, size: 64)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3143, file: !60, line: 89, baseType: !242, size: 64, offset: 64)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3143, file: !60, line: 90, baseType: !3148, size: 64, offset: 128)
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 64)
!3149 = !DISubroutineType(types: !3150)
!3150 = !{!174, !3135, !185}
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3143, file: !60, line: 91, baseType: !3152, size: 64, offset: 192)
!3152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3153, size: 64)
!3153 = !DISubroutineType(types: !3154)
!3154 = !{!104, !3135, !3155, !2983, !2984}
!3155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3143, file: !60, line: 93, baseType: !3157, size: 64, offset: 256)
!3157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3158, size: 64)
!3158 = !DISubroutineType(types: !3159)
!3159 = !{null, !3135}
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3143, file: !60, line: 95, baseType: !3161, size: 64, offset: 320)
!3161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3162, size: 64)
!3162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3163)
!3163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !67, line: 278, size: 1472, elements: !3164)
!3164 = !{!3165, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190}
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3163, file: !67, line: 279, baseType: !3166, size: 64)
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3167, size: 64)
!3167 = !DISubroutineType(types: !3168)
!3168 = !{!174, !3135}
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3163, file: !67, line: 280, baseType: !3157, size: 64, offset: 64)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3163, file: !67, line: 281, baseType: !3166, size: 64, offset: 128)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3163, file: !67, line: 282, baseType: !3166, size: 64, offset: 192)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3163, file: !67, line: 283, baseType: !3166, size: 64, offset: 256)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3163, file: !67, line: 284, baseType: !3166, size: 64, offset: 320)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3163, file: !67, line: 285, baseType: !3166, size: 64, offset: 384)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3163, file: !67, line: 286, baseType: !3166, size: 64, offset: 448)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3163, file: !67, line: 287, baseType: !3166, size: 64, offset: 512)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3163, file: !67, line: 288, baseType: !3166, size: 64, offset: 576)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3163, file: !67, line: 289, baseType: !3166, size: 64, offset: 640)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3163, file: !67, line: 290, baseType: !3166, size: 64, offset: 704)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3163, file: !67, line: 291, baseType: !3166, size: 64, offset: 768)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3163, file: !67, line: 292, baseType: !3166, size: 64, offset: 832)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3163, file: !67, line: 293, baseType: !3166, size: 64, offset: 896)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3163, file: !67, line: 294, baseType: !3166, size: 64, offset: 960)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3163, file: !67, line: 295, baseType: !3166, size: 64, offset: 1024)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3163, file: !67, line: 296, baseType: !3166, size: 64, offset: 1088)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3163, file: !67, line: 297, baseType: !3166, size: 64, offset: 1152)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3163, file: !67, line: 298, baseType: !3166, size: 64, offset: 1216)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3163, file: !67, line: 299, baseType: !3166, size: 64, offset: 1280)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3163, file: !67, line: 300, baseType: !3166, size: 64, offset: 1344)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3163, file: !67, line: 301, baseType: !3166, size: 64, offset: 1408)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !128, file: !60, line: 470, baseType: !3192, size: 64, offset: 768)
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64)
!3193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3194, line: 82, size: 1408, elements: !3195)
!3194 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3195 = !{!3196, !3197, !3198, !3199, !3200, !3201, !3202, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3277, !3280, !3281}
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3193, file: !3194, line: 83, baseType: !115, size: 64)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3193, file: !3194, line: 84, baseType: !115, size: 64, offset: 64)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3193, file: !3194, line: 85, baseType: !3135, size: 64, offset: 128)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3193, file: !3194, line: 86, baseType: !242, size: 64, offset: 192)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3193, file: !3194, line: 87, baseType: !242, size: 64, offset: 256)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3193, file: !3194, line: 88, baseType: !242, size: 64, offset: 320)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3193, file: !3194, line: 90, baseType: !3203, size: 64, offset: 384)
!3203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3204, size: 64)
!3204 = !DISubroutineType(types: !3205)
!3205 = !{!174, !3135, !3206}
!3206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3207, size: 64)
!3207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !54, line: 95, size: 1152, elements: !3208)
!3208 = !{!3209, !3210, !3211, !3212, !3213, !3214, !3215, !3228, !3241, !3242, !3243, !3244, !3245, !3253, !3254, !3255, !3256, !3257, !3258}
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3207, file: !54, line: 96, baseType: !115, size: 64)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3207, file: !54, line: 97, baseType: !3192, size: 64, offset: 64)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3207, file: !54, line: 99, baseType: !543, size: 64, offset: 128)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3207, file: !54, line: 100, baseType: !115, size: 64, offset: 192)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3207, file: !54, line: 102, baseType: !400, size: 8, offset: 256)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3207, file: !54, line: 103, baseType: !53, size: 32, offset: 288)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3207, file: !54, line: 105, baseType: !3216, size: 64, offset: 320)
!3216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3217, size: 64)
!3217 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3218)
!3218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3219, line: 262, size: 1600, elements: !3220)
!3219 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3220 = !{!3221, !3222, !3223, !3227}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3218, file: !3219, line: 263, baseType: !2461, size: 256)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3218, file: !3219, line: 264, baseType: !2461, size: 256, offset: 256)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3218, file: !3219, line: 265, baseType: !3224, size: 1024, offset: 512)
!3224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 1024, elements: !3225)
!3225 = !{!3226}
!3226 = !DISubrange(count: 128)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3218, file: !3219, line: 266, baseType: !2966, size: 64, offset: 1536)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3207, file: !54, line: 106, baseType: !3229, size: 64, offset: 384)
!3229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3230, size: 64)
!3230 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3231)
!3231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3219, line: 210, size: 256, elements: !3232)
!3232 = !{!3233, !3237, !3239, !3240}
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3231, file: !3219, line: 211, baseType: !3234, size: 72)
!3234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1186, size: 72, elements: !3235)
!3235 = !{!3236}
!3236 = !DISubrange(count: 9)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3231, file: !3219, line: 212, baseType: !3238, size: 64, offset: 128)
!3238 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3219, line: 14, baseType: !108)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3231, file: !3219, line: 213, baseType: !125, size: 32, offset: 192)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3231, file: !3219, line: 214, baseType: !125, size: 32, offset: 224)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3207, file: !54, line: 108, baseType: !3166, size: 64, offset: 448)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3207, file: !54, line: 109, baseType: !3157, size: 64, offset: 512)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3207, file: !54, line: 110, baseType: !3166, size: 64, offset: 576)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3207, file: !54, line: 111, baseType: !3157, size: 64, offset: 640)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3207, file: !54, line: 112, baseType: !3246, size: 64, offset: 704)
!3246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3247, size: 64)
!3247 = !DISubroutineType(types: !3248)
!3248 = !{!174, !3135, !3249}
!3249 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !67, line: 52, baseType: !3250)
!3250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !67, line: 50, size: 32, elements: !3251)
!3251 = !{!3252}
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3250, file: !67, line: 51, baseType: !174, size: 32)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3207, file: !54, line: 113, baseType: !3166, size: 64, offset: 768)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3207, file: !54, line: 114, baseType: !242, size: 64, offset: 832)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3207, file: !54, line: 115, baseType: !242, size: 64, offset: 896)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3207, file: !54, line: 117, baseType: !3161, size: 64, offset: 960)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3207, file: !54, line: 118, baseType: !3157, size: 64, offset: 1024)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3207, file: !54, line: 120, baseType: !3259, size: 64, offset: 1088)
!3259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3260, size: 64)
!3260 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !54, line: 120, flags: DIFlagFwdDecl)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3193, file: !3194, line: 91, baseType: !3148, size: 64, offset: 448)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3193, file: !3194, line: 92, baseType: !3166, size: 64, offset: 512)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3193, file: !3194, line: 93, baseType: !3157, size: 64, offset: 576)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3193, file: !3194, line: 94, baseType: !3166, size: 64, offset: 640)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3193, file: !3194, line: 95, baseType: !3157, size: 64, offset: 704)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3193, file: !3194, line: 97, baseType: !3166, size: 64, offset: 768)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3193, file: !3194, line: 98, baseType: !3166, size: 64, offset: 832)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3193, file: !3194, line: 100, baseType: !3246, size: 64, offset: 896)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3193, file: !3194, line: 101, baseType: !3166, size: 64, offset: 960)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3193, file: !3194, line: 103, baseType: !3166, size: 64, offset: 1024)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3193, file: !3194, line: 105, baseType: !3166, size: 64, offset: 1088)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3193, file: !3194, line: 107, baseType: !3161, size: 64, offset: 1152)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3193, file: !3194, line: 109, baseType: !3274, size: 64, offset: 1216)
!3274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3275, size: 64)
!3275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3276)
!3276 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3194, line: 109, flags: DIFlagFwdDecl)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3193, file: !3194, line: 111, baseType: !3278, size: 64, offset: 1280)
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3279, size: 64)
!3279 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3194, line: 111, flags: DIFlagFwdDecl)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3193, file: !3194, line: 112, baseType: !558, offset: 1344)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3193, file: !3194, line: 114, baseType: !400, size: 8, offset: 1344)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !128, file: !60, line: 471, baseType: !3206, size: 64, offset: 832)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !128, file: !60, line: 473, baseType: !109, size: 64, offset: 896)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !128, file: !60, line: 475, baseType: !109, size: 64, offset: 960)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !128, file: !60, line: 480, baseType: !1006, size: 192, offset: 1024)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !128, file: !60, line: 484, baseType: !3287, size: 576, offset: 1216)
!3287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !60, line: 361, size: 576, elements: !3288)
!3288 = !{!3289, !3290, !3291, !3292, !3293, !3294}
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3287, file: !60, line: 362, baseType: !135, size: 128)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3287, file: !60, line: 363, baseType: !135, size: 128, offset: 128)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3287, file: !60, line: 364, baseType: !135, size: 128, offset: 256)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3287, file: !60, line: 365, baseType: !135, size: 128, offset: 384)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3287, file: !60, line: 366, baseType: !400, size: 8, offset: 512)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3287, file: !60, line: 367, baseType: !59, size: 32, offset: 544)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !128, file: !60, line: 485, baseType: !3296, size: 2304, offset: 1792)
!3296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !67, line: 565, size: 2304, elements: !3297)
!3297 = !{!3298, !3299, !3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3393, !3397}
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3296, file: !67, line: 566, baseType: !3249, size: 32)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3296, file: !67, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3296, file: !67, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3296, file: !67, line: 569, baseType: !400, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3296, file: !67, line: 570, baseType: !400, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3296, file: !67, line: 571, baseType: !400, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3296, file: !67, line: 572, baseType: !400, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3296, file: !67, line: 573, baseType: !400, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3296, file: !67, line: 574, baseType: !400, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3296, file: !67, line: 575, baseType: !400, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3296, file: !67, line: 576, baseType: !400, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3296, file: !67, line: 577, baseType: !123, size: 32, offset: 64)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3296, file: !67, line: 578, baseType: !148, offset: 96)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3296, file: !67, line: 580, baseType: !135, size: 128, offset: 128)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3296, file: !67, line: 581, baseType: !1335, size: 192, offset: 256)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3296, file: !67, line: 582, baseType: !3314, size: 64, offset: 448)
!3314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3315, size: 64)
!3315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3316, line: 43, size: 1472, elements: !3317)
!3316 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3317 = !{!3318, !3319, !3320, !3321, !3322, !3325, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3315, file: !3316, line: 44, baseType: !115, size: 64)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3315, file: !3316, line: 45, baseType: !174, size: 32, offset: 64)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3315, file: !3316, line: 46, baseType: !135, size: 128, offset: 128)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3315, file: !3316, line: 47, baseType: !148, offset: 256)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3315, file: !3316, line: 48, baseType: !3323, size: 64, offset: 256)
!3323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3324, size: 64)
!3324 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !67, line: 533, flags: DIFlagFwdDecl)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3315, file: !3316, line: 49, baseType: !3326, size: 320, offset: 320)
!3326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3327, line: 11, size: 320, elements: !3328)
!3327 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3328 = !{!3329, !3330, !3331, !3336}
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3326, file: !3327, line: 16, baseType: !552, size: 128)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3326, file: !3327, line: 17, baseType: !108, size: 64, offset: 128)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3326, file: !3327, line: 18, baseType: !3332, size: 64, offset: 192)
!3332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3333, size: 64)
!3333 = !DISubroutineType(types: !3334)
!3334 = !{null, !3335}
!3335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3326, size: 64)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3326, file: !3327, line: 19, baseType: !123, size: 32, offset: 256)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3315, file: !3316, line: 50, baseType: !108, size: 64, offset: 640)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3315, file: !3316, line: 51, baseType: !1133, size: 64, offset: 704)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3315, file: !3316, line: 52, baseType: !1133, size: 64, offset: 768)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3315, file: !3316, line: 53, baseType: !1133, size: 64, offset: 832)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3315, file: !3316, line: 54, baseType: !1133, size: 64, offset: 896)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3315, file: !3316, line: 55, baseType: !1133, size: 64, offset: 960)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3315, file: !3316, line: 56, baseType: !108, size: 64, offset: 1024)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3315, file: !3316, line: 57, baseType: !108, size: 64, offset: 1088)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3315, file: !3316, line: 58, baseType: !108, size: 64, offset: 1152)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3315, file: !3316, line: 59, baseType: !108, size: 64, offset: 1216)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3315, file: !3316, line: 60, baseType: !108, size: 64, offset: 1280)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3315, file: !3316, line: 61, baseType: !3135, size: 64, offset: 1344)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3315, file: !3316, line: 62, baseType: !400, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3315, file: !3316, line: 63, baseType: !400, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3296, file: !67, line: 583, baseType: !400, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3296, file: !67, line: 584, baseType: !400, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3296, file: !67, line: 585, baseType: !400, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3296, file: !67, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3296, file: !67, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3296, file: !67, line: 592, baseType: !1125, size: 512, offset: 576)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3296, file: !67, line: 593, baseType: !331, size: 64, offset: 1088)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3296, file: !67, line: 594, baseType: !1792, size: 256, offset: 1152)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3296, file: !67, line: 595, baseType: !1314, size: 128, offset: 1408)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3296, file: !67, line: 596, baseType: !3323, size: 64, offset: 1536)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3296, file: !67, line: 597, baseType: !660, size: 32, offset: 1600)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3296, file: !67, line: 598, baseType: !660, size: 32, offset: 1632)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3296, file: !67, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3296, file: !67, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3296, file: !67, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3296, file: !67, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3296, file: !67, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3296, file: !67, line: 604, baseType: !400, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3296, file: !67, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3296, file: !67, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3296, file: !67, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3296, file: !67, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3296, file: !67, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3296, file: !67, line: 610, baseType: !7, size: 32, offset: 1696)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3296, file: !67, line: 611, baseType: !66, size: 32, offset: 1728)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3296, file: !67, line: 612, baseType: !74, size: 32, offset: 1760)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3296, file: !67, line: 613, baseType: !174, size: 32, offset: 1792)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3296, file: !67, line: 614, baseType: !174, size: 32, offset: 1824)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3296, file: !67, line: 615, baseType: !331, size: 64, offset: 1856)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3296, file: !67, line: 616, baseType: !331, size: 64, offset: 1920)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3296, file: !67, line: 617, baseType: !331, size: 64, offset: 1984)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3296, file: !67, line: 618, baseType: !331, size: 64, offset: 2048)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3296, file: !67, line: 620, baseType: !3384, size: 64, offset: 2112)
!3384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3385, size: 64)
!3385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !67, line: 536, size: 256, elements: !3386)
!3386 = !{!3387, !3388, !3389, !3390}
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3385, file: !67, line: 537, baseType: !148)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3385, file: !67, line: 538, baseType: !7, size: 32)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3385, file: !67, line: 540, baseType: !135, size: 128, offset: 64)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3385, file: !67, line: 543, baseType: !3391, size: 64, offset: 192)
!3391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3392, size: 64)
!3392 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !67, line: 534, flags: DIFlagFwdDecl)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3296, file: !67, line: 621, baseType: !3394, size: 64, offset: 2176)
!3394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3395, size: 64)
!3395 = !DISubroutineType(types: !3396)
!3396 = !{null, !3135, !1277}
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3296, file: !67, line: 622, baseType: !3398, size: 64, offset: 2240)
!3398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3399, size: 64)
!3399 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !67, line: 622, flags: DIFlagFwdDecl)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !128, file: !60, line: 486, baseType: !3401, size: 64, offset: 4096)
!3401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3402, size: 64)
!3402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !67, line: 642, size: 1792, elements: !3403)
!3403 = !{!3404, !3405, !3406, !3410, !3411, !3412}
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3402, file: !67, line: 643, baseType: !3163, size: 1472)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3402, file: !67, line: 644, baseType: !3166, size: 64, offset: 1472)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3402, file: !67, line: 645, baseType: !3407, size: 64, offset: 1536)
!3407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3408, size: 64)
!3408 = !DISubroutineType(types: !3409)
!3409 = !{null, !3135, !400}
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3402, file: !67, line: 646, baseType: !3166, size: 64, offset: 1600)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3402, file: !67, line: 647, baseType: !3157, size: 64, offset: 1664)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3402, file: !67, line: 648, baseType: !3157, size: 64, offset: 1728)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !128, file: !60, line: 493, baseType: !3414, size: 64, offset: 4160)
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !60, line: 493, flags: DIFlagFwdDecl)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !128, file: !60, line: 499, baseType: !135, size: 128, offset: 4224)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !128, file: !60, line: 502, baseType: !3418, size: 64, offset: 4352)
!3418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3419, size: 64)
!3419 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3420)
!3420 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !60, line: 502, flags: DIFlagFwdDecl)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !128, file: !60, line: 504, baseType: !3422, size: 64, offset: 4416)
!3422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !128, file: !60, line: 505, baseType: !331, size: 64, offset: 4480)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !128, file: !60, line: 510, baseType: !331, size: 64, offset: 4544)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !128, file: !60, line: 511, baseType: !3426, size: 64, offset: 4608)
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 64)
!3427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3428)
!3428 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !60, line: 511, flags: DIFlagFwdDecl)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !128, file: !60, line: 513, baseType: !3430, size: 64, offset: 4672)
!3430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3431, size: 64)
!3431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !60, line: 288, size: 128, elements: !3432)
!3432 = !{!3433, !3434}
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3431, file: !60, line: 293, baseType: !7, size: 32)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3431, file: !60, line: 294, baseType: !108, size: 64, offset: 64)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !128, file: !60, line: 515, baseType: !135, size: 128, offset: 4736)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !128, file: !60, line: 526, baseType: !3437, offset: 4864)
!3437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3438, line: 5, elements: !162)
!3438 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !128, file: !60, line: 528, baseType: !3440, size: 64, offset: 4864)
!3440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3441, size: 64)
!3441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3442, line: 51, size: 1344, elements: !3443)
!3442 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3443 = !{!3444, !3445, !3447, !3448, !3538, !3547, !3548, !3549, !3550, !3551, !3552, !3553}
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3441, file: !3442, line: 52, baseType: !115, size: 64)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3441, file: !3442, line: 53, baseType: !3446, size: 32, offset: 64)
!3446 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3442, line: 28, baseType: !123)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3441, file: !3442, line: 54, baseType: !115, size: 64, offset: 128)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3441, file: !3442, line: 55, baseType: !3449, size: 192, offset: 192)
!3449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3450, line: 17, size: 192, elements: !3451)
!3450 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3451 = !{!3452, !3454, !3537}
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3449, file: !3450, line: 18, baseType: !3453, size: 64)
!3453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3449, size: 64)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3449, file: !3450, line: 19, baseType: !3455, size: 64, offset: 64)
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3456, size: 64)
!3456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3457)
!3457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3450, line: 110, size: 1152, elements: !3458)
!3458 = !{!3459, !3463, !3467, !3473, !3479, !3483, !3487, !3492, !3496, !3497, !3501, !3505, !3509, !3520, !3521, !3522, !3523, !3533}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3457, file: !3450, line: 111, baseType: !3460, size: 64)
!3460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3461 = !DISubroutineType(types: !3462)
!3462 = !{!3453, !3453}
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3457, file: !3450, line: 112, baseType: !3464, size: 64, offset: 64)
!3464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3465, size: 64)
!3465 = !DISubroutineType(types: !3466)
!3466 = !{null, !3453}
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3457, file: !3450, line: 113, baseType: !3468, size: 64, offset: 128)
!3468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3469, size: 64)
!3469 = !DISubroutineType(types: !3470)
!3470 = !{!400, !3471}
!3471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3472, size: 64)
!3472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3449)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3457, file: !3450, line: 114, baseType: !3474, size: 64, offset: 192)
!3474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3475, size: 64)
!3475 = !DISubroutineType(types: !3476)
!3476 = !{!2966, !3471, !3477}
!3477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3478, size: 64)
!3478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !128)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3457, file: !3450, line: 116, baseType: !3480, size: 64, offset: 256)
!3480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3481, size: 64)
!3481 = !DISubroutineType(types: !3482)
!3482 = !{!400, !3471, !115}
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3457, file: !3450, line: 118, baseType: !3484, size: 64, offset: 320)
!3484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3485, size: 64)
!3485 = !DISubroutineType(types: !3486)
!3486 = !{!174, !3471, !115, !7, !109, !236}
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3457, file: !3450, line: 123, baseType: !3488, size: 64, offset: 384)
!3488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3489, size: 64)
!3489 = !DISubroutineType(types: !3490)
!3490 = !{!174, !3471, !115, !3491, !236}
!3491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3457, file: !3450, line: 126, baseType: !3493, size: 64, offset: 448)
!3493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3494, size: 64)
!3494 = !DISubroutineType(types: !3495)
!3495 = !{!115, !3471}
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3457, file: !3450, line: 127, baseType: !3493, size: 64, offset: 512)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3457, file: !3450, line: 128, baseType: !3498, size: 64, offset: 576)
!3498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3499, size: 64)
!3499 = !DISubroutineType(types: !3500)
!3500 = !{!3453, !3471}
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3457, file: !3450, line: 130, baseType: !3502, size: 64, offset: 640)
!3502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3503, size: 64)
!3503 = !DISubroutineType(types: !3504)
!3504 = !{!3453, !3471, !3453}
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3457, file: !3450, line: 133, baseType: !3506, size: 64, offset: 704)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3507 = !DISubroutineType(types: !3508)
!3508 = !{!3453, !3471, !115}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3457, file: !3450, line: 135, baseType: !3510, size: 64, offset: 768)
!3510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3511, size: 64)
!3511 = !DISubroutineType(types: !3512)
!3512 = !{!174, !3471, !115, !115, !7, !7, !3513}
!3513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3514, size: 64)
!3514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3450, line: 43, size: 640, elements: !3515)
!3515 = !{!3516, !3517, !3518}
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3514, file: !3450, line: 44, baseType: !3453, size: 64)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3514, file: !3450, line: 45, baseType: !7, size: 32, offset: 64)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3514, file: !3450, line: 46, baseType: !3519, size: 512, offset: 128)
!3519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 512, elements: !1163)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3457, file: !3450, line: 140, baseType: !3502, size: 64, offset: 832)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3457, file: !3450, line: 143, baseType: !3498, size: 64, offset: 896)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3457, file: !3450, line: 145, baseType: !3460, size: 64, offset: 960)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3457, file: !3450, line: 146, baseType: !3524, size: 64, offset: 1024)
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 64)
!3525 = !DISubroutineType(types: !3526)
!3526 = !{!174, !3471, !3527}
!3527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3528, size: 64)
!3528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3450, line: 29, size: 128, elements: !3529)
!3529 = !{!3530, !3531, !3532}
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3528, file: !3450, line: 30, baseType: !7, size: 32)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3528, file: !3450, line: 31, baseType: !7, size: 32, offset: 32)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3528, file: !3450, line: 32, baseType: !3471, size: 64, offset: 64)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3457, file: !3450, line: 148, baseType: !3534, size: 64, offset: 1088)
!3534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3535, size: 64)
!3535 = !DISubroutineType(types: !3536)
!3536 = !{!174, !3471, !3135}
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3449, file: !3450, line: 20, baseType: !3135, size: 64, offset: 128)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3441, file: !3442, line: 57, baseType: !3539, size: 64, offset: 384)
!3539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3540, size: 64)
!3540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3442, line: 31, size: 704, elements: !3541)
!3541 = !{!3542, !3543, !3544, !3545, !3546}
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3540, file: !3442, line: 32, baseType: !104, size: 64)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3540, file: !3442, line: 33, baseType: !174, size: 32, offset: 64)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3540, file: !3442, line: 34, baseType: !109, size: 64, offset: 128)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3540, file: !3442, line: 35, baseType: !3539, size: 64, offset: 192)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3540, file: !3442, line: 43, baseType: !257, size: 448, offset: 256)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3441, file: !3442, line: 58, baseType: !3539, size: 64, offset: 448)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3441, file: !3442, line: 59, baseType: !3440, size: 64, offset: 512)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3441, file: !3442, line: 60, baseType: !3440, size: 64, offset: 576)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3441, file: !3442, line: 61, baseType: !3440, size: 64, offset: 640)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3441, file: !3442, line: 63, baseType: !131, size: 512, offset: 704)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3441, file: !3442, line: 65, baseType: !108, size: 64, offset: 1216)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3441, file: !3442, line: 66, baseType: !109, size: 64, offset: 1280)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !128, file: !60, line: 529, baseType: !3453, size: 64, offset: 4928)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !128, file: !60, line: 534, baseType: !423, size: 32, offset: 4992)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !128, file: !60, line: 535, baseType: !123, size: 32, offset: 5024)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !128, file: !60, line: 537, baseType: !148, offset: 5056)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !128, file: !60, line: 538, baseType: !135, size: 128, offset: 5056)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !128, file: !60, line: 540, baseType: !3560, size: 64, offset: 5184)
!3560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3561, size: 64)
!3561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3562, line: 54, size: 960, elements: !3563)
!3562 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3563 = !{!3564, !3565, !3566, !3567, !3568, !3569, !3570, !3574, !3578, !3579, !3580, !3581, !3585, !3589, !3590}
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3561, file: !3562, line: 55, baseType: !115, size: 64)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3561, file: !3562, line: 56, baseType: !543, size: 64, offset: 64)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3561, file: !3562, line: 58, baseType: !242, size: 64, offset: 128)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3561, file: !3562, line: 59, baseType: !242, size: 64, offset: 192)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3561, file: !3562, line: 60, baseType: !141, size: 64, offset: 256)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3561, file: !3562, line: 62, baseType: !3148, size: 64, offset: 320)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3561, file: !3562, line: 63, baseType: !3571, size: 64, offset: 384)
!3571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3572, size: 64)
!3572 = !DISubroutineType(types: !3573)
!3573 = !{!104, !3135, !3155}
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3561, file: !3562, line: 65, baseType: !3575, size: 64, offset: 448)
!3575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3576, size: 64)
!3576 = !DISubroutineType(types: !3577)
!3577 = !{null, !3560}
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3561, file: !3562, line: 66, baseType: !3157, size: 64, offset: 512)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3561, file: !3562, line: 68, baseType: !3166, size: 64, offset: 576)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3561, file: !3562, line: 70, baseType: !2949, size: 64, offset: 640)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3561, file: !3562, line: 71, baseType: !3582, size: 64, offset: 704)
!3582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3583, size: 64)
!3583 = !DISubroutineType(types: !3584)
!3584 = !{!2966, !3135}
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3561, file: !3562, line: 73, baseType: !3586, size: 64, offset: 768)
!3586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3587, size: 64)
!3587 = !DISubroutineType(types: !3588)
!3588 = !{null, !3135, !2983, !2984}
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3561, file: !3562, line: 75, baseType: !3161, size: 64, offset: 832)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3561, file: !3562, line: 77, baseType: !3278, size: 64, offset: 896)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !128, file: !60, line: 541, baseType: !242, size: 64, offset: 5248)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !128, file: !60, line: 543, baseType: !3157, size: 64, offset: 5312)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !128, file: !60, line: 544, baseType: !3594, size: 64, offset: 5376)
!3594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3595, size: 64)
!3595 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !60, line: 45, flags: DIFlagFwdDecl)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !128, file: !60, line: 545, baseType: !3597, size: 64, offset: 5440)
!3597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 64)
!3598 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !60, line: 47, flags: DIFlagFwdDecl)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !128, file: !60, line: 547, baseType: !400, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !128, file: !60, line: 548, baseType: !400, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !128, file: !60, line: 549, baseType: !400, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !128, file: !60, line: 550, baseType: !400, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "nh_all", scope: !111, file: !112, line: 49, baseType: !3604, size: 64, offset: 5760)
!3604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !3605, line: 70, size: 64, elements: !3606)
!3605 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!3606 = !{!3607}
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3604, file: !3605, line: 71, baseType: !3608, size: 64)
!3608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3609, size: 64)
!3609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !3605, line: 54, size: 192, elements: !3610)
!3610 = !{!3611, !3616, !3617}
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !3609, file: !3605, line: 55, baseType: !3612, size: 64)
!3612 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !3605, line: 51, baseType: !3613)
!3613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3614, size: 64)
!3614 = !DISubroutineType(types: !3615)
!3615 = !{!174, !3608, !108, !109}
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3609, file: !3605, line: 56, baseType: !3608, size: 64, offset: 64)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !3609, file: !3605, line: 57, baseType: !174, size: 32, offset: 128)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "nh", scope: !111, file: !112, line: 50, baseType: !3619, size: 64, offset: 5824)
!3619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3604, size: 64)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !111, file: !112, line: 51, baseType: !135, size: 128, offset: 5888)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "max_supported", scope: !111, file: !112, line: 52, baseType: !174, size: 32, offset: 6016)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !111, file: !112, line: 53, baseType: !148, offset: 6048)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !111, file: !112, line: 54, baseType: !123, size: 32, offset: 6048)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "extcon_dev_type", scope: !111, file: !112, line: 57, baseType: !3143, size: 384, offset: 6080)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "cables", scope: !111, file: !112, line: 58, baseType: !3626, size: 64, offset: 6464)
!3626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3627, size: 64)
!3627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extcon_cable", file: !3, line: 200, size: 1664, elements: !3628)
!3628 = !{!3629, !3630, !3631, !3632, !3645, !3646, !3648, !3654, !3656, !3657, !3659, !3660, !3661, !3662}
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "edev", scope: !3627, file: !3, line: 201, baseType: !110, size: 64)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "cable_index", scope: !3627, file: !3, line: 202, baseType: !174, size: 32, offset: 64)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "attr_g", scope: !3627, file: !3, line: 204, baseType: !245, size: 320, offset: 128)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "attr_name", scope: !3627, file: !3, line: 205, baseType: !3633, size: 256, offset: 448)
!3633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !60, line: 99, size: 256, elements: !3634)
!3634 = !{!3635, !3636, !3641}
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3633, file: !60, line: 100, baseType: !226, size: 128)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3633, file: !60, line: 101, baseType: !3637, size: 64, offset: 128)
!3637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3638, size: 64)
!3638 = !DISubroutineType(types: !3639)
!3639 = !{!220, !3135, !3640, !104}
!3640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3633, size: 64)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3633, file: !60, line: 103, baseType: !3642, size: 64, offset: 192)
!3642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3643, size: 64)
!3643 = !DISubroutineType(types: !3644)
!3644 = !{!220, !3135, !3640, !115, !236}
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "attr_state", scope: !3627, file: !3, line: 206, baseType: !3633, size: 256, offset: 704)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !3627, file: !3, line: 208, baseType: !3647, size: 192, offset: 960)
!3647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !225, size: 192, elements: !190)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "usb_propval", scope: !3627, file: !3, line: 210, baseType: !3649, size: 96, offset: 1152)
!3649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3650, size: 96, elements: !190)
!3650 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "extcon_property_value", file: !3651, line: 162, size: 32, elements: !3652)
!3651 = !DIFile(filename: "./include/linux/extcon.h", directory: "/home/lizy2001/genbc/linux")
!3652 = !{!3653}
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "intval", scope: !3650, file: !3651, line: 163, baseType: !174, size: 32)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "chg_propval", scope: !3627, file: !3, line: 211, baseType: !3655, size: 32, offset: 1248)
!3655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3650, size: 32, elements: !1204)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "jack_propval", scope: !3627, file: !3, line: 212, baseType: !3655, size: 32, offset: 1280)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "disp_propval", scope: !3627, file: !3, line: 213, baseType: !3658, size: 64, offset: 1312)
!3658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3650, size: 64, elements: !1402)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "usb_bits", scope: !3627, file: !3, line: 215, baseType: !1203, size: 64, offset: 1408)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "chg_bits", scope: !3627, file: !3, line: 216, baseType: !1203, size: 64, offset: 1472)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "jack_bits", scope: !3627, file: !3, line: 217, baseType: !1203, size: 64, offset: 1536)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "disp_bits", scope: !3627, file: !3, line: 218, baseType: !1203, size: 64, offset: 1600)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "attr_g_muex", scope: !111, file: !112, line: 61, baseType: !245, size: 320, offset: 6528)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "attrs_muex", scope: !111, file: !112, line: 62, baseType: !240, size: 64, offset: 6848)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "d_attrs_muex", scope: !111, file: !112, line: 63, baseType: !3640, size: 64, offset: 6912)
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!3667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!3668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3669, size: 64)
!3669 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !138)
!3670 = !{!3671, !3676, !3678, !3683, !3688, !3693, !3698, !3701, !3706, !3708, !0, !3717, !3719, !3724, !3727, !3729, !3731, !3733, !3735}
!3671 = !DIGlobalVariableExpression(var: !3672, expr: !DIExpression())
!3672 = distinct !DIGlobalVariable(name: "edev_no", scope: !3673, file: !3, line: 1085, type: !660, isLocal: true, isDefinition: true)
!3673 = distinct !DISubprogram(name: "extcon_dev_register", scope: !3, file: !3, line: 1082, type: !3674, scopeLine: 1083, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !162)
!3674 = !DISubroutineType(types: !3675)
!3675 = !{!174, !110}
!3676 = !DIGlobalVariableExpression(var: !3677, expr: !DIExpression())
!3677 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_extcon_class_init209", scope: !2, file: !3, line: 1415, type: !109, isLocal: true, isDefinition: true)
!3678 = !DIGlobalVariableExpression(var: !3679, expr: !DIExpression())
!3679 = distinct !DIGlobalVariable(name: "__exitcall_extcon_class_exit", scope: !2, file: !3, line: 1421, type: !3680, isLocal: true, isDefinition: true)
!3680 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !3681, line: 117, baseType: !3682)
!3681 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!3682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64)
!3683 = !DIGlobalVariableExpression(var: !3684, expr: !DIExpression())
!3684 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author210", scope: !2, file: !3, line: 1423, type: !3685, isLocal: true, isDefinition: true, align: 8)
!3685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !116, size: 448, elements: !3686)
!3686 = !{!3687}
!3687 = !DISubrange(count: 56)
!3688 = !DIGlobalVariableExpression(var: !3689, expr: !DIExpression())
!3689 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author211", scope: !2, file: !3, line: 1424, type: !3690, isLocal: true, isDefinition: true, align: 8)
!3690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !116, size: 472, elements: !3691)
!3691 = !{!3692}
!3692 = !DISubrange(count: 59)
!3693 = !DIGlobalVariableExpression(var: !3694, expr: !DIExpression())
!3694 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description212", scope: !2, file: !3, line: 1425, type: !3695, isLocal: true, isDefinition: true, align: 8)
!3695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !116, size: 496, elements: !3696)
!3696 = !{!3697}
!3697 = !DISubrange(count: 62)
!3698 = !DIGlobalVariableExpression(var: !3699, expr: !DIExpression())
!3699 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file213", scope: !2, file: !3, line: 1426, type: !3700, isLocal: true, isDefinition: true, align: 8)
!3700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !116, size: 352, elements: !980)
!3701 = !DIGlobalVariableExpression(var: !3702, expr: !DIExpression())
!3702 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license214", scope: !2, file: !3, line: 1426, type: !3703, isLocal: true, isDefinition: true, align: 8)
!3703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !116, size: 216, elements: !3704)
!3704 = !{!3705}
!3705 = !DISubrange(count: 27)
!3706 = !DIGlobalVariableExpression(var: !3707, expr: !DIExpression())
!3707 = distinct !DIGlobalVariable(name: "extcon_class", scope: !2, file: !3, line: 221, type: !3560, isLocal: true, isDefinition: true)
!3708 = !DIGlobalVariableExpression(var: !3709, expr: !DIExpression())
!3709 = distinct !DIGlobalVariable(name: "extcon_info", scope: !2, file: !3, line: 36, type: !3710, isLocal: true, isDefinition: true)
!3710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3711, size: 8192, elements: !194)
!3711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3712)
!3712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__extcon_info", file: !3, line: 31, size: 128, elements: !3713)
!3713 = !{!3714, !3715, !3716}
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3712, file: !3, line: 32, baseType: !7, size: 32)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3712, file: !3, line: 33, baseType: !7, size: 32, offset: 32)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3712, file: !3, line: 34, baseType: !115, size: 64, offset: 64)
!3717 = !DIGlobalVariableExpression(var: !3718, expr: !DIExpression())
!3718 = distinct !DIGlobalVariable(name: "extcon_dev_list", scope: !2, file: !3, line: 223, type: !135, isLocal: true, isDefinition: true)
!3719 = !DIGlobalVariableExpression(var: !3720, expr: !DIExpression())
!3720 = distinct !DIGlobalVariable(name: "__key", scope: !3721, file: !3, line: 1012, type: !558, isLocal: true, isDefinition: true)
!3721 = distinct !DISubprogram(name: "create_extcon_class", scope: !3, file: !3, line: 1009, type: !3722, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!3722 = !DISubroutineType(types: !3723)
!3723 = !{!174}
!3724 = !DIGlobalVariableExpression(var: !3725, expr: !DIExpression())
!3725 = distinct !DIGlobalVariable(name: "extcon_groups", scope: !2, file: !3, line: 1007, type: !3726, isLocal: true, isDefinition: true)
!3726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !243, size: 128, elements: !1402)
!3727 = !DIGlobalVariableExpression(var: !3728, expr: !DIExpression())
!3728 = distinct !DIGlobalVariable(name: "extcon_group", scope: !2, file: !3, line: 1007, type: !244, isLocal: true, isDefinition: true)
!3729 = !DIGlobalVariableExpression(var: !3730, expr: !DIExpression())
!3730 = distinct !DIGlobalVariable(name: "extcon_attrs", scope: !2, file: !3, line: 1002, type: !3647, isLocal: true, isDefinition: true)
!3731 = !DIGlobalVariableExpression(var: !3732, expr: !DIExpression())
!3732 = distinct !DIGlobalVariable(name: "dev_attr_state", scope: !2, file: !3, line: 365, type: !3633, isLocal: true, isDefinition: true)
!3733 = !DIGlobalVariableExpression(var: !3734, expr: !DIExpression())
!3734 = distinct !DIGlobalVariable(name: "dev_attr_name", scope: !2, file: !3, line: 374, type: !3633, isLocal: true, isDefinition: true)
!3735 = !DIGlobalVariableExpression(var: !3736, expr: !DIExpression())
!3736 = distinct !DIGlobalVariable(name: "muex_name", scope: !2, file: !3, line: 1025, type: !115, isLocal: true, isDefinition: true)
!3737 = !{!"rsp"}
!3738 = !{i32 7, !"Dwarf Version", i32 4}
!3739 = !{i32 2, !"Debug Info Version", i32 3}
!3740 = !{i32 1, !"wchar_size", i32 2}
!3741 = !{i32 1, !"Code Model", i32 2}
!3742 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!3743 = distinct !DISubprogram(name: "extcon_sync", scope: !3, file: !3, line: 408, type: !3744, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !162)
!3744 = !DISubroutineType(types: !3745)
!3745 = !{!174, !110, !7}
!3746 = !DILocalVariable(name: "lock", arg: 1, scope: !3747, file: !3748, line: 407, type: !3751)
!3747 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !3748, file: !3748, line: 407, type: !3749, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!3748 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!3749 = !DISubroutineType(types: !3750)
!3750 = !{null, !3751, !108}
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !148, size: 64)
!3752 = !DILocation(line: 407, column: 64, scope: !3747, inlinedAt: !3753)
!3753 = distinct !DILocation(line: 448, column: 3, scope: !3754)
!3754 = distinct !DILexicalBlock(scope: !3755, file: !3, line: 446, column: 17)
!3755 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 446, column: 6)
!3756 = !DILocalVariable(name: "flags", arg: 2, scope: !3747, file: !3748, line: 407, type: !108)
!3757 = !DILocation(line: 407, column: 84, scope: !3747, inlinedAt: !3753)
!3758 = !DILocalVariable(name: "lock", arg: 1, scope: !3759, file: !3748, line: 327, type: !3751)
!3759 = distinct !DISubprogram(name: "spinlock_check", scope: !3748, file: !3748, line: 327, type: !3760, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!3760 = !DISubroutineType(types: !3761)
!3761 = !{!3762, !3751}
!3762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!3763 = !DILocation(line: 327, column: 67, scope: !3759, inlinedAt: !3764)
!3764 = distinct !DILocation(line: 443, column: 2, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3766, file: !3, line: 443, column: 2)
!3766 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 443, column: 2)
!3767 = distinct !DILexicalBlock(scope: !3768, file: !3, line: 443, column: 2)
!3768 = distinct !DILexicalBlock(scope: !3769, file: !3, line: 443, column: 2)
!3769 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 443, column: 2)
!3770 = !DILocation(line: 407, column: 64, scope: !3747, inlinedAt: !3771)
!3771 = distinct !DILocation(line: 429, column: 2, scope: !3743)
!3772 = !DILocation(line: 407, column: 84, scope: !3747, inlinedAt: !3771)
!3773 = !DILocation(line: 407, column: 64, scope: !3747, inlinedAt: !3774)
!3774 = distinct !DILocation(line: 474, column: 2, scope: !3743)
!3775 = !DILocation(line: 407, column: 84, scope: !3747, inlinedAt: !3774)
!3776 = !DILocation(line: 327, column: 67, scope: !3759, inlinedAt: !3777)
!3777 = distinct !DILocation(line: 427, column: 2, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3779, file: !3, line: 427, column: 2)
!3779 = distinct !DILexicalBlock(scope: !3780, file: !3, line: 427, column: 2)
!3780 = distinct !DILexicalBlock(scope: !3781, file: !3, line: 427, column: 2)
!3781 = distinct !DILexicalBlock(scope: !3782, file: !3, line: 427, column: 2)
!3782 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 427, column: 2)
!3783 = !DILocalVariable(name: "edev", arg: 1, scope: !3743, file: !3, line: 408, type: !110)
!3784 = !DILocation(line: 408, column: 36, scope: !3743)
!3785 = !DILocalVariable(name: "id", arg: 2, scope: !3743, file: !3, line: 408, type: !7)
!3786 = !DILocation(line: 408, column: 55, scope: !3743)
!3787 = !DILocalVariable(name: "name_buf", scope: !3743, file: !3, line: 410, type: !3788)
!3788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !105, size: 960, elements: !3789)
!3789 = !{!3790}
!3790 = !DISubrange(count: 120)
!3791 = !DILocation(line: 410, column: 7, scope: !3743)
!3792 = !DILocalVariable(name: "state_buf", scope: !3743, file: !3, line: 411, type: !3788)
!3793 = !DILocation(line: 411, column: 7, scope: !3743)
!3794 = !DILocalVariable(name: "prop_buf", scope: !3743, file: !3, line: 412, type: !104)
!3795 = !DILocation(line: 412, column: 8, scope: !3743)
!3796 = !DILocalVariable(name: "envp", scope: !3743, file: !3, line: 413, type: !189)
!3797 = !DILocation(line: 413, column: 8, scope: !3743)
!3798 = !DILocalVariable(name: "env_offset", scope: !3743, file: !3, line: 414, type: !174)
!3799 = !DILocation(line: 414, column: 6, scope: !3743)
!3800 = !DILocalVariable(name: "length", scope: !3743, file: !3, line: 415, type: !174)
!3801 = !DILocation(line: 415, column: 6, scope: !3743)
!3802 = !DILocalVariable(name: "index", scope: !3743, file: !3, line: 416, type: !174)
!3803 = !DILocation(line: 416, column: 6, scope: !3743)
!3804 = !DILocalVariable(name: "state", scope: !3743, file: !3, line: 417, type: !174)
!3805 = !DILocation(line: 417, column: 6, scope: !3743)
!3806 = !DILocalVariable(name: "flags", scope: !3743, file: !3, line: 418, type: !108)
!3807 = !DILocation(line: 418, column: 16, scope: !3743)
!3808 = !DILocation(line: 420, column: 7, scope: !3809)
!3809 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 420, column: 6)
!3810 = !DILocation(line: 420, column: 6, scope: !3743)
!3811 = !DILocation(line: 421, column: 3, scope: !3809)
!3812 = !DILocation(line: 423, column: 33, scope: !3743)
!3813 = !DILocation(line: 423, column: 39, scope: !3743)
!3814 = !DILocation(line: 423, column: 10, scope: !3743)
!3815 = !DILocation(line: 423, column: 8, scope: !3743)
!3816 = !DILocation(line: 424, column: 6, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 424, column: 6)
!3818 = !DILocation(line: 424, column: 12, scope: !3817)
!3819 = !DILocation(line: 424, column: 6, scope: !3743)
!3820 = !DILocation(line: 425, column: 10, scope: !3817)
!3821 = !DILocation(line: 425, column: 3, scope: !3817)
!3822 = !DILocation(line: 427, column: 2, scope: !3743)
!3823 = !DILocation(line: 427, column: 2, scope: !3782)
!3824 = !DILocalVariable(name: "__dummy", scope: !3825, file: !3, line: 427, type: !108)
!3825 = distinct !DILexicalBlock(scope: !3781, file: !3, line: 427, column: 2)
!3826 = !DILocation(line: 427, column: 2, scope: !3825)
!3827 = !DILocalVariable(name: "__dummy2", scope: !3825, file: !3, line: 427, type: !108)
!3828 = !DILocation(line: 427, column: 2, scope: !3781)
!3829 = !DILocation(line: 427, column: 2, scope: !3780)
!3830 = !DILocation(line: 427, column: 2, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3780, file: !3, line: 427, column: 2)
!3832 = !DILocalVariable(name: "__dummy", scope: !3833, file: !3, line: 427, type: !108)
!3833 = distinct !DILexicalBlock(scope: !3834, file: !3, line: 427, column: 2)
!3834 = distinct !DILexicalBlock(scope: !3831, file: !3, line: 427, column: 2)
!3835 = !DILocation(line: 427, column: 2, scope: !3833)
!3836 = !DILocalVariable(name: "__dummy2", scope: !3833, file: !3, line: 427, type: !108)
!3837 = !DILocation(line: 427, column: 2, scope: !3834)
!3838 = !DILocation(line: 427, column: 2, scope: !3779)
!3839 = !{i32 -2142741071}
!3840 = !DILocation(line: 427, column: 2, scope: !3778)
!3841 = !DILocation(line: 329, column: 10, scope: !3759, inlinedAt: !3777)
!3842 = !DILocation(line: 329, column: 16, scope: !3759, inlinedAt: !3777)
!3843 = !DILocation(line: 428, column: 13, scope: !3743)
!3844 = !DILocation(line: 428, column: 19, scope: !3743)
!3845 = !DILocation(line: 428, column: 27, scope: !3743)
!3846 = !DILocation(line: 428, column: 25, scope: !3743)
!3847 = !DILocation(line: 428, column: 11, scope: !3743)
!3848 = !DILocation(line: 428, column: 10, scope: !3743)
!3849 = !DILocation(line: 428, column: 8, scope: !3743)
!3850 = !DILocation(line: 429, column: 26, scope: !3743)
!3851 = !DILocation(line: 429, column: 32, scope: !3743)
!3852 = !DILocation(line: 429, column: 38, scope: !3743)
!3853 = !DILocalVariable(name: "__dummy", scope: !3854, file: !3748, line: 409, type: !108)
!3854 = distinct !DILexicalBlock(scope: !3855, file: !3748, line: 409, column: 2)
!3855 = distinct !DILexicalBlock(scope: !3747, file: !3748, line: 409, column: 2)
!3856 = !DILocation(line: 409, column: 2, scope: !3854, inlinedAt: !3771)
!3857 = !DILocalVariable(name: "__dummy2", scope: !3854, file: !3748, line: 409, type: !108)
!3858 = !DILocalVariable(name: "__dummy", scope: !3859, file: !3748, line: 409, type: !108)
!3859 = distinct !DILexicalBlock(scope: !3860, file: !3748, line: 409, column: 2)
!3860 = distinct !DILexicalBlock(scope: !3861, file: !3748, line: 409, column: 2)
!3861 = distinct !DILexicalBlock(scope: !3862, file: !3748, line: 409, column: 2)
!3862 = distinct !DILexicalBlock(scope: !3855, file: !3748, line: 409, column: 2)
!3863 = !DILocation(line: 409, column: 2, scope: !3859, inlinedAt: !3771)
!3864 = !DILocalVariable(name: "__dummy2", scope: !3859, file: !3748, line: 409, type: !108)
!3865 = !DILocation(line: 409, column: 2, scope: !3860, inlinedAt: !3771)
!3866 = !DILocation(line: 409, column: 2, scope: !3867, inlinedAt: !3771)
!3867 = distinct !DILexicalBlock(scope: !3862, file: !3748, line: 409, column: 2)
!3868 = !{i32 -2145441424}
!3869 = !DILocation(line: 409, column: 2, scope: !3870, inlinedAt: !3771)
!3870 = distinct !DILexicalBlock(scope: !3867, file: !3748, line: 409, column: 2)
!3871 = !DILocation(line: 435, column: 27, scope: !3743)
!3872 = !DILocation(line: 435, column: 33, scope: !3743)
!3873 = !DILocation(line: 435, column: 36, scope: !3743)
!3874 = !DILocation(line: 435, column: 44, scope: !3743)
!3875 = !DILocation(line: 435, column: 51, scope: !3743)
!3876 = !DILocation(line: 435, column: 2, scope: !3743)
!3877 = !DILocation(line: 441, column: 27, scope: !3743)
!3878 = !DILocation(line: 441, column: 33, scope: !3743)
!3879 = !DILocation(line: 441, column: 41, scope: !3743)
!3880 = !DILocation(line: 441, column: 48, scope: !3743)
!3881 = !DILocation(line: 441, column: 2, scope: !3743)
!3882 = !DILocation(line: 443, column: 2, scope: !3743)
!3883 = !DILocation(line: 443, column: 2, scope: !3769)
!3884 = !DILocalVariable(name: "__dummy", scope: !3885, file: !3, line: 443, type: !108)
!3885 = distinct !DILexicalBlock(scope: !3768, file: !3, line: 443, column: 2)
!3886 = !DILocation(line: 443, column: 2, scope: !3885)
!3887 = !DILocalVariable(name: "__dummy2", scope: !3885, file: !3, line: 443, type: !108)
!3888 = !DILocation(line: 443, column: 2, scope: !3768)
!3889 = !DILocation(line: 443, column: 2, scope: !3767)
!3890 = !DILocation(line: 443, column: 2, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 443, column: 2)
!3892 = !DILocalVariable(name: "__dummy", scope: !3893, file: !3, line: 443, type: !108)
!3893 = distinct !DILexicalBlock(scope: !3894, file: !3, line: 443, column: 2)
!3894 = distinct !DILexicalBlock(scope: !3891, file: !3, line: 443, column: 2)
!3895 = !DILocation(line: 443, column: 2, scope: !3893)
!3896 = !DILocalVariable(name: "__dummy2", scope: !3893, file: !3, line: 443, type: !108)
!3897 = !DILocation(line: 443, column: 2, scope: !3894)
!3898 = !DILocation(line: 443, column: 2, scope: !3766)
!3899 = !{i32 -2142739973}
!3900 = !DILocation(line: 443, column: 2, scope: !3765)
!3901 = !DILocation(line: 329, column: 10, scope: !3759, inlinedAt: !3764)
!3902 = !DILocation(line: 329, column: 16, scope: !3759, inlinedAt: !3764)
!3903 = !DILocation(line: 445, column: 21, scope: !3743)
!3904 = !DILocation(line: 445, column: 13, scope: !3743)
!3905 = !DILocation(line: 445, column: 11, scope: !3743)
!3906 = !DILocation(line: 446, column: 7, scope: !3755)
!3907 = !DILocation(line: 446, column: 6, scope: !3743)
!3908 = !DILocation(line: 448, column: 27, scope: !3754)
!3909 = !DILocation(line: 448, column: 33, scope: !3754)
!3910 = !DILocation(line: 448, column: 39, scope: !3754)
!3911 = !DILocation(line: 409, column: 2, scope: !3854, inlinedAt: !3753)
!3912 = !DILocation(line: 409, column: 2, scope: !3859, inlinedAt: !3753)
!3913 = !DILocation(line: 409, column: 2, scope: !3860, inlinedAt: !3753)
!3914 = !DILocation(line: 409, column: 2, scope: !3867, inlinedAt: !3753)
!3915 = !DILocation(line: 409, column: 2, scope: !3870, inlinedAt: !3753)
!3916 = !DILocation(line: 450, column: 3, scope: !3754)
!3917 = !DILocation(line: 451, column: 19, scope: !3754)
!3918 = !DILocation(line: 451, column: 25, scope: !3754)
!3919 = !DILocation(line: 451, column: 29, scope: !3754)
!3920 = !DILocation(line: 451, column: 3, scope: !3754)
!3921 = !DILocation(line: 453, column: 3, scope: !3754)
!3922 = !DILocation(line: 456, column: 22, scope: !3743)
!3923 = !DILocation(line: 456, column: 28, scope: !3743)
!3924 = !DILocation(line: 456, column: 39, scope: !3743)
!3925 = !DILocation(line: 456, column: 11, scope: !3743)
!3926 = !DILocation(line: 456, column: 9, scope: !3743)
!3927 = !DILocation(line: 457, column: 6, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 457, column: 6)
!3929 = !DILocation(line: 457, column: 13, scope: !3928)
!3930 = !DILocation(line: 457, column: 6, scope: !3743)
!3931 = !DILocation(line: 458, column: 7, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3933, file: !3, line: 458, column: 7)
!3933 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 457, column: 18)
!3934 = !DILocation(line: 458, column: 16, scope: !3932)
!3935 = !DILocation(line: 458, column: 23, scope: !3932)
!3936 = !DILocation(line: 458, column: 28, scope: !3932)
!3937 = !DILocation(line: 458, column: 7, scope: !3933)
!3938 = !DILocation(line: 459, column: 4, scope: !3932)
!3939 = !DILocation(line: 459, column: 13, scope: !3932)
!3940 = !DILocation(line: 459, column: 20, scope: !3932)
!3941 = !DILocation(line: 459, column: 25, scope: !3932)
!3942 = !DILocation(line: 460, column: 12, scope: !3933)
!3943 = !DILocation(line: 460, column: 51, scope: !3933)
!3944 = !DILocation(line: 460, column: 3, scope: !3933)
!3945 = !DILocation(line: 461, column: 24, scope: !3933)
!3946 = !DILocation(line: 461, column: 18, scope: !3933)
!3947 = !DILocation(line: 461, column: 3, scope: !3933)
!3948 = !DILocation(line: 461, column: 22, scope: !3933)
!3949 = !DILocation(line: 462, column: 2, scope: !3933)
!3950 = !DILocation(line: 464, column: 23, scope: !3743)
!3951 = !DILocation(line: 464, column: 29, scope: !3743)
!3952 = !DILocation(line: 464, column: 40, scope: !3743)
!3953 = !DILocation(line: 464, column: 11, scope: !3743)
!3954 = !DILocation(line: 464, column: 9, scope: !3743)
!3955 = !DILocation(line: 465, column: 6, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3743, file: !3, line: 465, column: 6)
!3957 = !DILocation(line: 465, column: 13, scope: !3956)
!3958 = !DILocation(line: 465, column: 6, scope: !3743)
!3959 = !DILocation(line: 466, column: 7, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3961, file: !3, line: 466, column: 7)
!3961 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 465, column: 18)
!3962 = !DILocation(line: 466, column: 16, scope: !3960)
!3963 = !DILocation(line: 466, column: 23, scope: !3960)
!3964 = !DILocation(line: 466, column: 28, scope: !3960)
!3965 = !DILocation(line: 466, column: 7, scope: !3961)
!3966 = !DILocation(line: 467, column: 4, scope: !3960)
!3967 = !DILocation(line: 467, column: 13, scope: !3960)
!3968 = !DILocation(line: 467, column: 20, scope: !3960)
!3969 = !DILocation(line: 467, column: 25, scope: !3960)
!3970 = !DILocation(line: 468, column: 12, scope: !3961)
!3971 = !DILocation(line: 468, column: 54, scope: !3961)
!3972 = !DILocation(line: 468, column: 3, scope: !3961)
!3973 = !DILocation(line: 469, column: 24, scope: !3961)
!3974 = !DILocation(line: 469, column: 18, scope: !3961)
!3975 = !DILocation(line: 469, column: 3, scope: !3961)
!3976 = !DILocation(line: 469, column: 22, scope: !3961)
!3977 = !DILocation(line: 470, column: 2, scope: !3961)
!3978 = !DILocation(line: 471, column: 7, scope: !3743)
!3979 = !DILocation(line: 471, column: 2, scope: !3743)
!3980 = !DILocation(line: 471, column: 19, scope: !3743)
!3981 = !DILocation(line: 474, column: 26, scope: !3743)
!3982 = !DILocation(line: 474, column: 32, scope: !3743)
!3983 = !DILocation(line: 474, column: 38, scope: !3743)
!3984 = !DILocation(line: 409, column: 2, scope: !3854, inlinedAt: !3774)
!3985 = !DILocation(line: 409, column: 2, scope: !3859, inlinedAt: !3774)
!3986 = !DILocation(line: 409, column: 2, scope: !3860, inlinedAt: !3774)
!3987 = !DILocation(line: 409, column: 2, scope: !3867, inlinedAt: !3774)
!3988 = !DILocation(line: 409, column: 2, scope: !3870, inlinedAt: !3774)
!3989 = !DILocation(line: 475, column: 22, scope: !3743)
!3990 = !DILocation(line: 475, column: 28, scope: !3743)
!3991 = !DILocation(line: 475, column: 32, scope: !3743)
!3992 = !DILocation(line: 475, column: 51, scope: !3743)
!3993 = !DILocation(line: 475, column: 2, scope: !3743)
!3994 = !DILocation(line: 476, column: 2, scope: !3743)
!3995 = !DILocation(line: 478, column: 2, scope: !3743)
!3996 = !DILocation(line: 479, column: 1, scope: !3743)
!3997 = distinct !DISubprogram(name: "find_cable_index_by_id", scope: !3, file: !3, line: 246, type: !3998, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!3998 = !DISubroutineType(types: !3999)
!3999 = !{!174, !110, !119}
!4000 = !DILocalVariable(name: "edev", arg: 1, scope: !3997, file: !3, line: 246, type: !110)
!4001 = !DILocation(line: 246, column: 54, scope: !3997)
!4002 = !DILocalVariable(name: "id", arg: 2, scope: !3997, file: !3, line: 246, type: !119)
!4003 = !DILocation(line: 246, column: 79, scope: !3997)
!4004 = !DILocalVariable(name: "i", scope: !3997, file: !3, line: 248, type: !174)
!4005 = !DILocation(line: 248, column: 6, scope: !3997)
!4006 = !DILocation(line: 251, column: 9, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !3997, file: !3, line: 251, column: 2)
!4008 = !DILocation(line: 251, column: 7, scope: !4007)
!4009 = !DILocation(line: 251, column: 14, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !4007, file: !3, line: 251, column: 2)
!4011 = !DILocation(line: 251, column: 18, scope: !4010)
!4012 = !DILocation(line: 251, column: 24, scope: !4010)
!4013 = !DILocation(line: 251, column: 16, scope: !4010)
!4014 = !DILocation(line: 251, column: 2, scope: !4007)
!4015 = !DILocation(line: 252, column: 7, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !4017, file: !3, line: 252, column: 7)
!4017 = distinct !DILexicalBlock(scope: !4010, file: !3, line: 251, column: 44)
!4018 = !DILocation(line: 252, column: 13, scope: !4016)
!4019 = !DILocation(line: 252, column: 29, scope: !4016)
!4020 = !DILocation(line: 252, column: 35, scope: !4016)
!4021 = !DILocation(line: 252, column: 32, scope: !4016)
!4022 = !DILocation(line: 252, column: 7, scope: !4017)
!4023 = !DILocation(line: 253, column: 11, scope: !4016)
!4024 = !DILocation(line: 253, column: 4, scope: !4016)
!4025 = !DILocation(line: 254, column: 2, scope: !4017)
!4026 = !DILocation(line: 251, column: 40, scope: !4010)
!4027 = !DILocation(line: 251, column: 2, scope: !4010)
!4028 = distinct !{!4028, !4014, !4029}
!4029 = !DILocation(line: 254, column: 2, scope: !4007)
!4030 = !DILocation(line: 256, column: 2, scope: !3997)
!4031 = !DILocation(line: 257, column: 1, scope: !3997)
!4032 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !4033, file: !4033, line: 666, type: !4034, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!4033 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!4034 = !DISubroutineType(types: !4035)
!4035 = !{!108}
!4036 = !DILocalVariable(name: "f", scope: !4032, file: !4033, line: 668, type: !108)
!4037 = !DILocation(line: 668, column: 16, scope: !4032)
!4038 = !DILocation(line: 670, column: 6, scope: !4032)
!4039 = !DILocation(line: 670, column: 4, scope: !4032)
!4040 = !DILocation(line: 671, column: 2, scope: !4032)
!4041 = !DILocation(line: 672, column: 9, scope: !4032)
!4042 = !DILocation(line: 672, column: 2, scope: !4032)
!4043 = distinct !DISubprogram(name: "name_show", scope: !3, file: !3, line: 367, type: !3638, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!4044 = !DILocalVariable(name: "dev", arg: 1, scope: !4043, file: !3, line: 367, type: !3135)
!4045 = !DILocation(line: 367, column: 41, scope: !4043)
!4046 = !DILocalVariable(name: "attr", arg: 2, scope: !4043, file: !3, line: 367, type: !3640)
!4047 = !DILocation(line: 367, column: 71, scope: !4043)
!4048 = !DILocalVariable(name: "buf", arg: 3, scope: !4043, file: !3, line: 368, type: !104)
!4049 = !DILocation(line: 368, column: 9, scope: !4043)
!4050 = !DILocalVariable(name: "edev", scope: !4043, file: !3, line: 370, type: !110)
!4051 = !DILocation(line: 370, column: 21, scope: !4043)
!4052 = !DILocation(line: 370, column: 44, scope: !4043)
!4053 = !DILocation(line: 370, column: 28, scope: !4043)
!4054 = !DILocation(line: 372, column: 17, scope: !4043)
!4055 = !DILocation(line: 372, column: 30, scope: !4043)
!4056 = !DILocation(line: 372, column: 36, scope: !4043)
!4057 = !DILocation(line: 372, column: 9, scope: !4043)
!4058 = !DILocation(line: 372, column: 2, scope: !4043)
!4059 = distinct !DISubprogram(name: "state_show", scope: !3, file: !3, line: 348, type: !3638, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!4060 = !DILocalVariable(name: "dev", arg: 1, scope: !4059, file: !3, line: 348, type: !3135)
!4061 = !DILocation(line: 348, column: 42, scope: !4059)
!4062 = !DILocalVariable(name: "attr", arg: 2, scope: !4059, file: !3, line: 348, type: !3640)
!4063 = !DILocation(line: 348, column: 72, scope: !4059)
!4064 = !DILocalVariable(name: "buf", arg: 3, scope: !4059, file: !3, line: 349, type: !104)
!4065 = !DILocation(line: 349, column: 12, scope: !4059)
!4066 = !DILocalVariable(name: "i", scope: !4059, file: !3, line: 351, type: !174)
!4067 = !DILocation(line: 351, column: 6, scope: !4059)
!4068 = !DILocalVariable(name: "count", scope: !4059, file: !3, line: 351, type: !174)
!4069 = !DILocation(line: 351, column: 9, scope: !4059)
!4070 = !DILocalVariable(name: "edev", scope: !4059, file: !3, line: 352, type: !110)
!4071 = !DILocation(line: 352, column: 21, scope: !4059)
!4072 = !DILocation(line: 352, column: 44, scope: !4059)
!4073 = !DILocation(line: 352, column: 28, scope: !4059)
!4074 = !DILocation(line: 354, column: 6, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4059, file: !3, line: 354, column: 6)
!4076 = !DILocation(line: 354, column: 12, scope: !4075)
!4077 = !DILocation(line: 354, column: 26, scope: !4075)
!4078 = !DILocation(line: 354, column: 6, scope: !4059)
!4079 = !DILocation(line: 355, column: 18, scope: !4075)
!4080 = !DILocation(line: 355, column: 31, scope: !4075)
!4081 = !DILocation(line: 355, column: 37, scope: !4075)
!4082 = !DILocation(line: 355, column: 10, scope: !4075)
!4083 = !DILocation(line: 355, column: 3, scope: !4075)
!4084 = !DILocation(line: 357, column: 9, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4059, file: !3, line: 357, column: 2)
!4086 = !DILocation(line: 357, column: 7, scope: !4085)
!4087 = !DILocation(line: 357, column: 14, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4085, file: !3, line: 357, column: 2)
!4089 = !DILocation(line: 357, column: 18, scope: !4088)
!4090 = !DILocation(line: 357, column: 24, scope: !4088)
!4091 = !DILocation(line: 357, column: 16, scope: !4088)
!4092 = !DILocation(line: 357, column: 2, scope: !4085)
!4093 = !DILocation(line: 358, column: 20, scope: !4094)
!4094 = distinct !DILexicalBlock(scope: !4088, file: !3, line: 357, column: 44)
!4095 = !DILocation(line: 358, column: 26, scope: !4094)
!4096 = !DILocation(line: 358, column: 24, scope: !4094)
!4097 = !DILocation(line: 359, column: 17, scope: !4094)
!4098 = !DILocation(line: 359, column: 23, scope: !4094)
!4099 = !DILocation(line: 359, column: 39, scope: !4094)
!4100 = !DILocation(line: 359, column: 5, scope: !4094)
!4101 = !DILocation(line: 359, column: 43, scope: !4094)
!4102 = !DILocation(line: 360, column: 9, scope: !4094)
!4103 = !DILocation(line: 360, column: 15, scope: !4094)
!4104 = !DILocation(line: 360, column: 23, scope: !4094)
!4105 = !DILocation(line: 360, column: 21, scope: !4094)
!4106 = !DILocation(line: 360, column: 7, scope: !4094)
!4107 = !DILocation(line: 360, column: 6, scope: !4094)
!4108 = !DILocation(line: 358, column: 12, scope: !4094)
!4109 = !DILocation(line: 358, column: 9, scope: !4094)
!4110 = !DILocation(line: 361, column: 2, scope: !4094)
!4111 = !DILocation(line: 357, column: 40, scope: !4088)
!4112 = !DILocation(line: 357, column: 2, scope: !4088)
!4113 = distinct !{!4113, !4092, !4114}
!4114 = !DILocation(line: 361, column: 2, scope: !4085)
!4115 = !DILocation(line: 363, column: 9, scope: !4059)
!4116 = !DILocation(line: 363, column: 2, scope: !4059)
!4117 = !DILocation(line: 364, column: 1, scope: !4059)
!4118 = distinct !DISubprogram(name: "extcon_get_state", scope: !3, file: !3, line: 489, type: !3998, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !162)
!4119 = !DILocation(line: 407, column: 64, scope: !3747, inlinedAt: !4120)
!4120 = distinct !DILocation(line: 503, column: 2, scope: !4118)
!4121 = !DILocation(line: 407, column: 84, scope: !3747, inlinedAt: !4120)
!4122 = !DILocation(line: 327, column: 67, scope: !3759, inlinedAt: !4123)
!4123 = distinct !DILocation(line: 501, column: 2, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4125, file: !3, line: 501, column: 2)
!4125 = distinct !DILexicalBlock(scope: !4126, file: !3, line: 501, column: 2)
!4126 = distinct !DILexicalBlock(scope: !4127, file: !3, line: 501, column: 2)
!4127 = distinct !DILexicalBlock(scope: !4128, file: !3, line: 501, column: 2)
!4128 = distinct !DILexicalBlock(scope: !4118, file: !3, line: 501, column: 2)
!4129 = !DILocalVariable(name: "edev", arg: 1, scope: !4118, file: !3, line: 489, type: !110)
!4130 = !DILocation(line: 489, column: 41, scope: !4118)
!4131 = !DILocalVariable(name: "id", arg: 2, scope: !4118, file: !3, line: 489, type: !119)
!4132 = !DILocation(line: 489, column: 66, scope: !4118)
!4133 = !DILocalVariable(name: "index", scope: !4118, file: !3, line: 491, type: !174)
!4134 = !DILocation(line: 491, column: 6, scope: !4118)
!4135 = !DILocalVariable(name: "state", scope: !4118, file: !3, line: 491, type: !174)
!4136 = !DILocation(line: 491, column: 13, scope: !4118)
!4137 = !DILocalVariable(name: "flags", scope: !4118, file: !3, line: 492, type: !108)
!4138 = !DILocation(line: 492, column: 16, scope: !4118)
!4139 = !DILocation(line: 494, column: 7, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4118, file: !3, line: 494, column: 6)
!4141 = !DILocation(line: 494, column: 6, scope: !4118)
!4142 = !DILocation(line: 495, column: 3, scope: !4140)
!4143 = !DILocation(line: 497, column: 33, scope: !4118)
!4144 = !DILocation(line: 497, column: 39, scope: !4118)
!4145 = !DILocation(line: 497, column: 10, scope: !4118)
!4146 = !DILocation(line: 497, column: 8, scope: !4118)
!4147 = !DILocation(line: 498, column: 6, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4118, file: !3, line: 498, column: 6)
!4149 = !DILocation(line: 498, column: 12, scope: !4148)
!4150 = !DILocation(line: 498, column: 6, scope: !4118)
!4151 = !DILocation(line: 499, column: 10, scope: !4148)
!4152 = !DILocation(line: 499, column: 3, scope: !4148)
!4153 = !DILocation(line: 501, column: 2, scope: !4118)
!4154 = !DILocation(line: 501, column: 2, scope: !4128)
!4155 = !DILocalVariable(name: "__dummy", scope: !4156, file: !3, line: 501, type: !108)
!4156 = distinct !DILexicalBlock(scope: !4127, file: !3, line: 501, column: 2)
!4157 = !DILocation(line: 501, column: 2, scope: !4156)
!4158 = !DILocalVariable(name: "__dummy2", scope: !4156, file: !3, line: 501, type: !108)
!4159 = !DILocation(line: 501, column: 2, scope: !4127)
!4160 = !DILocation(line: 501, column: 2, scope: !4126)
!4161 = !DILocation(line: 501, column: 2, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4126, file: !3, line: 501, column: 2)
!4163 = !DILocalVariable(name: "__dummy", scope: !4164, file: !3, line: 501, type: !108)
!4164 = distinct !DILexicalBlock(scope: !4165, file: !3, line: 501, column: 2)
!4165 = distinct !DILexicalBlock(scope: !4162, file: !3, line: 501, column: 2)
!4166 = !DILocation(line: 501, column: 2, scope: !4164)
!4167 = !DILocalVariable(name: "__dummy2", scope: !4164, file: !3, line: 501, type: !108)
!4168 = !DILocation(line: 501, column: 2, scope: !4165)
!4169 = !DILocation(line: 501, column: 2, scope: !4125)
!4170 = !{i32 -2142738477}
!4171 = !DILocation(line: 501, column: 2, scope: !4124)
!4172 = !DILocation(line: 329, column: 10, scope: !3759, inlinedAt: !4123)
!4173 = !DILocation(line: 329, column: 16, scope: !3759, inlinedAt: !4123)
!4174 = !DILocation(line: 502, column: 29, scope: !4118)
!4175 = !DILocation(line: 502, column: 35, scope: !4118)
!4176 = !DILocation(line: 502, column: 10, scope: !4118)
!4177 = !DILocation(line: 502, column: 8, scope: !4118)
!4178 = !DILocation(line: 503, column: 26, scope: !4118)
!4179 = !DILocation(line: 503, column: 32, scope: !4118)
!4180 = !DILocation(line: 503, column: 38, scope: !4118)
!4181 = !DILocation(line: 409, column: 2, scope: !3854, inlinedAt: !4120)
!4182 = !DILocation(line: 409, column: 2, scope: !3859, inlinedAt: !4120)
!4183 = !DILocation(line: 409, column: 2, scope: !3860, inlinedAt: !4120)
!4184 = !DILocation(line: 409, column: 2, scope: !3867, inlinedAt: !4120)
!4185 = !DILocation(line: 409, column: 2, scope: !3870, inlinedAt: !4120)
!4186 = !DILocation(line: 505, column: 9, scope: !4118)
!4187 = !DILocation(line: 505, column: 2, scope: !4118)
!4188 = !DILocation(line: 506, column: 1, scope: !4118)
!4189 = distinct !DISubprogram(name: "is_extcon_attached", scope: !3, file: !3, line: 275, type: !4190, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!4190 = !DISubroutineType(types: !4191)
!4191 = !{!400, !110, !7}
!4192 = !DILocalVariable(name: "edev", arg: 1, scope: !4189, file: !3, line: 275, type: !110)
!4193 = !DILocation(line: 275, column: 51, scope: !4189)
!4194 = !DILocalVariable(name: "index", arg: 2, scope: !4189, file: !3, line: 275, type: !7)
!4195 = !DILocation(line: 275, column: 70, scope: !4189)
!4196 = !DILocation(line: 277, column: 12, scope: !4189)
!4197 = !DILocation(line: 277, column: 18, scope: !4189)
!4198 = !DILocation(line: 277, column: 26, scope: !4189)
!4199 = !DILocation(line: 277, column: 24, scope: !4189)
!4200 = !DILocation(line: 277, column: 10, scope: !4189)
!4201 = !DILocation(line: 277, column: 9, scope: !4189)
!4202 = !DILocation(line: 277, column: 2, scope: !4189)
!4203 = distinct !DISubprogram(name: "extcon_set_state", scope: !3, file: !3, line: 522, type: !4204, scopeLine: 523, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !162)
!4204 = !DISubroutineType(types: !4205)
!4205 = !{!174, !110, !7, !400}
!4206 = !DILocation(line: 407, column: 64, scope: !3747, inlinedAt: !4207)
!4207 = distinct !DILocation(line: 559, column: 2, scope: !4203)
!4208 = !DILocation(line: 407, column: 84, scope: !3747, inlinedAt: !4207)
!4209 = !DILocation(line: 327, column: 67, scope: !3759, inlinedAt: !4210)
!4210 = distinct !DILocation(line: 534, column: 2, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4212, file: !3, line: 534, column: 2)
!4212 = distinct !DILexicalBlock(scope: !4213, file: !3, line: 534, column: 2)
!4213 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 534, column: 2)
!4214 = distinct !DILexicalBlock(scope: !4215, file: !3, line: 534, column: 2)
!4215 = distinct !DILexicalBlock(scope: !4203, file: !3, line: 534, column: 2)
!4216 = !DILocalVariable(name: "edev", arg: 1, scope: !4203, file: !3, line: 522, type: !110)
!4217 = !DILocation(line: 522, column: 41, scope: !4203)
!4218 = !DILocalVariable(name: "id", arg: 2, scope: !4203, file: !3, line: 522, type: !7)
!4219 = !DILocation(line: 522, column: 60, scope: !4203)
!4220 = !DILocalVariable(name: "state", arg: 3, scope: !4203, file: !3, line: 522, type: !400)
!4221 = !DILocation(line: 522, column: 69, scope: !4203)
!4222 = !DILocalVariable(name: "flags", scope: !4203, file: !3, line: 524, type: !108)
!4223 = !DILocation(line: 524, column: 16, scope: !4203)
!4224 = !DILocalVariable(name: "index", scope: !4203, file: !3, line: 525, type: !174)
!4225 = !DILocation(line: 525, column: 6, scope: !4203)
!4226 = !DILocalVariable(name: "ret", scope: !4203, file: !3, line: 525, type: !174)
!4227 = !DILocation(line: 525, column: 13, scope: !4203)
!4228 = !DILocation(line: 527, column: 7, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4203, file: !3, line: 527, column: 6)
!4230 = !DILocation(line: 527, column: 6, scope: !4203)
!4231 = !DILocation(line: 528, column: 3, scope: !4229)
!4232 = !DILocation(line: 530, column: 33, scope: !4203)
!4233 = !DILocation(line: 530, column: 39, scope: !4203)
!4234 = !DILocation(line: 530, column: 10, scope: !4203)
!4235 = !DILocation(line: 530, column: 8, scope: !4203)
!4236 = !DILocation(line: 531, column: 6, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4203, file: !3, line: 531, column: 6)
!4238 = !DILocation(line: 531, column: 12, scope: !4237)
!4239 = !DILocation(line: 531, column: 6, scope: !4203)
!4240 = !DILocation(line: 532, column: 10, scope: !4237)
!4241 = !DILocation(line: 532, column: 3, scope: !4237)
!4242 = !DILocation(line: 534, column: 2, scope: !4203)
!4243 = !DILocation(line: 534, column: 2, scope: !4215)
!4244 = !DILocalVariable(name: "__dummy", scope: !4245, file: !3, line: 534, type: !108)
!4245 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 534, column: 2)
!4246 = !DILocation(line: 534, column: 2, scope: !4245)
!4247 = !DILocalVariable(name: "__dummy2", scope: !4245, file: !3, line: 534, type: !108)
!4248 = !DILocation(line: 534, column: 2, scope: !4214)
!4249 = !DILocation(line: 534, column: 2, scope: !4213)
!4250 = !DILocation(line: 534, column: 2, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4213, file: !3, line: 534, column: 2)
!4252 = !DILocalVariable(name: "__dummy", scope: !4253, file: !3, line: 534, type: !108)
!4253 = distinct !DILexicalBlock(scope: !4254, file: !3, line: 534, column: 2)
!4254 = distinct !DILexicalBlock(scope: !4251, file: !3, line: 534, column: 2)
!4255 = !DILocation(line: 534, column: 2, scope: !4253)
!4256 = !DILocalVariable(name: "__dummy2", scope: !4253, file: !3, line: 534, type: !108)
!4257 = !DILocation(line: 534, column: 2, scope: !4254)
!4258 = !DILocation(line: 534, column: 2, scope: !4212)
!4259 = !{i32 -2142737356}
!4260 = !DILocation(line: 534, column: 2, scope: !4211)
!4261 = !DILocation(line: 329, column: 10, scope: !3759, inlinedAt: !4210)
!4262 = !DILocation(line: 329, column: 16, scope: !3759, inlinedAt: !4210)
!4263 = !DILocation(line: 537, column: 25, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4203, file: !3, line: 537, column: 6)
!4265 = !DILocation(line: 537, column: 31, scope: !4264)
!4266 = !DILocation(line: 537, column: 38, scope: !4264)
!4267 = !DILocation(line: 537, column: 7, scope: !4264)
!4268 = !DILocation(line: 537, column: 6, scope: !4203)
!4269 = !DILocation(line: 538, column: 3, scope: !4264)
!4270 = !DILocation(line: 540, column: 31, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4203, file: !3, line: 540, column: 6)
!4272 = !DILocation(line: 541, column: 4, scope: !4271)
!4273 = !DILocation(line: 541, column: 10, scope: !4271)
!4274 = !DILocation(line: 541, column: 19, scope: !4271)
!4275 = !DILocation(line: 541, column: 18, scope: !4271)
!4276 = !DILocation(line: 541, column: 16, scope: !4271)
!4277 = !DILocation(line: 541, column: 34, scope: !4271)
!4278 = !DILocation(line: 541, column: 42, scope: !4271)
!4279 = !DILocation(line: 541, column: 40, scope: !4271)
!4280 = !DILocation(line: 541, column: 31, scope: !4271)
!4281 = !DILocation(line: 541, column: 3, scope: !4271)
!4282 = !DILocation(line: 540, column: 6, scope: !4271)
!4283 = !DILocation(line: 540, column: 6, scope: !4203)
!4284 = !DILocation(line: 542, column: 7, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4271, file: !3, line: 541, column: 56)
!4286 = !DILocation(line: 543, column: 3, scope: !4285)
!4287 = !DILocation(line: 550, column: 7, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4203, file: !3, line: 550, column: 6)
!4289 = !DILocation(line: 550, column: 6, scope: !4203)
!4290 = !DILocation(line: 551, column: 17, scope: !4288)
!4291 = !DILocation(line: 551, column: 23, scope: !4288)
!4292 = !DILocation(line: 551, column: 27, scope: !4288)
!4293 = !DILocation(line: 551, column: 3, scope: !4288)
!4294 = !DILocation(line: 554, column: 6, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4203, file: !3, line: 554, column: 6)
!4296 = !DILocation(line: 554, column: 6, scope: !4203)
!4297 = !DILocation(line: 555, column: 18, scope: !4295)
!4298 = !DILocation(line: 555, column: 3, scope: !4295)
!4299 = !DILocation(line: 555, column: 9, scope: !4295)
!4300 = !DILocation(line: 555, column: 15, scope: !4295)
!4301 = !DILocation(line: 557, column: 20, scope: !4295)
!4302 = !DILocation(line: 557, column: 18, scope: !4295)
!4303 = !DILocation(line: 557, column: 3, scope: !4295)
!4304 = !DILocation(line: 557, column: 9, scope: !4295)
!4305 = !DILocation(line: 557, column: 15, scope: !4295)
!4306 = !DILabel(scope: !4203, name: "out", file: !3, line: 558)
!4307 = !DILocation(line: 558, column: 1, scope: !4203)
!4308 = !DILocation(line: 559, column: 26, scope: !4203)
!4309 = !DILocation(line: 559, column: 32, scope: !4203)
!4310 = !DILocation(line: 559, column: 38, scope: !4203)
!4311 = !DILocation(line: 409, column: 2, scope: !3854, inlinedAt: !4207)
!4312 = !DILocation(line: 409, column: 2, scope: !3859, inlinedAt: !4207)
!4313 = !DILocation(line: 409, column: 2, scope: !3860, inlinedAt: !4207)
!4314 = !DILocation(line: 409, column: 2, scope: !3867, inlinedAt: !4207)
!4315 = !DILocation(line: 409, column: 2, scope: !3870, inlinedAt: !4207)
!4316 = !DILocation(line: 561, column: 9, scope: !4203)
!4317 = !DILocation(line: 561, column: 2, scope: !4203)
!4318 = !DILocation(line: 562, column: 1, scope: !4203)
!4319 = distinct !DISubprogram(name: "is_extcon_changed", scope: !3, file: !3, line: 280, type: !4320, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!4320 = !DISubroutineType(types: !4321)
!4321 = !{!400, !110, !174, !400}
!4322 = !DILocalVariable(name: "edev", arg: 1, scope: !4319, file: !3, line: 280, type: !110)
!4323 = !DILocation(line: 280, column: 50, scope: !4319)
!4324 = !DILocalVariable(name: "index", arg: 2, scope: !4319, file: !3, line: 280, type: !174)
!4325 = !DILocation(line: 280, column: 60, scope: !4319)
!4326 = !DILocalVariable(name: "new_state", arg: 3, scope: !4319, file: !3, line: 281, type: !400)
!4327 = !DILocation(line: 281, column: 10, scope: !4319)
!4328 = !DILocalVariable(name: "state", scope: !4319, file: !3, line: 283, type: !174)
!4329 = !DILocation(line: 283, column: 6, scope: !4319)
!4330 = !DILocation(line: 283, column: 17, scope: !4319)
!4331 = !DILocation(line: 283, column: 23, scope: !4319)
!4332 = !DILocation(line: 283, column: 31, scope: !4319)
!4333 = !DILocation(line: 283, column: 29, scope: !4319)
!4334 = !DILocation(line: 283, column: 15, scope: !4319)
!4335 = !DILocation(line: 283, column: 14, scope: !4319)
!4336 = !DILocation(line: 284, column: 10, scope: !4319)
!4337 = !DILocation(line: 284, column: 19, scope: !4319)
!4338 = !DILocation(line: 284, column: 16, scope: !4319)
!4339 = !DILocation(line: 284, column: 2, scope: !4319)
!4340 = distinct !DISubprogram(name: "check_mutually_exclusive", scope: !3, file: !3, line: 226, type: !4341, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!4341 = !DISubroutineType(types: !4342)
!4342 = !{!174, !110, !123}
!4343 = !DILocalVariable(name: "w", arg: 1, scope: !4344, file: !4345, line: 15, type: !7)
!4344 = distinct !DISubprogram(name: "__arch_hweight32", scope: !4345, file: !4345, line: 15, type: !4346, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!4345 = !DIFile(filename: "./arch/x86/include/asm/arch_hweight.h", directory: "/home/lizy2001/genbc/linux")
!4346 = !DISubroutineType(types: !4347)
!4347 = !{!7, !7}
!4348 = !DILocation(line: 15, column: 67, scope: !4344, inlinedAt: !4349)
!4349 = distinct !DILocation(line: 238, column: 12, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4351, file: !3, line: 233, column: 48)
!4351 = distinct !DILexicalBlock(scope: !4352, file: !3, line: 233, column: 2)
!4352 = distinct !DILexicalBlock(scope: !4340, file: !3, line: 233, column: 2)
!4353 = !DILocalVariable(name: "res", scope: !4344, file: !4345, line: 17, type: !7)
!4354 = !DILocation(line: 17, column: 15, scope: !4344, inlinedAt: !4349)
!4355 = !DILocalVariable(name: "edev", arg: 1, scope: !4340, file: !3, line: 226, type: !110)
!4356 = !DILocation(line: 226, column: 56, scope: !4340)
!4357 = !DILocalVariable(name: "new_state", arg: 2, scope: !4340, file: !3, line: 226, type: !123)
!4358 = !DILocation(line: 226, column: 66, scope: !4340)
!4359 = !DILocalVariable(name: "i", scope: !4340, file: !3, line: 228, type: !174)
!4360 = !DILocation(line: 228, column: 6, scope: !4340)
!4361 = !DILocation(line: 230, column: 7, scope: !4362)
!4362 = distinct !DILexicalBlock(scope: !4340, file: !3, line: 230, column: 6)
!4363 = !DILocation(line: 230, column: 13, scope: !4362)
!4364 = !DILocation(line: 230, column: 6, scope: !4340)
!4365 = !DILocation(line: 231, column: 3, scope: !4362)
!4366 = !DILocation(line: 233, column: 9, scope: !4352)
!4367 = !DILocation(line: 233, column: 7, scope: !4352)
!4368 = !DILocation(line: 233, column: 14, scope: !4351)
!4369 = !DILocation(line: 233, column: 20, scope: !4351)
!4370 = !DILocation(line: 233, column: 39, scope: !4351)
!4371 = !DILocation(line: 233, column: 2, scope: !4352)
!4372 = !DILocalVariable(name: "weight", scope: !4350, file: !3, line: 234, type: !174)
!4373 = !DILocation(line: 234, column: 7, scope: !4350)
!4374 = !DILocalVariable(name: "correspondants", scope: !4350, file: !3, line: 235, type: !123)
!4375 = !DILocation(line: 235, column: 7, scope: !4350)
!4376 = !DILocation(line: 235, column: 24, scope: !4350)
!4377 = !DILocation(line: 235, column: 36, scope: !4350)
!4378 = !DILocation(line: 235, column: 42, scope: !4350)
!4379 = !DILocation(line: 235, column: 61, scope: !4350)
!4380 = !DILocation(line: 235, column: 34, scope: !4350)
!4381 = !DILocation(line: 238, column: 12, scope: !4350)
!4382 = !DILocation(line: 21, column: 15, scope: !4344, inlinedAt: !4349)
!4383 = !DILocation(line: 19, column: 2, scope: !4344, inlinedAt: !4349)
!4384 = !{i32 -2147070501, i32 -2147070473, i32 -2147070467, i32 -2147070451, i32 -2147070435, i32 -2147070408, i32 -2147070075, i32 -2147070793, i32 -2147070069, i32 -2147070021, i32 -2147069957, i32 -2147069895, i32 -2147069838, i32 -2147069782, i32 -2147070713, i32 -2147070688, i32 -2147069548, i32 -2147069418, i32 -2147069487, i32 -2147069404, i32 -2147070588}
!4385 = !DILocation(line: 23, column: 9, scope: !4344, inlinedAt: !4349)
!4386 = !DILocation(line: 238, column: 10, scope: !4350)
!4387 = !DILocation(line: 239, column: 7, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 239, column: 7)
!4389 = !DILocation(line: 239, column: 14, scope: !4388)
!4390 = !DILocation(line: 239, column: 7, scope: !4350)
!4391 = !DILocation(line: 240, column: 11, scope: !4388)
!4392 = !DILocation(line: 240, column: 13, scope: !4388)
!4393 = !DILocation(line: 240, column: 4, scope: !4388)
!4394 = !DILocation(line: 241, column: 2, scope: !4350)
!4395 = !DILocation(line: 233, column: 44, scope: !4351)
!4396 = !DILocation(line: 233, column: 2, scope: !4351)
!4397 = distinct !{!4397, !4371, !4398}
!4398 = !DILocation(line: 241, column: 2, scope: !4352)
!4399 = !DILocation(line: 243, column: 2, scope: !4340)
!4400 = !DILocation(line: 244, column: 1, scope: !4340)
!4401 = distinct !DISubprogram(name: "init_property", scope: !3, file: !3, line: 333, type: !4402, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!4402 = !DISubroutineType(types: !4403)
!4403 = !{null, !110, !7, !174}
!4404 = !DILocalVariable(name: "edev", arg: 1, scope: !4401, file: !3, line: 333, type: !110)
!4405 = !DILocation(line: 333, column: 46, scope: !4401)
!4406 = !DILocalVariable(name: "id", arg: 2, scope: !4401, file: !3, line: 333, type: !7)
!4407 = !DILocation(line: 333, column: 65, scope: !4401)
!4408 = !DILocalVariable(name: "index", arg: 3, scope: !4401, file: !3, line: 333, type: !174)
!4409 = !DILocation(line: 333, column: 73, scope: !4401)
!4410 = !DILocalVariable(name: "type", scope: !4401, file: !3, line: 335, type: !7)
!4411 = !DILocation(line: 335, column: 15, scope: !4401)
!4412 = !DILocation(line: 335, column: 34, scope: !4401)
!4413 = !DILocation(line: 335, column: 22, scope: !4401)
!4414 = !DILocation(line: 335, column: 38, scope: !4401)
!4415 = !DILocalVariable(name: "cable", scope: !4401, file: !3, line: 336, type: !3626)
!4416 = !DILocation(line: 336, column: 23, scope: !4401)
!4417 = !DILocation(line: 336, column: 32, scope: !4401)
!4418 = !DILocation(line: 336, column: 38, scope: !4401)
!4419 = !DILocation(line: 336, column: 45, scope: !4401)
!4420 = !DILocation(line: 338, column: 24, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 338, column: 6)
!4422 = !DILocation(line: 338, column: 22, scope: !4421)
!4423 = !DILocation(line: 338, column: 6, scope: !4401)
!4424 = !DILocation(line: 339, column: 10, scope: !4421)
!4425 = !DILocation(line: 339, column: 17, scope: !4421)
!4426 = !DILocation(line: 339, column: 3, scope: !4421)
!4427 = !DILocation(line: 340, column: 24, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 340, column: 6)
!4429 = !DILocation(line: 340, column: 22, scope: !4428)
!4430 = !DILocation(line: 340, column: 6, scope: !4401)
!4431 = !DILocation(line: 341, column: 10, scope: !4428)
!4432 = !DILocation(line: 341, column: 17, scope: !4428)
!4433 = !DILocation(line: 341, column: 3, scope: !4428)
!4434 = !DILocation(line: 342, column: 25, scope: !4435)
!4435 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 342, column: 6)
!4436 = !DILocation(line: 342, column: 23, scope: !4435)
!4437 = !DILocation(line: 342, column: 6, scope: !4401)
!4438 = !DILocation(line: 343, column: 10, scope: !4435)
!4439 = !DILocation(line: 343, column: 17, scope: !4435)
!4440 = !DILocation(line: 343, column: 3, scope: !4435)
!4441 = !DILocation(line: 344, column: 25, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 344, column: 6)
!4443 = !DILocation(line: 344, column: 23, scope: !4442)
!4444 = !DILocation(line: 344, column: 6, scope: !4401)
!4445 = !DILocation(line: 345, column: 10, scope: !4442)
!4446 = !DILocation(line: 345, column: 17, scope: !4442)
!4447 = !DILocation(line: 345, column: 3, scope: !4442)
!4448 = !DILocation(line: 346, column: 1, scope: !4401)
!4449 = distinct !DISubprogram(name: "extcon_set_state_sync", scope: !3, file: !3, line: 577, type: !4204, scopeLine: 578, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !162)
!4450 = !DILocation(line: 407, column: 64, scope: !3747, inlinedAt: !4451)
!4451 = distinct !DILocation(line: 589, column: 2, scope: !4449)
!4452 = !DILocation(line: 407, column: 84, scope: !3747, inlinedAt: !4451)
!4453 = !DILocation(line: 327, column: 67, scope: !3759, inlinedAt: !4454)
!4454 = distinct !DILocation(line: 587, column: 2, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 587, column: 2)
!4456 = distinct !DILexicalBlock(scope: !4457, file: !3, line: 587, column: 2)
!4457 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 587, column: 2)
!4458 = distinct !DILexicalBlock(scope: !4459, file: !3, line: 587, column: 2)
!4459 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 587, column: 2)
!4460 = !DILocalVariable(name: "edev", arg: 1, scope: !4449, file: !3, line: 577, type: !110)
!4461 = !DILocation(line: 577, column: 46, scope: !4449)
!4462 = !DILocalVariable(name: "id", arg: 2, scope: !4449, file: !3, line: 577, type: !7)
!4463 = !DILocation(line: 577, column: 65, scope: !4449)
!4464 = !DILocalVariable(name: "state", arg: 3, scope: !4449, file: !3, line: 577, type: !400)
!4465 = !DILocation(line: 577, column: 74, scope: !4449)
!4466 = !DILocalVariable(name: "ret", scope: !4449, file: !3, line: 579, type: !174)
!4467 = !DILocation(line: 579, column: 6, scope: !4449)
!4468 = !DILocalVariable(name: "index", scope: !4449, file: !3, line: 579, type: !174)
!4469 = !DILocation(line: 579, column: 11, scope: !4449)
!4470 = !DILocalVariable(name: "flags", scope: !4449, file: !3, line: 580, type: !108)
!4471 = !DILocation(line: 580, column: 16, scope: !4449)
!4472 = !DILocation(line: 582, column: 33, scope: !4449)
!4473 = !DILocation(line: 582, column: 39, scope: !4449)
!4474 = !DILocation(line: 582, column: 10, scope: !4449)
!4475 = !DILocation(line: 582, column: 8, scope: !4449)
!4476 = !DILocation(line: 583, column: 6, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 583, column: 6)
!4478 = !DILocation(line: 583, column: 12, scope: !4477)
!4479 = !DILocation(line: 583, column: 6, scope: !4449)
!4480 = !DILocation(line: 584, column: 10, scope: !4477)
!4481 = !DILocation(line: 584, column: 3, scope: !4477)
!4482 = !DILocation(line: 587, column: 2, scope: !4449)
!4483 = !DILocation(line: 587, column: 2, scope: !4459)
!4484 = !DILocalVariable(name: "__dummy", scope: !4485, file: !3, line: 587, type: !108)
!4485 = distinct !DILexicalBlock(scope: !4458, file: !3, line: 587, column: 2)
!4486 = !DILocation(line: 587, column: 2, scope: !4485)
!4487 = !DILocalVariable(name: "__dummy2", scope: !4485, file: !3, line: 587, type: !108)
!4488 = !DILocation(line: 587, column: 2, scope: !4458)
!4489 = !DILocation(line: 587, column: 2, scope: !4457)
!4490 = !DILocation(line: 587, column: 2, scope: !4491)
!4491 = distinct !DILexicalBlock(scope: !4457, file: !3, line: 587, column: 2)
!4492 = !DILocalVariable(name: "__dummy", scope: !4493, file: !3, line: 587, type: !108)
!4493 = distinct !DILexicalBlock(scope: !4494, file: !3, line: 587, column: 2)
!4494 = distinct !DILexicalBlock(scope: !4491, file: !3, line: 587, column: 2)
!4495 = !DILocation(line: 587, column: 2, scope: !4493)
!4496 = !DILocalVariable(name: "__dummy2", scope: !4493, file: !3, line: 587, type: !108)
!4497 = !DILocation(line: 587, column: 2, scope: !4494)
!4498 = !DILocation(line: 587, column: 2, scope: !4456)
!4499 = !{i32 -2142735920}
!4500 = !DILocation(line: 587, column: 2, scope: !4455)
!4501 = !DILocation(line: 329, column: 10, scope: !3759, inlinedAt: !4454)
!4502 = !DILocation(line: 329, column: 16, scope: !3759, inlinedAt: !4454)
!4503 = !DILocation(line: 588, column: 26, scope: !4449)
!4504 = !DILocation(line: 588, column: 32, scope: !4449)
!4505 = !DILocation(line: 588, column: 39, scope: !4449)
!4506 = !DILocation(line: 588, column: 8, scope: !4449)
!4507 = !DILocation(line: 588, column: 6, scope: !4449)
!4508 = !DILocation(line: 589, column: 26, scope: !4449)
!4509 = !DILocation(line: 589, column: 32, scope: !4449)
!4510 = !DILocation(line: 589, column: 38, scope: !4449)
!4511 = !DILocation(line: 409, column: 2, scope: !3854, inlinedAt: !4451)
!4512 = !DILocation(line: 409, column: 2, scope: !3859, inlinedAt: !4451)
!4513 = !DILocation(line: 409, column: 2, scope: !3860, inlinedAt: !4451)
!4514 = !DILocation(line: 409, column: 2, scope: !3867, inlinedAt: !4451)
!4515 = !DILocation(line: 409, column: 2, scope: !3870, inlinedAt: !4451)
!4516 = !DILocation(line: 590, column: 7, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 590, column: 6)
!4518 = !DILocation(line: 590, column: 6, scope: !4449)
!4519 = !DILocation(line: 591, column: 3, scope: !4517)
!4520 = !DILocation(line: 593, column: 25, scope: !4449)
!4521 = !DILocation(line: 593, column: 31, scope: !4449)
!4522 = !DILocation(line: 593, column: 35, scope: !4449)
!4523 = !DILocation(line: 593, column: 8, scope: !4449)
!4524 = !DILocation(line: 593, column: 6, scope: !4449)
!4525 = !DILocation(line: 594, column: 6, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 594, column: 6)
!4527 = !DILocation(line: 594, column: 10, scope: !4526)
!4528 = !DILocation(line: 594, column: 6, scope: !4449)
!4529 = !DILocation(line: 595, column: 10, scope: !4526)
!4530 = !DILocation(line: 595, column: 3, scope: !4526)
!4531 = !DILocation(line: 597, column: 21, scope: !4449)
!4532 = !DILocation(line: 597, column: 27, scope: !4449)
!4533 = !DILocation(line: 597, column: 9, scope: !4449)
!4534 = !DILocation(line: 597, column: 2, scope: !4449)
!4535 = !DILocation(line: 598, column: 1, scope: !4449)
!4536 = distinct !DISubprogram(name: "extcon_get_property", scope: !3, file: !3, line: 615, type: !4537, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !162)
!4537 = !DISubroutineType(types: !4538)
!4538 = !{!174, !110, !7, !7, !4539}
!4539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3650, size: 64)
!4540 = !DILocation(line: 407, column: 64, scope: !3747, inlinedAt: !4541)
!4541 = distinct !DILocation(line: 651, column: 3, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 650, column: 40)
!4543 = distinct !DILexicalBlock(scope: !4536, file: !3, line: 650, column: 6)
!4544 = !DILocation(line: 407, column: 84, scope: !3747, inlinedAt: !4541)
!4545 = !DILocation(line: 407, column: 64, scope: !3747, inlinedAt: !4546)
!4546 = distinct !DILocation(line: 641, column: 3, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4548, file: !3, line: 640, column: 61)
!4548 = distinct !DILexicalBlock(scope: !4536, file: !3, line: 640, column: 6)
!4549 = !DILocation(line: 407, column: 84, scope: !3747, inlinedAt: !4546)
!4550 = !DILocation(line: 407, column: 64, scope: !3747, inlinedAt: !4551)
!4551 = distinct !DILocation(line: 676, column: 2, scope: !4536)
!4552 = !DILocation(line: 407, column: 84, scope: !3747, inlinedAt: !4551)
!4553 = !DILocation(line: 327, column: 67, scope: !3759, inlinedAt: !4554)
!4554 = distinct !DILocation(line: 637, column: 2, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 637, column: 2)
!4556 = distinct !DILexicalBlock(scope: !4557, file: !3, line: 637, column: 2)
!4557 = distinct !DILexicalBlock(scope: !4558, file: !3, line: 637, column: 2)
!4558 = distinct !DILexicalBlock(scope: !4559, file: !3, line: 637, column: 2)
!4559 = distinct !DILexicalBlock(scope: !4536, file: !3, line: 637, column: 2)
!4560 = !DILocalVariable(name: "edev", arg: 1, scope: !4536, file: !3, line: 615, type: !110)
!4561 = !DILocation(line: 615, column: 44, scope: !4536)
!4562 = !DILocalVariable(name: "id", arg: 2, scope: !4536, file: !3, line: 615, type: !7)
!4563 = !DILocation(line: 615, column: 63, scope: !4536)
!4564 = !DILocalVariable(name: "prop", arg: 3, scope: !4536, file: !3, line: 616, type: !7)
!4565 = !DILocation(line: 616, column: 18, scope: !4536)
!4566 = !DILocalVariable(name: "prop_val", arg: 4, scope: !4536, file: !3, line: 617, type: !4539)
!4567 = !DILocation(line: 617, column: 34, scope: !4536)
!4568 = !DILocalVariable(name: "cable", scope: !4536, file: !3, line: 619, type: !3626)
!4569 = !DILocation(line: 619, column: 23, scope: !4536)
!4570 = !DILocalVariable(name: "flags", scope: !4536, file: !3, line: 620, type: !108)
!4571 = !DILocation(line: 620, column: 16, scope: !4536)
!4572 = !DILocalVariable(name: "index", scope: !4536, file: !3, line: 621, type: !174)
!4573 = !DILocation(line: 621, column: 6, scope: !4536)
!4574 = !DILocalVariable(name: "ret", scope: !4536, file: !3, line: 621, type: !174)
!4575 = !DILocation(line: 621, column: 13, scope: !4536)
!4576 = !DILocation(line: 623, column: 3, scope: !4536)
!4577 = !DILocation(line: 623, column: 43, scope: !4536)
!4578 = !DILocation(line: 623, column: 14, scope: !4536)
!4579 = !DILocation(line: 625, column: 7, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4536, file: !3, line: 625, column: 6)
!4581 = !DILocation(line: 625, column: 6, scope: !4536)
!4582 = !DILocation(line: 626, column: 3, scope: !4580)
!4583 = !DILocation(line: 629, column: 36, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4536, file: !3, line: 629, column: 6)
!4585 = !DILocation(line: 629, column: 40, scope: !4584)
!4586 = !DILocation(line: 629, column: 7, scope: !4584)
!4587 = !DILocation(line: 629, column: 6, scope: !4536)
!4588 = !DILocation(line: 630, column: 3, scope: !4584)
!4589 = !DILocation(line: 633, column: 33, scope: !4536)
!4590 = !DILocation(line: 633, column: 39, scope: !4536)
!4591 = !DILocation(line: 633, column: 10, scope: !4536)
!4592 = !DILocation(line: 633, column: 8, scope: !4536)
!4593 = !DILocation(line: 634, column: 6, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4536, file: !3, line: 634, column: 6)
!4595 = !DILocation(line: 634, column: 12, scope: !4594)
!4596 = !DILocation(line: 634, column: 6, scope: !4536)
!4597 = !DILocation(line: 635, column: 10, scope: !4594)
!4598 = !DILocation(line: 635, column: 3, scope: !4594)
!4599 = !DILocation(line: 637, column: 2, scope: !4536)
!4600 = !DILocation(line: 637, column: 2, scope: !4559)
!4601 = !DILocalVariable(name: "__dummy", scope: !4602, file: !3, line: 637, type: !108)
!4602 = distinct !DILexicalBlock(scope: !4558, file: !3, line: 637, column: 2)
!4603 = !DILocation(line: 637, column: 2, scope: !4602)
!4604 = !DILocalVariable(name: "__dummy2", scope: !4602, file: !3, line: 637, type: !108)
!4605 = !DILocation(line: 637, column: 2, scope: !4558)
!4606 = !DILocation(line: 637, column: 2, scope: !4557)
!4607 = !DILocation(line: 637, column: 2, scope: !4608)
!4608 = distinct !DILexicalBlock(scope: !4557, file: !3, line: 637, column: 2)
!4609 = !DILocalVariable(name: "__dummy", scope: !4610, file: !3, line: 637, type: !108)
!4610 = distinct !DILexicalBlock(scope: !4611, file: !3, line: 637, column: 2)
!4611 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 637, column: 2)
!4612 = !DILocation(line: 637, column: 2, scope: !4610)
!4613 = !DILocalVariable(name: "__dummy2", scope: !4610, file: !3, line: 637, type: !108)
!4614 = !DILocation(line: 637, column: 2, scope: !4611)
!4615 = !DILocation(line: 637, column: 2, scope: !4556)
!4616 = !{i32 -2142734786}
!4617 = !DILocation(line: 637, column: 2, scope: !4555)
!4618 = !DILocation(line: 329, column: 10, scope: !3759, inlinedAt: !4554)
!4619 = !DILocation(line: 329, column: 16, scope: !3759, inlinedAt: !4554)
!4620 = !DILocation(line: 640, column: 37, scope: !4548)
!4621 = !DILocation(line: 640, column: 43, scope: !4548)
!4622 = !DILocation(line: 640, column: 47, scope: !4548)
!4623 = !DILocation(line: 640, column: 54, scope: !4548)
!4624 = !DILocation(line: 640, column: 7, scope: !4548)
!4625 = !DILocation(line: 640, column: 6, scope: !4536)
!4626 = !DILocation(line: 641, column: 27, scope: !4547)
!4627 = !DILocation(line: 641, column: 33, scope: !4547)
!4628 = !DILocation(line: 641, column: 39, scope: !4547)
!4629 = !DILocation(line: 409, column: 2, scope: !3854, inlinedAt: !4546)
!4630 = !DILocation(line: 409, column: 2, scope: !3859, inlinedAt: !4546)
!4631 = !DILocation(line: 409, column: 2, scope: !3860, inlinedAt: !4546)
!4632 = !DILocation(line: 409, column: 2, scope: !3867, inlinedAt: !4546)
!4633 = !DILocation(line: 409, column: 2, scope: !3870, inlinedAt: !4546)
!4634 = !DILocation(line: 642, column: 3, scope: !4547)
!4635 = !DILocation(line: 650, column: 26, scope: !4543)
!4636 = !DILocation(line: 650, column: 32, scope: !4543)
!4637 = !DILocation(line: 650, column: 7, scope: !4543)
!4638 = !DILocation(line: 650, column: 6, scope: !4536)
!4639 = !DILocation(line: 651, column: 27, scope: !4542)
!4640 = !DILocation(line: 651, column: 33, scope: !4542)
!4641 = !DILocation(line: 651, column: 39, scope: !4542)
!4642 = !DILocation(line: 409, column: 2, scope: !3854, inlinedAt: !4541)
!4643 = !DILocation(line: 409, column: 2, scope: !3859, inlinedAt: !4541)
!4644 = !DILocation(line: 409, column: 2, scope: !3860, inlinedAt: !4541)
!4645 = !DILocation(line: 409, column: 2, scope: !3867, inlinedAt: !4541)
!4646 = !DILocation(line: 409, column: 2, scope: !3870, inlinedAt: !4541)
!4647 = !DILocation(line: 652, column: 3, scope: !4542)
!4648 = !DILocation(line: 655, column: 11, scope: !4536)
!4649 = !DILocation(line: 655, column: 17, scope: !4536)
!4650 = !DILocation(line: 655, column: 24, scope: !4536)
!4651 = !DILocation(line: 655, column: 8, scope: !4536)
!4652 = !DILocation(line: 658, column: 10, scope: !4536)
!4653 = !DILocation(line: 658, column: 2, scope: !4536)
!4654 = !DILocation(line: 660, column: 4, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4536, file: !3, line: 658, column: 16)
!4656 = !DILocation(line: 660, column: 15, scope: !4655)
!4657 = !DILocation(line: 660, column: 22, scope: !4655)
!4658 = !DILocation(line: 660, column: 34, scope: !4655)
!4659 = !DILocation(line: 660, column: 39, scope: !4655)
!4660 = !DILocation(line: 661, column: 3, scope: !4655)
!4661 = !DILocation(line: 663, column: 4, scope: !4655)
!4662 = !DILocation(line: 663, column: 15, scope: !4655)
!4663 = !DILocation(line: 663, column: 22, scope: !4655)
!4664 = !DILocation(line: 663, column: 34, scope: !4655)
!4665 = !DILocation(line: 663, column: 39, scope: !4655)
!4666 = !DILocation(line: 664, column: 3, scope: !4655)
!4667 = !DILocation(line: 666, column: 4, scope: !4655)
!4668 = !DILocation(line: 666, column: 15, scope: !4655)
!4669 = !DILocation(line: 666, column: 22, scope: !4655)
!4670 = !DILocation(line: 666, column: 35, scope: !4655)
!4671 = !DILocation(line: 666, column: 40, scope: !4655)
!4672 = !DILocation(line: 667, column: 3, scope: !4655)
!4673 = !DILocation(line: 669, column: 4, scope: !4655)
!4674 = !DILocation(line: 669, column: 15, scope: !4655)
!4675 = !DILocation(line: 669, column: 22, scope: !4655)
!4676 = !DILocation(line: 669, column: 35, scope: !4655)
!4677 = !DILocation(line: 669, column: 40, scope: !4655)
!4678 = !DILocation(line: 670, column: 3, scope: !4655)
!4679 = !DILocation(line: 672, column: 7, scope: !4655)
!4680 = !DILocation(line: 673, column: 3, scope: !4655)
!4681 = !DILocation(line: 676, column: 26, scope: !4536)
!4682 = !DILocation(line: 676, column: 32, scope: !4536)
!4683 = !DILocation(line: 676, column: 38, scope: !4536)
!4684 = !DILocation(line: 409, column: 2, scope: !3854, inlinedAt: !4551)
!4685 = !DILocation(line: 409, column: 2, scope: !3859, inlinedAt: !4551)
!4686 = !DILocation(line: 409, column: 2, scope: !3860, inlinedAt: !4551)
!4687 = !DILocation(line: 409, column: 2, scope: !3867, inlinedAt: !4551)
!4688 = !DILocation(line: 409, column: 2, scope: !3870, inlinedAt: !4551)
!4689 = !DILocation(line: 678, column: 9, scope: !4536)
!4690 = !DILocation(line: 678, column: 2, scope: !4536)
!4691 = !DILocation(line: 679, column: 1, scope: !4536)
!4692 = distinct !DISubprogram(name: "is_extcon_property_supported", scope: !3, file: !3, line: 287, type: !4693, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!4693 = !DISubroutineType(types: !4694)
!4694 = !{!400, !7, !7}
!4695 = !DILocalVariable(name: "id", arg: 1, scope: !4692, file: !3, line: 287, type: !7)
!4696 = !DILocation(line: 287, column: 55, scope: !4692)
!4697 = !DILocalVariable(name: "prop", arg: 2, scope: !4692, file: !3, line: 287, type: !7)
!4698 = !DILocation(line: 287, column: 72, scope: !4692)
!4699 = !DILocalVariable(name: "type", scope: !4692, file: !3, line: 289, type: !174)
!4700 = !DILocation(line: 289, column: 6, scope: !4692)
!4701 = !DILocation(line: 292, column: 25, scope: !4692)
!4702 = !DILocation(line: 292, column: 9, scope: !4692)
!4703 = !DILocation(line: 292, column: 7, scope: !4692)
!4704 = !DILocation(line: 293, column: 6, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4692, file: !3, line: 293, column: 6)
!4706 = !DILocation(line: 293, column: 11, scope: !4705)
!4707 = !DILocation(line: 293, column: 6, scope: !4692)
!4708 = !DILocation(line: 294, column: 3, scope: !4705)
!4709 = !DILocation(line: 297, column: 24, scope: !4692)
!4710 = !DILocation(line: 297, column: 12, scope: !4692)
!4711 = !DILocation(line: 297, column: 28, scope: !4692)
!4712 = !DILocation(line: 297, column: 35, scope: !4692)
!4713 = !DILocation(line: 297, column: 33, scope: !4692)
!4714 = !DILocation(line: 297, column: 10, scope: !4692)
!4715 = !DILocation(line: 297, column: 9, scope: !4692)
!4716 = !DILocation(line: 297, column: 2, scope: !4692)
!4717 = !DILocation(line: 298, column: 1, scope: !4692)
!4718 = distinct !DISubprogram(name: "is_extcon_property_capability", scope: !3, file: !3, line: 300, type: !4719, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!4719 = !DISubroutineType(types: !4720)
!4720 = !{!174, !110, !7, !174, !7}
!4721 = !DILocalVariable(name: "edev", arg: 1, scope: !4718, file: !3, line: 300, type: !110)
!4722 = !DILocation(line: 300, column: 61, scope: !4718)
!4723 = !DILocalVariable(name: "id", arg: 2, scope: !4718, file: !3, line: 301, type: !7)
!4724 = !DILocation(line: 301, column: 18, scope: !4718)
!4725 = !DILocalVariable(name: "index", arg: 3, scope: !4718, file: !3, line: 301, type: !174)
!4726 = !DILocation(line: 301, column: 26, scope: !4718)
!4727 = !DILocalVariable(name: "prop", arg: 4, scope: !4718, file: !3, line: 301, type: !7)
!4728 = !DILocation(line: 301, column: 45, scope: !4718)
!4729 = !DILocalVariable(name: "cable", scope: !4718, file: !3, line: 303, type: !3626)
!4730 = !DILocation(line: 303, column: 23, scope: !4718)
!4731 = !DILocalVariable(name: "type", scope: !4718, file: !3, line: 304, type: !174)
!4732 = !DILocation(line: 304, column: 6, scope: !4718)
!4733 = !DILocalVariable(name: "ret", scope: !4718, file: !3, line: 304, type: !174)
!4734 = !DILocation(line: 304, column: 12, scope: !4718)
!4735 = !DILocation(line: 307, column: 25, scope: !4718)
!4736 = !DILocation(line: 307, column: 9, scope: !4718)
!4737 = !DILocation(line: 307, column: 7, scope: !4718)
!4738 = !DILocation(line: 308, column: 6, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4718, file: !3, line: 308, column: 6)
!4740 = !DILocation(line: 308, column: 11, scope: !4739)
!4741 = !DILocation(line: 308, column: 6, scope: !4718)
!4742 = !DILocation(line: 309, column: 10, scope: !4739)
!4743 = !DILocation(line: 309, column: 3, scope: !4739)
!4744 = !DILocation(line: 311, column: 11, scope: !4718)
!4745 = !DILocation(line: 311, column: 17, scope: !4718)
!4746 = !DILocation(line: 311, column: 24, scope: !4718)
!4747 = !DILocation(line: 311, column: 8, scope: !4718)
!4748 = !DILocation(line: 313, column: 10, scope: !4718)
!4749 = !DILocation(line: 313, column: 2, scope: !4718)
!4750 = !DILocation(line: 315, column: 18, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4718, file: !3, line: 313, column: 16)
!4752 = !DILocation(line: 315, column: 23, scope: !4751)
!4753 = !DILocation(line: 315, column: 46, scope: !4751)
!4754 = !DILocation(line: 315, column: 53, scope: !4751)
!4755 = !DILocation(line: 315, column: 9, scope: !4751)
!4756 = !DILocation(line: 315, column: 7, scope: !4751)
!4757 = !DILocation(line: 316, column: 3, scope: !4751)
!4758 = !DILocation(line: 318, column: 18, scope: !4751)
!4759 = !DILocation(line: 318, column: 23, scope: !4751)
!4760 = !DILocation(line: 318, column: 46, scope: !4751)
!4761 = !DILocation(line: 318, column: 53, scope: !4751)
!4762 = !DILocation(line: 318, column: 9, scope: !4751)
!4763 = !DILocation(line: 318, column: 7, scope: !4751)
!4764 = !DILocation(line: 319, column: 3, scope: !4751)
!4765 = !DILocation(line: 321, column: 18, scope: !4751)
!4766 = !DILocation(line: 321, column: 23, scope: !4751)
!4767 = !DILocation(line: 321, column: 47, scope: !4751)
!4768 = !DILocation(line: 321, column: 54, scope: !4751)
!4769 = !DILocation(line: 321, column: 9, scope: !4751)
!4770 = !DILocation(line: 321, column: 7, scope: !4751)
!4771 = !DILocation(line: 322, column: 3, scope: !4751)
!4772 = !DILocation(line: 324, column: 18, scope: !4751)
!4773 = !DILocation(line: 324, column: 23, scope: !4751)
!4774 = !DILocation(line: 324, column: 47, scope: !4751)
!4775 = !DILocation(line: 324, column: 54, scope: !4751)
!4776 = !DILocation(line: 324, column: 9, scope: !4751)
!4777 = !DILocation(line: 324, column: 7, scope: !4751)
!4778 = !DILocation(line: 325, column: 3, scope: !4751)
!4779 = !DILocation(line: 327, column: 7, scope: !4751)
!4780 = !DILocation(line: 328, column: 2, scope: !4751)
!4781 = !DILocation(line: 330, column: 9, scope: !4718)
!4782 = !DILocation(line: 330, column: 2, scope: !4718)
!4783 = !DILocation(line: 331, column: 1, scope: !4718)
!4784 = distinct !DISubprogram(name: "extcon_set_property", scope: !3, file: !3, line: 694, type: !4785, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !162)
!4785 = !DISubroutineType(types: !4786)
!4786 = !{!174, !110, !7, !7, !3650}
!4787 = !DILocation(line: 407, column: 64, scope: !3747, inlinedAt: !4788)
!4788 = distinct !DILocation(line: 718, column: 3, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4790, file: !3, line: 717, column: 61)
!4790 = distinct !DILexicalBlock(scope: !4784, file: !3, line: 717, column: 6)
!4791 = !DILocation(line: 407, column: 84, scope: !3747, inlinedAt: !4788)
!4792 = !DILocation(line: 407, column: 64, scope: !3747, inlinedAt: !4793)
!4793 = distinct !DILocation(line: 743, column: 2, scope: !4784)
!4794 = !DILocation(line: 407, column: 84, scope: !3747, inlinedAt: !4793)
!4795 = !DILocation(line: 327, column: 67, scope: !3759, inlinedAt: !4796)
!4796 = distinct !DILocation(line: 714, column: 2, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4798, file: !3, line: 714, column: 2)
!4798 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 714, column: 2)
!4799 = distinct !DILexicalBlock(scope: !4800, file: !3, line: 714, column: 2)
!4800 = distinct !DILexicalBlock(scope: !4801, file: !3, line: 714, column: 2)
!4801 = distinct !DILexicalBlock(scope: !4784, file: !3, line: 714, column: 2)
!4802 = !DILocalVariable(name: "edev", arg: 1, scope: !4784, file: !3, line: 694, type: !110)
!4803 = !DILocation(line: 694, column: 44, scope: !4784)
!4804 = !DILocalVariable(name: "id", arg: 2, scope: !4784, file: !3, line: 694, type: !7)
!4805 = !DILocation(line: 694, column: 63, scope: !4784)
!4806 = !DILocalVariable(name: "prop", arg: 3, scope: !4784, file: !3, line: 695, type: !7)
!4807 = !DILocation(line: 695, column: 18, scope: !4784)
!4808 = !DILocalVariable(name: "prop_val", arg: 4, scope: !4784, file: !3, line: 696, type: !3650)
!4809 = !DILocation(line: 696, column: 33, scope: !4784)
!4810 = !DILocalVariable(name: "cable", scope: !4784, file: !3, line: 698, type: !3626)
!4811 = !DILocation(line: 698, column: 23, scope: !4784)
!4812 = !DILocalVariable(name: "flags", scope: !4784, file: !3, line: 699, type: !108)
!4813 = !DILocation(line: 699, column: 16, scope: !4784)
!4814 = !DILocalVariable(name: "index", scope: !4784, file: !3, line: 700, type: !174)
!4815 = !DILocation(line: 700, column: 6, scope: !4784)
!4816 = !DILocalVariable(name: "ret", scope: !4784, file: !3, line: 700, type: !174)
!4817 = !DILocation(line: 700, column: 13, scope: !4784)
!4818 = !DILocation(line: 702, column: 7, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4784, file: !3, line: 702, column: 6)
!4820 = !DILocation(line: 702, column: 6, scope: !4784)
!4821 = !DILocation(line: 703, column: 3, scope: !4819)
!4822 = !DILocation(line: 706, column: 36, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4784, file: !3, line: 706, column: 6)
!4824 = !DILocation(line: 706, column: 40, scope: !4823)
!4825 = !DILocation(line: 706, column: 7, scope: !4823)
!4826 = !DILocation(line: 706, column: 6, scope: !4784)
!4827 = !DILocation(line: 707, column: 3, scope: !4823)
!4828 = !DILocation(line: 710, column: 33, scope: !4784)
!4829 = !DILocation(line: 710, column: 39, scope: !4784)
!4830 = !DILocation(line: 710, column: 10, scope: !4784)
!4831 = !DILocation(line: 710, column: 8, scope: !4784)
!4832 = !DILocation(line: 711, column: 6, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4784, file: !3, line: 711, column: 6)
!4834 = !DILocation(line: 711, column: 12, scope: !4833)
!4835 = !DILocation(line: 711, column: 6, scope: !4784)
!4836 = !DILocation(line: 712, column: 10, scope: !4833)
!4837 = !DILocation(line: 712, column: 3, scope: !4833)
!4838 = !DILocation(line: 714, column: 2, scope: !4784)
!4839 = !DILocation(line: 714, column: 2, scope: !4801)
!4840 = !DILocalVariable(name: "__dummy", scope: !4841, file: !3, line: 714, type: !108)
!4841 = distinct !DILexicalBlock(scope: !4800, file: !3, line: 714, column: 2)
!4842 = !DILocation(line: 714, column: 2, scope: !4841)
!4843 = !DILocalVariable(name: "__dummy2", scope: !4841, file: !3, line: 714, type: !108)
!4844 = !DILocation(line: 714, column: 2, scope: !4800)
!4845 = !DILocation(line: 714, column: 2, scope: !4799)
!4846 = !DILocation(line: 714, column: 2, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 714, column: 2)
!4848 = !DILocalVariable(name: "__dummy", scope: !4849, file: !3, line: 714, type: !108)
!4849 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 714, column: 2)
!4850 = distinct !DILexicalBlock(scope: !4847, file: !3, line: 714, column: 2)
!4851 = !DILocation(line: 714, column: 2, scope: !4849)
!4852 = !DILocalVariable(name: "__dummy2", scope: !4849, file: !3, line: 714, type: !108)
!4853 = !DILocation(line: 714, column: 2, scope: !4850)
!4854 = !DILocation(line: 714, column: 2, scope: !4798)
!4855 = !{i32 -2142733612}
!4856 = !DILocation(line: 714, column: 2, scope: !4797)
!4857 = !DILocation(line: 329, column: 10, scope: !3759, inlinedAt: !4796)
!4858 = !DILocation(line: 329, column: 16, scope: !3759, inlinedAt: !4796)
!4859 = !DILocation(line: 717, column: 37, scope: !4790)
!4860 = !DILocation(line: 717, column: 43, scope: !4790)
!4861 = !DILocation(line: 717, column: 47, scope: !4790)
!4862 = !DILocation(line: 717, column: 54, scope: !4790)
!4863 = !DILocation(line: 717, column: 7, scope: !4790)
!4864 = !DILocation(line: 717, column: 6, scope: !4784)
!4865 = !DILocation(line: 718, column: 27, scope: !4789)
!4866 = !DILocation(line: 718, column: 33, scope: !4789)
!4867 = !DILocation(line: 718, column: 39, scope: !4789)
!4868 = !DILocation(line: 409, column: 2, scope: !3854, inlinedAt: !4788)
!4869 = !DILocation(line: 409, column: 2, scope: !3859, inlinedAt: !4788)
!4870 = !DILocation(line: 409, column: 2, scope: !3860, inlinedAt: !4788)
!4871 = !DILocation(line: 409, column: 2, scope: !3867, inlinedAt: !4788)
!4872 = !DILocation(line: 409, column: 2, scope: !3870, inlinedAt: !4788)
!4873 = !DILocation(line: 719, column: 3, scope: !4789)
!4874 = !DILocation(line: 722, column: 11, scope: !4784)
!4875 = !DILocation(line: 722, column: 17, scope: !4784)
!4876 = !DILocation(line: 722, column: 24, scope: !4784)
!4877 = !DILocation(line: 722, column: 8, scope: !4784)
!4878 = !DILocation(line: 725, column: 10, scope: !4784)
!4879 = !DILocation(line: 725, column: 2, scope: !4784)
!4880 = !DILocation(line: 727, column: 3, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4784, file: !3, line: 725, column: 16)
!4882 = !DILocation(line: 727, column: 10, scope: !4881)
!4883 = !DILocation(line: 727, column: 22, scope: !4881)
!4884 = !DILocation(line: 727, column: 27, scope: !4881)
!4885 = !DILocation(line: 727, column: 52, scope: !4881)
!4886 = !DILocation(line: 728, column: 3, scope: !4881)
!4887 = !DILocation(line: 730, column: 3, scope: !4881)
!4888 = !DILocation(line: 730, column: 10, scope: !4881)
!4889 = !DILocation(line: 730, column: 22, scope: !4881)
!4890 = !DILocation(line: 730, column: 27, scope: !4881)
!4891 = !DILocation(line: 730, column: 52, scope: !4881)
!4892 = !DILocation(line: 731, column: 3, scope: !4881)
!4893 = !DILocation(line: 733, column: 3, scope: !4881)
!4894 = !DILocation(line: 733, column: 10, scope: !4881)
!4895 = !DILocation(line: 733, column: 23, scope: !4881)
!4896 = !DILocation(line: 733, column: 28, scope: !4881)
!4897 = !DILocation(line: 733, column: 54, scope: !4881)
!4898 = !DILocation(line: 734, column: 3, scope: !4881)
!4899 = !DILocation(line: 736, column: 3, scope: !4881)
!4900 = !DILocation(line: 736, column: 10, scope: !4881)
!4901 = !DILocation(line: 736, column: 23, scope: !4881)
!4902 = !DILocation(line: 736, column: 28, scope: !4881)
!4903 = !DILocation(line: 736, column: 54, scope: !4881)
!4904 = !DILocation(line: 737, column: 3, scope: !4881)
!4905 = !DILocation(line: 739, column: 7, scope: !4881)
!4906 = !DILocation(line: 740, column: 3, scope: !4881)
!4907 = !DILocation(line: 743, column: 26, scope: !4784)
!4908 = !DILocation(line: 743, column: 32, scope: !4784)
!4909 = !DILocation(line: 743, column: 38, scope: !4784)
!4910 = !DILocation(line: 409, column: 2, scope: !3854, inlinedAt: !4793)
!4911 = !DILocation(line: 409, column: 2, scope: !3859, inlinedAt: !4793)
!4912 = !DILocation(line: 409, column: 2, scope: !3860, inlinedAt: !4793)
!4913 = !DILocation(line: 409, column: 2, scope: !3867, inlinedAt: !4793)
!4914 = !DILocation(line: 409, column: 2, scope: !3870, inlinedAt: !4793)
!4915 = !DILocation(line: 745, column: 9, scope: !4784)
!4916 = !DILocation(line: 745, column: 2, scope: !4784)
!4917 = !DILocation(line: 746, column: 1, scope: !4784)
!4918 = distinct !DISubprogram(name: "extcon_set_property_sync", scope: !3, file: !3, line: 759, type: !4785, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !162)
!4919 = !DILocalVariable(name: "edev", arg: 1, scope: !4918, file: !3, line: 759, type: !110)
!4920 = !DILocation(line: 759, column: 49, scope: !4918)
!4921 = !DILocalVariable(name: "id", arg: 2, scope: !4918, file: !3, line: 759, type: !7)
!4922 = !DILocation(line: 759, column: 68, scope: !4918)
!4923 = !DILocalVariable(name: "prop", arg: 3, scope: !4918, file: !3, line: 760, type: !7)
!4924 = !DILocation(line: 760, column: 18, scope: !4918)
!4925 = !DILocalVariable(name: "prop_val", arg: 4, scope: !4918, file: !3, line: 761, type: !3650)
!4926 = !DILocation(line: 761, column: 33, scope: !4918)
!4927 = !DILocalVariable(name: "ret", scope: !4918, file: !3, line: 763, type: !174)
!4928 = !DILocation(line: 763, column: 6, scope: !4918)
!4929 = !DILocation(line: 765, column: 28, scope: !4918)
!4930 = !DILocation(line: 765, column: 34, scope: !4918)
!4931 = !DILocation(line: 765, column: 38, scope: !4918)
!4932 = !DILocation(line: 765, column: 8, scope: !4918)
!4933 = !DILocation(line: 765, column: 6, scope: !4918)
!4934 = !DILocation(line: 766, column: 6, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 766, column: 6)
!4936 = !DILocation(line: 766, column: 10, scope: !4935)
!4937 = !DILocation(line: 766, column: 6, scope: !4918)
!4938 = !DILocation(line: 767, column: 10, scope: !4935)
!4939 = !DILocation(line: 767, column: 3, scope: !4935)
!4940 = !DILocation(line: 769, column: 21, scope: !4918)
!4941 = !DILocation(line: 769, column: 27, scope: !4918)
!4942 = !DILocation(line: 769, column: 9, scope: !4918)
!4943 = !DILocation(line: 769, column: 2, scope: !4918)
!4944 = !DILocation(line: 770, column: 1, scope: !4918)
!4945 = distinct !DISubprogram(name: "extcon_get_property_capability", scope: !3, file: !3, line: 782, type: !4946, scopeLine: 784, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !162)
!4946 = !DISubroutineType(types: !4947)
!4947 = !{!174, !110, !7, !7}
!4948 = !DILocalVariable(name: "edev", arg: 1, scope: !4945, file: !3, line: 782, type: !110)
!4949 = !DILocation(line: 782, column: 55, scope: !4945)
!4950 = !DILocalVariable(name: "id", arg: 2, scope: !4945, file: !3, line: 782, type: !7)
!4951 = !DILocation(line: 782, column: 74, scope: !4945)
!4952 = !DILocalVariable(name: "prop", arg: 3, scope: !4945, file: !3, line: 783, type: !7)
!4953 = !DILocation(line: 783, column: 19, scope: !4945)
!4954 = !DILocalVariable(name: "index", scope: !4945, file: !3, line: 785, type: !174)
!4955 = !DILocation(line: 785, column: 6, scope: !4945)
!4956 = !DILocation(line: 787, column: 7, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 787, column: 6)
!4958 = !DILocation(line: 787, column: 6, scope: !4945)
!4959 = !DILocation(line: 788, column: 3, scope: !4957)
!4960 = !DILocation(line: 791, column: 36, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 791, column: 6)
!4962 = !DILocation(line: 791, column: 40, scope: !4961)
!4963 = !DILocation(line: 791, column: 7, scope: !4961)
!4964 = !DILocation(line: 791, column: 6, scope: !4945)
!4965 = !DILocation(line: 792, column: 3, scope: !4961)
!4966 = !DILocation(line: 795, column: 33, scope: !4945)
!4967 = !DILocation(line: 795, column: 39, scope: !4945)
!4968 = !DILocation(line: 795, column: 10, scope: !4945)
!4969 = !DILocation(line: 795, column: 8, scope: !4945)
!4970 = !DILocation(line: 796, column: 6, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 796, column: 6)
!4972 = !DILocation(line: 796, column: 12, scope: !4971)
!4973 = !DILocation(line: 796, column: 6, scope: !4945)
!4974 = !DILocation(line: 797, column: 10, scope: !4971)
!4975 = !DILocation(line: 797, column: 3, scope: !4971)
!4976 = !DILocation(line: 799, column: 39, scope: !4945)
!4977 = !DILocation(line: 799, column: 45, scope: !4945)
!4978 = !DILocation(line: 799, column: 49, scope: !4945)
!4979 = !DILocation(line: 799, column: 56, scope: !4945)
!4980 = !DILocation(line: 799, column: 9, scope: !4945)
!4981 = !DILocation(line: 799, column: 2, scope: !4945)
!4982 = !DILocation(line: 800, column: 1, scope: !4945)
!4983 = distinct !DISubprogram(name: "extcon_set_property_capability", scope: !3, file: !3, line: 816, type: !4946, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !162)
!4984 = !DILocalVariable(name: "edev", arg: 1, scope: !4983, file: !3, line: 816, type: !110)
!4985 = !DILocation(line: 816, column: 55, scope: !4983)
!4986 = !DILocalVariable(name: "id", arg: 2, scope: !4983, file: !3, line: 816, type: !7)
!4987 = !DILocation(line: 816, column: 74, scope: !4983)
!4988 = !DILocalVariable(name: "prop", arg: 3, scope: !4983, file: !3, line: 817, type: !7)
!4989 = !DILocation(line: 817, column: 19, scope: !4983)
!4990 = !DILocalVariable(name: "cable", scope: !4983, file: !3, line: 819, type: !3626)
!4991 = !DILocation(line: 819, column: 23, scope: !4983)
!4992 = !DILocalVariable(name: "index", scope: !4983, file: !3, line: 820, type: !174)
!4993 = !DILocation(line: 820, column: 6, scope: !4983)
!4994 = !DILocalVariable(name: "type", scope: !4983, file: !3, line: 820, type: !174)
!4995 = !DILocation(line: 820, column: 13, scope: !4983)
!4996 = !DILocalVariable(name: "ret", scope: !4983, file: !3, line: 820, type: !174)
!4997 = !DILocation(line: 820, column: 19, scope: !4983)
!4998 = !DILocation(line: 822, column: 7, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 822, column: 6)
!5000 = !DILocation(line: 822, column: 6, scope: !4983)
!5001 = !DILocation(line: 823, column: 3, scope: !4999)
!5002 = !DILocation(line: 826, column: 36, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 826, column: 6)
!5004 = !DILocation(line: 826, column: 40, scope: !5003)
!5005 = !DILocation(line: 826, column: 7, scope: !5003)
!5006 = !DILocation(line: 826, column: 6, scope: !4983)
!5007 = !DILocation(line: 827, column: 3, scope: !5003)
!5008 = !DILocation(line: 830, column: 33, scope: !4983)
!5009 = !DILocation(line: 830, column: 39, scope: !4983)
!5010 = !DILocation(line: 830, column: 10, scope: !4983)
!5011 = !DILocation(line: 830, column: 8, scope: !4983)
!5012 = !DILocation(line: 831, column: 6, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 831, column: 6)
!5014 = !DILocation(line: 831, column: 12, scope: !5013)
!5015 = !DILocation(line: 831, column: 6, scope: !4983)
!5016 = !DILocation(line: 832, column: 10, scope: !5013)
!5017 = !DILocation(line: 832, column: 3, scope: !5013)
!5018 = !DILocation(line: 834, column: 25, scope: !4983)
!5019 = !DILocation(line: 834, column: 9, scope: !4983)
!5020 = !DILocation(line: 834, column: 7, scope: !4983)
!5021 = !DILocation(line: 835, column: 6, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 835, column: 6)
!5023 = !DILocation(line: 835, column: 11, scope: !5022)
!5024 = !DILocation(line: 835, column: 6, scope: !4983)
!5025 = !DILocation(line: 836, column: 10, scope: !5022)
!5026 = !DILocation(line: 836, column: 3, scope: !5022)
!5027 = !DILocation(line: 838, column: 11, scope: !4983)
!5028 = !DILocation(line: 838, column: 17, scope: !4983)
!5029 = !DILocation(line: 838, column: 24, scope: !4983)
!5030 = !DILocation(line: 838, column: 8, scope: !4983)
!5031 = !DILocation(line: 840, column: 10, scope: !4983)
!5032 = !DILocation(line: 840, column: 2, scope: !4983)
!5033 = !DILocation(line: 842, column: 13, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 840, column: 16)
!5035 = !DILocation(line: 842, column: 18, scope: !5034)
!5036 = !DILocation(line: 842, column: 41, scope: !5034)
!5037 = !DILocation(line: 842, column: 48, scope: !5034)
!5038 = !DILocation(line: 842, column: 3, scope: !5034)
!5039 = !DILocation(line: 843, column: 3, scope: !5034)
!5040 = !DILocation(line: 845, column: 13, scope: !5034)
!5041 = !DILocation(line: 845, column: 18, scope: !5034)
!5042 = !DILocation(line: 845, column: 41, scope: !5034)
!5043 = !DILocation(line: 845, column: 48, scope: !5034)
!5044 = !DILocation(line: 845, column: 3, scope: !5034)
!5045 = !DILocation(line: 846, column: 3, scope: !5034)
!5046 = !DILocation(line: 848, column: 13, scope: !5034)
!5047 = !DILocation(line: 848, column: 18, scope: !5034)
!5048 = !DILocation(line: 848, column: 42, scope: !5034)
!5049 = !DILocation(line: 848, column: 49, scope: !5034)
!5050 = !DILocation(line: 848, column: 3, scope: !5034)
!5051 = !DILocation(line: 849, column: 3, scope: !5034)
!5052 = !DILocation(line: 851, column: 13, scope: !5034)
!5053 = !DILocation(line: 851, column: 18, scope: !5034)
!5054 = !DILocation(line: 851, column: 42, scope: !5034)
!5055 = !DILocation(line: 851, column: 49, scope: !5034)
!5056 = !DILocation(line: 851, column: 3, scope: !5034)
!5057 = !DILocation(line: 852, column: 3, scope: !5034)
!5058 = !DILocation(line: 854, column: 7, scope: !5034)
!5059 = !DILocation(line: 855, column: 2, scope: !5034)
!5060 = !DILocation(line: 857, column: 9, scope: !4983)
!5061 = !DILocation(line: 857, column: 2, scope: !4983)
!5062 = !DILocation(line: 858, column: 1, scope: !4983)
!5063 = distinct !DISubprogram(name: "get_extcon_type", scope: !3, file: !3, line: 259, type: !5064, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!5064 = !DISubroutineType(types: !5065)
!5065 = !{!174, !7}
!5066 = !DILocalVariable(name: "prop", arg: 1, scope: !5063, file: !3, line: 259, type: !7)
!5067 = !DILocation(line: 259, column: 41, scope: !5063)
!5068 = !DILocation(line: 261, column: 10, scope: !5063)
!5069 = !DILocation(line: 261, column: 2, scope: !5063)
!5070 = !DILocation(line: 263, column: 3, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5063, file: !3, line: 261, column: 16)
!5072 = !DILocation(line: 265, column: 3, scope: !5071)
!5073 = !DILocation(line: 267, column: 3, scope: !5071)
!5074 = !DILocation(line: 269, column: 3, scope: !5071)
!5075 = !DILocation(line: 271, column: 3, scope: !5071)
!5076 = !DILocation(line: 273, column: 1, scope: !5063)
!5077 = distinct !DISubprogram(name: "__set_bit", scope: !5078, file: !5078, line: 25, type: !5079, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!5078 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!5079 = !DISubroutineType(types: !5080)
!5080 = !{null, !224, !5081}
!5081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5082, size: 64)
!5082 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !108)
!5083 = !DILocalVariable(name: "nr", arg: 1, scope: !5084, file: !5085, line: 66, type: !224)
!5084 = distinct !DISubprogram(name: "arch___set_bit", scope: !5085, file: !5085, line: 66, type: !5079, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!5085 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!5086 = !DILocation(line: 66, column: 21, scope: !5084, inlinedAt: !5087)
!5087 = distinct !DILocation(line: 28, column: 2, scope: !5077)
!5088 = !DILocalVariable(name: "addr", arg: 2, scope: !5084, file: !5085, line: 66, type: !5081)
!5089 = !DILocation(line: 66, column: 49, scope: !5084, inlinedAt: !5087)
!5090 = !DILocalVariable(name: "v", arg: 1, scope: !5091, file: !5092, line: 39, type: !5095)
!5091 = distinct !DISubprogram(name: "instrument_write", scope: !5092, file: !5092, line: 39, type: !5093, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!5092 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!5093 = !DISubroutineType(types: !5094)
!5094 = !{null, !5095, !236}
!5095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5096, size: 64)
!5096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5097)
!5097 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!5098 = !DILocation(line: 39, column: 67, scope: !5091, inlinedAt: !5099)
!5099 = distinct !DILocation(line: 27, column: 2, scope: !5077)
!5100 = !DILocalVariable(name: "size", arg: 2, scope: !5091, file: !5092, line: 39, type: !236)
!5101 = !DILocation(line: 39, column: 77, scope: !5091, inlinedAt: !5099)
!5102 = !DILocalVariable(name: "nr", arg: 1, scope: !5077, file: !5078, line: 25, type: !224)
!5103 = !DILocation(line: 25, column: 35, scope: !5077)
!5104 = !DILocalVariable(name: "addr", arg: 2, scope: !5077, file: !5078, line: 25, type: !5081)
!5105 = !DILocation(line: 25, column: 63, scope: !5077)
!5106 = !DILocation(line: 27, column: 19, scope: !5077)
!5107 = !DILocation(line: 27, column: 26, scope: !5077)
!5108 = !DILocation(line: 27, column: 24, scope: !5077)
!5109 = !DILocation(line: 41, column: 20, scope: !5091, inlinedAt: !5099)
!5110 = !DILocation(line: 41, column: 23, scope: !5091, inlinedAt: !5099)
!5111 = !DILocation(line: 41, column: 2, scope: !5091, inlinedAt: !5099)
!5112 = !DILocation(line: 42, column: 2, scope: !5091, inlinedAt: !5099)
!5113 = !DILocation(line: 28, column: 17, scope: !5077)
!5114 = !DILocation(line: 28, column: 21, scope: !5077)
!5115 = !DILocation(line: 68, column: 44, scope: !5084, inlinedAt: !5087)
!5116 = !DILocation(line: 68, column: 56, scope: !5084, inlinedAt: !5087)
!5117 = !DILocation(line: 68, column: 2, scope: !5084, inlinedAt: !5087)
!5118 = !{i32 -2147118619}
!5119 = !DILocation(line: 29, column: 1, scope: !5077)
!5120 = distinct !DISubprogram(name: "extcon_get_extcon_dev", scope: !3, file: !3, line: 867, type: !5121, scopeLine: 868, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !162)
!5121 = !DISubroutineType(types: !5122)
!5122 = !{!110, !115}
!5123 = !DILocalVariable(name: "extcon_name", arg: 1, scope: !5120, file: !3, line: 867, type: !115)
!5124 = !DILocation(line: 867, column: 54, scope: !5120)
!5125 = !DILocalVariable(name: "sd", scope: !5120, file: !3, line: 869, type: !110)
!5126 = !DILocation(line: 869, column: 21, scope: !5120)
!5127 = !DILocation(line: 871, column: 7, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5120, file: !3, line: 871, column: 6)
!5129 = !DILocation(line: 871, column: 6, scope: !5120)
!5130 = !DILocation(line: 872, column: 10, scope: !5128)
!5131 = !DILocation(line: 872, column: 3, scope: !5128)
!5132 = !DILocation(line: 874, column: 2, scope: !5120)
!5133 = !DILocalVariable(name: "__mptr", scope: !5134, file: !3, line: 875, type: !109)
!5134 = distinct !DILexicalBlock(scope: !5135, file: !3, line: 875, column: 2)
!5135 = distinct !DILexicalBlock(scope: !5120, file: !3, line: 875, column: 2)
!5136 = !DILocation(line: 875, column: 2, scope: !5134)
!5137 = !DILocation(line: 875, column: 2, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 875, column: 2)
!5139 = !DILocation(line: 875, column: 2, scope: !5135)
!5140 = !DILocation(line: 875, column: 2, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5135, file: !3, line: 875, column: 2)
!5142 = !DILocation(line: 876, column: 15, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5144, file: !3, line: 876, column: 7)
!5144 = distinct !DILexicalBlock(scope: !5141, file: !3, line: 875, column: 51)
!5145 = !DILocation(line: 876, column: 19, scope: !5143)
!5146 = !DILocation(line: 876, column: 25, scope: !5143)
!5147 = !DILocation(line: 876, column: 8, scope: !5143)
!5148 = !DILocation(line: 876, column: 7, scope: !5144)
!5149 = !DILocation(line: 877, column: 4, scope: !5143)
!5150 = !DILocation(line: 878, column: 2, scope: !5144)
!5151 = !DILocalVariable(name: "__mptr", scope: !5152, file: !3, line: 875, type: !109)
!5152 = distinct !DILexicalBlock(scope: !5141, file: !3, line: 875, column: 2)
!5153 = !DILocation(line: 875, column: 2, scope: !5152)
!5154 = !DILocation(line: 875, column: 2, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5152, file: !3, line: 875, column: 2)
!5156 = distinct !{!5156, !5139, !5157}
!5157 = !DILocation(line: 878, column: 2, scope: !5135)
!5158 = !DILocation(line: 879, column: 5, scope: !5120)
!5159 = !DILocation(line: 879, column: 2, scope: !5120)
!5160 = !DILabel(scope: !5120, name: "out", file: !3, line: 880)
!5161 = !DILocation(line: 880, column: 1, scope: !5120)
!5162 = !DILocation(line: 881, column: 2, scope: !5120)
!5163 = !DILocation(line: 882, column: 9, scope: !5120)
!5164 = !DILocation(line: 882, column: 2, scope: !5120)
!5165 = !DILocation(line: 883, column: 1, scope: !5120)
!5166 = distinct !DISubprogram(name: "ERR_PTR", scope: !5167, file: !5167, line: 24, type: !5168, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!5167 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!5168 = !DISubroutineType(types: !5169)
!5169 = !{!109, !224}
!5170 = !DILocalVariable(name: "error", arg: 1, scope: !5166, file: !5167, line: 24, type: !224)
!5171 = !DILocation(line: 24, column: 48, scope: !5166)
!5172 = !DILocation(line: 26, column: 18, scope: !5166)
!5173 = !DILocation(line: 26, column: 9, scope: !5166)
!5174 = !DILocation(line: 26, column: 2, scope: !5166)
!5175 = distinct !DISubprogram(name: "extcon_register_notifier", scope: !3, file: !3, line: 899, type: !5176, scopeLine: 901, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !162)
!5176 = !DISubroutineType(types: !5177)
!5177 = !{!174, !110, !7, !3608}
!5178 = !DILocation(line: 407, column: 64, scope: !3747, inlinedAt: !5179)
!5179 = distinct !DILocation(line: 914, column: 2, scope: !5175)
!5180 = !DILocation(line: 407, column: 84, scope: !3747, inlinedAt: !5179)
!5181 = !DILocation(line: 327, column: 67, scope: !3759, inlinedAt: !5182)
!5182 = distinct !DILocation(line: 912, column: 2, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5184, file: !3, line: 912, column: 2)
!5184 = distinct !DILexicalBlock(scope: !5185, file: !3, line: 912, column: 2)
!5185 = distinct !DILexicalBlock(scope: !5186, file: !3, line: 912, column: 2)
!5186 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 912, column: 2)
!5187 = distinct !DILexicalBlock(scope: !5175, file: !3, line: 912, column: 2)
!5188 = !DILocalVariable(name: "edev", arg: 1, scope: !5175, file: !3, line: 899, type: !110)
!5189 = !DILocation(line: 899, column: 49, scope: !5175)
!5190 = !DILocalVariable(name: "id", arg: 2, scope: !5175, file: !3, line: 899, type: !7)
!5191 = !DILocation(line: 899, column: 68, scope: !5175)
!5192 = !DILocalVariable(name: "nb", arg: 3, scope: !5175, file: !3, line: 900, type: !3608)
!5193 = !DILocation(line: 900, column: 32, scope: !5175)
!5194 = !DILocalVariable(name: "flags", scope: !5175, file: !3, line: 902, type: !108)
!5195 = !DILocation(line: 902, column: 16, scope: !5175)
!5196 = !DILocalVariable(name: "ret", scope: !5175, file: !3, line: 903, type: !174)
!5197 = !DILocation(line: 903, column: 6, scope: !5175)
!5198 = !DILocalVariable(name: "idx", scope: !5175, file: !3, line: 903, type: !174)
!5199 = !DILocation(line: 903, column: 11, scope: !5175)
!5200 = !DILocation(line: 905, column: 7, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5175, file: !3, line: 905, column: 6)
!5202 = !DILocation(line: 905, column: 12, scope: !5201)
!5203 = !DILocation(line: 905, column: 16, scope: !5201)
!5204 = !DILocation(line: 905, column: 6, scope: !5175)
!5205 = !DILocation(line: 906, column: 3, scope: !5201)
!5206 = !DILocation(line: 908, column: 31, scope: !5175)
!5207 = !DILocation(line: 908, column: 37, scope: !5175)
!5208 = !DILocation(line: 908, column: 8, scope: !5175)
!5209 = !DILocation(line: 908, column: 6, scope: !5175)
!5210 = !DILocation(line: 909, column: 6, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5175, file: !3, line: 909, column: 6)
!5212 = !DILocation(line: 909, column: 10, scope: !5211)
!5213 = !DILocation(line: 909, column: 6, scope: !5175)
!5214 = !DILocation(line: 910, column: 10, scope: !5211)
!5215 = !DILocation(line: 910, column: 3, scope: !5211)
!5216 = !DILocation(line: 912, column: 2, scope: !5175)
!5217 = !DILocation(line: 912, column: 2, scope: !5187)
!5218 = !DILocalVariable(name: "__dummy", scope: !5219, file: !3, line: 912, type: !108)
!5219 = distinct !DILexicalBlock(scope: !5186, file: !3, line: 912, column: 2)
!5220 = !DILocation(line: 912, column: 2, scope: !5219)
!5221 = !DILocalVariable(name: "__dummy2", scope: !5219, file: !3, line: 912, type: !108)
!5222 = !DILocation(line: 912, column: 2, scope: !5186)
!5223 = !DILocation(line: 912, column: 2, scope: !5185)
!5224 = !DILocation(line: 912, column: 2, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5185, file: !3, line: 912, column: 2)
!5226 = !DILocalVariable(name: "__dummy", scope: !5227, file: !3, line: 912, type: !108)
!5227 = distinct !DILexicalBlock(scope: !5228, file: !3, line: 912, column: 2)
!5228 = distinct !DILexicalBlock(scope: !5225, file: !3, line: 912, column: 2)
!5229 = !DILocation(line: 912, column: 2, scope: !5227)
!5230 = !DILocalVariable(name: "__dummy2", scope: !5227, file: !3, line: 912, type: !108)
!5231 = !DILocation(line: 912, column: 2, scope: !5228)
!5232 = !DILocation(line: 912, column: 2, scope: !5184)
!5233 = !{i32 -2142727743}
!5234 = !DILocation(line: 912, column: 2, scope: !5183)
!5235 = !DILocation(line: 329, column: 10, scope: !3759, inlinedAt: !5182)
!5236 = !DILocation(line: 329, column: 16, scope: !3759, inlinedAt: !5182)
!5237 = !DILocation(line: 913, column: 37, scope: !5175)
!5238 = !DILocation(line: 913, column: 43, scope: !5175)
!5239 = !DILocation(line: 913, column: 46, scope: !5175)
!5240 = !DILocation(line: 913, column: 52, scope: !5175)
!5241 = !DILocation(line: 913, column: 8, scope: !5175)
!5242 = !DILocation(line: 913, column: 6, scope: !5175)
!5243 = !DILocation(line: 914, column: 26, scope: !5175)
!5244 = !DILocation(line: 914, column: 32, scope: !5175)
!5245 = !DILocation(line: 914, column: 38, scope: !5175)
!5246 = !DILocation(line: 409, column: 2, scope: !3854, inlinedAt: !5179)
!5247 = !DILocation(line: 409, column: 2, scope: !3859, inlinedAt: !5179)
!5248 = !DILocation(line: 409, column: 2, scope: !3860, inlinedAt: !5179)
!5249 = !DILocation(line: 409, column: 2, scope: !3867, inlinedAt: !5179)
!5250 = !DILocation(line: 409, column: 2, scope: !3870, inlinedAt: !5179)
!5251 = !DILocation(line: 916, column: 9, scope: !5175)
!5252 = !DILocation(line: 916, column: 2, scope: !5175)
!5253 = !DILocation(line: 917, column: 1, scope: !5175)
!5254 = distinct !DISubprogram(name: "extcon_unregister_notifier", scope: !3, file: !3, line: 928, type: !5176, scopeLine: 930, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !162)
!5255 = !DILocation(line: 407, column: 64, scope: !3747, inlinedAt: !5256)
!5256 = distinct !DILocation(line: 943, column: 2, scope: !5254)
!5257 = !DILocation(line: 407, column: 84, scope: !3747, inlinedAt: !5256)
!5258 = !DILocation(line: 327, column: 67, scope: !3759, inlinedAt: !5259)
!5259 = distinct !DILocation(line: 941, column: 2, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5261, file: !3, line: 941, column: 2)
!5261 = distinct !DILexicalBlock(scope: !5262, file: !3, line: 941, column: 2)
!5262 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 941, column: 2)
!5263 = distinct !DILexicalBlock(scope: !5264, file: !3, line: 941, column: 2)
!5264 = distinct !DILexicalBlock(scope: !5254, file: !3, line: 941, column: 2)
!5265 = !DILocalVariable(name: "edev", arg: 1, scope: !5254, file: !3, line: 928, type: !110)
!5266 = !DILocation(line: 928, column: 51, scope: !5254)
!5267 = !DILocalVariable(name: "id", arg: 2, scope: !5254, file: !3, line: 928, type: !7)
!5268 = !DILocation(line: 928, column: 70, scope: !5254)
!5269 = !DILocalVariable(name: "nb", arg: 3, scope: !5254, file: !3, line: 929, type: !3608)
!5270 = !DILocation(line: 929, column: 28, scope: !5254)
!5271 = !DILocalVariable(name: "flags", scope: !5254, file: !3, line: 931, type: !108)
!5272 = !DILocation(line: 931, column: 16, scope: !5254)
!5273 = !DILocalVariable(name: "ret", scope: !5254, file: !3, line: 932, type: !174)
!5274 = !DILocation(line: 932, column: 6, scope: !5254)
!5275 = !DILocalVariable(name: "idx", scope: !5254, file: !3, line: 932, type: !174)
!5276 = !DILocation(line: 932, column: 11, scope: !5254)
!5277 = !DILocation(line: 934, column: 7, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5254, file: !3, line: 934, column: 6)
!5279 = !DILocation(line: 934, column: 12, scope: !5278)
!5280 = !DILocation(line: 934, column: 16, scope: !5278)
!5281 = !DILocation(line: 934, column: 6, scope: !5254)
!5282 = !DILocation(line: 935, column: 3, scope: !5278)
!5283 = !DILocation(line: 937, column: 31, scope: !5254)
!5284 = !DILocation(line: 937, column: 37, scope: !5254)
!5285 = !DILocation(line: 937, column: 8, scope: !5254)
!5286 = !DILocation(line: 937, column: 6, scope: !5254)
!5287 = !DILocation(line: 938, column: 6, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5254, file: !3, line: 938, column: 6)
!5289 = !DILocation(line: 938, column: 10, scope: !5288)
!5290 = !DILocation(line: 938, column: 6, scope: !5254)
!5291 = !DILocation(line: 939, column: 10, scope: !5288)
!5292 = !DILocation(line: 939, column: 3, scope: !5288)
!5293 = !DILocation(line: 941, column: 2, scope: !5254)
!5294 = !DILocation(line: 941, column: 2, scope: !5264)
!5295 = !DILocalVariable(name: "__dummy", scope: !5296, file: !3, line: 941, type: !108)
!5296 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 941, column: 2)
!5297 = !DILocation(line: 941, column: 2, scope: !5296)
!5298 = !DILocalVariable(name: "__dummy2", scope: !5296, file: !3, line: 941, type: !108)
!5299 = !DILocation(line: 941, column: 2, scope: !5263)
!5300 = !DILocation(line: 941, column: 2, scope: !5262)
!5301 = !DILocation(line: 941, column: 2, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5262, file: !3, line: 941, column: 2)
!5303 = !DILocalVariable(name: "__dummy", scope: !5304, file: !3, line: 941, type: !108)
!5304 = distinct !DILexicalBlock(scope: !5305, file: !3, line: 941, column: 2)
!5305 = distinct !DILexicalBlock(scope: !5302, file: !3, line: 941, column: 2)
!5306 = !DILocation(line: 941, column: 2, scope: !5304)
!5307 = !DILocalVariable(name: "__dummy2", scope: !5304, file: !3, line: 941, type: !108)
!5308 = !DILocation(line: 941, column: 2, scope: !5305)
!5309 = !DILocation(line: 941, column: 2, scope: !5261)
!5310 = !{i32 -2142726606}
!5311 = !DILocation(line: 941, column: 2, scope: !5260)
!5312 = !DILocation(line: 329, column: 10, scope: !3759, inlinedAt: !5259)
!5313 = !DILocation(line: 329, column: 16, scope: !3759, inlinedAt: !5259)
!5314 = !DILocation(line: 942, column: 39, scope: !5254)
!5315 = !DILocation(line: 942, column: 45, scope: !5254)
!5316 = !DILocation(line: 942, column: 48, scope: !5254)
!5317 = !DILocation(line: 942, column: 54, scope: !5254)
!5318 = !DILocation(line: 942, column: 8, scope: !5254)
!5319 = !DILocation(line: 942, column: 6, scope: !5254)
!5320 = !DILocation(line: 943, column: 26, scope: !5254)
!5321 = !DILocation(line: 943, column: 32, scope: !5254)
!5322 = !DILocation(line: 943, column: 38, scope: !5254)
!5323 = !DILocation(line: 409, column: 2, scope: !3854, inlinedAt: !5256)
!5324 = !DILocation(line: 409, column: 2, scope: !3859, inlinedAt: !5256)
!5325 = !DILocation(line: 409, column: 2, scope: !3860, inlinedAt: !5256)
!5326 = !DILocation(line: 409, column: 2, scope: !3867, inlinedAt: !5256)
!5327 = !DILocation(line: 409, column: 2, scope: !3870, inlinedAt: !5256)
!5328 = !DILocation(line: 945, column: 9, scope: !5254)
!5329 = !DILocation(line: 945, column: 2, scope: !5254)
!5330 = !DILocation(line: 946, column: 1, scope: !5254)
!5331 = distinct !DISubprogram(name: "extcon_register_notifier_all", scope: !3, file: !3, line: 961, type: !5332, scopeLine: 963, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !162)
!5332 = !DISubroutineType(types: !5333)
!5333 = !{!174, !110, !3608}
!5334 = !DILocation(line: 407, column: 64, scope: !3747, inlinedAt: !5335)
!5335 = distinct !DILocation(line: 972, column: 2, scope: !5331)
!5336 = !DILocation(line: 407, column: 84, scope: !3747, inlinedAt: !5335)
!5337 = !DILocation(line: 327, column: 67, scope: !3759, inlinedAt: !5338)
!5338 = distinct !DILocation(line: 970, column: 2, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 970, column: 2)
!5340 = distinct !DILexicalBlock(scope: !5341, file: !3, line: 970, column: 2)
!5341 = distinct !DILexicalBlock(scope: !5342, file: !3, line: 970, column: 2)
!5342 = distinct !DILexicalBlock(scope: !5343, file: !3, line: 970, column: 2)
!5343 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 970, column: 2)
!5344 = !DILocalVariable(name: "edev", arg: 1, scope: !5331, file: !3, line: 961, type: !110)
!5345 = !DILocation(line: 961, column: 53, scope: !5331)
!5346 = !DILocalVariable(name: "nb", arg: 2, scope: !5331, file: !3, line: 962, type: !3608)
!5347 = !DILocation(line: 962, column: 28, scope: !5331)
!5348 = !DILocalVariable(name: "flags", scope: !5331, file: !3, line: 964, type: !108)
!5349 = !DILocation(line: 964, column: 16, scope: !5331)
!5350 = !DILocalVariable(name: "ret", scope: !5331, file: !3, line: 965, type: !174)
!5351 = !DILocation(line: 965, column: 6, scope: !5331)
!5352 = !DILocation(line: 967, column: 7, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 967, column: 6)
!5354 = !DILocation(line: 967, column: 12, scope: !5353)
!5355 = !DILocation(line: 967, column: 16, scope: !5353)
!5356 = !DILocation(line: 967, column: 6, scope: !5331)
!5357 = !DILocation(line: 968, column: 3, scope: !5353)
!5358 = !DILocation(line: 970, column: 2, scope: !5331)
!5359 = !DILocation(line: 970, column: 2, scope: !5343)
!5360 = !DILocalVariable(name: "__dummy", scope: !5361, file: !3, line: 970, type: !108)
!5361 = distinct !DILexicalBlock(scope: !5342, file: !3, line: 970, column: 2)
!5362 = !DILocation(line: 970, column: 2, scope: !5361)
!5363 = !DILocalVariable(name: "__dummy2", scope: !5361, file: !3, line: 970, type: !108)
!5364 = !DILocation(line: 970, column: 2, scope: !5342)
!5365 = !DILocation(line: 970, column: 2, scope: !5341)
!5366 = !DILocation(line: 970, column: 2, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5341, file: !3, line: 970, column: 2)
!5368 = !DILocalVariable(name: "__dummy", scope: !5369, file: !3, line: 970, type: !108)
!5369 = distinct !DILexicalBlock(scope: !5370, file: !3, line: 970, column: 2)
!5370 = distinct !DILexicalBlock(scope: !5367, file: !3, line: 970, column: 2)
!5371 = !DILocation(line: 970, column: 2, scope: !5369)
!5372 = !DILocalVariable(name: "__dummy2", scope: !5369, file: !3, line: 970, type: !108)
!5373 = !DILocation(line: 970, column: 2, scope: !5370)
!5374 = !DILocation(line: 970, column: 2, scope: !5340)
!5375 = !{i32 -2142725465}
!5376 = !DILocation(line: 970, column: 2, scope: !5339)
!5377 = !DILocation(line: 329, column: 10, scope: !3759, inlinedAt: !5338)
!5378 = !DILocation(line: 329, column: 16, scope: !3759, inlinedAt: !5338)
!5379 = !DILocation(line: 971, column: 37, scope: !5331)
!5380 = !DILocation(line: 971, column: 43, scope: !5331)
!5381 = !DILocation(line: 971, column: 51, scope: !5331)
!5382 = !DILocation(line: 971, column: 8, scope: !5331)
!5383 = !DILocation(line: 971, column: 6, scope: !5331)
!5384 = !DILocation(line: 972, column: 26, scope: !5331)
!5385 = !DILocation(line: 972, column: 32, scope: !5331)
!5386 = !DILocation(line: 972, column: 38, scope: !5331)
!5387 = !DILocation(line: 409, column: 2, scope: !3854, inlinedAt: !5335)
!5388 = !DILocation(line: 409, column: 2, scope: !3859, inlinedAt: !5335)
!5389 = !DILocation(line: 409, column: 2, scope: !3860, inlinedAt: !5335)
!5390 = !DILocation(line: 409, column: 2, scope: !3867, inlinedAt: !5335)
!5391 = !DILocation(line: 409, column: 2, scope: !3870, inlinedAt: !5335)
!5392 = !DILocation(line: 974, column: 9, scope: !5331)
!5393 = !DILocation(line: 974, column: 2, scope: !5331)
!5394 = !DILocation(line: 975, column: 1, scope: !5331)
!5395 = distinct !DISubprogram(name: "extcon_unregister_notifier_all", scope: !3, file: !3, line: 985, type: !5332, scopeLine: 987, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !162)
!5396 = !DILocation(line: 407, column: 64, scope: !3747, inlinedAt: !5397)
!5397 = distinct !DILocation(line: 996, column: 2, scope: !5395)
!5398 = !DILocation(line: 407, column: 84, scope: !3747, inlinedAt: !5397)
!5399 = !DILocation(line: 327, column: 67, scope: !3759, inlinedAt: !5400)
!5400 = distinct !DILocation(line: 994, column: 2, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5402, file: !3, line: 994, column: 2)
!5402 = distinct !DILexicalBlock(scope: !5403, file: !3, line: 994, column: 2)
!5403 = distinct !DILexicalBlock(scope: !5404, file: !3, line: 994, column: 2)
!5404 = distinct !DILexicalBlock(scope: !5405, file: !3, line: 994, column: 2)
!5405 = distinct !DILexicalBlock(scope: !5395, file: !3, line: 994, column: 2)
!5406 = !DILocalVariable(name: "edev", arg: 1, scope: !5395, file: !3, line: 985, type: !110)
!5407 = !DILocation(line: 985, column: 55, scope: !5395)
!5408 = !DILocalVariable(name: "nb", arg: 2, scope: !5395, file: !3, line: 986, type: !3608)
!5409 = !DILocation(line: 986, column: 28, scope: !5395)
!5410 = !DILocalVariable(name: "flags", scope: !5395, file: !3, line: 988, type: !108)
!5411 = !DILocation(line: 988, column: 16, scope: !5395)
!5412 = !DILocalVariable(name: "ret", scope: !5395, file: !3, line: 989, type: !174)
!5413 = !DILocation(line: 989, column: 6, scope: !5395)
!5414 = !DILocation(line: 991, column: 7, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5395, file: !3, line: 991, column: 6)
!5416 = !DILocation(line: 991, column: 12, scope: !5415)
!5417 = !DILocation(line: 991, column: 16, scope: !5415)
!5418 = !DILocation(line: 991, column: 6, scope: !5395)
!5419 = !DILocation(line: 992, column: 3, scope: !5415)
!5420 = !DILocation(line: 994, column: 2, scope: !5395)
!5421 = !DILocation(line: 994, column: 2, scope: !5405)
!5422 = !DILocalVariable(name: "__dummy", scope: !5423, file: !3, line: 994, type: !108)
!5423 = distinct !DILexicalBlock(scope: !5404, file: !3, line: 994, column: 2)
!5424 = !DILocation(line: 994, column: 2, scope: !5423)
!5425 = !DILocalVariable(name: "__dummy2", scope: !5423, file: !3, line: 994, type: !108)
!5426 = !DILocation(line: 994, column: 2, scope: !5404)
!5427 = !DILocation(line: 994, column: 2, scope: !5403)
!5428 = !DILocation(line: 994, column: 2, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5403, file: !3, line: 994, column: 2)
!5430 = !DILocalVariable(name: "__dummy", scope: !5431, file: !3, line: 994, type: !108)
!5431 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 994, column: 2)
!5432 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 994, column: 2)
!5433 = !DILocation(line: 994, column: 2, scope: !5431)
!5434 = !DILocalVariable(name: "__dummy2", scope: !5431, file: !3, line: 994, type: !108)
!5435 = !DILocation(line: 994, column: 2, scope: !5432)
!5436 = !DILocation(line: 994, column: 2, scope: !5402)
!5437 = !{i32 -2142724320}
!5438 = !DILocation(line: 994, column: 2, scope: !5401)
!5439 = !DILocation(line: 329, column: 10, scope: !3759, inlinedAt: !5400)
!5440 = !DILocation(line: 329, column: 16, scope: !3759, inlinedAt: !5400)
!5441 = !DILocation(line: 995, column: 39, scope: !5395)
!5442 = !DILocation(line: 995, column: 45, scope: !5395)
!5443 = !DILocation(line: 995, column: 53, scope: !5395)
!5444 = !DILocation(line: 995, column: 8, scope: !5395)
!5445 = !DILocation(line: 995, column: 6, scope: !5395)
!5446 = !DILocation(line: 996, column: 26, scope: !5395)
!5447 = !DILocation(line: 996, column: 32, scope: !5395)
!5448 = !DILocation(line: 996, column: 38, scope: !5395)
!5449 = !DILocation(line: 409, column: 2, scope: !3854, inlinedAt: !5397)
!5450 = !DILocation(line: 409, column: 2, scope: !3859, inlinedAt: !5397)
!5451 = !DILocation(line: 409, column: 2, scope: !3860, inlinedAt: !5397)
!5452 = !DILocation(line: 409, column: 2, scope: !3867, inlinedAt: !5397)
!5453 = !DILocation(line: 409, column: 2, scope: !3870, inlinedAt: !5397)
!5454 = !DILocation(line: 998, column: 9, scope: !5395)
!5455 = !DILocation(line: 998, column: 2, scope: !5395)
!5456 = !DILocation(line: 999, column: 1, scope: !5395)
!5457 = distinct !DISubprogram(name: "extcon_dev_allocate", scope: !3, file: !3, line: 1041, type: !5458, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !162)
!5458 = !DISubroutineType(types: !5459)
!5459 = !{!110, !118}
!5460 = !DILocalVariable(name: "supported_cable", arg: 1, scope: !5457, file: !3, line: 1041, type: !118)
!5461 = !DILocation(line: 1041, column: 60, scope: !5457)
!5462 = !DILocalVariable(name: "edev", scope: !5457, file: !3, line: 1043, type: !110)
!5463 = !DILocation(line: 1043, column: 21, scope: !5457)
!5464 = !DILocation(line: 1045, column: 7, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5457, file: !3, line: 1045, column: 6)
!5466 = !DILocation(line: 1045, column: 6, scope: !5457)
!5467 = !DILocation(line: 1046, column: 10, scope: !5465)
!5468 = !DILocation(line: 1046, column: 3, scope: !5465)
!5469 = !DILocation(line: 1048, column: 9, scope: !5457)
!5470 = !DILocation(line: 1048, column: 7, scope: !5457)
!5471 = !DILocation(line: 1049, column: 7, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !5457, file: !3, line: 1049, column: 6)
!5473 = !DILocation(line: 1049, column: 6, scope: !5457)
!5474 = !DILocation(line: 1050, column: 10, scope: !5472)
!5475 = !DILocation(line: 1050, column: 3, scope: !5472)
!5476 = !DILocation(line: 1052, column: 2, scope: !5457)
!5477 = !DILocation(line: 1052, column: 8, scope: !5457)
!5478 = !DILocation(line: 1052, column: 22, scope: !5457)
!5479 = !DILocation(line: 1053, column: 26, scope: !5457)
!5480 = !DILocation(line: 1053, column: 2, scope: !5457)
!5481 = !DILocation(line: 1053, column: 8, scope: !5457)
!5482 = !DILocation(line: 1053, column: 24, scope: !5457)
!5483 = !DILocation(line: 1055, column: 9, scope: !5457)
!5484 = !DILocation(line: 1055, column: 2, scope: !5457)
!5485 = !DILocation(line: 1056, column: 1, scope: !5457)
!5486 = distinct !DISubprogram(name: "kzalloc", scope: !97, file: !97, line: 662, type: !5487, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!5487 = !DISubroutineType(types: !5488)
!5488 = !{!109, !236, !106}
!5489 = !DILocalVariable(name: "s", arg: 1, scope: !5490, file: !97, line: 445, type: !848)
!5490 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !97, file: !97, line: 445, type: !5491, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!5491 = !DISubroutineType(types: !5492)
!5492 = !{!109, !848, !106, !236}
!5493 = !DILocation(line: 445, column: 72, scope: !5490, inlinedAt: !5494)
!5494 = distinct !DILocation(line: 552, column: 10, scope: !5495, inlinedAt: !5498)
!5495 = distinct !DILexicalBlock(scope: !5496, file: !97, line: 540, column: 34)
!5496 = distinct !DILexicalBlock(scope: !5497, file: !97, line: 540, column: 6)
!5497 = distinct !DISubprogram(name: "kmalloc", scope: !97, file: !97, line: 538, type: !5487, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!5498 = distinct !DILocation(line: 664, column: 9, scope: !5486)
!5499 = !DILocalVariable(name: "flags", arg: 2, scope: !5490, file: !97, line: 446, type: !106)
!5500 = !DILocation(line: 446, column: 9, scope: !5490, inlinedAt: !5494)
!5501 = !DILocalVariable(name: "size", arg: 3, scope: !5490, file: !97, line: 446, type: !236)
!5502 = !DILocation(line: 446, column: 23, scope: !5490, inlinedAt: !5494)
!5503 = !DILocalVariable(name: "ret", scope: !5490, file: !97, line: 448, type: !109)
!5504 = !DILocation(line: 448, column: 8, scope: !5490, inlinedAt: !5494)
!5505 = !DILocalVariable(name: "flags", arg: 1, scope: !5506, file: !97, line: 318, type: !106)
!5506 = distinct !DISubprogram(name: "kmalloc_type", scope: !97, file: !97, line: 318, type: !5507, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!5507 = !DISubroutineType(types: !5508)
!5508 = !{!96, !106}
!5509 = !DILocation(line: 318, column: 67, scope: !5506, inlinedAt: !5510)
!5510 = distinct !DILocation(line: 553, column: 20, scope: !5495, inlinedAt: !5498)
!5511 = !DILocalVariable(name: "size", arg: 1, scope: !5512, file: !97, line: 346, type: !236)
!5512 = distinct !DISubprogram(name: "kmalloc_index", scope: !97, file: !97, line: 346, type: !5513, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!5513 = !DISubroutineType(types: !5514)
!5514 = !{!7, !236}
!5515 = !DILocation(line: 346, column: 58, scope: !5512, inlinedAt: !5516)
!5516 = distinct !DILocation(line: 547, column: 11, scope: !5495, inlinedAt: !5498)
!5517 = !DILocalVariable(name: "size", arg: 1, scope: !5518, file: !97, line: 472, type: !236)
!5518 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !97, file: !97, line: 472, type: !5519, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!5519 = !DISubroutineType(types: !5520)
!5520 = !{!109, !236, !106, !7}
!5521 = !DILocation(line: 472, column: 28, scope: !5518, inlinedAt: !5522)
!5522 = distinct !DILocation(line: 481, column: 9, scope: !5523, inlinedAt: !5524)
!5523 = distinct !DISubprogram(name: "kmalloc_large", scope: !97, file: !97, line: 478, type: !5487, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!5524 = distinct !DILocation(line: 545, column: 11, scope: !5525, inlinedAt: !5498)
!5525 = distinct !DILexicalBlock(scope: !5495, file: !97, line: 544, column: 7)
!5526 = !DILocalVariable(name: "flags", arg: 2, scope: !5518, file: !97, line: 472, type: !106)
!5527 = !DILocation(line: 472, column: 40, scope: !5518, inlinedAt: !5522)
!5528 = !DILocalVariable(name: "order", arg: 3, scope: !5518, file: !97, line: 472, type: !7)
!5529 = !DILocation(line: 472, column: 60, scope: !5518, inlinedAt: !5522)
!5530 = !DILocalVariable(name: "size", arg: 1, scope: !5523, file: !97, line: 478, type: !236)
!5531 = !DILocation(line: 478, column: 51, scope: !5523, inlinedAt: !5524)
!5532 = !DILocalVariable(name: "flags", arg: 2, scope: !5523, file: !97, line: 478, type: !106)
!5533 = !DILocation(line: 478, column: 63, scope: !5523, inlinedAt: !5524)
!5534 = !DILocalVariable(name: "order", scope: !5523, file: !97, line: 480, type: !7)
!5535 = !DILocation(line: 480, column: 15, scope: !5523, inlinedAt: !5524)
!5536 = !DILocalVariable(name: "size", arg: 1, scope: !5497, file: !97, line: 538, type: !236)
!5537 = !DILocation(line: 538, column: 45, scope: !5497, inlinedAt: !5498)
!5538 = !DILocalVariable(name: "flags", arg: 2, scope: !5497, file: !97, line: 538, type: !106)
!5539 = !DILocation(line: 538, column: 57, scope: !5497, inlinedAt: !5498)
!5540 = !DILocalVariable(name: "index", scope: !5495, file: !97, line: 542, type: !7)
!5541 = !DILocation(line: 542, column: 16, scope: !5495, inlinedAt: !5498)
!5542 = !DILocalVariable(name: "size", arg: 1, scope: !5486, file: !97, line: 662, type: !236)
!5543 = !DILocation(line: 662, column: 36, scope: !5486)
!5544 = !DILocalVariable(name: "flags", arg: 2, scope: !5486, file: !97, line: 662, type: !106)
!5545 = !DILocation(line: 662, column: 48, scope: !5486)
!5546 = !DILocation(line: 664, column: 17, scope: !5486)
!5547 = !DILocation(line: 664, column: 23, scope: !5486)
!5548 = !DILocation(line: 664, column: 29, scope: !5486)
!5549 = !DILocation(line: 540, column: 27, scope: !5496, inlinedAt: !5498)
!5550 = !DILocation(line: 540, column: 6, scope: !5496, inlinedAt: !5498)
!5551 = !DILocation(line: 540, column: 6, scope: !5497, inlinedAt: !5498)
!5552 = !DILocation(line: 544, column: 7, scope: !5525, inlinedAt: !5498)
!5553 = !DILocation(line: 544, column: 12, scope: !5525, inlinedAt: !5498)
!5554 = !DILocation(line: 544, column: 7, scope: !5495, inlinedAt: !5498)
!5555 = !DILocation(line: 545, column: 25, scope: !5525, inlinedAt: !5498)
!5556 = !DILocation(line: 545, column: 31, scope: !5525, inlinedAt: !5498)
!5557 = !DILocation(line: 480, column: 33, scope: !5523, inlinedAt: !5524)
!5558 = !DILocation(line: 480, column: 23, scope: !5523, inlinedAt: !5524)
!5559 = !DILocation(line: 481, column: 29, scope: !5523, inlinedAt: !5524)
!5560 = !DILocation(line: 481, column: 35, scope: !5523, inlinedAt: !5524)
!5561 = !DILocation(line: 481, column: 42, scope: !5523, inlinedAt: !5524)
!5562 = !DILocation(line: 474, column: 23, scope: !5518, inlinedAt: !5522)
!5563 = !DILocation(line: 474, column: 29, scope: !5518, inlinedAt: !5522)
!5564 = !DILocation(line: 474, column: 36, scope: !5518, inlinedAt: !5522)
!5565 = !DILocation(line: 474, column: 9, scope: !5518, inlinedAt: !5522)
!5566 = !DILocation(line: 545, column: 4, scope: !5525, inlinedAt: !5498)
!5567 = !DILocation(line: 547, column: 25, scope: !5495, inlinedAt: !5498)
!5568 = !DILocation(line: 348, column: 7, scope: !5569, inlinedAt: !5516)
!5569 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 348, column: 6)
!5570 = !DILocation(line: 348, column: 6, scope: !5512, inlinedAt: !5516)
!5571 = !DILocation(line: 349, column: 3, scope: !5569, inlinedAt: !5516)
!5572 = !DILocation(line: 351, column: 6, scope: !5573, inlinedAt: !5516)
!5573 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 351, column: 6)
!5574 = !DILocation(line: 351, column: 11, scope: !5573, inlinedAt: !5516)
!5575 = !DILocation(line: 351, column: 6, scope: !5512, inlinedAt: !5516)
!5576 = !DILocation(line: 352, column: 3, scope: !5573, inlinedAt: !5516)
!5577 = !DILocation(line: 354, column: 32, scope: !5578, inlinedAt: !5516)
!5578 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 354, column: 6)
!5579 = !DILocation(line: 354, column: 37, scope: !5578, inlinedAt: !5516)
!5580 = !DILocation(line: 354, column: 42, scope: !5578, inlinedAt: !5516)
!5581 = !DILocation(line: 354, column: 45, scope: !5578, inlinedAt: !5516)
!5582 = !DILocation(line: 354, column: 50, scope: !5578, inlinedAt: !5516)
!5583 = !DILocation(line: 354, column: 6, scope: !5512, inlinedAt: !5516)
!5584 = !DILocation(line: 355, column: 3, scope: !5578, inlinedAt: !5516)
!5585 = !DILocation(line: 356, column: 32, scope: !5586, inlinedAt: !5516)
!5586 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 356, column: 6)
!5587 = !DILocation(line: 356, column: 37, scope: !5586, inlinedAt: !5516)
!5588 = !DILocation(line: 356, column: 43, scope: !5586, inlinedAt: !5516)
!5589 = !DILocation(line: 356, column: 46, scope: !5586, inlinedAt: !5516)
!5590 = !DILocation(line: 356, column: 51, scope: !5586, inlinedAt: !5516)
!5591 = !DILocation(line: 356, column: 6, scope: !5512, inlinedAt: !5516)
!5592 = !DILocation(line: 357, column: 3, scope: !5586, inlinedAt: !5516)
!5593 = !DILocation(line: 358, column: 6, scope: !5594, inlinedAt: !5516)
!5594 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 358, column: 6)
!5595 = !DILocation(line: 358, column: 11, scope: !5594, inlinedAt: !5516)
!5596 = !DILocation(line: 358, column: 6, scope: !5512, inlinedAt: !5516)
!5597 = !DILocation(line: 358, column: 26, scope: !5594, inlinedAt: !5516)
!5598 = !DILocation(line: 359, column: 6, scope: !5599, inlinedAt: !5516)
!5599 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 359, column: 6)
!5600 = !DILocation(line: 359, column: 11, scope: !5599, inlinedAt: !5516)
!5601 = !DILocation(line: 359, column: 6, scope: !5512, inlinedAt: !5516)
!5602 = !DILocation(line: 359, column: 26, scope: !5599, inlinedAt: !5516)
!5603 = !DILocation(line: 360, column: 6, scope: !5604, inlinedAt: !5516)
!5604 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 360, column: 6)
!5605 = !DILocation(line: 360, column: 11, scope: !5604, inlinedAt: !5516)
!5606 = !DILocation(line: 360, column: 6, scope: !5512, inlinedAt: !5516)
!5607 = !DILocation(line: 360, column: 26, scope: !5604, inlinedAt: !5516)
!5608 = !DILocation(line: 361, column: 6, scope: !5609, inlinedAt: !5516)
!5609 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 361, column: 6)
!5610 = !DILocation(line: 361, column: 11, scope: !5609, inlinedAt: !5516)
!5611 = !DILocation(line: 361, column: 6, scope: !5512, inlinedAt: !5516)
!5612 = !DILocation(line: 361, column: 26, scope: !5609, inlinedAt: !5516)
!5613 = !DILocation(line: 362, column: 6, scope: !5614, inlinedAt: !5516)
!5614 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 362, column: 6)
!5615 = !DILocation(line: 362, column: 11, scope: !5614, inlinedAt: !5516)
!5616 = !DILocation(line: 362, column: 6, scope: !5512, inlinedAt: !5516)
!5617 = !DILocation(line: 362, column: 26, scope: !5614, inlinedAt: !5516)
!5618 = !DILocation(line: 363, column: 6, scope: !5619, inlinedAt: !5516)
!5619 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 363, column: 6)
!5620 = !DILocation(line: 363, column: 11, scope: !5619, inlinedAt: !5516)
!5621 = !DILocation(line: 363, column: 6, scope: !5512, inlinedAt: !5516)
!5622 = !DILocation(line: 363, column: 26, scope: !5619, inlinedAt: !5516)
!5623 = !DILocation(line: 364, column: 6, scope: !5624, inlinedAt: !5516)
!5624 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 364, column: 6)
!5625 = !DILocation(line: 364, column: 11, scope: !5624, inlinedAt: !5516)
!5626 = !DILocation(line: 364, column: 6, scope: !5512, inlinedAt: !5516)
!5627 = !DILocation(line: 364, column: 26, scope: !5624, inlinedAt: !5516)
!5628 = !DILocation(line: 365, column: 6, scope: !5629, inlinedAt: !5516)
!5629 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 365, column: 6)
!5630 = !DILocation(line: 365, column: 11, scope: !5629, inlinedAt: !5516)
!5631 = !DILocation(line: 365, column: 6, scope: !5512, inlinedAt: !5516)
!5632 = !DILocation(line: 365, column: 26, scope: !5629, inlinedAt: !5516)
!5633 = !DILocation(line: 366, column: 6, scope: !5634, inlinedAt: !5516)
!5634 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 366, column: 6)
!5635 = !DILocation(line: 366, column: 11, scope: !5634, inlinedAt: !5516)
!5636 = !DILocation(line: 366, column: 6, scope: !5512, inlinedAt: !5516)
!5637 = !DILocation(line: 366, column: 26, scope: !5634, inlinedAt: !5516)
!5638 = !DILocation(line: 367, column: 6, scope: !5639, inlinedAt: !5516)
!5639 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 367, column: 6)
!5640 = !DILocation(line: 367, column: 11, scope: !5639, inlinedAt: !5516)
!5641 = !DILocation(line: 367, column: 6, scope: !5512, inlinedAt: !5516)
!5642 = !DILocation(line: 367, column: 26, scope: !5639, inlinedAt: !5516)
!5643 = !DILocation(line: 368, column: 6, scope: !5644, inlinedAt: !5516)
!5644 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 368, column: 6)
!5645 = !DILocation(line: 368, column: 11, scope: !5644, inlinedAt: !5516)
!5646 = !DILocation(line: 368, column: 6, scope: !5512, inlinedAt: !5516)
!5647 = !DILocation(line: 368, column: 26, scope: !5644, inlinedAt: !5516)
!5648 = !DILocation(line: 369, column: 6, scope: !5649, inlinedAt: !5516)
!5649 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 369, column: 6)
!5650 = !DILocation(line: 369, column: 11, scope: !5649, inlinedAt: !5516)
!5651 = !DILocation(line: 369, column: 6, scope: !5512, inlinedAt: !5516)
!5652 = !DILocation(line: 369, column: 26, scope: !5649, inlinedAt: !5516)
!5653 = !DILocation(line: 370, column: 6, scope: !5654, inlinedAt: !5516)
!5654 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 370, column: 6)
!5655 = !DILocation(line: 370, column: 11, scope: !5654, inlinedAt: !5516)
!5656 = !DILocation(line: 370, column: 6, scope: !5512, inlinedAt: !5516)
!5657 = !DILocation(line: 370, column: 26, scope: !5654, inlinedAt: !5516)
!5658 = !DILocation(line: 371, column: 6, scope: !5659, inlinedAt: !5516)
!5659 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 371, column: 6)
!5660 = !DILocation(line: 371, column: 11, scope: !5659, inlinedAt: !5516)
!5661 = !DILocation(line: 371, column: 6, scope: !5512, inlinedAt: !5516)
!5662 = !DILocation(line: 371, column: 26, scope: !5659, inlinedAt: !5516)
!5663 = !DILocation(line: 372, column: 6, scope: !5664, inlinedAt: !5516)
!5664 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 372, column: 6)
!5665 = !DILocation(line: 372, column: 11, scope: !5664, inlinedAt: !5516)
!5666 = !DILocation(line: 372, column: 6, scope: !5512, inlinedAt: !5516)
!5667 = !DILocation(line: 372, column: 26, scope: !5664, inlinedAt: !5516)
!5668 = !DILocation(line: 373, column: 6, scope: !5669, inlinedAt: !5516)
!5669 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 373, column: 6)
!5670 = !DILocation(line: 373, column: 11, scope: !5669, inlinedAt: !5516)
!5671 = !DILocation(line: 373, column: 6, scope: !5512, inlinedAt: !5516)
!5672 = !DILocation(line: 373, column: 26, scope: !5669, inlinedAt: !5516)
!5673 = !DILocation(line: 374, column: 6, scope: !5674, inlinedAt: !5516)
!5674 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 374, column: 6)
!5675 = !DILocation(line: 374, column: 11, scope: !5674, inlinedAt: !5516)
!5676 = !DILocation(line: 374, column: 6, scope: !5512, inlinedAt: !5516)
!5677 = !DILocation(line: 374, column: 26, scope: !5674, inlinedAt: !5516)
!5678 = !DILocation(line: 375, column: 6, scope: !5679, inlinedAt: !5516)
!5679 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 375, column: 6)
!5680 = !DILocation(line: 375, column: 11, scope: !5679, inlinedAt: !5516)
!5681 = !DILocation(line: 375, column: 6, scope: !5512, inlinedAt: !5516)
!5682 = !DILocation(line: 375, column: 27, scope: !5679, inlinedAt: !5516)
!5683 = !DILocation(line: 376, column: 6, scope: !5684, inlinedAt: !5516)
!5684 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 376, column: 6)
!5685 = !DILocation(line: 376, column: 11, scope: !5684, inlinedAt: !5516)
!5686 = !DILocation(line: 376, column: 6, scope: !5512, inlinedAt: !5516)
!5687 = !DILocation(line: 376, column: 32, scope: !5684, inlinedAt: !5516)
!5688 = !DILocation(line: 377, column: 6, scope: !5689, inlinedAt: !5516)
!5689 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 377, column: 6)
!5690 = !DILocation(line: 377, column: 11, scope: !5689, inlinedAt: !5516)
!5691 = !DILocation(line: 377, column: 6, scope: !5512, inlinedAt: !5516)
!5692 = !DILocation(line: 377, column: 32, scope: !5689, inlinedAt: !5516)
!5693 = !DILocation(line: 378, column: 6, scope: !5694, inlinedAt: !5516)
!5694 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 378, column: 6)
!5695 = !DILocation(line: 378, column: 11, scope: !5694, inlinedAt: !5516)
!5696 = !DILocation(line: 378, column: 6, scope: !5512, inlinedAt: !5516)
!5697 = !DILocation(line: 378, column: 32, scope: !5694, inlinedAt: !5516)
!5698 = !DILocation(line: 379, column: 6, scope: !5699, inlinedAt: !5516)
!5699 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 379, column: 6)
!5700 = !DILocation(line: 379, column: 11, scope: !5699, inlinedAt: !5516)
!5701 = !DILocation(line: 379, column: 6, scope: !5512, inlinedAt: !5516)
!5702 = !DILocation(line: 379, column: 33, scope: !5699, inlinedAt: !5516)
!5703 = !DILocation(line: 380, column: 6, scope: !5704, inlinedAt: !5516)
!5704 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 380, column: 6)
!5705 = !DILocation(line: 380, column: 11, scope: !5704, inlinedAt: !5516)
!5706 = !DILocation(line: 380, column: 6, scope: !5512, inlinedAt: !5516)
!5707 = !DILocation(line: 380, column: 33, scope: !5704, inlinedAt: !5516)
!5708 = !DILocation(line: 381, column: 6, scope: !5709, inlinedAt: !5516)
!5709 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 381, column: 6)
!5710 = !DILocation(line: 381, column: 11, scope: !5709, inlinedAt: !5516)
!5711 = !DILocation(line: 381, column: 6, scope: !5512, inlinedAt: !5516)
!5712 = !DILocation(line: 381, column: 33, scope: !5709, inlinedAt: !5516)
!5713 = !DILocation(line: 382, column: 2, scope: !5714, inlinedAt: !5516)
!5714 = distinct !DILexicalBlock(scope: !5715, file: !97, line: 382, column: 2)
!5715 = distinct !DILexicalBlock(scope: !5512, file: !97, line: 382, column: 2)
!5716 = !{i32 -2142782168, i32 -2142782139, i32 -2142782093, i32 -2142782035, i32 -2142781981, i32 -2142781927, i32 -2142781872, i32 -2142781841}
!5717 = !DILocation(line: 382, column: 2, scope: !5718, inlinedAt: !5516)
!5718 = distinct !DILexicalBlock(scope: !5719, file: !97, line: 382, column: 2)
!5719 = distinct !DILexicalBlock(scope: !5715, file: !97, line: 382, column: 2)
!5720 = !{i32 -2142781398, i32 -2142781391, i32 -2142781337, i32 -2142781306, i32 -2142781276}
!5721 = !DILocation(line: 382, column: 2, scope: !5719, inlinedAt: !5516)
!5722 = !DILocation(line: 386, column: 1, scope: !5512, inlinedAt: !5516)
!5723 = !DILocation(line: 547, column: 9, scope: !5495, inlinedAt: !5498)
!5724 = !DILocation(line: 549, column: 8, scope: !5725, inlinedAt: !5498)
!5725 = distinct !DILexicalBlock(scope: !5495, file: !97, line: 549, column: 7)
!5726 = !DILocation(line: 549, column: 7, scope: !5495, inlinedAt: !5498)
!5727 = !DILocation(line: 550, column: 4, scope: !5725, inlinedAt: !5498)
!5728 = !DILocation(line: 553, column: 33, scope: !5495, inlinedAt: !5498)
!5729 = !DILocation(line: 325, column: 6, scope: !5730, inlinedAt: !5510)
!5730 = distinct !DILexicalBlock(scope: !5506, file: !97, line: 325, column: 6)
!5731 = !DILocation(line: 325, column: 6, scope: !5506, inlinedAt: !5510)
!5732 = !DILocation(line: 326, column: 3, scope: !5730, inlinedAt: !5510)
!5733 = !DILocation(line: 332, column: 9, scope: !5506, inlinedAt: !5510)
!5734 = !DILocation(line: 332, column: 15, scope: !5506, inlinedAt: !5510)
!5735 = !DILocation(line: 332, column: 2, scope: !5506, inlinedAt: !5510)
!5736 = !DILocation(line: 336, column: 1, scope: !5506, inlinedAt: !5510)
!5737 = !DILocation(line: 553, column: 5, scope: !5495, inlinedAt: !5498)
!5738 = !DILocation(line: 553, column: 41, scope: !5495, inlinedAt: !5498)
!5739 = !DILocation(line: 554, column: 5, scope: !5495, inlinedAt: !5498)
!5740 = !DILocation(line: 554, column: 12, scope: !5495, inlinedAt: !5498)
!5741 = !DILocation(line: 448, column: 31, scope: !5490, inlinedAt: !5494)
!5742 = !DILocation(line: 448, column: 34, scope: !5490, inlinedAt: !5494)
!5743 = !DILocation(line: 448, column: 14, scope: !5490, inlinedAt: !5494)
!5744 = !DILocation(line: 450, column: 22, scope: !5490, inlinedAt: !5494)
!5745 = !DILocation(line: 450, column: 25, scope: !5490, inlinedAt: !5494)
!5746 = !DILocation(line: 450, column: 30, scope: !5490, inlinedAt: !5494)
!5747 = !DILocation(line: 450, column: 36, scope: !5490, inlinedAt: !5494)
!5748 = !DILocation(line: 450, column: 8, scope: !5490, inlinedAt: !5494)
!5749 = !DILocation(line: 450, column: 6, scope: !5490, inlinedAt: !5494)
!5750 = !DILocation(line: 451, column: 9, scope: !5490, inlinedAt: !5494)
!5751 = !DILocation(line: 552, column: 3, scope: !5495, inlinedAt: !5498)
!5752 = !DILocation(line: 557, column: 19, scope: !5497, inlinedAt: !5498)
!5753 = !DILocation(line: 557, column: 25, scope: !5497, inlinedAt: !5498)
!5754 = !DILocation(line: 557, column: 9, scope: !5497, inlinedAt: !5498)
!5755 = !DILocation(line: 557, column: 2, scope: !5497, inlinedAt: !5498)
!5756 = !DILocation(line: 558, column: 1, scope: !5497, inlinedAt: !5498)
!5757 = !DILocation(line: 664, column: 2, scope: !5486)
!5758 = distinct !DISubprogram(name: "extcon_dev_free", scope: !3, file: !3, line: 1062, type: !5759, scopeLine: 1063, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !162)
!5759 = !DISubroutineType(types: !5760)
!5760 = !{null, !110}
!5761 = !DILocalVariable(name: "edev", arg: 1, scope: !5758, file: !3, line: 1062, type: !110)
!5762 = !DILocation(line: 1062, column: 41, scope: !5758)
!5763 = !DILocation(line: 1064, column: 8, scope: !5758)
!5764 = !DILocation(line: 1064, column: 2, scope: !5758)
!5765 = !DILocation(line: 1065, column: 1, scope: !5758)
!5766 = !DILocation(line: 327, column: 67, scope: !3759, inlinedAt: !5767)
!5767 = distinct !DILocation(line: 1239, column: 2, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1239, column: 2)
!5769 = !DILocalVariable(name: "i", arg: 1, scope: !5770, file: !5771, line: 163, type: !174)
!5770 = distinct !DISubprogram(name: "arch_atomic_add_return", scope: !5771, file: !5771, line: 163, type: !5772, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!5771 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!5772 = !DISubroutineType(types: !5773)
!5773 = !{!174, !174, !5774}
!5774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!5775 = !DILocation(line: 163, column: 55, scope: !5770, inlinedAt: !5776)
!5776 = distinct !DILocation(line: 286, column: 9, scope: !5777, inlinedAt: !5781)
!5777 = distinct !DISubprogram(name: "arch_atomic_inc_return", scope: !5778, file: !5778, line: 284, type: !5779, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!5778 = !DIFile(filename: "./include/linux/atomic-arch-fallback.h", directory: "/home/lizy2001/genbc/linux")
!5779 = !DISubroutineType(types: !5780)
!5780 = !{!174, !5774}
!5781 = distinct !DILocation(line: 251, column: 9, scope: !5782, inlinedAt: !5784)
!5782 = distinct !DISubprogram(name: "atomic_inc_return", scope: !5783, file: !5783, line: 248, type: !5779, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!5783 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!5784 = distinct !DILocation(line: 1115, column: 19, scope: !3673)
!5785 = !DILocalVariable(name: "v", arg: 2, scope: !5770, file: !5771, line: 163, type: !5774)
!5786 = !DILocation(line: 163, column: 68, scope: !5770, inlinedAt: !5776)
!5787 = !DILocalVariable(name: "__ret", scope: !5788, file: !5771, line: 165, type: !174)
!5788 = distinct !DILexicalBlock(scope: !5770, file: !5771, line: 165, column: 13)
!5789 = !DILocation(line: 165, column: 13, scope: !5788, inlinedAt: !5776)
!5790 = !DILocalVariable(name: "v", arg: 1, scope: !5777, file: !5778, line: 284, type: !5774)
!5791 = !DILocation(line: 284, column: 34, scope: !5777, inlinedAt: !5781)
!5792 = !DILocalVariable(name: "v", arg: 1, scope: !5793, file: !5092, line: 99, type: !5095)
!5793 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !5092, file: !5092, line: 99, type: !5093, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!5794 = !DILocation(line: 99, column: 79, scope: !5793, inlinedAt: !5795)
!5795 = distinct !DILocation(line: 250, column: 2, scope: !5782, inlinedAt: !5784)
!5796 = !DILocalVariable(name: "size", arg: 2, scope: !5793, file: !5092, line: 99, type: !236)
!5797 = !DILocation(line: 99, column: 89, scope: !5793, inlinedAt: !5795)
!5798 = !DILocalVariable(name: "v", arg: 1, scope: !5782, file: !5783, line: 248, type: !5774)
!5799 = !DILocation(line: 248, column: 29, scope: !5782, inlinedAt: !5784)
!5800 = !DILocalVariable(name: "edev", arg: 1, scope: !3673, file: !3, line: 1082, type: !110)
!5801 = !DILocation(line: 1082, column: 44, scope: !3673)
!5802 = !DILocalVariable(name: "ret", scope: !3673, file: !3, line: 1084, type: !174)
!5803 = !DILocation(line: 1084, column: 6, scope: !3673)
!5804 = !DILocalVariable(name: "index", scope: !3673, file: !3, line: 1084, type: !174)
!5805 = !DILocation(line: 1084, column: 11, scope: !3673)
!5806 = !DILocation(line: 1087, column: 7, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1087, column: 6)
!5808 = !DILocation(line: 1087, column: 6, scope: !3673)
!5809 = !DILocation(line: 1088, column: 9, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 1087, column: 21)
!5811 = !DILocation(line: 1088, column: 7, scope: !5810)
!5812 = !DILocation(line: 1089, column: 7, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 1089, column: 7)
!5814 = !DILocation(line: 1089, column: 11, scope: !5813)
!5815 = !DILocation(line: 1089, column: 7, scope: !5810)
!5816 = !DILocation(line: 1090, column: 11, scope: !5813)
!5817 = !DILocation(line: 1090, column: 4, scope: !5813)
!5818 = !DILocation(line: 1091, column: 2, scope: !5810)
!5819 = !DILocation(line: 1093, column: 7, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1093, column: 6)
!5821 = !DILocation(line: 1093, column: 12, scope: !5820)
!5822 = !DILocation(line: 1093, column: 16, scope: !5820)
!5823 = !DILocation(line: 1093, column: 22, scope: !5820)
!5824 = !DILocation(line: 1093, column: 6, scope: !3673)
!5825 = !DILocation(line: 1094, column: 3, scope: !5820)
!5826 = !DILocation(line: 1096, column: 2, scope: !3673)
!5827 = !DILocation(line: 1096, column: 9, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5829, file: !3, line: 1096, column: 2)
!5829 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1096, column: 2)
!5830 = !DILocation(line: 1096, column: 15, scope: !5828)
!5831 = !DILocation(line: 1096, column: 31, scope: !5828)
!5832 = !DILocation(line: 1096, column: 38, scope: !5828)
!5833 = !DILocation(line: 1096, column: 2, scope: !5829)
!5834 = !DILocation(line: 1096, column: 59, scope: !5828)
!5835 = !DILocation(line: 1096, column: 2, scope: !5828)
!5836 = distinct !{!5836, !5833, !5837}
!5837 = !DILocation(line: 1096, column: 62, scope: !5829)
!5838 = !DILocation(line: 1098, column: 24, scope: !3673)
!5839 = !DILocation(line: 1098, column: 2, scope: !3673)
!5840 = !DILocation(line: 1098, column: 8, scope: !3673)
!5841 = !DILocation(line: 1098, column: 22, scope: !3673)
!5842 = !DILocation(line: 1099, column: 6, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1099, column: 6)
!5844 = !DILocation(line: 1099, column: 12, scope: !5843)
!5845 = !DILocation(line: 1099, column: 6, scope: !3673)
!5846 = !DILocation(line: 1100, column: 3, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5843, file: !3, line: 1099, column: 35)
!5848 = !DILocation(line: 1102, column: 3, scope: !5847)
!5849 = !DILocation(line: 1105, column: 20, scope: !3673)
!5850 = !DILocation(line: 1105, column: 2, scope: !3673)
!5851 = !DILocation(line: 1105, column: 8, scope: !3673)
!5852 = !DILocation(line: 1105, column: 12, scope: !3673)
!5853 = !DILocation(line: 1105, column: 18, scope: !3673)
!5854 = !DILocation(line: 1106, column: 2, scope: !3673)
!5855 = !DILocation(line: 1106, column: 8, scope: !3673)
!5856 = !DILocation(line: 1106, column: 12, scope: !3673)
!5857 = !DILocation(line: 1106, column: 20, scope: !3673)
!5858 = !DILocation(line: 1108, column: 24, scope: !3673)
!5859 = !DILocation(line: 1108, column: 30, scope: !3673)
!5860 = !DILocation(line: 1108, column: 34, scope: !3673)
!5861 = !DILocation(line: 1108, column: 15, scope: !3673)
!5862 = !DILocation(line: 1108, column: 2, scope: !3673)
!5863 = !DILocation(line: 1108, column: 8, scope: !3673)
!5864 = !DILocation(line: 1108, column: 13, scope: !3673)
!5865 = !DILocation(line: 1109, column: 21, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1109, column: 6)
!5867 = !DILocation(line: 1109, column: 27, scope: !5866)
!5868 = !DILocation(line: 1109, column: 6, scope: !5866)
!5869 = !DILocation(line: 1109, column: 6, scope: !3673)
!5870 = !DILocation(line: 1110, column: 3, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5866, file: !3, line: 1109, column: 34)
!5872 = !DILocation(line: 1112, column: 3, scope: !5871)
!5873 = !DILocation(line: 1114, column: 16, scope: !3673)
!5874 = !DILocation(line: 1114, column: 22, scope: !3673)
!5875 = !DILocation(line: 250, column: 31, scope: !5782, inlinedAt: !5784)
!5876 = !DILocation(line: 101, column: 20, scope: !5793, inlinedAt: !5795)
!5877 = !DILocation(line: 101, column: 23, scope: !5793, inlinedAt: !5795)
!5878 = !DILocation(line: 101, column: 2, scope: !5793, inlinedAt: !5795)
!5879 = !DILocation(line: 102, column: 2, scope: !5793, inlinedAt: !5795)
!5880 = !DILocation(line: 251, column: 32, scope: !5782, inlinedAt: !5784)
!5881 = !DILocation(line: 286, column: 35, scope: !5777, inlinedAt: !5781)
!5882 = !DILocation(line: 165, column: 9, scope: !5770, inlinedAt: !5776)
!5883 = !{i32 -2146590778}
!5884 = !DILocation(line: 165, column: 11, scope: !5770, inlinedAt: !5776)
!5885 = !DILocation(line: 1115, column: 4, scope: !3673)
!5886 = !DILocation(line: 1114, column: 2, scope: !3673)
!5887 = !DILocation(line: 1117, column: 6, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1117, column: 6)
!5889 = !DILocation(line: 1117, column: 12, scope: !5888)
!5890 = !DILocation(line: 1117, column: 6, scope: !3673)
!5891 = !DILocalVariable(name: "str", scope: !5892, file: !3, line: 1118, type: !104)
!5892 = distinct !DILexicalBlock(scope: !5888, file: !3, line: 1117, column: 27)
!5893 = !DILocation(line: 1118, column: 9, scope: !5892)
!5894 = !DILocalVariable(name: "cable", scope: !5892, file: !3, line: 1119, type: !3626)
!5895 = !DILocation(line: 1119, column: 24, scope: !5892)
!5896 = !DILocation(line: 1121, column: 26, scope: !5892)
!5897 = !DILocation(line: 1121, column: 32, scope: !5892)
!5898 = !DILocation(line: 1121, column: 18, scope: !5892)
!5899 = !DILocation(line: 1121, column: 3, scope: !5892)
!5900 = !DILocation(line: 1121, column: 9, scope: !5892)
!5901 = !DILocation(line: 1121, column: 16, scope: !5892)
!5902 = !DILocation(line: 1124, column: 8, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 1124, column: 7)
!5904 = !DILocation(line: 1124, column: 14, scope: !5903)
!5905 = !DILocation(line: 1124, column: 7, scope: !5892)
!5906 = !DILocation(line: 1125, column: 8, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5903, file: !3, line: 1124, column: 22)
!5908 = !DILocation(line: 1126, column: 4, scope: !5907)
!5909 = !DILocation(line: 1128, column: 14, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 1128, column: 3)
!5911 = !DILocation(line: 1128, column: 8, scope: !5910)
!5912 = !DILocation(line: 1128, column: 19, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5910, file: !3, line: 1128, column: 3)
!5914 = !DILocation(line: 1128, column: 27, scope: !5913)
!5915 = !DILocation(line: 1128, column: 33, scope: !5913)
!5916 = !DILocation(line: 1128, column: 25, scope: !5913)
!5917 = !DILocation(line: 1128, column: 3, scope: !5910)
!5918 = !DILocation(line: 1129, column: 13, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 1128, column: 57)
!5920 = !DILocation(line: 1129, column: 19, scope: !5919)
!5921 = !DILocation(line: 1129, column: 26, scope: !5919)
!5922 = !DILocation(line: 1129, column: 10, scope: !5919)
!5923 = !DILocation(line: 1131, column: 44, scope: !5919)
!5924 = !DILocation(line: 1131, column: 10, scope: !5919)
!5925 = !DILocation(line: 1131, column: 8, scope: !5919)
!5926 = !DILocation(line: 1132, column: 9, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5919, file: !3, line: 1132, column: 8)
!5928 = !DILocation(line: 1132, column: 8, scope: !5919)
!5929 = !DILocation(line: 1133, column: 15, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5931, file: !3, line: 1133, column: 5)
!5931 = distinct !DILexicalBlock(scope: !5927, file: !3, line: 1132, column: 14)
!5932 = !DILocation(line: 1133, column: 10, scope: !5930)
!5933 = !DILocation(line: 1133, column: 19, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 1133, column: 5)
!5935 = !DILocation(line: 1133, column: 25, scope: !5934)
!5936 = !DILocation(line: 1133, column: 5, scope: !5930)
!5937 = !DILocation(line: 1134, column: 15, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 1133, column: 40)
!5939 = !DILocation(line: 1134, column: 21, scope: !5938)
!5940 = !DILocation(line: 1134, column: 28, scope: !5938)
!5941 = !DILocation(line: 1134, column: 12, scope: !5938)
!5942 = !DILocation(line: 1135, column: 12, scope: !5938)
!5943 = !DILocation(line: 1135, column: 19, scope: !5938)
!5944 = !DILocation(line: 1135, column: 26, scope: !5938)
!5945 = !DILocation(line: 1135, column: 6, scope: !5938)
!5946 = !DILocation(line: 1136, column: 5, scope: !5938)
!5947 = !DILocation(line: 1133, column: 36, scope: !5934)
!5948 = !DILocation(line: 1133, column: 5, scope: !5934)
!5949 = distinct !{!5949, !5936, !5950}
!5950 = !DILocation(line: 1136, column: 5, scope: !5930)
!5951 = !DILocation(line: 1137, column: 9, scope: !5931)
!5952 = !DILocation(line: 1139, column: 5, scope: !5931)
!5953 = !DILocation(line: 1142, column: 18, scope: !5919)
!5954 = !DILocation(line: 1142, column: 4, scope: !5919)
!5955 = !DILocation(line: 1142, column: 11, scope: !5919)
!5956 = !DILocation(line: 1142, column: 16, scope: !5919)
!5957 = !DILocation(line: 1143, column: 25, scope: !5919)
!5958 = !DILocation(line: 1143, column: 4, scope: !5919)
!5959 = !DILocation(line: 1143, column: 11, scope: !5919)
!5960 = !DILocation(line: 1143, column: 23, scope: !5919)
!5961 = !DILocation(line: 1144, column: 23, scope: !5919)
!5962 = !DILocation(line: 1144, column: 30, scope: !5919)
!5963 = !DILocation(line: 1144, column: 40, scope: !5919)
!5964 = !DILocation(line: 1144, column: 4, scope: !5919)
!5965 = !DILocation(line: 1144, column: 11, scope: !5919)
!5966 = !DILocation(line: 1144, column: 20, scope: !5919)
!5967 = !DILocation(line: 1145, column: 23, scope: !5919)
!5968 = !DILocation(line: 1145, column: 30, scope: !5919)
!5969 = !DILocation(line: 1145, column: 41, scope: !5919)
!5970 = !DILocation(line: 1145, column: 4, scope: !5919)
!5971 = !DILocation(line: 1145, column: 11, scope: !5919)
!5972 = !DILocation(line: 1145, column: 20, scope: !5919)
!5973 = !DILocation(line: 1146, column: 4, scope: !5919)
!5974 = !DILocation(line: 1146, column: 11, scope: !5919)
!5975 = !DILocation(line: 1146, column: 20, scope: !5919)
!5976 = !DILocation(line: 1147, column: 25, scope: !5919)
!5977 = !DILocation(line: 1147, column: 4, scope: !5919)
!5978 = !DILocation(line: 1147, column: 11, scope: !5919)
!5979 = !DILocation(line: 1147, column: 18, scope: !5919)
!5980 = !DILocation(line: 1147, column: 23, scope: !5919)
!5981 = !DILocation(line: 1148, column: 26, scope: !5919)
!5982 = !DILocation(line: 1148, column: 33, scope: !5919)
!5983 = !DILocation(line: 1148, column: 4, scope: !5919)
!5984 = !DILocation(line: 1148, column: 11, scope: !5919)
!5985 = !DILocation(line: 1148, column: 18, scope: !5919)
!5986 = !DILocation(line: 1148, column: 24, scope: !5919)
!5987 = !DILocation(line: 1150, column: 4, scope: !5919)
!5988 = !DILocation(line: 1150, column: 4, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5919, file: !3, line: 1150, column: 4)
!5990 = !DILocation(line: 1151, column: 4, scope: !5919)
!5991 = !DILocation(line: 1151, column: 11, scope: !5919)
!5992 = !DILocation(line: 1151, column: 21, scope: !5919)
!5993 = !DILocation(line: 1151, column: 26, scope: !5919)
!5994 = !DILocation(line: 1151, column: 31, scope: !5919)
!5995 = !DILocation(line: 1152, column: 4, scope: !5919)
!5996 = !DILocation(line: 1152, column: 11, scope: !5919)
!5997 = !DILocation(line: 1152, column: 21, scope: !5919)
!5998 = !DILocation(line: 1152, column: 26, scope: !5919)
!5999 = !DILocation(line: 1152, column: 31, scope: !5919)
!6000 = !DILocation(line: 1153, column: 4, scope: !5919)
!6001 = !DILocation(line: 1153, column: 11, scope: !5919)
!6002 = !DILocation(line: 1153, column: 21, scope: !5919)
!6003 = !DILocation(line: 1153, column: 26, scope: !5919)
!6004 = !DILocation(line: 1155, column: 4, scope: !5919)
!6005 = !DILocation(line: 1155, column: 4, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !5919, file: !3, line: 1155, column: 4)
!6007 = !DILocation(line: 1156, column: 4, scope: !5919)
!6008 = !DILocation(line: 1156, column: 11, scope: !5919)
!6009 = !DILocation(line: 1156, column: 22, scope: !5919)
!6010 = !DILocation(line: 1156, column: 27, scope: !5919)
!6011 = !DILocation(line: 1156, column: 32, scope: !5919)
!6012 = !DILocation(line: 1157, column: 4, scope: !5919)
!6013 = !DILocation(line: 1157, column: 11, scope: !5919)
!6014 = !DILocation(line: 1157, column: 22, scope: !5919)
!6015 = !DILocation(line: 1157, column: 27, scope: !5919)
!6016 = !DILocation(line: 1157, column: 32, scope: !5919)
!6017 = !DILocation(line: 1158, column: 4, scope: !5919)
!6018 = !DILocation(line: 1158, column: 11, scope: !5919)
!6019 = !DILocation(line: 1158, column: 22, scope: !5919)
!6020 = !DILocation(line: 1158, column: 27, scope: !5919)
!6021 = !DILocation(line: 1159, column: 3, scope: !5919)
!6022 = !DILocation(line: 1128, column: 53, scope: !5913)
!6023 = !DILocation(line: 1128, column: 3, scope: !5913)
!6024 = distinct !{!6024, !5917, !6025}
!6025 = !DILocation(line: 1159, column: 3, scope: !5910)
!6026 = !DILocation(line: 1160, column: 2, scope: !5892)
!6027 = !DILocation(line: 1162, column: 6, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1162, column: 6)
!6029 = !DILocation(line: 1162, column: 12, scope: !6028)
!6030 = !DILocation(line: 1162, column: 26, scope: !6028)
!6031 = !DILocation(line: 1162, column: 29, scope: !6028)
!6032 = !DILocation(line: 1162, column: 35, scope: !6028)
!6033 = !DILocation(line: 1162, column: 6, scope: !3673)
!6034 = !DILocalVariable(name: "name", scope: !6035, file: !3, line: 1163, type: !104)
!6035 = distinct !DILexicalBlock(scope: !6028, file: !3, line: 1162, column: 55)
!6036 = !DILocation(line: 1163, column: 9, scope: !6035)
!6037 = !DILocation(line: 1166, column: 14, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6035, file: !3, line: 1166, column: 3)
!6039 = !DILocation(line: 1166, column: 8, scope: !6038)
!6040 = !DILocation(line: 1166, column: 19, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 1166, column: 3)
!6042 = !DILocation(line: 1166, column: 25, scope: !6041)
!6043 = !DILocation(line: 1166, column: 44, scope: !6041)
!6044 = !DILocation(line: 1166, column: 3, scope: !6038)
!6045 = !DILocation(line: 1166, column: 57, scope: !6041)
!6046 = !DILocation(line: 1166, column: 3, scope: !6041)
!6047 = distinct !{!6047, !6044, !6048}
!6048 = !DILocation(line: 1167, column: 4, scope: !6038)
!6049 = !DILocation(line: 1169, column: 30, scope: !6035)
!6050 = !DILocation(line: 1169, column: 36, scope: !6035)
!6051 = !DILocation(line: 1169, column: 22, scope: !6035)
!6052 = !DILocation(line: 1169, column: 3, scope: !6035)
!6053 = !DILocation(line: 1169, column: 9, scope: !6035)
!6054 = !DILocation(line: 1169, column: 20, scope: !6035)
!6055 = !DILocation(line: 1172, column: 8, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6035, file: !3, line: 1172, column: 7)
!6057 = !DILocation(line: 1172, column: 14, scope: !6056)
!6058 = !DILocation(line: 1172, column: 7, scope: !6035)
!6059 = !DILocation(line: 1173, column: 8, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6056, file: !3, line: 1172, column: 26)
!6061 = !DILocation(line: 1174, column: 4, scope: !6060)
!6062 = !DILocation(line: 1177, column: 32, scope: !6035)
!6063 = !DILocation(line: 1177, column: 24, scope: !6035)
!6064 = !DILocation(line: 1177, column: 3, scope: !6035)
!6065 = !DILocation(line: 1177, column: 9, scope: !6035)
!6066 = !DILocation(line: 1177, column: 22, scope: !6035)
!6067 = !DILocation(line: 1180, column: 8, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6035, file: !3, line: 1180, column: 7)
!6069 = !DILocation(line: 1180, column: 14, scope: !6068)
!6070 = !DILocation(line: 1180, column: 7, scope: !6035)
!6071 = !DILocation(line: 1181, column: 8, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6068, file: !3, line: 1180, column: 28)
!6073 = !DILocation(line: 1182, column: 10, scope: !6072)
!6074 = !DILocation(line: 1182, column: 16, scope: !6072)
!6075 = !DILocation(line: 1182, column: 4, scope: !6072)
!6076 = !DILocation(line: 1183, column: 4, scope: !6072)
!6077 = !DILocation(line: 1186, column: 14, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6035, file: !3, line: 1186, column: 3)
!6079 = !DILocation(line: 1186, column: 8, scope: !6078)
!6080 = !DILocation(line: 1186, column: 19, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6078, file: !3, line: 1186, column: 3)
!6082 = !DILocation(line: 1186, column: 25, scope: !6081)
!6083 = !DILocation(line: 1186, column: 44, scope: !6081)
!6084 = !DILocation(line: 1186, column: 3, scope: !6078)
!6085 = !DILocation(line: 1188, column: 7, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6081, file: !3, line: 1186, column: 61)
!6087 = !DILocation(line: 1188, column: 13, scope: !6086)
!6088 = !DILocation(line: 1188, column: 32, scope: !6086)
!6089 = !DILocation(line: 1187, column: 11, scope: !6086)
!6090 = !DILocation(line: 1187, column: 9, scope: !6086)
!6091 = !DILocation(line: 1189, column: 9, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6086, file: !3, line: 1189, column: 8)
!6093 = !DILocation(line: 1189, column: 8, scope: !6086)
!6094 = !DILocation(line: 1190, column: 15, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6096, file: !3, line: 1190, column: 5)
!6096 = distinct !DILexicalBlock(scope: !6092, file: !3, line: 1189, column: 15)
!6097 = !DILocation(line: 1190, column: 10, scope: !6095)
!6098 = !DILocation(line: 1190, column: 19, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6095, file: !3, line: 1190, column: 5)
!6100 = !DILocation(line: 1190, column: 25, scope: !6099)
!6101 = !DILocation(line: 1190, column: 5, scope: !6095)
!6102 = !DILocation(line: 1191, column: 12, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6099, file: !3, line: 1190, column: 40)
!6104 = !DILocation(line: 1191, column: 18, scope: !6103)
!6105 = !DILocation(line: 1191, column: 31, scope: !6103)
!6106 = !DILocation(line: 1191, column: 38, scope: !6103)
!6107 = !DILocation(line: 1192, column: 12, scope: !6103)
!6108 = !DILocation(line: 1191, column: 6, scope: !6103)
!6109 = !DILocation(line: 1193, column: 5, scope: !6103)
!6110 = !DILocation(line: 1190, column: 36, scope: !6099)
!6111 = !DILocation(line: 1190, column: 5, scope: !6099)
!6112 = distinct !{!6112, !6101, !6113}
!6113 = !DILocation(line: 1193, column: 5, scope: !6095)
!6114 = !DILocation(line: 1194, column: 11, scope: !6096)
!6115 = !DILocation(line: 1194, column: 17, scope: !6096)
!6116 = !DILocation(line: 1194, column: 5, scope: !6096)
!6117 = !DILocation(line: 1195, column: 11, scope: !6096)
!6118 = !DILocation(line: 1195, column: 17, scope: !6096)
!6119 = !DILocation(line: 1195, column: 5, scope: !6096)
!6120 = !DILocation(line: 1196, column: 9, scope: !6096)
!6121 = !DILocation(line: 1197, column: 5, scope: !6096)
!6122 = !DILocation(line: 1199, column: 4, scope: !6086)
!6123 = !DILocation(line: 1199, column: 4, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6086, file: !3, line: 1199, column: 4)
!6125 = !DILocation(line: 1200, column: 42, scope: !6086)
!6126 = !DILocation(line: 1200, column: 4, scope: !6086)
!6127 = !DILocation(line: 1200, column: 10, scope: !6086)
!6128 = !DILocation(line: 1200, column: 23, scope: !6086)
!6129 = !DILocation(line: 1200, column: 30, scope: !6086)
!6130 = !DILocation(line: 1200, column: 35, scope: !6086)
!6131 = !DILocation(line: 1200, column: 40, scope: !6086)
!6132 = !DILocation(line: 1201, column: 4, scope: !6086)
!6133 = !DILocation(line: 1201, column: 10, scope: !6086)
!6134 = !DILocation(line: 1201, column: 23, scope: !6086)
!6135 = !DILocation(line: 1201, column: 30, scope: !6086)
!6136 = !DILocation(line: 1201, column: 35, scope: !6086)
!6137 = !DILocation(line: 1201, column: 40, scope: !6086)
!6138 = !DILocation(line: 1202, column: 31, scope: !6086)
!6139 = !DILocation(line: 1202, column: 37, scope: !6086)
!6140 = !DILocation(line: 1202, column: 50, scope: !6086)
!6141 = !DILocation(line: 1203, column: 9, scope: !6086)
!6142 = !DILocation(line: 1202, column: 4, scope: !6086)
!6143 = !DILocation(line: 1202, column: 10, scope: !6086)
!6144 = !DILocation(line: 1202, column: 21, scope: !6086)
!6145 = !DILocation(line: 1202, column: 28, scope: !6086)
!6146 = !DILocation(line: 1204, column: 3, scope: !6086)
!6147 = !DILocation(line: 1186, column: 57, scope: !6081)
!6148 = !DILocation(line: 1186, column: 3, scope: !6081)
!6149 = distinct !{!6149, !6084, !6150}
!6150 = !DILocation(line: 1204, column: 3, scope: !6078)
!6151 = !DILocation(line: 1205, column: 28, scope: !6035)
!6152 = !DILocation(line: 1205, column: 3, scope: !6035)
!6153 = !DILocation(line: 1205, column: 9, scope: !6035)
!6154 = !DILocation(line: 1205, column: 21, scope: !6035)
!6155 = !DILocation(line: 1205, column: 26, scope: !6035)
!6156 = !DILocation(line: 1206, column: 29, scope: !6035)
!6157 = !DILocation(line: 1206, column: 35, scope: !6035)
!6158 = !DILocation(line: 1206, column: 3, scope: !6035)
!6159 = !DILocation(line: 1206, column: 9, scope: !6035)
!6160 = !DILocation(line: 1206, column: 21, scope: !6035)
!6161 = !DILocation(line: 1206, column: 27, scope: !6035)
!6162 = !DILocation(line: 1208, column: 2, scope: !6035)
!6163 = !DILocation(line: 1210, column: 6, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1210, column: 6)
!6165 = !DILocation(line: 1210, column: 12, scope: !6164)
!6166 = !DILocation(line: 1210, column: 6, scope: !3673)
!6167 = !DILocation(line: 1212, column: 12, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6164, file: !3, line: 1210, column: 27)
!6169 = !DILocation(line: 1212, column: 18, scope: !6168)
!6170 = !DILocation(line: 1212, column: 32, scope: !6168)
!6171 = !DILocation(line: 1212, column: 4, scope: !6168)
!6172 = !DILocation(line: 1211, column: 3, scope: !6168)
!6173 = !DILocation(line: 1211, column: 9, scope: !6168)
!6174 = !DILocation(line: 1211, column: 25, scope: !6168)
!6175 = !DILocation(line: 1211, column: 32, scope: !6168)
!6176 = !DILocation(line: 1215, column: 8, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 1215, column: 7)
!6178 = !DILocation(line: 1215, column: 14, scope: !6177)
!6179 = !DILocation(line: 1215, column: 30, scope: !6177)
!6180 = !DILocation(line: 1215, column: 7, scope: !6168)
!6181 = !DILocation(line: 1216, column: 8, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 1215, column: 38)
!6183 = !DILocation(line: 1217, column: 4, scope: !6182)
!6184 = !DILocation(line: 1220, column: 42, scope: !6168)
!6185 = !DILocation(line: 1220, column: 48, scope: !6168)
!6186 = !DILocation(line: 1220, column: 32, scope: !6168)
!6187 = !DILocation(line: 1220, column: 3, scope: !6168)
!6188 = !DILocation(line: 1220, column: 9, scope: !6168)
!6189 = !DILocation(line: 1220, column: 25, scope: !6168)
!6190 = !DILocation(line: 1220, column: 30, scope: !6168)
!6191 = !DILocation(line: 1221, column: 3, scope: !6168)
!6192 = !DILocation(line: 1221, column: 9, scope: !6168)
!6193 = !DILocation(line: 1221, column: 25, scope: !6168)
!6194 = !DILocation(line: 1221, column: 33, scope: !6168)
!6195 = !DILocation(line: 1223, column: 14, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 1223, column: 3)
!6197 = !DILocation(line: 1223, column: 8, scope: !6196)
!6198 = !DILocation(line: 1223, column: 19, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6196, file: !3, line: 1223, column: 3)
!6200 = !DILocation(line: 1223, column: 27, scope: !6199)
!6201 = !DILocation(line: 1223, column: 33, scope: !6199)
!6202 = !DILocation(line: 1223, column: 25, scope: !6199)
!6203 = !DILocation(line: 1223, column: 3, scope: !6196)
!6204 = !DILocation(line: 1225, column: 6, scope: !6199)
!6205 = !DILocation(line: 1225, column: 12, scope: !6199)
!6206 = !DILocation(line: 1225, column: 19, scope: !6199)
!6207 = !DILocation(line: 1225, column: 26, scope: !6199)
!6208 = !DILocation(line: 1224, column: 4, scope: !6199)
!6209 = !DILocation(line: 1224, column: 10, scope: !6199)
!6210 = !DILocation(line: 1224, column: 26, scope: !6199)
!6211 = !DILocation(line: 1224, column: 33, scope: !6199)
!6212 = !DILocation(line: 1224, column: 40, scope: !6199)
!6213 = !DILocation(line: 1223, column: 53, scope: !6199)
!6214 = !DILocation(line: 1223, column: 3, scope: !6199)
!6215 = distinct !{!6215, !6203, !6216}
!6216 = !DILocation(line: 1225, column: 26, scope: !6196)
!6217 = !DILocation(line: 1226, column: 7, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 1226, column: 7)
!6219 = !DILocation(line: 1226, column: 13, scope: !6218)
!6220 = !DILocation(line: 1226, column: 7, scope: !6168)
!6221 = !DILocation(line: 1228, column: 6, scope: !6218)
!6222 = !DILocation(line: 1228, column: 12, scope: !6218)
!6223 = !DILocation(line: 1227, column: 4, scope: !6218)
!6224 = !DILocation(line: 1227, column: 10, scope: !6218)
!6225 = !DILocation(line: 1227, column: 26, scope: !6218)
!6226 = !DILocation(line: 1227, column: 33, scope: !6218)
!6227 = !DILocation(line: 1227, column: 40, scope: !6218)
!6228 = !DILocation(line: 1230, column: 21, scope: !6168)
!6229 = !DILocation(line: 1230, column: 27, scope: !6168)
!6230 = !DILocation(line: 1230, column: 3, scope: !6168)
!6231 = !DILocation(line: 1230, column: 9, scope: !6168)
!6232 = !DILocation(line: 1230, column: 13, scope: !6168)
!6233 = !DILocation(line: 1230, column: 18, scope: !6168)
!6234 = !DILocation(line: 1231, column: 2, scope: !6168)
!6235 = !DILocation(line: 1233, column: 25, scope: !3673)
!6236 = !DILocation(line: 1233, column: 31, scope: !3673)
!6237 = !DILocation(line: 1233, column: 8, scope: !3673)
!6238 = !DILocation(line: 1233, column: 6, scope: !3673)
!6239 = !DILocation(line: 1234, column: 6, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1234, column: 6)
!6241 = !DILocation(line: 1234, column: 6, scope: !3673)
!6242 = !DILocation(line: 1235, column: 15, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 1234, column: 11)
!6244 = !DILocation(line: 1235, column: 21, scope: !6243)
!6245 = !DILocation(line: 1235, column: 3, scope: !6243)
!6246 = !DILocation(line: 1236, column: 3, scope: !6243)
!6247 = !DILocation(line: 1239, column: 2, scope: !3673)
!6248 = !DILocation(line: 1239, column: 2, scope: !5768)
!6249 = !DILocation(line: 329, column: 10, scope: !3759, inlinedAt: !5767)
!6250 = !DILocation(line: 329, column: 16, scope: !3759, inlinedAt: !5767)
!6251 = !DILocation(line: 1240, column: 27, scope: !3673)
!6252 = !DILocation(line: 1240, column: 33, scope: !3673)
!6253 = !DILocation(line: 1240, column: 38, scope: !3673)
!6254 = !DILocation(line: 1240, column: 44, scope: !3673)
!6255 = !DILocation(line: 1240, column: 13, scope: !3673)
!6256 = !DILocation(line: 1240, column: 2, scope: !3673)
!6257 = !DILocation(line: 1240, column: 8, scope: !3673)
!6258 = !DILocation(line: 1240, column: 11, scope: !3673)
!6259 = !DILocation(line: 1242, column: 7, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1242, column: 6)
!6261 = !DILocation(line: 1242, column: 13, scope: !6260)
!6262 = !DILocation(line: 1242, column: 6, scope: !3673)
!6263 = !DILocation(line: 1243, column: 7, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6260, file: !3, line: 1242, column: 17)
!6265 = !DILocation(line: 1244, column: 3, scope: !6264)
!6266 = !DILocation(line: 1247, column: 13, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1247, column: 2)
!6268 = !DILocation(line: 1247, column: 7, scope: !6267)
!6269 = !DILocation(line: 1247, column: 18, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6267, file: !3, line: 1247, column: 2)
!6271 = !DILocation(line: 1247, column: 26, scope: !6270)
!6272 = !DILocation(line: 1247, column: 32, scope: !6270)
!6273 = !DILocation(line: 1247, column: 24, scope: !6270)
!6274 = !DILocation(line: 1247, column: 2, scope: !6267)
!6275 = !DILocation(line: 1248, column: 3, scope: !6270)
!6276 = !DILocation(line: 1248, column: 3, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6270, file: !3, line: 1248, column: 3)
!6278 = !DILocation(line: 1247, column: 52, scope: !6270)
!6279 = !DILocation(line: 1247, column: 2, scope: !6270)
!6280 = distinct !{!6280, !6274, !6281}
!6281 = !DILocation(line: 1248, column: 3, scope: !6267)
!6282 = !DILocation(line: 1250, column: 2, scope: !3673)
!6283 = !DILocation(line: 1250, column: 2, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1250, column: 2)
!6285 = !DILocation(line: 1252, column: 19, scope: !3673)
!6286 = !DILocation(line: 1252, column: 25, scope: !3673)
!6287 = !DILocation(line: 1252, column: 30, scope: !3673)
!6288 = !DILocation(line: 1252, column: 2, scope: !3673)
!6289 = !DILocation(line: 1253, column: 2, scope: !3673)
!6290 = !DILocation(line: 1253, column: 8, scope: !3673)
!6291 = !DILocation(line: 1253, column: 14, scope: !3673)
!6292 = !DILocation(line: 1255, column: 2, scope: !3673)
!6293 = !DILocation(line: 1256, column: 12, scope: !3673)
!6294 = !DILocation(line: 1256, column: 18, scope: !3673)
!6295 = !DILocation(line: 1256, column: 2, scope: !3673)
!6296 = !DILocation(line: 1257, column: 2, scope: !3673)
!6297 = !DILocation(line: 1259, column: 2, scope: !3673)
!6298 = !DILabel(scope: !3673, name: "err_dev", file: !3, line: 1261)
!6299 = !DILocation(line: 1261, column: 1, scope: !3673)
!6300 = !DILocation(line: 1262, column: 6, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1262, column: 6)
!6302 = !DILocation(line: 1262, column: 12, scope: !6301)
!6303 = !DILocation(line: 1262, column: 6, scope: !3673)
!6304 = !DILocation(line: 1263, column: 9, scope: !6301)
!6305 = !DILocation(line: 1263, column: 15, scope: !6301)
!6306 = !DILocation(line: 1263, column: 31, scope: !6301)
!6307 = !DILocation(line: 1263, column: 3, scope: !6301)
!6308 = !DILabel(scope: !3673, name: "err_alloc_groups", file: !3, line: 1264)
!6309 = !DILocation(line: 1264, column: 1, scope: !3673)
!6310 = !DILocation(line: 1265, column: 6, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1265, column: 6)
!6312 = !DILocation(line: 1265, column: 12, scope: !6311)
!6313 = !DILocation(line: 1265, column: 26, scope: !6311)
!6314 = !DILocation(line: 1265, column: 29, scope: !6311)
!6315 = !DILocation(line: 1265, column: 35, scope: !6311)
!6316 = !DILocation(line: 1265, column: 6, scope: !3673)
!6317 = !DILocation(line: 1266, column: 14, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6319, file: !3, line: 1266, column: 3)
!6319 = distinct !DILexicalBlock(scope: !6311, file: !3, line: 1265, column: 55)
!6320 = !DILocation(line: 1266, column: 8, scope: !6318)
!6321 = !DILocation(line: 1266, column: 19, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6318, file: !3, line: 1266, column: 3)
!6323 = !DILocation(line: 1266, column: 25, scope: !6322)
!6324 = !DILocation(line: 1266, column: 44, scope: !6322)
!6325 = !DILocation(line: 1266, column: 3, scope: !6318)
!6326 = !DILocation(line: 1267, column: 10, scope: !6322)
!6327 = !DILocation(line: 1267, column: 16, scope: !6322)
!6328 = !DILocation(line: 1267, column: 29, scope: !6322)
!6329 = !DILocation(line: 1267, column: 36, scope: !6322)
!6330 = !DILocation(line: 1267, column: 41, scope: !6322)
!6331 = !DILocation(line: 1267, column: 4, scope: !6322)
!6332 = !DILocation(line: 1266, column: 57, scope: !6322)
!6333 = !DILocation(line: 1266, column: 3, scope: !6322)
!6334 = distinct !{!6334, !6325, !6335}
!6335 = !DILocation(line: 1267, column: 45, scope: !6318)
!6336 = !DILocation(line: 1268, column: 9, scope: !6319)
!6337 = !DILocation(line: 1268, column: 15, scope: !6319)
!6338 = !DILocation(line: 1268, column: 3, scope: !6319)
!6339 = !DILocation(line: 1269, column: 9, scope: !6319)
!6340 = !DILocation(line: 1269, column: 15, scope: !6319)
!6341 = !DILocation(line: 1269, column: 3, scope: !6319)
!6342 = !DILocation(line: 1270, column: 2, scope: !6319)
!6343 = !DILabel(scope: !3673, name: "err_muex", file: !3, line: 1271)
!6344 = !DILocation(line: 1271, column: 1, scope: !3673)
!6345 = !DILocation(line: 1272, column: 13, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1272, column: 2)
!6347 = !DILocation(line: 1272, column: 7, scope: !6346)
!6348 = !DILocation(line: 1272, column: 18, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6346, file: !3, line: 1272, column: 2)
!6350 = !DILocation(line: 1272, column: 26, scope: !6349)
!6351 = !DILocation(line: 1272, column: 32, scope: !6349)
!6352 = !DILocation(line: 1272, column: 24, scope: !6349)
!6353 = !DILocation(line: 1272, column: 2, scope: !6346)
!6354 = !DILocation(line: 1273, column: 9, scope: !6349)
!6355 = !DILocation(line: 1273, column: 15, scope: !6349)
!6356 = !DILocation(line: 1273, column: 22, scope: !6349)
!6357 = !DILocation(line: 1273, column: 29, scope: !6349)
!6358 = !DILocation(line: 1273, column: 36, scope: !6349)
!6359 = !DILocation(line: 1273, column: 3, scope: !6349)
!6360 = !DILocation(line: 1272, column: 52, scope: !6349)
!6361 = !DILocation(line: 1272, column: 2, scope: !6349)
!6362 = distinct !{!6362, !6353, !6363}
!6363 = !DILocation(line: 1273, column: 40, scope: !6346)
!6364 = !DILabel(scope: !3673, name: "err_alloc_cables", file: !3, line: 1274)
!6365 = !DILocation(line: 1274, column: 1, scope: !3673)
!6366 = !DILocation(line: 1275, column: 6, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1275, column: 6)
!6368 = !DILocation(line: 1275, column: 12, scope: !6367)
!6369 = !DILocation(line: 1275, column: 6, scope: !3673)
!6370 = !DILocation(line: 1276, column: 9, scope: !6367)
!6371 = !DILocation(line: 1276, column: 15, scope: !6367)
!6372 = !DILocation(line: 1276, column: 3, scope: !6367)
!6373 = !DILabel(scope: !3673, name: "err_sysfs_alloc", file: !3, line: 1277)
!6374 = !DILocation(line: 1277, column: 1, scope: !3673)
!6375 = !DILocation(line: 1278, column: 9, scope: !3673)
!6376 = !DILocation(line: 1278, column: 2, scope: !3673)
!6377 = !DILocation(line: 1279, column: 1, scope: !3673)
!6378 = !DILocation(line: 1011, column: 7, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !3721, file: !3, line: 1011, column: 6)
!6380 = !DILocation(line: 1011, column: 6, scope: !3721)
!6381 = !DILocation(line: 1012, column: 18, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 1012, column: 18)
!6383 = distinct !DILexicalBlock(scope: !6379, file: !3, line: 1011, column: 21)
!6384 = !DILocation(line: 1012, column: 16, scope: !6383)
!6385 = !DILocation(line: 1013, column: 14, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 1013, column: 7)
!6387 = !DILocation(line: 1013, column: 7, scope: !6386)
!6388 = !DILocation(line: 1013, column: 7, scope: !6383)
!6389 = !DILocation(line: 1014, column: 19, scope: !6386)
!6390 = !DILocation(line: 1014, column: 11, scope: !6386)
!6391 = !DILocation(line: 1014, column: 4, scope: !6386)
!6392 = !DILocation(line: 1015, column: 3, scope: !6383)
!6393 = !DILocation(line: 1015, column: 17, scope: !6383)
!6394 = !DILocation(line: 1015, column: 28, scope: !6383)
!6395 = !DILocation(line: 1016, column: 2, scope: !6383)
!6396 = !DILocation(line: 1018, column: 2, scope: !3721)
!6397 = !DILocation(line: 1019, column: 1, scope: !3721)
!6398 = distinct !DISubprogram(name: "extcon_dev_release", scope: !3, file: !3, line: 1021, type: !3158, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6399 = !DILocalVariable(name: "dev", arg: 1, scope: !6398, file: !3, line: 1021, type: !3135)
!6400 = !DILocation(line: 1021, column: 47, scope: !6398)
!6401 = !DILocation(line: 1023, column: 1, scope: !6398)
!6402 = distinct !DISubprogram(name: "dev_name", scope: !60, file: !60, line: 609, type: !6403, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6403 = !DISubroutineType(types: !6404)
!6404 = !{!115, !3477}
!6405 = !DILocalVariable(name: "dev", arg: 1, scope: !6402, file: !60, line: 609, type: !3477)
!6406 = !DILocation(line: 609, column: 57, scope: !6402)
!6407 = !DILocation(line: 612, column: 6, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6402, file: !60, line: 612, column: 6)
!6409 = !DILocation(line: 612, column: 11, scope: !6408)
!6410 = !DILocation(line: 612, column: 6, scope: !6402)
!6411 = !DILocation(line: 613, column: 10, scope: !6408)
!6412 = !DILocation(line: 613, column: 15, scope: !6408)
!6413 = !DILocation(line: 613, column: 3, scope: !6408)
!6414 = !DILocation(line: 615, column: 23, scope: !6402)
!6415 = !DILocation(line: 615, column: 28, scope: !6402)
!6416 = !DILocation(line: 615, column: 9, scope: !6402)
!6417 = !DILocation(line: 615, column: 2, scope: !6402)
!6418 = !DILocation(line: 616, column: 1, scope: !6402)
!6419 = distinct !DISubprogram(name: "IS_ERR_OR_NULL", scope: !5167, file: !5167, line: 39, type: !6420, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6420 = !DISubroutineType(types: !6421)
!6421 = !{!400, !2966}
!6422 = !DILocalVariable(name: "ptr", arg: 1, scope: !6419, file: !5167, line: 39, type: !2966)
!6423 = !DILocation(line: 39, column: 68, scope: !6419)
!6424 = !DILocation(line: 41, column: 9, scope: !6419)
!6425 = !DILocation(line: 41, column: 24, scope: !6419)
!6426 = !DILocation(line: 41, column: 27, scope: !6419)
!6427 = !DILocation(line: 41, column: 2, scope: !6419)
!6428 = distinct !DISubprogram(name: "kcalloc", scope: !97, file: !97, line: 601, type: !6429, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6429 = !DISubroutineType(types: !6430)
!6430 = !{!109, !236, !236, !106}
!6431 = !DILocalVariable(name: "n", arg: 1, scope: !6428, file: !97, line: 601, type: !236)
!6432 = !DILocation(line: 601, column: 36, scope: !6428)
!6433 = !DILocalVariable(name: "size", arg: 2, scope: !6428, file: !97, line: 601, type: !236)
!6434 = !DILocation(line: 601, column: 46, scope: !6428)
!6435 = !DILocalVariable(name: "flags", arg: 3, scope: !6428, file: !97, line: 601, type: !106)
!6436 = !DILocation(line: 601, column: 58, scope: !6428)
!6437 = !DILocation(line: 603, column: 23, scope: !6428)
!6438 = !DILocation(line: 603, column: 26, scope: !6428)
!6439 = !DILocation(line: 603, column: 32, scope: !6428)
!6440 = !DILocation(line: 603, column: 38, scope: !6428)
!6441 = !DILocation(line: 603, column: 9, scope: !6428)
!6442 = !DILocation(line: 603, column: 2, scope: !6428)
!6443 = distinct !DISubprogram(name: "cable_name_show", scope: !3, file: !3, line: 376, type: !3638, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6444 = !DILocalVariable(name: "dev", arg: 1, scope: !6443, file: !3, line: 376, type: !3135)
!6445 = !DILocation(line: 376, column: 47, scope: !6443)
!6446 = !DILocalVariable(name: "attr", arg: 2, scope: !6443, file: !3, line: 377, type: !3640)
!6447 = !DILocation(line: 377, column: 36, scope: !6443)
!6448 = !DILocalVariable(name: "buf", arg: 3, scope: !6443, file: !3, line: 377, type: !104)
!6449 = !DILocation(line: 377, column: 48, scope: !6443)
!6450 = !DILocalVariable(name: "cable", scope: !6443, file: !3, line: 379, type: !3626)
!6451 = !DILocation(line: 379, column: 23, scope: !6443)
!6452 = !DILocalVariable(name: "__mptr", scope: !6453, file: !3, line: 379, type: !109)
!6453 = distinct !DILexicalBlock(scope: !6443, file: !3, line: 379, column: 31)
!6454 = !DILocation(line: 379, column: 31, scope: !6453)
!6455 = !DILocation(line: 379, column: 31, scope: !6456)
!6456 = distinct !DILexicalBlock(scope: !6453, file: !3, line: 379, column: 31)
!6457 = !DILocalVariable(name: "i", scope: !6443, file: !3, line: 381, type: !174)
!6458 = !DILocation(line: 381, column: 6, scope: !6443)
!6459 = !DILocation(line: 381, column: 10, scope: !6443)
!6460 = !DILocation(line: 381, column: 17, scope: !6443)
!6461 = !DILocation(line: 383, column: 17, scope: !6443)
!6462 = !DILocation(line: 384, column: 16, scope: !6443)
!6463 = !DILocation(line: 384, column: 23, scope: !6443)
!6464 = !DILocation(line: 384, column: 29, scope: !6443)
!6465 = !DILocation(line: 384, column: 45, scope: !6443)
!6466 = !DILocation(line: 384, column: 4, scope: !6443)
!6467 = !DILocation(line: 384, column: 49, scope: !6443)
!6468 = !DILocation(line: 383, column: 9, scope: !6443)
!6469 = !DILocation(line: 383, column: 2, scope: !6443)
!6470 = distinct !DISubprogram(name: "cable_state_show", scope: !3, file: !3, line: 387, type: !3638, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6471 = !DILocalVariable(name: "dev", arg: 1, scope: !6470, file: !3, line: 387, type: !3135)
!6472 = !DILocation(line: 387, column: 48, scope: !6470)
!6473 = !DILocalVariable(name: "attr", arg: 2, scope: !6470, file: !3, line: 388, type: !3640)
!6474 = !DILocation(line: 388, column: 30, scope: !6470)
!6475 = !DILocalVariable(name: "buf", arg: 3, scope: !6470, file: !3, line: 388, type: !104)
!6476 = !DILocation(line: 388, column: 42, scope: !6470)
!6477 = !DILocalVariable(name: "cable", scope: !6470, file: !3, line: 390, type: !3626)
!6478 = !DILocation(line: 390, column: 23, scope: !6470)
!6479 = !DILocalVariable(name: "__mptr", scope: !6480, file: !3, line: 390, type: !109)
!6480 = distinct !DILexicalBlock(scope: !6470, file: !3, line: 390, column: 31)
!6481 = !DILocation(line: 390, column: 31, scope: !6480)
!6482 = !DILocation(line: 390, column: 31, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6480, file: !3, line: 390, column: 31)
!6484 = !DILocalVariable(name: "i", scope: !6470, file: !3, line: 393, type: !174)
!6485 = !DILocation(line: 393, column: 6, scope: !6470)
!6486 = !DILocation(line: 393, column: 10, scope: !6470)
!6487 = !DILocation(line: 393, column: 17, scope: !6470)
!6488 = !DILocation(line: 395, column: 17, scope: !6470)
!6489 = !DILocation(line: 396, column: 20, scope: !6470)
!6490 = !DILocation(line: 396, column: 27, scope: !6470)
!6491 = !DILocation(line: 396, column: 33, scope: !6470)
!6492 = !DILocation(line: 396, column: 40, scope: !6470)
!6493 = !DILocation(line: 396, column: 46, scope: !6470)
!6494 = !DILocation(line: 396, column: 62, scope: !6470)
!6495 = !DILocation(line: 396, column: 3, scope: !6470)
!6496 = !DILocation(line: 395, column: 9, scope: !6470)
!6497 = !DILocation(line: 395, column: 2, scope: !6470)
!6498 = distinct !DISubprogram(name: "dummy_sysfs_dev_release", scope: !3, file: !3, line: 1026, type: !3158, scopeLine: 1027, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6499 = !DILocalVariable(name: "dev", arg: 1, scope: !6498, file: !3, line: 1026, type: !3135)
!6500 = !DILocation(line: 1026, column: 52, scope: !6498)
!6501 = !DILocation(line: 1028, column: 1, scope: !6498)
!6502 = distinct !DISubprogram(name: "devm_kcalloc", scope: !60, file: !60, line: 229, type: !6503, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6503 = !DISubroutineType(types: !6504)
!6504 = !{!109, !3135, !236, !236, !106}
!6505 = !DILocalVariable(name: "dev", arg: 1, scope: !6502, file: !60, line: 229, type: !3135)
!6506 = !DILocation(line: 229, column: 49, scope: !6502)
!6507 = !DILocalVariable(name: "n", arg: 2, scope: !6502, file: !60, line: 230, type: !236)
!6508 = !DILocation(line: 230, column: 13, scope: !6502)
!6509 = !DILocalVariable(name: "size", arg: 3, scope: !6502, file: !60, line: 230, type: !236)
!6510 = !DILocation(line: 230, column: 23, scope: !6502)
!6511 = !DILocalVariable(name: "flags", arg: 4, scope: !6502, file: !60, line: 230, type: !106)
!6512 = !DILocation(line: 230, column: 35, scope: !6502)
!6513 = !DILocation(line: 232, column: 28, scope: !6502)
!6514 = !DILocation(line: 232, column: 33, scope: !6502)
!6515 = !DILocation(line: 232, column: 36, scope: !6502)
!6516 = !DILocation(line: 232, column: 42, scope: !6502)
!6517 = !DILocation(line: 232, column: 48, scope: !6502)
!6518 = !DILocation(line: 232, column: 9, scope: !6502)
!6519 = !DILocation(line: 232, column: 2, scope: !6502)
!6520 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !60, file: !60, line: 660, type: !6521, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6521 = !DISubroutineType(types: !6522)
!6522 = !{null, !3135, !109}
!6523 = !DILocalVariable(name: "dev", arg: 1, scope: !6520, file: !60, line: 660, type: !3135)
!6524 = !DILocation(line: 660, column: 51, scope: !6520)
!6525 = !DILocalVariable(name: "data", arg: 2, scope: !6520, file: !60, line: 660, type: !109)
!6526 = !DILocation(line: 660, column: 62, scope: !6520)
!6527 = !DILocation(line: 662, column: 21, scope: !6520)
!6528 = !DILocation(line: 662, column: 2, scope: !6520)
!6529 = !DILocation(line: 662, column: 7, scope: !6520)
!6530 = !DILocation(line: 662, column: 19, scope: !6520)
!6531 = !DILocation(line: 663, column: 1, scope: !6520)
!6532 = distinct !DISubprogram(name: "list_add", scope: !6533, file: !6533, line: 84, type: !6534, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6533 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!6534 = !DISubroutineType(types: !6535)
!6535 = !{null, !138, !138}
!6536 = !DILocalVariable(name: "new", arg: 1, scope: !6532, file: !6533, line: 84, type: !138)
!6537 = !DILocation(line: 84, column: 47, scope: !6532)
!6538 = !DILocalVariable(name: "head", arg: 2, scope: !6532, file: !6533, line: 84, type: !138)
!6539 = !DILocation(line: 84, column: 70, scope: !6532)
!6540 = !DILocation(line: 86, column: 13, scope: !6532)
!6541 = !DILocation(line: 86, column: 18, scope: !6532)
!6542 = !DILocation(line: 86, column: 24, scope: !6532)
!6543 = !DILocation(line: 86, column: 30, scope: !6532)
!6544 = !DILocation(line: 86, column: 2, scope: !6532)
!6545 = !DILocation(line: 87, column: 1, scope: !6532)
!6546 = distinct !DISubprogram(name: "extcon_dev_unregister", scope: !3, file: !3, line: 1289, type: !5759, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6547 = !DILocalVariable(name: "edev", arg: 1, scope: !6546, file: !3, line: 1289, type: !110)
!6548 = !DILocation(line: 1289, column: 47, scope: !6546)
!6549 = !DILocalVariable(name: "index", scope: !6546, file: !3, line: 1291, type: !174)
!6550 = !DILocation(line: 1291, column: 6, scope: !6546)
!6551 = !DILocation(line: 1293, column: 7, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 1293, column: 6)
!6553 = !DILocation(line: 1293, column: 6, scope: !6546)
!6554 = !DILocation(line: 1294, column: 3, scope: !6552)
!6555 = !DILocation(line: 1296, column: 2, scope: !6546)
!6556 = !DILocation(line: 1297, column: 12, scope: !6546)
!6557 = !DILocation(line: 1297, column: 18, scope: !6546)
!6558 = !DILocation(line: 1297, column: 2, scope: !6546)
!6559 = !DILocation(line: 1298, column: 2, scope: !6546)
!6560 = !DILocation(line: 1300, column: 33, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 1300, column: 6)
!6562 = !DILocation(line: 1300, column: 39, scope: !6561)
!6563 = !DILocation(line: 1300, column: 21, scope: !6561)
!6564 = !DILocation(line: 1300, column: 6, scope: !6561)
!6565 = !DILocation(line: 1300, column: 6, scope: !6546)
!6566 = !DILocation(line: 1301, column: 3, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6561, file: !3, line: 1300, column: 46)
!6568 = !DILocation(line: 1303, column: 3, scope: !6567)
!6569 = !DILocation(line: 1306, column: 21, scope: !6546)
!6570 = !DILocation(line: 1306, column: 27, scope: !6546)
!6571 = !DILocation(line: 1306, column: 2, scope: !6546)
!6572 = !DILocation(line: 1308, column: 6, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 1308, column: 6)
!6574 = !DILocation(line: 1308, column: 12, scope: !6573)
!6575 = !DILocation(line: 1308, column: 31, scope: !6573)
!6576 = !DILocation(line: 1308, column: 34, scope: !6573)
!6577 = !DILocation(line: 1308, column: 40, scope: !6573)
!6578 = !DILocation(line: 1308, column: 6, scope: !6546)
!6579 = !DILocation(line: 1309, column: 14, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 1309, column: 3)
!6581 = distinct !DILexicalBlock(scope: !6573, file: !3, line: 1308, column: 55)
!6582 = !DILocation(line: 1309, column: 8, scope: !6580)
!6583 = !DILocation(line: 1309, column: 19, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 1309, column: 3)
!6585 = !DILocation(line: 1309, column: 25, scope: !6584)
!6586 = !DILocation(line: 1309, column: 44, scope: !6584)
!6587 = !DILocation(line: 1309, column: 3, scope: !6580)
!6588 = !DILocation(line: 1311, column: 10, scope: !6584)
!6589 = !DILocation(line: 1311, column: 16, scope: !6584)
!6590 = !DILocation(line: 1311, column: 29, scope: !6584)
!6591 = !DILocation(line: 1311, column: 36, scope: !6584)
!6592 = !DILocation(line: 1311, column: 41, scope: !6584)
!6593 = !DILocation(line: 1311, column: 4, scope: !6584)
!6594 = !DILocation(line: 1310, column: 10, scope: !6584)
!6595 = !DILocation(line: 1309, column: 3, scope: !6584)
!6596 = distinct !{!6596, !6587, !6597}
!6597 = !DILocation(line: 1311, column: 45, scope: !6580)
!6598 = !DILocation(line: 1312, column: 9, scope: !6581)
!6599 = !DILocation(line: 1312, column: 15, scope: !6581)
!6600 = !DILocation(line: 1312, column: 3, scope: !6581)
!6601 = !DILocation(line: 1313, column: 9, scope: !6581)
!6602 = !DILocation(line: 1313, column: 15, scope: !6581)
!6603 = !DILocation(line: 1313, column: 3, scope: !6581)
!6604 = !DILocation(line: 1314, column: 2, scope: !6581)
!6605 = !DILocation(line: 1316, column: 13, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 1316, column: 2)
!6607 = !DILocation(line: 1316, column: 7, scope: !6606)
!6608 = !DILocation(line: 1316, column: 18, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6606, file: !3, line: 1316, column: 2)
!6610 = !DILocation(line: 1316, column: 26, scope: !6609)
!6611 = !DILocation(line: 1316, column: 32, scope: !6609)
!6612 = !DILocation(line: 1316, column: 24, scope: !6609)
!6613 = !DILocation(line: 1316, column: 2, scope: !6606)
!6614 = !DILocation(line: 1317, column: 9, scope: !6609)
!6615 = !DILocation(line: 1317, column: 15, scope: !6609)
!6616 = !DILocation(line: 1317, column: 22, scope: !6609)
!6617 = !DILocation(line: 1317, column: 29, scope: !6609)
!6618 = !DILocation(line: 1317, column: 36, scope: !6609)
!6619 = !DILocation(line: 1317, column: 3, scope: !6609)
!6620 = !DILocation(line: 1316, column: 52, scope: !6609)
!6621 = !DILocation(line: 1316, column: 2, scope: !6609)
!6622 = distinct !{!6622, !6613, !6623}
!6623 = !DILocation(line: 1317, column: 40, scope: !6606)
!6624 = !DILocation(line: 1319, column: 6, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 1319, column: 6)
!6626 = !DILocation(line: 1319, column: 12, scope: !6625)
!6627 = !DILocation(line: 1319, column: 6, scope: !6546)
!6628 = !DILocation(line: 1320, column: 9, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 1319, column: 27)
!6630 = !DILocation(line: 1320, column: 15, scope: !6629)
!6631 = !DILocation(line: 1320, column: 31, scope: !6629)
!6632 = !DILocation(line: 1320, column: 3, scope: !6629)
!6633 = !DILocation(line: 1321, column: 9, scope: !6629)
!6634 = !DILocation(line: 1321, column: 15, scope: !6629)
!6635 = !DILocation(line: 1321, column: 3, scope: !6629)
!6636 = !DILocation(line: 1322, column: 2, scope: !6629)
!6637 = !DILocation(line: 1324, column: 14, scope: !6546)
!6638 = !DILocation(line: 1324, column: 20, scope: !6546)
!6639 = !DILocation(line: 1324, column: 2, scope: !6546)
!6640 = !DILocation(line: 1325, column: 1, scope: !6546)
!6641 = distinct !DISubprogram(name: "list_del", scope: !6533, file: !6533, line: 144, type: !6642, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6642 = !DISubroutineType(types: !6643)
!6643 = !{null, !138}
!6644 = !DILocalVariable(name: "entry", arg: 1, scope: !6641, file: !6533, line: 144, type: !138)
!6645 = !DILocation(line: 144, column: 47, scope: !6641)
!6646 = !DILocation(line: 146, column: 19, scope: !6641)
!6647 = !DILocation(line: 146, column: 2, scope: !6641)
!6648 = !DILocation(line: 147, column: 2, scope: !6641)
!6649 = !DILocation(line: 147, column: 9, scope: !6641)
!6650 = !DILocation(line: 147, column: 14, scope: !6641)
!6651 = !DILocation(line: 148, column: 2, scope: !6641)
!6652 = !DILocation(line: 148, column: 9, scope: !6641)
!6653 = !DILocation(line: 148, column: 14, scope: !6641)
!6654 = !DILocation(line: 149, column: 1, scope: !6641)
!6655 = distinct !DISubprogram(name: "extcon_find_edev_by_node", scope: !3, file: !3, line: 1336, type: !6656, scopeLine: 1337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6656 = !DISubroutineType(types: !6657)
!6657 = !{!110, !3440}
!6658 = !DILocalVariable(name: "node", arg: 1, scope: !6655, file: !3, line: 1336, type: !3440)
!6659 = !DILocation(line: 1336, column: 65, scope: !6655)
!6660 = !DILocalVariable(name: "edev", scope: !6655, file: !3, line: 1338, type: !110)
!6661 = !DILocation(line: 1338, column: 21, scope: !6655)
!6662 = !DILocation(line: 1340, column: 2, scope: !6655)
!6663 = !DILocalVariable(name: "__mptr", scope: !6664, file: !3, line: 1341, type: !109)
!6664 = distinct !DILexicalBlock(scope: !6665, file: !3, line: 1341, column: 2)
!6665 = distinct !DILexicalBlock(scope: !6655, file: !3, line: 1341, column: 2)
!6666 = !DILocation(line: 1341, column: 2, scope: !6664)
!6667 = !DILocation(line: 1341, column: 2, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6664, file: !3, line: 1341, column: 2)
!6669 = !DILocation(line: 1341, column: 2, scope: !6665)
!6670 = !DILocation(line: 1341, column: 2, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6665, file: !3, line: 1341, column: 2)
!6672 = !DILocation(line: 1342, column: 7, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6671, file: !3, line: 1342, column: 7)
!6674 = !DILocation(line: 1342, column: 13, scope: !6673)
!6675 = !DILocation(line: 1342, column: 17, scope: !6673)
!6676 = !DILocation(line: 1342, column: 24, scope: !6673)
!6677 = !DILocation(line: 1342, column: 27, scope: !6673)
!6678 = !DILocation(line: 1342, column: 33, scope: !6673)
!6679 = !DILocation(line: 1342, column: 37, scope: !6673)
!6680 = !DILocation(line: 1342, column: 45, scope: !6673)
!6681 = !DILocation(line: 1342, column: 56, scope: !6673)
!6682 = !DILocation(line: 1342, column: 53, scope: !6673)
!6683 = !DILocation(line: 1342, column: 7, scope: !6671)
!6684 = !DILocation(line: 1343, column: 4, scope: !6673)
!6685 = !DILocalVariable(name: "__mptr", scope: !6686, file: !3, line: 1341, type: !109)
!6686 = distinct !DILexicalBlock(scope: !6671, file: !3, line: 1341, column: 2)
!6687 = !DILocation(line: 1341, column: 2, scope: !6686)
!6688 = !DILocation(line: 1341, column: 2, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 1341, column: 2)
!6690 = distinct !{!6690, !6669, !6691}
!6691 = !DILocation(line: 1343, column: 9, scope: !6665)
!6692 = !DILocation(line: 1344, column: 9, scope: !6655)
!6693 = !DILocation(line: 1344, column: 7, scope: !6655)
!6694 = !DILocation(line: 1344, column: 2, scope: !6655)
!6695 = !DILabel(scope: !6655, name: "out", file: !3, line: 1345)
!6696 = !DILocation(line: 1345, column: 1, scope: !6655)
!6697 = !DILocation(line: 1346, column: 2, scope: !6655)
!6698 = !DILocation(line: 1348, column: 9, scope: !6655)
!6699 = !DILocation(line: 1348, column: 2, scope: !6655)
!6700 = distinct !DISubprogram(name: "extcon_get_edev_by_phandle", scope: !3, file: !3, line: 1358, type: !6701, scopeLine: 1359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6701 = !DISubroutineType(types: !6702)
!6702 = !{!110, !3135, !174}
!6703 = !DILocalVariable(name: "dev", arg: 1, scope: !6700, file: !3, line: 1358, type: !3135)
!6704 = !DILocation(line: 1358, column: 62, scope: !6700)
!6705 = !DILocalVariable(name: "index", arg: 2, scope: !6700, file: !3, line: 1358, type: !174)
!6706 = !DILocation(line: 1358, column: 71, scope: !6700)
!6707 = !DILocalVariable(name: "node", scope: !6700, file: !3, line: 1360, type: !3440)
!6708 = !DILocation(line: 1360, column: 22, scope: !6700)
!6709 = !DILocalVariable(name: "edev", scope: !6700, file: !3, line: 1361, type: !110)
!6710 = !DILocation(line: 1361, column: 21, scope: !6700)
!6711 = !DILocation(line: 1363, column: 7, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6700, file: !3, line: 1363, column: 6)
!6713 = !DILocation(line: 1363, column: 6, scope: !6700)
!6714 = !DILocation(line: 1364, column: 10, scope: !6712)
!6715 = !DILocation(line: 1364, column: 3, scope: !6712)
!6716 = !DILocation(line: 1366, column: 7, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6700, file: !3, line: 1366, column: 6)
!6718 = !DILocation(line: 1366, column: 12, scope: !6717)
!6719 = !DILocation(line: 1366, column: 6, scope: !6700)
!6720 = !DILocation(line: 1368, column: 10, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6717, file: !3, line: 1366, column: 21)
!6722 = !DILocation(line: 1368, column: 3, scope: !6721)
!6723 = !DILocation(line: 1371, column: 26, scope: !6700)
!6724 = !DILocation(line: 1371, column: 31, scope: !6700)
!6725 = !DILocation(line: 1371, column: 50, scope: !6700)
!6726 = !DILocation(line: 1371, column: 9, scope: !6700)
!6727 = !DILocation(line: 1371, column: 7, scope: !6700)
!6728 = !DILocation(line: 1372, column: 7, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6700, file: !3, line: 1372, column: 6)
!6730 = !DILocation(line: 1372, column: 6, scope: !6700)
!6731 = !DILocation(line: 1375, column: 10, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 1372, column: 13)
!6733 = !DILocation(line: 1375, column: 3, scope: !6732)
!6734 = !DILocation(line: 1378, column: 34, scope: !6700)
!6735 = !DILocation(line: 1378, column: 9, scope: !6700)
!6736 = !DILocation(line: 1378, column: 7, scope: !6700)
!6737 = !DILocation(line: 1379, column: 14, scope: !6700)
!6738 = !DILocation(line: 1379, column: 2, scope: !6700)
!6739 = !DILocation(line: 1381, column: 9, scope: !6700)
!6740 = !DILocation(line: 1381, column: 2, scope: !6700)
!6741 = !DILocation(line: 1382, column: 1, scope: !6700)
!6742 = distinct !DISubprogram(name: "of_node_put", scope: !3442, file: !3442, line: 129, type: !6743, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6743 = !DISubroutineType(types: !6744)
!6744 = !{null, !3440}
!6745 = !DILocalVariable(name: "node", arg: 1, scope: !6742, file: !3442, line: 129, type: !3440)
!6746 = !DILocation(line: 129, column: 52, scope: !6742)
!6747 = !DILocation(line: 129, column: 60, scope: !6742)
!6748 = distinct !DISubprogram(name: "extcon_get_edev_name", scope: !3, file: !3, line: 1405, type: !6749, scopeLine: 1406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6749 = !DISubroutineType(types: !6750)
!6750 = !{!115, !110}
!6751 = !DILocalVariable(name: "edev", arg: 1, scope: !6748, file: !3, line: 1405, type: !110)
!6752 = !DILocation(line: 1405, column: 53, scope: !6748)
!6753 = !DILocation(line: 1407, column: 10, scope: !6748)
!6754 = !DILocation(line: 1407, column: 9, scope: !6748)
!6755 = !DILocation(line: 1407, column: 24, scope: !6748)
!6756 = !DILocation(line: 1407, column: 30, scope: !6748)
!6757 = !DILocation(line: 1407, column: 2, scope: !6748)
!6758 = distinct !DISubprogram(name: "extcon_class_init", scope: !3, file: !3, line: 1411, type: !3722, scopeLine: 1412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6759 = !DILocation(line: 1413, column: 9, scope: !6758)
!6760 = !DILocation(line: 1413, column: 2, scope: !6758)
!6761 = distinct !DISubprogram(name: "extcon_class_exit", scope: !3, file: !3, line: 1417, type: !1713, scopeLine: 1418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6762 = !DILocation(line: 1419, column: 16, scope: !6761)
!6763 = !DILocation(line: 1419, column: 2, scope: !6761)
!6764 = !DILocation(line: 1420, column: 1, scope: !6761)
!6765 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !4033, file: !4033, line: 646, type: !4034, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6766 = !DILocalVariable(name: "__ret", scope: !6767, file: !4033, line: 648, type: !108)
!6767 = distinct !DILexicalBlock(scope: !6765, file: !4033, line: 648, column: 9)
!6768 = !DILocation(line: 648, column: 9, scope: !6767)
!6769 = !DILocalVariable(name: "__edi", scope: !6767, file: !4033, line: 648, type: !108)
!6770 = !DILocalVariable(name: "__esi", scope: !6767, file: !4033, line: 648, type: !108)
!6771 = !DILocalVariable(name: "__edx", scope: !6767, file: !4033, line: 648, type: !108)
!6772 = !DILocalVariable(name: "__ecx", scope: !6767, file: !4033, line: 648, type: !108)
!6773 = !DILocalVariable(name: "__eax", scope: !6767, file: !4033, line: 648, type: !108)
!6774 = !DILocation(line: 648, column: 9, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6776, file: !4033, line: 648, column: 9)
!6776 = distinct !DILexicalBlock(scope: !6767, file: !4033, line: 648, column: 9)
!6777 = !{i32 -2145754993, i32 -2145752678, i32 -2145752444, i32 -2145752393, i32 -2145752365, i32 -2145752340, i32 -2145752656, i32 -2145752643, i32 -2145752205, i32 -2145752086, i32 -2145752551, i32 -2145752524, i32 -2145752496, i32 -2145752466}
!6778 = !DILocalVariable(name: "__mask", scope: !6779, file: !4033, line: 648, type: !108)
!6779 = distinct !DILexicalBlock(scope: !6775, file: !4033, line: 648, column: 9)
!6780 = !DILocation(line: 648, column: 9, scope: !6779)
!6781 = !DILocation(line: 648, column: 9, scope: !6776)
!6782 = !DILocation(line: 648, column: 2, scope: !6765)
!6783 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !4033, file: !4033, line: 656, type: !1713, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6784 = !DILocalVariable(name: "__edi", scope: !6785, file: !4033, line: 658, type: !108)
!6785 = distinct !DILexicalBlock(scope: !6783, file: !4033, line: 658, column: 2)
!6786 = !DILocation(line: 658, column: 2, scope: !6785)
!6787 = !DILocalVariable(name: "__esi", scope: !6785, file: !4033, line: 658, type: !108)
!6788 = !DILocalVariable(name: "__edx", scope: !6785, file: !4033, line: 658, type: !108)
!6789 = !DILocalVariable(name: "__ecx", scope: !6785, file: !4033, line: 658, type: !108)
!6790 = !DILocalVariable(name: "__eax", scope: !6785, file: !4033, line: 658, type: !108)
!6791 = !{i32 -2145747899, i32 -2145747167, i32 -2145746933, i32 -2145746882, i32 -2145746854, i32 -2145746829, i32 -2145747145, i32 -2145747132, i32 -2145746694, i32 -2145746575, i32 -2145747040, i32 -2145747013, i32 -2145746985, i32 -2145746955}
!6792 = !DILocation(line: 659, column: 1, scope: !6783)
!6793 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !4033, file: !4033, line: 651, type: !6794, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6794 = !DISubroutineType(types: !6795)
!6795 = !{null, !108}
!6796 = !DILocalVariable(name: "f", arg: 1, scope: !6793, file: !4033, line: 651, type: !108)
!6797 = !DILocation(line: 651, column: 65, scope: !6793)
!6798 = !DILocalVariable(name: "__edi", scope: !6799, file: !4033, line: 653, type: !108)
!6799 = distinct !DILexicalBlock(scope: !6793, file: !4033, line: 653, column: 2)
!6800 = !DILocation(line: 653, column: 2, scope: !6799)
!6801 = !DILocalVariable(name: "__esi", scope: !6799, file: !4033, line: 653, type: !108)
!6802 = !DILocalVariable(name: "__edx", scope: !6799, file: !4033, line: 653, type: !108)
!6803 = !DILocalVariable(name: "__ecx", scope: !6799, file: !4033, line: 653, type: !108)
!6804 = !DILocalVariable(name: "__eax", scope: !6799, file: !4033, line: 653, type: !108)
!6805 = !{i32 -2145750526, i32 -2145749776, i32 -2145749542, i32 -2145749491, i32 -2145749463, i32 -2145749438, i32 -2145749754, i32 -2145749741, i32 -2145749303, i32 -2145749184, i32 -2145749649, i32 -2145749622, i32 -2145749594, i32 -2145749564}
!6806 = !DILocation(line: 654, column: 1, scope: !6793)
!6807 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !60, file: !60, line: 655, type: !6808, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6808 = !DISubroutineType(types: !6809)
!6809 = !{!109, !3477}
!6810 = !DILocalVariable(name: "dev", arg: 1, scope: !6807, file: !60, line: 655, type: !3477)
!6811 = !DILocation(line: 655, column: 58, scope: !6807)
!6812 = !DILocation(line: 657, column: 9, scope: !6807)
!6813 = !DILocation(line: 657, column: 14, scope: !6807)
!6814 = !DILocation(line: 657, column: 2, scope: !6807)
!6815 = distinct !DISubprogram(name: "test_bit", scope: !5078, file: !5078, line: 132, type: !6816, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6816 = !DISubroutineType(types: !6817)
!6817 = !{!400, !224, !6818}
!6818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6819, size: 64)
!6819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5082)
!6820 = !DILocalVariable(name: "nr", arg: 1, scope: !6821, file: !5085, line: 210, type: !224)
!6821 = distinct !DISubprogram(name: "variable_test_bit", scope: !5085, file: !5085, line: 210, type: !6816, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6822 = !DILocation(line: 210, column: 52, scope: !6821, inlinedAt: !6823)
!6823 = distinct !DILocation(line: 135, column: 9, scope: !6815)
!6824 = !DILocalVariable(name: "addr", arg: 2, scope: !6821, file: !5085, line: 210, type: !6818)
!6825 = !DILocation(line: 210, column: 86, scope: !6821, inlinedAt: !6823)
!6826 = !DILocalVariable(name: "oldbit", scope: !6821, file: !5085, line: 212, type: !400)
!6827 = !DILocation(line: 212, column: 7, scope: !6821, inlinedAt: !6823)
!6828 = !DILocalVariable(name: "nr", arg: 1, scope: !6829, file: !5085, line: 204, type: !224)
!6829 = distinct !DISubprogram(name: "constant_test_bit", scope: !5085, file: !5085, line: 204, type: !6816, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6830 = !DILocation(line: 204, column: 52, scope: !6829, inlinedAt: !6831)
!6831 = distinct !DILocation(line: 135, column: 9, scope: !6815)
!6832 = !DILocalVariable(name: "addr", arg: 2, scope: !6829, file: !5085, line: 204, type: !6818)
!6833 = !DILocation(line: 204, column: 86, scope: !6829, inlinedAt: !6831)
!6834 = !DILocalVariable(name: "v", arg: 1, scope: !6835, file: !5092, line: 69, type: !5095)
!6835 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !5092, file: !5092, line: 69, type: !5093, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6836 = !DILocation(line: 69, column: 73, scope: !6835, inlinedAt: !6837)
!6837 = distinct !DILocation(line: 134, column: 2, scope: !6815)
!6838 = !DILocalVariable(name: "size", arg: 2, scope: !6835, file: !5092, line: 69, type: !236)
!6839 = !DILocation(line: 69, column: 83, scope: !6835, inlinedAt: !6837)
!6840 = !DILocalVariable(name: "nr", arg: 1, scope: !6815, file: !5078, line: 132, type: !224)
!6841 = !DILocation(line: 132, column: 34, scope: !6815)
!6842 = !DILocalVariable(name: "addr", arg: 2, scope: !6815, file: !5078, line: 132, type: !6818)
!6843 = !DILocation(line: 132, column: 68, scope: !6815)
!6844 = !DILocation(line: 134, column: 25, scope: !6815)
!6845 = !DILocation(line: 134, column: 32, scope: !6815)
!6846 = !DILocation(line: 134, column: 30, scope: !6815)
!6847 = !DILocation(line: 71, column: 19, scope: !6835, inlinedAt: !6837)
!6848 = !DILocation(line: 71, column: 22, scope: !6835, inlinedAt: !6837)
!6849 = !DILocation(line: 71, column: 2, scope: !6835, inlinedAt: !6837)
!6850 = !DILocation(line: 72, column: 2, scope: !6835, inlinedAt: !6837)
!6851 = !DILocation(line: 135, column: 9, scope: !6815)
!6852 = !DILocation(line: 206, column: 19, scope: !6829, inlinedAt: !6831)
!6853 = !DILocation(line: 206, column: 22, scope: !6829, inlinedAt: !6831)
!6854 = !DILocation(line: 206, column: 15, scope: !6829, inlinedAt: !6831)
!6855 = !DILocation(line: 207, column: 4, scope: !6829, inlinedAt: !6831)
!6856 = !DILocation(line: 207, column: 9, scope: !6829, inlinedAt: !6831)
!6857 = !DILocation(line: 207, column: 12, scope: !6829, inlinedAt: !6831)
!6858 = !DILocation(line: 206, column: 44, scope: !6829, inlinedAt: !6831)
!6859 = !DILocation(line: 207, column: 37, scope: !6829, inlinedAt: !6831)
!6860 = !DILocation(line: 217, column: 33, scope: !6821, inlinedAt: !6823)
!6861 = !DILocation(line: 217, column: 46, scope: !6821, inlinedAt: !6823)
!6862 = !DILocation(line: 214, column: 2, scope: !6821, inlinedAt: !6823)
!6863 = !{i32 -2147110007, i32 -2147109947}
!6864 = !DILocation(line: 219, column: 9, scope: !6821, inlinedAt: !6823)
!6865 = !DILocation(line: 135, column: 2, scope: !6815)
!6866 = distinct !DISubprogram(name: "kasan_check_read", scope: !6867, file: !6867, line: 34, type: !6868, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6867 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!6868 = !DISubroutineType(types: !6869)
!6869 = !{!400, !5095, !7}
!6870 = !DILocalVariable(name: "p", arg: 1, scope: !6866, file: !6867, line: 34, type: !5095)
!6871 = !DILocation(line: 34, column: 58, scope: !6866)
!6872 = !DILocalVariable(name: "size", arg: 2, scope: !6866, file: !6867, line: 34, type: !7)
!6873 = !DILocation(line: 34, column: 74, scope: !6866)
!6874 = !DILocation(line: 36, column: 2, scope: !6866)
!6875 = distinct !DISubprogram(name: "kcsan_check_access", scope: !6876, file: !6876, line: 178, type: !6877, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6876 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!6877 = !DISubroutineType(types: !6878)
!6878 = !{null, !5095, !236, !174}
!6879 = !DILocalVariable(name: "ptr", arg: 1, scope: !6875, file: !6876, line: 178, type: !5095)
!6880 = !DILocation(line: 178, column: 60, scope: !6875)
!6881 = !DILocalVariable(name: "size", arg: 2, scope: !6875, file: !6876, line: 178, type: !236)
!6882 = !DILocation(line: 178, column: 72, scope: !6875)
!6883 = !DILocalVariable(name: "type", arg: 3, scope: !6875, file: !6876, line: 179, type: !174)
!6884 = !DILocation(line: 179, column: 15, scope: !6875)
!6885 = !DILocation(line: 179, column: 23, scope: !6875)
!6886 = distinct !DISubprogram(name: "kasan_check_write", scope: !6867, file: !6867, line: 38, type: !6868, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6887 = !DILocalVariable(name: "p", arg: 1, scope: !6886, file: !6867, line: 38, type: !5095)
!6888 = !DILocation(line: 38, column: 59, scope: !6886)
!6889 = !DILocalVariable(name: "size", arg: 2, scope: !6886, file: !6867, line: 38, type: !7)
!6890 = !DILocation(line: 38, column: 75, scope: !6886)
!6891 = !DILocation(line: 40, column: 2, scope: !6886)
!6892 = distinct !DISubprogram(name: "get_order", scope: !6893, file: !6893, line: 29, type: !6894, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6893 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!6894 = !DISubroutineType(types: !6895)
!6895 = !{!174, !108}
!6896 = !DILocalVariable(name: "x", arg: 1, scope: !6897, file: !5085, line: 366, type: !332)
!6897 = distinct !DISubprogram(name: "fls64", scope: !5085, file: !5085, line: 366, type: !6898, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6898 = !DISubroutineType(types: !6899)
!6899 = !{!174, !332}
!6900 = !DILocation(line: 366, column: 40, scope: !6897, inlinedAt: !6901)
!6901 = distinct !DILocation(line: 46, column: 9, scope: !6892)
!6902 = !DILocalVariable(name: "bitpos", scope: !6897, file: !5085, line: 368, type: !174)
!6903 = !DILocation(line: 368, column: 6, scope: !6897, inlinedAt: !6901)
!6904 = !DILocalVariable(name: "size", arg: 1, scope: !6892, file: !6893, line: 29, type: !108)
!6905 = !DILocation(line: 29, column: 63, scope: !6892)
!6906 = !DILocation(line: 31, column: 27, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6892, file: !6893, line: 31, column: 6)
!6908 = !DILocation(line: 31, column: 6, scope: !6907)
!6909 = !DILocation(line: 31, column: 6, scope: !6892)
!6910 = !DILocation(line: 32, column: 8, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6912, file: !6893, line: 32, column: 7)
!6912 = distinct !DILexicalBlock(scope: !6907, file: !6893, line: 31, column: 34)
!6913 = !DILocation(line: 32, column: 7, scope: !6912)
!6914 = !DILocation(line: 33, column: 4, scope: !6911)
!6915 = !DILocation(line: 35, column: 7, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6912, file: !6893, line: 35, column: 7)
!6917 = !DILocation(line: 35, column: 12, scope: !6916)
!6918 = !DILocation(line: 35, column: 7, scope: !6912)
!6919 = !DILocation(line: 36, column: 4, scope: !6916)
!6920 = !DILocation(line: 38, column: 10, scope: !6912)
!6921 = !DILocation(line: 38, column: 28, scope: !6912)
!6922 = !DILocation(line: 38, column: 41, scope: !6912)
!6923 = !DILocation(line: 38, column: 3, scope: !6912)
!6924 = !DILocation(line: 41, column: 6, scope: !6892)
!6925 = !DILocation(line: 42, column: 7, scope: !6892)
!6926 = !DILocation(line: 46, column: 15, scope: !6892)
!6927 = !DILocation(line: 374, column: 2, scope: !6897, inlinedAt: !6901)
!6928 = !DILocation(line: 376, column: 14, scope: !6897, inlinedAt: !6901)
!6929 = !{i32 332966}
!6930 = !DILocation(line: 377, column: 9, scope: !6897, inlinedAt: !6901)
!6931 = !DILocation(line: 377, column: 16, scope: !6897, inlinedAt: !6901)
!6932 = !DILocation(line: 46, column: 2, scope: !6892)
!6933 = !DILocation(line: 48, column: 1, scope: !6892)
!6934 = distinct !DISubprogram(name: "__ilog2_u64", scope: !6935, file: !6935, line: 30, type: !6936, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6935 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!6936 = !DISubroutineType(types: !6937)
!6937 = !{!174, !331}
!6938 = !DILocation(line: 366, column: 40, scope: !6897, inlinedAt: !6939)
!6939 = distinct !DILocation(line: 32, column: 9, scope: !6934)
!6940 = !DILocation(line: 368, column: 6, scope: !6897, inlinedAt: !6939)
!6941 = !DILocalVariable(name: "n", arg: 1, scope: !6934, file: !6935, line: 30, type: !331)
!6942 = !DILocation(line: 30, column: 21, scope: !6934)
!6943 = !DILocation(line: 32, column: 15, scope: !6934)
!6944 = !DILocation(line: 374, column: 2, scope: !6897, inlinedAt: !6939)
!6945 = !DILocation(line: 376, column: 14, scope: !6897, inlinedAt: !6939)
!6946 = !DILocation(line: 377, column: 9, scope: !6897, inlinedAt: !6939)
!6947 = !DILocation(line: 377, column: 16, scope: !6897, inlinedAt: !6939)
!6948 = !DILocation(line: 32, column: 18, scope: !6934)
!6949 = !DILocation(line: 32, column: 2, scope: !6934)
!6950 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !6951, file: !6951, line: 137, type: !6952, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6951 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!6952 = !DISubroutineType(types: !6953)
!6953 = !{!109, !848, !2966, !236, !106}
!6954 = !DILocalVariable(name: "s", arg: 1, scope: !6950, file: !6951, line: 137, type: !848)
!6955 = !DILocation(line: 137, column: 54, scope: !6950)
!6956 = !DILocalVariable(name: "object", arg: 2, scope: !6950, file: !6951, line: 137, type: !2966)
!6957 = !DILocation(line: 137, column: 69, scope: !6950)
!6958 = !DILocalVariable(name: "size", arg: 3, scope: !6950, file: !6951, line: 138, type: !236)
!6959 = !DILocation(line: 138, column: 12, scope: !6950)
!6960 = !DILocalVariable(name: "flags", arg: 4, scope: !6950, file: !6951, line: 138, type: !106)
!6961 = !DILocation(line: 138, column: 24, scope: !6950)
!6962 = !DILocation(line: 140, column: 17, scope: !6950)
!6963 = !DILocation(line: 140, column: 2, scope: !6950)
!6964 = distinct !DISubprogram(name: "IS_ERR", scope: !5167, file: !5167, line: 34, type: !6420, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6965 = !DILocalVariable(name: "ptr", arg: 1, scope: !6964, file: !5167, line: 34, type: !2966)
!6966 = !DILocation(line: 34, column: 60, scope: !6964)
!6967 = !DILocation(line: 36, column: 9, scope: !6964)
!6968 = !DILocation(line: 36, column: 2, scope: !6964)
!6969 = distinct !DISubprogram(name: "PTR_ERR", scope: !5167, file: !5167, line: 29, type: !6970, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6970 = !DISubroutineType(types: !6971)
!6971 = !{!224, !2966}
!6972 = !DILocalVariable(name: "ptr", arg: 1, scope: !6969, file: !5167, line: 29, type: !2966)
!6973 = !DILocation(line: 29, column: 61, scope: !6969)
!6974 = !DILocation(line: 31, column: 16, scope: !6969)
!6975 = !DILocation(line: 31, column: 9, scope: !6969)
!6976 = !DILocation(line: 31, column: 2, scope: !6969)
!6977 = distinct !DISubprogram(name: "kobject_name", scope: !81, file: !81, line: 88, type: !6978, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6978 = !DISubroutineType(types: !6979)
!6979 = !{!115, !6980}
!6980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6981, size: 64)
!6981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !131)
!6982 = !DILocalVariable(name: "kobj", arg: 1, scope: !6977, file: !81, line: 88, type: !6980)
!6983 = !DILocation(line: 88, column: 62, scope: !6977)
!6984 = !DILocation(line: 90, column: 9, scope: !6977)
!6985 = !DILocation(line: 90, column: 15, scope: !6977)
!6986 = !DILocation(line: 90, column: 2, scope: !6977)
!6987 = distinct !DISubprogram(name: "kmalloc_array", scope: !97, file: !97, line: 584, type: !6429, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!6988 = !DILocation(line: 445, column: 72, scope: !5490, inlinedAt: !6989)
!6989 = distinct !DILocation(line: 552, column: 10, scope: !5495, inlinedAt: !6990)
!6990 = distinct !DILocation(line: 591, column: 10, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6987, file: !97, line: 590, column: 6)
!6992 = !DILocation(line: 446, column: 9, scope: !5490, inlinedAt: !6989)
!6993 = !DILocation(line: 446, column: 23, scope: !5490, inlinedAt: !6989)
!6994 = !DILocation(line: 448, column: 8, scope: !5490, inlinedAt: !6989)
!6995 = !DILocation(line: 318, column: 67, scope: !5506, inlinedAt: !6996)
!6996 = distinct !DILocation(line: 553, column: 20, scope: !5495, inlinedAt: !6990)
!6997 = !DILocation(line: 346, column: 58, scope: !5512, inlinedAt: !6998)
!6998 = distinct !DILocation(line: 547, column: 11, scope: !5495, inlinedAt: !6990)
!6999 = !DILocation(line: 472, column: 28, scope: !5518, inlinedAt: !7000)
!7000 = distinct !DILocation(line: 481, column: 9, scope: !5523, inlinedAt: !7001)
!7001 = distinct !DILocation(line: 545, column: 11, scope: !5525, inlinedAt: !6990)
!7002 = !DILocation(line: 472, column: 40, scope: !5518, inlinedAt: !7000)
!7003 = !DILocation(line: 472, column: 60, scope: !5518, inlinedAt: !7000)
!7004 = !DILocation(line: 478, column: 51, scope: !5523, inlinedAt: !7001)
!7005 = !DILocation(line: 478, column: 63, scope: !5523, inlinedAt: !7001)
!7006 = !DILocation(line: 480, column: 15, scope: !5523, inlinedAt: !7001)
!7007 = !DILocation(line: 538, column: 45, scope: !5497, inlinedAt: !6990)
!7008 = !DILocation(line: 538, column: 57, scope: !5497, inlinedAt: !6990)
!7009 = !DILocation(line: 542, column: 16, scope: !5495, inlinedAt: !6990)
!7010 = !DILocalVariable(name: "n", arg: 1, scope: !6987, file: !97, line: 584, type: !236)
!7011 = !DILocation(line: 584, column: 42, scope: !6987)
!7012 = !DILocalVariable(name: "size", arg: 2, scope: !6987, file: !97, line: 584, type: !236)
!7013 = !DILocation(line: 584, column: 52, scope: !6987)
!7014 = !DILocalVariable(name: "flags", arg: 3, scope: !6987, file: !97, line: 584, type: !106)
!7015 = !DILocation(line: 584, column: 64, scope: !6987)
!7016 = !DILocalVariable(name: "bytes", scope: !6987, file: !97, line: 586, type: !236)
!7017 = !DILocation(line: 586, column: 9, scope: !6987)
!7018 = !DILocalVariable(name: "__a", scope: !7019, file: !97, line: 588, type: !236)
!7019 = distinct !DILexicalBlock(scope: !7020, file: !97, line: 588, column: 6)
!7020 = distinct !DILexicalBlock(scope: !6987, file: !97, line: 588, column: 6)
!7021 = !DILocation(line: 588, column: 6, scope: !7019)
!7022 = !DILocalVariable(name: "__b", scope: !7019, file: !97, line: 588, type: !236)
!7023 = !DILocalVariable(name: "__d", scope: !7019, file: !97, line: 588, type: !7024)
!7024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64)
!7025 = !DILocation(line: 588, column: 6, scope: !7020)
!7026 = !DILocation(line: 588, column: 6, scope: !6987)
!7027 = !DILocation(line: 589, column: 3, scope: !7020)
!7028 = !DILocation(line: 590, column: 27, scope: !6991)
!7029 = !DILocation(line: 590, column: 6, scope: !6991)
!7030 = !DILocation(line: 590, column: 30, scope: !6991)
!7031 = !DILocation(line: 590, column: 54, scope: !6991)
!7032 = !DILocation(line: 590, column: 33, scope: !6991)
!7033 = !DILocation(line: 590, column: 6, scope: !6987)
!7034 = !DILocation(line: 591, column: 18, scope: !6991)
!7035 = !DILocation(line: 591, column: 25, scope: !6991)
!7036 = !DILocation(line: 540, column: 27, scope: !5496, inlinedAt: !6990)
!7037 = !DILocation(line: 540, column: 6, scope: !5496, inlinedAt: !6990)
!7038 = !DILocation(line: 540, column: 6, scope: !5497, inlinedAt: !6990)
!7039 = !DILocation(line: 544, column: 7, scope: !5525, inlinedAt: !6990)
!7040 = !DILocation(line: 544, column: 12, scope: !5525, inlinedAt: !6990)
!7041 = !DILocation(line: 544, column: 7, scope: !5495, inlinedAt: !6990)
!7042 = !DILocation(line: 545, column: 25, scope: !5525, inlinedAt: !6990)
!7043 = !DILocation(line: 545, column: 31, scope: !5525, inlinedAt: !6990)
!7044 = !DILocation(line: 480, column: 33, scope: !5523, inlinedAt: !7001)
!7045 = !DILocation(line: 480, column: 23, scope: !5523, inlinedAt: !7001)
!7046 = !DILocation(line: 481, column: 29, scope: !5523, inlinedAt: !7001)
!7047 = !DILocation(line: 481, column: 35, scope: !5523, inlinedAt: !7001)
!7048 = !DILocation(line: 481, column: 42, scope: !5523, inlinedAt: !7001)
!7049 = !DILocation(line: 474, column: 23, scope: !5518, inlinedAt: !7000)
!7050 = !DILocation(line: 474, column: 29, scope: !5518, inlinedAt: !7000)
!7051 = !DILocation(line: 474, column: 36, scope: !5518, inlinedAt: !7000)
!7052 = !DILocation(line: 474, column: 9, scope: !5518, inlinedAt: !7000)
!7053 = !DILocation(line: 545, column: 4, scope: !5525, inlinedAt: !6990)
!7054 = !DILocation(line: 547, column: 25, scope: !5495, inlinedAt: !6990)
!7055 = !DILocation(line: 348, column: 7, scope: !5569, inlinedAt: !6998)
!7056 = !DILocation(line: 348, column: 6, scope: !5512, inlinedAt: !6998)
!7057 = !DILocation(line: 349, column: 3, scope: !5569, inlinedAt: !6998)
!7058 = !DILocation(line: 351, column: 6, scope: !5573, inlinedAt: !6998)
!7059 = !DILocation(line: 351, column: 11, scope: !5573, inlinedAt: !6998)
!7060 = !DILocation(line: 351, column: 6, scope: !5512, inlinedAt: !6998)
!7061 = !DILocation(line: 352, column: 3, scope: !5573, inlinedAt: !6998)
!7062 = !DILocation(line: 354, column: 32, scope: !5578, inlinedAt: !6998)
!7063 = !DILocation(line: 354, column: 37, scope: !5578, inlinedAt: !6998)
!7064 = !DILocation(line: 354, column: 42, scope: !5578, inlinedAt: !6998)
!7065 = !DILocation(line: 354, column: 45, scope: !5578, inlinedAt: !6998)
!7066 = !DILocation(line: 354, column: 50, scope: !5578, inlinedAt: !6998)
!7067 = !DILocation(line: 354, column: 6, scope: !5512, inlinedAt: !6998)
!7068 = !DILocation(line: 355, column: 3, scope: !5578, inlinedAt: !6998)
!7069 = !DILocation(line: 356, column: 32, scope: !5586, inlinedAt: !6998)
!7070 = !DILocation(line: 356, column: 37, scope: !5586, inlinedAt: !6998)
!7071 = !DILocation(line: 356, column: 43, scope: !5586, inlinedAt: !6998)
!7072 = !DILocation(line: 356, column: 46, scope: !5586, inlinedAt: !6998)
!7073 = !DILocation(line: 356, column: 51, scope: !5586, inlinedAt: !6998)
!7074 = !DILocation(line: 356, column: 6, scope: !5512, inlinedAt: !6998)
!7075 = !DILocation(line: 357, column: 3, scope: !5586, inlinedAt: !6998)
!7076 = !DILocation(line: 358, column: 6, scope: !5594, inlinedAt: !6998)
!7077 = !DILocation(line: 358, column: 11, scope: !5594, inlinedAt: !6998)
!7078 = !DILocation(line: 358, column: 6, scope: !5512, inlinedAt: !6998)
!7079 = !DILocation(line: 358, column: 26, scope: !5594, inlinedAt: !6998)
!7080 = !DILocation(line: 359, column: 6, scope: !5599, inlinedAt: !6998)
!7081 = !DILocation(line: 359, column: 11, scope: !5599, inlinedAt: !6998)
!7082 = !DILocation(line: 359, column: 6, scope: !5512, inlinedAt: !6998)
!7083 = !DILocation(line: 359, column: 26, scope: !5599, inlinedAt: !6998)
!7084 = !DILocation(line: 360, column: 6, scope: !5604, inlinedAt: !6998)
!7085 = !DILocation(line: 360, column: 11, scope: !5604, inlinedAt: !6998)
!7086 = !DILocation(line: 360, column: 6, scope: !5512, inlinedAt: !6998)
!7087 = !DILocation(line: 360, column: 26, scope: !5604, inlinedAt: !6998)
!7088 = !DILocation(line: 361, column: 6, scope: !5609, inlinedAt: !6998)
!7089 = !DILocation(line: 361, column: 11, scope: !5609, inlinedAt: !6998)
!7090 = !DILocation(line: 361, column: 6, scope: !5512, inlinedAt: !6998)
!7091 = !DILocation(line: 361, column: 26, scope: !5609, inlinedAt: !6998)
!7092 = !DILocation(line: 362, column: 6, scope: !5614, inlinedAt: !6998)
!7093 = !DILocation(line: 362, column: 11, scope: !5614, inlinedAt: !6998)
!7094 = !DILocation(line: 362, column: 6, scope: !5512, inlinedAt: !6998)
!7095 = !DILocation(line: 362, column: 26, scope: !5614, inlinedAt: !6998)
!7096 = !DILocation(line: 363, column: 6, scope: !5619, inlinedAt: !6998)
!7097 = !DILocation(line: 363, column: 11, scope: !5619, inlinedAt: !6998)
!7098 = !DILocation(line: 363, column: 6, scope: !5512, inlinedAt: !6998)
!7099 = !DILocation(line: 363, column: 26, scope: !5619, inlinedAt: !6998)
!7100 = !DILocation(line: 364, column: 6, scope: !5624, inlinedAt: !6998)
!7101 = !DILocation(line: 364, column: 11, scope: !5624, inlinedAt: !6998)
!7102 = !DILocation(line: 364, column: 6, scope: !5512, inlinedAt: !6998)
!7103 = !DILocation(line: 364, column: 26, scope: !5624, inlinedAt: !6998)
!7104 = !DILocation(line: 365, column: 6, scope: !5629, inlinedAt: !6998)
!7105 = !DILocation(line: 365, column: 11, scope: !5629, inlinedAt: !6998)
!7106 = !DILocation(line: 365, column: 6, scope: !5512, inlinedAt: !6998)
!7107 = !DILocation(line: 365, column: 26, scope: !5629, inlinedAt: !6998)
!7108 = !DILocation(line: 366, column: 6, scope: !5634, inlinedAt: !6998)
!7109 = !DILocation(line: 366, column: 11, scope: !5634, inlinedAt: !6998)
!7110 = !DILocation(line: 366, column: 6, scope: !5512, inlinedAt: !6998)
!7111 = !DILocation(line: 366, column: 26, scope: !5634, inlinedAt: !6998)
!7112 = !DILocation(line: 367, column: 6, scope: !5639, inlinedAt: !6998)
!7113 = !DILocation(line: 367, column: 11, scope: !5639, inlinedAt: !6998)
!7114 = !DILocation(line: 367, column: 6, scope: !5512, inlinedAt: !6998)
!7115 = !DILocation(line: 367, column: 26, scope: !5639, inlinedAt: !6998)
!7116 = !DILocation(line: 368, column: 6, scope: !5644, inlinedAt: !6998)
!7117 = !DILocation(line: 368, column: 11, scope: !5644, inlinedAt: !6998)
!7118 = !DILocation(line: 368, column: 6, scope: !5512, inlinedAt: !6998)
!7119 = !DILocation(line: 368, column: 26, scope: !5644, inlinedAt: !6998)
!7120 = !DILocation(line: 369, column: 6, scope: !5649, inlinedAt: !6998)
!7121 = !DILocation(line: 369, column: 11, scope: !5649, inlinedAt: !6998)
!7122 = !DILocation(line: 369, column: 6, scope: !5512, inlinedAt: !6998)
!7123 = !DILocation(line: 369, column: 26, scope: !5649, inlinedAt: !6998)
!7124 = !DILocation(line: 370, column: 6, scope: !5654, inlinedAt: !6998)
!7125 = !DILocation(line: 370, column: 11, scope: !5654, inlinedAt: !6998)
!7126 = !DILocation(line: 370, column: 6, scope: !5512, inlinedAt: !6998)
!7127 = !DILocation(line: 370, column: 26, scope: !5654, inlinedAt: !6998)
!7128 = !DILocation(line: 371, column: 6, scope: !5659, inlinedAt: !6998)
!7129 = !DILocation(line: 371, column: 11, scope: !5659, inlinedAt: !6998)
!7130 = !DILocation(line: 371, column: 6, scope: !5512, inlinedAt: !6998)
!7131 = !DILocation(line: 371, column: 26, scope: !5659, inlinedAt: !6998)
!7132 = !DILocation(line: 372, column: 6, scope: !5664, inlinedAt: !6998)
!7133 = !DILocation(line: 372, column: 11, scope: !5664, inlinedAt: !6998)
!7134 = !DILocation(line: 372, column: 6, scope: !5512, inlinedAt: !6998)
!7135 = !DILocation(line: 372, column: 26, scope: !5664, inlinedAt: !6998)
!7136 = !DILocation(line: 373, column: 6, scope: !5669, inlinedAt: !6998)
!7137 = !DILocation(line: 373, column: 11, scope: !5669, inlinedAt: !6998)
!7138 = !DILocation(line: 373, column: 6, scope: !5512, inlinedAt: !6998)
!7139 = !DILocation(line: 373, column: 26, scope: !5669, inlinedAt: !6998)
!7140 = !DILocation(line: 374, column: 6, scope: !5674, inlinedAt: !6998)
!7141 = !DILocation(line: 374, column: 11, scope: !5674, inlinedAt: !6998)
!7142 = !DILocation(line: 374, column: 6, scope: !5512, inlinedAt: !6998)
!7143 = !DILocation(line: 374, column: 26, scope: !5674, inlinedAt: !6998)
!7144 = !DILocation(line: 375, column: 6, scope: !5679, inlinedAt: !6998)
!7145 = !DILocation(line: 375, column: 11, scope: !5679, inlinedAt: !6998)
!7146 = !DILocation(line: 375, column: 6, scope: !5512, inlinedAt: !6998)
!7147 = !DILocation(line: 375, column: 27, scope: !5679, inlinedAt: !6998)
!7148 = !DILocation(line: 376, column: 6, scope: !5684, inlinedAt: !6998)
!7149 = !DILocation(line: 376, column: 11, scope: !5684, inlinedAt: !6998)
!7150 = !DILocation(line: 376, column: 6, scope: !5512, inlinedAt: !6998)
!7151 = !DILocation(line: 376, column: 32, scope: !5684, inlinedAt: !6998)
!7152 = !DILocation(line: 377, column: 6, scope: !5689, inlinedAt: !6998)
!7153 = !DILocation(line: 377, column: 11, scope: !5689, inlinedAt: !6998)
!7154 = !DILocation(line: 377, column: 6, scope: !5512, inlinedAt: !6998)
!7155 = !DILocation(line: 377, column: 32, scope: !5689, inlinedAt: !6998)
!7156 = !DILocation(line: 378, column: 6, scope: !5694, inlinedAt: !6998)
!7157 = !DILocation(line: 378, column: 11, scope: !5694, inlinedAt: !6998)
!7158 = !DILocation(line: 378, column: 6, scope: !5512, inlinedAt: !6998)
!7159 = !DILocation(line: 378, column: 32, scope: !5694, inlinedAt: !6998)
!7160 = !DILocation(line: 379, column: 6, scope: !5699, inlinedAt: !6998)
!7161 = !DILocation(line: 379, column: 11, scope: !5699, inlinedAt: !6998)
!7162 = !DILocation(line: 379, column: 6, scope: !5512, inlinedAt: !6998)
!7163 = !DILocation(line: 379, column: 33, scope: !5699, inlinedAt: !6998)
!7164 = !DILocation(line: 380, column: 6, scope: !5704, inlinedAt: !6998)
!7165 = !DILocation(line: 380, column: 11, scope: !5704, inlinedAt: !6998)
!7166 = !DILocation(line: 380, column: 6, scope: !5512, inlinedAt: !6998)
!7167 = !DILocation(line: 380, column: 33, scope: !5704, inlinedAt: !6998)
!7168 = !DILocation(line: 381, column: 6, scope: !5709, inlinedAt: !6998)
!7169 = !DILocation(line: 381, column: 11, scope: !5709, inlinedAt: !6998)
!7170 = !DILocation(line: 381, column: 6, scope: !5512, inlinedAt: !6998)
!7171 = !DILocation(line: 381, column: 33, scope: !5709, inlinedAt: !6998)
!7172 = !DILocation(line: 382, column: 2, scope: !5714, inlinedAt: !6998)
!7173 = !DILocation(line: 382, column: 2, scope: !5718, inlinedAt: !6998)
!7174 = !DILocation(line: 382, column: 2, scope: !5719, inlinedAt: !6998)
!7175 = !DILocation(line: 386, column: 1, scope: !5512, inlinedAt: !6998)
!7176 = !DILocation(line: 547, column: 9, scope: !5495, inlinedAt: !6990)
!7177 = !DILocation(line: 549, column: 8, scope: !5725, inlinedAt: !6990)
!7178 = !DILocation(line: 549, column: 7, scope: !5495, inlinedAt: !6990)
!7179 = !DILocation(line: 550, column: 4, scope: !5725, inlinedAt: !6990)
!7180 = !DILocation(line: 553, column: 33, scope: !5495, inlinedAt: !6990)
!7181 = !DILocation(line: 325, column: 6, scope: !5730, inlinedAt: !6996)
!7182 = !DILocation(line: 325, column: 6, scope: !5506, inlinedAt: !6996)
!7183 = !DILocation(line: 326, column: 3, scope: !5730, inlinedAt: !6996)
!7184 = !DILocation(line: 332, column: 9, scope: !5506, inlinedAt: !6996)
!7185 = !DILocation(line: 332, column: 15, scope: !5506, inlinedAt: !6996)
!7186 = !DILocation(line: 332, column: 2, scope: !5506, inlinedAt: !6996)
!7187 = !DILocation(line: 336, column: 1, scope: !5506, inlinedAt: !6996)
!7188 = !DILocation(line: 553, column: 5, scope: !5495, inlinedAt: !6990)
!7189 = !DILocation(line: 553, column: 41, scope: !5495, inlinedAt: !6990)
!7190 = !DILocation(line: 554, column: 5, scope: !5495, inlinedAt: !6990)
!7191 = !DILocation(line: 554, column: 12, scope: !5495, inlinedAt: !6990)
!7192 = !DILocation(line: 448, column: 31, scope: !5490, inlinedAt: !6989)
!7193 = !DILocation(line: 448, column: 34, scope: !5490, inlinedAt: !6989)
!7194 = !DILocation(line: 448, column: 14, scope: !5490, inlinedAt: !6989)
!7195 = !DILocation(line: 450, column: 22, scope: !5490, inlinedAt: !6989)
!7196 = !DILocation(line: 450, column: 25, scope: !5490, inlinedAt: !6989)
!7197 = !DILocation(line: 450, column: 30, scope: !5490, inlinedAt: !6989)
!7198 = !DILocation(line: 450, column: 36, scope: !5490, inlinedAt: !6989)
!7199 = !DILocation(line: 450, column: 8, scope: !5490, inlinedAt: !6989)
!7200 = !DILocation(line: 450, column: 6, scope: !5490, inlinedAt: !6989)
!7201 = !DILocation(line: 451, column: 9, scope: !5490, inlinedAt: !6989)
!7202 = !DILocation(line: 552, column: 3, scope: !5495, inlinedAt: !6990)
!7203 = !DILocation(line: 557, column: 19, scope: !5497, inlinedAt: !6990)
!7204 = !DILocation(line: 557, column: 25, scope: !5497, inlinedAt: !6990)
!7205 = !DILocation(line: 557, column: 9, scope: !5497, inlinedAt: !6990)
!7206 = !DILocation(line: 557, column: 2, scope: !5497, inlinedAt: !6990)
!7207 = !DILocation(line: 558, column: 1, scope: !5497, inlinedAt: !6990)
!7208 = !DILocation(line: 591, column: 3, scope: !6991)
!7209 = !DILocation(line: 592, column: 19, scope: !6987)
!7210 = !DILocation(line: 592, column: 26, scope: !6987)
!7211 = !DILocation(line: 592, column: 9, scope: !6987)
!7212 = !DILocation(line: 592, column: 2, scope: !6987)
!7213 = !DILocation(line: 593, column: 1, scope: !6987)
!7214 = distinct !DISubprogram(name: "__must_check_overflow", scope: !7215, file: !7215, line: 52, type: !7216, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!7215 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!7216 = !DISubroutineType(types: !7217)
!7217 = !{!400, !400}
!7218 = !DILocalVariable(name: "overflow", arg: 1, scope: !7214, file: !7215, line: 52, type: !400)
!7219 = !DILocation(line: 52, column: 60, scope: !7214)
!7220 = !DILocation(line: 54, column: 9, scope: !7214)
!7221 = !DILocation(line: 54, column: 2, scope: !7214)
!7222 = distinct !DISubprogram(name: "devm_kmalloc_array", scope: !60, file: !60, line: 219, type: !6503, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!7223 = !DILocalVariable(name: "dev", arg: 1, scope: !7222, file: !60, line: 219, type: !3135)
!7224 = !DILocation(line: 219, column: 55, scope: !7222)
!7225 = !DILocalVariable(name: "n", arg: 2, scope: !7222, file: !60, line: 220, type: !236)
!7226 = !DILocation(line: 220, column: 19, scope: !7222)
!7227 = !DILocalVariable(name: "size", arg: 3, scope: !7222, file: !60, line: 220, type: !236)
!7228 = !DILocation(line: 220, column: 29, scope: !7222)
!7229 = !DILocalVariable(name: "flags", arg: 4, scope: !7222, file: !60, line: 220, type: !106)
!7230 = !DILocation(line: 220, column: 41, scope: !7222)
!7231 = !DILocalVariable(name: "bytes", scope: !7222, file: !60, line: 222, type: !236)
!7232 = !DILocation(line: 222, column: 9, scope: !7222)
!7233 = !DILocalVariable(name: "__a", scope: !7234, file: !60, line: 224, type: !236)
!7234 = distinct !DILexicalBlock(scope: !7235, file: !60, line: 224, column: 6)
!7235 = distinct !DILexicalBlock(scope: !7222, file: !60, line: 224, column: 6)
!7236 = !DILocation(line: 224, column: 6, scope: !7234)
!7237 = !DILocalVariable(name: "__b", scope: !7234, file: !60, line: 224, type: !236)
!7238 = !DILocalVariable(name: "__d", scope: !7234, file: !60, line: 224, type: !7024)
!7239 = !DILocation(line: 224, column: 6, scope: !7235)
!7240 = !DILocation(line: 224, column: 6, scope: !7222)
!7241 = !DILocation(line: 225, column: 3, scope: !7235)
!7242 = !DILocation(line: 227, column: 22, scope: !7222)
!7243 = !DILocation(line: 227, column: 27, scope: !7222)
!7244 = !DILocation(line: 227, column: 34, scope: !7222)
!7245 = !DILocation(line: 227, column: 9, scope: !7222)
!7246 = !DILocation(line: 227, column: 2, scope: !7222)
!7247 = !DILocation(line: 228, column: 1, scope: !7222)
!7248 = distinct !DISubprogram(name: "__list_add", scope: !6533, file: !6533, line: 63, type: !7249, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!7249 = !DISubroutineType(types: !7250)
!7250 = !{null, !138, !138, !138}
!7251 = !DILocalVariable(name: "new", arg: 1, scope: !7248, file: !6533, line: 63, type: !138)
!7252 = !DILocation(line: 63, column: 49, scope: !7248)
!7253 = !DILocalVariable(name: "prev", arg: 2, scope: !7248, file: !6533, line: 64, type: !138)
!7254 = !DILocation(line: 64, column: 28, scope: !7248)
!7255 = !DILocalVariable(name: "next", arg: 3, scope: !7248, file: !6533, line: 65, type: !138)
!7256 = !DILocation(line: 65, column: 28, scope: !7248)
!7257 = !DILocation(line: 67, column: 24, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7248, file: !6533, line: 67, column: 6)
!7259 = !DILocation(line: 67, column: 29, scope: !7258)
!7260 = !DILocation(line: 67, column: 35, scope: !7258)
!7261 = !DILocation(line: 67, column: 7, scope: !7258)
!7262 = !DILocation(line: 67, column: 6, scope: !7248)
!7263 = !DILocation(line: 68, column: 3, scope: !7258)
!7264 = !DILocation(line: 70, column: 15, scope: !7248)
!7265 = !DILocation(line: 70, column: 2, scope: !7248)
!7266 = !DILocation(line: 70, column: 8, scope: !7248)
!7267 = !DILocation(line: 70, column: 13, scope: !7248)
!7268 = !DILocation(line: 71, column: 14, scope: !7248)
!7269 = !DILocation(line: 71, column: 2, scope: !7248)
!7270 = !DILocation(line: 71, column: 7, scope: !7248)
!7271 = !DILocation(line: 71, column: 12, scope: !7248)
!7272 = !DILocation(line: 72, column: 14, scope: !7248)
!7273 = !DILocation(line: 72, column: 2, scope: !7248)
!7274 = !DILocation(line: 72, column: 7, scope: !7248)
!7275 = !DILocation(line: 72, column: 12, scope: !7248)
!7276 = !DILocation(line: 73, column: 2, scope: !7248)
!7277 = !DILocation(line: 73, column: 2, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7248, file: !6533, line: 73, column: 2)
!7279 = !DILocation(line: 73, column: 2, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7278, file: !6533, line: 73, column: 2)
!7281 = !DILocation(line: 73, column: 2, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7278, file: !6533, line: 73, column: 2)
!7283 = !DILocation(line: 74, column: 1, scope: !7248)
!7284 = distinct !DISubprogram(name: "__list_add_valid", scope: !6533, file: !6533, line: 45, type: !7285, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!7285 = !DISubroutineType(types: !7286)
!7286 = !{!400, !138, !138, !138}
!7287 = !DILocalVariable(name: "new", arg: 1, scope: !7284, file: !6533, line: 45, type: !138)
!7288 = !DILocation(line: 45, column: 55, scope: !7284)
!7289 = !DILocalVariable(name: "prev", arg: 2, scope: !7284, file: !6533, line: 46, type: !138)
!7290 = !DILocation(line: 46, column: 23, scope: !7284)
!7291 = !DILocalVariable(name: "next", arg: 3, scope: !7284, file: !6533, line: 47, type: !138)
!7292 = !DILocation(line: 47, column: 23, scope: !7284)
!7293 = !DILocation(line: 49, column: 2, scope: !7284)
!7294 = distinct !DISubprogram(name: "__list_del_entry", scope: !6533, file: !6533, line: 130, type: !6642, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!7295 = !DILocalVariable(name: "entry", arg: 1, scope: !7294, file: !6533, line: 130, type: !138)
!7296 = !DILocation(line: 130, column: 55, scope: !7294)
!7297 = !DILocation(line: 132, column: 30, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7294, file: !6533, line: 132, column: 6)
!7299 = !DILocation(line: 132, column: 7, scope: !7298)
!7300 = !DILocation(line: 132, column: 6, scope: !7294)
!7301 = !DILocation(line: 133, column: 3, scope: !7298)
!7302 = !DILocation(line: 135, column: 13, scope: !7294)
!7303 = !DILocation(line: 135, column: 20, scope: !7294)
!7304 = !DILocation(line: 135, column: 26, scope: !7294)
!7305 = !DILocation(line: 135, column: 33, scope: !7294)
!7306 = !DILocation(line: 135, column: 2, scope: !7294)
!7307 = !DILocation(line: 136, column: 1, scope: !7294)
!7308 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !6533, file: !6533, line: 51, type: !7309, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!7309 = !DISubroutineType(types: !7310)
!7310 = !{!400, !138}
!7311 = !DILocalVariable(name: "entry", arg: 1, scope: !7308, file: !6533, line: 51, type: !138)
!7312 = !DILocation(line: 51, column: 61, scope: !7308)
!7313 = !DILocation(line: 53, column: 2, scope: !7308)
!7314 = distinct !DISubprogram(name: "__list_del", scope: !6533, file: !6533, line: 110, type: !6534, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !162)
!7315 = !DILocalVariable(name: "prev", arg: 1, scope: !7314, file: !6533, line: 110, type: !138)
!7316 = !DILocation(line: 110, column: 50, scope: !7314)
!7317 = !DILocalVariable(name: "next", arg: 2, scope: !7314, file: !6533, line: 110, type: !138)
!7318 = !DILocation(line: 110, column: 75, scope: !7314)
!7319 = !DILocation(line: 112, column: 15, scope: !7314)
!7320 = !DILocation(line: 112, column: 2, scope: !7314)
!7321 = !DILocation(line: 112, column: 8, scope: !7314)
!7322 = !DILocation(line: 112, column: 13, scope: !7314)
!7323 = !DILocation(line: 113, column: 2, scope: !7314)
!7324 = !DILocation(line: 113, column: 2, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7314, file: !6533, line: 113, column: 2)
!7326 = !DILocation(line: 113, column: 2, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7325, file: !6533, line: 113, column: 2)
!7328 = !DILocation(line: 113, column: 2, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7325, file: !6533, line: 113, column: 2)
!7330 = !DILocation(line: 114, column: 1, scope: !7314)
