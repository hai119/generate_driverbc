; ModuleID = '../bcout/drivers/of/base.llvm.bc'
source_filename = "drivers/of/base.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.lock_class_key = type {}
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.module = type opaque
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rb_root = type { %struct.rb_node* }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.wake_irq = type opaque
%struct.atomic_t = type { i32 }
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.attribute = type { i8*, i16 }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.61, %struct.list_head, %struct.list_head, %union.anon.62 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.59 }
%union.anon.59 = type { %struct.anon.60 }
%struct.anon.60 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type opaque
%struct.page = type { i64, %union.anon.2, %union.anon.51, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.51 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.52, i32 }
%union.anon.52 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.45, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.15, [0 x i64] }
%struct.anon.15 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.16, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.16 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.22, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.23, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.24, %union.anon.28, %struct.key_restriction* }
%union.anon.22 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.23 = type { i64 }
%union.anon.24 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.25, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.25 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.28 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.31, %union.anon.32, i32 }
%struct.request_queue = type opaque
%union.anon.31 = type { %struct.list_head }
%union.anon.32 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.33 }
%struct.anon.33 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.37 }
%struct.anon.37 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.44, i32, [12 x i8] }
%union.anon.44 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.45 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type opaque
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.46, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.49 }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { i64, i64 }
%union.anon.49 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.61 = type { %struct.list_head }
%union.anon.62 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.53, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.54, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.55, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.58, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.53 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.54 = type { %struct.callback_head }
%union.anon.55 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.58 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.56 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.56 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.30 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.30 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.63, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.63 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.pte_t = type { i64 }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.proc_dir_entry = type opaque
%struct.of_phandle_args = type { %struct.device_node*, i32, [16 x i32] }
%struct.of_phandle_iterator = type { i8*, i32, %struct.device_node*, i32*, i32*, i32*, i32, i32, %struct.device_node* }
%struct.alias_prop = type { %struct.list_head, i8*, %struct.device_node*, i32, [0 x i8] }

@aliases_lookup = dso_local global %struct.list_head { %struct.list_head* @aliases_lookup, %struct.list_head* @aliases_lookup }, align 8, !dbg !0
@of_mutex = dso_local global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @of_mutex to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @of_mutex to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !3596
@devtree_lock = dso_local global %struct.raw_spinlock undef, align 1, !dbg !3598
@.str = private unnamed_addr constant [15 x i8] c"#address-cells\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"#size-cells\00", align 1
@phandle_cache = internal global [128 x %struct.device_node*] zeroinitializer, align 16, !dbg !3632
@.str.2 = private unnamed_addr constant [11 x i8] c"devicetree\00", align 1
@firmware_kobj = external dso_local global %struct.kobject*, align 8
@of_kset = dso_local global %struct.kset* null, align 8, !dbg !3630
@.str.3 = private unnamed_addr constant [41 x i8] c"\013OF: failed to register existing nodes\0A\00", align 1
@of_root = dso_local global %struct.device_node* null, align 8, !dbg !3620
@.str.4 = private unnamed_addr constant [12 x i8] c"device-tree\00", align 1
@.str.5 = private unnamed_addr constant [30 x i8] c"/sys/firmware/devicetree/base\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"reg\00", align 1
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 8
@.str.7 = private unnamed_addr constant [14 x i8] c"power-domains\00", align 1
@.str.8 = private unnamed_addr constant [20 x i8] c"#power-domain-cells\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"domain-idle-states\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"cpu-idle-states\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"big-endian\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"/cpus\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"cpu\00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c"/:\00", align 1
@of_aliases = dso_local global %struct.device_node* null, align 8, !dbg !3624
@.str.16 = private unnamed_addr constant [11 x i8] c"compatible\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"%s %pOF\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"\01c%c%08x\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"\01c\0A\00", align 1
@.str.20 = private unnamed_addr constant [36 x i8] c"\013OF: %pOF: could not find phandle\0A\00", align 1
@.str.21 = private unnamed_addr constant [39 x i8] c"\013OF: %pOF: could not get %s for %pOF\0A\00", align 1
@.str.22 = private unnamed_addr constant [30 x i8] c"\013OF: %pOF: %s = %d found %d\0A\00", align 1
@.str.23 = private unnamed_addr constant [18 x i8] c"drivers/of/base.c\00", align 1
@of_parse_phandle_with_args_map.dummy_mask = internal constant [17 x i32] [i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1], align 16, !dbg !3600
@of_parse_phandle_with_args_map.dummy_pass = internal constant [17 x i32] zeroinitializer, align 16, !dbg !3618
@.str.24 = private unnamed_addr constant [10 x i8] c"#%s-cells\00", align 1
@.str.25 = private unnamed_addr constant [7 x i8] c"%s-map\00", align 1
@.str.26 = private unnamed_addr constant [12 x i8] c"%s-map-mask\00", align 1
@.str.27 = private unnamed_addr constant [17 x i8] c"%s-map-pass-thru\00", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"/aliases\00", align 1
@.str.29 = private unnamed_addr constant [8 x i8] c"/chosen\00", align 1
@of_chosen = dso_local global %struct.device_node* null, align 8, !dbg !3622
@.str.30 = private unnamed_addr constant [10 x i8] c"/chosen@0\00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c"stdout-path\00", align 1
@.str.32 = private unnamed_addr constant [18 x i8] c"linux,stdout-path\00", align 1
@of_stdout_options = internal global i8* null, align 8, !dbg !3628
@of_stdout = dso_local global %struct.device_node* null, align 8, !dbg !3626
@.str.33 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.34 = private unnamed_addr constant [8 x i8] c"phandle\00", align 1
@.str.35 = private unnamed_addr constant [14 x i8] c"linux,phandle\00", align 1
@.str.36 = private unnamed_addr constant [41 x i8] c"\014OF: %s: ID %d >= than bitmap field %d\0A\00", align 1
@__func__.of_alias_get_alias_list = private unnamed_addr constant [24 x i8] c"of_alias_get_alias_list\00", align 1
@console_set_on_cmdline = external dso_local global i32, align 4
@.str.37 = private unnamed_addr constant [9 x i8] c"l2-cache\00", align 1
@.str.38 = private unnamed_addr constant [17 x i8] c"next-level-cache\00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c"cache-level\00", align 1
@.str.40 = private unnamed_addr constant [38 x i8] c"\013OF: %pOF: Error: Bad %s length: %d\0A\00", align 1
@.str.41 = private unnamed_addr constant [76 x i8] c"\013OF: %pOF: Invalid %s translation - %s-mask (0x%x) ignores id-base (0x%x)\0A\00", align 1
@.str.42 = private unnamed_addr constant [51 x i8] c"\016OF: %pOF: no %s translation for id 0x%x on %pOF\0A\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.43 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"okay\00", align 1
@.str.45 = private unnamed_addr constant [3 x i8] c"ok\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"device_type\00", align 1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @of_node_name_eq(%struct.device_node* %np, i8* %name) #0 !dbg !3641 {
entry:
  %retval = alloca i1, align 1
  %np.addr = alloca %struct.device_node*, align 8
  %name.addr = alloca i8*, align 8
  %node_name = alloca i8*, align 8
  %len = alloca i64, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !3644, metadata !DIExpression()), !dbg !3645
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3646, metadata !DIExpression()), !dbg !3647
  call void @llvm.dbg.declare(metadata i8** %node_name, metadata !3648, metadata !DIExpression()), !dbg !3649
  call void @llvm.dbg.declare(metadata i64* %len, metadata !3650, metadata !DIExpression()), !dbg !3651
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !3652
  %tobool = icmp ne %struct.device_node* %0, null, !dbg !3652
  br i1 %tobool, label %if.end, label %if.then, !dbg !3654

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !3655
  br label %return, !dbg !3655

if.end:                                           ; preds = %entry
  %1 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !3656
  %full_name = getelementptr inbounds %struct.device_node, %struct.device_node* %1, i32 0, i32 2, !dbg !3657
  %2 = load i8*, i8** %full_name, align 8, !dbg !3657
  %call = call i8* @kbasename(i8* %2) #10, !dbg !3658
  store i8* %call, i8** %node_name, align 8, !dbg !3659
  %3 = load i8*, i8** %node_name, align 8, !dbg !3660
  %call1 = call i8* @strchrnul(i8* %3, i32 64) #10, !dbg !3661
  %4 = load i8*, i8** %node_name, align 8, !dbg !3662
  %sub.ptr.lhs.cast = ptrtoint i8* %call1 to i64, !dbg !3663
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !3663
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3663
  store i64 %sub.ptr.sub, i64* %len, align 8, !dbg !3664
  %5 = load i8*, i8** %name.addr, align 8, !dbg !3665
  %call2 = call i64 @strlen(i8* %5) #10, !dbg !3666
  %6 = load i64, i64* %len, align 8, !dbg !3667
  %cmp = icmp eq i64 %call2, %6, !dbg !3668
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3669

land.rhs:                                         ; preds = %if.end
  %7 = load i8*, i8** %node_name, align 8, !dbg !3670
  %8 = load i8*, i8** %name.addr, align 8, !dbg !3671
  %9 = load i64, i64* %len, align 8, !dbg !3672
  %call3 = call i32 @strncmp(i8* %7, i8* %8, i64 %9) #10, !dbg !3673
  %cmp4 = icmp eq i32 %call3, 0, !dbg !3674
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %10 = phi i1 [ false, %if.end ], [ %cmp4, %land.rhs ], !dbg !3675
  store i1 %10, i1* %retval, align 1, !dbg !3676
  br label %return, !dbg !3676

return:                                           ; preds = %land.end, %if.then
  %11 = load i1, i1* %retval, align 1, !dbg !3677
  ret i1 %11, !dbg !3677
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kbasename(i8* %path) #0 !dbg !3678 {
entry:
  %path.addr = alloca i8*, align 8
  %tail = alloca i8*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !3682, metadata !DIExpression()), !dbg !3683
  call void @llvm.dbg.declare(metadata i8** %tail, metadata !3684, metadata !DIExpression()), !dbg !3685
  %0 = load i8*, i8** %path.addr, align 8, !dbg !3686
  %call = call i8* @strrchr(i8* %0, i32 47) #10, !dbg !3687
  store i8* %call, i8** %tail, align 8, !dbg !3685
  %1 = load i8*, i8** %tail, align 8, !dbg !3688
  %tobool = icmp ne i8* %1, null, !dbg !3688
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3688

cond.true:                                        ; preds = %entry
  %2 = load i8*, i8** %tail, align 8, !dbg !3689
  %add.ptr = getelementptr i8, i8* %2, i64 1, !dbg !3690
  br label %cond.end, !dbg !3688

cond.false:                                       ; preds = %entry
  %3 = load i8*, i8** %path.addr, align 8, !dbg !3691
  br label %cond.end, !dbg !3688

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %3, %cond.false ], !dbg !3688
  ret i8* %cond, !dbg !3692
}

; Function Attrs: noredzone
declare dso_local i8* @strchrnul(i8*, i32) #2

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @strncmp(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @of_node_name_prefix(%struct.device_node* %np, i8* %prefix) #0 !dbg !3693 {
entry:
  %retval = alloca i1, align 1
  %np.addr = alloca %struct.device_node*, align 8
  %prefix.addr = alloca i8*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !3694, metadata !DIExpression()), !dbg !3695
  store i8* %prefix, i8** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !3696, metadata !DIExpression()), !dbg !3697
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !3698
  %tobool = icmp ne %struct.device_node* %0, null, !dbg !3698
  br i1 %tobool, label %if.end, label %if.then, !dbg !3700

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !3701
  br label %return, !dbg !3701

if.end:                                           ; preds = %entry
  %1 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !3702
  %full_name = getelementptr inbounds %struct.device_node, %struct.device_node* %1, i32 0, i32 2, !dbg !3703
  %2 = load i8*, i8** %full_name, align 8, !dbg !3703
  %call = call i8* @kbasename(i8* %2) #10, !dbg !3704
  %3 = load i8*, i8** %prefix.addr, align 8, !dbg !3705
  %4 = load i8*, i8** %prefix.addr, align 8, !dbg !3706
  %call1 = call i64 @strlen(i8* %4) #10, !dbg !3707
  %call2 = call i32 @strncmp(i8* %call, i8* %3, i64 %call1) #10, !dbg !3708
  %cmp = icmp eq i32 %call2, 0, !dbg !3709
  store i1 %cmp, i1* %retval, align 1, !dbg !3710
  br label %return, !dbg !3710

return:                                           ; preds = %if.end, %if.then
  %5 = load i1, i1* %retval, align 1, !dbg !3711
  ret i1 %5, !dbg !3711
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_bus_n_addr_cells(%struct.device_node* %np) #0 !dbg !3712 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %cells = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !3715, metadata !DIExpression()), !dbg !3716
  call void @llvm.dbg.declare(metadata i32* %cells, metadata !3717, metadata !DIExpression()), !dbg !3718
  br label %for.cond, !dbg !3719

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !3720
  %tobool = icmp ne %struct.device_node* %0, null, !dbg !3723
  br i1 %tobool, label %for.body, label %for.end, !dbg !3723

for.body:                                         ; preds = %for.cond
  %1 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !3724
  %call = call i32 @of_property_read_u32(%struct.device_node* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32* %cells) #10, !dbg !3726
  %tobool1 = icmp ne i32 %call, 0, !dbg !3726
  br i1 %tobool1, label %if.end, label %if.then, !dbg !3727

if.then:                                          ; preds = %for.body
  %2 = load i32, i32* %cells, align 4, !dbg !3728
  store i32 %2, i32* %retval, align 4, !dbg !3729
  br label %return, !dbg !3729

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3730

for.inc:                                          ; preds = %if.end
  %3 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !3731
  %parent = getelementptr inbounds %struct.device_node, %struct.device_node* %3, i32 0, i32 6, !dbg !3732
  %4 = load %struct.device_node*, %struct.device_node** %parent, align 8, !dbg !3732
  store %struct.device_node* %4, %struct.device_node** %np.addr, align 8, !dbg !3733
  br label %for.cond, !dbg !3734, !llvm.loop !3735

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !3737
  br label %return, !dbg !3737

return:                                           ; preds = %for.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !3738
  ret i32 %5, !dbg !3738
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_property_read_u32(%struct.device_node* %np, i8* %propname, i32* %out_value) #0 !dbg !3739 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %propname.addr = alloca i8*, align 8
  %out_value.addr = alloca i32*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !3742, metadata !DIExpression()), !dbg !3743
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !3744, metadata !DIExpression()), !dbg !3745
  store i32* %out_value, i32** %out_value.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %out_value.addr, metadata !3746, metadata !DIExpression()), !dbg !3747
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !3748
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !3749
  %2 = load i32*, i32** %out_value.addr, align 8, !dbg !3750
  %call = call i32 @of_property_read_u32_array(%struct.device_node* %0, i8* %1, i32* %2, i64 1) #10, !dbg !3751
  ret i32 %call, !dbg !3752
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_n_addr_cells(%struct.device_node* %np) #0 !dbg !3753 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !3754, metadata !DIExpression()), !dbg !3755
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !3756
  %parent = getelementptr inbounds %struct.device_node, %struct.device_node* %0, i32 0, i32 6, !dbg !3758
  %1 = load %struct.device_node*, %struct.device_node** %parent, align 8, !dbg !3758
  %tobool = icmp ne %struct.device_node* %1, null, !dbg !3756
  br i1 %tobool, label %if.then, label %if.end, !dbg !3759

if.then:                                          ; preds = %entry
  %2 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !3760
  %parent1 = getelementptr inbounds %struct.device_node, %struct.device_node* %2, i32 0, i32 6, !dbg !3761
  %3 = load %struct.device_node*, %struct.device_node** %parent1, align 8, !dbg !3761
  store %struct.device_node* %3, %struct.device_node** %np.addr, align 8, !dbg !3762
  br label %if.end, !dbg !3763

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !3764
  %call = call i32 @of_bus_n_addr_cells(%struct.device_node* %4) #10, !dbg !3765
  ret i32 %call, !dbg !3766
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_bus_n_size_cells(%struct.device_node* %np) #0 !dbg !3767 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %cells = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !3768, metadata !DIExpression()), !dbg !3769
  call void @llvm.dbg.declare(metadata i32* %cells, metadata !3770, metadata !DIExpression()), !dbg !3771
  br label %for.cond, !dbg !3772

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !3773
  %tobool = icmp ne %struct.device_node* %0, null, !dbg !3776
  br i1 %tobool, label %for.body, label %for.end, !dbg !3776

for.body:                                         ; preds = %for.cond
  %1 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !3777
  %call = call i32 @of_property_read_u32(%struct.device_node* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i32* %cells) #10, !dbg !3779
  %tobool1 = icmp ne i32 %call, 0, !dbg !3779
  br i1 %tobool1, label %if.end, label %if.then, !dbg !3780

if.then:                                          ; preds = %for.body
  %2 = load i32, i32* %cells, align 4, !dbg !3781
  store i32 %2, i32* %retval, align 4, !dbg !3782
  br label %return, !dbg !3782

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3783

for.inc:                                          ; preds = %if.end
  %3 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !3784
  %parent = getelementptr inbounds %struct.device_node, %struct.device_node* %3, i32 0, i32 6, !dbg !3785
  %4 = load %struct.device_node*, %struct.device_node** %parent, align 8, !dbg !3785
  store %struct.device_node* %4, %struct.device_node** %np.addr, align 8, !dbg !3786
  br label %for.cond, !dbg !3787, !llvm.loop !3788

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !3790
  br label %return, !dbg !3790

return:                                           ; preds = %for.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !3791
  ret i32 %5, !dbg !3791
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_n_size_cells(%struct.device_node* %np) #0 !dbg !3792 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !3793, metadata !DIExpression()), !dbg !3794
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !3795
  %parent = getelementptr inbounds %struct.device_node, %struct.device_node* %0, i32 0, i32 6, !dbg !3797
  %1 = load %struct.device_node*, %struct.device_node** %parent, align 8, !dbg !3797
  %tobool = icmp ne %struct.device_node* %1, null, !dbg !3795
  br i1 %tobool, label %if.then, label %if.end, !dbg !3798

if.then:                                          ; preds = %entry
  %2 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !3799
  %parent1 = getelementptr inbounds %struct.device_node, %struct.device_node* %2, i32 0, i32 6, !dbg !3800
  %3 = load %struct.device_node*, %struct.device_node** %parent1, align 8, !dbg !3800
  store %struct.device_node* %3, %struct.device_node** %np.addr, align 8, !dbg !3801
  br label %if.end, !dbg !3802

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !3803
  %call = call i32 @of_bus_n_size_cells(%struct.device_node* %4) #10, !dbg !3804
  ret i32 %call, !dbg !3805
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @__of_phandle_cache_inv_entry(i32 %handle) #0 !dbg !3806 {
entry:
  %handle.addr = alloca i32, align 4
  %handle_hash = alloca i32, align 4
  %np = alloca %struct.device_node*, align 8
  store i32 %handle, i32* %handle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %handle.addr, metadata !3809, metadata !DIExpression()), !dbg !3810
  call void @llvm.dbg.declare(metadata i32* %handle_hash, metadata !3811, metadata !DIExpression()), !dbg !3812
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !3813, metadata !DIExpression()), !dbg !3814
  %0 = load i32, i32* %handle.addr, align 4, !dbg !3815
  %tobool = icmp ne i32 %0, 0, !dbg !3815
  br i1 %tobool, label %if.end, label %if.then, !dbg !3817

if.then:                                          ; preds = %entry
  br label %if.end5, !dbg !3818

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %handle.addr, align 4, !dbg !3819
  %call = call i32 @of_phandle_cache_hash(i32 %1) #10, !dbg !3820
  store i32 %call, i32* %handle_hash, align 4, !dbg !3821
  %2 = load i32, i32* %handle_hash, align 4, !dbg !3822
  %idxprom = zext i32 %2 to i64, !dbg !3823
  %arrayidx = getelementptr [128 x %struct.device_node*], [128 x %struct.device_node*]* @phandle_cache, i64 0, i64 %idxprom, !dbg !3823
  %3 = load %struct.device_node*, %struct.device_node** %arrayidx, align 8, !dbg !3823
  store %struct.device_node* %3, %struct.device_node** %np, align 8, !dbg !3824
  %4 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !3825
  %tobool1 = icmp ne %struct.device_node* %4, null, !dbg !3825
  br i1 %tobool1, label %land.lhs.true, label %if.end5, !dbg !3827

land.lhs.true:                                    ; preds = %if.end
  %5 = load i32, i32* %handle.addr, align 4, !dbg !3828
  %6 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !3829
  %phandle = getelementptr inbounds %struct.device_node, %struct.device_node* %6, i32 0, i32 1, !dbg !3830
  %7 = load i32, i32* %phandle, align 8, !dbg !3830
  %cmp = icmp eq i32 %5, %7, !dbg !3831
  br i1 %cmp, label %if.then2, label %if.end5, !dbg !3832

if.then2:                                         ; preds = %land.lhs.true
  %8 = load i32, i32* %handle_hash, align 4, !dbg !3833
  %idxprom3 = zext i32 %8 to i64, !dbg !3834
  %arrayidx4 = getelementptr [128 x %struct.device_node*], [128 x %struct.device_node*]* @phandle_cache, i64 0, i64 %idxprom3, !dbg !3834
  store %struct.device_node* null, %struct.device_node** %arrayidx4, align 8, !dbg !3835
  br label %if.end5, !dbg !3834

if.end5:                                          ; preds = %if.then, %if.then2, %land.lhs.true, %if.end
  ret void, !dbg !3836
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_phandle_cache_hash(i32 %handle) #0 !dbg !3837 {
entry:
  %handle.addr = alloca i32, align 4
  store i32 %handle, i32* %handle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %handle.addr, metadata !3840, metadata !DIExpression()), !dbg !3841
  %0 = load i32, i32* %handle.addr, align 4, !dbg !3842
  %call = call i32 @hash_32_generic(i32 %0, i32 7) #10, !dbg !3843
  ret i32 %call, !dbg !3844
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local void @of_core_init() #3 section ".init.text" !dbg !3845 {
entry:
  %np = alloca %struct.device_node*, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !3846, metadata !DIExpression()), !dbg !3847
  call void @mutex_lock(%struct.mutex* @of_mutex) #10, !dbg !3848
  %0 = load %struct.kobject*, %struct.kobject** @firmware_kobj, align 8, !dbg !3849
  %call = call %struct.kset* @kset_create_and_add(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), %struct.kset_uevent_ops* null, %struct.kobject* %0) #10, !dbg !3850
  store %struct.kset* %call, %struct.kset** @of_kset, align 8, !dbg !3851
  %1 = load %struct.kset*, %struct.kset** @of_kset, align 8, !dbg !3852
  %tobool = icmp ne %struct.kset* %1, null, !dbg !3852
  br i1 %tobool, label %if.end, label %if.then, !dbg !3854

if.then:                                          ; preds = %entry
  call void @mutex_unlock(%struct.mutex* @of_mutex) #10, !dbg !3855
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0)) #11, !dbg !3857
  br label %if.end19, !dbg !3858

if.end:                                           ; preds = %entry
  %call2 = call %struct.device_node* @__of_find_all_nodes(%struct.device_node* null) #10, !dbg !3859
  store %struct.device_node* %call2, %struct.device_node** %np, align 8, !dbg !3859
  br label %for.cond, !dbg !3859

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !3861
  %tobool3 = icmp ne %struct.device_node* %2, null, !dbg !3859
  br i1 %tobool3, label %for.body, label %for.end, !dbg !3859

for.body:                                         ; preds = %for.cond
  %3 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !3863
  %call4 = call i32 @__of_attach_node_sysfs(%struct.device_node* %3) #10, !dbg !3865
  %4 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !3866
  %phandle = getelementptr inbounds %struct.device_node, %struct.device_node* %4, i32 0, i32 1, !dbg !3868
  %5 = load i32, i32* %phandle, align 8, !dbg !3868
  %tobool5 = icmp ne i32 %5, 0, !dbg !3866
  br i1 %tobool5, label %land.lhs.true, label %if.end14, !dbg !3869

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !3870
  %phandle6 = getelementptr inbounds %struct.device_node, %struct.device_node* %6, i32 0, i32 1, !dbg !3871
  %7 = load i32, i32* %phandle6, align 8, !dbg !3871
  %call7 = call i32 @of_phandle_cache_hash(i32 %7) #10, !dbg !3872
  %idxprom = zext i32 %call7 to i64, !dbg !3873
  %arrayidx = getelementptr [128 x %struct.device_node*], [128 x %struct.device_node*]* @phandle_cache, i64 0, i64 %idxprom, !dbg !3873
  %8 = load %struct.device_node*, %struct.device_node** %arrayidx, align 8, !dbg !3873
  %tobool8 = icmp ne %struct.device_node* %8, null, !dbg !3873
  br i1 %tobool8, label %if.end14, label %if.then9, !dbg !3874

if.then9:                                         ; preds = %land.lhs.true
  %9 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !3875
  %10 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !3876
  %phandle10 = getelementptr inbounds %struct.device_node, %struct.device_node* %10, i32 0, i32 1, !dbg !3877
  %11 = load i32, i32* %phandle10, align 8, !dbg !3877
  %call11 = call i32 @of_phandle_cache_hash(i32 %11) #10, !dbg !3878
  %idxprom12 = zext i32 %call11 to i64, !dbg !3879
  %arrayidx13 = getelementptr [128 x %struct.device_node*], [128 x %struct.device_node*]* @phandle_cache, i64 0, i64 %idxprom12, !dbg !3879
  store %struct.device_node* %9, %struct.device_node** %arrayidx13, align 8, !dbg !3880
  br label %if.end14, !dbg !3879

if.end14:                                         ; preds = %if.then9, %land.lhs.true, %for.body
  br label %for.inc, !dbg !3881

for.inc:                                          ; preds = %if.end14
  %12 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !3861
  %call15 = call %struct.device_node* @__of_find_all_nodes(%struct.device_node* %12) #10, !dbg !3861
  store %struct.device_node* %call15, %struct.device_node** %np, align 8, !dbg !3861
  br label %for.cond, !dbg !3861, !llvm.loop !3882

for.end:                                          ; preds = %for.cond
  call void @mutex_unlock(%struct.mutex* @of_mutex) #10, !dbg !3884
  %13 = load %struct.device_node*, %struct.device_node** @of_root, align 8, !dbg !3885
  %tobool16 = icmp ne %struct.device_node* %13, null, !dbg !3885
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !3887

if.then17:                                        ; preds = %for.end
  %call18 = call %struct.proc_dir_entry* @proc_symlink(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), %struct.proc_dir_entry* null, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0)) #10, !dbg !3888
  br label %if.end19, !dbg !3888

if.end19:                                         ; preds = %if.then, %if.then17, %for.end
  ret void, !dbg !3889
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noredzone
declare dso_local %struct.kset* @kset_create_and_add(i8*, %struct.kset_uevent_ops*, %struct.kobject*) #2

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device_node* @__of_find_all_nodes(%struct.device_node* %prev) #0 !dbg !3890 {
entry:
  %prev.addr = alloca %struct.device_node*, align 8
  %np = alloca %struct.device_node*, align 8
  store %struct.device_node* %prev, %struct.device_node** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %prev.addr, metadata !3893, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !3895, metadata !DIExpression()), !dbg !3896
  %0 = load %struct.device_node*, %struct.device_node** %prev.addr, align 8, !dbg !3897
  %tobool = icmp ne %struct.device_node* %0, null, !dbg !3897
  br i1 %tobool, label %if.else, label %if.then, !dbg !3899

if.then:                                          ; preds = %entry
  %1 = load %struct.device_node*, %struct.device_node** @of_root, align 8, !dbg !3900
  store %struct.device_node* %1, %struct.device_node** %np, align 8, !dbg !3902
  br label %if.end9, !dbg !3903

if.else:                                          ; preds = %entry
  %2 = load %struct.device_node*, %struct.device_node** %prev.addr, align 8, !dbg !3904
  %child = getelementptr inbounds %struct.device_node, %struct.device_node* %2, i32 0, i32 7, !dbg !3906
  %3 = load %struct.device_node*, %struct.device_node** %child, align 8, !dbg !3906
  %tobool1 = icmp ne %struct.device_node* %3, null, !dbg !3904
  br i1 %tobool1, label %if.then2, label %if.else4, !dbg !3907

if.then2:                                         ; preds = %if.else
  %4 = load %struct.device_node*, %struct.device_node** %prev.addr, align 8, !dbg !3908
  %child3 = getelementptr inbounds %struct.device_node, %struct.device_node* %4, i32 0, i32 7, !dbg !3910
  %5 = load %struct.device_node*, %struct.device_node** %child3, align 8, !dbg !3910
  store %struct.device_node* %5, %struct.device_node** %np, align 8, !dbg !3911
  br label %if.end, !dbg !3912

if.else4:                                         ; preds = %if.else
  %6 = load %struct.device_node*, %struct.device_node** %prev.addr, align 8, !dbg !3913
  store %struct.device_node* %6, %struct.device_node** %np, align 8, !dbg !3915
  br label %while.cond, !dbg !3916

while.cond:                                       ; preds = %while.body, %if.else4
  %7 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !3917
  %parent = getelementptr inbounds %struct.device_node, %struct.device_node* %7, i32 0, i32 6, !dbg !3918
  %8 = load %struct.device_node*, %struct.device_node** %parent, align 8, !dbg !3918
  %tobool5 = icmp ne %struct.device_node* %8, null, !dbg !3917
  br i1 %tobool5, label %land.rhs, label %land.end, !dbg !3919

land.rhs:                                         ; preds = %while.cond
  %9 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !3920
  %sibling = getelementptr inbounds %struct.device_node, %struct.device_node* %9, i32 0, i32 8, !dbg !3921
  %10 = load %struct.device_node*, %struct.device_node** %sibling, align 8, !dbg !3921
  %tobool6 = icmp ne %struct.device_node* %10, null, !dbg !3922
  %lnot = xor i1 %tobool6, true, !dbg !3922
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %11 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !3923
  br i1 %11, label %while.body, label %while.end, !dbg !3916

while.body:                                       ; preds = %land.end
  %12 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !3924
  %parent7 = getelementptr inbounds %struct.device_node, %struct.device_node* %12, i32 0, i32 6, !dbg !3925
  %13 = load %struct.device_node*, %struct.device_node** %parent7, align 8, !dbg !3925
  store %struct.device_node* %13, %struct.device_node** %np, align 8, !dbg !3926
  br label %while.cond, !dbg !3916, !llvm.loop !3927

while.end:                                        ; preds = %land.end
  %14 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !3928
  %sibling8 = getelementptr inbounds %struct.device_node, %struct.device_node* %14, i32 0, i32 8, !dbg !3929
  %15 = load %struct.device_node*, %struct.device_node** %sibling8, align 8, !dbg !3929
  store %struct.device_node* %15, %struct.device_node** %np, align 8, !dbg !3930
  br label %if.end

if.end:                                           ; preds = %while.end, %if.then2
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %16 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !3931
  ret %struct.device_node* %16, !dbg !3932
}

; Function Attrs: noredzone
declare dso_local i32 @__of_attach_node_sysfs(%struct.device_node*) #2

; Function Attrs: noredzone
declare dso_local %struct.proc_dir_entry* @proc_symlink(i8*, %struct.proc_dir_entry*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.property* @of_find_property(%struct.device_node* %np, i8* %name, i32* %lenp) #0 !dbg !3933 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %name.addr = alloca i8*, align 8
  %lenp.addr = alloca i32*, align 8
  %pp = alloca %struct.property*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy4 = alloca i64, align 8
  %__dummy25 = alloca i64, align 8
  %tmp8 = alloca i32, align 4
  %__dummy18 = alloca i64, align 8
  %__dummy219 = alloca i64, align 8
  %tmp22 = alloca i32, align 4
  %__dummy26 = alloca i64, align 8
  %__dummy227 = alloca i64, align 8
  %tmp30 = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !3936, metadata !DIExpression()), !dbg !3937
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3938, metadata !DIExpression()), !dbg !3939
  store i32* %lenp, i32** %lenp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %lenp.addr, metadata !3940, metadata !DIExpression()), !dbg !3941
  call void @llvm.dbg.declare(metadata %struct.property** %pp, metadata !3942, metadata !DIExpression()), !dbg !3943
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !3944, metadata !DIExpression()), !dbg !3945
  br label %do.body, !dbg !3946

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !3947, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !3951, metadata !DIExpression()), !dbg !3950
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !3950
  %conv = zext i1 %cmp to i32, !dbg !3950
  store i32 1, i32* %tmp, align 4, !dbg !3950
  %0 = load i32, i32* %tmp, align 4, !dbg !3950
  br label %do.body1, !dbg !3952

do.body1:                                         ; preds = %do.body
  br label %do.body2, !dbg !3953

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !3955

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy4, metadata !3957, metadata !DIExpression()), !dbg !3960
  call void @llvm.dbg.declare(metadata i64* %__dummy25, metadata !3961, metadata !DIExpression()), !dbg !3960
  %cmp6 = icmp eq i64* %__dummy4, %__dummy25, !dbg !3960
  %conv7 = zext i1 %cmp6 to i32, !dbg !3960
  store i32 1, i32* %tmp8, align 4, !dbg !3960
  %1 = load i32, i32* %tmp8, align 4, !dbg !3960
  %call = call i64 @arch_local_irq_save() #10, !dbg !3962
  store i64 %call, i64* %flags, align 8, !dbg !3962
  br label %do.end, !dbg !3962

do.end:                                           ; preds = %do.body3
  br label %do.end9, !dbg !3955

do.end9:                                          ; preds = %do.end
  br label %do.body10, !dbg !3953

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !3963, !srcloc !3965
  br label %do.body11, !dbg !3963

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !3966

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !3963

do.end13:                                         ; preds = %do.end12
  br label %do.end14, !dbg !3953

do.end14:                                         ; preds = %do.end13
  br label %do.end15, !dbg !3952

do.end15:                                         ; preds = %do.end14
  %2 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !3968
  %3 = load i8*, i8** %name.addr, align 8, !dbg !3969
  %4 = load i32*, i32** %lenp.addr, align 8, !dbg !3970
  %call16 = call %struct.property* @__of_find_property(%struct.device_node* %2, i8* %3, i32* %4) #10, !dbg !3971
  store %struct.property* %call16, %struct.property** %pp, align 8, !dbg !3972
  br label %do.body17, !dbg !3973

do.body17:                                        ; preds = %do.end15
  call void @llvm.dbg.declare(metadata i64* %__dummy18, metadata !3974, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.declare(metadata i64* %__dummy219, metadata !3978, metadata !DIExpression()), !dbg !3977
  %cmp20 = icmp eq i64* %__dummy18, %__dummy219, !dbg !3977
  %conv21 = zext i1 %cmp20 to i32, !dbg !3977
  store i32 1, i32* %tmp22, align 4, !dbg !3977
  %5 = load i32, i32* %tmp22, align 4, !dbg !3977
  br label %do.body23, !dbg !3979

do.body23:                                        ; preds = %do.body17
  br label %do.body24, !dbg !3980

do.body24:                                        ; preds = %do.body23
  br label %do.body25, !dbg !3982

do.body25:                                        ; preds = %do.body24
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !3984, metadata !DIExpression()), !dbg !3987
  call void @llvm.dbg.declare(metadata i64* %__dummy227, metadata !3988, metadata !DIExpression()), !dbg !3987
  %cmp28 = icmp eq i64* %__dummy26, %__dummy227, !dbg !3987
  %conv29 = zext i1 %cmp28 to i32, !dbg !3987
  store i32 1, i32* %tmp30, align 4, !dbg !3987
  %6 = load i32, i32* %tmp30, align 4, !dbg !3987
  %7 = load i64, i64* %flags, align 8, !dbg !3989
  call void @arch_local_irq_restore(i64 %7) #10, !dbg !3989
  br label %do.end31, !dbg !3989

do.end31:                                         ; preds = %do.body25
  br label %do.end32, !dbg !3982

do.end32:                                         ; preds = %do.end31
  br label %do.body33, !dbg !3980

do.body33:                                        ; preds = %do.end32
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !3990, !srcloc !3992
  br label %do.body34, !dbg !3990

do.body34:                                        ; preds = %do.body33
  br label %do.end35, !dbg !3993

do.end35:                                         ; preds = %do.body34
  br label %do.end36, !dbg !3990

do.end36:                                         ; preds = %do.end35
  br label %do.end37, !dbg !3980

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !3979

do.end38:                                         ; preds = %do.end37
  %8 = load %struct.property*, %struct.property** %pp, align 8, !dbg !3995
  ret %struct.property* %8, !dbg !3996
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !3997 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !4001, metadata !DIExpression()), !dbg !4002
  %call = call i64 @arch_local_save_flags() #10, !dbg !4003
  store i64 %call, i64* %f, align 8, !dbg !4004
  call void @arch_local_irq_disable() #10, !dbg !4005
  %0 = load i64, i64* %f, align 8, !dbg !4006
  ret i64 %0, !dbg !4007
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.property* @__of_find_property(%struct.device_node* %np, i8* %name, i32* %lenp) #0 !dbg !4008 {
entry:
  %retval = alloca %struct.property*, align 8
  %np.addr = alloca %struct.device_node*, align 8
  %name.addr = alloca i8*, align 8
  %lenp.addr = alloca i32*, align 8
  %pp = alloca %struct.property*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !4009, metadata !DIExpression()), !dbg !4010
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4011, metadata !DIExpression()), !dbg !4012
  store i32* %lenp, i32** %lenp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %lenp.addr, metadata !4013, metadata !DIExpression()), !dbg !4014
  call void @llvm.dbg.declare(metadata %struct.property** %pp, metadata !4015, metadata !DIExpression()), !dbg !4016
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !4017
  %tobool = icmp ne %struct.device_node* %0, null, !dbg !4017
  br i1 %tobool, label %if.end, label %if.then, !dbg !4019

if.then:                                          ; preds = %entry
  store %struct.property* null, %struct.property** %retval, align 8, !dbg !4020
  br label %return, !dbg !4020

if.end:                                           ; preds = %entry
  %1 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !4021
  %properties = getelementptr inbounds %struct.device_node, %struct.device_node* %1, i32 0, i32 4, !dbg !4023
  %2 = load %struct.property*, %struct.property** %properties, align 8, !dbg !4023
  store %struct.property* %2, %struct.property** %pp, align 8, !dbg !4024
  br label %for.cond, !dbg !4025

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load %struct.property*, %struct.property** %pp, align 8, !dbg !4026
  %tobool1 = icmp ne %struct.property* %3, null, !dbg !4028
  br i1 %tobool1, label %for.body, label %for.end, !dbg !4028

for.body:                                         ; preds = %for.cond
  %4 = load %struct.property*, %struct.property** %pp, align 8, !dbg !4029
  %name2 = getelementptr inbounds %struct.property, %struct.property* %4, i32 0, i32 0, !dbg !4029
  %5 = load i8*, i8** %name2, align 8, !dbg !4029
  %6 = load i8*, i8** %name.addr, align 8, !dbg !4029
  %call = call i32 @strcmp(i8* %5, i8* %6) #10, !dbg !4029
  %cmp = icmp eq i32 %call, 0, !dbg !4032
  br i1 %cmp, label %if.then3, label %if.end7, !dbg !4033

if.then3:                                         ; preds = %for.body
  %7 = load i32*, i32** %lenp.addr, align 8, !dbg !4034
  %tobool4 = icmp ne i32* %7, null, !dbg !4034
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !4037

if.then5:                                         ; preds = %if.then3
  %8 = load %struct.property*, %struct.property** %pp, align 8, !dbg !4038
  %length = getelementptr inbounds %struct.property, %struct.property* %8, i32 0, i32 1, !dbg !4039
  %9 = load i32, i32* %length, align 8, !dbg !4039
  %10 = load i32*, i32** %lenp.addr, align 8, !dbg !4040
  store i32 %9, i32* %10, align 4, !dbg !4041
  br label %if.end6, !dbg !4042

if.end6:                                          ; preds = %if.then5, %if.then3
  br label %for.end, !dbg !4043

if.end7:                                          ; preds = %for.body
  br label %for.inc, !dbg !4044

for.inc:                                          ; preds = %if.end7
  %11 = load %struct.property*, %struct.property** %pp, align 8, !dbg !4045
  %next = getelementptr inbounds %struct.property, %struct.property* %11, i32 0, i32 3, !dbg !4046
  %12 = load %struct.property*, %struct.property** %next, align 8, !dbg !4046
  store %struct.property* %12, %struct.property** %pp, align 8, !dbg !4047
  br label %for.cond, !dbg !4048, !llvm.loop !4049

for.end:                                          ; preds = %if.end6, %for.cond
  %13 = load %struct.property*, %struct.property** %pp, align 8, !dbg !4051
  store %struct.property* %13, %struct.property** %retval, align 8, !dbg !4052
  br label %return, !dbg !4052

return:                                           ; preds = %for.end, %if.then
  %14 = load %struct.property*, %struct.property** %retval, align 8, !dbg !4053
  ret %struct.property* %14, !dbg !4053
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !4054 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !4057, metadata !DIExpression()), !dbg !4058
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !4059, metadata !DIExpression()), !dbg !4061
  %0 = load i64, i64* %__edi, align 8, !dbg !4061
  store i64 %0, i64* %__edi, align 8, !dbg !4061
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !4062, metadata !DIExpression()), !dbg !4061
  %1 = load i64, i64* %__esi, align 8, !dbg !4061
  store i64 %1, i64* %__esi, align 8, !dbg !4061
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !4063, metadata !DIExpression()), !dbg !4061
  %2 = load i64, i64* %__edx, align 8, !dbg !4061
  store i64 %2, i64* %__edx, align 8, !dbg !4061
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !4064, metadata !DIExpression()), !dbg !4061
  %3 = load i64, i64* %__ecx, align 8, !dbg !4061
  store i64 %3, i64* %__ecx, align 8, !dbg !4061
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !4065, metadata !DIExpression()), !dbg !4061
  %4 = load i64, i64* %__eax, align 8, !dbg !4061
  store i64 %4, i64* %__eax, align 8, !dbg !4061
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !4061
  %6 = call i64 @llvm.read_register.i64(metadata !3635), !dbg !4061
  %7 = load i64, i64* %f.addr, align 8, !dbg !4061
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #9, !dbg !4061, !srcloc !4066
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !4061
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !4061
  store i64 %asmresult, i64* %__eax, align 8, !dbg !4061
  call void @llvm.write_register.i64(metadata !3635, i64 %asmresult1), !dbg !4061
  ret void, !dbg !4067
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device_node* @of_find_all_nodes(%struct.device_node* %prev) #0 !dbg !4068 {
entry:
  %prev.addr = alloca %struct.device_node*, align 8
  %np = alloca %struct.device_node*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy4 = alloca i64, align 8
  %__dummy25 = alloca i64, align 8
  %tmp8 = alloca i32, align 4
  %__dummy19 = alloca i64, align 8
  %__dummy220 = alloca i64, align 8
  %tmp23 = alloca i32, align 4
  %__dummy27 = alloca i64, align 8
  %__dummy228 = alloca i64, align 8
  %tmp31 = alloca i32, align 4
  store %struct.device_node* %prev, %struct.device_node** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %prev.addr, metadata !4069, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !4071, metadata !DIExpression()), !dbg !4072
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4073, metadata !DIExpression()), !dbg !4074
  br label %do.body, !dbg !4075

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4076, metadata !DIExpression()), !dbg !4079
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4080, metadata !DIExpression()), !dbg !4079
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !4079
  %conv = zext i1 %cmp to i32, !dbg !4079
  store i32 1, i32* %tmp, align 4, !dbg !4079
  %0 = load i32, i32* %tmp, align 4, !dbg !4079
  br label %do.body1, !dbg !4081

do.body1:                                         ; preds = %do.body
  br label %do.body2, !dbg !4082

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !4084

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy4, metadata !4086, metadata !DIExpression()), !dbg !4089
  call void @llvm.dbg.declare(metadata i64* %__dummy25, metadata !4090, metadata !DIExpression()), !dbg !4089
  %cmp6 = icmp eq i64* %__dummy4, %__dummy25, !dbg !4089
  %conv7 = zext i1 %cmp6 to i32, !dbg !4089
  store i32 1, i32* %tmp8, align 4, !dbg !4089
  %1 = load i32, i32* %tmp8, align 4, !dbg !4089
  %call = call i64 @arch_local_irq_save() #10, !dbg !4091
  store i64 %call, i64* %flags, align 8, !dbg !4091
  br label %do.end, !dbg !4091

do.end:                                           ; preds = %do.body3
  br label %do.end9, !dbg !4084

do.end9:                                          ; preds = %do.end
  br label %do.body10, !dbg !4082

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !4092, !srcloc !4094
  br label %do.body11, !dbg !4092

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !4095

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !4092

do.end13:                                         ; preds = %do.end12
  br label %do.end14, !dbg !4082

do.end14:                                         ; preds = %do.end13
  br label %do.end15, !dbg !4081

do.end15:                                         ; preds = %do.end14
  %2 = load %struct.device_node*, %struct.device_node** %prev.addr, align 8, !dbg !4097
  %call16 = call %struct.device_node* @__of_find_all_nodes(%struct.device_node* %2) #10, !dbg !4098
  store %struct.device_node* %call16, %struct.device_node** %np, align 8, !dbg !4099
  %3 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !4100
  %call17 = call %struct.device_node* @of_node_get(%struct.device_node* %3) #10, !dbg !4101
  %4 = load %struct.device_node*, %struct.device_node** %prev.addr, align 8, !dbg !4102
  call void @of_node_put(%struct.device_node* %4) #10, !dbg !4103
  br label %do.body18, !dbg !4104

do.body18:                                        ; preds = %do.end15
  call void @llvm.dbg.declare(metadata i64* %__dummy19, metadata !4105, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.declare(metadata i64* %__dummy220, metadata !4109, metadata !DIExpression()), !dbg !4108
  %cmp21 = icmp eq i64* %__dummy19, %__dummy220, !dbg !4108
  %conv22 = zext i1 %cmp21 to i32, !dbg !4108
  store i32 1, i32* %tmp23, align 4, !dbg !4108
  %5 = load i32, i32* %tmp23, align 4, !dbg !4108
  br label %do.body24, !dbg !4110

do.body24:                                        ; preds = %do.body18
  br label %do.body25, !dbg !4111

do.body25:                                        ; preds = %do.body24
  br label %do.body26, !dbg !4113

do.body26:                                        ; preds = %do.body25
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !4115, metadata !DIExpression()), !dbg !4118
  call void @llvm.dbg.declare(metadata i64* %__dummy228, metadata !4119, metadata !DIExpression()), !dbg !4118
  %cmp29 = icmp eq i64* %__dummy27, %__dummy228, !dbg !4118
  %conv30 = zext i1 %cmp29 to i32, !dbg !4118
  store i32 1, i32* %tmp31, align 4, !dbg !4118
  %6 = load i32, i32* %tmp31, align 4, !dbg !4118
  %7 = load i64, i64* %flags, align 8, !dbg !4120
  call void @arch_local_irq_restore(i64 %7) #10, !dbg !4120
  br label %do.end32, !dbg !4120

do.end32:                                         ; preds = %do.body26
  br label %do.end33, !dbg !4113

do.end33:                                         ; preds = %do.end32
  br label %do.body34, !dbg !4111

do.body34:                                        ; preds = %do.end33
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !4121, !srcloc !4123
  br label %do.body35, !dbg !4121

do.body35:                                        ; preds = %do.body34
  br label %do.end36, !dbg !4124

do.end36:                                         ; preds = %do.body35
  br label %do.end37, !dbg !4121

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !4111

do.end38:                                         ; preds = %do.end37
  br label %do.end39, !dbg !4110

do.end39:                                         ; preds = %do.end38
  %8 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !4126
  ret %struct.device_node* %8, !dbg !4127
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device_node* @of_node_get(%struct.device_node* %node) #0 !dbg !4128 {
entry:
  %node.addr = alloca %struct.device_node*, align 8
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !4129, metadata !DIExpression()), !dbg !4130
  %0 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !4131
  ret %struct.device_node* %0, !dbg !4132
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @of_node_put(%struct.device_node* %node) #0 !dbg !4133 {
entry:
  %node.addr = alloca %struct.device_node*, align 8
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !4136, metadata !DIExpression()), !dbg !4137
  ret void, !dbg !4138
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @__of_get_property(%struct.device_node* %np, i8* %name, i32* %lenp) #0 !dbg !4139 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %name.addr = alloca i8*, align 8
  %lenp.addr = alloca i32*, align 8
  %pp = alloca %struct.property*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !4142, metadata !DIExpression()), !dbg !4143
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4144, metadata !DIExpression()), !dbg !4145
  store i32* %lenp, i32** %lenp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %lenp.addr, metadata !4146, metadata !DIExpression()), !dbg !4147
  call void @llvm.dbg.declare(metadata %struct.property** %pp, metadata !4148, metadata !DIExpression()), !dbg !4149
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !4150
  %1 = load i8*, i8** %name.addr, align 8, !dbg !4151
  %2 = load i32*, i32** %lenp.addr, align 8, !dbg !4152
  %call = call %struct.property* @__of_find_property(%struct.device_node* %0, i8* %1, i32* %2) #10, !dbg !4153
  store %struct.property* %call, %struct.property** %pp, align 8, !dbg !4149
  %3 = load %struct.property*, %struct.property** %pp, align 8, !dbg !4154
  %tobool = icmp ne %struct.property* %3, null, !dbg !4154
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4154

cond.true:                                        ; preds = %entry
  %4 = load %struct.property*, %struct.property** %pp, align 8, !dbg !4155
  %value = getelementptr inbounds %struct.property, %struct.property* %4, i32 0, i32 2, !dbg !4156
  %5 = load i8*, i8** %value, align 8, !dbg !4156
  br label %cond.end, !dbg !4154

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4154

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %5, %cond.true ], [ null, %cond.false ], !dbg !4154
  ret i8* %cond, !dbg !4157
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @of_get_property(%struct.device_node* %np, i8* %name, i32* %lenp) #0 !dbg !4158 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %name.addr = alloca i8*, align 8
  %lenp.addr = alloca i32*, align 8
  %pp = alloca %struct.property*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !4159, metadata !DIExpression()), !dbg !4160
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4161, metadata !DIExpression()), !dbg !4162
  store i32* %lenp, i32** %lenp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %lenp.addr, metadata !4163, metadata !DIExpression()), !dbg !4164
  call void @llvm.dbg.declare(metadata %struct.property** %pp, metadata !4165, metadata !DIExpression()), !dbg !4166
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !4167
  %1 = load i8*, i8** %name.addr, align 8, !dbg !4168
  %2 = load i32*, i32** %lenp.addr, align 8, !dbg !4169
  %call = call %struct.property* @of_find_property(%struct.device_node* %0, i8* %1, i32* %2) #10, !dbg !4170
  store %struct.property* %call, %struct.property** %pp, align 8, !dbg !4166
  %3 = load %struct.property*, %struct.property** %pp, align 8, !dbg !4171
  %tobool = icmp ne %struct.property* %3, null, !dbg !4171
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4171

cond.true:                                        ; preds = %entry
  %4 = load %struct.property*, %struct.property** %pp, align 8, !dbg !4172
  %value = getelementptr inbounds %struct.property, %struct.property* %4, i32 0, i32 2, !dbg !4173
  %5 = load i8*, i8** %value, align 8, !dbg !4173
  br label %cond.end, !dbg !4171

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4171

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %5, %cond.true ], [ null, %cond.false ], !dbg !4171
  ret i8* %cond, !dbg !4174
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define weak dso_local zeroext i1 @arch_match_cpu_phys_id(i32 %cpu, i64 %phys_id) #0 !dbg !4175 {
entry:
  %cpu.addr = alloca i32, align 4
  %phys_id.addr = alloca i64, align 8
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !4178, metadata !DIExpression()), !dbg !4179
  store i64 %phys_id, i64* %phys_id.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %phys_id.addr, metadata !4180, metadata !DIExpression()), !dbg !4181
  %0 = load i64, i64* %phys_id.addr, align 8, !dbg !4182
  %conv = trunc i64 %0 to i32, !dbg !4183
  %1 = load i32, i32* %cpu.addr, align 4, !dbg !4184
  %cmp = icmp eq i32 %conv, %1, !dbg !4185
  ret i1 %cmp, !dbg !4186
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define weak dso_local zeroext i1 @arch_find_n_match_cpu_physical_id(%struct.device_node* %cpun, i32 %cpu, i32* %thread) #0 !dbg !4187 {
entry:
  %cpun.addr = alloca %struct.device_node*, align 8
  %cpu.addr = alloca i32, align 4
  %thread.addr = alloca i32*, align 8
  store %struct.device_node* %cpun, %struct.device_node** %cpun.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %cpun.addr, metadata !4190, metadata !DIExpression()), !dbg !4191
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !4192, metadata !DIExpression()), !dbg !4193
  store i32* %thread, i32** %thread.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %thread.addr, metadata !4194, metadata !DIExpression()), !dbg !4195
  %0 = load %struct.device_node*, %struct.device_node** %cpun.addr, align 8, !dbg !4196
  %1 = load i32, i32* %cpu.addr, align 4, !dbg !4197
  %2 = load i32*, i32** %thread.addr, align 8, !dbg !4198
  %call = call zeroext i1 @__of_find_n_match_cpu_property(%struct.device_node* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i32 %1, i32* %2) #10, !dbg !4199
  ret i1 %call, !dbg !4200
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__of_find_n_match_cpu_property(%struct.device_node* %cpun, i8* %prop_name, i32 %cpu, i32* %thread) #0 !dbg !4201 {
entry:
  %retval = alloca i1, align 1
  %cpun.addr = alloca %struct.device_node*, align 8
  %prop_name.addr = alloca i8*, align 8
  %cpu.addr = alloca i32, align 4
  %thread.addr = alloca i32*, align 8
  %cell = alloca i32*, align 8
  %ac = alloca i32, align 4
  %prop_len = alloca i32, align 4
  %tid = alloca i32, align 4
  %hwid = alloca i64, align 8
  store %struct.device_node* %cpun, %struct.device_node** %cpun.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %cpun.addr, metadata !4204, metadata !DIExpression()), !dbg !4205
  store i8* %prop_name, i8** %prop_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prop_name.addr, metadata !4206, metadata !DIExpression()), !dbg !4207
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !4208, metadata !DIExpression()), !dbg !4209
  store i32* %thread, i32** %thread.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %thread.addr, metadata !4210, metadata !DIExpression()), !dbg !4211
  call void @llvm.dbg.declare(metadata i32** %cell, metadata !4212, metadata !DIExpression()), !dbg !4214
  call void @llvm.dbg.declare(metadata i32* %ac, metadata !4215, metadata !DIExpression()), !dbg !4216
  call void @llvm.dbg.declare(metadata i32* %prop_len, metadata !4217, metadata !DIExpression()), !dbg !4218
  call void @llvm.dbg.declare(metadata i32* %tid, metadata !4219, metadata !DIExpression()), !dbg !4220
  call void @llvm.dbg.declare(metadata i64* %hwid, metadata !4221, metadata !DIExpression()), !dbg !4222
  %0 = load %struct.device_node*, %struct.device_node** %cpun.addr, align 8, !dbg !4223
  %call = call i32 @of_n_addr_cells(%struct.device_node* %0) #10, !dbg !4224
  store i32 %call, i32* %ac, align 4, !dbg !4225
  %1 = load %struct.device_node*, %struct.device_node** %cpun.addr, align 8, !dbg !4226
  %2 = load i8*, i8** %prop_name.addr, align 8, !dbg !4227
  %call1 = call i8* @of_get_property(%struct.device_node* %1, i8* %2, i32* %prop_len) #10, !dbg !4228
  %3 = bitcast i8* %call1 to i32*, !dbg !4228
  store i32* %3, i32** %cell, align 8, !dbg !4229
  %4 = load i32*, i32** %cell, align 8, !dbg !4230
  %tobool = icmp ne i32* %4, null, !dbg !4230
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4232

land.lhs.true:                                    ; preds = %entry
  %5 = load i32, i32* %ac, align 4, !dbg !4233
  %tobool2 = icmp ne i32 %5, 0, !dbg !4233
  br i1 %tobool2, label %if.end, label %land.lhs.true3, !dbg !4234

land.lhs.true3:                                   ; preds = %land.lhs.true
  %6 = load i32, i32* %cpu.addr, align 4, !dbg !4235
  %call4 = call zeroext i1 @arch_match_cpu_phys_id(i32 %6, i64 0) #10, !dbg !4236
  br i1 %call4, label %if.then, label %if.end, !dbg !4237

if.then:                                          ; preds = %land.lhs.true3
  store i1 true, i1* %retval, align 1, !dbg !4238
  br label %return, !dbg !4238

if.end:                                           ; preds = %land.lhs.true3, %land.lhs.true, %entry
  %7 = load i32*, i32** %cell, align 8, !dbg !4239
  %tobool5 = icmp ne i32* %7, null, !dbg !4239
  br i1 %tobool5, label %lor.lhs.false, label %if.then7, !dbg !4241

lor.lhs.false:                                    ; preds = %if.end
  %8 = load i32, i32* %ac, align 4, !dbg !4242
  %tobool6 = icmp ne i32 %8, 0, !dbg !4242
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !4243

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  store i1 false, i1* %retval, align 1, !dbg !4244
  br label %return, !dbg !4244

if.end8:                                          ; preds = %lor.lhs.false
  %9 = load i32, i32* %ac, align 4, !dbg !4245
  %conv = sext i32 %9 to i64, !dbg !4245
  %mul = mul i64 4, %conv, !dbg !4246
  %10 = load i32, i32* %prop_len, align 4, !dbg !4247
  %conv9 = sext i32 %10 to i64, !dbg !4247
  %div = udiv i64 %conv9, %mul, !dbg !4247
  %conv10 = trunc i64 %div to i32, !dbg !4247
  store i32 %conv10, i32* %prop_len, align 4, !dbg !4247
  store i32 0, i32* %tid, align 4, !dbg !4248
  br label %for.cond, !dbg !4250

for.cond:                                         ; preds = %for.inc, %if.end8
  %11 = load i32, i32* %tid, align 4, !dbg !4251
  %12 = load i32, i32* %prop_len, align 4, !dbg !4253
  %cmp = icmp slt i32 %11, %12, !dbg !4254
  br i1 %cmp, label %for.body, label %for.end, !dbg !4255

for.body:                                         ; preds = %for.cond
  %13 = load i32*, i32** %cell, align 8, !dbg !4256
  %14 = load i32, i32* %ac, align 4, !dbg !4258
  %call12 = call i64 @of_read_number(i32* %13, i32 %14) #10, !dbg !4259
  store i64 %call12, i64* %hwid, align 8, !dbg !4260
  %15 = load i32, i32* %cpu.addr, align 4, !dbg !4261
  %16 = load i64, i64* %hwid, align 8, !dbg !4263
  %call13 = call zeroext i1 @arch_match_cpu_phys_id(i32 %15, i64 %16) #10, !dbg !4264
  br i1 %call13, label %if.then14, label %if.end18, !dbg !4265

if.then14:                                        ; preds = %for.body
  %17 = load i32*, i32** %thread.addr, align 8, !dbg !4266
  %tobool15 = icmp ne i32* %17, null, !dbg !4266
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !4269

if.then16:                                        ; preds = %if.then14
  %18 = load i32, i32* %tid, align 4, !dbg !4270
  %19 = load i32*, i32** %thread.addr, align 8, !dbg !4271
  store i32 %18, i32* %19, align 4, !dbg !4272
  br label %if.end17, !dbg !4273

if.end17:                                         ; preds = %if.then16, %if.then14
  store i1 true, i1* %retval, align 1, !dbg !4274
  br label %return, !dbg !4274

if.end18:                                         ; preds = %for.body
  %20 = load i32, i32* %ac, align 4, !dbg !4275
  %21 = load i32*, i32** %cell, align 8, !dbg !4276
  %idx.ext = sext i32 %20 to i64, !dbg !4276
  %add.ptr = getelementptr i32, i32* %21, i64 %idx.ext, !dbg !4276
  store i32* %add.ptr, i32** %cell, align 8, !dbg !4276
  br label %for.inc, !dbg !4277

for.inc:                                          ; preds = %if.end18
  %22 = load i32, i32* %tid, align 4, !dbg !4278
  %inc = add i32 %22, 1, !dbg !4278
  store i32 %inc, i32* %tid, align 4, !dbg !4278
  br label %for.cond, !dbg !4279, !llvm.loop !4280

for.end:                                          ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !4282
  br label %return, !dbg !4282

return:                                           ; preds = %for.end, %if.end17, %if.then7, %if.then
  %23 = load i1, i1* %retval, align 1, !dbg !4283
  ret i1 %23, !dbg !4283
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device_node* @of_get_cpu_node(i32 %cpu, i32* %thread) #0 !dbg !4284 {
entry:
  %retval = alloca %struct.device_node*, align 8
  %cpu.addr = alloca i32, align 4
  %thread.addr = alloca i32*, align 8
  %cpun = alloca %struct.device_node*, align 8
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !4287, metadata !DIExpression()), !dbg !4288
  store i32* %thread, i32** %thread.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %thread.addr, metadata !4289, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.declare(metadata %struct.device_node** %cpun, metadata !4291, metadata !DIExpression()), !dbg !4292
  %call = call %struct.device_node* @of_get_next_cpu_node(%struct.device_node* null) #10, !dbg !4293
  store %struct.device_node* %call, %struct.device_node** %cpun, align 8, !dbg !4293
  br label %for.cond, !dbg !4293

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.device_node*, %struct.device_node** %cpun, align 8, !dbg !4295
  %cmp = icmp ne %struct.device_node* %0, null, !dbg !4295
  br i1 %cmp, label %for.body, label %for.end, !dbg !4293

for.body:                                         ; preds = %for.cond
  %1 = load %struct.device_node*, %struct.device_node** %cpun, align 8, !dbg !4297
  %2 = load i32, i32* %cpu.addr, align 4, !dbg !4300
  %3 = load i32*, i32** %thread.addr, align 8, !dbg !4301
  %call1 = call zeroext i1 @arch_find_n_match_cpu_physical_id(%struct.device_node* %1, i32 %2, i32* %3) #10, !dbg !4302
  br i1 %call1, label %if.then, label %if.end, !dbg !4303

if.then:                                          ; preds = %for.body
  %4 = load %struct.device_node*, %struct.device_node** %cpun, align 8, !dbg !4304
  store %struct.device_node* %4, %struct.device_node** %retval, align 8, !dbg !4305
  br label %return, !dbg !4305

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4306

for.inc:                                          ; preds = %if.end
  %5 = load %struct.device_node*, %struct.device_node** %cpun, align 8, !dbg !4295
  %call2 = call %struct.device_node* @of_get_next_cpu_node(%struct.device_node* %5) #10, !dbg !4295
  store %struct.device_node* %call2, %struct.device_node** %cpun, align 8, !dbg !4295
  br label %for.cond, !dbg !4295, !llvm.loop !4307

for.end:                                          ; preds = %for.cond
  store %struct.device_node* null, %struct.device_node** %retval, align 8, !dbg !4309
  br label %return, !dbg !4309

return:                                           ; preds = %for.end, %if.then
  %6 = load %struct.device_node*, %struct.device_node** %retval, align 8, !dbg !4310
  ret %struct.device_node* %6, !dbg !4310
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device_node* @of_get_next_cpu_node(%struct.device_node* %prev) #0 !dbg !4311 {
entry:
  %prev.addr = alloca %struct.device_node*, align 8
  %next = alloca %struct.device_node*, align 8
  %flags = alloca i64, align 8
  %node = alloca %struct.device_node*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy4 = alloca i64, align 8
  %__dummy25 = alloca i64, align 8
  %tmp8 = alloca i32, align 4
  %__dummy36 = alloca i64, align 8
  %__dummy237 = alloca i64, align 8
  %tmp40 = alloca i32, align 4
  %__dummy44 = alloca i64, align 8
  %__dummy245 = alloca i64, align 8
  %tmp48 = alloca i32, align 4
  store %struct.device_node* %prev, %struct.device_node** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %prev.addr, metadata !4312, metadata !DIExpression()), !dbg !4313
  call void @llvm.dbg.declare(metadata %struct.device_node** %next, metadata !4314, metadata !DIExpression()), !dbg !4315
  store %struct.device_node* null, %struct.device_node** %next, align 8, !dbg !4315
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4316, metadata !DIExpression()), !dbg !4317
  call void @llvm.dbg.declare(metadata %struct.device_node** %node, metadata !4318, metadata !DIExpression()), !dbg !4319
  %0 = load %struct.device_node*, %struct.device_node** %prev.addr, align 8, !dbg !4320
  %tobool = icmp ne %struct.device_node* %0, null, !dbg !4320
  br i1 %tobool, label %if.end, label %if.then, !dbg !4322

if.then:                                          ; preds = %entry
  %call = call %struct.device_node* @of_find_node_by_path(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0)) #10, !dbg !4323
  store %struct.device_node* %call, %struct.device_node** %node, align 8, !dbg !4324
  br label %if.end, !dbg !4325

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !4326

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4327, metadata !DIExpression()), !dbg !4330
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4331, metadata !DIExpression()), !dbg !4330
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !4330
  %conv = zext i1 %cmp to i32, !dbg !4330
  store i32 1, i32* %tmp, align 4, !dbg !4330
  %1 = load i32, i32* %tmp, align 4, !dbg !4330
  br label %do.body1, !dbg !4332

do.body1:                                         ; preds = %do.body
  br label %do.body2, !dbg !4333

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !4335

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy4, metadata !4337, metadata !DIExpression()), !dbg !4340
  call void @llvm.dbg.declare(metadata i64* %__dummy25, metadata !4341, metadata !DIExpression()), !dbg !4340
  %cmp6 = icmp eq i64* %__dummy4, %__dummy25, !dbg !4340
  %conv7 = zext i1 %cmp6 to i32, !dbg !4340
  store i32 1, i32* %tmp8, align 4, !dbg !4340
  %2 = load i32, i32* %tmp8, align 4, !dbg !4340
  %call9 = call i64 @arch_local_irq_save() #10, !dbg !4342
  store i64 %call9, i64* %flags, align 8, !dbg !4342
  br label %do.end, !dbg !4342

do.end:                                           ; preds = %do.body3
  br label %do.end10, !dbg !4335

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !4333

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !4343, !srcloc !4345
  br label %do.body12, !dbg !4343

do.body12:                                        ; preds = %do.body11
  br label %do.end13, !dbg !4346

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !4343

do.end14:                                         ; preds = %do.end13
  br label %do.end15, !dbg !4333

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !4332

do.end16:                                         ; preds = %do.end15
  %3 = load %struct.device_node*, %struct.device_node** %prev.addr, align 8, !dbg !4348
  %tobool17 = icmp ne %struct.device_node* %3, null, !dbg !4348
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !4350

if.then18:                                        ; preds = %do.end16
  %4 = load %struct.device_node*, %struct.device_node** %prev.addr, align 8, !dbg !4351
  %sibling = getelementptr inbounds %struct.device_node, %struct.device_node* %4, i32 0, i32 8, !dbg !4352
  %5 = load %struct.device_node*, %struct.device_node** %sibling, align 8, !dbg !4352
  store %struct.device_node* %5, %struct.device_node** %next, align 8, !dbg !4353
  br label %if.end22, !dbg !4354

if.else:                                          ; preds = %do.end16
  %6 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !4355
  %tobool19 = icmp ne %struct.device_node* %6, null, !dbg !4355
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !4357

if.then20:                                        ; preds = %if.else
  %7 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !4358
  %child = getelementptr inbounds %struct.device_node, %struct.device_node* %7, i32 0, i32 7, !dbg !4360
  %8 = load %struct.device_node*, %struct.device_node** %child, align 8, !dbg !4360
  store %struct.device_node* %8, %struct.device_node** %next, align 8, !dbg !4361
  %9 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !4362
  call void @of_node_put(%struct.device_node* %9) #10, !dbg !4363
  br label %if.end21, !dbg !4364

if.end21:                                         ; preds = %if.then20, %if.else
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then18
  br label %for.cond, !dbg !4365

for.cond:                                         ; preds = %for.inc, %if.end22
  %10 = load %struct.device_node*, %struct.device_node** %next, align 8, !dbg !4366
  %tobool23 = icmp ne %struct.device_node* %10, null, !dbg !4369
  br i1 %tobool23, label %for.body, label %for.end, !dbg !4369

for.body:                                         ; preds = %for.cond
  %11 = load %struct.device_node*, %struct.device_node** %next, align 8, !dbg !4370
  %call24 = call zeroext i1 @of_node_name_eq(%struct.device_node* %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0)) #10, !dbg !4373
  br i1 %call24, label %if.end29, label %lor.lhs.false, !dbg !4374

lor.lhs.false:                                    ; preds = %for.body
  %12 = load %struct.device_node*, %struct.device_node** %next, align 8, !dbg !4375
  %call26 = call zeroext i1 @__of_node_is_type(%struct.device_node* %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0)) #10, !dbg !4376
  br i1 %call26, label %if.end29, label %if.then28, !dbg !4377

if.then28:                                        ; preds = %lor.lhs.false
  br label %for.inc, !dbg !4378

if.end29:                                         ; preds = %lor.lhs.false, %for.body
  %13 = load %struct.device_node*, %struct.device_node** %next, align 8, !dbg !4379
  %call30 = call %struct.device_node* @of_node_get(%struct.device_node* %13) #10, !dbg !4381
  %tobool31 = icmp ne %struct.device_node* %call30, null, !dbg !4381
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !4382

if.then32:                                        ; preds = %if.end29
  br label %for.end, !dbg !4383

if.end33:                                         ; preds = %if.end29
  br label %for.inc, !dbg !4384

for.inc:                                          ; preds = %if.end33, %if.then28
  %14 = load %struct.device_node*, %struct.device_node** %next, align 8, !dbg !4385
  %sibling34 = getelementptr inbounds %struct.device_node, %struct.device_node* %14, i32 0, i32 8, !dbg !4386
  %15 = load %struct.device_node*, %struct.device_node** %sibling34, align 8, !dbg !4386
  store %struct.device_node* %15, %struct.device_node** %next, align 8, !dbg !4387
  br label %for.cond, !dbg !4388, !llvm.loop !4389

for.end:                                          ; preds = %if.then32, %for.cond
  %16 = load %struct.device_node*, %struct.device_node** %prev.addr, align 8, !dbg !4391
  call void @of_node_put(%struct.device_node* %16) #10, !dbg !4392
  br label %do.body35, !dbg !4393

do.body35:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i64* %__dummy36, metadata !4394, metadata !DIExpression()), !dbg !4397
  call void @llvm.dbg.declare(metadata i64* %__dummy237, metadata !4398, metadata !DIExpression()), !dbg !4397
  %cmp38 = icmp eq i64* %__dummy36, %__dummy237, !dbg !4397
  %conv39 = zext i1 %cmp38 to i32, !dbg !4397
  store i32 1, i32* %tmp40, align 4, !dbg !4397
  %17 = load i32, i32* %tmp40, align 4, !dbg !4397
  br label %do.body41, !dbg !4399

do.body41:                                        ; preds = %do.body35
  br label %do.body42, !dbg !4400

do.body42:                                        ; preds = %do.body41
  br label %do.body43, !dbg !4402

do.body43:                                        ; preds = %do.body42
  call void @llvm.dbg.declare(metadata i64* %__dummy44, metadata !4404, metadata !DIExpression()), !dbg !4407
  call void @llvm.dbg.declare(metadata i64* %__dummy245, metadata !4408, metadata !DIExpression()), !dbg !4407
  %cmp46 = icmp eq i64* %__dummy44, %__dummy245, !dbg !4407
  %conv47 = zext i1 %cmp46 to i32, !dbg !4407
  store i32 1, i32* %tmp48, align 4, !dbg !4407
  %18 = load i32, i32* %tmp48, align 4, !dbg !4407
  %19 = load i64, i64* %flags, align 8, !dbg !4409
  call void @arch_local_irq_restore(i64 %19) #10, !dbg !4409
  br label %do.end49, !dbg !4409

do.end49:                                         ; preds = %do.body43
  br label %do.end50, !dbg !4402

do.end50:                                         ; preds = %do.end49
  br label %do.body51, !dbg !4400

do.body51:                                        ; preds = %do.end50
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !4410, !srcloc !4412
  br label %do.body52, !dbg !4410

do.body52:                                        ; preds = %do.body51
  br label %do.end53, !dbg !4413

do.end53:                                         ; preds = %do.body52
  br label %do.end54, !dbg !4410

do.end54:                                         ; preds = %do.end53
  br label %do.end55, !dbg !4400

do.end55:                                         ; preds = %do.end54
  br label %do.end56, !dbg !4399

do.end56:                                         ; preds = %do.end55
  %20 = load %struct.device_node*, %struct.device_node** %next, align 8, !dbg !4415
  ret %struct.device_node* %20, !dbg !4416
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_cpu_node_to_id(%struct.device_node* %cpu_node) #0 !dbg !4417 {
entry:
  %retval = alloca i32, align 4
  %cpu_node.addr = alloca %struct.device_node*, align 8
  %cpu = alloca i32, align 4
  %found = alloca i8, align 1
  %np = alloca %struct.device_node*, align 8
  store %struct.device_node* %cpu_node, %struct.device_node** %cpu_node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %cpu_node.addr, metadata !4418, metadata !DIExpression()), !dbg !4419
  call void @llvm.dbg.declare(metadata i32* %cpu, metadata !4420, metadata !DIExpression()), !dbg !4421
  call void @llvm.dbg.declare(metadata i8* %found, metadata !4422, metadata !DIExpression()), !dbg !4423
  store i8 0, i8* %found, align 1, !dbg !4423
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !4424, metadata !DIExpression()), !dbg !4425
  store i32 0, i32* %cpu, align 4, !dbg !4426
  br label %for.cond, !dbg !4426

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %cpu, align 4, !dbg !4428
  %cmp = icmp slt i32 %0, 1, !dbg !4428
  br i1 %cmp, label %for.body, label %for.end, !dbg !4426

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %cpu, align 4, !dbg !4430
  %call = call %struct.device_node* @of_cpu_device_node_get(i32 %1) #10, !dbg !4432
  store %struct.device_node* %call, %struct.device_node** %np, align 8, !dbg !4433
  %2 = load %struct.device_node*, %struct.device_node** %cpu_node.addr, align 8, !dbg !4434
  %3 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !4435
  %cmp1 = icmp eq %struct.device_node* %2, %3, !dbg !4436
  %frombool = zext i1 %cmp1 to i8, !dbg !4437
  store i8 %frombool, i8* %found, align 1, !dbg !4437
  %4 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !4438
  call void @of_node_put(%struct.device_node* %4) #10, !dbg !4439
  %5 = load i8, i8* %found, align 1, !dbg !4440
  %tobool = trunc i8 %5 to i1, !dbg !4440
  br i1 %tobool, label %if.then, label %if.end, !dbg !4442

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %cpu, align 4, !dbg !4443
  store i32 %6, i32* %retval, align 4, !dbg !4444
  br label %return, !dbg !4444

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4445

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %cpu, align 4, !dbg !4428
  %inc = add i32 %7, 1, !dbg !4428
  store i32 %inc, i32* %cpu, align 4, !dbg !4428
  br label %for.cond, !dbg !4428, !llvm.loop !4446

for.end:                                          ; preds = %for.cond
  store i32 -19, i32* %retval, align 4, !dbg !4448
  br label %return, !dbg !4448

return:                                           ; preds = %for.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !4449
  ret i32 %8, !dbg !4449
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device_node* @of_cpu_device_node_get(i32 %cpu) #0 !dbg !4450 {
entry:
  %retval = alloca %struct.device_node*, align 8
  %cpu.addr = alloca i32, align 4
  %cpu_dev = alloca %struct.device*, align 8
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !4454, metadata !DIExpression()), !dbg !4455
  call void @llvm.dbg.declare(metadata %struct.device** %cpu_dev, metadata !4456, metadata !DIExpression()), !dbg !4457
  %0 = load i32, i32* %cpu.addr, align 4, !dbg !4458
  %call = call %struct.device* @get_cpu_device(i32 %0) #10, !dbg !4459
  store %struct.device* %call, %struct.device** %cpu_dev, align 8, !dbg !4460
  %1 = load %struct.device*, %struct.device** %cpu_dev, align 8, !dbg !4461
  %tobool = icmp ne %struct.device* %1, null, !dbg !4461
  br i1 %tobool, label %if.end, label %if.then, !dbg !4463

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %cpu.addr, align 4, !dbg !4464
  %call1 = call %struct.device_node* @of_get_cpu_node(i32 %2, i32* null) #10, !dbg !4465
  store %struct.device_node* %call1, %struct.device_node** %retval, align 8, !dbg !4466
  br label %return, !dbg !4466

if.end:                                           ; preds = %entry
  %3 = load %struct.device*, %struct.device** %cpu_dev, align 8, !dbg !4467
  %of_node = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 23, !dbg !4468
  %4 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !4468
  %call2 = call %struct.device_node* @of_node_get(%struct.device_node* %4) #10, !dbg !4469
  store %struct.device_node* %call2, %struct.device_node** %retval, align 8, !dbg !4470
  br label %return, !dbg !4470

return:                                           ; preds = %if.end, %if.then
  %5 = load %struct.device_node*, %struct.device_node** %retval, align 8, !dbg !4471
  ret %struct.device_node* %5, !dbg !4471
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device_node* @of_get_cpu_state_node(%struct.device_node* %cpu_node, i32 %index) #0 !dbg !4472 {
entry:
  %retval = alloca %struct.device_node*, align 8
  %cpu_node.addr = alloca %struct.device_node*, align 8
  %index.addr = alloca i32, align 4
  %args = alloca %struct.of_phandle_args, align 8
  %err = alloca i32, align 4
  %state_node = alloca %struct.device_node*, align 8
  store %struct.device_node* %cpu_node, %struct.device_node** %cpu_node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %cpu_node.addr, metadata !4475, metadata !DIExpression()), !dbg !4476
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4477, metadata !DIExpression()), !dbg !4478
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args* %args, metadata !4479, metadata !DIExpression()), !dbg !4480
  call void @llvm.dbg.declare(metadata i32* %err, metadata !4481, metadata !DIExpression()), !dbg !4482
  %0 = load %struct.device_node*, %struct.device_node** %cpu_node.addr, align 8, !dbg !4483
  %call = call i32 @of_parse_phandle_with_args(%struct.device_node* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0), i32 0, %struct.of_phandle_args* %args) #10, !dbg !4484
  store i32 %call, i32* %err, align 4, !dbg !4485
  %1 = load i32, i32* %err, align 4, !dbg !4486
  %tobool = icmp ne i32 %1, 0, !dbg !4486
  br i1 %tobool, label %if.end5, label %if.then, !dbg !4488

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.device_node** %state_node, metadata !4489, metadata !DIExpression()), !dbg !4491
  %np = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %args, i32 0, i32 0, !dbg !4492
  %2 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !4492
  %3 = load i32, i32* %index.addr, align 4, !dbg !4493
  %call1 = call %struct.device_node* @of_parse_phandle(%struct.device_node* %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), i32 %3) #10, !dbg !4494
  store %struct.device_node* %call1, %struct.device_node** %state_node, align 8, !dbg !4491
  %np2 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %args, i32 0, i32 0, !dbg !4495
  %4 = load %struct.device_node*, %struct.device_node** %np2, align 8, !dbg !4495
  call void @of_node_put(%struct.device_node* %4) #10, !dbg !4496
  %5 = load %struct.device_node*, %struct.device_node** %state_node, align 8, !dbg !4497
  %tobool3 = icmp ne %struct.device_node* %5, null, !dbg !4497
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !4499

if.then4:                                         ; preds = %if.then
  %6 = load %struct.device_node*, %struct.device_node** %state_node, align 8, !dbg !4500
  store %struct.device_node* %6, %struct.device_node** %retval, align 8, !dbg !4501
  br label %return, !dbg !4501

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !4502

if.end5:                                          ; preds = %if.end, %entry
  %7 = load %struct.device_node*, %struct.device_node** %cpu_node.addr, align 8, !dbg !4503
  %8 = load i32, i32* %index.addr, align 4, !dbg !4504
  %call6 = call %struct.device_node* @of_parse_phandle(%struct.device_node* %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0), i32 %8) #10, !dbg !4505
  store %struct.device_node* %call6, %struct.device_node** %retval, align 8, !dbg !4506
  br label %return, !dbg !4506

return:                                           ; preds = %if.end5, %if.then4
  %9 = load %struct.device_node*, %struct.device_node** %retval, align 8, !dbg !4507
  ret %struct.device_node* %9, !dbg !4507
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_parse_phandle_with_args(%struct.device_node* %np, i8* %list_name, i8* %cells_name, i32 %index, %struct.of_phandle_args* %out_args) #0 !dbg !4508 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %list_name.addr = alloca i8*, align 8
  %cells_name.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %out_args.addr = alloca %struct.of_phandle_args*, align 8
  %cell_count = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !4509, metadata !DIExpression()), !dbg !4510
  store i8* %list_name, i8** %list_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %list_name.addr, metadata !4511, metadata !DIExpression()), !dbg !4512
  store i8* %cells_name, i8** %cells_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cells_name.addr, metadata !4513, metadata !DIExpression()), !dbg !4514
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4515, metadata !DIExpression()), !dbg !4516
  store %struct.of_phandle_args* %out_args, %struct.of_phandle_args** %out_args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args** %out_args.addr, metadata !4517, metadata !DIExpression()), !dbg !4518
  call void @llvm.dbg.declare(metadata i32* %cell_count, metadata !4519, metadata !DIExpression()), !dbg !4520
  store i32 -1, i32* %cell_count, align 4, !dbg !4520
  %0 = load i32, i32* %index.addr, align 4, !dbg !4521
  %cmp = icmp slt i32 %0, 0, !dbg !4523
  br i1 %cmp, label %if.then, label %if.end, !dbg !4524

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !4525
  br label %return, !dbg !4525

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %cells_name.addr, align 8, !dbg !4526
  %tobool = icmp ne i8* %1, null, !dbg !4526
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !4528

if.then1:                                         ; preds = %if.end
  store i32 0, i32* %cell_count, align 4, !dbg !4529
  br label %if.end2, !dbg !4530

if.end2:                                          ; preds = %if.then1, %if.end
  %2 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !4531
  %3 = load i8*, i8** %list_name.addr, align 8, !dbg !4532
  %4 = load i8*, i8** %cells_name.addr, align 8, !dbg !4533
  %5 = load i32, i32* %cell_count, align 4, !dbg !4534
  %6 = load i32, i32* %index.addr, align 4, !dbg !4535
  %7 = load %struct.of_phandle_args*, %struct.of_phandle_args** %out_args.addr, align 8, !dbg !4536
  %call = call i32 @__of_parse_phandle_with_args(%struct.device_node* %2, i8* %3, i8* %4, i32 %5, i32 %6, %struct.of_phandle_args* %7) #10, !dbg !4537
  store i32 %call, i32* %retval, align 4, !dbg !4538
  br label %return, !dbg !4538

return:                                           ; preds = %if.end2, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !4539
  ret i32 %8, !dbg !4539
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device_node* @of_parse_phandle(%struct.device_node* %np, i8* %phandle_name, i32 %index) #0 !dbg !4540 {
entry:
  %retval = alloca %struct.device_node*, align 8
  %np.addr = alloca %struct.device_node*, align 8
  %phandle_name.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %args = alloca %struct.of_phandle_args, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !4543, metadata !DIExpression()), !dbg !4544
  store i8* %phandle_name, i8** %phandle_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %phandle_name.addr, metadata !4545, metadata !DIExpression()), !dbg !4546
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4547, metadata !DIExpression()), !dbg !4548
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args* %args, metadata !4549, metadata !DIExpression()), !dbg !4550
  %0 = load i32, i32* %index.addr, align 4, !dbg !4551
  %cmp = icmp slt i32 %0, 0, !dbg !4553
  br i1 %cmp, label %if.then, label %if.end, !dbg !4554

if.then:                                          ; preds = %entry
  store %struct.device_node* null, %struct.device_node** %retval, align 8, !dbg !4555
  br label %return, !dbg !4555

if.end:                                           ; preds = %entry
  %1 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !4556
  %2 = load i8*, i8** %phandle_name.addr, align 8, !dbg !4558
  %3 = load i32, i32* %index.addr, align 4, !dbg !4559
  %call = call i32 @__of_parse_phandle_with_args(%struct.device_node* %1, i8* %2, i8* null, i32 0, i32 %3, %struct.of_phandle_args* %args) #10, !dbg !4560
  %tobool = icmp ne i32 %call, 0, !dbg !4560
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !4561

if.then1:                                         ; preds = %if.end
  store %struct.device_node* null, %struct.device_node** %retval, align 8, !dbg !4562
  br label %return, !dbg !4562

if.end2:                                          ; preds = %if.end
  %np3 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %args, i32 0, i32 0, !dbg !4563
  %4 = load %struct.device_node*, %struct.device_node** %np3, align 8, !dbg !4563
  store %struct.device_node* %4, %struct.device_node** %retval, align 8, !dbg !4564
  br label %return, !dbg !4564

return:                                           ; preds = %if.end2, %if.then1, %if.then
  %5 = load %struct.device_node*, %struct.device_node** %retval, align 8, !dbg !4565
  ret %struct.device_node* %5, !dbg !4565
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_device_is_compatible(%struct.device_node* %device, i8* %compat) #0 !dbg !4566 {
entry:
  %device.addr = alloca %struct.device_node*, align 8
  %compat.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %res = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy4 = alloca i64, align 8
  %__dummy25 = alloca i64, align 8
  %tmp8 = alloca i32, align 4
  %__dummy18 = alloca i64, align 8
  %__dummy219 = alloca i64, align 8
  %tmp22 = alloca i32, align 4
  %__dummy26 = alloca i64, align 8
  %__dummy227 = alloca i64, align 8
  %tmp30 = alloca i32, align 4
  store %struct.device_node* %device, %struct.device_node** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %device.addr, metadata !4569, metadata !DIExpression()), !dbg !4570
  store i8* %compat, i8** %compat.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %compat.addr, metadata !4571, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4573, metadata !DIExpression()), !dbg !4574
  call void @llvm.dbg.declare(metadata i32* %res, metadata !4575, metadata !DIExpression()), !dbg !4576
  br label %do.body, !dbg !4577

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4578, metadata !DIExpression()), !dbg !4581
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4582, metadata !DIExpression()), !dbg !4581
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !4581
  %conv = zext i1 %cmp to i32, !dbg !4581
  store i32 1, i32* %tmp, align 4, !dbg !4581
  %0 = load i32, i32* %tmp, align 4, !dbg !4581
  br label %do.body1, !dbg !4583

do.body1:                                         ; preds = %do.body
  br label %do.body2, !dbg !4584

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !4586

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy4, metadata !4588, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.declare(metadata i64* %__dummy25, metadata !4592, metadata !DIExpression()), !dbg !4591
  %cmp6 = icmp eq i64* %__dummy4, %__dummy25, !dbg !4591
  %conv7 = zext i1 %cmp6 to i32, !dbg !4591
  store i32 1, i32* %tmp8, align 4, !dbg !4591
  %1 = load i32, i32* %tmp8, align 4, !dbg !4591
  %call = call i64 @arch_local_irq_save() #10, !dbg !4593
  store i64 %call, i64* %flags, align 8, !dbg !4593
  br label %do.end, !dbg !4593

do.end:                                           ; preds = %do.body3
  br label %do.end9, !dbg !4586

do.end9:                                          ; preds = %do.end
  br label %do.body10, !dbg !4584

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !4594, !srcloc !4596
  br label %do.body11, !dbg !4594

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !4597

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !4594

do.end13:                                         ; preds = %do.end12
  br label %do.end14, !dbg !4584

do.end14:                                         ; preds = %do.end13
  br label %do.end15, !dbg !4583

do.end15:                                         ; preds = %do.end14
  %2 = load %struct.device_node*, %struct.device_node** %device.addr, align 8, !dbg !4599
  %3 = load i8*, i8** %compat.addr, align 8, !dbg !4600
  %call16 = call i32 @__of_device_is_compatible(%struct.device_node* %2, i8* %3, i8* null, i8* null) #10, !dbg !4601
  store i32 %call16, i32* %res, align 4, !dbg !4602
  br label %do.body17, !dbg !4603

do.body17:                                        ; preds = %do.end15
  call void @llvm.dbg.declare(metadata i64* %__dummy18, metadata !4604, metadata !DIExpression()), !dbg !4607
  call void @llvm.dbg.declare(metadata i64* %__dummy219, metadata !4608, metadata !DIExpression()), !dbg !4607
  %cmp20 = icmp eq i64* %__dummy18, %__dummy219, !dbg !4607
  %conv21 = zext i1 %cmp20 to i32, !dbg !4607
  store i32 1, i32* %tmp22, align 4, !dbg !4607
  %4 = load i32, i32* %tmp22, align 4, !dbg !4607
  br label %do.body23, !dbg !4609

do.body23:                                        ; preds = %do.body17
  br label %do.body24, !dbg !4610

do.body24:                                        ; preds = %do.body23
  br label %do.body25, !dbg !4612

do.body25:                                        ; preds = %do.body24
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !4614, metadata !DIExpression()), !dbg !4617
  call void @llvm.dbg.declare(metadata i64* %__dummy227, metadata !4618, metadata !DIExpression()), !dbg !4617
  %cmp28 = icmp eq i64* %__dummy26, %__dummy227, !dbg !4617
  %conv29 = zext i1 %cmp28 to i32, !dbg !4617
  store i32 1, i32* %tmp30, align 4, !dbg !4617
  %5 = load i32, i32* %tmp30, align 4, !dbg !4617
  %6 = load i64, i64* %flags, align 8, !dbg !4619
  call void @arch_local_irq_restore(i64 %6) #10, !dbg !4619
  br label %do.end31, !dbg !4619

do.end31:                                         ; preds = %do.body25
  br label %do.end32, !dbg !4612

do.end32:                                         ; preds = %do.end31
  br label %do.body33, !dbg !4610

do.body33:                                        ; preds = %do.end32
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !4620, !srcloc !4622
  br label %do.body34, !dbg !4620

do.body34:                                        ; preds = %do.body33
  br label %do.end35, !dbg !4623

do.end35:                                         ; preds = %do.body34
  br label %do.end36, !dbg !4620

do.end36:                                         ; preds = %do.end35
  br label %do.end37, !dbg !4610

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !4609

do.end38:                                         ; preds = %do.end37
  %7 = load i32, i32* %res, align 4, !dbg !4625
  ret i32 %7, !dbg !4626
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__of_device_is_compatible(%struct.device_node* %device, i8* %compat, i8* %type, i8* %name) #0 !dbg !4627 {
entry:
  %retval = alloca i32, align 4
  %device.addr = alloca %struct.device_node*, align 8
  %compat.addr = alloca i8*, align 8
  %type.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %prop = alloca %struct.property*, align 8
  %cp = alloca i8*, align 8
  %index = alloca i32, align 4
  %score = alloca i32, align 4
  store %struct.device_node* %device, %struct.device_node** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %device.addr, metadata !4630, metadata !DIExpression()), !dbg !4631
  store i8* %compat, i8** %compat.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %compat.addr, metadata !4632, metadata !DIExpression()), !dbg !4633
  store i8* %type, i8** %type.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %type.addr, metadata !4634, metadata !DIExpression()), !dbg !4635
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4636, metadata !DIExpression()), !dbg !4637
  call void @llvm.dbg.declare(metadata %struct.property** %prop, metadata !4638, metadata !DIExpression()), !dbg !4639
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !4640, metadata !DIExpression()), !dbg !4641
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4642, metadata !DIExpression()), !dbg !4643
  store i32 0, i32* %index, align 4, !dbg !4643
  call void @llvm.dbg.declare(metadata i32* %score, metadata !4644, metadata !DIExpression()), !dbg !4645
  store i32 0, i32* %score, align 4, !dbg !4645
  %0 = load i8*, i8** %compat.addr, align 8, !dbg !4646
  %tobool = icmp ne i8* %0, null, !dbg !4646
  br i1 %tobool, label %land.lhs.true, label %if.end11, !dbg !4648

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %compat.addr, align 8, !dbg !4649
  %arrayidx = getelementptr i8, i8* %1, i64 0, !dbg !4649
  %2 = load i8, i8* %arrayidx, align 1, !dbg !4649
  %conv = sext i8 %2 to i32, !dbg !4649
  %tobool1 = icmp ne i32 %conv, 0, !dbg !4649
  br i1 %tobool1, label %if.then, label %if.end11, !dbg !4650

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.device_node*, %struct.device_node** %device.addr, align 8, !dbg !4651
  %call = call %struct.property* @__of_find_property(%struct.device_node* %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i32* null) #10, !dbg !4653
  store %struct.property* %call, %struct.property** %prop, align 8, !dbg !4654
  %4 = load %struct.property*, %struct.property** %prop, align 8, !dbg !4655
  %call2 = call i8* @of_prop_next_string(%struct.property* %4, i8* null) #10, !dbg !4657
  store i8* %call2, i8** %cp, align 8, !dbg !4658
  br label %for.cond, !dbg !4659

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load i8*, i8** %cp, align 8, !dbg !4660
  %tobool3 = icmp ne i8* %5, null, !dbg !4662
  br i1 %tobool3, label %for.body, label %for.end, !dbg !4662

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %cp, align 8, !dbg !4663
  %7 = load i8*, i8** %compat.addr, align 8, !dbg !4663
  %call4 = call i32 @strcasecmp(i8* %6, i8* %7) #10, !dbg !4663
  %cmp = icmp eq i32 %call4, 0, !dbg !4666
  br i1 %cmp, label %if.then6, label %if.end, !dbg !4667

if.then6:                                         ; preds = %for.body
  %8 = load i32, i32* %index, align 4, !dbg !4668
  %shl = shl i32 %8, 2, !dbg !4670
  %sub = sub i32 1073741823, %shl, !dbg !4671
  store i32 %sub, i32* %score, align 4, !dbg !4672
  br label %for.end, !dbg !4673

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4674

for.inc:                                          ; preds = %if.end
  %9 = load %struct.property*, %struct.property** %prop, align 8, !dbg !4675
  %10 = load i8*, i8** %cp, align 8, !dbg !4676
  %call7 = call i8* @of_prop_next_string(%struct.property* %9, i8* %10) #10, !dbg !4677
  store i8* %call7, i8** %cp, align 8, !dbg !4678
  %11 = load i32, i32* %index, align 4, !dbg !4679
  %inc = add i32 %11, 1, !dbg !4679
  store i32 %inc, i32* %index, align 4, !dbg !4679
  br label %for.cond, !dbg !4680, !llvm.loop !4681

for.end:                                          ; preds = %if.then6, %for.cond
  %12 = load i32, i32* %score, align 4, !dbg !4683
  %tobool8 = icmp ne i32 %12, 0, !dbg !4683
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !4685

if.then9:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !4686
  br label %return, !dbg !4686

if.end10:                                         ; preds = %for.end
  br label %if.end11, !dbg !4687

if.end11:                                         ; preds = %if.end10, %land.lhs.true, %entry
  %13 = load i8*, i8** %type.addr, align 8, !dbg !4688
  %tobool12 = icmp ne i8* %13, null, !dbg !4688
  br i1 %tobool12, label %land.lhs.true13, label %if.end21, !dbg !4690

land.lhs.true13:                                  ; preds = %if.end11
  %14 = load i8*, i8** %type.addr, align 8, !dbg !4691
  %arrayidx14 = getelementptr i8, i8* %14, i64 0, !dbg !4691
  %15 = load i8, i8* %arrayidx14, align 1, !dbg !4691
  %conv15 = sext i8 %15 to i32, !dbg !4691
  %tobool16 = icmp ne i32 %conv15, 0, !dbg !4691
  br i1 %tobool16, label %if.then17, label %if.end21, !dbg !4692

if.then17:                                        ; preds = %land.lhs.true13
  %16 = load %struct.device_node*, %struct.device_node** %device.addr, align 8, !dbg !4693
  %17 = load i8*, i8** %type.addr, align 8, !dbg !4696
  %call18 = call zeroext i1 @__of_node_is_type(%struct.device_node* %16, i8* %17) #10, !dbg !4697
  br i1 %call18, label %if.end20, label %if.then19, !dbg !4698

if.then19:                                        ; preds = %if.then17
  store i32 0, i32* %retval, align 4, !dbg !4699
  br label %return, !dbg !4699

if.end20:                                         ; preds = %if.then17
  %18 = load i32, i32* %score, align 4, !dbg !4700
  %add = add i32 %18, 2, !dbg !4700
  store i32 %add, i32* %score, align 4, !dbg !4700
  br label %if.end21, !dbg !4701

if.end21:                                         ; preds = %if.end20, %land.lhs.true13, %if.end11
  %19 = load i8*, i8** %name.addr, align 8, !dbg !4702
  %tobool22 = icmp ne i8* %19, null, !dbg !4702
  br i1 %tobool22, label %land.lhs.true23, label %if.end32, !dbg !4704

land.lhs.true23:                                  ; preds = %if.end21
  %20 = load i8*, i8** %name.addr, align 8, !dbg !4705
  %arrayidx24 = getelementptr i8, i8* %20, i64 0, !dbg !4705
  %21 = load i8, i8* %arrayidx24, align 1, !dbg !4705
  %conv25 = sext i8 %21 to i32, !dbg !4705
  %tobool26 = icmp ne i32 %conv25, 0, !dbg !4705
  br i1 %tobool26, label %if.then27, label %if.end32, !dbg !4706

if.then27:                                        ; preds = %land.lhs.true23
  %22 = load %struct.device_node*, %struct.device_node** %device.addr, align 8, !dbg !4707
  %23 = load i8*, i8** %name.addr, align 8, !dbg !4710
  %call28 = call zeroext i1 @of_node_name_eq(%struct.device_node* %22, i8* %23) #10, !dbg !4711
  br i1 %call28, label %if.end30, label %if.then29, !dbg !4712

if.then29:                                        ; preds = %if.then27
  store i32 0, i32* %retval, align 4, !dbg !4713
  br label %return, !dbg !4713

if.end30:                                         ; preds = %if.then27
  %24 = load i32, i32* %score, align 4, !dbg !4714
  %inc31 = add i32 %24, 1, !dbg !4714
  store i32 %inc31, i32* %score, align 4, !dbg !4714
  br label %if.end32, !dbg !4715

if.end32:                                         ; preds = %if.end30, %land.lhs.true23, %if.end21
  %25 = load i32, i32* %score, align 4, !dbg !4716
  store i32 %25, i32* %retval, align 4, !dbg !4717
  br label %return, !dbg !4717

return:                                           ; preds = %if.end32, %if.then29, %if.then19, %if.then9
  %26 = load i32, i32* %retval, align 4, !dbg !4718
  ret i32 %26, !dbg !4718
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_device_compatible_match(%struct.device_node* %device, i8** %compat) #0 !dbg !4719 {
entry:
  %retval = alloca i32, align 4
  %device.addr = alloca %struct.device_node*, align 8
  %compat.addr = alloca i8**, align 8
  %tmp = alloca i32, align 4
  %score = alloca i32, align 4
  store %struct.device_node* %device, %struct.device_node** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %device.addr, metadata !4724, metadata !DIExpression()), !dbg !4725
  store i8** %compat, i8*** %compat.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %compat.addr, metadata !4726, metadata !DIExpression()), !dbg !4727
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !4728, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.declare(metadata i32* %score, metadata !4730, metadata !DIExpression()), !dbg !4731
  store i32 0, i32* %score, align 4, !dbg !4731
  %0 = load i8**, i8*** %compat.addr, align 8, !dbg !4732
  %tobool = icmp ne i8** %0, null, !dbg !4732
  br i1 %tobool, label %if.end, label %if.then, !dbg !4734

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4735
  br label %return, !dbg !4735

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !4736

while.cond:                                       ; preds = %if.end3, %if.end
  %1 = load i8**, i8*** %compat.addr, align 8, !dbg !4737
  %2 = load i8*, i8** %1, align 8, !dbg !4738
  %tobool1 = icmp ne i8* %2, null, !dbg !4736
  br i1 %tobool1, label %while.body, label %while.end, !dbg !4736

while.body:                                       ; preds = %while.cond
  %3 = load %struct.device_node*, %struct.device_node** %device.addr, align 8, !dbg !4739
  %4 = load i8**, i8*** %compat.addr, align 8, !dbg !4741
  %5 = load i8*, i8** %4, align 8, !dbg !4742
  %call = call i32 @of_device_is_compatible(%struct.device_node* %3, i8* %5) #10, !dbg !4743
  store i32 %call, i32* %tmp, align 4, !dbg !4744
  %6 = load i32, i32* %tmp, align 4, !dbg !4745
  %7 = load i32, i32* %score, align 4, !dbg !4747
  %cmp = icmp ugt i32 %6, %7, !dbg !4748
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !4749

if.then2:                                         ; preds = %while.body
  %8 = load i32, i32* %tmp, align 4, !dbg !4750
  store i32 %8, i32* %score, align 4, !dbg !4751
  br label %if.end3, !dbg !4752

if.end3:                                          ; preds = %if.then2, %while.body
  %9 = load i8**, i8*** %compat.addr, align 8, !dbg !4753
  %incdec.ptr = getelementptr i8*, i8** %9, i32 1, !dbg !4753
  store i8** %incdec.ptr, i8*** %compat.addr, align 8, !dbg !4753
  br label %while.cond, !dbg !4736, !llvm.loop !4754

while.end:                                        ; preds = %while.cond
  %10 = load i32, i32* %score, align 4, !dbg !4756
  store i32 %10, i32* %retval, align 4, !dbg !4757
  br label %return, !dbg !4757

return:                                           ; preds = %while.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !4758
  ret i32 %11, !dbg !4758
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_machine_is_compatible(i8* %compat) #0 !dbg !4759 {
entry:
  %compat.addr = alloca i8*, align 8
  %root = alloca %struct.device_node*, align 8
  %rc = alloca i32, align 4
  store i8* %compat, i8** %compat.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %compat.addr, metadata !4762, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.declare(metadata %struct.device_node** %root, metadata !4764, metadata !DIExpression()), !dbg !4765
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !4766, metadata !DIExpression()), !dbg !4767
  store i32 0, i32* %rc, align 4, !dbg !4767
  %call = call %struct.device_node* @of_find_node_by_path(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #10, !dbg !4768
  store %struct.device_node* %call, %struct.device_node** %root, align 8, !dbg !4769
  %0 = load %struct.device_node*, %struct.device_node** %root, align 8, !dbg !4770
  %tobool = icmp ne %struct.device_node* %0, null, !dbg !4770
  br i1 %tobool, label %if.then, label %if.end, !dbg !4772

if.then:                                          ; preds = %entry
  %1 = load %struct.device_node*, %struct.device_node** %root, align 8, !dbg !4773
  %2 = load i8*, i8** %compat.addr, align 8, !dbg !4775
  %call1 = call i32 @of_device_is_compatible(%struct.device_node* %1, i8* %2) #10, !dbg !4776
  store i32 %call1, i32* %rc, align 4, !dbg !4777
  %3 = load %struct.device_node*, %struct.device_node** %root, align 8, !dbg !4778
  call void @of_node_put(%struct.device_node* %3) #10, !dbg !4779
  br label %if.end, !dbg !4780

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %rc, align 4, !dbg !4781
  ret i32 %4, !dbg !4782
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device_node* @of_find_node_by_path(i8* %path) #0 !dbg !4783 {
entry:
  %path.addr = alloca i8*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !4786, metadata !DIExpression()), !dbg !4787
  %0 = load i8*, i8** %path.addr, align 8, !dbg !4788
  %call = call %struct.device_node* @of_find_node_opts_by_path(i8* %0, i8** null) #10, !dbg !4789
  ret %struct.device_node* %call, !dbg !4790
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @of_device_is_available(%struct.device_node* %device) #0 !dbg !4791 {
entry:
  %device.addr = alloca %struct.device_node*, align 8
  %flags = alloca i64, align 8
  %res = alloca i8, align 1
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy4 = alloca i64, align 8
  %__dummy25 = alloca i64, align 8
  %tmp8 = alloca i32, align 4
  %__dummy18 = alloca i64, align 8
  %__dummy219 = alloca i64, align 8
  %tmp22 = alloca i32, align 4
  %__dummy26 = alloca i64, align 8
  %__dummy227 = alloca i64, align 8
  %tmp30 = alloca i32, align 4
  store %struct.device_node* %device, %struct.device_node** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %device.addr, metadata !4794, metadata !DIExpression()), !dbg !4795
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4796, metadata !DIExpression()), !dbg !4797
  call void @llvm.dbg.declare(metadata i8* %res, metadata !4798, metadata !DIExpression()), !dbg !4799
  br label %do.body, !dbg !4800

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4801, metadata !DIExpression()), !dbg !4804
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4805, metadata !DIExpression()), !dbg !4804
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !4804
  %conv = zext i1 %cmp to i32, !dbg !4804
  store i32 1, i32* %tmp, align 4, !dbg !4804
  %0 = load i32, i32* %tmp, align 4, !dbg !4804
  br label %do.body1, !dbg !4806

do.body1:                                         ; preds = %do.body
  br label %do.body2, !dbg !4807

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !4809

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy4, metadata !4811, metadata !DIExpression()), !dbg !4814
  call void @llvm.dbg.declare(metadata i64* %__dummy25, metadata !4815, metadata !DIExpression()), !dbg !4814
  %cmp6 = icmp eq i64* %__dummy4, %__dummy25, !dbg !4814
  %conv7 = zext i1 %cmp6 to i32, !dbg !4814
  store i32 1, i32* %tmp8, align 4, !dbg !4814
  %1 = load i32, i32* %tmp8, align 4, !dbg !4814
  %call = call i64 @arch_local_irq_save() #10, !dbg !4816
  store i64 %call, i64* %flags, align 8, !dbg !4816
  br label %do.end, !dbg !4816

do.end:                                           ; preds = %do.body3
  br label %do.end9, !dbg !4809

do.end9:                                          ; preds = %do.end
  br label %do.body10, !dbg !4807

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !4817, !srcloc !4819
  br label %do.body11, !dbg !4817

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !4820

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !4817

do.end13:                                         ; preds = %do.end12
  br label %do.end14, !dbg !4807

do.end14:                                         ; preds = %do.end13
  br label %do.end15, !dbg !4806

do.end15:                                         ; preds = %do.end14
  %2 = load %struct.device_node*, %struct.device_node** %device.addr, align 8, !dbg !4822
  %call16 = call zeroext i1 @__of_device_is_available(%struct.device_node* %2) #10, !dbg !4823
  %frombool = zext i1 %call16 to i8, !dbg !4824
  store i8 %frombool, i8* %res, align 1, !dbg !4824
  br label %do.body17, !dbg !4825

do.body17:                                        ; preds = %do.end15
  call void @llvm.dbg.declare(metadata i64* %__dummy18, metadata !4826, metadata !DIExpression()), !dbg !4829
  call void @llvm.dbg.declare(metadata i64* %__dummy219, metadata !4830, metadata !DIExpression()), !dbg !4829
  %cmp20 = icmp eq i64* %__dummy18, %__dummy219, !dbg !4829
  %conv21 = zext i1 %cmp20 to i32, !dbg !4829
  store i32 1, i32* %tmp22, align 4, !dbg !4829
  %3 = load i32, i32* %tmp22, align 4, !dbg !4829
  br label %do.body23, !dbg !4831

do.body23:                                        ; preds = %do.body17
  br label %do.body24, !dbg !4832

do.body24:                                        ; preds = %do.body23
  br label %do.body25, !dbg !4834

do.body25:                                        ; preds = %do.body24
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !4836, metadata !DIExpression()), !dbg !4839
  call void @llvm.dbg.declare(metadata i64* %__dummy227, metadata !4840, metadata !DIExpression()), !dbg !4839
  %cmp28 = icmp eq i64* %__dummy26, %__dummy227, !dbg !4839
  %conv29 = zext i1 %cmp28 to i32, !dbg !4839
  store i32 1, i32* %tmp30, align 4, !dbg !4839
  %4 = load i32, i32* %tmp30, align 4, !dbg !4839
  %5 = load i64, i64* %flags, align 8, !dbg !4841
  call void @arch_local_irq_restore(i64 %5) #10, !dbg !4841
  br label %do.end31, !dbg !4841

do.end31:                                         ; preds = %do.body25
  br label %do.end32, !dbg !4834

do.end32:                                         ; preds = %do.end31
  br label %do.body33, !dbg !4832

do.body33:                                        ; preds = %do.end32
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !4842, !srcloc !4844
  br label %do.body34, !dbg !4842

do.body34:                                        ; preds = %do.body33
  br label %do.end35, !dbg !4845

do.end35:                                         ; preds = %do.body34
  br label %do.end36, !dbg !4842

do.end36:                                         ; preds = %do.end35
  br label %do.end37, !dbg !4832

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !4831

do.end38:                                         ; preds = %do.end37
  %6 = load i8, i8* %res, align 1, !dbg !4847
  %tobool = trunc i8 %6 to i1, !dbg !4847
  ret i1 %tobool, !dbg !4848
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__of_device_is_available(%struct.device_node* %device) #0 !dbg !4849 {
entry:
  %retval = alloca i1, align 1
  %device.addr = alloca %struct.device_node*, align 8
  %status = alloca i8*, align 8
  %statlen = alloca i32, align 4
  store %struct.device_node* %device, %struct.device_node** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %device.addr, metadata !4850, metadata !DIExpression()), !dbg !4851
  call void @llvm.dbg.declare(metadata i8** %status, metadata !4852, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.declare(metadata i32* %statlen, metadata !4854, metadata !DIExpression()), !dbg !4855
  %0 = load %struct.device_node*, %struct.device_node** %device.addr, align 8, !dbg !4856
  %tobool = icmp ne %struct.device_node* %0, null, !dbg !4856
  br i1 %tobool, label %if.end, label %if.then, !dbg !4858

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !4859
  br label %return, !dbg !4859

if.end:                                           ; preds = %entry
  %1 = load %struct.device_node*, %struct.device_node** %device.addr, align 8, !dbg !4860
  %call = call i8* @__of_get_property(%struct.device_node* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i64 0, i64 0), i32* %statlen) #10, !dbg !4861
  store i8* %call, i8** %status, align 8, !dbg !4862
  %2 = load i8*, i8** %status, align 8, !dbg !4863
  %cmp = icmp eq i8* %2, null, !dbg !4865
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !4866

if.then1:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !4867
  br label %return, !dbg !4867

if.end2:                                          ; preds = %if.end
  %3 = load i32, i32* %statlen, align 4, !dbg !4868
  %cmp3 = icmp sgt i32 %3, 0, !dbg !4870
  br i1 %cmp3, label %if.then4, label %if.end11, !dbg !4871

if.then4:                                         ; preds = %if.end2
  %4 = load i8*, i8** %status, align 8, !dbg !4872
  %call5 = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i64 0, i64 0)) #10, !dbg !4875
  %tobool6 = icmp ne i32 %call5, 0, !dbg !4875
  br i1 %tobool6, label %lor.lhs.false, label %if.then9, !dbg !4876

lor.lhs.false:                                    ; preds = %if.then4
  %5 = load i8*, i8** %status, align 8, !dbg !4877
  %call7 = call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45, i64 0, i64 0)) #10, !dbg !4878
  %tobool8 = icmp ne i32 %call7, 0, !dbg !4878
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !4879

if.then9:                                         ; preds = %lor.lhs.false, %if.then4
  store i1 true, i1* %retval, align 1, !dbg !4880
  br label %return, !dbg !4880

if.end10:                                         ; preds = %lor.lhs.false
  br label %if.end11, !dbg !4881

if.end11:                                         ; preds = %if.end10, %if.end2
  store i1 false, i1* %retval, align 1, !dbg !4882
  br label %return, !dbg !4882

return:                                           ; preds = %if.end11, %if.then9, %if.then1, %if.then
  %6 = load i1, i1* %retval, align 1, !dbg !4883
  ret i1 %6, !dbg !4883
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @of_device_is_big_endian(%struct.device_node* %device) #0 !dbg !4884 {
entry:
  %retval = alloca i1, align 1
  %device.addr = alloca %struct.device_node*, align 8
  store %struct.device_node* %device, %struct.device_node** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %device.addr, metadata !4885, metadata !DIExpression()), !dbg !4886
  %0 = load %struct.device_node*, %struct.device_node** %device.addr, align 8, !dbg !4887
  %call = call zeroext i1 @of_property_read_bool(%struct.device_node* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0)) #10, !dbg !4889
  br i1 %call, label %if.then, label %if.end, !dbg !4890

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !4891
  br label %return, !dbg !4891

if.end:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !4892
  br label %return, !dbg !4892

return:                                           ; preds = %if.end, %if.then
  %1 = load i1, i1* %retval, align 1, !dbg !4893
  ret i1 %1, !dbg !4893
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @of_property_read_bool(%struct.device_node* %np, i8* %propname) #0 !dbg !4894 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %propname.addr = alloca i8*, align 8
  %prop = alloca %struct.property*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !4895, metadata !DIExpression()), !dbg !4896
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !4897, metadata !DIExpression()), !dbg !4898
  call void @llvm.dbg.declare(metadata %struct.property** %prop, metadata !4899, metadata !DIExpression()), !dbg !4900
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !4901
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !4902
  %call = call %struct.property* @of_find_property(%struct.device_node* %0, i8* %1, i32* null) #10, !dbg !4903
  store %struct.property* %call, %struct.property** %prop, align 8, !dbg !4900
  %2 = load %struct.property*, %struct.property** %prop, align 8, !dbg !4904
  %tobool = icmp ne %struct.property* %2, null, !dbg !4904
  %3 = zext i1 %tobool to i64, !dbg !4904
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !4904
  %tobool1 = icmp ne i32 %cond, 0, !dbg !4904
  ret i1 %tobool1, !dbg !4905
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device_node* @of_get_parent(%struct.device_node* %node) #0 !dbg !4906 {
entry:
  %retval = alloca %struct.device_node*, align 8
  %node.addr = alloca %struct.device_node*, align 8
  %np = alloca %struct.device_node*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy4 = alloca i64, align 8
  %__dummy25 = alloca i64, align 8
  %tmp8 = alloca i32, align 4
  %__dummy18 = alloca i64, align 8
  %__dummy219 = alloca i64, align 8
  %tmp22 = alloca i32, align 4
  %__dummy26 = alloca i64, align 8
  %__dummy227 = alloca i64, align 8
  %tmp30 = alloca i32, align 4
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !4909, metadata !DIExpression()), !dbg !4910
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !4911, metadata !DIExpression()), !dbg !4912
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4913, metadata !DIExpression()), !dbg !4914
  %0 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !4915
  %tobool = icmp ne %struct.device_node* %0, null, !dbg !4915
  br i1 %tobool, label %if.end, label %if.then, !dbg !4917

if.then:                                          ; preds = %entry
  store %struct.device_node* null, %struct.device_node** %retval, align 8, !dbg !4918
  br label %return, !dbg !4918

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !4919

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4920, metadata !DIExpression()), !dbg !4923
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4924, metadata !DIExpression()), !dbg !4923
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !4923
  %conv = zext i1 %cmp to i32, !dbg !4923
  store i32 1, i32* %tmp, align 4, !dbg !4923
  %1 = load i32, i32* %tmp, align 4, !dbg !4923
  br label %do.body1, !dbg !4925

do.body1:                                         ; preds = %do.body
  br label %do.body2, !dbg !4926

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !4928

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy4, metadata !4930, metadata !DIExpression()), !dbg !4933
  call void @llvm.dbg.declare(metadata i64* %__dummy25, metadata !4934, metadata !DIExpression()), !dbg !4933
  %cmp6 = icmp eq i64* %__dummy4, %__dummy25, !dbg !4933
  %conv7 = zext i1 %cmp6 to i32, !dbg !4933
  store i32 1, i32* %tmp8, align 4, !dbg !4933
  %2 = load i32, i32* %tmp8, align 4, !dbg !4933
  %call = call i64 @arch_local_irq_save() #10, !dbg !4935
  store i64 %call, i64* %flags, align 8, !dbg !4935
  br label %do.end, !dbg !4935

do.end:                                           ; preds = %do.body3
  br label %do.end9, !dbg !4928

do.end9:                                          ; preds = %do.end
  br label %do.body10, !dbg !4926

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !4936, !srcloc !4938
  br label %do.body11, !dbg !4936

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !4939

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !4936

do.end13:                                         ; preds = %do.end12
  br label %do.end14, !dbg !4926

do.end14:                                         ; preds = %do.end13
  br label %do.end15, !dbg !4925

do.end15:                                         ; preds = %do.end14
  %3 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !4941
  %parent = getelementptr inbounds %struct.device_node, %struct.device_node* %3, i32 0, i32 6, !dbg !4942
  %4 = load %struct.device_node*, %struct.device_node** %parent, align 8, !dbg !4942
  %call16 = call %struct.device_node* @of_node_get(%struct.device_node* %4) #10, !dbg !4943
  store %struct.device_node* %call16, %struct.device_node** %np, align 8, !dbg !4944
  br label %do.body17, !dbg !4945

do.body17:                                        ; preds = %do.end15
  call void @llvm.dbg.declare(metadata i64* %__dummy18, metadata !4946, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.declare(metadata i64* %__dummy219, metadata !4950, metadata !DIExpression()), !dbg !4949
  %cmp20 = icmp eq i64* %__dummy18, %__dummy219, !dbg !4949
  %conv21 = zext i1 %cmp20 to i32, !dbg !4949
  store i32 1, i32* %tmp22, align 4, !dbg !4949
  %5 = load i32, i32* %tmp22, align 4, !dbg !4949
  br label %do.body23, !dbg !4951

do.body23:                                        ; preds = %do.body17
  br label %do.body24, !dbg !4952

do.body24:                                        ; preds = %do.body23
  br label %do.body25, !dbg !4954

do.body25:                                        ; preds = %do.body24
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !4956, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.declare(metadata i64* %__dummy227, metadata !4960, metadata !DIExpression()), !dbg !4959
  %cmp28 = icmp eq i64* %__dummy26, %__dummy227, !dbg !4959
  %conv29 = zext i1 %cmp28 to i32, !dbg !4959
  store i32 1, i32* %tmp30, align 4, !dbg !4959
  %6 = load i32, i32* %tmp30, align 4, !dbg !4959
  %7 = load i64, i64* %flags, align 8, !dbg !4961
  call void @arch_local_irq_restore(i64 %7) #10, !dbg !4961
  br label %do.end31, !dbg !4961

do.end31:                                         ; preds = %do.body25
  br label %do.end32, !dbg !4954

do.end32:                                         ; preds = %do.end31
  br label %do.body33, !dbg !4952

do.body33:                                        ; preds = %do.end32
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !4962, !srcloc !4964
  br label %do.body34, !dbg !4962

do.body34:                                        ; preds = %do.body33
  br label %do.end35, !dbg !4965

do.end35:                                         ; preds = %do.body34
  br label %do.end36, !dbg !4962

do.end36:                                         ; preds = %do.end35
  br label %do.end37, !dbg !4952

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !4951

do.end38:                                         ; preds = %do.end37
  %8 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !4967
  store %struct.device_node* %8, %struct.device_node** %retval, align 8, !dbg !4968
  br label %return, !dbg !4968

return:                                           ; preds = %do.end38, %if.then
  %9 = load %struct.device_node*, %struct.device_node** %retval, align 8, !dbg !4969
  ret %struct.device_node* %9, !dbg !4969
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device_node* @of_get_next_parent(%struct.device_node* %node) #0 !dbg !4970 {
entry:
  %retval = alloca %struct.device_node*, align 8
  %node.addr = alloca %struct.device_node*, align 8
  %parent = alloca %struct.device_node*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy4 = alloca i64, align 8
  %__dummy25 = alloca i64, align 8
  %tmp8 = alloca i32, align 4
  %__dummy19 = alloca i64, align 8
  %__dummy220 = alloca i64, align 8
  %tmp23 = alloca i32, align 4
  %__dummy27 = alloca i64, align 8
  %__dummy228 = alloca i64, align 8
  %tmp31 = alloca i32, align 4
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !4971, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.declare(metadata %struct.device_node** %parent, metadata !4973, metadata !DIExpression()), !dbg !4974
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4975, metadata !DIExpression()), !dbg !4976
  %0 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !4977
  %tobool = icmp ne %struct.device_node* %0, null, !dbg !4977
  br i1 %tobool, label %if.end, label %if.then, !dbg !4979

if.then:                                          ; preds = %entry
  store %struct.device_node* null, %struct.device_node** %retval, align 8, !dbg !4980
  br label %return, !dbg !4980

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !4981

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4982, metadata !DIExpression()), !dbg !4985
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4986, metadata !DIExpression()), !dbg !4985
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !4985
  %conv = zext i1 %cmp to i32, !dbg !4985
  store i32 1, i32* %tmp, align 4, !dbg !4985
  %1 = load i32, i32* %tmp, align 4, !dbg !4985
  br label %do.body1, !dbg !4987

do.body1:                                         ; preds = %do.body
  br label %do.body2, !dbg !4988

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !4990

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy4, metadata !4992, metadata !DIExpression()), !dbg !4995
  call void @llvm.dbg.declare(metadata i64* %__dummy25, metadata !4996, metadata !DIExpression()), !dbg !4995
  %cmp6 = icmp eq i64* %__dummy4, %__dummy25, !dbg !4995
  %conv7 = zext i1 %cmp6 to i32, !dbg !4995
  store i32 1, i32* %tmp8, align 4, !dbg !4995
  %2 = load i32, i32* %tmp8, align 4, !dbg !4995
  %call = call i64 @arch_local_irq_save() #10, !dbg !4997
  store i64 %call, i64* %flags, align 8, !dbg !4997
  br label %do.end, !dbg !4997

do.end:                                           ; preds = %do.body3
  br label %do.end9, !dbg !4990

do.end9:                                          ; preds = %do.end
  br label %do.body10, !dbg !4988

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !4998, !srcloc !5000
  br label %do.body11, !dbg !4998

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !5001

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !4998

do.end13:                                         ; preds = %do.end12
  br label %do.end14, !dbg !4988

do.end14:                                         ; preds = %do.end13
  br label %do.end15, !dbg !4987

do.end15:                                         ; preds = %do.end14
  %3 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !5003
  %parent16 = getelementptr inbounds %struct.device_node, %struct.device_node* %3, i32 0, i32 6, !dbg !5004
  %4 = load %struct.device_node*, %struct.device_node** %parent16, align 8, !dbg !5004
  %call17 = call %struct.device_node* @of_node_get(%struct.device_node* %4) #10, !dbg !5005
  store %struct.device_node* %call17, %struct.device_node** %parent, align 8, !dbg !5006
  %5 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !5007
  call void @of_node_put(%struct.device_node* %5) #10, !dbg !5008
  br label %do.body18, !dbg !5009

do.body18:                                        ; preds = %do.end15
  call void @llvm.dbg.declare(metadata i64* %__dummy19, metadata !5010, metadata !DIExpression()), !dbg !5013
  call void @llvm.dbg.declare(metadata i64* %__dummy220, metadata !5014, metadata !DIExpression()), !dbg !5013
  %cmp21 = icmp eq i64* %__dummy19, %__dummy220, !dbg !5013
  %conv22 = zext i1 %cmp21 to i32, !dbg !5013
  store i32 1, i32* %tmp23, align 4, !dbg !5013
  %6 = load i32, i32* %tmp23, align 4, !dbg !5013
  br label %do.body24, !dbg !5015

do.body24:                                        ; preds = %do.body18
  br label %do.body25, !dbg !5016

do.body25:                                        ; preds = %do.body24
  br label %do.body26, !dbg !5018

do.body26:                                        ; preds = %do.body25
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !5020, metadata !DIExpression()), !dbg !5023
  call void @llvm.dbg.declare(metadata i64* %__dummy228, metadata !5024, metadata !DIExpression()), !dbg !5023
  %cmp29 = icmp eq i64* %__dummy27, %__dummy228, !dbg !5023
  %conv30 = zext i1 %cmp29 to i32, !dbg !5023
  store i32 1, i32* %tmp31, align 4, !dbg !5023
  %7 = load i32, i32* %tmp31, align 4, !dbg !5023
  %8 = load i64, i64* %flags, align 8, !dbg !5025
  call void @arch_local_irq_restore(i64 %8) #10, !dbg !5025
  br label %do.end32, !dbg !5025

do.end32:                                         ; preds = %do.body26
  br label %do.end33, !dbg !5018

do.end33:                                         ; preds = %do.end32
  br label %do.body34, !dbg !5016

do.body34:                                        ; preds = %do.end33
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !5026, !srcloc !5028
  br label %do.body35, !dbg !5026

do.body35:                                        ; preds = %do.body34
  br label %do.end36, !dbg !5029

do.end36:                                         ; preds = %do.body35
  br label %do.end37, !dbg !5026

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !5016

do.end38:                                         ; preds = %do.end37
  br label %do.end39, !dbg !5015

do.end39:                                         ; preds = %do.end38
  %9 = load %struct.device_node*, %struct.device_node** %parent, align 8, !dbg !5031
  store %struct.device_node* %9, %struct.device_node** %retval, align 8, !dbg !5032
  br label %return, !dbg !5032

return:                                           ; preds = %do.end39, %if.then
  %10 = load %struct.device_node*, %struct.device_node** %retval, align 8, !dbg !5033
  ret %struct.device_node* %10, !dbg !5033
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device_node* @of_get_next_child(%struct.device_node* %node, %struct.device_node* %prev) #0 !dbg !5034 {
entry:
  %node.addr = alloca %struct.device_node*, align 8
  %prev.addr = alloca %struct.device_node*, align 8
  %next = alloca %struct.device_node*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy4 = alloca i64, align 8
  %__dummy25 = alloca i64, align 8
  %tmp8 = alloca i32, align 4
  %__dummy18 = alloca i64, align 8
  %__dummy219 = alloca i64, align 8
  %tmp22 = alloca i32, align 4
  %__dummy26 = alloca i64, align 8
  %__dummy227 = alloca i64, align 8
  %tmp30 = alloca i32, align 4
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !5037, metadata !DIExpression()), !dbg !5038
  store %struct.device_node* %prev, %struct.device_node** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %prev.addr, metadata !5039, metadata !DIExpression()), !dbg !5040
  call void @llvm.dbg.declare(metadata %struct.device_node** %next, metadata !5041, metadata !DIExpression()), !dbg !5042
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5043, metadata !DIExpression()), !dbg !5044
  br label %do.body, !dbg !5045

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5046, metadata !DIExpression()), !dbg !5049
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5050, metadata !DIExpression()), !dbg !5049
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5049
  %conv = zext i1 %cmp to i32, !dbg !5049
  store i32 1, i32* %tmp, align 4, !dbg !5049
  %0 = load i32, i32* %tmp, align 4, !dbg !5049
  br label %do.body1, !dbg !5051

do.body1:                                         ; preds = %do.body
  br label %do.body2, !dbg !5052

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !5054

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy4, metadata !5056, metadata !DIExpression()), !dbg !5059
  call void @llvm.dbg.declare(metadata i64* %__dummy25, metadata !5060, metadata !DIExpression()), !dbg !5059
  %cmp6 = icmp eq i64* %__dummy4, %__dummy25, !dbg !5059
  %conv7 = zext i1 %cmp6 to i32, !dbg !5059
  store i32 1, i32* %tmp8, align 4, !dbg !5059
  %1 = load i32, i32* %tmp8, align 4, !dbg !5059
  %call = call i64 @arch_local_irq_save() #10, !dbg !5061
  store i64 %call, i64* %flags, align 8, !dbg !5061
  br label %do.end, !dbg !5061

do.end:                                           ; preds = %do.body3
  br label %do.end9, !dbg !5054

do.end9:                                          ; preds = %do.end
  br label %do.body10, !dbg !5052

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !5062, !srcloc !5064
  br label %do.body11, !dbg !5062

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !5065

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !5062

do.end13:                                         ; preds = %do.end12
  br label %do.end14, !dbg !5052

do.end14:                                         ; preds = %do.end13
  br label %do.end15, !dbg !5051

do.end15:                                         ; preds = %do.end14
  %2 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !5067
  %3 = load %struct.device_node*, %struct.device_node** %prev.addr, align 8, !dbg !5068
  %call16 = call %struct.device_node* @__of_get_next_child(%struct.device_node* %2, %struct.device_node* %3) #10, !dbg !5069
  store %struct.device_node* %call16, %struct.device_node** %next, align 8, !dbg !5070
  br label %do.body17, !dbg !5071

do.body17:                                        ; preds = %do.end15
  call void @llvm.dbg.declare(metadata i64* %__dummy18, metadata !5072, metadata !DIExpression()), !dbg !5075
  call void @llvm.dbg.declare(metadata i64* %__dummy219, metadata !5076, metadata !DIExpression()), !dbg !5075
  %cmp20 = icmp eq i64* %__dummy18, %__dummy219, !dbg !5075
  %conv21 = zext i1 %cmp20 to i32, !dbg !5075
  store i32 1, i32* %tmp22, align 4, !dbg !5075
  %4 = load i32, i32* %tmp22, align 4, !dbg !5075
  br label %do.body23, !dbg !5077

do.body23:                                        ; preds = %do.body17
  br label %do.body24, !dbg !5078

do.body24:                                        ; preds = %do.body23
  br label %do.body25, !dbg !5080

do.body25:                                        ; preds = %do.body24
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !5082, metadata !DIExpression()), !dbg !5085
  call void @llvm.dbg.declare(metadata i64* %__dummy227, metadata !5086, metadata !DIExpression()), !dbg !5085
  %cmp28 = icmp eq i64* %__dummy26, %__dummy227, !dbg !5085
  %conv29 = zext i1 %cmp28 to i32, !dbg !5085
  store i32 1, i32* %tmp30, align 4, !dbg !5085
  %5 = load i32, i32* %tmp30, align 4, !dbg !5085
  %6 = load i64, i64* %flags, align 8, !dbg !5087
  call void @arch_local_irq_restore(i64 %6) #10, !dbg !5087
  br label %do.end31, !dbg !5087

do.end31:                                         ; preds = %do.body25
  br label %do.end32, !dbg !5080

do.end32:                                         ; preds = %do.end31
  br label %do.body33, !dbg !5078

do.body33:                                        ; preds = %do.end32
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !5088, !srcloc !5090
  br label %do.body34, !dbg !5088

do.body34:                                        ; preds = %do.body33
  br label %do.end35, !dbg !5091

do.end35:                                         ; preds = %do.body34
  br label %do.end36, !dbg !5088

do.end36:                                         ; preds = %do.end35
  br label %do.end37, !dbg !5078

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !5077

do.end38:                                         ; preds = %do.end37
  %7 = load %struct.device_node*, %struct.device_node** %next, align 8, !dbg !5093
  ret %struct.device_node* %7, !dbg !5094
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device_node* @__of_get_next_child(%struct.device_node* %node, %struct.device_node* %prev) #0 !dbg !5095 {
entry:
  %retval = alloca %struct.device_node*, align 8
  %node.addr = alloca %struct.device_node*, align 8
  %prev.addr = alloca %struct.device_node*, align 8
  %next = alloca %struct.device_node*, align 8
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !5096, metadata !DIExpression()), !dbg !5097
  store %struct.device_node* %prev, %struct.device_node** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %prev.addr, metadata !5098, metadata !DIExpression()), !dbg !5099
  call void @llvm.dbg.declare(metadata %struct.device_node** %next, metadata !5100, metadata !DIExpression()), !dbg !5101
  %0 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !5102
  %tobool = icmp ne %struct.device_node* %0, null, !dbg !5102
  br i1 %tobool, label %if.end, label %if.then, !dbg !5104

if.then:                                          ; preds = %entry
  store %struct.device_node* null, %struct.device_node** %retval, align 8, !dbg !5105
  br label %return, !dbg !5105

if.end:                                           ; preds = %entry
  %1 = load %struct.device_node*, %struct.device_node** %prev.addr, align 8, !dbg !5106
  %tobool1 = icmp ne %struct.device_node* %1, null, !dbg !5106
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !5106

cond.true:                                        ; preds = %if.end
  %2 = load %struct.device_node*, %struct.device_node** %prev.addr, align 8, !dbg !5107
  %sibling = getelementptr inbounds %struct.device_node, %struct.device_node* %2, i32 0, i32 8, !dbg !5108
  %3 = load %struct.device_node*, %struct.device_node** %sibling, align 8, !dbg !5108
  br label %cond.end, !dbg !5106

cond.false:                                       ; preds = %if.end
  %4 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !5109
  %child = getelementptr inbounds %struct.device_node, %struct.device_node* %4, i32 0, i32 7, !dbg !5110
  %5 = load %struct.device_node*, %struct.device_node** %child, align 8, !dbg !5110
  br label %cond.end, !dbg !5106

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.device_node* [ %3, %cond.true ], [ %5, %cond.false ], !dbg !5106
  store %struct.device_node* %cond, %struct.device_node** %next, align 8, !dbg !5111
  br label %for.cond, !dbg !5112

for.cond:                                         ; preds = %for.inc, %cond.end
  %6 = load %struct.device_node*, %struct.device_node** %next, align 8, !dbg !5113
  %tobool2 = icmp ne %struct.device_node* %6, null, !dbg !5116
  br i1 %tobool2, label %for.body, label %for.end, !dbg !5116

for.body:                                         ; preds = %for.cond
  %7 = load %struct.device_node*, %struct.device_node** %next, align 8, !dbg !5117
  %call = call %struct.device_node* @of_node_get(%struct.device_node* %7) #10, !dbg !5119
  %tobool3 = icmp ne %struct.device_node* %call, null, !dbg !5119
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !5120

if.then4:                                         ; preds = %for.body
  br label %for.end, !dbg !5121

if.end5:                                          ; preds = %for.body
  br label %for.inc, !dbg !5122

for.inc:                                          ; preds = %if.end5
  %8 = load %struct.device_node*, %struct.device_node** %next, align 8, !dbg !5123
  %sibling6 = getelementptr inbounds %struct.device_node, %struct.device_node* %8, i32 0, i32 8, !dbg !5124
  %9 = load %struct.device_node*, %struct.device_node** %sibling6, align 8, !dbg !5124
  store %struct.device_node* %9, %struct.device_node** %next, align 8, !dbg !5125
  br label %for.cond, !dbg !5126, !llvm.loop !5127

for.end:                                          ; preds = %if.then4, %for.cond
  %10 = load %struct.device_node*, %struct.device_node** %prev.addr, align 8, !dbg !5129
  call void @of_node_put(%struct.device_node* %10) #10, !dbg !5130
  %11 = load %struct.device_node*, %struct.device_node** %next, align 8, !dbg !5131
  store %struct.device_node* %11, %struct.device_node** %retval, align 8, !dbg !5132
  br label %return, !dbg !5132

return:                                           ; preds = %for.end, %if.then
  %12 = load %struct.device_node*, %struct.device_node** %retval, align 8, !dbg !5133
  ret %struct.device_node* %12, !dbg !5133
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device_node* @of_get_next_available_child(%struct.device_node* %node, %struct.device_node* %prev) #0 !dbg !5134 {
entry:
  %retval = alloca %struct.device_node*, align 8
  %node.addr = alloca %struct.device_node*, align 8
  %prev.addr = alloca %struct.device_node*, align 8
  %next = alloca %struct.device_node*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy4 = alloca i64, align 8
  %__dummy25 = alloca i64, align 8
  %tmp8 = alloca i32, align 4
  %__dummy27 = alloca i64, align 8
  %__dummy228 = alloca i64, align 8
  %tmp31 = alloca i32, align 4
  %__dummy35 = alloca i64, align 8
  %__dummy236 = alloca i64, align 8
  %tmp39 = alloca i32, align 4
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !5135, metadata !DIExpression()), !dbg !5136
  store %struct.device_node* %prev, %struct.device_node** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %prev.addr, metadata !5137, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.declare(metadata %struct.device_node** %next, metadata !5139, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5141, metadata !DIExpression()), !dbg !5142
  %0 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !5143
  %tobool = icmp ne %struct.device_node* %0, null, !dbg !5143
  br i1 %tobool, label %if.end, label %if.then, !dbg !5145

if.then:                                          ; preds = %entry
  store %struct.device_node* null, %struct.device_node** %retval, align 8, !dbg !5146
  br label %return, !dbg !5146

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !5147

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5148, metadata !DIExpression()), !dbg !5151
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5152, metadata !DIExpression()), !dbg !5151
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5151
  %conv = zext i1 %cmp to i32, !dbg !5151
  store i32 1, i32* %tmp, align 4, !dbg !5151
  %1 = load i32, i32* %tmp, align 4, !dbg !5151
  br label %do.body1, !dbg !5153

do.body1:                                         ; preds = %do.body
  br label %do.body2, !dbg !5154

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !5156

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy4, metadata !5158, metadata !DIExpression()), !dbg !5161
  call void @llvm.dbg.declare(metadata i64* %__dummy25, metadata !5162, metadata !DIExpression()), !dbg !5161
  %cmp6 = icmp eq i64* %__dummy4, %__dummy25, !dbg !5161
  %conv7 = zext i1 %cmp6 to i32, !dbg !5161
  store i32 1, i32* %tmp8, align 4, !dbg !5161
  %2 = load i32, i32* %tmp8, align 4, !dbg !5161
  %call = call i64 @arch_local_irq_save() #10, !dbg !5163
  store i64 %call, i64* %flags, align 8, !dbg !5163
  br label %do.end, !dbg !5163

do.end:                                           ; preds = %do.body3
  br label %do.end9, !dbg !5156

do.end9:                                          ; preds = %do.end
  br label %do.body10, !dbg !5154

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !5164, !srcloc !5166
  br label %do.body11, !dbg !5164

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !5167

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !5164

do.end13:                                         ; preds = %do.end12
  br label %do.end14, !dbg !5154

do.end14:                                         ; preds = %do.end13
  br label %do.end15, !dbg !5153

do.end15:                                         ; preds = %do.end14
  %3 = load %struct.device_node*, %struct.device_node** %prev.addr, align 8, !dbg !5169
  %tobool16 = icmp ne %struct.device_node* %3, null, !dbg !5169
  br i1 %tobool16, label %cond.true, label %cond.false, !dbg !5169

cond.true:                                        ; preds = %do.end15
  %4 = load %struct.device_node*, %struct.device_node** %prev.addr, align 8, !dbg !5170
  %sibling = getelementptr inbounds %struct.device_node, %struct.device_node* %4, i32 0, i32 8, !dbg !5171
  %5 = load %struct.device_node*, %struct.device_node** %sibling, align 8, !dbg !5171
  br label %cond.end, !dbg !5169

cond.false:                                       ; preds = %do.end15
  %6 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !5172
  %child = getelementptr inbounds %struct.device_node, %struct.device_node* %6, i32 0, i32 7, !dbg !5173
  %7 = load %struct.device_node*, %struct.device_node** %child, align 8, !dbg !5173
  br label %cond.end, !dbg !5169

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.device_node* [ %5, %cond.true ], [ %7, %cond.false ], !dbg !5169
  store %struct.device_node* %cond, %struct.device_node** %next, align 8, !dbg !5174
  br label %for.cond, !dbg !5175

for.cond:                                         ; preds = %for.inc, %cond.end
  %8 = load %struct.device_node*, %struct.device_node** %next, align 8, !dbg !5176
  %tobool17 = icmp ne %struct.device_node* %8, null, !dbg !5179
  br i1 %tobool17, label %for.body, label %for.end, !dbg !5179

for.body:                                         ; preds = %for.cond
  %9 = load %struct.device_node*, %struct.device_node** %next, align 8, !dbg !5180
  %call18 = call zeroext i1 @__of_device_is_available(%struct.device_node* %9) #10, !dbg !5183
  br i1 %call18, label %if.end20, label %if.then19, !dbg !5184

if.then19:                                        ; preds = %for.body
  br label %for.inc, !dbg !5185

if.end20:                                         ; preds = %for.body
  %10 = load %struct.device_node*, %struct.device_node** %next, align 8, !dbg !5186
  %call21 = call %struct.device_node* @of_node_get(%struct.device_node* %10) #10, !dbg !5188
  %tobool22 = icmp ne %struct.device_node* %call21, null, !dbg !5188
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !5189

if.then23:                                        ; preds = %if.end20
  br label %for.end, !dbg !5190

if.end24:                                         ; preds = %if.end20
  br label %for.inc, !dbg !5191

for.inc:                                          ; preds = %if.end24, %if.then19
  %11 = load %struct.device_node*, %struct.device_node** %next, align 8, !dbg !5192
  %sibling25 = getelementptr inbounds %struct.device_node, %struct.device_node* %11, i32 0, i32 8, !dbg !5193
  %12 = load %struct.device_node*, %struct.device_node** %sibling25, align 8, !dbg !5193
  store %struct.device_node* %12, %struct.device_node** %next, align 8, !dbg !5194
  br label %for.cond, !dbg !5195, !llvm.loop !5196

for.end:                                          ; preds = %if.then23, %for.cond
  %13 = load %struct.device_node*, %struct.device_node** %prev.addr, align 8, !dbg !5198
  call void @of_node_put(%struct.device_node* %13) #10, !dbg !5199
  br label %do.body26, !dbg !5200

do.body26:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !5201, metadata !DIExpression()), !dbg !5204
  call void @llvm.dbg.declare(metadata i64* %__dummy228, metadata !5205, metadata !DIExpression()), !dbg !5204
  %cmp29 = icmp eq i64* %__dummy27, %__dummy228, !dbg !5204
  %conv30 = zext i1 %cmp29 to i32, !dbg !5204
  store i32 1, i32* %tmp31, align 4, !dbg !5204
  %14 = load i32, i32* %tmp31, align 4, !dbg !5204
  br label %do.body32, !dbg !5206

do.body32:                                        ; preds = %do.body26
  br label %do.body33, !dbg !5207

do.body33:                                        ; preds = %do.body32
  br label %do.body34, !dbg !5209

do.body34:                                        ; preds = %do.body33
  call void @llvm.dbg.declare(metadata i64* %__dummy35, metadata !5211, metadata !DIExpression()), !dbg !5214
  call void @llvm.dbg.declare(metadata i64* %__dummy236, metadata !5215, metadata !DIExpression()), !dbg !5214
  %cmp37 = icmp eq i64* %__dummy35, %__dummy236, !dbg !5214
  %conv38 = zext i1 %cmp37 to i32, !dbg !5214
  store i32 1, i32* %tmp39, align 4, !dbg !5214
  %15 = load i32, i32* %tmp39, align 4, !dbg !5214
  %16 = load i64, i64* %flags, align 8, !dbg !5216
  call void @arch_local_irq_restore(i64 %16) #10, !dbg !5216
  br label %do.end40, !dbg !5216

do.end40:                                         ; preds = %do.body34
  br label %do.end41, !dbg !5209

do.end41:                                         ; preds = %do.end40
  br label %do.body42, !dbg !5207

do.body42:                                        ; preds = %do.end41
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !5217, !srcloc !5219
  br label %do.body43, !dbg !5217

do.body43:                                        ; preds = %do.body42
  br label %do.end44, !dbg !5220

do.end44:                                         ; preds = %do.body43
  br label %do.end45, !dbg !5217

do.end45:                                         ; preds = %do.end44
  br label %do.end46, !dbg !5207

do.end46:                                         ; preds = %do.end45
  br label %do.end47, !dbg !5206

do.end47:                                         ; preds = %do.end46
  %17 = load %struct.device_node*, %struct.device_node** %next, align 8, !dbg !5222
  store %struct.device_node* %17, %struct.device_node** %retval, align 8, !dbg !5223
  br label %return, !dbg !5223

return:                                           ; preds = %do.end47, %if.then
  %18 = load %struct.device_node*, %struct.device_node** %retval, align 8, !dbg !5224
  ret %struct.device_node* %18, !dbg !5224
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__of_node_is_type(%struct.device_node* %np, i8* %type) #0 !dbg !5225 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %type.addr = alloca i8*, align 8
  %match = alloca i8*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !5226, metadata !DIExpression()), !dbg !5227
  store i8* %type, i8** %type.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %type.addr, metadata !5228, metadata !DIExpression()), !dbg !5229
  call void @llvm.dbg.declare(metadata i8** %match, metadata !5230, metadata !DIExpression()), !dbg !5231
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !5232
  %call = call i8* @__of_get_property(%struct.device_node* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i64 0, i64 0), i32* null) #10, !dbg !5233
  store i8* %call, i8** %match, align 8, !dbg !5231
  %1 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !5234
  %tobool = icmp ne %struct.device_node* %1, null, !dbg !5234
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !5235

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %match, align 8, !dbg !5236
  %tobool1 = icmp ne i8* %2, null, !dbg !5236
  br i1 %tobool1, label %land.lhs.true2, label %land.end, !dbg !5237

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load i8*, i8** %type.addr, align 8, !dbg !5238
  %tobool3 = icmp ne i8* %3, null, !dbg !5238
  br i1 %tobool3, label %land.rhs, label %land.end, !dbg !5239

land.rhs:                                         ; preds = %land.lhs.true2
  %4 = load i8*, i8** %match, align 8, !dbg !5240
  %5 = load i8*, i8** %type.addr, align 8, !dbg !5241
  %call4 = call i32 @strcmp(i8* %4, i8* %5) #10, !dbg !5242
  %tobool5 = icmp ne i32 %call4, 0, !dbg !5243
  %lnot = xor i1 %tobool5, true, !dbg !5243
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true2, %land.lhs.true, %entry
  %6 = phi i1 [ false, %land.lhs.true2 ], [ false, %land.lhs.true ], [ false, %entry ], [ %lnot, %land.rhs ], !dbg !5244
  ret i1 %6, !dbg !5245
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device_node* @of_get_compatible_child(%struct.device_node* %parent, i8* %compatible) #0 !dbg !5246 {
entry:
  %parent.addr = alloca %struct.device_node*, align 8
  %compatible.addr = alloca i8*, align 8
  %child = alloca %struct.device_node*, align 8
  store %struct.device_node* %parent, %struct.device_node** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %parent.addr, metadata !5249, metadata !DIExpression()), !dbg !5250
  store i8* %compatible, i8** %compatible.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %compatible.addr, metadata !5251, metadata !DIExpression()), !dbg !5252
  call void @llvm.dbg.declare(metadata %struct.device_node** %child, metadata !5253, metadata !DIExpression()), !dbg !5254
  %0 = load %struct.device_node*, %struct.device_node** %parent.addr, align 8, !dbg !5255
  %call = call %struct.device_node* @of_get_next_child(%struct.device_node* %0, %struct.device_node* null) #10, !dbg !5255
  store %struct.device_node* %call, %struct.device_node** %child, align 8, !dbg !5255
  br label %for.cond, !dbg !5255

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.device_node*, %struct.device_node** %child, align 8, !dbg !5257
  %cmp = icmp ne %struct.device_node* %1, null, !dbg !5257
  br i1 %cmp, label %for.body, label %for.end, !dbg !5255

for.body:                                         ; preds = %for.cond
  %2 = load %struct.device_node*, %struct.device_node** %child, align 8, !dbg !5259
  %3 = load i8*, i8** %compatible.addr, align 8, !dbg !5262
  %call1 = call i32 @of_device_is_compatible(%struct.device_node* %2, i8* %3) #10, !dbg !5263
  %tobool = icmp ne i32 %call1, 0, !dbg !5263
  br i1 %tobool, label %if.then, label %if.end, !dbg !5264

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !5265

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5266

for.inc:                                          ; preds = %if.end
  %4 = load %struct.device_node*, %struct.device_node** %parent.addr, align 8, !dbg !5257
  %5 = load %struct.device_node*, %struct.device_node** %child, align 8, !dbg !5257
  %call2 = call %struct.device_node* @of_get_next_child(%struct.device_node* %4, %struct.device_node* %5) #10, !dbg !5257
  store %struct.device_node* %call2, %struct.device_node** %child, align 8, !dbg !5257
  br label %for.cond, !dbg !5257, !llvm.loop !5267

for.end:                                          ; preds = %if.then, %for.cond
  %6 = load %struct.device_node*, %struct.device_node** %child, align 8, !dbg !5269
  ret %struct.device_node* %6, !dbg !5270
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device_node* @of_get_child_by_name(%struct.device_node* %node, i8* %name) #0 !dbg !5271 {
entry:
  %node.addr = alloca %struct.device_node*, align 8
  %name.addr = alloca i8*, align 8
  %child = alloca %struct.device_node*, align 8
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !5272, metadata !DIExpression()), !dbg !5273
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5274, metadata !DIExpression()), !dbg !5275
  call void @llvm.dbg.declare(metadata %struct.device_node** %child, metadata !5276, metadata !DIExpression()), !dbg !5277
  %0 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !5278
  %call = call %struct.device_node* @of_get_next_child(%struct.device_node* %0, %struct.device_node* null) #10, !dbg !5278
  store %struct.device_node* %call, %struct.device_node** %child, align 8, !dbg !5278
  br label %for.cond, !dbg !5278

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.device_node*, %struct.device_node** %child, align 8, !dbg !5280
  %cmp = icmp ne %struct.device_node* %1, null, !dbg !5280
  br i1 %cmp, label %for.body, label %for.end, !dbg !5278

for.body:                                         ; preds = %for.cond
  %2 = load %struct.device_node*, %struct.device_node** %child, align 8, !dbg !5282
  %3 = load i8*, i8** %name.addr, align 8, !dbg !5284
  %call1 = call zeroext i1 @of_node_name_eq(%struct.device_node* %2, i8* %3) #10, !dbg !5285
  br i1 %call1, label %if.then, label %if.end, !dbg !5286

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !5287

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5288

for.inc:                                          ; preds = %if.end
  %4 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !5280
  %5 = load %struct.device_node*, %struct.device_node** %child, align 8, !dbg !5280
  %call2 = call %struct.device_node* @of_get_next_child(%struct.device_node* %4, %struct.device_node* %5) #10, !dbg !5280
  store %struct.device_node* %call2, %struct.device_node** %child, align 8, !dbg !5280
  br label %for.cond, !dbg !5280, !llvm.loop !5289

for.end:                                          ; preds = %if.then, %for.cond
  %6 = load %struct.device_node*, %struct.device_node** %child, align 8, !dbg !5291
  ret %struct.device_node* %6, !dbg !5292
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device_node* @__of_find_node_by_path(%struct.device_node* %parent, i8* %path) #0 !dbg !5293 {
entry:
  %retval = alloca %struct.device_node*, align 8
  %parent.addr = alloca %struct.device_node*, align 8
  %path.addr = alloca i8*, align 8
  %child = alloca %struct.device_node*, align 8
  %len = alloca i32, align 4
  %name = alloca i8*, align 8
  store %struct.device_node* %parent, %struct.device_node** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %parent.addr, metadata !5296, metadata !DIExpression()), !dbg !5297
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !5298, metadata !DIExpression()), !dbg !5299
  call void @llvm.dbg.declare(metadata %struct.device_node** %child, metadata !5300, metadata !DIExpression()), !dbg !5301
  call void @llvm.dbg.declare(metadata i32* %len, metadata !5302, metadata !DIExpression()), !dbg !5303
  %0 = load i8*, i8** %path.addr, align 8, !dbg !5304
  %call = call i64 @strcspn(i8* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i64 0, i64 0)) #10, !dbg !5305
  %conv = trunc i64 %call to i32, !dbg !5305
  store i32 %conv, i32* %len, align 4, !dbg !5306
  %1 = load i32, i32* %len, align 4, !dbg !5307
  %tobool = icmp ne i32 %1, 0, !dbg !5307
  br i1 %tobool, label %if.end, label %if.then, !dbg !5309

if.then:                                          ; preds = %entry
  store %struct.device_node* null, %struct.device_node** %retval, align 8, !dbg !5310
  br label %return, !dbg !5310

if.end:                                           ; preds = %entry
  %2 = load %struct.device_node*, %struct.device_node** %parent.addr, align 8, !dbg !5311
  %call1 = call %struct.device_node* @__of_get_next_child(%struct.device_node* %2, %struct.device_node* null) #10, !dbg !5311
  store %struct.device_node* %call1, %struct.device_node** %child, align 8, !dbg !5311
  br label %for.cond, !dbg !5311

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load %struct.device_node*, %struct.device_node** %child, align 8, !dbg !5313
  %cmp = icmp ne %struct.device_node* %3, null, !dbg !5313
  br i1 %cmp, label %for.body, label %for.end, !dbg !5311

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %name, metadata !5315, metadata !DIExpression()), !dbg !5317
  %4 = load %struct.device_node*, %struct.device_node** %child, align 8, !dbg !5318
  %full_name = getelementptr inbounds %struct.device_node, %struct.device_node* %4, i32 0, i32 2, !dbg !5319
  %5 = load i8*, i8** %full_name, align 8, !dbg !5319
  %call3 = call i8* @kbasename(i8* %5) #10, !dbg !5320
  store i8* %call3, i8** %name, align 8, !dbg !5317
  %6 = load i8*, i8** %path.addr, align 8, !dbg !5321
  %7 = load i8*, i8** %name, align 8, !dbg !5323
  %8 = load i32, i32* %len, align 4, !dbg !5324
  %conv4 = sext i32 %8 to i64, !dbg !5324
  %call5 = call i32 @strncmp(i8* %6, i8* %7, i64 %conv4) #10, !dbg !5325
  %cmp6 = icmp eq i32 %call5, 0, !dbg !5326
  br i1 %cmp6, label %land.lhs.true, label %if.end13, !dbg !5327

land.lhs.true:                                    ; preds = %for.body
  %9 = load i8*, i8** %name, align 8, !dbg !5328
  %call8 = call i64 @strlen(i8* %9) #10, !dbg !5329
  %10 = load i32, i32* %len, align 4, !dbg !5330
  %conv9 = sext i32 %10 to i64, !dbg !5330
  %cmp10 = icmp eq i64 %call8, %conv9, !dbg !5331
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !5332

if.then12:                                        ; preds = %land.lhs.true
  %11 = load %struct.device_node*, %struct.device_node** %child, align 8, !dbg !5333
  store %struct.device_node* %11, %struct.device_node** %retval, align 8, !dbg !5334
  br label %return, !dbg !5334

if.end13:                                         ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !5335

for.inc:                                          ; preds = %if.end13
  %12 = load %struct.device_node*, %struct.device_node** %parent.addr, align 8, !dbg !5313
  %13 = load %struct.device_node*, %struct.device_node** %child, align 8, !dbg !5313
  %call14 = call %struct.device_node* @__of_get_next_child(%struct.device_node* %12, %struct.device_node* %13) #10, !dbg !5313
  store %struct.device_node* %call14, %struct.device_node** %child, align 8, !dbg !5313
  br label %for.cond, !dbg !5313, !llvm.loop !5336

for.end:                                          ; preds = %for.cond
  store %struct.device_node* null, %struct.device_node** %retval, align 8, !dbg !5338
  br label %return, !dbg !5338

return:                                           ; preds = %for.end, %if.then12, %if.then
  %14 = load %struct.device_node*, %struct.device_node** %retval, align 8, !dbg !5339
  ret %struct.device_node* %14, !dbg !5339
}

; Function Attrs: noredzone
declare dso_local i64 @strcspn(i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device_node* @__of_find_node_by_full_path(%struct.device_node* %node, i8* %path) #0 !dbg !5340 {
entry:
  %node.addr = alloca %struct.device_node*, align 8
  %path.addr = alloca i8*, align 8
  %separator = alloca i8*, align 8
  %tmp = alloca %struct.device_node*, align 8
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !5341, metadata !DIExpression()), !dbg !5342
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !5343, metadata !DIExpression()), !dbg !5344
  call void @llvm.dbg.declare(metadata i8** %separator, metadata !5345, metadata !DIExpression()), !dbg !5346
  %0 = load i8*, i8** %path.addr, align 8, !dbg !5347
  %call = call i8* @strchr(i8* %0, i32 58) #10, !dbg !5348
  store i8* %call, i8** %separator, align 8, !dbg !5346
  br label %while.cond, !dbg !5349

while.cond:                                       ; preds = %if.end, %entry
  %1 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !5350
  %tobool = icmp ne %struct.device_node* %1, null, !dbg !5350
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5351

land.rhs:                                         ; preds = %while.cond
  %2 = load i8*, i8** %path.addr, align 8, !dbg !5352
  %3 = load i8, i8* %2, align 1, !dbg !5353
  %conv = sext i8 %3 to i32, !dbg !5353
  %cmp = icmp eq i32 %conv, 47, !dbg !5354
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !5355
  br i1 %4, label %while.body, label %while.end, !dbg !5349

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.device_node** %tmp, metadata !5356, metadata !DIExpression()), !dbg !5358
  %5 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !5359
  store %struct.device_node* %5, %struct.device_node** %tmp, align 8, !dbg !5358
  %6 = load i8*, i8** %path.addr, align 8, !dbg !5360
  %incdec.ptr = getelementptr i8, i8* %6, i32 1, !dbg !5360
  store i8* %incdec.ptr, i8** %path.addr, align 8, !dbg !5360
  %7 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !5361
  %8 = load i8*, i8** %path.addr, align 8, !dbg !5362
  %call2 = call %struct.device_node* @__of_find_node_by_path(%struct.device_node* %7, i8* %8) #10, !dbg !5363
  store %struct.device_node* %call2, %struct.device_node** %node.addr, align 8, !dbg !5364
  %9 = load %struct.device_node*, %struct.device_node** %tmp, align 8, !dbg !5365
  call void @of_node_put(%struct.device_node* %9) #10, !dbg !5366
  %10 = load i8*, i8** %path.addr, align 8, !dbg !5367
  %call3 = call i8* @strchrnul(i8* %10, i32 47) #10, !dbg !5368
  store i8* %call3, i8** %path.addr, align 8, !dbg !5369
  %11 = load i8*, i8** %separator, align 8, !dbg !5370
  %tobool4 = icmp ne i8* %11, null, !dbg !5370
  br i1 %tobool4, label %land.lhs.true, label %if.end, !dbg !5372

land.lhs.true:                                    ; preds = %while.body
  %12 = load i8*, i8** %separator, align 8, !dbg !5373
  %13 = load i8*, i8** %path.addr, align 8, !dbg !5374
  %cmp5 = icmp ult i8* %12, %13, !dbg !5375
  br i1 %cmp5, label %if.then, label %if.end, !dbg !5376

if.then:                                          ; preds = %land.lhs.true
  br label %while.end, !dbg !5377

if.end:                                           ; preds = %land.lhs.true, %while.body
  br label %while.cond, !dbg !5349, !llvm.loop !5378

while.end:                                        ; preds = %if.then, %land.end
  %14 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !5380
  ret %struct.device_node* %14, !dbg !5381
}

; Function Attrs: noredzone
declare dso_local i8* @strchr(i8*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device_node* @of_find_node_opts_by_path(i8* %path, i8** %opts) #0 !dbg !5382 {
entry:
  %retval = alloca %struct.device_node*, align 8
  %path.addr = alloca i8*, align 8
  %opts.addr = alloca i8**, align 8
  %np = alloca %struct.device_node*, align 8
  %pp = alloca %struct.property*, align 8
  %flags = alloca i64, align 8
  %separator = alloca i8*, align 8
  %len = alloca i32, align 4
  %p = alloca i8*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy39 = alloca i64, align 8
  %__dummy240 = alloca i64, align 8
  %tmp43 = alloca i32, align 4
  %__dummy58 = alloca i64, align 8
  %__dummy259 = alloca i64, align 8
  %tmp62 = alloca i32, align 4
  %__dummy66 = alloca i64, align 8
  %__dummy267 = alloca i64, align 8
  %tmp70 = alloca i32, align 4
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !5385, metadata !DIExpression()), !dbg !5386
  store i8** %opts, i8*** %opts.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %opts.addr, metadata !5387, metadata !DIExpression()), !dbg !5388
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !5389, metadata !DIExpression()), !dbg !5390
  store %struct.device_node* null, %struct.device_node** %np, align 8, !dbg !5390
  call void @llvm.dbg.declare(metadata %struct.property** %pp, metadata !5391, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5393, metadata !DIExpression()), !dbg !5394
  call void @llvm.dbg.declare(metadata i8** %separator, metadata !5395, metadata !DIExpression()), !dbg !5396
  %0 = load i8*, i8** %path.addr, align 8, !dbg !5397
  %call = call i8* @strchr(i8* %0, i32 58) #10, !dbg !5398
  store i8* %call, i8** %separator, align 8, !dbg !5396
  %1 = load i8**, i8*** %opts.addr, align 8, !dbg !5399
  %tobool = icmp ne i8** %1, null, !dbg !5399
  br i1 %tobool, label %if.then, label %if.end, !dbg !5401

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %separator, align 8, !dbg !5402
  %tobool1 = icmp ne i8* %2, null, !dbg !5402
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !5402

cond.true:                                        ; preds = %if.then
  %3 = load i8*, i8** %separator, align 8, !dbg !5403
  %add.ptr = getelementptr i8, i8* %3, i64 1, !dbg !5404
  br label %cond.end, !dbg !5402

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !5402

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ null, %cond.false ], !dbg !5402
  %4 = load i8**, i8*** %opts.addr, align 8, !dbg !5405
  store i8* %cond, i8** %4, align 8, !dbg !5406
  br label %if.end, !dbg !5407

if.end:                                           ; preds = %cond.end, %entry
  %5 = load i8*, i8** %path.addr, align 8, !dbg !5408
  %call2 = call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #10, !dbg !5410
  %cmp = icmp eq i32 %call2, 0, !dbg !5411
  br i1 %cmp, label %if.then3, label %if.end5, !dbg !5412

if.then3:                                         ; preds = %if.end
  %6 = load %struct.device_node*, %struct.device_node** @of_root, align 8, !dbg !5413
  %call4 = call %struct.device_node* @of_node_get(%struct.device_node* %6) #10, !dbg !5414
  store %struct.device_node* %call4, %struct.device_node** %retval, align 8, !dbg !5415
  br label %return, !dbg !5415

if.end5:                                          ; preds = %if.end
  %7 = load i8*, i8** %path.addr, align 8, !dbg !5416
  %8 = load i8, i8* %7, align 1, !dbg !5418
  %conv = sext i8 %8 to i32, !dbg !5418
  %cmp6 = icmp ne i32 %conv, 47, !dbg !5419
  br i1 %cmp6, label %if.then8, label %if.end33, !dbg !5420

if.then8:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata i32* %len, metadata !5421, metadata !DIExpression()), !dbg !5423
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5424, metadata !DIExpression()), !dbg !5425
  %9 = load i8*, i8** %separator, align 8, !dbg !5426
  store i8* %9, i8** %p, align 8, !dbg !5425
  %10 = load i8*, i8** %p, align 8, !dbg !5427
  %tobool9 = icmp ne i8* %10, null, !dbg !5427
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !5429

if.then10:                                        ; preds = %if.then8
  %11 = load i8*, i8** %path.addr, align 8, !dbg !5430
  %call11 = call i8* @strchrnul(i8* %11, i32 47) #10, !dbg !5431
  store i8* %call11, i8** %p, align 8, !dbg !5432
  br label %if.end12, !dbg !5433

if.end12:                                         ; preds = %if.then10, %if.then8
  %12 = load i8*, i8** %p, align 8, !dbg !5434
  %13 = load i8*, i8** %path.addr, align 8, !dbg !5435
  %sub.ptr.lhs.cast = ptrtoint i8* %12 to i64, !dbg !5436
  %sub.ptr.rhs.cast = ptrtoint i8* %13 to i64, !dbg !5436
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5436
  %conv13 = trunc i64 %sub.ptr.sub to i32, !dbg !5434
  store i32 %conv13, i32* %len, align 4, !dbg !5437
  %14 = load %struct.device_node*, %struct.device_node** @of_aliases, align 8, !dbg !5438
  %tobool14 = icmp ne %struct.device_node* %14, null, !dbg !5438
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !5440

if.then15:                                        ; preds = %if.end12
  store %struct.device_node* null, %struct.device_node** %retval, align 8, !dbg !5441
  br label %return, !dbg !5441

if.end16:                                         ; preds = %if.end12
  %15 = load %struct.device_node*, %struct.device_node** @of_aliases, align 8, !dbg !5442
  %properties = getelementptr inbounds %struct.device_node, %struct.device_node* %15, i32 0, i32 4, !dbg !5442
  %16 = load %struct.property*, %struct.property** %properties, align 8, !dbg !5442
  store %struct.property* %16, %struct.property** %pp, align 8, !dbg !5442
  br label %for.cond, !dbg !5442

for.cond:                                         ; preds = %for.inc, %if.end16
  %17 = load %struct.property*, %struct.property** %pp, align 8, !dbg !5444
  %cmp17 = icmp ne %struct.property* %17, null, !dbg !5444
  br i1 %cmp17, label %for.body, label %for.end, !dbg !5442

for.body:                                         ; preds = %for.cond
  %18 = load %struct.property*, %struct.property** %pp, align 8, !dbg !5446
  %name = getelementptr inbounds %struct.property, %struct.property* %18, i32 0, i32 0, !dbg !5449
  %19 = load i8*, i8** %name, align 8, !dbg !5449
  %call19 = call i64 @strlen(i8* %19) #10, !dbg !5450
  %20 = load i32, i32* %len, align 4, !dbg !5451
  %conv20 = sext i32 %20 to i64, !dbg !5451
  %cmp21 = icmp eq i64 %call19, %conv20, !dbg !5452
  br i1 %cmp21, label %land.lhs.true, label %if.end29, !dbg !5453

land.lhs.true:                                    ; preds = %for.body
  %21 = load %struct.property*, %struct.property** %pp, align 8, !dbg !5454
  %name23 = getelementptr inbounds %struct.property, %struct.property* %21, i32 0, i32 0, !dbg !5455
  %22 = load i8*, i8** %name23, align 8, !dbg !5455
  %23 = load i8*, i8** %path.addr, align 8, !dbg !5456
  %24 = load i32, i32* %len, align 4, !dbg !5457
  %conv24 = sext i32 %24 to i64, !dbg !5457
  %call25 = call i32 @strncmp(i8* %22, i8* %23, i64 %conv24) #10, !dbg !5458
  %tobool26 = icmp ne i32 %call25, 0, !dbg !5458
  br i1 %tobool26, label %if.end29, label %if.then27, !dbg !5459

if.then27:                                        ; preds = %land.lhs.true
  %25 = load %struct.property*, %struct.property** %pp, align 8, !dbg !5460
  %value = getelementptr inbounds %struct.property, %struct.property* %25, i32 0, i32 2, !dbg !5462
  %26 = load i8*, i8** %value, align 8, !dbg !5462
  %call28 = call %struct.device_node* @of_find_node_by_path(i8* %26) #10, !dbg !5463
  store %struct.device_node* %call28, %struct.device_node** %np, align 8, !dbg !5464
  br label %for.end, !dbg !5465

if.end29:                                         ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !5466

for.inc:                                          ; preds = %if.end29
  %27 = load %struct.property*, %struct.property** %pp, align 8, !dbg !5444
  %next = getelementptr inbounds %struct.property, %struct.property* %27, i32 0, i32 3, !dbg !5444
  %28 = load %struct.property*, %struct.property** %next, align 8, !dbg !5444
  store %struct.property* %28, %struct.property** %pp, align 8, !dbg !5444
  br label %for.cond, !dbg !5444, !llvm.loop !5467

for.end:                                          ; preds = %if.then27, %for.cond
  %29 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5469
  %tobool30 = icmp ne %struct.device_node* %29, null, !dbg !5469
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !5471

if.then31:                                        ; preds = %for.end
  store %struct.device_node* null, %struct.device_node** %retval, align 8, !dbg !5472
  br label %return, !dbg !5472

if.end32:                                         ; preds = %for.end
  %30 = load i8*, i8** %p, align 8, !dbg !5473
  store i8* %30, i8** %path.addr, align 8, !dbg !5474
  br label %if.end33, !dbg !5475

if.end33:                                         ; preds = %if.end32, %if.end5
  br label %do.body, !dbg !5476

do.body:                                          ; preds = %if.end33
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5477, metadata !DIExpression()), !dbg !5480
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5481, metadata !DIExpression()), !dbg !5480
  %cmp34 = icmp eq i64* %__dummy, %__dummy2, !dbg !5480
  %conv35 = zext i1 %cmp34 to i32, !dbg !5480
  store i32 1, i32* %tmp, align 4, !dbg !5480
  %31 = load i32, i32* %tmp, align 4, !dbg !5480
  br label %do.body36, !dbg !5482

do.body36:                                        ; preds = %do.body
  br label %do.body37, !dbg !5483

do.body37:                                        ; preds = %do.body36
  br label %do.body38, !dbg !5485

do.body38:                                        ; preds = %do.body37
  call void @llvm.dbg.declare(metadata i64* %__dummy39, metadata !5487, metadata !DIExpression()), !dbg !5490
  call void @llvm.dbg.declare(metadata i64* %__dummy240, metadata !5491, metadata !DIExpression()), !dbg !5490
  %cmp41 = icmp eq i64* %__dummy39, %__dummy240, !dbg !5490
  %conv42 = zext i1 %cmp41 to i32, !dbg !5490
  store i32 1, i32* %tmp43, align 4, !dbg !5490
  %32 = load i32, i32* %tmp43, align 4, !dbg !5490
  %call44 = call i64 @arch_local_irq_save() #10, !dbg !5492
  store i64 %call44, i64* %flags, align 8, !dbg !5492
  br label %do.end, !dbg !5492

do.end:                                           ; preds = %do.body38
  br label %do.end45, !dbg !5485

do.end45:                                         ; preds = %do.end
  br label %do.body46, !dbg !5483

do.body46:                                        ; preds = %do.end45
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !5493, !srcloc !5495
  br label %do.body47, !dbg !5493

do.body47:                                        ; preds = %do.body46
  br label %do.end48, !dbg !5496

do.end48:                                         ; preds = %do.body47
  br label %do.end49, !dbg !5493

do.end49:                                         ; preds = %do.end48
  br label %do.end50, !dbg !5483

do.end50:                                         ; preds = %do.end49
  br label %do.end51, !dbg !5482

do.end51:                                         ; preds = %do.end50
  %33 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5498
  %tobool52 = icmp ne %struct.device_node* %33, null, !dbg !5498
  br i1 %tobool52, label %if.end55, label %if.then53, !dbg !5500

if.then53:                                        ; preds = %do.end51
  %34 = load %struct.device_node*, %struct.device_node** @of_root, align 8, !dbg !5501
  %call54 = call %struct.device_node* @of_node_get(%struct.device_node* %34) #10, !dbg !5502
  store %struct.device_node* %call54, %struct.device_node** %np, align 8, !dbg !5503
  br label %if.end55, !dbg !5504

if.end55:                                         ; preds = %if.then53, %do.end51
  %35 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5505
  %36 = load i8*, i8** %path.addr, align 8, !dbg !5506
  %call56 = call %struct.device_node* @__of_find_node_by_full_path(%struct.device_node* %35, i8* %36) #10, !dbg !5507
  store %struct.device_node* %call56, %struct.device_node** %np, align 8, !dbg !5508
  br label %do.body57, !dbg !5509

do.body57:                                        ; preds = %if.end55
  call void @llvm.dbg.declare(metadata i64* %__dummy58, metadata !5510, metadata !DIExpression()), !dbg !5513
  call void @llvm.dbg.declare(metadata i64* %__dummy259, metadata !5514, metadata !DIExpression()), !dbg !5513
  %cmp60 = icmp eq i64* %__dummy58, %__dummy259, !dbg !5513
  %conv61 = zext i1 %cmp60 to i32, !dbg !5513
  store i32 1, i32* %tmp62, align 4, !dbg !5513
  %37 = load i32, i32* %tmp62, align 4, !dbg !5513
  br label %do.body63, !dbg !5515

do.body63:                                        ; preds = %do.body57
  br label %do.body64, !dbg !5516

do.body64:                                        ; preds = %do.body63
  br label %do.body65, !dbg !5518

do.body65:                                        ; preds = %do.body64
  call void @llvm.dbg.declare(metadata i64* %__dummy66, metadata !5520, metadata !DIExpression()), !dbg !5523
  call void @llvm.dbg.declare(metadata i64* %__dummy267, metadata !5524, metadata !DIExpression()), !dbg !5523
  %cmp68 = icmp eq i64* %__dummy66, %__dummy267, !dbg !5523
  %conv69 = zext i1 %cmp68 to i32, !dbg !5523
  store i32 1, i32* %tmp70, align 4, !dbg !5523
  %38 = load i32, i32* %tmp70, align 4, !dbg !5523
  %39 = load i64, i64* %flags, align 8, !dbg !5525
  call void @arch_local_irq_restore(i64 %39) #10, !dbg !5525
  br label %do.end71, !dbg !5525

do.end71:                                         ; preds = %do.body65
  br label %do.end72, !dbg !5518

do.end72:                                         ; preds = %do.end71
  br label %do.body73, !dbg !5516

do.body73:                                        ; preds = %do.end72
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !5526, !srcloc !5528
  br label %do.body74, !dbg !5526

do.body74:                                        ; preds = %do.body73
  br label %do.end75, !dbg !5529

do.end75:                                         ; preds = %do.body74
  br label %do.end76, !dbg !5526

do.end76:                                         ; preds = %do.end75
  br label %do.end77, !dbg !5516

do.end77:                                         ; preds = %do.end76
  br label %do.end78, !dbg !5515

do.end78:                                         ; preds = %do.end77
  %40 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5531
  store %struct.device_node* %40, %struct.device_node** %retval, align 8, !dbg !5532
  br label %return, !dbg !5532

return:                                           ; preds = %do.end78, %if.then31, %if.then15, %if.then3
  %41 = load %struct.device_node*, %struct.device_node** %retval, align 8, !dbg !5533
  ret %struct.device_node* %41, !dbg !5533
}

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device_node* @of_find_node_by_name(%struct.device_node* %from, i8* %name) #0 !dbg !5534 {
entry:
  %from.addr = alloca %struct.device_node*, align 8
  %name.addr = alloca i8*, align 8
  %np = alloca %struct.device_node*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy4 = alloca i64, align 8
  %__dummy25 = alloca i64, align 8
  %tmp8 = alloca i32, align 4
  %__dummy23 = alloca i64, align 8
  %__dummy224 = alloca i64, align 8
  %tmp27 = alloca i32, align 4
  %__dummy31 = alloca i64, align 8
  %__dummy232 = alloca i64, align 8
  %tmp35 = alloca i32, align 4
  store %struct.device_node* %from, %struct.device_node** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %from.addr, metadata !5535, metadata !DIExpression()), !dbg !5536
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5537, metadata !DIExpression()), !dbg !5538
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !5539, metadata !DIExpression()), !dbg !5540
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5541, metadata !DIExpression()), !dbg !5542
  br label %do.body, !dbg !5543

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5544, metadata !DIExpression()), !dbg !5547
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5548, metadata !DIExpression()), !dbg !5547
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5547
  %conv = zext i1 %cmp to i32, !dbg !5547
  store i32 1, i32* %tmp, align 4, !dbg !5547
  %0 = load i32, i32* %tmp, align 4, !dbg !5547
  br label %do.body1, !dbg !5549

do.body1:                                         ; preds = %do.body
  br label %do.body2, !dbg !5550

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !5552

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy4, metadata !5554, metadata !DIExpression()), !dbg !5557
  call void @llvm.dbg.declare(metadata i64* %__dummy25, metadata !5558, metadata !DIExpression()), !dbg !5557
  %cmp6 = icmp eq i64* %__dummy4, %__dummy25, !dbg !5557
  %conv7 = zext i1 %cmp6 to i32, !dbg !5557
  store i32 1, i32* %tmp8, align 4, !dbg !5557
  %1 = load i32, i32* %tmp8, align 4, !dbg !5557
  %call = call i64 @arch_local_irq_save() #10, !dbg !5559
  store i64 %call, i64* %flags, align 8, !dbg !5559
  br label %do.end, !dbg !5559

do.end:                                           ; preds = %do.body3
  br label %do.end9, !dbg !5552

do.end9:                                          ; preds = %do.end
  br label %do.body10, !dbg !5550

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !5560, !srcloc !5562
  br label %do.body11, !dbg !5560

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !5563

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !5560

do.end13:                                         ; preds = %do.end12
  br label %do.end14, !dbg !5550

do.end14:                                         ; preds = %do.end13
  br label %do.end15, !dbg !5549

do.end15:                                         ; preds = %do.end14
  %2 = load %struct.device_node*, %struct.device_node** %from.addr, align 8, !dbg !5565
  %call16 = call %struct.device_node* @__of_find_all_nodes(%struct.device_node* %2) #10, !dbg !5565
  store %struct.device_node* %call16, %struct.device_node** %np, align 8, !dbg !5565
  br label %for.cond, !dbg !5565

for.cond:                                         ; preds = %for.inc, %do.end15
  %3 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5567
  %tobool = icmp ne %struct.device_node* %3, null, !dbg !5565
  br i1 %tobool, label %for.body, label %for.end, !dbg !5565

for.body:                                         ; preds = %for.cond
  %4 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5569
  %5 = load i8*, i8** %name.addr, align 8, !dbg !5571
  %call17 = call zeroext i1 @of_node_name_eq(%struct.device_node* %4, i8* %5) #10, !dbg !5572
  br i1 %call17, label %land.lhs.true, label %if.end, !dbg !5573

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5574
  %call19 = call %struct.device_node* @of_node_get(%struct.device_node* %6) #10, !dbg !5575
  %tobool20 = icmp ne %struct.device_node* %call19, null, !dbg !5575
  br i1 %tobool20, label %if.then, label %if.end, !dbg !5576

if.then:                                          ; preds = %land.lhs.true
  br label %for.end, !dbg !5577

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !5578

for.inc:                                          ; preds = %if.end
  %7 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5567
  %call21 = call %struct.device_node* @__of_find_all_nodes(%struct.device_node* %7) #10, !dbg !5567
  store %struct.device_node* %call21, %struct.device_node** %np, align 8, !dbg !5567
  br label %for.cond, !dbg !5567, !llvm.loop !5579

for.end:                                          ; preds = %if.then, %for.cond
  %8 = load %struct.device_node*, %struct.device_node** %from.addr, align 8, !dbg !5581
  call void @of_node_put(%struct.device_node* %8) #10, !dbg !5582
  br label %do.body22, !dbg !5583

do.body22:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i64* %__dummy23, metadata !5584, metadata !DIExpression()), !dbg !5587
  call void @llvm.dbg.declare(metadata i64* %__dummy224, metadata !5588, metadata !DIExpression()), !dbg !5587
  %cmp25 = icmp eq i64* %__dummy23, %__dummy224, !dbg !5587
  %conv26 = zext i1 %cmp25 to i32, !dbg !5587
  store i32 1, i32* %tmp27, align 4, !dbg !5587
  %9 = load i32, i32* %tmp27, align 4, !dbg !5587
  br label %do.body28, !dbg !5589

do.body28:                                        ; preds = %do.body22
  br label %do.body29, !dbg !5590

do.body29:                                        ; preds = %do.body28
  br label %do.body30, !dbg !5592

do.body30:                                        ; preds = %do.body29
  call void @llvm.dbg.declare(metadata i64* %__dummy31, metadata !5594, metadata !DIExpression()), !dbg !5597
  call void @llvm.dbg.declare(metadata i64* %__dummy232, metadata !5598, metadata !DIExpression()), !dbg !5597
  %cmp33 = icmp eq i64* %__dummy31, %__dummy232, !dbg !5597
  %conv34 = zext i1 %cmp33 to i32, !dbg !5597
  store i32 1, i32* %tmp35, align 4, !dbg !5597
  %10 = load i32, i32* %tmp35, align 4, !dbg !5597
  %11 = load i64, i64* %flags, align 8, !dbg !5599
  call void @arch_local_irq_restore(i64 %11) #10, !dbg !5599
  br label %do.end36, !dbg !5599

do.end36:                                         ; preds = %do.body30
  br label %do.end37, !dbg !5592

do.end37:                                         ; preds = %do.end36
  br label %do.body38, !dbg !5590

do.body38:                                        ; preds = %do.end37
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !5600, !srcloc !5602
  br label %do.body39, !dbg !5600

do.body39:                                        ; preds = %do.body38
  br label %do.end40, !dbg !5603

do.end40:                                         ; preds = %do.body39
  br label %do.end41, !dbg !5600

do.end41:                                         ; preds = %do.end40
  br label %do.end42, !dbg !5590

do.end42:                                         ; preds = %do.end41
  br label %do.end43, !dbg !5589

do.end43:                                         ; preds = %do.end42
  %12 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5605
  ret %struct.device_node* %12, !dbg !5606
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device_node* @of_find_node_by_type(%struct.device_node* %from, i8* %type) #0 !dbg !5607 {
entry:
  %from.addr = alloca %struct.device_node*, align 8
  %type.addr = alloca i8*, align 8
  %np = alloca %struct.device_node*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy4 = alloca i64, align 8
  %__dummy25 = alloca i64, align 8
  %tmp8 = alloca i32, align 4
  %__dummy23 = alloca i64, align 8
  %__dummy224 = alloca i64, align 8
  %tmp27 = alloca i32, align 4
  %__dummy31 = alloca i64, align 8
  %__dummy232 = alloca i64, align 8
  %tmp35 = alloca i32, align 4
  store %struct.device_node* %from, %struct.device_node** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %from.addr, metadata !5608, metadata !DIExpression()), !dbg !5609
  store i8* %type, i8** %type.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %type.addr, metadata !5610, metadata !DIExpression()), !dbg !5611
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !5612, metadata !DIExpression()), !dbg !5613
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5614, metadata !DIExpression()), !dbg !5615
  br label %do.body, !dbg !5616

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5617, metadata !DIExpression()), !dbg !5620
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5621, metadata !DIExpression()), !dbg !5620
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5620
  %conv = zext i1 %cmp to i32, !dbg !5620
  store i32 1, i32* %tmp, align 4, !dbg !5620
  %0 = load i32, i32* %tmp, align 4, !dbg !5620
  br label %do.body1, !dbg !5622

do.body1:                                         ; preds = %do.body
  br label %do.body2, !dbg !5623

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !5625

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy4, metadata !5627, metadata !DIExpression()), !dbg !5630
  call void @llvm.dbg.declare(metadata i64* %__dummy25, metadata !5631, metadata !DIExpression()), !dbg !5630
  %cmp6 = icmp eq i64* %__dummy4, %__dummy25, !dbg !5630
  %conv7 = zext i1 %cmp6 to i32, !dbg !5630
  store i32 1, i32* %tmp8, align 4, !dbg !5630
  %1 = load i32, i32* %tmp8, align 4, !dbg !5630
  %call = call i64 @arch_local_irq_save() #10, !dbg !5632
  store i64 %call, i64* %flags, align 8, !dbg !5632
  br label %do.end, !dbg !5632

do.end:                                           ; preds = %do.body3
  br label %do.end9, !dbg !5625

do.end9:                                          ; preds = %do.end
  br label %do.body10, !dbg !5623

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !5633, !srcloc !5635
  br label %do.body11, !dbg !5633

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !5636

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !5633

do.end13:                                         ; preds = %do.end12
  br label %do.end14, !dbg !5623

do.end14:                                         ; preds = %do.end13
  br label %do.end15, !dbg !5622

do.end15:                                         ; preds = %do.end14
  %2 = load %struct.device_node*, %struct.device_node** %from.addr, align 8, !dbg !5638
  %call16 = call %struct.device_node* @__of_find_all_nodes(%struct.device_node* %2) #10, !dbg !5638
  store %struct.device_node* %call16, %struct.device_node** %np, align 8, !dbg !5638
  br label %for.cond, !dbg !5638

for.cond:                                         ; preds = %for.inc, %do.end15
  %3 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5640
  %tobool = icmp ne %struct.device_node* %3, null, !dbg !5638
  br i1 %tobool, label %for.body, label %for.end, !dbg !5638

for.body:                                         ; preds = %for.cond
  %4 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5642
  %5 = load i8*, i8** %type.addr, align 8, !dbg !5644
  %call17 = call zeroext i1 @__of_node_is_type(%struct.device_node* %4, i8* %5) #10, !dbg !5645
  br i1 %call17, label %land.lhs.true, label %if.end, !dbg !5646

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5647
  %call19 = call %struct.device_node* @of_node_get(%struct.device_node* %6) #10, !dbg !5648
  %tobool20 = icmp ne %struct.device_node* %call19, null, !dbg !5648
  br i1 %tobool20, label %if.then, label %if.end, !dbg !5649

if.then:                                          ; preds = %land.lhs.true
  br label %for.end, !dbg !5650

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !5651

for.inc:                                          ; preds = %if.end
  %7 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5640
  %call21 = call %struct.device_node* @__of_find_all_nodes(%struct.device_node* %7) #10, !dbg !5640
  store %struct.device_node* %call21, %struct.device_node** %np, align 8, !dbg !5640
  br label %for.cond, !dbg !5640, !llvm.loop !5652

for.end:                                          ; preds = %if.then, %for.cond
  %8 = load %struct.device_node*, %struct.device_node** %from.addr, align 8, !dbg !5654
  call void @of_node_put(%struct.device_node* %8) #10, !dbg !5655
  br label %do.body22, !dbg !5656

do.body22:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i64* %__dummy23, metadata !5657, metadata !DIExpression()), !dbg !5660
  call void @llvm.dbg.declare(metadata i64* %__dummy224, metadata !5661, metadata !DIExpression()), !dbg !5660
  %cmp25 = icmp eq i64* %__dummy23, %__dummy224, !dbg !5660
  %conv26 = zext i1 %cmp25 to i32, !dbg !5660
  store i32 1, i32* %tmp27, align 4, !dbg !5660
  %9 = load i32, i32* %tmp27, align 4, !dbg !5660
  br label %do.body28, !dbg !5662

do.body28:                                        ; preds = %do.body22
  br label %do.body29, !dbg !5663

do.body29:                                        ; preds = %do.body28
  br label %do.body30, !dbg !5665

do.body30:                                        ; preds = %do.body29
  call void @llvm.dbg.declare(metadata i64* %__dummy31, metadata !5667, metadata !DIExpression()), !dbg !5670
  call void @llvm.dbg.declare(metadata i64* %__dummy232, metadata !5671, metadata !DIExpression()), !dbg !5670
  %cmp33 = icmp eq i64* %__dummy31, %__dummy232, !dbg !5670
  %conv34 = zext i1 %cmp33 to i32, !dbg !5670
  store i32 1, i32* %tmp35, align 4, !dbg !5670
  %10 = load i32, i32* %tmp35, align 4, !dbg !5670
  %11 = load i64, i64* %flags, align 8, !dbg !5672
  call void @arch_local_irq_restore(i64 %11) #10, !dbg !5672
  br label %do.end36, !dbg !5672

do.end36:                                         ; preds = %do.body30
  br label %do.end37, !dbg !5665

do.end37:                                         ; preds = %do.end36
  br label %do.body38, !dbg !5663

do.body38:                                        ; preds = %do.end37
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !5673, !srcloc !5675
  br label %do.body39, !dbg !5673

do.body39:                                        ; preds = %do.body38
  br label %do.end40, !dbg !5676

do.end40:                                         ; preds = %do.body39
  br label %do.end41, !dbg !5673

do.end41:                                         ; preds = %do.end40
  br label %do.end42, !dbg !5663

do.end42:                                         ; preds = %do.end41
  br label %do.end43, !dbg !5662

do.end43:                                         ; preds = %do.end42
  %12 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5678
  ret %struct.device_node* %12, !dbg !5679
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device_node* @of_find_compatible_node(%struct.device_node* %from, i8* %type, i8* %compatible) #0 !dbg !5680 {
entry:
  %from.addr = alloca %struct.device_node*, align 8
  %type.addr = alloca i8*, align 8
  %compatible.addr = alloca i8*, align 8
  %np = alloca %struct.device_node*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy4 = alloca i64, align 8
  %__dummy25 = alloca i64, align 8
  %tmp8 = alloca i32, align 4
  %__dummy23 = alloca i64, align 8
  %__dummy224 = alloca i64, align 8
  %tmp27 = alloca i32, align 4
  %__dummy31 = alloca i64, align 8
  %__dummy232 = alloca i64, align 8
  %tmp35 = alloca i32, align 4
  store %struct.device_node* %from, %struct.device_node** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %from.addr, metadata !5683, metadata !DIExpression()), !dbg !5684
  store i8* %type, i8** %type.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %type.addr, metadata !5685, metadata !DIExpression()), !dbg !5686
  store i8* %compatible, i8** %compatible.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %compatible.addr, metadata !5687, metadata !DIExpression()), !dbg !5688
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !5689, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5691, metadata !DIExpression()), !dbg !5692
  br label %do.body, !dbg !5693

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5694, metadata !DIExpression()), !dbg !5697
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5698, metadata !DIExpression()), !dbg !5697
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5697
  %conv = zext i1 %cmp to i32, !dbg !5697
  store i32 1, i32* %tmp, align 4, !dbg !5697
  %0 = load i32, i32* %tmp, align 4, !dbg !5697
  br label %do.body1, !dbg !5699

do.body1:                                         ; preds = %do.body
  br label %do.body2, !dbg !5700

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !5702

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy4, metadata !5704, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.declare(metadata i64* %__dummy25, metadata !5708, metadata !DIExpression()), !dbg !5707
  %cmp6 = icmp eq i64* %__dummy4, %__dummy25, !dbg !5707
  %conv7 = zext i1 %cmp6 to i32, !dbg !5707
  store i32 1, i32* %tmp8, align 4, !dbg !5707
  %1 = load i32, i32* %tmp8, align 4, !dbg !5707
  %call = call i64 @arch_local_irq_save() #10, !dbg !5709
  store i64 %call, i64* %flags, align 8, !dbg !5709
  br label %do.end, !dbg !5709

do.end:                                           ; preds = %do.body3
  br label %do.end9, !dbg !5702

do.end9:                                          ; preds = %do.end
  br label %do.body10, !dbg !5700

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !5710, !srcloc !5712
  br label %do.body11, !dbg !5710

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !5713

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !5710

do.end13:                                         ; preds = %do.end12
  br label %do.end14, !dbg !5700

do.end14:                                         ; preds = %do.end13
  br label %do.end15, !dbg !5699

do.end15:                                         ; preds = %do.end14
  %2 = load %struct.device_node*, %struct.device_node** %from.addr, align 8, !dbg !5715
  %call16 = call %struct.device_node* @__of_find_all_nodes(%struct.device_node* %2) #10, !dbg !5715
  store %struct.device_node* %call16, %struct.device_node** %np, align 8, !dbg !5715
  br label %for.cond, !dbg !5715

for.cond:                                         ; preds = %for.inc, %do.end15
  %3 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5717
  %tobool = icmp ne %struct.device_node* %3, null, !dbg !5715
  br i1 %tobool, label %for.body, label %for.end, !dbg !5715

for.body:                                         ; preds = %for.cond
  %4 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5719
  %5 = load i8*, i8** %compatible.addr, align 8, !dbg !5721
  %6 = load i8*, i8** %type.addr, align 8, !dbg !5722
  %call17 = call i32 @__of_device_is_compatible(%struct.device_node* %4, i8* %5, i8* %6, i8* null) #10, !dbg !5723
  %tobool18 = icmp ne i32 %call17, 0, !dbg !5723
  br i1 %tobool18, label %land.lhs.true, label %if.end, !dbg !5724

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5725
  %call19 = call %struct.device_node* @of_node_get(%struct.device_node* %7) #10, !dbg !5726
  %tobool20 = icmp ne %struct.device_node* %call19, null, !dbg !5726
  br i1 %tobool20, label %if.then, label %if.end, !dbg !5727

if.then:                                          ; preds = %land.lhs.true
  br label %for.end, !dbg !5728

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !5729

for.inc:                                          ; preds = %if.end
  %8 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5717
  %call21 = call %struct.device_node* @__of_find_all_nodes(%struct.device_node* %8) #10, !dbg !5717
  store %struct.device_node* %call21, %struct.device_node** %np, align 8, !dbg !5717
  br label %for.cond, !dbg !5717, !llvm.loop !5730

for.end:                                          ; preds = %if.then, %for.cond
  %9 = load %struct.device_node*, %struct.device_node** %from.addr, align 8, !dbg !5732
  call void @of_node_put(%struct.device_node* %9) #10, !dbg !5733
  br label %do.body22, !dbg !5734

do.body22:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i64* %__dummy23, metadata !5735, metadata !DIExpression()), !dbg !5738
  call void @llvm.dbg.declare(metadata i64* %__dummy224, metadata !5739, metadata !DIExpression()), !dbg !5738
  %cmp25 = icmp eq i64* %__dummy23, %__dummy224, !dbg !5738
  %conv26 = zext i1 %cmp25 to i32, !dbg !5738
  store i32 1, i32* %tmp27, align 4, !dbg !5738
  %10 = load i32, i32* %tmp27, align 4, !dbg !5738
  br label %do.body28, !dbg !5740

do.body28:                                        ; preds = %do.body22
  br label %do.body29, !dbg !5741

do.body29:                                        ; preds = %do.body28
  br label %do.body30, !dbg !5743

do.body30:                                        ; preds = %do.body29
  call void @llvm.dbg.declare(metadata i64* %__dummy31, metadata !5745, metadata !DIExpression()), !dbg !5748
  call void @llvm.dbg.declare(metadata i64* %__dummy232, metadata !5749, metadata !DIExpression()), !dbg !5748
  %cmp33 = icmp eq i64* %__dummy31, %__dummy232, !dbg !5748
  %conv34 = zext i1 %cmp33 to i32, !dbg !5748
  store i32 1, i32* %tmp35, align 4, !dbg !5748
  %11 = load i32, i32* %tmp35, align 4, !dbg !5748
  %12 = load i64, i64* %flags, align 8, !dbg !5750
  call void @arch_local_irq_restore(i64 %12) #10, !dbg !5750
  br label %do.end36, !dbg !5750

do.end36:                                         ; preds = %do.body30
  br label %do.end37, !dbg !5743

do.end37:                                         ; preds = %do.end36
  br label %do.body38, !dbg !5741

do.body38:                                        ; preds = %do.end37
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !5751, !srcloc !5753
  br label %do.body39, !dbg !5751

do.body39:                                        ; preds = %do.body38
  br label %do.end40, !dbg !5754

do.end40:                                         ; preds = %do.body39
  br label %do.end41, !dbg !5751

do.end41:                                         ; preds = %do.end40
  br label %do.end42, !dbg !5741

do.end42:                                         ; preds = %do.end41
  br label %do.end43, !dbg !5740

do.end43:                                         ; preds = %do.end42
  %13 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5756
  ret %struct.device_node* %13, !dbg !5757
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device_node* @of_find_node_with_property(%struct.device_node* %from, i8* %prop_name) #0 !dbg !5758 {
entry:
  %from.addr = alloca %struct.device_node*, align 8
  %prop_name.addr = alloca i8*, align 8
  %np = alloca %struct.device_node*, align 8
  %pp = alloca %struct.property*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy4 = alloca i64, align 8
  %__dummy25 = alloca i64, align 8
  %tmp8 = alloca i32, align 4
  %__dummy28 = alloca i64, align 8
  %__dummy229 = alloca i64, align 8
  %tmp32 = alloca i32, align 4
  %__dummy36 = alloca i64, align 8
  %__dummy237 = alloca i64, align 8
  %tmp40 = alloca i32, align 4
  store %struct.device_node* %from, %struct.device_node** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %from.addr, metadata !5759, metadata !DIExpression()), !dbg !5760
  store i8* %prop_name, i8** %prop_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prop_name.addr, metadata !5761, metadata !DIExpression()), !dbg !5762
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !5763, metadata !DIExpression()), !dbg !5764
  call void @llvm.dbg.declare(metadata %struct.property** %pp, metadata !5765, metadata !DIExpression()), !dbg !5766
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5767, metadata !DIExpression()), !dbg !5768
  br label %do.body, !dbg !5769

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5770, metadata !DIExpression()), !dbg !5773
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5774, metadata !DIExpression()), !dbg !5773
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5773
  %conv = zext i1 %cmp to i32, !dbg !5773
  store i32 1, i32* %tmp, align 4, !dbg !5773
  %0 = load i32, i32* %tmp, align 4, !dbg !5773
  br label %do.body1, !dbg !5775

do.body1:                                         ; preds = %do.body
  br label %do.body2, !dbg !5776

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !5778

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy4, metadata !5780, metadata !DIExpression()), !dbg !5783
  call void @llvm.dbg.declare(metadata i64* %__dummy25, metadata !5784, metadata !DIExpression()), !dbg !5783
  %cmp6 = icmp eq i64* %__dummy4, %__dummy25, !dbg !5783
  %conv7 = zext i1 %cmp6 to i32, !dbg !5783
  store i32 1, i32* %tmp8, align 4, !dbg !5783
  %1 = load i32, i32* %tmp8, align 4, !dbg !5783
  %call = call i64 @arch_local_irq_save() #10, !dbg !5785
  store i64 %call, i64* %flags, align 8, !dbg !5785
  br label %do.end, !dbg !5785

do.end:                                           ; preds = %do.body3
  br label %do.end9, !dbg !5778

do.end9:                                          ; preds = %do.end
  br label %do.body10, !dbg !5776

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !5786, !srcloc !5788
  br label %do.body11, !dbg !5786

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !5789

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !5786

do.end13:                                         ; preds = %do.end12
  br label %do.end14, !dbg !5776

do.end14:                                         ; preds = %do.end13
  br label %do.end15, !dbg !5775

do.end15:                                         ; preds = %do.end14
  %2 = load %struct.device_node*, %struct.device_node** %from.addr, align 8, !dbg !5791
  %call16 = call %struct.device_node* @__of_find_all_nodes(%struct.device_node* %2) #10, !dbg !5791
  store %struct.device_node* %call16, %struct.device_node** %np, align 8, !dbg !5791
  br label %for.cond, !dbg !5791

for.cond:                                         ; preds = %for.inc24, %do.end15
  %3 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5793
  %tobool = icmp ne %struct.device_node* %3, null, !dbg !5791
  br i1 %tobool, label %for.body, label %for.end26, !dbg !5791

for.body:                                         ; preds = %for.cond
  %4 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5795
  %properties = getelementptr inbounds %struct.device_node, %struct.device_node* %4, i32 0, i32 4, !dbg !5798
  %5 = load %struct.property*, %struct.property** %properties, align 8, !dbg !5798
  store %struct.property* %5, %struct.property** %pp, align 8, !dbg !5799
  br label %for.cond17, !dbg !5800

for.cond17:                                       ; preds = %for.inc, %for.body
  %6 = load %struct.property*, %struct.property** %pp, align 8, !dbg !5801
  %tobool18 = icmp ne %struct.property* %6, null, !dbg !5803
  br i1 %tobool18, label %for.body19, label %for.end, !dbg !5803

for.body19:                                       ; preds = %for.cond17
  %7 = load %struct.property*, %struct.property** %pp, align 8, !dbg !5804
  %name = getelementptr inbounds %struct.property, %struct.property* %7, i32 0, i32 0, !dbg !5804
  %8 = load i8*, i8** %name, align 8, !dbg !5804
  %9 = load i8*, i8** %prop_name.addr, align 8, !dbg !5804
  %call20 = call i32 @strcmp(i8* %8, i8* %9) #10, !dbg !5804
  %cmp21 = icmp eq i32 %call20, 0, !dbg !5807
  br i1 %cmp21, label %if.then, label %if.end, !dbg !5808

if.then:                                          ; preds = %for.body19
  %10 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5809
  %call23 = call %struct.device_node* @of_node_get(%struct.device_node* %10) #10, !dbg !5811
  br label %out, !dbg !5812

if.end:                                           ; preds = %for.body19
  br label %for.inc, !dbg !5813

for.inc:                                          ; preds = %if.end
  %11 = load %struct.property*, %struct.property** %pp, align 8, !dbg !5814
  %next = getelementptr inbounds %struct.property, %struct.property* %11, i32 0, i32 3, !dbg !5815
  %12 = load %struct.property*, %struct.property** %next, align 8, !dbg !5815
  store %struct.property* %12, %struct.property** %pp, align 8, !dbg !5816
  br label %for.cond17, !dbg !5817, !llvm.loop !5818

for.end:                                          ; preds = %for.cond17
  br label %for.inc24, !dbg !5820

for.inc24:                                        ; preds = %for.end
  %13 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5793
  %call25 = call %struct.device_node* @__of_find_all_nodes(%struct.device_node* %13) #10, !dbg !5793
  store %struct.device_node* %call25, %struct.device_node** %np, align 8, !dbg !5793
  br label %for.cond, !dbg !5793, !llvm.loop !5821

for.end26:                                        ; preds = %for.cond
  br label %out, !dbg !5822

out:                                              ; preds = %for.end26, %if.then
  call void @llvm.dbg.label(metadata !5823), !dbg !5824
  %14 = load %struct.device_node*, %struct.device_node** %from.addr, align 8, !dbg !5825
  call void @of_node_put(%struct.device_node* %14) #10, !dbg !5826
  br label %do.body27, !dbg !5827

do.body27:                                        ; preds = %out
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !5828, metadata !DIExpression()), !dbg !5831
  call void @llvm.dbg.declare(metadata i64* %__dummy229, metadata !5832, metadata !DIExpression()), !dbg !5831
  %cmp30 = icmp eq i64* %__dummy28, %__dummy229, !dbg !5831
  %conv31 = zext i1 %cmp30 to i32, !dbg !5831
  store i32 1, i32* %tmp32, align 4, !dbg !5831
  %15 = load i32, i32* %tmp32, align 4, !dbg !5831
  br label %do.body33, !dbg !5833

do.body33:                                        ; preds = %do.body27
  br label %do.body34, !dbg !5834

do.body34:                                        ; preds = %do.body33
  br label %do.body35, !dbg !5836

do.body35:                                        ; preds = %do.body34
  call void @llvm.dbg.declare(metadata i64* %__dummy36, metadata !5838, metadata !DIExpression()), !dbg !5841
  call void @llvm.dbg.declare(metadata i64* %__dummy237, metadata !5842, metadata !DIExpression()), !dbg !5841
  %cmp38 = icmp eq i64* %__dummy36, %__dummy237, !dbg !5841
  %conv39 = zext i1 %cmp38 to i32, !dbg !5841
  store i32 1, i32* %tmp40, align 4, !dbg !5841
  %16 = load i32, i32* %tmp40, align 4, !dbg !5841
  %17 = load i64, i64* %flags, align 8, !dbg !5843
  call void @arch_local_irq_restore(i64 %17) #10, !dbg !5843
  br label %do.end41, !dbg !5843

do.end41:                                         ; preds = %do.body35
  br label %do.end42, !dbg !5836

do.end42:                                         ; preds = %do.end41
  br label %do.body43, !dbg !5834

do.body43:                                        ; preds = %do.end42
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !5844, !srcloc !5846
  br label %do.body44, !dbg !5844

do.body44:                                        ; preds = %do.body43
  br label %do.end45, !dbg !5847

do.end45:                                         ; preds = %do.body44
  br label %do.end46, !dbg !5844

do.end46:                                         ; preds = %do.end45
  br label %do.end47, !dbg !5834

do.end47:                                         ; preds = %do.end46
  br label %do.end48, !dbg !5833

do.end48:                                         ; preds = %do.end47
  %18 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !5849
  ret %struct.device_node* %18, !dbg !5850
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.of_device_id* @of_match_node(%struct.of_device_id* %matches, %struct.device_node* %node) #0 !dbg !5851 {
entry:
  %matches.addr = alloca %struct.of_device_id*, align 8
  %node.addr = alloca %struct.device_node*, align 8
  %match = alloca %struct.of_device_id*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy4 = alloca i64, align 8
  %__dummy25 = alloca i64, align 8
  %tmp8 = alloca i32, align 4
  %__dummy18 = alloca i64, align 8
  %__dummy219 = alloca i64, align 8
  %tmp22 = alloca i32, align 4
  %__dummy26 = alloca i64, align 8
  %__dummy227 = alloca i64, align 8
  %tmp30 = alloca i32, align 4
  store %struct.of_device_id* %matches, %struct.of_device_id** %matches.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_device_id** %matches.addr, metadata !5854, metadata !DIExpression()), !dbg !5855
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !5856, metadata !DIExpression()), !dbg !5857
  call void @llvm.dbg.declare(metadata %struct.of_device_id** %match, metadata !5858, metadata !DIExpression()), !dbg !5859
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5860, metadata !DIExpression()), !dbg !5861
  br label %do.body, !dbg !5862

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5863, metadata !DIExpression()), !dbg !5866
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5867, metadata !DIExpression()), !dbg !5866
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5866
  %conv = zext i1 %cmp to i32, !dbg !5866
  store i32 1, i32* %tmp, align 4, !dbg !5866
  %0 = load i32, i32* %tmp, align 4, !dbg !5866
  br label %do.body1, !dbg !5868

do.body1:                                         ; preds = %do.body
  br label %do.body2, !dbg !5869

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !5871

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy4, metadata !5873, metadata !DIExpression()), !dbg !5876
  call void @llvm.dbg.declare(metadata i64* %__dummy25, metadata !5877, metadata !DIExpression()), !dbg !5876
  %cmp6 = icmp eq i64* %__dummy4, %__dummy25, !dbg !5876
  %conv7 = zext i1 %cmp6 to i32, !dbg !5876
  store i32 1, i32* %tmp8, align 4, !dbg !5876
  %1 = load i32, i32* %tmp8, align 4, !dbg !5876
  %call = call i64 @arch_local_irq_save() #10, !dbg !5878
  store i64 %call, i64* %flags, align 8, !dbg !5878
  br label %do.end, !dbg !5878

do.end:                                           ; preds = %do.body3
  br label %do.end9, !dbg !5871

do.end9:                                          ; preds = %do.end
  br label %do.body10, !dbg !5869

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !5879, !srcloc !5881
  br label %do.body11, !dbg !5879

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !5882

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !5879

do.end13:                                         ; preds = %do.end12
  br label %do.end14, !dbg !5869

do.end14:                                         ; preds = %do.end13
  br label %do.end15, !dbg !5868

do.end15:                                         ; preds = %do.end14
  %2 = load %struct.of_device_id*, %struct.of_device_id** %matches.addr, align 8, !dbg !5884
  %3 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !5885
  %call16 = call %struct.of_device_id* @__of_match_node(%struct.of_device_id* %2, %struct.device_node* %3) #10, !dbg !5886
  store %struct.of_device_id* %call16, %struct.of_device_id** %match, align 8, !dbg !5887
  br label %do.body17, !dbg !5888

do.body17:                                        ; preds = %do.end15
  call void @llvm.dbg.declare(metadata i64* %__dummy18, metadata !5889, metadata !DIExpression()), !dbg !5892
  call void @llvm.dbg.declare(metadata i64* %__dummy219, metadata !5893, metadata !DIExpression()), !dbg !5892
  %cmp20 = icmp eq i64* %__dummy18, %__dummy219, !dbg !5892
  %conv21 = zext i1 %cmp20 to i32, !dbg !5892
  store i32 1, i32* %tmp22, align 4, !dbg !5892
  %4 = load i32, i32* %tmp22, align 4, !dbg !5892
  br label %do.body23, !dbg !5894

do.body23:                                        ; preds = %do.body17
  br label %do.body24, !dbg !5895

do.body24:                                        ; preds = %do.body23
  br label %do.body25, !dbg !5897

do.body25:                                        ; preds = %do.body24
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !5899, metadata !DIExpression()), !dbg !5902
  call void @llvm.dbg.declare(metadata i64* %__dummy227, metadata !5903, metadata !DIExpression()), !dbg !5902
  %cmp28 = icmp eq i64* %__dummy26, %__dummy227, !dbg !5902
  %conv29 = zext i1 %cmp28 to i32, !dbg !5902
  store i32 1, i32* %tmp30, align 4, !dbg !5902
  %5 = load i32, i32* %tmp30, align 4, !dbg !5902
  %6 = load i64, i64* %flags, align 8, !dbg !5904
  call void @arch_local_irq_restore(i64 %6) #10, !dbg !5904
  br label %do.end31, !dbg !5904

do.end31:                                         ; preds = %do.body25
  br label %do.end32, !dbg !5897

do.end32:                                         ; preds = %do.end31
  br label %do.body33, !dbg !5895

do.body33:                                        ; preds = %do.end32
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !5905, !srcloc !5907
  br label %do.body34, !dbg !5905

do.body34:                                        ; preds = %do.body33
  br label %do.end35, !dbg !5908

do.end35:                                         ; preds = %do.body34
  br label %do.end36, !dbg !5905

do.end36:                                         ; preds = %do.end35
  br label %do.end37, !dbg !5895

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !5894

do.end38:                                         ; preds = %do.end37
  %7 = load %struct.of_device_id*, %struct.of_device_id** %match, align 8, !dbg !5910
  ret %struct.of_device_id* %7, !dbg !5911
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.of_device_id* @__of_match_node(%struct.of_device_id* %matches, %struct.device_node* %node) #0 !dbg !5912 {
entry:
  %retval = alloca %struct.of_device_id*, align 8
  %matches.addr = alloca %struct.of_device_id*, align 8
  %node.addr = alloca %struct.device_node*, align 8
  %best_match = alloca %struct.of_device_id*, align 8
  %score = alloca i32, align 4
  %best_score = alloca i32, align 4
  store %struct.of_device_id* %matches, %struct.of_device_id** %matches.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_device_id** %matches.addr, metadata !5913, metadata !DIExpression()), !dbg !5914
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !5915, metadata !DIExpression()), !dbg !5916
  call void @llvm.dbg.declare(metadata %struct.of_device_id** %best_match, metadata !5917, metadata !DIExpression()), !dbg !5918
  store %struct.of_device_id* null, %struct.of_device_id** %best_match, align 8, !dbg !5918
  call void @llvm.dbg.declare(metadata i32* %score, metadata !5919, metadata !DIExpression()), !dbg !5920
  call void @llvm.dbg.declare(metadata i32* %best_score, metadata !5921, metadata !DIExpression()), !dbg !5922
  store i32 0, i32* %best_score, align 4, !dbg !5922
  %0 = load %struct.of_device_id*, %struct.of_device_id** %matches.addr, align 8, !dbg !5923
  %tobool = icmp ne %struct.of_device_id* %0, null, !dbg !5923
  br i1 %tobool, label %if.end, label %if.then, !dbg !5925

if.then:                                          ; preds = %entry
  store %struct.of_device_id* null, %struct.of_device_id** %retval, align 8, !dbg !5926
  br label %return, !dbg !5926

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !5927

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load %struct.of_device_id*, %struct.of_device_id** %matches.addr, align 8, !dbg !5928
  %name = getelementptr inbounds %struct.of_device_id, %struct.of_device_id* %1, i32 0, i32 0, !dbg !5931
  %arrayidx = getelementptr [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !5928
  %2 = load i8, i8* %arrayidx, align 8, !dbg !5928
  %conv = sext i8 %2 to i32, !dbg !5928
  %tobool1 = icmp ne i32 %conv, 0, !dbg !5928
  br i1 %tobool1, label %lor.end, label %lor.lhs.false, !dbg !5932

lor.lhs.false:                                    ; preds = %for.cond
  %3 = load %struct.of_device_id*, %struct.of_device_id** %matches.addr, align 8, !dbg !5933
  %type = getelementptr inbounds %struct.of_device_id, %struct.of_device_id* %3, i32 0, i32 1, !dbg !5934
  %arrayidx2 = getelementptr [32 x i8], [32 x i8]* %type, i64 0, i64 0, !dbg !5933
  %4 = load i8, i8* %arrayidx2, align 8, !dbg !5933
  %conv3 = sext i8 %4 to i32, !dbg !5933
  %tobool4 = icmp ne i32 %conv3, 0, !dbg !5933
  br i1 %tobool4, label %lor.end, label %lor.rhs, !dbg !5935

lor.rhs:                                          ; preds = %lor.lhs.false
  %5 = load %struct.of_device_id*, %struct.of_device_id** %matches.addr, align 8, !dbg !5936
  %compatible = getelementptr inbounds %struct.of_device_id, %struct.of_device_id* %5, i32 0, i32 2, !dbg !5937
  %arrayidx5 = getelementptr [128 x i8], [128 x i8]* %compatible, i64 0, i64 0, !dbg !5936
  %6 = load i8, i8* %arrayidx5, align 8, !dbg !5936
  %conv6 = sext i8 %6 to i32, !dbg !5936
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !5935
  br label %lor.end, !dbg !5935

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %for.cond
  %7 = phi i1 [ true, %lor.lhs.false ], [ true, %for.cond ], [ %tobool7, %lor.rhs ]
  br i1 %7, label %for.body, label %for.end, !dbg !5938

for.body:                                         ; preds = %lor.end
  %8 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !5939
  %9 = load %struct.of_device_id*, %struct.of_device_id** %matches.addr, align 8, !dbg !5941
  %compatible8 = getelementptr inbounds %struct.of_device_id, %struct.of_device_id* %9, i32 0, i32 2, !dbg !5942
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %compatible8, i64 0, i64 0, !dbg !5941
  %10 = load %struct.of_device_id*, %struct.of_device_id** %matches.addr, align 8, !dbg !5943
  %type9 = getelementptr inbounds %struct.of_device_id, %struct.of_device_id* %10, i32 0, i32 1, !dbg !5944
  %arraydecay10 = getelementptr inbounds [32 x i8], [32 x i8]* %type9, i64 0, i64 0, !dbg !5943
  %11 = load %struct.of_device_id*, %struct.of_device_id** %matches.addr, align 8, !dbg !5945
  %name11 = getelementptr inbounds %struct.of_device_id, %struct.of_device_id* %11, i32 0, i32 0, !dbg !5946
  %arraydecay12 = getelementptr inbounds [32 x i8], [32 x i8]* %name11, i64 0, i64 0, !dbg !5945
  %call = call i32 @__of_device_is_compatible(%struct.device_node* %8, i8* %arraydecay, i8* %arraydecay10, i8* %arraydecay12) #10, !dbg !5947
  store i32 %call, i32* %score, align 4, !dbg !5948
  %12 = load i32, i32* %score, align 4, !dbg !5949
  %13 = load i32, i32* %best_score, align 4, !dbg !5951
  %cmp = icmp sgt i32 %12, %13, !dbg !5952
  br i1 %cmp, label %if.then14, label %if.end15, !dbg !5953

if.then14:                                        ; preds = %for.body
  %14 = load %struct.of_device_id*, %struct.of_device_id** %matches.addr, align 8, !dbg !5954
  store %struct.of_device_id* %14, %struct.of_device_id** %best_match, align 8, !dbg !5956
  %15 = load i32, i32* %score, align 4, !dbg !5957
  store i32 %15, i32* %best_score, align 4, !dbg !5958
  br label %if.end15, !dbg !5959

if.end15:                                         ; preds = %if.then14, %for.body
  br label %for.inc, !dbg !5960

for.inc:                                          ; preds = %if.end15
  %16 = load %struct.of_device_id*, %struct.of_device_id** %matches.addr, align 8, !dbg !5961
  %incdec.ptr = getelementptr %struct.of_device_id, %struct.of_device_id* %16, i32 1, !dbg !5961
  store %struct.of_device_id* %incdec.ptr, %struct.of_device_id** %matches.addr, align 8, !dbg !5961
  br label %for.cond, !dbg !5962, !llvm.loop !5963

for.end:                                          ; preds = %lor.end
  %17 = load %struct.of_device_id*, %struct.of_device_id** %best_match, align 8, !dbg !5965
  store %struct.of_device_id* %17, %struct.of_device_id** %retval, align 8, !dbg !5966
  br label %return, !dbg !5966

return:                                           ; preds = %for.end, %if.then
  %18 = load %struct.of_device_id*, %struct.of_device_id** %retval, align 8, !dbg !5967
  ret %struct.of_device_id* %18, !dbg !5967
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device_node* @of_find_matching_node_and_match(%struct.device_node* %from, %struct.of_device_id* %matches, %struct.of_device_id** %match) #0 !dbg !5968 {
entry:
  %from.addr = alloca %struct.device_node*, align 8
  %matches.addr = alloca %struct.of_device_id*, align 8
  %match.addr = alloca %struct.of_device_id**, align 8
  %np = alloca %struct.device_node*, align 8
  %m = alloca %struct.of_device_id*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy4 = alloca i64, align 8
  %__dummy25 = alloca i64, align 8
  %tmp8 = alloca i32, align 4
  %__dummy29 = alloca i64, align 8
  %__dummy230 = alloca i64, align 8
  %tmp33 = alloca i32, align 4
  %__dummy37 = alloca i64, align 8
  %__dummy238 = alloca i64, align 8
  %tmp41 = alloca i32, align 4
  store %struct.device_node* %from, %struct.device_node** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %from.addr, metadata !5972, metadata !DIExpression()), !dbg !5973
  store %struct.of_device_id* %matches, %struct.of_device_id** %matches.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_device_id** %matches.addr, metadata !5974, metadata !DIExpression()), !dbg !5975
  store %struct.of_device_id** %match, %struct.of_device_id*** %match.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_device_id*** %match.addr, metadata !5976, metadata !DIExpression()), !dbg !5977
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !5978, metadata !DIExpression()), !dbg !5979
  call void @llvm.dbg.declare(metadata %struct.of_device_id** %m, metadata !5980, metadata !DIExpression()), !dbg !5981
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5982, metadata !DIExpression()), !dbg !5983
  %0 = load %struct.of_device_id**, %struct.of_device_id*** %match.addr, align 8, !dbg !5984
  %tobool = icmp ne %struct.of_device_id** %0, null, !dbg !5984
  br i1 %tobool, label %if.then, label %if.end, !dbg !5986

if.then:                                          ; preds = %entry
  %1 = load %struct.of_device_id**, %struct.of_device_id*** %match.addr, align 8, !dbg !5987
  store %struct.of_device_id* null, %struct.of_device_id** %1, align 8, !dbg !5988
  br label %if.end, !dbg !5989

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !5990

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5991, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5995, metadata !DIExpression()), !dbg !5994
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5994
  %conv = zext i1 %cmp to i32, !dbg !5994
  store i32 1, i32* %tmp, align 4, !dbg !5994
  %2 = load i32, i32* %tmp, align 4, !dbg !5994
  br label %do.body1, !dbg !5996

do.body1:                                         ; preds = %do.body
  br label %do.body2, !dbg !5997

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !5999

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy4, metadata !6001, metadata !DIExpression()), !dbg !6004
  call void @llvm.dbg.declare(metadata i64* %__dummy25, metadata !6005, metadata !DIExpression()), !dbg !6004
  %cmp6 = icmp eq i64* %__dummy4, %__dummy25, !dbg !6004
  %conv7 = zext i1 %cmp6 to i32, !dbg !6004
  store i32 1, i32* %tmp8, align 4, !dbg !6004
  %3 = load i32, i32* %tmp8, align 4, !dbg !6004
  %call = call i64 @arch_local_irq_save() #10, !dbg !6006
  store i64 %call, i64* %flags, align 8, !dbg !6006
  br label %do.end, !dbg !6006

do.end:                                           ; preds = %do.body3
  br label %do.end9, !dbg !5999

do.end9:                                          ; preds = %do.end
  br label %do.body10, !dbg !5997

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6007, !srcloc !6009
  br label %do.body11, !dbg !6007

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !6010

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !6007

do.end13:                                         ; preds = %do.end12
  br label %do.end14, !dbg !5997

do.end14:                                         ; preds = %do.end13
  br label %do.end15, !dbg !5996

do.end15:                                         ; preds = %do.end14
  %4 = load %struct.device_node*, %struct.device_node** %from.addr, align 8, !dbg !6012
  %call16 = call %struct.device_node* @__of_find_all_nodes(%struct.device_node* %4) #10, !dbg !6012
  store %struct.device_node* %call16, %struct.device_node** %np, align 8, !dbg !6012
  br label %for.cond, !dbg !6012

for.cond:                                         ; preds = %for.inc, %do.end15
  %5 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !6014
  %tobool17 = icmp ne %struct.device_node* %5, null, !dbg !6012
  br i1 %tobool17, label %for.body, label %for.end, !dbg !6012

for.body:                                         ; preds = %for.cond
  %6 = load %struct.of_device_id*, %struct.of_device_id** %matches.addr, align 8, !dbg !6016
  %7 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !6018
  %call18 = call %struct.of_device_id* @__of_match_node(%struct.of_device_id* %6, %struct.device_node* %7) #10, !dbg !6019
  store %struct.of_device_id* %call18, %struct.of_device_id** %m, align 8, !dbg !6020
  %8 = load %struct.of_device_id*, %struct.of_device_id** %m, align 8, !dbg !6021
  %tobool19 = icmp ne %struct.of_device_id* %8, null, !dbg !6021
  br i1 %tobool19, label %land.lhs.true, label %if.end26, !dbg !6023

land.lhs.true:                                    ; preds = %for.body
  %9 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !6024
  %call20 = call %struct.device_node* @of_node_get(%struct.device_node* %9) #10, !dbg !6025
  %tobool21 = icmp ne %struct.device_node* %call20, null, !dbg !6025
  br i1 %tobool21, label %if.then22, label %if.end26, !dbg !6026

if.then22:                                        ; preds = %land.lhs.true
  %10 = load %struct.of_device_id**, %struct.of_device_id*** %match.addr, align 8, !dbg !6027
  %tobool23 = icmp ne %struct.of_device_id** %10, null, !dbg !6027
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !6030

if.then24:                                        ; preds = %if.then22
  %11 = load %struct.of_device_id*, %struct.of_device_id** %m, align 8, !dbg !6031
  %12 = load %struct.of_device_id**, %struct.of_device_id*** %match.addr, align 8, !dbg !6032
  store %struct.of_device_id* %11, %struct.of_device_id** %12, align 8, !dbg !6033
  br label %if.end25, !dbg !6034

if.end25:                                         ; preds = %if.then24, %if.then22
  br label %for.end, !dbg !6035

if.end26:                                         ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !6036

for.inc:                                          ; preds = %if.end26
  %13 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !6014
  %call27 = call %struct.device_node* @__of_find_all_nodes(%struct.device_node* %13) #10, !dbg !6014
  store %struct.device_node* %call27, %struct.device_node** %np, align 8, !dbg !6014
  br label %for.cond, !dbg !6014, !llvm.loop !6037

for.end:                                          ; preds = %if.end25, %for.cond
  %14 = load %struct.device_node*, %struct.device_node** %from.addr, align 8, !dbg !6039
  call void @of_node_put(%struct.device_node* %14) #10, !dbg !6040
  br label %do.body28, !dbg !6041

do.body28:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !6042, metadata !DIExpression()), !dbg !6045
  call void @llvm.dbg.declare(metadata i64* %__dummy230, metadata !6046, metadata !DIExpression()), !dbg !6045
  %cmp31 = icmp eq i64* %__dummy29, %__dummy230, !dbg !6045
  %conv32 = zext i1 %cmp31 to i32, !dbg !6045
  store i32 1, i32* %tmp33, align 4, !dbg !6045
  %15 = load i32, i32* %tmp33, align 4, !dbg !6045
  br label %do.body34, !dbg !6047

do.body34:                                        ; preds = %do.body28
  br label %do.body35, !dbg !6048

do.body35:                                        ; preds = %do.body34
  br label %do.body36, !dbg !6050

do.body36:                                        ; preds = %do.body35
  call void @llvm.dbg.declare(metadata i64* %__dummy37, metadata !6052, metadata !DIExpression()), !dbg !6055
  call void @llvm.dbg.declare(metadata i64* %__dummy238, metadata !6056, metadata !DIExpression()), !dbg !6055
  %cmp39 = icmp eq i64* %__dummy37, %__dummy238, !dbg !6055
  %conv40 = zext i1 %cmp39 to i32, !dbg !6055
  store i32 1, i32* %tmp41, align 4, !dbg !6055
  %16 = load i32, i32* %tmp41, align 4, !dbg !6055
  %17 = load i64, i64* %flags, align 8, !dbg !6057
  call void @arch_local_irq_restore(i64 %17) #10, !dbg !6057
  br label %do.end42, !dbg !6057

do.end42:                                         ; preds = %do.body36
  br label %do.end43, !dbg !6050

do.end43:                                         ; preds = %do.end42
  br label %do.body44, !dbg !6048

do.body44:                                        ; preds = %do.end43
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6058, !srcloc !6060
  br label %do.body45, !dbg !6058

do.body45:                                        ; preds = %do.body44
  br label %do.end46, !dbg !6061

do.end46:                                         ; preds = %do.body45
  br label %do.end47, !dbg !6058

do.end47:                                         ; preds = %do.end46
  br label %do.end48, !dbg !6048

do.end48:                                         ; preds = %do.end47
  br label %do.end49, !dbg !6047

do.end49:                                         ; preds = %do.end48
  %18 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !6063
  ret %struct.device_node* %18, !dbg !6064
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_modalias_node(%struct.device_node* %node, i8* %modalias, i32 %len) #0 !dbg !6065 {
entry:
  %retval = alloca i32, align 4
  %node.addr = alloca %struct.device_node*, align 8
  %modalias.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %compatible = alloca i8*, align 8
  %p = alloca i8*, align 8
  %cplen = alloca i32, align 4
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !6068, metadata !DIExpression()), !dbg !6069
  store i8* %modalias, i8** %modalias.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %modalias.addr, metadata !6070, metadata !DIExpression()), !dbg !6071
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !6072, metadata !DIExpression()), !dbg !6073
  call void @llvm.dbg.declare(metadata i8** %compatible, metadata !6074, metadata !DIExpression()), !dbg !6075
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6076, metadata !DIExpression()), !dbg !6077
  call void @llvm.dbg.declare(metadata i32* %cplen, metadata !6078, metadata !DIExpression()), !dbg !6079
  %0 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !6080
  %call = call i8* @of_get_property(%struct.device_node* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i32* %cplen) #10, !dbg !6081
  store i8* %call, i8** %compatible, align 8, !dbg !6082
  %1 = load i8*, i8** %compatible, align 8, !dbg !6083
  %tobool = icmp ne i8* %1, null, !dbg !6083
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6085

lor.lhs.false:                                    ; preds = %entry
  %2 = load i8*, i8** %compatible, align 8, !dbg !6086
  %call1 = call i64 @strlen(i8* %2) #10, !dbg !6087
  %3 = load i32, i32* %cplen, align 4, !dbg !6088
  %conv = sext i32 %3 to i64, !dbg !6088
  %cmp = icmp ugt i64 %call1, %conv, !dbg !6089
  br i1 %cmp, label %if.then, label %if.end, !dbg !6090

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -19, i32* %retval, align 4, !dbg !6091
  br label %return, !dbg !6091

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8*, i8** %compatible, align 8, !dbg !6092
  %call3 = call i8* @strchr(i8* %4, i32 44) #10, !dbg !6093
  store i8* %call3, i8** %p, align 8, !dbg !6094
  %5 = load i8*, i8** %modalias.addr, align 8, !dbg !6095
  %6 = load i8*, i8** %p, align 8, !dbg !6096
  %tobool4 = icmp ne i8* %6, null, !dbg !6096
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !6096

cond.true:                                        ; preds = %if.end
  %7 = load i8*, i8** %p, align 8, !dbg !6097
  %add.ptr = getelementptr i8, i8* %7, i64 1, !dbg !6098
  br label %cond.end, !dbg !6096

cond.false:                                       ; preds = %if.end
  %8 = load i8*, i8** %compatible, align 8, !dbg !6099
  br label %cond.end, !dbg !6096

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %8, %cond.false ], !dbg !6096
  %9 = load i32, i32* %len.addr, align 4, !dbg !6100
  %conv5 = sext i32 %9 to i64, !dbg !6100
  %call6 = call i64 @strlcpy(i8* %5, i8* %cond, i64 %conv5) #10, !dbg !6101
  store i32 0, i32* %retval, align 4, !dbg !6102
  br label %return, !dbg !6102

return:                                           ; preds = %cond.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !6103
  ret i32 %10, !dbg !6103
}

; Function Attrs: noredzone
declare dso_local i64 @strlcpy(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device_node* @of_find_node_by_phandle(i32 %handle) #0 !dbg !6104 {
entry:
  %retval = alloca %struct.device_node*, align 8
  %handle.addr = alloca i32, align 4
  %np = alloca %struct.device_node*, align 8
  %flags = alloca i64, align 8
  %handle_hash = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy4 = alloca i64, align 8
  %__dummy25 = alloca i64, align 8
  %tmp8 = alloca i32, align 4
  %__dummy44 = alloca i64, align 8
  %__dummy245 = alloca i64, align 8
  %tmp48 = alloca i32, align 4
  %__dummy52 = alloca i64, align 8
  %__dummy253 = alloca i64, align 8
  %tmp56 = alloca i32, align 4
  store i32 %handle, i32* %handle.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %handle.addr, metadata !6107, metadata !DIExpression()), !dbg !6108
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !6109, metadata !DIExpression()), !dbg !6110
  store %struct.device_node* null, %struct.device_node** %np, align 8, !dbg !6110
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6111, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.declare(metadata i32* %handle_hash, metadata !6113, metadata !DIExpression()), !dbg !6114
  %0 = load i32, i32* %handle.addr, align 4, !dbg !6115
  %tobool = icmp ne i32 %0, 0, !dbg !6115
  br i1 %tobool, label %if.end, label %if.then, !dbg !6117

if.then:                                          ; preds = %entry
  store %struct.device_node* null, %struct.device_node** %retval, align 8, !dbg !6118
  br label %return, !dbg !6118

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %handle.addr, align 4, !dbg !6119
  %call = call i32 @of_phandle_cache_hash(i32 %1) #10, !dbg !6120
  store i32 %call, i32* %handle_hash, align 4, !dbg !6121
  br label %do.body, !dbg !6122

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6123, metadata !DIExpression()), !dbg !6126
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6127, metadata !DIExpression()), !dbg !6126
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6126
  %conv = zext i1 %cmp to i32, !dbg !6126
  store i32 1, i32* %tmp, align 4, !dbg !6126
  %2 = load i32, i32* %tmp, align 4, !dbg !6126
  br label %do.body1, !dbg !6128

do.body1:                                         ; preds = %do.body
  br label %do.body2, !dbg !6129

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6131

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy4, metadata !6133, metadata !DIExpression()), !dbg !6136
  call void @llvm.dbg.declare(metadata i64* %__dummy25, metadata !6137, metadata !DIExpression()), !dbg !6136
  %cmp6 = icmp eq i64* %__dummy4, %__dummy25, !dbg !6136
  %conv7 = zext i1 %cmp6 to i32, !dbg !6136
  store i32 1, i32* %tmp8, align 4, !dbg !6136
  %3 = load i32, i32* %tmp8, align 4, !dbg !6136
  %call9 = call i64 @arch_local_irq_save() #10, !dbg !6138
  store i64 %call9, i64* %flags, align 8, !dbg !6138
  br label %do.end, !dbg !6138

do.end:                                           ; preds = %do.body3
  br label %do.end10, !dbg !6131

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !6129

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6139, !srcloc !6141
  br label %do.body12, !dbg !6139

do.body12:                                        ; preds = %do.body11
  br label %do.end13, !dbg !6142

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !6139

do.end14:                                         ; preds = %do.end13
  br label %do.end15, !dbg !6129

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !6128

do.end16:                                         ; preds = %do.end15
  %4 = load i32, i32* %handle_hash, align 4, !dbg !6144
  %idxprom = zext i32 %4 to i64, !dbg !6146
  %arrayidx = getelementptr [128 x %struct.device_node*], [128 x %struct.device_node*]* @phandle_cache, i64 0, i64 %idxprom, !dbg !6146
  %5 = load %struct.device_node*, %struct.device_node** %arrayidx, align 8, !dbg !6146
  %tobool17 = icmp ne %struct.device_node* %5, null, !dbg !6146
  br i1 %tobool17, label %land.lhs.true, label %if.end25, !dbg !6147

land.lhs.true:                                    ; preds = %do.end16
  %6 = load i32, i32* %handle.addr, align 4, !dbg !6148
  %7 = load i32, i32* %handle_hash, align 4, !dbg !6149
  %idxprom18 = zext i32 %7 to i64, !dbg !6150
  %arrayidx19 = getelementptr [128 x %struct.device_node*], [128 x %struct.device_node*]* @phandle_cache, i64 0, i64 %idxprom18, !dbg !6150
  %8 = load %struct.device_node*, %struct.device_node** %arrayidx19, align 8, !dbg !6150
  %phandle = getelementptr inbounds %struct.device_node, %struct.device_node* %8, i32 0, i32 1, !dbg !6151
  %9 = load i32, i32* %phandle, align 8, !dbg !6151
  %cmp20 = icmp eq i32 %6, %9, !dbg !6152
  br i1 %cmp20, label %if.then22, label %if.end25, !dbg !6153

if.then22:                                        ; preds = %land.lhs.true
  %10 = load i32, i32* %handle_hash, align 4, !dbg !6154
  %idxprom23 = zext i32 %10 to i64, !dbg !6155
  %arrayidx24 = getelementptr [128 x %struct.device_node*], [128 x %struct.device_node*]* @phandle_cache, i64 0, i64 %idxprom23, !dbg !6155
  %11 = load %struct.device_node*, %struct.device_node** %arrayidx24, align 8, !dbg !6155
  store %struct.device_node* %11, %struct.device_node** %np, align 8, !dbg !6156
  br label %if.end25, !dbg !6157

if.end25:                                         ; preds = %if.then22, %land.lhs.true, %do.end16
  %12 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !6158
  %tobool26 = icmp ne %struct.device_node* %12, null, !dbg !6158
  br i1 %tobool26, label %if.end41, label %if.then27, !dbg !6160

if.then27:                                        ; preds = %if.end25
  %call28 = call %struct.device_node* @__of_find_all_nodes(%struct.device_node* null) #10, !dbg !6161
  store %struct.device_node* %call28, %struct.device_node** %np, align 8, !dbg !6161
  br label %for.cond, !dbg !6161

for.cond:                                         ; preds = %for.inc, %if.then27
  %13 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !6164
  %tobool29 = icmp ne %struct.device_node* %13, null, !dbg !6161
  br i1 %tobool29, label %for.body, label %for.end, !dbg !6161

for.body:                                         ; preds = %for.cond
  %14 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !6166
  %phandle30 = getelementptr inbounds %struct.device_node, %struct.device_node* %14, i32 0, i32 1, !dbg !6168
  %15 = load i32, i32* %phandle30, align 8, !dbg !6168
  %16 = load i32, i32* %handle.addr, align 4, !dbg !6169
  %cmp31 = icmp eq i32 %15, %16, !dbg !6170
  br i1 %cmp31, label %land.lhs.true33, label %if.end39, !dbg !6171

land.lhs.true33:                                  ; preds = %for.body
  %17 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !6172
  %call34 = call i32 @of_node_check_flag(%struct.device_node* %17, i64 2) #10, !dbg !6173
  %tobool35 = icmp ne i32 %call34, 0, !dbg !6173
  br i1 %tobool35, label %if.end39, label %if.then36, !dbg !6174

if.then36:                                        ; preds = %land.lhs.true33
  %18 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !6175
  %19 = load i32, i32* %handle_hash, align 4, !dbg !6177
  %idxprom37 = zext i32 %19 to i64, !dbg !6178
  %arrayidx38 = getelementptr [128 x %struct.device_node*], [128 x %struct.device_node*]* @phandle_cache, i64 0, i64 %idxprom37, !dbg !6178
  store %struct.device_node* %18, %struct.device_node** %arrayidx38, align 8, !dbg !6179
  br label %for.end, !dbg !6180

if.end39:                                         ; preds = %land.lhs.true33, %for.body
  br label %for.inc, !dbg !6181

for.inc:                                          ; preds = %if.end39
  %20 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !6164
  %call40 = call %struct.device_node* @__of_find_all_nodes(%struct.device_node* %20) #10, !dbg !6164
  store %struct.device_node* %call40, %struct.device_node** %np, align 8, !dbg !6164
  br label %for.cond, !dbg !6164, !llvm.loop !6182

for.end:                                          ; preds = %if.then36, %for.cond
  br label %if.end41, !dbg !6184

if.end41:                                         ; preds = %for.end, %if.end25
  %21 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !6185
  %call42 = call %struct.device_node* @of_node_get(%struct.device_node* %21) #10, !dbg !6186
  br label %do.body43, !dbg !6187

do.body43:                                        ; preds = %if.end41
  call void @llvm.dbg.declare(metadata i64* %__dummy44, metadata !6188, metadata !DIExpression()), !dbg !6191
  call void @llvm.dbg.declare(metadata i64* %__dummy245, metadata !6192, metadata !DIExpression()), !dbg !6191
  %cmp46 = icmp eq i64* %__dummy44, %__dummy245, !dbg !6191
  %conv47 = zext i1 %cmp46 to i32, !dbg !6191
  store i32 1, i32* %tmp48, align 4, !dbg !6191
  %22 = load i32, i32* %tmp48, align 4, !dbg !6191
  br label %do.body49, !dbg !6193

do.body49:                                        ; preds = %do.body43
  br label %do.body50, !dbg !6194

do.body50:                                        ; preds = %do.body49
  br label %do.body51, !dbg !6196

do.body51:                                        ; preds = %do.body50
  call void @llvm.dbg.declare(metadata i64* %__dummy52, metadata !6198, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.declare(metadata i64* %__dummy253, metadata !6202, metadata !DIExpression()), !dbg !6201
  %cmp54 = icmp eq i64* %__dummy52, %__dummy253, !dbg !6201
  %conv55 = zext i1 %cmp54 to i32, !dbg !6201
  store i32 1, i32* %tmp56, align 4, !dbg !6201
  %23 = load i32, i32* %tmp56, align 4, !dbg !6201
  %24 = load i64, i64* %flags, align 8, !dbg !6203
  call void @arch_local_irq_restore(i64 %24) #10, !dbg !6203
  br label %do.end57, !dbg !6203

do.end57:                                         ; preds = %do.body51
  br label %do.end58, !dbg !6196

do.end58:                                         ; preds = %do.end57
  br label %do.body59, !dbg !6194

do.body59:                                        ; preds = %do.end58
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6204, !srcloc !6206
  br label %do.body60, !dbg !6204

do.body60:                                        ; preds = %do.body59
  br label %do.end61, !dbg !6207

do.end61:                                         ; preds = %do.body60
  br label %do.end62, !dbg !6204

do.end62:                                         ; preds = %do.end61
  br label %do.end63, !dbg !6194

do.end63:                                         ; preds = %do.end62
  br label %do.end64, !dbg !6193

do.end64:                                         ; preds = %do.end63
  %25 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !6209
  store %struct.device_node* %25, %struct.device_node** %retval, align 8, !dbg !6210
  br label %return, !dbg !6210

return:                                           ; preds = %do.end64, %if.then
  %26 = load %struct.device_node*, %struct.device_node** %retval, align 8, !dbg !6211
  ret %struct.device_node* %26, !dbg !6211
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_node_check_flag(%struct.device_node* %n, i64 %flag) #0 !dbg !6212 {
entry:
  %n.addr = alloca %struct.device_node*, align 8
  %flag.addr = alloca i64, align 8
  store %struct.device_node* %n, %struct.device_node** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %n.addr, metadata !6215, metadata !DIExpression()), !dbg !6216
  store i64 %flag, i64* %flag.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flag.addr, metadata !6217, metadata !DIExpression()), !dbg !6218
  %0 = load i64, i64* %flag.addr, align 8, !dbg !6219
  %1 = load %struct.device_node*, %struct.device_node** %n.addr, align 8, !dbg !6220
  %_flags = getelementptr inbounds %struct.device_node, %struct.device_node* %1, i32 0, i32 10, !dbg !6221
  %call = call zeroext i1 @test_bit(i64 %0, i64* %_flags) #10, !dbg !6222
  %conv = zext i1 %call to i32, !dbg !6222
  ret i32 %conv, !dbg !6223
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @of_print_phandle_args(i8* %msg, %struct.of_phandle_args* %args) #0 !dbg !6224 {
entry:
  %msg.addr = alloca i8*, align 8
  %args.addr = alloca %struct.of_phandle_args*, align 8
  %i = alloca i32, align 4
  %delim = alloca i8, align 1
  store i8* %msg, i8** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %msg.addr, metadata !6229, metadata !DIExpression()), !dbg !6230
  store %struct.of_phandle_args* %args, %struct.of_phandle_args** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args** %args.addr, metadata !6231, metadata !DIExpression()), !dbg !6232
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6233, metadata !DIExpression()), !dbg !6234
  %0 = load i8*, i8** %msg.addr, align 8, !dbg !6235
  %1 = load %struct.of_phandle_args*, %struct.of_phandle_args** %args.addr, align 8, !dbg !6236
  %np = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %1, i32 0, i32 0, !dbg !6237
  %2 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !6237
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), i8* %0, %struct.device_node* %2) #11, !dbg !6238
  store i32 0, i32* %i, align 4, !dbg !6239
  br label %for.cond, !dbg !6241

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !6242
  %4 = load %struct.of_phandle_args*, %struct.of_phandle_args** %args.addr, align 8, !dbg !6244
  %args_count = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %4, i32 0, i32 1, !dbg !6245
  %5 = load i32, i32* %args_count, align 8, !dbg !6245
  %cmp = icmp slt i32 %3, %5, !dbg !6246
  br i1 %cmp, label %for.body, label %for.end, !dbg !6247

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %delim, metadata !6248, metadata !DIExpression()), !dbg !6250
  %6 = load i32, i32* %i, align 4, !dbg !6251
  %tobool = icmp ne i32 %6, 0, !dbg !6251
  %7 = zext i1 %tobool to i64, !dbg !6251
  %cond = select i1 %tobool, i32 44, i32 58, !dbg !6251
  %conv = trunc i32 %cond to i8, !dbg !6251
  store i8 %conv, i8* %delim, align 1, !dbg !6250
  %8 = load i8, i8* %delim, align 1, !dbg !6252
  %conv1 = sext i8 %8 to i32, !dbg !6252
  %9 = load %struct.of_phandle_args*, %struct.of_phandle_args** %args.addr, align 8, !dbg !6252
  %args2 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %9, i32 0, i32 2, !dbg !6252
  %10 = load i32, i32* %i, align 4, !dbg !6252
  %idxprom = sext i32 %10 to i64, !dbg !6252
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %args2, i64 0, i64 %idxprom, !dbg !6252
  %11 = load i32, i32* %arrayidx, align 4, !dbg !6252
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i64 0, i64 0), i32 %conv1, i32 %11) #11, !dbg !6252
  br label %for.inc, !dbg !6253

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !6254
  %inc = add i32 %12, 1, !dbg !6254
  store i32 %inc, i32* %i, align 4, !dbg !6254
  br label %for.cond, !dbg !6255, !llvm.loop !6256

for.end:                                          ; preds = %for.cond
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0)) #11, !dbg !6258
  ret void, !dbg !6259
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_phandle_iterator_init(%struct.of_phandle_iterator* %it, %struct.device_node* %np, i8* %list_name, i8* %cells_name, i32 %cell_count) #0 !dbg !6260 {
entry:
  %retval = alloca i32, align 4
  %it.addr = alloca %struct.of_phandle_iterator*, align 8
  %np.addr = alloca %struct.device_node*, align 8
  %list_name.addr = alloca i8*, align 8
  %cells_name.addr = alloca i8*, align 8
  %cell_count.addr = alloca i32, align 4
  %list = alloca i32*, align 8
  %size = alloca i32, align 4
  store %struct.of_phandle_iterator* %it, %struct.of_phandle_iterator** %it.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_iterator** %it.addr, metadata !6275, metadata !DIExpression()), !dbg !6276
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !6277, metadata !DIExpression()), !dbg !6278
  store i8* %list_name, i8** %list_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %list_name.addr, metadata !6279, metadata !DIExpression()), !dbg !6280
  store i8* %cells_name, i8** %cells_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cells_name.addr, metadata !6281, metadata !DIExpression()), !dbg !6282
  store i32 %cell_count, i32* %cell_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cell_count.addr, metadata !6283, metadata !DIExpression()), !dbg !6284
  call void @llvm.dbg.declare(metadata i32** %list, metadata !6285, metadata !DIExpression()), !dbg !6286
  call void @llvm.dbg.declare(metadata i32* %size, metadata !6287, metadata !DIExpression()), !dbg !6288
  %0 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6289
  %1 = bitcast %struct.of_phandle_iterator* %0 to i8*, !dbg !6290
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 64, i1 false), !dbg !6290
  %2 = load i32, i32* %cell_count.addr, align 4, !dbg !6291
  %cmp = icmp slt i32 %2, 0, !dbg !6293
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6294

land.lhs.true:                                    ; preds = %entry
  %3 = load i8*, i8** %cells_name.addr, align 8, !dbg !6295
  %tobool = icmp ne i8* %3, null, !dbg !6295
  br i1 %tobool, label %if.end, label %if.then, !dbg !6296

if.then:                                          ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !6297
  br label %return, !dbg !6297

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !6298
  %5 = load i8*, i8** %list_name.addr, align 8, !dbg !6299
  %call = call i8* @of_get_property(%struct.device_node* %4, i8* %5, i32* %size) #10, !dbg !6300
  %6 = bitcast i8* %call to i32*, !dbg !6300
  store i32* %6, i32** %list, align 8, !dbg !6301
  %7 = load i32*, i32** %list, align 8, !dbg !6302
  %tobool1 = icmp ne i32* %7, null, !dbg !6302
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !6304

if.then2:                                         ; preds = %if.end
  store i32 -2, i32* %retval, align 4, !dbg !6305
  br label %return, !dbg !6305

if.end3:                                          ; preds = %if.end
  %8 = load i8*, i8** %cells_name.addr, align 8, !dbg !6306
  %9 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6307
  %cells_name4 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %9, i32 0, i32 0, !dbg !6308
  store i8* %8, i8** %cells_name4, align 8, !dbg !6309
  %10 = load i32, i32* %cell_count.addr, align 4, !dbg !6310
  %11 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6311
  %cell_count5 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %11, i32 0, i32 1, !dbg !6312
  store i32 %10, i32* %cell_count5, align 8, !dbg !6313
  %12 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !6314
  %13 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6315
  %parent = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %13, i32 0, i32 2, !dbg !6316
  store %struct.device_node* %12, %struct.device_node** %parent, align 8, !dbg !6317
  %14 = load i32*, i32** %list, align 8, !dbg !6318
  %15 = load i32, i32* %size, align 4, !dbg !6319
  %conv = sext i32 %15 to i64, !dbg !6319
  %div = udiv i64 %conv, 4, !dbg !6320
  %add.ptr = getelementptr i32, i32* %14, i64 %div, !dbg !6321
  %16 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6322
  %list_end = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %16, i32 0, i32 3, !dbg !6323
  store i32* %add.ptr, i32** %list_end, align 8, !dbg !6324
  %17 = load i32*, i32** %list, align 8, !dbg !6325
  %18 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6326
  %phandle_end = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %18, i32 0, i32 4, !dbg !6327
  store i32* %17, i32** %phandle_end, align 8, !dbg !6328
  %19 = load i32*, i32** %list, align 8, !dbg !6329
  %20 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6330
  %cur = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %20, i32 0, i32 5, !dbg !6331
  store i32* %19, i32** %cur, align 8, !dbg !6332
  store i32 0, i32* %retval, align 4, !dbg !6333
  br label %return, !dbg !6333

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !6334
  ret i32 %21, !dbg !6334
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_phandle_iterator_next(%struct.of_phandle_iterator* %it) #0 !dbg !6335 {
entry:
  %p.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i.i, metadata !6338, metadata !DIExpression()), !dbg !6345
  %p.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i, metadata !6352, metadata !DIExpression()), !dbg !6353
  %retval = alloca i32, align 4
  %it.addr = alloca %struct.of_phandle_iterator*, align 8
  %count = alloca i32, align 4
  store %struct.of_phandle_iterator* %it, %struct.of_phandle_iterator** %it.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_iterator** %it.addr, metadata !6354, metadata !DIExpression()), !dbg !6355
  call void @llvm.dbg.declare(metadata i32* %count, metadata !6356, metadata !DIExpression()), !dbg !6357
  store i32 0, i32* %count, align 4, !dbg !6357
  %0 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6358
  %node = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %0, i32 0, i32 8, !dbg !6360
  %1 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !6360
  %tobool = icmp ne %struct.device_node* %1, null, !dbg !6358
  br i1 %tobool, label %if.then, label %if.end, !dbg !6361

if.then:                                          ; preds = %entry
  %2 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6362
  %node1 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %2, i32 0, i32 8, !dbg !6364
  %3 = load %struct.device_node*, %struct.device_node** %node1, align 8, !dbg !6364
  call void @of_node_put(%struct.device_node* %3) #10, !dbg !6365
  %4 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6366
  %node2 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %4, i32 0, i32 8, !dbg !6367
  store %struct.device_node* null, %struct.device_node** %node2, align 8, !dbg !6368
  br label %if.end, !dbg !6369

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6370
  %cur = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %5, i32 0, i32 5, !dbg !6372
  %6 = load i32*, i32** %cur, align 8, !dbg !6372
  %tobool3 = icmp ne i32* %6, null, !dbg !6370
  br i1 %tobool3, label %lor.lhs.false, label %if.then4, !dbg !6373

lor.lhs.false:                                    ; preds = %if.end
  %7 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6374
  %phandle_end = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %7, i32 0, i32 4, !dbg !6375
  %8 = load i32*, i32** %phandle_end, align 8, !dbg !6375
  %9 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6376
  %list_end = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %9, i32 0, i32 3, !dbg !6377
  %10 = load i32*, i32** %list_end, align 8, !dbg !6377
  %cmp = icmp uge i32* %8, %10, !dbg !6378
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !6379

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  store i32 -2, i32* %retval, align 4, !dbg !6380
  br label %return, !dbg !6380

if.end5:                                          ; preds = %lor.lhs.false
  %11 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6381
  %phandle_end6 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %11, i32 0, i32 4, !dbg !6382
  %12 = load i32*, i32** %phandle_end6, align 8, !dbg !6382
  %13 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6383
  %cur7 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %13, i32 0, i32 5, !dbg !6384
  store i32* %12, i32** %cur7, align 8, !dbg !6385
  %14 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6386
  %cur8 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %14, i32 0, i32 5, !dbg !6387
  %15 = load i32*, i32** %cur8, align 8, !dbg !6388
  %incdec.ptr = getelementptr i32, i32* %15, i32 1, !dbg !6388
  store i32* %incdec.ptr, i32** %cur8, align 8, !dbg !6388
  store i32* %15, i32** %p.addr.i, align 8
  %16 = load i32*, i32** %p.addr.i, align 8, !dbg !6389
  store i32* %16, i32** %p.addr.i.i, align 8
  %17 = load i32*, i32** %p.addr.i.i, align 8, !dbg !6390
  %18 = load i32, i32* %17, align 4, !dbg !6390
  %19 = call i1 @llvm.is.constant.i32(i32 %18) #9, !dbg !6390
  br i1 %19, label %cond.true.i.i, label %cond.false.i.i, !dbg !6390

cond.true.i.i:                                    ; preds = %if.end5
  %20 = load i32*, i32** %p.addr.i.i, align 8, !dbg !6390
  %21 = load i32, i32* %20, align 4, !dbg !6390
  %and.i.i = and i32 %21, 255, !dbg !6390
  %shl.i.i = shl i32 %and.i.i, 24, !dbg !6390
  %22 = load i32*, i32** %p.addr.i.i, align 8, !dbg !6390
  %23 = load i32, i32* %22, align 4, !dbg !6390
  %and1.i.i = and i32 %23, 65280, !dbg !6390
  %shl2.i.i = shl i32 %and1.i.i, 8, !dbg !6390
  %or.i.i = or i32 %shl.i.i, %shl2.i.i, !dbg !6390
  %24 = load i32*, i32** %p.addr.i.i, align 8, !dbg !6390
  %25 = load i32, i32* %24, align 4, !dbg !6390
  %and3.i.i = and i32 %25, 16711680, !dbg !6390
  %shr.i.i = lshr i32 %and3.i.i, 8, !dbg !6390
  %or4.i.i = or i32 %or.i.i, %shr.i.i, !dbg !6390
  %26 = load i32*, i32** %p.addr.i.i, align 8, !dbg !6390
  %27 = load i32, i32* %26, align 4, !dbg !6390
  %and5.i.i = and i32 %27, -16777216, !dbg !6390
  %shr6.i.i = lshr i32 %and5.i.i, 24, !dbg !6390
  %or7.i.i = or i32 %or4.i.i, %shr6.i.i, !dbg !6390
  br label %__be32_to_cpup.exit, !dbg !6390

cond.false.i.i:                                   ; preds = %if.end5
  %28 = load i32*, i32** %p.addr.i.i, align 8, !dbg !6390
  %29 = load i32, i32* %28, align 4, !dbg !6390
  %call.i.i = call i32 @__fswab32(i32 %29) #12, !dbg !6390
  br label %__be32_to_cpup.exit, !dbg !6390

__be32_to_cpup.exit:                              ; preds = %cond.true.i.i, %cond.false.i.i
  %cond.i.i = phi i32 [ %or7.i.i, %cond.true.i.i ], [ %call.i.i, %cond.false.i.i ], !dbg !6390
  %30 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6391
  %phandle = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %30, i32 0, i32 7, !dbg !6392
  store i32 %cond.i.i, i32* %phandle, align 4, !dbg !6393
  %31 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6394
  %phandle9 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %31, i32 0, i32 7, !dbg !6396
  %32 = load i32, i32* %phandle9, align 4, !dbg !6396
  %tobool10 = icmp ne i32 %32, 0, !dbg !6394
  br i1 %tobool10, label %if.then11, label %if.end48, !dbg !6397

if.then11:                                        ; preds = %__be32_to_cpup.exit
  %33 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6398
  %phandle12 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %33, i32 0, i32 7, !dbg !6400
  %34 = load i32, i32* %phandle12, align 4, !dbg !6400
  %call13 = call %struct.device_node* @of_find_node_by_phandle(i32 %34) #10, !dbg !6401
  %35 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6402
  %node14 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %35, i32 0, i32 8, !dbg !6403
  store %struct.device_node* %call13, %struct.device_node** %node14, align 8, !dbg !6404
  %36 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6405
  %cells_name = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %36, i32 0, i32 0, !dbg !6407
  %37 = load i8*, i8** %cells_name, align 8, !dbg !6407
  %tobool15 = icmp ne i8* %37, null, !dbg !6405
  br i1 %tobool15, label %if.then16, label %if.else36, !dbg !6408

if.then16:                                        ; preds = %if.then11
  %38 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6409
  %node17 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %38, i32 0, i32 8, !dbg !6412
  %39 = load %struct.device_node*, %struct.device_node** %node17, align 8, !dbg !6412
  %tobool18 = icmp ne %struct.device_node* %39, null, !dbg !6409
  br i1 %tobool18, label %if.end21, label %if.then19, !dbg !6413

if.then19:                                        ; preds = %if.then16
  %40 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6414
  %parent = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %40, i32 0, i32 2, !dbg !6414
  %41 = load %struct.device_node*, %struct.device_node** %parent, align 8, !dbg !6414
  %call20 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.20, i64 0, i64 0), %struct.device_node* %41) #11, !dbg !6414
  br label %err, !dbg !6416

if.end21:                                         ; preds = %if.then16
  %42 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6417
  %node22 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %42, i32 0, i32 8, !dbg !6419
  %43 = load %struct.device_node*, %struct.device_node** %node22, align 8, !dbg !6419
  %44 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6420
  %cells_name23 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %44, i32 0, i32 0, !dbg !6421
  %45 = load i8*, i8** %cells_name23, align 8, !dbg !6421
  %call24 = call i32 @of_property_read_u32(%struct.device_node* %43, i8* %45, i32* %count) #10, !dbg !6422
  %tobool25 = icmp ne i32 %call24, 0, !dbg !6422
  br i1 %tobool25, label %if.then26, label %if.end35, !dbg !6423

if.then26:                                        ; preds = %if.end21
  %46 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6424
  %cell_count = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %46, i32 0, i32 1, !dbg !6427
  %47 = load i32, i32* %cell_count, align 8, !dbg !6427
  %cmp27 = icmp sge i32 %47, 0, !dbg !6428
  br i1 %cmp27, label %if.then28, label %if.else, !dbg !6429

if.then28:                                        ; preds = %if.then26
  %48 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6430
  %cell_count29 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %48, i32 0, i32 1, !dbg !6432
  %49 = load i32, i32* %cell_count29, align 8, !dbg !6432
  store i32 %49, i32* %count, align 4, !dbg !6433
  br label %if.end34, !dbg !6434

if.else:                                          ; preds = %if.then26
  %50 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6435
  %parent30 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %50, i32 0, i32 2, !dbg !6435
  %51 = load %struct.device_node*, %struct.device_node** %parent30, align 8, !dbg !6435
  %52 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6435
  %cells_name31 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %52, i32 0, i32 0, !dbg !6435
  %53 = load i8*, i8** %cells_name31, align 8, !dbg !6435
  %54 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6435
  %node32 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %54, i32 0, i32 8, !dbg !6435
  %55 = load %struct.device_node*, %struct.device_node** %node32, align 8, !dbg !6435
  %call33 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21, i64 0, i64 0), %struct.device_node* %51, i8* %53, %struct.device_node* %55) #11, !dbg !6435
  br label %err, !dbg !6437

if.end34:                                         ; preds = %if.then28
  br label %if.end35, !dbg !6438

if.end35:                                         ; preds = %if.end34, %if.end21
  br label %if.end38, !dbg !6439

if.else36:                                        ; preds = %if.then11
  %56 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6440
  %cell_count37 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %56, i32 0, i32 1, !dbg !6442
  %57 = load i32, i32* %cell_count37, align 8, !dbg !6442
  store i32 %57, i32* %count, align 4, !dbg !6443
  br label %if.end38

if.end38:                                         ; preds = %if.else36, %if.end35
  %58 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6444
  %cur39 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %58, i32 0, i32 5, !dbg !6446
  %59 = load i32*, i32** %cur39, align 8, !dbg !6446
  %60 = load i32, i32* %count, align 4, !dbg !6447
  %idx.ext = zext i32 %60 to i64, !dbg !6448
  %add.ptr = getelementptr i32, i32* %59, i64 %idx.ext, !dbg !6448
  %61 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6449
  %list_end40 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %61, i32 0, i32 3, !dbg !6450
  %62 = load i32*, i32** %list_end40, align 8, !dbg !6450
  %cmp41 = icmp ugt i32* %add.ptr, %62, !dbg !6451
  br i1 %cmp41, label %if.then42, label %if.end47, !dbg !6452

if.then42:                                        ; preds = %if.end38
  %63 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6453
  %parent43 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %63, i32 0, i32 2, !dbg !6453
  %64 = load %struct.device_node*, %struct.device_node** %parent43, align 8, !dbg !6453
  %65 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6453
  %cells_name44 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %65, i32 0, i32 0, !dbg !6453
  %66 = load i8*, i8** %cells_name44, align 8, !dbg !6453
  %67 = load i32, i32* %count, align 4, !dbg !6453
  %68 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6453
  %cell_count45 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %68, i32 0, i32 1, !dbg !6453
  %69 = load i32, i32* %cell_count45, align 8, !dbg !6453
  %call46 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.22, i64 0, i64 0), %struct.device_node* %64, i8* %66, i32 %67, i32 %69) #11, !dbg !6453
  br label %err, !dbg !6455

if.end47:                                         ; preds = %if.end38
  br label %if.end48, !dbg !6456

if.end48:                                         ; preds = %if.end47, %__be32_to_cpup.exit
  %70 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6457
  %cur49 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %70, i32 0, i32 5, !dbg !6458
  %71 = load i32*, i32** %cur49, align 8, !dbg !6458
  %72 = load i32, i32* %count, align 4, !dbg !6459
  %idx.ext50 = zext i32 %72 to i64, !dbg !6460
  %add.ptr51 = getelementptr i32, i32* %71, i64 %idx.ext50, !dbg !6460
  %73 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6461
  %phandle_end52 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %73, i32 0, i32 4, !dbg !6462
  store i32* %add.ptr51, i32** %phandle_end52, align 8, !dbg !6463
  %74 = load i32, i32* %count, align 4, !dbg !6464
  %75 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6465
  %cur_count = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %75, i32 0, i32 6, !dbg !6466
  store i32 %74, i32* %cur_count, align 8, !dbg !6467
  store i32 0, i32* %retval, align 4, !dbg !6468
  br label %return, !dbg !6468

err:                                              ; preds = %if.then42, %if.else, %if.then19
  call void @llvm.dbg.label(metadata !6469), !dbg !6470
  %76 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6471
  %node53 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %76, i32 0, i32 8, !dbg !6473
  %77 = load %struct.device_node*, %struct.device_node** %node53, align 8, !dbg !6473
  %tobool54 = icmp ne %struct.device_node* %77, null, !dbg !6471
  br i1 %tobool54, label %if.then55, label %if.end58, !dbg !6474

if.then55:                                        ; preds = %err
  %78 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6475
  %node56 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %78, i32 0, i32 8, !dbg !6477
  %79 = load %struct.device_node*, %struct.device_node** %node56, align 8, !dbg !6477
  call void @of_node_put(%struct.device_node* %79) #10, !dbg !6478
  %80 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6479
  %node57 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %80, i32 0, i32 8, !dbg !6480
  store %struct.device_node* null, %struct.device_node** %node57, align 8, !dbg !6481
  br label %if.end58, !dbg !6482

if.end58:                                         ; preds = %if.then55, %err
  store i32 -22, i32* %retval, align 4, !dbg !6483
  br label %return, !dbg !6483

return:                                           ; preds = %if.end58, %if.end48, %if.then4
  %81 = load i32, i32* %retval, align 4, !dbg !6484
  ret i32 %81, !dbg !6484
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_phandle_iterator_args(%struct.of_phandle_iterator* %it, i32* %args, i32 %size) #0 !dbg !6485 {
entry:
  %p.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i.i, metadata !6338, metadata !DIExpression()), !dbg !6489
  %p.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i, metadata !6352, metadata !DIExpression()), !dbg !6494
  %it.addr = alloca %struct.of_phandle_iterator*, align 8
  %args.addr = alloca i32*, align 8
  %size.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %count = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.of_phandle_iterator* %it, %struct.of_phandle_iterator** %it.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_iterator** %it.addr, metadata !6495, metadata !DIExpression()), !dbg !6496
  store i32* %args, i32** %args.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %args.addr, metadata !6497, metadata !DIExpression()), !dbg !6498
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !6499, metadata !DIExpression()), !dbg !6500
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6501, metadata !DIExpression()), !dbg !6502
  call void @llvm.dbg.declare(metadata i32* %count, metadata !6503, metadata !DIExpression()), !dbg !6504
  %0 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6505
  %cur_count = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %0, i32 0, i32 6, !dbg !6506
  %1 = load i32, i32* %cur_count, align 8, !dbg !6506
  store i32 %1, i32* %count, align 4, !dbg !6507
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6508, metadata !DIExpression()), !dbg !6511
  %2 = load i32, i32* %size.addr, align 4, !dbg !6511
  %3 = load i32, i32* %count, align 4, !dbg !6511
  %cmp = icmp slt i32 %2, %3, !dbg !6511
  %lnot = xor i1 %cmp, true, !dbg !6511
  %lnot1 = xor i1 %lnot, true, !dbg !6511
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6511
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6511
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !6512
  %tobool = icmp ne i32 %4, 0, !dbg !6512
  %lnot2 = xor i1 %tobool, true, !dbg !6512
  %lnot4 = xor i1 %lnot2, true, !dbg !6512
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !6512
  %conv = sext i32 %lnot.ext5 to i64, !dbg !6512
  %tobool6 = icmp ne i64 %conv, 0, !dbg !6512
  br i1 %tobool6, label %if.then, label %if.end, !dbg !6511

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6512

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !6514

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !6516

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !6514

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.23, i64 0, i64 0), i32 1361, i32 2305, i64 12) #9, !dbg !6518, !srcloc !6520
  br label %do.end9, !dbg !6518

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 203) #9, !dbg !6521, !srcloc !6523
  br label %do.body10, !dbg !6514

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !6524

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !6514

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !6514

if.end:                                           ; preds = %do.end12, %entry
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !6511
  %tobool13 = icmp ne i32 %5, 0, !dbg !6511
  %lnot14 = xor i1 %tobool13, true, !dbg !6511
  %lnot16 = xor i1 %lnot14, true, !dbg !6511
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !6511
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !6511
  store i64 %conv18, i64* %tmp, align 8, !dbg !6512
  %6 = load i64, i64* %tmp, align 8, !dbg !6511
  %tobool19 = icmp ne i64 %6, 0, !dbg !6526
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !6527

if.then20:                                        ; preds = %if.end
  %7 = load i32, i32* %size.addr, align 4, !dbg !6528
  store i32 %7, i32* %count, align 4, !dbg !6529
  br label %if.end21, !dbg !6530

if.end21:                                         ; preds = %if.then20, %if.end
  store i32 0, i32* %i, align 4, !dbg !6531
  br label %for.cond, !dbg !6532

for.cond:                                         ; preds = %for.inc, %if.end21
  %8 = load i32, i32* %i, align 4, !dbg !6533
  %9 = load i32, i32* %count, align 4, !dbg !6534
  %cmp22 = icmp slt i32 %8, %9, !dbg !6535
  br i1 %cmp22, label %for.body, label %for.end, !dbg !6536

for.body:                                         ; preds = %for.cond
  %10 = load %struct.of_phandle_iterator*, %struct.of_phandle_iterator** %it.addr, align 8, !dbg !6537
  %cur = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %10, i32 0, i32 5, !dbg !6538
  %11 = load i32*, i32** %cur, align 8, !dbg !6539
  %incdec.ptr = getelementptr i32, i32* %11, i32 1, !dbg !6539
  store i32* %incdec.ptr, i32** %cur, align 8, !dbg !6539
  store i32* %11, i32** %p.addr.i, align 8
  %12 = load i32*, i32** %p.addr.i, align 8, !dbg !6540
  store i32* %12, i32** %p.addr.i.i, align 8
  %13 = load i32*, i32** %p.addr.i.i, align 8, !dbg !6541
  %14 = load i32, i32* %13, align 4, !dbg !6541
  %15 = call i1 @llvm.is.constant.i32(i32 %14) #9, !dbg !6541
  br i1 %15, label %cond.true.i.i, label %cond.false.i.i, !dbg !6541

cond.true.i.i:                                    ; preds = %for.body
  %16 = load i32*, i32** %p.addr.i.i, align 8, !dbg !6541
  %17 = load i32, i32* %16, align 4, !dbg !6541
  %and.i.i = and i32 %17, 255, !dbg !6541
  %shl.i.i = shl i32 %and.i.i, 24, !dbg !6541
  %18 = load i32*, i32** %p.addr.i.i, align 8, !dbg !6541
  %19 = load i32, i32* %18, align 4, !dbg !6541
  %and1.i.i = and i32 %19, 65280, !dbg !6541
  %shl2.i.i = shl i32 %and1.i.i, 8, !dbg !6541
  %or.i.i = or i32 %shl.i.i, %shl2.i.i, !dbg !6541
  %20 = load i32*, i32** %p.addr.i.i, align 8, !dbg !6541
  %21 = load i32, i32* %20, align 4, !dbg !6541
  %and3.i.i = and i32 %21, 16711680, !dbg !6541
  %shr.i.i = lshr i32 %and3.i.i, 8, !dbg !6541
  %or4.i.i = or i32 %or.i.i, %shr.i.i, !dbg !6541
  %22 = load i32*, i32** %p.addr.i.i, align 8, !dbg !6541
  %23 = load i32, i32* %22, align 4, !dbg !6541
  %and5.i.i = and i32 %23, -16777216, !dbg !6541
  %shr6.i.i = lshr i32 %and5.i.i, 24, !dbg !6541
  %or7.i.i = or i32 %or4.i.i, %shr6.i.i, !dbg !6541
  br label %__be32_to_cpup.exit, !dbg !6541

cond.false.i.i:                                   ; preds = %for.body
  %24 = load i32*, i32** %p.addr.i.i, align 8, !dbg !6541
  %25 = load i32, i32* %24, align 4, !dbg !6541
  %call.i.i = call i32 @__fswab32(i32 %25) #12, !dbg !6541
  br label %__be32_to_cpup.exit, !dbg !6541

__be32_to_cpup.exit:                              ; preds = %cond.true.i.i, %cond.false.i.i
  %cond.i.i = phi i32 [ %or7.i.i, %cond.true.i.i ], [ %call.i.i, %cond.false.i.i ], !dbg !6541
  %26 = load i32*, i32** %args.addr, align 8, !dbg !6542
  %27 = load i32, i32* %i, align 4, !dbg !6543
  %idxprom = sext i32 %27 to i64, !dbg !6542
  %arrayidx = getelementptr i32, i32* %26, i64 %idxprom, !dbg !6542
  store i32 %cond.i.i, i32* %arrayidx, align 4, !dbg !6544
  br label %for.inc, !dbg !6542

for.inc:                                          ; preds = %__be32_to_cpup.exit
  %28 = load i32, i32* %i, align 4, !dbg !6545
  %inc = add i32 %28, 1, !dbg !6545
  store i32 %inc, i32* %i, align 4, !dbg !6545
  br label %for.cond, !dbg !6546, !llvm.loop !6547

for.end:                                          ; preds = %for.cond
  %29 = load i32, i32* %count, align 4, !dbg !6549
  ret i32 %29, !dbg !6550
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__of_parse_phandle_with_args(%struct.device_node* %np, i8* %list_name, i8* %cells_name, i32 %cell_count, i32 %index, %struct.of_phandle_args* %out_args) #0 !dbg !6551 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %list_name.addr = alloca i8*, align 8
  %cells_name.addr = alloca i8*, align 8
  %cell_count.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %out_args.addr = alloca %struct.of_phandle_args*, align 8
  %it = alloca %struct.of_phandle_iterator, align 8
  %rc = alloca i32, align 4
  %cur_index = alloca i32, align 4
  %c = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !6554, metadata !DIExpression()), !dbg !6555
  store i8* %list_name, i8** %list_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %list_name.addr, metadata !6556, metadata !DIExpression()), !dbg !6557
  store i8* %cells_name, i8** %cells_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cells_name.addr, metadata !6558, metadata !DIExpression()), !dbg !6559
  store i32 %cell_count, i32* %cell_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cell_count.addr, metadata !6560, metadata !DIExpression()), !dbg !6561
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6562, metadata !DIExpression()), !dbg !6563
  store %struct.of_phandle_args* %out_args, %struct.of_phandle_args** %out_args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args** %out_args.addr, metadata !6564, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.declare(metadata %struct.of_phandle_iterator* %it, metadata !6566, metadata !DIExpression()), !dbg !6567
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !6568, metadata !DIExpression()), !dbg !6569
  call void @llvm.dbg.declare(metadata i32* %cur_index, metadata !6570, metadata !DIExpression()), !dbg !6571
  store i32 0, i32* %cur_index, align 4, !dbg !6571
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !6572
  %1 = load i8*, i8** %list_name.addr, align 8, !dbg !6572
  %2 = load i8*, i8** %cells_name.addr, align 8, !dbg !6572
  %3 = load i32, i32* %cell_count.addr, align 4, !dbg !6572
  %call = call i32 @of_phandle_iterator_init(%struct.of_phandle_iterator* %it, %struct.device_node* %0, i8* %1, i8* %2, i32 %3) #10, !dbg !6572
  %call1 = call i32 @of_phandle_iterator_next(%struct.of_phandle_iterator* %it) #10, !dbg !6572
  store i32 %call1, i32* %rc, align 4, !dbg !6572
  br label %for.cond, !dbg !6572

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %rc, align 4, !dbg !6574
  %cmp = icmp eq i32 %4, 0, !dbg !6574
  br i1 %cmp, label %for.body, label %for.end, !dbg !6572

for.body:                                         ; preds = %for.cond
  store i32 -2, i32* %rc, align 4, !dbg !6576
  %5 = load i32, i32* %cur_index, align 4, !dbg !6578
  %6 = load i32, i32* %index.addr, align 4, !dbg !6580
  %cmp2 = icmp eq i32 %5, %6, !dbg !6581
  br i1 %cmp2, label %if.then, label %if.end10, !dbg !6582

if.then:                                          ; preds = %for.body
  %phandle = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %it, i32 0, i32 7, !dbg !6583
  %7 = load i32, i32* %phandle, align 4, !dbg !6583
  %tobool = icmp ne i32 %7, 0, !dbg !6586
  br i1 %tobool, label %if.end, label %if.then3, !dbg !6587

if.then3:                                         ; preds = %if.then
  br label %err, !dbg !6588

if.end:                                           ; preds = %if.then
  %8 = load %struct.of_phandle_args*, %struct.of_phandle_args** %out_args.addr, align 8, !dbg !6589
  %tobool4 = icmp ne %struct.of_phandle_args* %8, null, !dbg !6589
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !6591

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %c, metadata !6592, metadata !DIExpression()), !dbg !6594
  %9 = load %struct.of_phandle_args*, %struct.of_phandle_args** %out_args.addr, align 8, !dbg !6595
  %args = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %9, i32 0, i32 2, !dbg !6596
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %args, i64 0, i64 0, !dbg !6595
  %call6 = call i32 @of_phandle_iterator_args(%struct.of_phandle_iterator* %it, i32* %arraydecay, i32 16) #10, !dbg !6597
  store i32 %call6, i32* %c, align 4, !dbg !6598
  %node = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %it, i32 0, i32 8, !dbg !6599
  %10 = load %struct.device_node*, %struct.device_node** %node, align 8, !dbg !6599
  %11 = load %struct.of_phandle_args*, %struct.of_phandle_args** %out_args.addr, align 8, !dbg !6600
  %np7 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %11, i32 0, i32 0, !dbg !6601
  store %struct.device_node* %10, %struct.device_node** %np7, align 8, !dbg !6602
  %12 = load i32, i32* %c, align 4, !dbg !6603
  %13 = load %struct.of_phandle_args*, %struct.of_phandle_args** %out_args.addr, align 8, !dbg !6604
  %args_count = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %13, i32 0, i32 1, !dbg !6605
  store i32 %12, i32* %args_count, align 8, !dbg !6606
  br label %if.end9, !dbg !6607

if.else:                                          ; preds = %if.end
  %node8 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %it, i32 0, i32 8, !dbg !6608
  %14 = load %struct.device_node*, %struct.device_node** %node8, align 8, !dbg !6608
  call void @of_node_put(%struct.device_node* %14) #10, !dbg !6610
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then5
  store i32 0, i32* %retval, align 4, !dbg !6611
  br label %return, !dbg !6611

if.end10:                                         ; preds = %for.body
  %15 = load i32, i32* %cur_index, align 4, !dbg !6612
  %inc = add i32 %15, 1, !dbg !6612
  store i32 %inc, i32* %cur_index, align 4, !dbg !6612
  br label %for.inc, !dbg !6613

for.inc:                                          ; preds = %if.end10
  %call11 = call i32 @of_phandle_iterator_next(%struct.of_phandle_iterator* %it) #10, !dbg !6574
  store i32 %call11, i32* %rc, align 4, !dbg !6574
  br label %for.cond, !dbg !6574, !llvm.loop !6614

for.end:                                          ; preds = %for.cond
  br label %err, !dbg !6615

err:                                              ; preds = %for.end, %if.then3
  call void @llvm.dbg.label(metadata !6616), !dbg !6617
  %node12 = getelementptr inbounds %struct.of_phandle_iterator, %struct.of_phandle_iterator* %it, i32 0, i32 8, !dbg !6618
  %16 = load %struct.device_node*, %struct.device_node** %node12, align 8, !dbg !6618
  call void @of_node_put(%struct.device_node* %16) #10, !dbg !6619
  %17 = load i32, i32* %rc, align 4, !dbg !6620
  store i32 %17, i32* %retval, align 4, !dbg !6621
  br label %return, !dbg !6621

return:                                           ; preds = %err, %if.end9
  %18 = load i32, i32* %retval, align 4, !dbg !6622
  ret i32 %18, !dbg !6622
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_parse_phandle_with_args_map(%struct.device_node* %np, i8* %list_name, i8* %stem_name, i32 %index, %struct.of_phandle_args* %out_args) #0 !dbg !3602 {
entry:
  %p.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i.i, metadata !6338, metadata !DIExpression()), !dbg !6623
  %p.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i, metadata !6352, metadata !DIExpression()), !dbg !6628
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %list_name.addr = alloca i8*, align 8
  %stem_name.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %out_args.addr = alloca %struct.of_phandle_args*, align 8
  %cells_name = alloca i8*, align 8
  %map_name = alloca i8*, align 8
  %mask_name = alloca i8*, align 8
  %pass_name = alloca i8*, align 8
  %cur = alloca %struct.device_node*, align 8
  %new = alloca %struct.device_node*, align 8
  %map = alloca i32*, align 8
  %mask = alloca i32*, align 8
  %pass = alloca i32*, align 8
  %initial_match_array = alloca [16 x i32], align 16
  %match_array = alloca i32*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %map_len = alloca i32, align 4
  %match = alloca i32, align 4
  %list_size = alloca i32, align 4
  %new_size = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %val = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !6629, metadata !DIExpression()), !dbg !6630
  store i8* %list_name, i8** %list_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %list_name.addr, metadata !6631, metadata !DIExpression()), !dbg !6632
  store i8* %stem_name, i8** %stem_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stem_name.addr, metadata !6633, metadata !DIExpression()), !dbg !6634
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6635, metadata !DIExpression()), !dbg !6636
  store %struct.of_phandle_args* %out_args, %struct.of_phandle_args** %out_args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args** %out_args.addr, metadata !6637, metadata !DIExpression()), !dbg !6638
  call void @llvm.dbg.declare(metadata i8** %cells_name, metadata !6639, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.declare(metadata i8** %map_name, metadata !6641, metadata !DIExpression()), !dbg !6642
  store i8* null, i8** %map_name, align 8, !dbg !6642
  call void @llvm.dbg.declare(metadata i8** %mask_name, metadata !6643, metadata !DIExpression()), !dbg !6644
  store i8* null, i8** %mask_name, align 8, !dbg !6644
  call void @llvm.dbg.declare(metadata i8** %pass_name, metadata !6645, metadata !DIExpression()), !dbg !6646
  store i8* null, i8** %pass_name, align 8, !dbg !6646
  call void @llvm.dbg.declare(metadata %struct.device_node** %cur, metadata !6647, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.declare(metadata %struct.device_node** %new, metadata !6649, metadata !DIExpression()), !dbg !6650
  store %struct.device_node* null, %struct.device_node** %new, align 8, !dbg !6650
  call void @llvm.dbg.declare(metadata i32** %map, metadata !6651, metadata !DIExpression()), !dbg !6652
  call void @llvm.dbg.declare(metadata i32** %mask, metadata !6653, metadata !DIExpression()), !dbg !6654
  call void @llvm.dbg.declare(metadata i32** %pass, metadata !6655, metadata !DIExpression()), !dbg !6656
  call void @llvm.dbg.declare(metadata [16 x i32]* %initial_match_array, metadata !6657, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.declare(metadata i32** %match_array, metadata !6660, metadata !DIExpression()), !dbg !6661
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %initial_match_array, i64 0, i64 0, !dbg !6662
  store i32* %arraydecay, i32** %match_array, align 8, !dbg !6661
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6663, metadata !DIExpression()), !dbg !6664
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6665, metadata !DIExpression()), !dbg !6666
  call void @llvm.dbg.declare(metadata i32* %map_len, metadata !6667, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.declare(metadata i32* %match, metadata !6669, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.declare(metadata i32* %list_size, metadata !6671, metadata !DIExpression()), !dbg !6672
  call void @llvm.dbg.declare(metadata i32* %new_size, metadata !6673, metadata !DIExpression()), !dbg !6674
  %0 = load i32, i32* %index.addr, align 4, !dbg !6675
  %cmp = icmp slt i32 %0, 0, !dbg !6677
  br i1 %cmp, label %if.then, label %if.end, !dbg !6678

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6679
  br label %return, !dbg !6679

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %stem_name.addr, align 8, !dbg !6680
  %call = call noalias i8* (i32, i8*, ...) @kasprintf(i32 3264, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i64 0, i64 0), i8* %1) #10, !dbg !6681
  store i8* %call, i8** %cells_name, align 8, !dbg !6682
  %2 = load i8*, i8** %cells_name, align 8, !dbg !6683
  %tobool = icmp ne i8* %2, null, !dbg !6683
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !6685

if.then1:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !6686
  br label %return, !dbg !6686

if.end2:                                          ; preds = %if.end
  store i32 -12, i32* %ret, align 4, !dbg !6687
  %3 = load i8*, i8** %stem_name.addr, align 8, !dbg !6688
  %call3 = call noalias i8* (i32, i8*, ...) @kasprintf(i32 3264, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i64 0, i64 0), i8* %3) #10, !dbg !6689
  store i8* %call3, i8** %map_name, align 8, !dbg !6690
  %4 = load i8*, i8** %map_name, align 8, !dbg !6691
  %tobool4 = icmp ne i8* %4, null, !dbg !6691
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !6693

if.then5:                                         ; preds = %if.end2
  br label %free, !dbg !6694

if.end6:                                          ; preds = %if.end2
  %5 = load i8*, i8** %stem_name.addr, align 8, !dbg !6695
  %call7 = call noalias i8* (i32, i8*, ...) @kasprintf(i32 3264, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0), i8* %5) #10, !dbg !6696
  store i8* %call7, i8** %mask_name, align 8, !dbg !6697
  %6 = load i8*, i8** %mask_name, align 8, !dbg !6698
  %tobool8 = icmp ne i8* %6, null, !dbg !6698
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !6700

if.then9:                                         ; preds = %if.end6
  br label %free, !dbg !6701

if.end10:                                         ; preds = %if.end6
  %7 = load i8*, i8** %stem_name.addr, align 8, !dbg !6702
  %call11 = call noalias i8* (i32, i8*, ...) @kasprintf(i32 3264, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.27, i64 0, i64 0), i8* %7) #10, !dbg !6703
  store i8* %call11, i8** %pass_name, align 8, !dbg !6704
  %8 = load i8*, i8** %pass_name, align 8, !dbg !6705
  %tobool12 = icmp ne i8* %8, null, !dbg !6705
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !6707

if.then13:                                        ; preds = %if.end10
  br label %free, !dbg !6708

if.end14:                                         ; preds = %if.end10
  %9 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !6709
  %10 = load i8*, i8** %list_name.addr, align 8, !dbg !6710
  %11 = load i8*, i8** %cells_name, align 8, !dbg !6711
  %12 = load i32, i32* %index.addr, align 4, !dbg !6712
  %13 = load %struct.of_phandle_args*, %struct.of_phandle_args** %out_args.addr, align 8, !dbg !6713
  %call15 = call i32 @__of_parse_phandle_with_args(%struct.device_node* %9, i8* %10, i8* %11, i32 -1, i32 %12, %struct.of_phandle_args* %13) #10, !dbg !6714
  store i32 %call15, i32* %ret, align 4, !dbg !6715
  %14 = load i32, i32* %ret, align 4, !dbg !6716
  %tobool16 = icmp ne i32 %14, 0, !dbg !6716
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !6718

if.then17:                                        ; preds = %if.end14
  br label %free, !dbg !6719

if.end18:                                         ; preds = %if.end14
  %15 = load %struct.of_phandle_args*, %struct.of_phandle_args** %out_args.addr, align 8, !dbg !6720
  %np19 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %15, i32 0, i32 0, !dbg !6721
  %16 = load %struct.device_node*, %struct.device_node** %np19, align 8, !dbg !6721
  store %struct.device_node* %16, %struct.device_node** %cur, align 8, !dbg !6722
  %17 = load %struct.device_node*, %struct.device_node** %cur, align 8, !dbg !6723
  %18 = load i8*, i8** %cells_name, align 8, !dbg !6724
  %call20 = call i32 @of_property_read_u32(%struct.device_node* %17, i8* %18, i32* %list_size) #10, !dbg !6725
  store i32 %call20, i32* %ret, align 4, !dbg !6726
  %19 = load i32, i32* %ret, align 4, !dbg !6727
  %cmp21 = icmp slt i32 %19, 0, !dbg !6729
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !6730

if.then22:                                        ; preds = %if.end18
  br label %put, !dbg !6731

if.end23:                                         ; preds = %if.end18
  store i32 0, i32* %i, align 4, !dbg !6732
  br label %for.cond, !dbg !6734

for.cond:                                         ; preds = %for.inc, %if.end23
  %20 = load i32, i32* %i, align 4, !dbg !6735
  %21 = load i32, i32* %list_size, align 4, !dbg !6737
  %cmp24 = icmp ult i32 %20, %21, !dbg !6738
  br i1 %cmp24, label %for.body, label %for.end, !dbg !6739

for.body:                                         ; preds = %for.cond
  %22 = load %struct.of_phandle_args*, %struct.of_phandle_args** %out_args.addr, align 8, !dbg !6740
  %args = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %22, i32 0, i32 2, !dbg !6740
  %23 = load i32, i32* %i, align 4, !dbg !6740
  %idxprom = sext i32 %23 to i64, !dbg !6740
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %args, i64 0, i64 %idxprom, !dbg !6740
  %24 = load i32, i32* %arrayidx, align 4, !dbg !6740
  %25 = call i1 @llvm.is.constant.i32(i32 %24), !dbg !6740
  br i1 %25, label %cond.true, label %cond.false, !dbg !6740

cond.true:                                        ; preds = %for.body
  %26 = load %struct.of_phandle_args*, %struct.of_phandle_args** %out_args.addr, align 8, !dbg !6740
  %args25 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %26, i32 0, i32 2, !dbg !6740
  %27 = load i32, i32* %i, align 4, !dbg !6740
  %idxprom26 = sext i32 %27 to i64, !dbg !6740
  %arrayidx27 = getelementptr [16 x i32], [16 x i32]* %args25, i64 0, i64 %idxprom26, !dbg !6740
  %28 = load i32, i32* %arrayidx27, align 4, !dbg !6740
  %and = and i32 %28, 255, !dbg !6740
  %shl = shl i32 %and, 24, !dbg !6740
  %29 = load %struct.of_phandle_args*, %struct.of_phandle_args** %out_args.addr, align 8, !dbg !6740
  %args28 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %29, i32 0, i32 2, !dbg !6740
  %30 = load i32, i32* %i, align 4, !dbg !6740
  %idxprom29 = sext i32 %30 to i64, !dbg !6740
  %arrayidx30 = getelementptr [16 x i32], [16 x i32]* %args28, i64 0, i64 %idxprom29, !dbg !6740
  %31 = load i32, i32* %arrayidx30, align 4, !dbg !6740
  %and31 = and i32 %31, 65280, !dbg !6740
  %shl32 = shl i32 %and31, 8, !dbg !6740
  %or = or i32 %shl, %shl32, !dbg !6740
  %32 = load %struct.of_phandle_args*, %struct.of_phandle_args** %out_args.addr, align 8, !dbg !6740
  %args33 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %32, i32 0, i32 2, !dbg !6740
  %33 = load i32, i32* %i, align 4, !dbg !6740
  %idxprom34 = sext i32 %33 to i64, !dbg !6740
  %arrayidx35 = getelementptr [16 x i32], [16 x i32]* %args33, i64 0, i64 %idxprom34, !dbg !6740
  %34 = load i32, i32* %arrayidx35, align 4, !dbg !6740
  %and36 = and i32 %34, 16711680, !dbg !6740
  %shr = lshr i32 %and36, 8, !dbg !6740
  %or37 = or i32 %or, %shr, !dbg !6740
  %35 = load %struct.of_phandle_args*, %struct.of_phandle_args** %out_args.addr, align 8, !dbg !6740
  %args38 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %35, i32 0, i32 2, !dbg !6740
  %36 = load i32, i32* %i, align 4, !dbg !6740
  %idxprom39 = sext i32 %36 to i64, !dbg !6740
  %arrayidx40 = getelementptr [16 x i32], [16 x i32]* %args38, i64 0, i64 %idxprom39, !dbg !6740
  %37 = load i32, i32* %arrayidx40, align 4, !dbg !6740
  %and41 = and i32 %37, -16777216, !dbg !6740
  %shr42 = lshr i32 %and41, 24, !dbg !6740
  %or43 = or i32 %or37, %shr42, !dbg !6740
  br label %cond.end, !dbg !6740

cond.false:                                       ; preds = %for.body
  %38 = load %struct.of_phandle_args*, %struct.of_phandle_args** %out_args.addr, align 8, !dbg !6740
  %args44 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %38, i32 0, i32 2, !dbg !6740
  %39 = load i32, i32* %i, align 4, !dbg !6740
  %idxprom45 = sext i32 %39 to i64, !dbg !6740
  %arrayidx46 = getelementptr [16 x i32], [16 x i32]* %args44, i64 0, i64 %idxprom45, !dbg !6740
  %40 = load i32, i32* %arrayidx46, align 4, !dbg !6740
  %call47 = call i32 @__fswab32(i32 %40) #12, !dbg !6740
  br label %cond.end, !dbg !6740

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or43, %cond.true ], [ %call47, %cond.false ], !dbg !6740
  %41 = load i32, i32* %i, align 4, !dbg !6741
  %idxprom48 = sext i32 %41 to i64, !dbg !6742
  %arrayidx49 = getelementptr [16 x i32], [16 x i32]* %initial_match_array, i64 0, i64 %idxprom48, !dbg !6742
  store i32 %cond, i32* %arrayidx49, align 4, !dbg !6743
  br label %for.inc, !dbg !6742

for.inc:                                          ; preds = %cond.end
  %42 = load i32, i32* %i, align 4, !dbg !6744
  %inc = add i32 %42, 1, !dbg !6744
  store i32 %inc, i32* %i, align 4, !dbg !6744
  br label %for.cond, !dbg !6745, !llvm.loop !6746

for.end:                                          ; preds = %for.cond
  store i32 -22, i32* %ret, align 4, !dbg !6748
  br label %while.cond, !dbg !6749

while.cond:                                       ; preds = %for.end212, %for.end
  %43 = load %struct.device_node*, %struct.device_node** %cur, align 8, !dbg !6750
  %tobool50 = icmp ne %struct.device_node* %43, null, !dbg !6749
  br i1 %tobool50, label %while.body, label %while.end214, !dbg !6749

while.body:                                       ; preds = %while.cond
  %44 = load %struct.device_node*, %struct.device_node** %cur, align 8, !dbg !6751
  %45 = load i8*, i8** %map_name, align 8, !dbg !6752
  %call51 = call i8* @of_get_property(%struct.device_node* %44, i8* %45, i32* %map_len) #10, !dbg !6753
  %46 = bitcast i8* %call51 to i32*, !dbg !6753
  store i32* %46, i32** %map, align 8, !dbg !6754
  %47 = load i32*, i32** %map, align 8, !dbg !6755
  %tobool52 = icmp ne i32* %47, null, !dbg !6755
  br i1 %tobool52, label %if.end54, label %if.then53, !dbg !6757

if.then53:                                        ; preds = %while.body
  store i32 0, i32* %ret, align 4, !dbg !6758
  br label %free, !dbg !6760

if.end54:                                         ; preds = %while.body
  %48 = load i32, i32* %map_len, align 4, !dbg !6761
  %conv = sext i32 %48 to i64, !dbg !6761
  %div = udiv i64 %conv, 4, !dbg !6761
  %conv55 = trunc i64 %div to i32, !dbg !6761
  store i32 %conv55, i32* %map_len, align 4, !dbg !6761
  %49 = load %struct.device_node*, %struct.device_node** %cur, align 8, !dbg !6762
  %50 = load i8*, i8** %mask_name, align 8, !dbg !6763
  %call56 = call i8* @of_get_property(%struct.device_node* %49, i8* %50, i32* null) #10, !dbg !6764
  %51 = bitcast i8* %call56 to i32*, !dbg !6764
  store i32* %51, i32** %mask, align 8, !dbg !6765
  %52 = load i32*, i32** %mask, align 8, !dbg !6766
  %tobool57 = icmp ne i32* %52, null, !dbg !6766
  br i1 %tobool57, label %if.end59, label %if.then58, !dbg !6768

if.then58:                                        ; preds = %if.end54
  store i32* getelementptr inbounds ([17 x i32], [17 x i32]* @of_parse_phandle_with_args_map.dummy_mask, i64 0, i64 0), i32** %mask, align 8, !dbg !6769
  br label %if.end59, !dbg !6770

if.end59:                                         ; preds = %if.then58, %if.end54
  store i32 0, i32* %match, align 4, !dbg !6771
  br label %while.cond60, !dbg !6772

while.cond60:                                     ; preds = %if.end127, %if.end59
  %53 = load i32, i32* %map_len, align 4, !dbg !6773
  %54 = load i32, i32* %list_size, align 4, !dbg !6774
  %add = add i32 %54, 1, !dbg !6775
  %cmp61 = icmp ugt i32 %53, %add, !dbg !6776
  br i1 %cmp61, label %land.rhs, label %land.end, !dbg !6777

land.rhs:                                         ; preds = %while.cond60
  %55 = load i32, i32* %match, align 4, !dbg !6778
  %tobool63 = icmp ne i32 %55, 0, !dbg !6779
  %lnot = xor i1 %tobool63, true, !dbg !6779
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond60
  %56 = phi i1 [ false, %while.cond60 ], [ %lnot, %land.rhs ], !dbg !6780
  br i1 %56, label %while.body64, label %while.end, !dbg !6772

while.body64:                                     ; preds = %land.end
  store i32 1, i32* %match, align 4, !dbg !6781
  store i32 0, i32* %i, align 4, !dbg !6782
  br label %for.cond65, !dbg !6784

for.cond65:                                       ; preds = %for.inc77, %while.body64
  %57 = load i32, i32* %i, align 4, !dbg !6785
  %58 = load i32, i32* %list_size, align 4, !dbg !6787
  %cmp66 = icmp ult i32 %57, %58, !dbg !6788
  br i1 %cmp66, label %for.body68, label %for.end79, !dbg !6789

for.body68:                                       ; preds = %for.cond65
  %59 = load i32*, i32** %match_array, align 8, !dbg !6790
  %60 = load i32, i32* %i, align 4, !dbg !6791
  %idxprom69 = sext i32 %60 to i64, !dbg !6790
  %arrayidx70 = getelementptr i32, i32* %59, i64 %idxprom69, !dbg !6790
  %61 = load i32, i32* %arrayidx70, align 4, !dbg !6790
  %62 = load i32*, i32** %map, align 8, !dbg !6792
  %incdec.ptr = getelementptr i32, i32* %62, i32 1, !dbg !6792
  store i32* %incdec.ptr, i32** %map, align 8, !dbg !6792
  %63 = load i32, i32* %62, align 4, !dbg !6793
  %xor = xor i32 %61, %63, !dbg !6794
  %64 = load i32*, i32** %mask, align 8, !dbg !6795
  %65 = load i32, i32* %i, align 4, !dbg !6796
  %idxprom71 = sext i32 %65 to i64, !dbg !6795
  %arrayidx72 = getelementptr i32, i32* %64, i64 %idxprom71, !dbg !6795
  %66 = load i32, i32* %arrayidx72, align 4, !dbg !6795
  %and73 = and i32 %xor, %66, !dbg !6797
  %tobool74 = icmp ne i32 %and73, 0, !dbg !6798
  %lnot75 = xor i1 %tobool74, true, !dbg !6798
  %lnot.ext = zext i1 %lnot75 to i32, !dbg !6798
  %67 = load i32, i32* %match, align 4, !dbg !6799
  %and76 = and i32 %67, %lnot.ext, !dbg !6799
  store i32 %and76, i32* %match, align 4, !dbg !6799
  br label %for.inc77, !dbg !6800

for.inc77:                                        ; preds = %for.body68
  %68 = load i32, i32* %i, align 4, !dbg !6801
  %inc78 = add i32 %68, 1, !dbg !6801
  store i32 %inc78, i32* %i, align 4, !dbg !6801
  %69 = load i32, i32* %map_len, align 4, !dbg !6802
  %dec = add i32 %69, -1, !dbg !6802
  store i32 %dec, i32* %map_len, align 4, !dbg !6802
  br label %for.cond65, !dbg !6803, !llvm.loop !6804

for.end79:                                        ; preds = %for.cond65
  %70 = load %struct.device_node*, %struct.device_node** %new, align 8, !dbg !6806
  call void @of_node_put(%struct.device_node* %70) #10, !dbg !6807
  %71 = load i32*, i32** %map, align 8, !dbg !6808
  store i32* %71, i32** %p.addr.i, align 8
  %72 = load i32*, i32** %p.addr.i, align 8, !dbg !6809
  store i32* %72, i32** %p.addr.i.i, align 8
  %73 = load i32*, i32** %p.addr.i.i, align 8, !dbg !6810
  %74 = load i32, i32* %73, align 4, !dbg !6810
  %75 = call i1 @llvm.is.constant.i32(i32 %74) #9, !dbg !6810
  br i1 %75, label %cond.true.i.i, label %cond.false.i.i, !dbg !6810

cond.true.i.i:                                    ; preds = %for.end79
  %76 = load i32*, i32** %p.addr.i.i, align 8, !dbg !6810
  %77 = load i32, i32* %76, align 4, !dbg !6810
  %and.i.i = and i32 %77, 255, !dbg !6810
  %shl.i.i = shl i32 %and.i.i, 24, !dbg !6810
  %78 = load i32*, i32** %p.addr.i.i, align 8, !dbg !6810
  %79 = load i32, i32* %78, align 4, !dbg !6810
  %and1.i.i = and i32 %79, 65280, !dbg !6810
  %shl2.i.i = shl i32 %and1.i.i, 8, !dbg !6810
  %or.i.i = or i32 %shl.i.i, %shl2.i.i, !dbg !6810
  %80 = load i32*, i32** %p.addr.i.i, align 8, !dbg !6810
  %81 = load i32, i32* %80, align 4, !dbg !6810
  %and3.i.i = and i32 %81, 16711680, !dbg !6810
  %shr.i.i = lshr i32 %and3.i.i, 8, !dbg !6810
  %or4.i.i = or i32 %or.i.i, %shr.i.i, !dbg !6810
  %82 = load i32*, i32** %p.addr.i.i, align 8, !dbg !6810
  %83 = load i32, i32* %82, align 4, !dbg !6810
  %and5.i.i = and i32 %83, -16777216, !dbg !6810
  %shr6.i.i = lshr i32 %and5.i.i, 24, !dbg !6810
  %or7.i.i = or i32 %or4.i.i, %shr6.i.i, !dbg !6810
  br label %__be32_to_cpup.exit, !dbg !6810

cond.false.i.i:                                   ; preds = %for.end79
  %84 = load i32*, i32** %p.addr.i.i, align 8, !dbg !6810
  %85 = load i32, i32* %84, align 4, !dbg !6810
  %call.i.i = call i32 @__fswab32(i32 %85) #12, !dbg !6810
  br label %__be32_to_cpup.exit, !dbg !6810

__be32_to_cpup.exit:                              ; preds = %cond.true.i.i, %cond.false.i.i
  %cond.i.i = phi i32 [ %or7.i.i, %cond.true.i.i ], [ %call.i.i, %cond.false.i.i ], !dbg !6810
  %call81 = call %struct.device_node* @of_find_node_by_phandle(i32 %cond.i.i) #10, !dbg !6811
  store %struct.device_node* %call81, %struct.device_node** %new, align 8, !dbg !6812
  %86 = load i32*, i32** %map, align 8, !dbg !6813
  %incdec.ptr82 = getelementptr i32, i32* %86, i32 1, !dbg !6813
  store i32* %incdec.ptr82, i32** %map, align 8, !dbg !6813
  %87 = load i32, i32* %map_len, align 4, !dbg !6814
  %dec83 = add i32 %87, -1, !dbg !6814
  store i32 %dec83, i32* %map_len, align 4, !dbg !6814
  %88 = load %struct.device_node*, %struct.device_node** %new, align 8, !dbg !6815
  %tobool84 = icmp ne %struct.device_node* %88, null, !dbg !6815
  br i1 %tobool84, label %if.end86, label %if.then85, !dbg !6817

if.then85:                                        ; preds = %__be32_to_cpup.exit
  br label %put, !dbg !6818

if.end86:                                         ; preds = %__be32_to_cpup.exit
  %89 = load %struct.device_node*, %struct.device_node** %new, align 8, !dbg !6819
  %call87 = call zeroext i1 @of_device_is_available(%struct.device_node* %89) #10, !dbg !6821
  br i1 %call87, label %if.end89, label %if.then88, !dbg !6822

if.then88:                                        ; preds = %if.end86
  store i32 0, i32* %match, align 4, !dbg !6823
  br label %if.end89, !dbg !6824

if.end89:                                         ; preds = %if.then88, %if.end86
  %90 = load %struct.device_node*, %struct.device_node** %new, align 8, !dbg !6825
  %91 = load i8*, i8** %cells_name, align 8, !dbg !6826
  %call90 = call i32 @of_property_read_u32(%struct.device_node* %90, i8* %91, i32* %new_size) #10, !dbg !6827
  store i32 %call90, i32* %ret, align 4, !dbg !6828
  %92 = load i32, i32* %ret, align 4, !dbg !6829
  %tobool91 = icmp ne i32 %92, 0, !dbg !6829
  br i1 %tobool91, label %if.then92, label %if.end93, !dbg !6831

if.then92:                                        ; preds = %if.end89
  br label %put, !dbg !6832

if.end93:                                         ; preds = %if.end89
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6833, metadata !DIExpression()), !dbg !6836
  %93 = load i32, i32* %new_size, align 4, !dbg !6836
  %cmp94 = icmp ugt i32 %93, 16, !dbg !6836
  %lnot96 = xor i1 %cmp94, true, !dbg !6836
  %lnot98 = xor i1 %lnot96, true, !dbg !6836
  %lnot.ext99 = zext i1 %lnot98 to i32, !dbg !6836
  store i32 %lnot.ext99, i32* %__ret_warn_on, align 4, !dbg !6836
  %94 = load i32, i32* %__ret_warn_on, align 4, !dbg !6837
  %tobool100 = icmp ne i32 %94, 0, !dbg !6837
  %lnot101 = xor i1 %tobool100, true, !dbg !6837
  %lnot103 = xor i1 %lnot101, true, !dbg !6837
  %lnot.ext104 = zext i1 %lnot103 to i32, !dbg !6837
  %conv105 = sext i32 %lnot.ext104 to i64, !dbg !6837
  %tobool106 = icmp ne i64 %conv105, 0, !dbg !6837
  br i1 %tobool106, label %if.then107, label %if.end114, !dbg !6836

if.then107:                                       ; preds = %if.end93
  br label %do.body, !dbg !6837

do.body:                                          ; preds = %if.then107
  br label %do.body108, !dbg !6839

do.body108:                                       ; preds = %do.body
  br label %do.end, !dbg !6841

do.end:                                           ; preds = %do.body108
  br label %do.body109, !dbg !6839

do.body109:                                       ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.23, i64 0, i64 0), i32 1630, i32 2305, i64 12) #9, !dbg !6843, !srcloc !6845
  br label %do.end110, !dbg !6843

do.end110:                                        ; preds = %do.body109
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 204) #9, !dbg !6846, !srcloc !6848
  br label %do.body111, !dbg !6839

do.body111:                                       ; preds = %do.end110
  br label %do.end112, !dbg !6849

do.end112:                                        ; preds = %do.body111
  br label %do.end113, !dbg !6839

do.end113:                                        ; preds = %do.end112
  br label %if.end114, !dbg !6839

if.end114:                                        ; preds = %do.end113, %if.end93
  %95 = load i32, i32* %__ret_warn_on, align 4, !dbg !6836
  %tobool115 = icmp ne i32 %95, 0, !dbg !6836
  %lnot116 = xor i1 %tobool115, true, !dbg !6836
  %lnot118 = xor i1 %lnot116, true, !dbg !6836
  %lnot.ext119 = zext i1 %lnot118 to i32, !dbg !6836
  %conv120 = sext i32 %lnot.ext119 to i64, !dbg !6836
  store i64 %conv120, i64* %tmp, align 8, !dbg !6837
  %96 = load i64, i64* %tmp, align 8, !dbg !6836
  %tobool121 = icmp ne i64 %96, 0, !dbg !6851
  br i1 %tobool121, label %if.then122, label %if.end123, !dbg !6852

if.then122:                                       ; preds = %if.end114
  br label %put, !dbg !6853

if.end123:                                        ; preds = %if.end114
  %97 = load i32, i32* %map_len, align 4, !dbg !6854
  %98 = load i32, i32* %new_size, align 4, !dbg !6856
  %cmp124 = icmp ult i32 %97, %98, !dbg !6857
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !6858

if.then126:                                       ; preds = %if.end123
  br label %put, !dbg !6859

if.end127:                                        ; preds = %if.end123
  %99 = load i32, i32* %new_size, align 4, !dbg !6860
  %100 = load i32*, i32** %map, align 8, !dbg !6861
  %idx.ext = zext i32 %99 to i64, !dbg !6861
  %add.ptr = getelementptr i32, i32* %100, i64 %idx.ext, !dbg !6861
  store i32* %add.ptr, i32** %map, align 8, !dbg !6861
  %101 = load i32, i32* %new_size, align 4, !dbg !6862
  %102 = load i32, i32* %map_len, align 4, !dbg !6863
  %sub = sub i32 %102, %101, !dbg !6863
  store i32 %sub, i32* %map_len, align 4, !dbg !6863
  br label %while.cond60, !dbg !6772, !llvm.loop !6864

while.end:                                        ; preds = %land.end
  %103 = load i32, i32* %match, align 4, !dbg !6866
  %tobool128 = icmp ne i32 %103, 0, !dbg !6866
  br i1 %tobool128, label %if.end130, label %if.then129, !dbg !6868

if.then129:                                       ; preds = %while.end
  br label %put, !dbg !6869

if.end130:                                        ; preds = %while.end
  %104 = load %struct.device_node*, %struct.device_node** %cur, align 8, !dbg !6870
  %105 = load i8*, i8** %pass_name, align 8, !dbg !6871
  %call131 = call i8* @of_get_property(%struct.device_node* %104, i8* %105, i32* null) #10, !dbg !6872
  %106 = bitcast i8* %call131 to i32*, !dbg !6872
  store i32* %106, i32** %pass, align 8, !dbg !6873
  %107 = load i32*, i32** %pass, align 8, !dbg !6874
  %tobool132 = icmp ne i32* %107, null, !dbg !6874
  br i1 %tobool132, label %if.end134, label %if.then133, !dbg !6876

if.then133:                                       ; preds = %if.end130
  store i32* getelementptr inbounds ([17 x i32], [17 x i32]* @of_parse_phandle_with_args_map.dummy_pass, i64 0, i64 0), i32** %pass, align 8, !dbg !6877
  br label %if.end134, !dbg !6878

if.end134:                                        ; preds = %if.then133, %if.end130
  %108 = load i32*, i32** %map, align 8, !dbg !6879
  %109 = load i32, i32* %new_size, align 4, !dbg !6880
  %idx.ext135 = zext i32 %109 to i64, !dbg !6881
  %idx.neg = sub i64 0, %idx.ext135, !dbg !6881
  %add.ptr136 = getelementptr i32, i32* %108, i64 %idx.neg, !dbg !6881
  store i32* %add.ptr136, i32** %match_array, align 8, !dbg !6882
  store i32 0, i32* %i, align 4, !dbg !6883
  br label %for.cond137, !dbg !6885

for.cond137:                                      ; preds = %for.inc210, %if.end134
  %110 = load i32, i32* %i, align 4, !dbg !6886
  %111 = load i32, i32* %new_size, align 4, !dbg !6888
  %cmp138 = icmp ult i32 %110, %111, !dbg !6889
  br i1 %cmp138, label %for.body140, label %for.end212, !dbg !6890

for.body140:                                      ; preds = %for.cond137
  call void @llvm.dbg.declare(metadata i32* %val, metadata !6891, metadata !DIExpression()), !dbg !6893
  %112 = load i32*, i32** %map, align 8, !dbg !6894
  %113 = load i32, i32* %new_size, align 4, !dbg !6895
  %idx.ext141 = zext i32 %113 to i64, !dbg !6896
  %idx.neg142 = sub i64 0, %idx.ext141, !dbg !6896
  %add.ptr143 = getelementptr i32, i32* %112, i64 %idx.neg142, !dbg !6896
  %114 = load i32, i32* %i, align 4, !dbg !6897
  %idx.ext144 = sext i32 %114 to i64, !dbg !6898
  %add.ptr145 = getelementptr i32, i32* %add.ptr143, i64 %idx.ext144, !dbg !6898
  %115 = load i32, i32* %add.ptr145, align 4, !dbg !6899
  store i32 %115, i32* %val, align 4, !dbg !6893
  %116 = load i32, i32* %i, align 4, !dbg !6900
  %117 = load i32, i32* %list_size, align 4, !dbg !6902
  %cmp146 = icmp ult i32 %116, %117, !dbg !6903
  br i1 %cmp146, label %if.then148, label %if.end190, !dbg !6904

if.then148:                                       ; preds = %for.body140
  %118 = load i32*, i32** %pass, align 8, !dbg !6905
  %119 = load i32, i32* %i, align 4, !dbg !6907
  %idxprom149 = sext i32 %119 to i64, !dbg !6905
  %arrayidx150 = getelementptr i32, i32* %118, i64 %idxprom149, !dbg !6905
  %120 = load i32, i32* %arrayidx150, align 4, !dbg !6905
  %neg = xor i32 %120, -1, !dbg !6908
  %121 = load i32, i32* %val, align 4, !dbg !6909
  %and151 = and i32 %121, %neg, !dbg !6909
  store i32 %and151, i32* %val, align 4, !dbg !6909
  %122 = load %struct.of_phandle_args*, %struct.of_phandle_args** %out_args.addr, align 8, !dbg !6910
  %args152 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %122, i32 0, i32 2, !dbg !6910
  %123 = load i32, i32* %i, align 4, !dbg !6910
  %idxprom153 = sext i32 %123 to i64, !dbg !6910
  %arrayidx154 = getelementptr [16 x i32], [16 x i32]* %args152, i64 0, i64 %idxprom153, !dbg !6910
  %124 = load i32, i32* %arrayidx154, align 4, !dbg !6910
  %125 = call i1 @llvm.is.constant.i32(i32 %124), !dbg !6910
  br i1 %125, label %cond.true155, label %cond.false179, !dbg !6910

cond.true155:                                     ; preds = %if.then148
  %126 = load %struct.of_phandle_args*, %struct.of_phandle_args** %out_args.addr, align 8, !dbg !6910
  %args156 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %126, i32 0, i32 2, !dbg !6910
  %127 = load i32, i32* %i, align 4, !dbg !6910
  %idxprom157 = sext i32 %127 to i64, !dbg !6910
  %arrayidx158 = getelementptr [16 x i32], [16 x i32]* %args156, i64 0, i64 %idxprom157, !dbg !6910
  %128 = load i32, i32* %arrayidx158, align 4, !dbg !6910
  %and159 = and i32 %128, 255, !dbg !6910
  %shl160 = shl i32 %and159, 24, !dbg !6910
  %129 = load %struct.of_phandle_args*, %struct.of_phandle_args** %out_args.addr, align 8, !dbg !6910
  %args161 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %129, i32 0, i32 2, !dbg !6910
  %130 = load i32, i32* %i, align 4, !dbg !6910
  %idxprom162 = sext i32 %130 to i64, !dbg !6910
  %arrayidx163 = getelementptr [16 x i32], [16 x i32]* %args161, i64 0, i64 %idxprom162, !dbg !6910
  %131 = load i32, i32* %arrayidx163, align 4, !dbg !6910
  %and164 = and i32 %131, 65280, !dbg !6910
  %shl165 = shl i32 %and164, 8, !dbg !6910
  %or166 = or i32 %shl160, %shl165, !dbg !6910
  %132 = load %struct.of_phandle_args*, %struct.of_phandle_args** %out_args.addr, align 8, !dbg !6910
  %args167 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %132, i32 0, i32 2, !dbg !6910
  %133 = load i32, i32* %i, align 4, !dbg !6910
  %idxprom168 = sext i32 %133 to i64, !dbg !6910
  %arrayidx169 = getelementptr [16 x i32], [16 x i32]* %args167, i64 0, i64 %idxprom168, !dbg !6910
  %134 = load i32, i32* %arrayidx169, align 4, !dbg !6910
  %and170 = and i32 %134, 16711680, !dbg !6910
  %shr171 = lshr i32 %and170, 8, !dbg !6910
  %or172 = or i32 %or166, %shr171, !dbg !6910
  %135 = load %struct.of_phandle_args*, %struct.of_phandle_args** %out_args.addr, align 8, !dbg !6910
  %args173 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %135, i32 0, i32 2, !dbg !6910
  %136 = load i32, i32* %i, align 4, !dbg !6910
  %idxprom174 = sext i32 %136 to i64, !dbg !6910
  %arrayidx175 = getelementptr [16 x i32], [16 x i32]* %args173, i64 0, i64 %idxprom174, !dbg !6910
  %137 = load i32, i32* %arrayidx175, align 4, !dbg !6910
  %and176 = and i32 %137, -16777216, !dbg !6910
  %shr177 = lshr i32 %and176, 24, !dbg !6910
  %or178 = or i32 %or172, %shr177, !dbg !6910
  br label %cond.end184, !dbg !6910

cond.false179:                                    ; preds = %if.then148
  %138 = load %struct.of_phandle_args*, %struct.of_phandle_args** %out_args.addr, align 8, !dbg !6910
  %args180 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %138, i32 0, i32 2, !dbg !6910
  %139 = load i32, i32* %i, align 4, !dbg !6910
  %idxprom181 = sext i32 %139 to i64, !dbg !6910
  %arrayidx182 = getelementptr [16 x i32], [16 x i32]* %args180, i64 0, i64 %idxprom181, !dbg !6910
  %140 = load i32, i32* %arrayidx182, align 4, !dbg !6910
  %call183 = call i32 @__fswab32(i32 %140) #12, !dbg !6910
  br label %cond.end184, !dbg !6910

cond.end184:                                      ; preds = %cond.false179, %cond.true155
  %cond185 = phi i32 [ %or178, %cond.true155 ], [ %call183, %cond.false179 ], !dbg !6910
  %141 = load i32*, i32** %pass, align 8, !dbg !6911
  %142 = load i32, i32* %i, align 4, !dbg !6912
  %idxprom186 = sext i32 %142 to i64, !dbg !6911
  %arrayidx187 = getelementptr i32, i32* %141, i64 %idxprom186, !dbg !6911
  %143 = load i32, i32* %arrayidx187, align 4, !dbg !6911
  %and188 = and i32 %cond185, %143, !dbg !6913
  %144 = load i32, i32* %val, align 4, !dbg !6914
  %or189 = or i32 %144, %and188, !dbg !6914
  store i32 %or189, i32* %val, align 4, !dbg !6914
  br label %if.end190, !dbg !6915

if.end190:                                        ; preds = %cond.end184, %for.body140
  %145 = load i32, i32* %val, align 4, !dbg !6916
  %146 = call i1 @llvm.is.constant.i32(i32 %145), !dbg !6916
  br i1 %146, label %cond.true191, label %cond.false203, !dbg !6916

cond.true191:                                     ; preds = %if.end190
  %147 = load i32, i32* %val, align 4, !dbg !6916
  %and192 = and i32 %147, 255, !dbg !6916
  %shl193 = shl i32 %and192, 24, !dbg !6916
  %148 = load i32, i32* %val, align 4, !dbg !6916
  %and194 = and i32 %148, 65280, !dbg !6916
  %shl195 = shl i32 %and194, 8, !dbg !6916
  %or196 = or i32 %shl193, %shl195, !dbg !6916
  %149 = load i32, i32* %val, align 4, !dbg !6916
  %and197 = and i32 %149, 16711680, !dbg !6916
  %shr198 = lshr i32 %and197, 8, !dbg !6916
  %or199 = or i32 %or196, %shr198, !dbg !6916
  %150 = load i32, i32* %val, align 4, !dbg !6916
  %and200 = and i32 %150, -16777216, !dbg !6916
  %shr201 = lshr i32 %and200, 24, !dbg !6916
  %or202 = or i32 %or199, %shr201, !dbg !6916
  br label %cond.end205, !dbg !6916

cond.false203:                                    ; preds = %if.end190
  %151 = load i32, i32* %val, align 4, !dbg !6916
  %call204 = call i32 @__fswab32(i32 %151) #12, !dbg !6916
  br label %cond.end205, !dbg !6916

cond.end205:                                      ; preds = %cond.false203, %cond.true191
  %cond206 = phi i32 [ %or202, %cond.true191 ], [ %call204, %cond.false203 ], !dbg !6916
  %152 = load %struct.of_phandle_args*, %struct.of_phandle_args** %out_args.addr, align 8, !dbg !6917
  %args207 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %152, i32 0, i32 2, !dbg !6918
  %153 = load i32, i32* %i, align 4, !dbg !6919
  %idxprom208 = sext i32 %153 to i64, !dbg !6917
  %arrayidx209 = getelementptr [16 x i32], [16 x i32]* %args207, i64 0, i64 %idxprom208, !dbg !6917
  store i32 %cond206, i32* %arrayidx209, align 4, !dbg !6920
  br label %for.inc210, !dbg !6921

for.inc210:                                       ; preds = %cond.end205
  %154 = load i32, i32* %i, align 4, !dbg !6922
  %inc211 = add i32 %154, 1, !dbg !6922
  store i32 %inc211, i32* %i, align 4, !dbg !6922
  br label %for.cond137, !dbg !6923, !llvm.loop !6924

for.end212:                                       ; preds = %for.cond137
  %155 = load i32, i32* %new_size, align 4, !dbg !6926
  store i32 %155, i32* %list_size, align 4, !dbg !6927
  %156 = load %struct.of_phandle_args*, %struct.of_phandle_args** %out_args.addr, align 8, !dbg !6928
  %args_count = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %156, i32 0, i32 1, !dbg !6929
  store i32 %155, i32* %args_count, align 8, !dbg !6930
  %157 = load %struct.device_node*, %struct.device_node** %new, align 8, !dbg !6931
  %158 = load %struct.of_phandle_args*, %struct.of_phandle_args** %out_args.addr, align 8, !dbg !6932
  %np213 = getelementptr inbounds %struct.of_phandle_args, %struct.of_phandle_args* %158, i32 0, i32 0, !dbg !6933
  store %struct.device_node* %157, %struct.device_node** %np213, align 8, !dbg !6934
  %159 = load %struct.device_node*, %struct.device_node** %cur, align 8, !dbg !6935
  call void @of_node_put(%struct.device_node* %159) #10, !dbg !6936
  %160 = load %struct.device_node*, %struct.device_node** %new, align 8, !dbg !6937
  store %struct.device_node* %160, %struct.device_node** %cur, align 8, !dbg !6938
  br label %while.cond, !dbg !6749, !llvm.loop !6939

while.end214:                                     ; preds = %while.cond
  br label %put, !dbg !6749

put:                                              ; preds = %while.end214, %if.then129, %if.then126, %if.then122, %if.then92, %if.then85, %if.then22
  call void @llvm.dbg.label(metadata !6941), !dbg !6942
  %161 = load %struct.device_node*, %struct.device_node** %cur, align 8, !dbg !6943
  call void @of_node_put(%struct.device_node* %161) #10, !dbg !6944
  %162 = load %struct.device_node*, %struct.device_node** %new, align 8, !dbg !6945
  call void @of_node_put(%struct.device_node* %162) #10, !dbg !6946
  br label %free, !dbg !6946

free:                                             ; preds = %put, %if.then53, %if.then17, %if.then13, %if.then9, %if.then5
  call void @llvm.dbg.label(metadata !6947), !dbg !6948
  %163 = load i8*, i8** %mask_name, align 8, !dbg !6949
  call void @kfree(i8* %163) #10, !dbg !6950
  %164 = load i8*, i8** %map_name, align 8, !dbg !6951
  call void @kfree(i8* %164) #10, !dbg !6952
  %165 = load i8*, i8** %cells_name, align 8, !dbg !6953
  call void @kfree(i8* %165) #10, !dbg !6954
  %166 = load i8*, i8** %pass_name, align 8, !dbg !6955
  call void @kfree(i8* %166) #10, !dbg !6956
  %167 = load i32, i32* %ret, align 4, !dbg !6957
  store i32 %167, i32* %retval, align 4, !dbg !6958
  br label %return, !dbg !6958

return:                                           ; preds = %free, %if.then1, %if.then
  %168 = load i32, i32* %retval, align 4, !dbg !6959
  ret i32 %168, !dbg !6959
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kasprintf(i32, i8*, ...) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__fswab32(i32 %val) #7 !dbg !6960 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !6963, metadata !DIExpression()), !dbg !6964
  %0 = load i32, i32* %val.addr, align 4, !dbg !6965
  %call = call i32 @__arch_swab32(i32 %0) #12, !dbg !6966
  ret i32 %call, !dbg !6967
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_parse_phandle_with_fixed_args(%struct.device_node* %np, i8* %list_name, i32 %cell_count, i32 %index, %struct.of_phandle_args* %out_args) #0 !dbg !6968 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %list_name.addr = alloca i8*, align 8
  %cell_count.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %out_args.addr = alloca %struct.of_phandle_args*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !6971, metadata !DIExpression()), !dbg !6972
  store i8* %list_name, i8** %list_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %list_name.addr, metadata !6973, metadata !DIExpression()), !dbg !6974
  store i32 %cell_count, i32* %cell_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cell_count.addr, metadata !6975, metadata !DIExpression()), !dbg !6976
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6977, metadata !DIExpression()), !dbg !6978
  store %struct.of_phandle_args* %out_args, %struct.of_phandle_args** %out_args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_phandle_args** %out_args.addr, metadata !6979, metadata !DIExpression()), !dbg !6980
  %0 = load i32, i32* %index.addr, align 4, !dbg !6981
  %cmp = icmp slt i32 %0, 0, !dbg !6983
  br i1 %cmp, label %if.then, label %if.end, !dbg !6984

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6985
  br label %return, !dbg !6985

if.end:                                           ; preds = %entry
  %1 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !6986
  %2 = load i8*, i8** %list_name.addr, align 8, !dbg !6987
  %3 = load i32, i32* %cell_count.addr, align 4, !dbg !6988
  %4 = load i32, i32* %index.addr, align 4, !dbg !6989
  %5 = load %struct.of_phandle_args*, %struct.of_phandle_args** %out_args.addr, align 8, !dbg !6990
  %call = call i32 @__of_parse_phandle_with_args(%struct.device_node* %1, i8* %2, i8* null, i32 %3, i32 %4, %struct.of_phandle_args* %5) #10, !dbg !6991
  store i32 %call, i32* %retval, align 4, !dbg !6992
  br label %return, !dbg !6992

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !6993
  ret i32 %6, !dbg !6993
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_count_phandle_with_args(%struct.device_node* %np, i8* %list_name, i8* %cells_name) #0 !dbg !6994 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %list_name.addr = alloca i8*, align 8
  %cells_name.addr = alloca i8*, align 8
  %it = alloca %struct.of_phandle_iterator, align 8
  %rc = alloca i32, align 4
  %cur_index = alloca i32, align 4
  %list = alloca i32*, align 8
  %size = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !6997, metadata !DIExpression()), !dbg !6998
  store i8* %list_name, i8** %list_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %list_name.addr, metadata !6999, metadata !DIExpression()), !dbg !7000
  store i8* %cells_name, i8** %cells_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cells_name.addr, metadata !7001, metadata !DIExpression()), !dbg !7002
  call void @llvm.dbg.declare(metadata %struct.of_phandle_iterator* %it, metadata !7003, metadata !DIExpression()), !dbg !7004
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !7005, metadata !DIExpression()), !dbg !7006
  call void @llvm.dbg.declare(metadata i32* %cur_index, metadata !7007, metadata !DIExpression()), !dbg !7008
  store i32 0, i32* %cur_index, align 4, !dbg !7008
  %0 = load i8*, i8** %cells_name.addr, align 8, !dbg !7009
  %tobool = icmp ne i8* %0, null, !dbg !7009
  br i1 %tobool, label %if.end4, label %if.then, !dbg !7011

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32** %list, metadata !7012, metadata !DIExpression()), !dbg !7014
  call void @llvm.dbg.declare(metadata i32* %size, metadata !7015, metadata !DIExpression()), !dbg !7016
  %1 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7017
  %2 = load i8*, i8** %list_name.addr, align 8, !dbg !7018
  %call = call i8* @of_get_property(%struct.device_node* %1, i8* %2, i32* %size) #10, !dbg !7019
  %3 = bitcast i8* %call to i32*, !dbg !7019
  store i32* %3, i32** %list, align 8, !dbg !7020
  %4 = load i32*, i32** %list, align 8, !dbg !7021
  %tobool1 = icmp ne i32* %4, null, !dbg !7021
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !7023

if.then2:                                         ; preds = %if.then
  store i32 -2, i32* %retval, align 4, !dbg !7024
  br label %return, !dbg !7024

if.end:                                           ; preds = %if.then
  %5 = load i32, i32* %size, align 4, !dbg !7025
  %conv = sext i32 %5 to i64, !dbg !7025
  %div = udiv i64 %conv, 4, !dbg !7026
  %conv3 = trunc i64 %div to i32, !dbg !7025
  store i32 %conv3, i32* %retval, align 4, !dbg !7027
  br label %return, !dbg !7027

if.end4:                                          ; preds = %entry
  %6 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7028
  %7 = load i8*, i8** %list_name.addr, align 8, !dbg !7029
  %8 = load i8*, i8** %cells_name.addr, align 8, !dbg !7030
  %call5 = call i32 @of_phandle_iterator_init(%struct.of_phandle_iterator* %it, %struct.device_node* %6, i8* %7, i8* %8, i32 -1) #10, !dbg !7031
  store i32 %call5, i32* %rc, align 4, !dbg !7032
  %9 = load i32, i32* %rc, align 4, !dbg !7033
  %tobool6 = icmp ne i32 %9, 0, !dbg !7033
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7035

if.then7:                                         ; preds = %if.end4
  %10 = load i32, i32* %rc, align 4, !dbg !7036
  store i32 %10, i32* %retval, align 4, !dbg !7037
  br label %return, !dbg !7037

if.end8:                                          ; preds = %if.end4
  br label %while.cond, !dbg !7038

while.cond:                                       ; preds = %while.body, %if.end8
  %call9 = call i32 @of_phandle_iterator_next(%struct.of_phandle_iterator* %it) #10, !dbg !7039
  store i32 %call9, i32* %rc, align 4, !dbg !7040
  %cmp = icmp eq i32 %call9, 0, !dbg !7041
  br i1 %cmp, label %while.body, label %while.end, !dbg !7038

while.body:                                       ; preds = %while.cond
  %11 = load i32, i32* %cur_index, align 4, !dbg !7042
  %add = add i32 %11, 1, !dbg !7042
  store i32 %add, i32* %cur_index, align 4, !dbg !7042
  br label %while.cond, !dbg !7038, !llvm.loop !7043

while.end:                                        ; preds = %while.cond
  %12 = load i32, i32* %rc, align 4, !dbg !7045
  %cmp11 = icmp ne i32 %12, -2, !dbg !7047
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !7048

if.then13:                                        ; preds = %while.end
  %13 = load i32, i32* %rc, align 4, !dbg !7049
  store i32 %13, i32* %retval, align 4, !dbg !7050
  br label %return, !dbg !7050

if.end14:                                         ; preds = %while.end
  %14 = load i32, i32* %cur_index, align 4, !dbg !7051
  store i32 %14, i32* %retval, align 4, !dbg !7052
  br label %return, !dbg !7052

return:                                           ; preds = %if.end14, %if.then13, %if.then7, %if.end, %if.then2
  %15 = load i32, i32* %retval, align 4, !dbg !7053
  ret i32 %15, !dbg !7053
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__of_add_property(%struct.device_node* %np, %struct.property* %prop) #0 !dbg !7054 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %prop.addr = alloca %struct.property*, align 8
  %next = alloca %struct.property**, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7057, metadata !DIExpression()), !dbg !7058
  store %struct.property* %prop, %struct.property** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.property** %prop.addr, metadata !7059, metadata !DIExpression()), !dbg !7060
  call void @llvm.dbg.declare(metadata %struct.property*** %next, metadata !7061, metadata !DIExpression()), !dbg !7063
  %0 = load %struct.property*, %struct.property** %prop.addr, align 8, !dbg !7064
  %next1 = getelementptr inbounds %struct.property, %struct.property* %0, i32 0, i32 3, !dbg !7065
  store %struct.property* null, %struct.property** %next1, align 8, !dbg !7066
  %1 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7067
  %properties = getelementptr inbounds %struct.device_node, %struct.device_node* %1, i32 0, i32 4, !dbg !7068
  store %struct.property** %properties, %struct.property*** %next, align 8, !dbg !7069
  br label %while.cond, !dbg !7070

while.cond:                                       ; preds = %if.end, %entry
  %2 = load %struct.property**, %struct.property*** %next, align 8, !dbg !7071
  %3 = load %struct.property*, %struct.property** %2, align 8, !dbg !7072
  %tobool = icmp ne %struct.property* %3, null, !dbg !7070
  br i1 %tobool, label %while.body, label %while.end, !dbg !7070

while.body:                                       ; preds = %while.cond
  %4 = load %struct.property*, %struct.property** %prop.addr, align 8, !dbg !7073
  %name = getelementptr inbounds %struct.property, %struct.property* %4, i32 0, i32 0, !dbg !7076
  %5 = load i8*, i8** %name, align 8, !dbg !7076
  %6 = load %struct.property**, %struct.property*** %next, align 8, !dbg !7077
  %7 = load %struct.property*, %struct.property** %6, align 8, !dbg !7078
  %name2 = getelementptr inbounds %struct.property, %struct.property* %7, i32 0, i32 0, !dbg !7079
  %8 = load i8*, i8** %name2, align 8, !dbg !7079
  %call = call i32 @strcmp(i8* %5, i8* %8) #10, !dbg !7080
  %cmp = icmp eq i32 %call, 0, !dbg !7081
  br i1 %cmp, label %if.then, label %if.end, !dbg !7082

if.then:                                          ; preds = %while.body
  store i32 -17, i32* %retval, align 4, !dbg !7083
  br label %return, !dbg !7083

if.end:                                           ; preds = %while.body
  %9 = load %struct.property**, %struct.property*** %next, align 8, !dbg !7084
  %10 = load %struct.property*, %struct.property** %9, align 8, !dbg !7085
  %next3 = getelementptr inbounds %struct.property, %struct.property* %10, i32 0, i32 3, !dbg !7086
  store %struct.property** %next3, %struct.property*** %next, align 8, !dbg !7087
  br label %while.cond, !dbg !7070, !llvm.loop !7088

while.end:                                        ; preds = %while.cond
  %11 = load %struct.property*, %struct.property** %prop.addr, align 8, !dbg !7090
  %12 = load %struct.property**, %struct.property*** %next, align 8, !dbg !7091
  store %struct.property* %11, %struct.property** %12, align 8, !dbg !7092
  store i32 0, i32* %retval, align 4, !dbg !7093
  br label %return, !dbg !7093

return:                                           ; preds = %while.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !7094
  ret i32 %13, !dbg !7094
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_add_property(%struct.device_node* %np, %struct.property* %prop) #0 !dbg !7095 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %prop.addr = alloca %struct.property*, align 8
  %flags = alloca i64, align 8
  %rc = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy4 = alloca i64, align 8
  %__dummy25 = alloca i64, align 8
  %tmp8 = alloca i32, align 4
  %__dummy18 = alloca i64, align 8
  %__dummy219 = alloca i64, align 8
  %tmp22 = alloca i32, align 4
  %__dummy26 = alloca i64, align 8
  %__dummy227 = alloca i64, align 8
  %tmp30 = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7096, metadata !DIExpression()), !dbg !7097
  store %struct.property* %prop, %struct.property** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.property** %prop.addr, metadata !7098, metadata !DIExpression()), !dbg !7099
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7100, metadata !DIExpression()), !dbg !7101
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !7102, metadata !DIExpression()), !dbg !7103
  call void @mutex_lock(%struct.mutex* @of_mutex) #10, !dbg !7104
  br label %do.body, !dbg !7105

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7106, metadata !DIExpression()), !dbg !7109
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7110, metadata !DIExpression()), !dbg !7109
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7109
  %conv = zext i1 %cmp to i32, !dbg !7109
  store i32 1, i32* %tmp, align 4, !dbg !7109
  %0 = load i32, i32* %tmp, align 4, !dbg !7109
  br label %do.body1, !dbg !7111

do.body1:                                         ; preds = %do.body
  br label %do.body2, !dbg !7112

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7114

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy4, metadata !7116, metadata !DIExpression()), !dbg !7119
  call void @llvm.dbg.declare(metadata i64* %__dummy25, metadata !7120, metadata !DIExpression()), !dbg !7119
  %cmp6 = icmp eq i64* %__dummy4, %__dummy25, !dbg !7119
  %conv7 = zext i1 %cmp6 to i32, !dbg !7119
  store i32 1, i32* %tmp8, align 4, !dbg !7119
  %1 = load i32, i32* %tmp8, align 4, !dbg !7119
  %call = call i64 @arch_local_irq_save() #10, !dbg !7121
  store i64 %call, i64* %flags, align 8, !dbg !7121
  br label %do.end, !dbg !7121

do.end:                                           ; preds = %do.body3
  br label %do.end9, !dbg !7114

do.end9:                                          ; preds = %do.end
  br label %do.body10, !dbg !7112

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !7122, !srcloc !7124
  br label %do.body11, !dbg !7122

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !7125

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !7122

do.end13:                                         ; preds = %do.end12
  br label %do.end14, !dbg !7112

do.end14:                                         ; preds = %do.end13
  br label %do.end15, !dbg !7111

do.end15:                                         ; preds = %do.end14
  %2 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7127
  %3 = load %struct.property*, %struct.property** %prop.addr, align 8, !dbg !7128
  %call16 = call i32 @__of_add_property(%struct.device_node* %2, %struct.property* %3) #10, !dbg !7129
  store i32 %call16, i32* %rc, align 4, !dbg !7130
  br label %do.body17, !dbg !7131

do.body17:                                        ; preds = %do.end15
  call void @llvm.dbg.declare(metadata i64* %__dummy18, metadata !7132, metadata !DIExpression()), !dbg !7135
  call void @llvm.dbg.declare(metadata i64* %__dummy219, metadata !7136, metadata !DIExpression()), !dbg !7135
  %cmp20 = icmp eq i64* %__dummy18, %__dummy219, !dbg !7135
  %conv21 = zext i1 %cmp20 to i32, !dbg !7135
  store i32 1, i32* %tmp22, align 4, !dbg !7135
  %4 = load i32, i32* %tmp22, align 4, !dbg !7135
  br label %do.body23, !dbg !7137

do.body23:                                        ; preds = %do.body17
  br label %do.body24, !dbg !7138

do.body24:                                        ; preds = %do.body23
  br label %do.body25, !dbg !7140

do.body25:                                        ; preds = %do.body24
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7142, metadata !DIExpression()), !dbg !7145
  call void @llvm.dbg.declare(metadata i64* %__dummy227, metadata !7146, metadata !DIExpression()), !dbg !7145
  %cmp28 = icmp eq i64* %__dummy26, %__dummy227, !dbg !7145
  %conv29 = zext i1 %cmp28 to i32, !dbg !7145
  store i32 1, i32* %tmp30, align 4, !dbg !7145
  %5 = load i32, i32* %tmp30, align 4, !dbg !7145
  %6 = load i64, i64* %flags, align 8, !dbg !7147
  call void @arch_local_irq_restore(i64 %6) #10, !dbg !7147
  br label %do.end31, !dbg !7147

do.end31:                                         ; preds = %do.body25
  br label %do.end32, !dbg !7140

do.end32:                                         ; preds = %do.end31
  br label %do.body33, !dbg !7138

do.body33:                                        ; preds = %do.end32
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !7148, !srcloc !7150
  br label %do.body34, !dbg !7148

do.body34:                                        ; preds = %do.body33
  br label %do.end35, !dbg !7151

do.end35:                                         ; preds = %do.body34
  br label %do.end36, !dbg !7148

do.end36:                                         ; preds = %do.end35
  br label %do.end37, !dbg !7138

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !7137

do.end38:                                         ; preds = %do.end37
  %7 = load i32, i32* %rc, align 4, !dbg !7153
  %tobool = icmp ne i32 %7, 0, !dbg !7153
  br i1 %tobool, label %if.end, label %if.then, !dbg !7155

if.then:                                          ; preds = %do.end38
  %8 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7156
  %9 = load %struct.property*, %struct.property** %prop.addr, align 8, !dbg !7157
  %call39 = call i32 @__of_add_property_sysfs(%struct.device_node* %8, %struct.property* %9) #10, !dbg !7158
  br label %if.end, !dbg !7158

if.end:                                           ; preds = %if.then, %do.end38
  call void @mutex_unlock(%struct.mutex* @of_mutex) #10, !dbg !7159
  %10 = load i32, i32* %rc, align 4, !dbg !7160
  %tobool40 = icmp ne i32 %10, 0, !dbg !7160
  br i1 %tobool40, label %if.end43, label %if.then41, !dbg !7162

if.then41:                                        ; preds = %if.end
  %11 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7163
  %12 = load %struct.property*, %struct.property** %prop.addr, align 8, !dbg !7164
  %call42 = call i32 @of_property_notify(i32 3, %struct.device_node* %11, %struct.property* %12, %struct.property* null) #10, !dbg !7165
  br label %if.end43, !dbg !7165

if.end43:                                         ; preds = %if.then41, %if.end
  %13 = load i32, i32* %rc, align 4, !dbg !7166
  ret i32 %13, !dbg !7167
}

; Function Attrs: noredzone
declare dso_local i32 @__of_add_property_sysfs(%struct.device_node*, %struct.property*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_property_notify(i32 %action, %struct.device_node* %np, %struct.property* %prop, %struct.property* %old_prop) #0 !dbg !7168 {
entry:
  %action.addr = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %prop.addr = alloca %struct.property*, align 8
  %old_prop.addr = alloca %struct.property*, align 8
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !7171, metadata !DIExpression()), !dbg !7172
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7173, metadata !DIExpression()), !dbg !7174
  store %struct.property* %prop, %struct.property** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.property** %prop.addr, metadata !7175, metadata !DIExpression()), !dbg !7176
  store %struct.property* %old_prop, %struct.property** %old_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.property** %old_prop.addr, metadata !7177, metadata !DIExpression()), !dbg !7178
  ret i32 0, !dbg !7179
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__of_remove_property(%struct.device_node* %np, %struct.property* %prop) #0 !dbg !7180 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %prop.addr = alloca %struct.property*, align 8
  %next = alloca %struct.property**, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7181, metadata !DIExpression()), !dbg !7182
  store %struct.property* %prop, %struct.property** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.property** %prop.addr, metadata !7183, metadata !DIExpression()), !dbg !7184
  call void @llvm.dbg.declare(metadata %struct.property*** %next, metadata !7185, metadata !DIExpression()), !dbg !7186
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7187
  %properties = getelementptr inbounds %struct.device_node, %struct.device_node* %0, i32 0, i32 4, !dbg !7189
  store %struct.property** %properties, %struct.property*** %next, align 8, !dbg !7190
  br label %for.cond, !dbg !7191

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.property**, %struct.property*** %next, align 8, !dbg !7192
  %2 = load %struct.property*, %struct.property** %1, align 8, !dbg !7194
  %tobool = icmp ne %struct.property* %2, null, !dbg !7195
  br i1 %tobool, label %for.body, label %for.end, !dbg !7195

for.body:                                         ; preds = %for.cond
  %3 = load %struct.property**, %struct.property*** %next, align 8, !dbg !7196
  %4 = load %struct.property*, %struct.property** %3, align 8, !dbg !7199
  %5 = load %struct.property*, %struct.property** %prop.addr, align 8, !dbg !7200
  %cmp = icmp eq %struct.property* %4, %5, !dbg !7201
  br i1 %cmp, label %if.then, label %if.end, !dbg !7202

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !7203

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !7204

for.inc:                                          ; preds = %if.end
  %6 = load %struct.property**, %struct.property*** %next, align 8, !dbg !7205
  %7 = load %struct.property*, %struct.property** %6, align 8, !dbg !7206
  %next1 = getelementptr inbounds %struct.property, %struct.property* %7, i32 0, i32 3, !dbg !7207
  store %struct.property** %next1, %struct.property*** %next, align 8, !dbg !7208
  br label %for.cond, !dbg !7209, !llvm.loop !7210

for.end:                                          ; preds = %if.then, %for.cond
  %8 = load %struct.property**, %struct.property*** %next, align 8, !dbg !7212
  %9 = load %struct.property*, %struct.property** %8, align 8, !dbg !7214
  %cmp2 = icmp eq %struct.property* %9, null, !dbg !7215
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !7216

if.then3:                                         ; preds = %for.end
  store i32 -19, i32* %retval, align 4, !dbg !7217
  br label %return, !dbg !7217

if.end4:                                          ; preds = %for.end
  %10 = load %struct.property*, %struct.property** %prop.addr, align 8, !dbg !7218
  %next5 = getelementptr inbounds %struct.property, %struct.property* %10, i32 0, i32 3, !dbg !7219
  %11 = load %struct.property*, %struct.property** %next5, align 8, !dbg !7219
  %12 = load %struct.property**, %struct.property*** %next, align 8, !dbg !7220
  store %struct.property* %11, %struct.property** %12, align 8, !dbg !7221
  %13 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7222
  %deadprops = getelementptr inbounds %struct.device_node, %struct.device_node* %13, i32 0, i32 5, !dbg !7223
  %14 = load %struct.property*, %struct.property** %deadprops, align 8, !dbg !7223
  %15 = load %struct.property*, %struct.property** %prop.addr, align 8, !dbg !7224
  %next6 = getelementptr inbounds %struct.property, %struct.property* %15, i32 0, i32 3, !dbg !7225
  store %struct.property* %14, %struct.property** %next6, align 8, !dbg !7226
  %16 = load %struct.property*, %struct.property** %prop.addr, align 8, !dbg !7227
  %17 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7228
  %deadprops7 = getelementptr inbounds %struct.device_node, %struct.device_node* %17, i32 0, i32 5, !dbg !7229
  store %struct.property* %16, %struct.property** %deadprops7, align 8, !dbg !7230
  store i32 0, i32* %retval, align 4, !dbg !7231
  br label %return, !dbg !7231

return:                                           ; preds = %if.end4, %if.then3
  %18 = load i32, i32* %retval, align 4, !dbg !7232
  ret i32 %18, !dbg !7232
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_remove_property(%struct.device_node* %np, %struct.property* %prop) #0 !dbg !7233 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %prop.addr = alloca %struct.property*, align 8
  %flags = alloca i64, align 8
  %rc = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy4 = alloca i64, align 8
  %__dummy25 = alloca i64, align 8
  %tmp8 = alloca i32, align 4
  %__dummy18 = alloca i64, align 8
  %__dummy219 = alloca i64, align 8
  %tmp22 = alloca i32, align 4
  %__dummy26 = alloca i64, align 8
  %__dummy227 = alloca i64, align 8
  %tmp30 = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7234, metadata !DIExpression()), !dbg !7235
  store %struct.property* %prop, %struct.property** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.property** %prop.addr, metadata !7236, metadata !DIExpression()), !dbg !7237
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7238, metadata !DIExpression()), !dbg !7239
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !7240, metadata !DIExpression()), !dbg !7241
  %0 = load %struct.property*, %struct.property** %prop.addr, align 8, !dbg !7242
  %tobool = icmp ne %struct.property* %0, null, !dbg !7242
  br i1 %tobool, label %if.end, label %if.then, !dbg !7244

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !7245
  br label %return, !dbg !7245

if.end:                                           ; preds = %entry
  call void @mutex_lock(%struct.mutex* @of_mutex) #10, !dbg !7246
  br label %do.body, !dbg !7247

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7248, metadata !DIExpression()), !dbg !7251
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7252, metadata !DIExpression()), !dbg !7251
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7251
  %conv = zext i1 %cmp to i32, !dbg !7251
  store i32 1, i32* %tmp, align 4, !dbg !7251
  %1 = load i32, i32* %tmp, align 4, !dbg !7251
  br label %do.body1, !dbg !7253

do.body1:                                         ; preds = %do.body
  br label %do.body2, !dbg !7254

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7256

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy4, metadata !7258, metadata !DIExpression()), !dbg !7261
  call void @llvm.dbg.declare(metadata i64* %__dummy25, metadata !7262, metadata !DIExpression()), !dbg !7261
  %cmp6 = icmp eq i64* %__dummy4, %__dummy25, !dbg !7261
  %conv7 = zext i1 %cmp6 to i32, !dbg !7261
  store i32 1, i32* %tmp8, align 4, !dbg !7261
  %2 = load i32, i32* %tmp8, align 4, !dbg !7261
  %call = call i64 @arch_local_irq_save() #10, !dbg !7263
  store i64 %call, i64* %flags, align 8, !dbg !7263
  br label %do.end, !dbg !7263

do.end:                                           ; preds = %do.body3
  br label %do.end9, !dbg !7256

do.end9:                                          ; preds = %do.end
  br label %do.body10, !dbg !7254

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !7264, !srcloc !7266
  br label %do.body11, !dbg !7264

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !7267

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !7264

do.end13:                                         ; preds = %do.end12
  br label %do.end14, !dbg !7254

do.end14:                                         ; preds = %do.end13
  br label %do.end15, !dbg !7253

do.end15:                                         ; preds = %do.end14
  %3 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7269
  %4 = load %struct.property*, %struct.property** %prop.addr, align 8, !dbg !7270
  %call16 = call i32 @__of_remove_property(%struct.device_node* %3, %struct.property* %4) #10, !dbg !7271
  store i32 %call16, i32* %rc, align 4, !dbg !7272
  br label %do.body17, !dbg !7273

do.body17:                                        ; preds = %do.end15
  call void @llvm.dbg.declare(metadata i64* %__dummy18, metadata !7274, metadata !DIExpression()), !dbg !7277
  call void @llvm.dbg.declare(metadata i64* %__dummy219, metadata !7278, metadata !DIExpression()), !dbg !7277
  %cmp20 = icmp eq i64* %__dummy18, %__dummy219, !dbg !7277
  %conv21 = zext i1 %cmp20 to i32, !dbg !7277
  store i32 1, i32* %tmp22, align 4, !dbg !7277
  %5 = load i32, i32* %tmp22, align 4, !dbg !7277
  br label %do.body23, !dbg !7279

do.body23:                                        ; preds = %do.body17
  br label %do.body24, !dbg !7280

do.body24:                                        ; preds = %do.body23
  br label %do.body25, !dbg !7282

do.body25:                                        ; preds = %do.body24
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7284, metadata !DIExpression()), !dbg !7287
  call void @llvm.dbg.declare(metadata i64* %__dummy227, metadata !7288, metadata !DIExpression()), !dbg !7287
  %cmp28 = icmp eq i64* %__dummy26, %__dummy227, !dbg !7287
  %conv29 = zext i1 %cmp28 to i32, !dbg !7287
  store i32 1, i32* %tmp30, align 4, !dbg !7287
  %6 = load i32, i32* %tmp30, align 4, !dbg !7287
  %7 = load i64, i64* %flags, align 8, !dbg !7289
  call void @arch_local_irq_restore(i64 %7) #10, !dbg !7289
  br label %do.end31, !dbg !7289

do.end31:                                         ; preds = %do.body25
  br label %do.end32, !dbg !7282

do.end32:                                         ; preds = %do.end31
  br label %do.body33, !dbg !7280

do.body33:                                        ; preds = %do.end32
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !7290, !srcloc !7292
  br label %do.body34, !dbg !7290

do.body34:                                        ; preds = %do.body33
  br label %do.end35, !dbg !7293

do.end35:                                         ; preds = %do.body34
  br label %do.end36, !dbg !7290

do.end36:                                         ; preds = %do.end35
  br label %do.end37, !dbg !7280

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !7279

do.end38:                                         ; preds = %do.end37
  %8 = load i32, i32* %rc, align 4, !dbg !7295
  %tobool39 = icmp ne i32 %8, 0, !dbg !7295
  br i1 %tobool39, label %if.end41, label %if.then40, !dbg !7297

if.then40:                                        ; preds = %do.end38
  %9 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7298
  %10 = load %struct.property*, %struct.property** %prop.addr, align 8, !dbg !7299
  call void @__of_remove_property_sysfs(%struct.device_node* %9, %struct.property* %10) #10, !dbg !7300
  br label %if.end41, !dbg !7300

if.end41:                                         ; preds = %if.then40, %do.end38
  call void @mutex_unlock(%struct.mutex* @of_mutex) #10, !dbg !7301
  %11 = load i32, i32* %rc, align 4, !dbg !7302
  %tobool42 = icmp ne i32 %11, 0, !dbg !7302
  br i1 %tobool42, label %if.end45, label %if.then43, !dbg !7304

if.then43:                                        ; preds = %if.end41
  %12 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7305
  %13 = load %struct.property*, %struct.property** %prop.addr, align 8, !dbg !7306
  %call44 = call i32 @of_property_notify(i32 4, %struct.device_node* %12, %struct.property* %13, %struct.property* null) #10, !dbg !7307
  br label %if.end45, !dbg !7307

if.end45:                                         ; preds = %if.then43, %if.end41
  %14 = load i32, i32* %rc, align 4, !dbg !7308
  store i32 %14, i32* %retval, align 4, !dbg !7309
  br label %return, !dbg !7309

return:                                           ; preds = %if.end45, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !7310
  ret i32 %15, !dbg !7310
}

; Function Attrs: noredzone
declare dso_local void @__of_remove_property_sysfs(%struct.device_node*, %struct.property*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__of_update_property(%struct.device_node* %np, %struct.property* %newprop, %struct.property** %oldpropp) #0 !dbg !7311 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %newprop.addr = alloca %struct.property*, align 8
  %oldpropp.addr = alloca %struct.property**, align 8
  %next = alloca %struct.property**, align 8
  %oldprop = alloca %struct.property*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7314, metadata !DIExpression()), !dbg !7315
  store %struct.property* %newprop, %struct.property** %newprop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.property** %newprop.addr, metadata !7316, metadata !DIExpression()), !dbg !7317
  store %struct.property** %oldpropp, %struct.property*** %oldpropp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.property*** %oldpropp.addr, metadata !7318, metadata !DIExpression()), !dbg !7319
  call void @llvm.dbg.declare(metadata %struct.property*** %next, metadata !7320, metadata !DIExpression()), !dbg !7321
  call void @llvm.dbg.declare(metadata %struct.property** %oldprop, metadata !7322, metadata !DIExpression()), !dbg !7323
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7324
  %properties = getelementptr inbounds %struct.device_node, %struct.device_node* %0, i32 0, i32 4, !dbg !7326
  store %struct.property** %properties, %struct.property*** %next, align 8, !dbg !7327
  br label %for.cond, !dbg !7328

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.property**, %struct.property*** %next, align 8, !dbg !7329
  %2 = load %struct.property*, %struct.property** %1, align 8, !dbg !7331
  %tobool = icmp ne %struct.property* %2, null, !dbg !7332
  br i1 %tobool, label %for.body, label %for.end, !dbg !7332

for.body:                                         ; preds = %for.cond
  %3 = load %struct.property**, %struct.property*** %next, align 8, !dbg !7333
  %4 = load %struct.property*, %struct.property** %3, align 8, !dbg !7333
  %name = getelementptr inbounds %struct.property, %struct.property* %4, i32 0, i32 0, !dbg !7333
  %5 = load i8*, i8** %name, align 8, !dbg !7333
  %6 = load %struct.property*, %struct.property** %newprop.addr, align 8, !dbg !7333
  %name1 = getelementptr inbounds %struct.property, %struct.property* %6, i32 0, i32 0, !dbg !7333
  %7 = load i8*, i8** %name1, align 8, !dbg !7333
  %call = call i32 @strcmp(i8* %5, i8* %7) #10, !dbg !7333
  %cmp = icmp eq i32 %call, 0, !dbg !7336
  br i1 %cmp, label %if.then, label %if.end, !dbg !7337

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !7338

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !7339

for.inc:                                          ; preds = %if.end
  %8 = load %struct.property**, %struct.property*** %next, align 8, !dbg !7340
  %9 = load %struct.property*, %struct.property** %8, align 8, !dbg !7341
  %next2 = getelementptr inbounds %struct.property, %struct.property* %9, i32 0, i32 3, !dbg !7342
  store %struct.property** %next2, %struct.property*** %next, align 8, !dbg !7343
  br label %for.cond, !dbg !7344, !llvm.loop !7345

for.end:                                          ; preds = %if.then, %for.cond
  %10 = load %struct.property**, %struct.property*** %next, align 8, !dbg !7347
  %11 = load %struct.property*, %struct.property** %10, align 8, !dbg !7348
  store %struct.property* %11, %struct.property** %oldprop, align 8, !dbg !7349
  %12 = load %struct.property**, %struct.property*** %oldpropp.addr, align 8, !dbg !7350
  store %struct.property* %11, %struct.property** %12, align 8, !dbg !7351
  %13 = load %struct.property*, %struct.property** %oldprop, align 8, !dbg !7352
  %tobool3 = icmp ne %struct.property* %13, null, !dbg !7352
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !7354

if.then4:                                         ; preds = %for.end
  %14 = load %struct.property*, %struct.property** %oldprop, align 8, !dbg !7355
  %next5 = getelementptr inbounds %struct.property, %struct.property* %14, i32 0, i32 3, !dbg !7357
  %15 = load %struct.property*, %struct.property** %next5, align 8, !dbg !7357
  %16 = load %struct.property*, %struct.property** %newprop.addr, align 8, !dbg !7358
  %next6 = getelementptr inbounds %struct.property, %struct.property* %16, i32 0, i32 3, !dbg !7359
  store %struct.property* %15, %struct.property** %next6, align 8, !dbg !7360
  %17 = load %struct.property*, %struct.property** %newprop.addr, align 8, !dbg !7361
  %18 = load %struct.property**, %struct.property*** %next, align 8, !dbg !7362
  store %struct.property* %17, %struct.property** %18, align 8, !dbg !7363
  %19 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7364
  %deadprops = getelementptr inbounds %struct.device_node, %struct.device_node* %19, i32 0, i32 5, !dbg !7365
  %20 = load %struct.property*, %struct.property** %deadprops, align 8, !dbg !7365
  %21 = load %struct.property*, %struct.property** %oldprop, align 8, !dbg !7366
  %next7 = getelementptr inbounds %struct.property, %struct.property* %21, i32 0, i32 3, !dbg !7367
  store %struct.property* %20, %struct.property** %next7, align 8, !dbg !7368
  %22 = load %struct.property*, %struct.property** %oldprop, align 8, !dbg !7369
  %23 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7370
  %deadprops8 = getelementptr inbounds %struct.device_node, %struct.device_node* %23, i32 0, i32 5, !dbg !7371
  store %struct.property* %22, %struct.property** %deadprops8, align 8, !dbg !7372
  br label %if.end10, !dbg !7373

if.else:                                          ; preds = %for.end
  %24 = load %struct.property*, %struct.property** %newprop.addr, align 8, !dbg !7374
  %next9 = getelementptr inbounds %struct.property, %struct.property* %24, i32 0, i32 3, !dbg !7376
  store %struct.property* null, %struct.property** %next9, align 8, !dbg !7377
  %25 = load %struct.property*, %struct.property** %newprop.addr, align 8, !dbg !7378
  %26 = load %struct.property**, %struct.property*** %next, align 8, !dbg !7379
  store %struct.property* %25, %struct.property** %26, align 8, !dbg !7380
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then4
  ret i32 0, !dbg !7381
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_update_property(%struct.device_node* %np, %struct.property* %newprop) #0 !dbg !7382 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %newprop.addr = alloca %struct.property*, align 8
  %oldprop = alloca %struct.property*, align 8
  %flags = alloca i64, align 8
  %rc = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy4 = alloca i64, align 8
  %__dummy25 = alloca i64, align 8
  %tmp8 = alloca i32, align 4
  %__dummy18 = alloca i64, align 8
  %__dummy219 = alloca i64, align 8
  %tmp22 = alloca i32, align 4
  %__dummy26 = alloca i64, align 8
  %__dummy227 = alloca i64, align 8
  %tmp30 = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7383, metadata !DIExpression()), !dbg !7384
  store %struct.property* %newprop, %struct.property** %newprop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.property** %newprop.addr, metadata !7385, metadata !DIExpression()), !dbg !7386
  call void @llvm.dbg.declare(metadata %struct.property** %oldprop, metadata !7387, metadata !DIExpression()), !dbg !7388
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7389, metadata !DIExpression()), !dbg !7390
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !7391, metadata !DIExpression()), !dbg !7392
  %0 = load %struct.property*, %struct.property** %newprop.addr, align 8, !dbg !7393
  %name = getelementptr inbounds %struct.property, %struct.property* %0, i32 0, i32 0, !dbg !7395
  %1 = load i8*, i8** %name, align 8, !dbg !7395
  %tobool = icmp ne i8* %1, null, !dbg !7393
  br i1 %tobool, label %if.end, label %if.then, !dbg !7396

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !7397
  br label %return, !dbg !7397

if.end:                                           ; preds = %entry
  call void @mutex_lock(%struct.mutex* @of_mutex) #10, !dbg !7398
  br label %do.body, !dbg !7399

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7400, metadata !DIExpression()), !dbg !7403
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7404, metadata !DIExpression()), !dbg !7403
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7403
  %conv = zext i1 %cmp to i32, !dbg !7403
  store i32 1, i32* %tmp, align 4, !dbg !7403
  %2 = load i32, i32* %tmp, align 4, !dbg !7403
  br label %do.body1, !dbg !7405

do.body1:                                         ; preds = %do.body
  br label %do.body2, !dbg !7406

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7408

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy4, metadata !7410, metadata !DIExpression()), !dbg !7413
  call void @llvm.dbg.declare(metadata i64* %__dummy25, metadata !7414, metadata !DIExpression()), !dbg !7413
  %cmp6 = icmp eq i64* %__dummy4, %__dummy25, !dbg !7413
  %conv7 = zext i1 %cmp6 to i32, !dbg !7413
  store i32 1, i32* %tmp8, align 4, !dbg !7413
  %3 = load i32, i32* %tmp8, align 4, !dbg !7413
  %call = call i64 @arch_local_irq_save() #10, !dbg !7415
  store i64 %call, i64* %flags, align 8, !dbg !7415
  br label %do.end, !dbg !7415

do.end:                                           ; preds = %do.body3
  br label %do.end9, !dbg !7408

do.end9:                                          ; preds = %do.end
  br label %do.body10, !dbg !7406

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !7416, !srcloc !7418
  br label %do.body11, !dbg !7416

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !7419

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !7416

do.end13:                                         ; preds = %do.end12
  br label %do.end14, !dbg !7406

do.end14:                                         ; preds = %do.end13
  br label %do.end15, !dbg !7405

do.end15:                                         ; preds = %do.end14
  %4 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7421
  %5 = load %struct.property*, %struct.property** %newprop.addr, align 8, !dbg !7422
  %call16 = call i32 @__of_update_property(%struct.device_node* %4, %struct.property* %5, %struct.property** %oldprop) #10, !dbg !7423
  store i32 %call16, i32* %rc, align 4, !dbg !7424
  br label %do.body17, !dbg !7425

do.body17:                                        ; preds = %do.end15
  call void @llvm.dbg.declare(metadata i64* %__dummy18, metadata !7426, metadata !DIExpression()), !dbg !7429
  call void @llvm.dbg.declare(metadata i64* %__dummy219, metadata !7430, metadata !DIExpression()), !dbg !7429
  %cmp20 = icmp eq i64* %__dummy18, %__dummy219, !dbg !7429
  %conv21 = zext i1 %cmp20 to i32, !dbg !7429
  store i32 1, i32* %tmp22, align 4, !dbg !7429
  %6 = load i32, i32* %tmp22, align 4, !dbg !7429
  br label %do.body23, !dbg !7431

do.body23:                                        ; preds = %do.body17
  br label %do.body24, !dbg !7432

do.body24:                                        ; preds = %do.body23
  br label %do.body25, !dbg !7434

do.body25:                                        ; preds = %do.body24
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7436, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.declare(metadata i64* %__dummy227, metadata !7440, metadata !DIExpression()), !dbg !7439
  %cmp28 = icmp eq i64* %__dummy26, %__dummy227, !dbg !7439
  %conv29 = zext i1 %cmp28 to i32, !dbg !7439
  store i32 1, i32* %tmp30, align 4, !dbg !7439
  %7 = load i32, i32* %tmp30, align 4, !dbg !7439
  %8 = load i64, i64* %flags, align 8, !dbg !7441
  call void @arch_local_irq_restore(i64 %8) #10, !dbg !7441
  br label %do.end31, !dbg !7441

do.end31:                                         ; preds = %do.body25
  br label %do.end32, !dbg !7434

do.end32:                                         ; preds = %do.end31
  br label %do.body33, !dbg !7432

do.body33:                                        ; preds = %do.end32
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !7442, !srcloc !7444
  br label %do.body34, !dbg !7442

do.body34:                                        ; preds = %do.body33
  br label %do.end35, !dbg !7445

do.end35:                                         ; preds = %do.body34
  br label %do.end36, !dbg !7442

do.end36:                                         ; preds = %do.end35
  br label %do.end37, !dbg !7432

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !7431

do.end38:                                         ; preds = %do.end37
  %9 = load i32, i32* %rc, align 4, !dbg !7447
  %tobool39 = icmp ne i32 %9, 0, !dbg !7447
  br i1 %tobool39, label %if.end41, label %if.then40, !dbg !7449

if.then40:                                        ; preds = %do.end38
  %10 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7450
  %11 = load %struct.property*, %struct.property** %newprop.addr, align 8, !dbg !7451
  %12 = load %struct.property*, %struct.property** %oldprop, align 8, !dbg !7452
  call void @__of_update_property_sysfs(%struct.device_node* %10, %struct.property* %11, %struct.property* %12) #10, !dbg !7453
  br label %if.end41, !dbg !7453

if.end41:                                         ; preds = %if.then40, %do.end38
  call void @mutex_unlock(%struct.mutex* @of_mutex) #10, !dbg !7454
  %13 = load i32, i32* %rc, align 4, !dbg !7455
  %tobool42 = icmp ne i32 %13, 0, !dbg !7455
  br i1 %tobool42, label %if.end45, label %if.then43, !dbg !7457

if.then43:                                        ; preds = %if.end41
  %14 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7458
  %15 = load %struct.property*, %struct.property** %newprop.addr, align 8, !dbg !7459
  %16 = load %struct.property*, %struct.property** %oldprop, align 8, !dbg !7460
  %call44 = call i32 @of_property_notify(i32 5, %struct.device_node* %14, %struct.property* %15, %struct.property* %16) #10, !dbg !7461
  br label %if.end45, !dbg !7461

if.end45:                                         ; preds = %if.then43, %if.end41
  %17 = load i32, i32* %rc, align 4, !dbg !7462
  store i32 %17, i32* %retval, align 4, !dbg !7463
  br label %return, !dbg !7463

return:                                           ; preds = %if.end45, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !7464
  ret i32 %18, !dbg !7464
}

; Function Attrs: noredzone
declare dso_local void @__of_update_property_sysfs(%struct.device_node*, %struct.property*, %struct.property*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @of_alias_scan(i8* (i64, i64)* %dt_alloc) #0 !dbg !7465 {
entry:
  %dt_alloc.addr = alloca i8* (i64, i64)*, align 8
  %pp = alloca %struct.property*, align 8
  %name = alloca i8*, align 8
  %start = alloca i8*, align 8
  %end = alloca i8*, align 8
  %np = alloca %struct.device_node*, align 8
  %ap = alloca %struct.alias_prop*, align 8
  %id = alloca i32, align 4
  %len = alloca i32, align 4
  store i8* (i64, i64)* %dt_alloc, i8* (i64, i64)** %dt_alloc.addr, align 8
  call void @llvm.dbg.declare(metadata i8* (i64, i64)** %dt_alloc.addr, metadata !7471, metadata !DIExpression()), !dbg !7472
  call void @llvm.dbg.declare(metadata %struct.property** %pp, metadata !7473, metadata !DIExpression()), !dbg !7474
  %call = call %struct.device_node* @of_find_node_by_path(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0)) #10, !dbg !7475
  store %struct.device_node* %call, %struct.device_node** @of_aliases, align 8, !dbg !7476
  %call1 = call %struct.device_node* @of_find_node_by_path(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i64 0, i64 0)) #10, !dbg !7477
  store %struct.device_node* %call1, %struct.device_node** @of_chosen, align 8, !dbg !7478
  %0 = load %struct.device_node*, %struct.device_node** @of_chosen, align 8, !dbg !7479
  %cmp = icmp eq %struct.device_node* %0, null, !dbg !7481
  br i1 %cmp, label %if.then, label %if.end, !dbg !7482

if.then:                                          ; preds = %entry
  %call2 = call %struct.device_node* @of_find_node_by_path(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i64 0, i64 0)) #10, !dbg !7483
  store %struct.device_node* %call2, %struct.device_node** @of_chosen, align 8, !dbg !7484
  br label %if.end, !dbg !7485

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.device_node*, %struct.device_node** @of_chosen, align 8, !dbg !7486
  %tobool = icmp ne %struct.device_node* %1, null, !dbg !7486
  br i1 %tobool, label %if.then3, label %if.end13, !dbg !7488

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %name, metadata !7489, metadata !DIExpression()), !dbg !7491
  store i8* null, i8** %name, align 8, !dbg !7491
  %2 = load %struct.device_node*, %struct.device_node** @of_chosen, align 8, !dbg !7492
  %call4 = call i32 @of_property_read_string(%struct.device_node* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0), i8** %name) #10, !dbg !7494
  %tobool5 = icmp ne i32 %call4, 0, !dbg !7494
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !7495

if.then6:                                         ; preds = %if.then3
  %3 = load %struct.device_node*, %struct.device_node** @of_chosen, align 8, !dbg !7496
  %call7 = call i32 @of_property_read_string(%struct.device_node* %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i64 0, i64 0), i8** %name) #10, !dbg !7497
  br label %if.end8, !dbg !7497

if.end8:                                          ; preds = %if.then6, %if.then3
  %4 = load i8*, i8** %name, align 8, !dbg !7498
  %tobool9 = icmp ne i8* %4, null, !dbg !7498
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !7500

if.then10:                                        ; preds = %if.end8
  %5 = load i8*, i8** %name, align 8, !dbg !7501
  %call11 = call %struct.device_node* @of_find_node_opts_by_path(i8* %5, i8** @of_stdout_options) #10, !dbg !7502
  store %struct.device_node* %call11, %struct.device_node** @of_stdout, align 8, !dbg !7503
  br label %if.end12, !dbg !7504

if.end12:                                         ; preds = %if.then10, %if.end8
  br label %if.end13, !dbg !7505

if.end13:                                         ; preds = %if.end12, %if.end
  %6 = load %struct.device_node*, %struct.device_node** @of_aliases, align 8, !dbg !7506
  %tobool14 = icmp ne %struct.device_node* %6, null, !dbg !7506
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !7508

if.then15:                                        ; preds = %if.end13
  br label %for.end, !dbg !7509

if.end16:                                         ; preds = %if.end13
  %7 = load %struct.device_node*, %struct.device_node** @of_aliases, align 8, !dbg !7510
  %properties = getelementptr inbounds %struct.device_node, %struct.device_node* %7, i32 0, i32 4, !dbg !7510
  %8 = load %struct.property*, %struct.property** %properties, align 8, !dbg !7510
  store %struct.property* %8, %struct.property** %pp, align 8, !dbg !7510
  br label %for.cond, !dbg !7510

for.cond:                                         ; preds = %for.inc, %if.end16
  %9 = load %struct.property*, %struct.property** %pp, align 8, !dbg !7512
  %cmp17 = icmp ne %struct.property* %9, null, !dbg !7512
  br i1 %cmp17, label %for.body, label %for.end, !dbg !7510

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %start, metadata !7514, metadata !DIExpression()), !dbg !7516
  %10 = load %struct.property*, %struct.property** %pp, align 8, !dbg !7517
  %name18 = getelementptr inbounds %struct.property, %struct.property* %10, i32 0, i32 0, !dbg !7518
  %11 = load i8*, i8** %name18, align 8, !dbg !7518
  store i8* %11, i8** %start, align 8, !dbg !7516
  call void @llvm.dbg.declare(metadata i8** %end, metadata !7519, metadata !DIExpression()), !dbg !7520
  %12 = load i8*, i8** %start, align 8, !dbg !7521
  %13 = load i8*, i8** %start, align 8, !dbg !7522
  %call19 = call i64 @strlen(i8* %13) #10, !dbg !7523
  %add.ptr = getelementptr i8, i8* %12, i64 %call19, !dbg !7524
  store i8* %add.ptr, i8** %end, align 8, !dbg !7520
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !7525, metadata !DIExpression()), !dbg !7526
  call void @llvm.dbg.declare(metadata %struct.alias_prop** %ap, metadata !7527, metadata !DIExpression()), !dbg !7528
  call void @llvm.dbg.declare(metadata i32* %id, metadata !7529, metadata !DIExpression()), !dbg !7530
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7531, metadata !DIExpression()), !dbg !7532
  %14 = load %struct.property*, %struct.property** %pp, align 8, !dbg !7533
  %name20 = getelementptr inbounds %struct.property, %struct.property* %14, i32 0, i32 0, !dbg !7535
  %15 = load i8*, i8** %name20, align 8, !dbg !7535
  %call21 = call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0)) #10, !dbg !7536
  %tobool22 = icmp ne i32 %call21, 0, !dbg !7536
  br i1 %tobool22, label %lor.lhs.false, label %if.then30, !dbg !7537

lor.lhs.false:                                    ; preds = %for.body
  %16 = load %struct.property*, %struct.property** %pp, align 8, !dbg !7538
  %name23 = getelementptr inbounds %struct.property, %struct.property* %16, i32 0, i32 0, !dbg !7539
  %17 = load i8*, i8** %name23, align 8, !dbg !7539
  %call24 = call i32 @strcmp(i8* %17, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34, i64 0, i64 0)) #10, !dbg !7540
  %tobool25 = icmp ne i32 %call24, 0, !dbg !7540
  br i1 %tobool25, label %lor.lhs.false26, label %if.then30, !dbg !7541

lor.lhs.false26:                                  ; preds = %lor.lhs.false
  %18 = load %struct.property*, %struct.property** %pp, align 8, !dbg !7542
  %name27 = getelementptr inbounds %struct.property, %struct.property* %18, i32 0, i32 0, !dbg !7543
  %19 = load i8*, i8** %name27, align 8, !dbg !7543
  %call28 = call i32 @strcmp(i8* %19, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.35, i64 0, i64 0)) #10, !dbg !7544
  %tobool29 = icmp ne i32 %call28, 0, !dbg !7544
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !7545

if.then30:                                        ; preds = %lor.lhs.false26, %lor.lhs.false, %for.body
  br label %for.inc, !dbg !7546

if.end31:                                         ; preds = %lor.lhs.false26
  %20 = load %struct.property*, %struct.property** %pp, align 8, !dbg !7547
  %value = getelementptr inbounds %struct.property, %struct.property* %20, i32 0, i32 2, !dbg !7548
  %21 = load i8*, i8** %value, align 8, !dbg !7548
  %call32 = call %struct.device_node* @of_find_node_by_path(i8* %21) #10, !dbg !7549
  store %struct.device_node* %call32, %struct.device_node** %np, align 8, !dbg !7550
  %22 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !7551
  %tobool33 = icmp ne %struct.device_node* %22, null, !dbg !7551
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !7553

if.then34:                                        ; preds = %if.end31
  br label %for.inc, !dbg !7554

if.end35:                                         ; preds = %if.end31
  br label %while.cond, !dbg !7555

while.cond:                                       ; preds = %while.body, %if.end35
  %23 = load i8*, i8** %end, align 8, !dbg !7556
  %add.ptr36 = getelementptr i8, i8* %23, i64 -1, !dbg !7557
  %24 = load i8, i8* %add.ptr36, align 1, !dbg !7558
  %conv = sext i8 %24 to i32, !dbg !7558
  %call37 = call i32 @isdigit(i32 %conv) #10, !dbg !7559
  %tobool38 = icmp ne i32 %call37, 0, !dbg !7559
  br i1 %tobool38, label %land.rhs, label %land.end, !dbg !7560

land.rhs:                                         ; preds = %while.cond
  %25 = load i8*, i8** %end, align 8, !dbg !7561
  %26 = load i8*, i8** %start, align 8, !dbg !7562
  %cmp39 = icmp ugt i8* %25, %26, !dbg !7563
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %27 = phi i1 [ false, %while.cond ], [ %cmp39, %land.rhs ], !dbg !7564
  br i1 %27, label %while.body, label %while.end, !dbg !7555

while.body:                                       ; preds = %land.end
  %28 = load i8*, i8** %end, align 8, !dbg !7565
  %incdec.ptr = getelementptr i8, i8* %28, i32 -1, !dbg !7565
  store i8* %incdec.ptr, i8** %end, align 8, !dbg !7565
  br label %while.cond, !dbg !7555, !llvm.loop !7566

while.end:                                        ; preds = %land.end
  %29 = load i8*, i8** %end, align 8, !dbg !7567
  %30 = load i8*, i8** %start, align 8, !dbg !7568
  %sub.ptr.lhs.cast = ptrtoint i8* %29 to i64, !dbg !7569
  %sub.ptr.rhs.cast = ptrtoint i8* %30 to i64, !dbg !7569
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7569
  %conv41 = trunc i64 %sub.ptr.sub to i32, !dbg !7567
  store i32 %conv41, i32* %len, align 4, !dbg !7570
  %31 = load i8*, i8** %end, align 8, !dbg !7571
  %call42 = call i32 @kstrtoint(i8* %31, i32 10, i32* %id) #10, !dbg !7573
  %cmp43 = icmp slt i32 %call42, 0, !dbg !7574
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !7575

if.then45:                                        ; preds = %while.end
  br label %for.inc, !dbg !7576

if.end46:                                         ; preds = %while.end
  %32 = load i8* (i64, i64)*, i8* (i64, i64)** %dt_alloc.addr, align 8, !dbg !7577
  %33 = load i32, i32* %len, align 4, !dbg !7578
  %conv47 = sext i32 %33 to i64, !dbg !7578
  %add = add i64 40, %conv47, !dbg !7579
  %add48 = add i64 %add, 1, !dbg !7580
  %call49 = call i8* %32(i64 %add48, i64 8) #10, !dbg !7577
  %34 = bitcast i8* %call49 to %struct.alias_prop*, !dbg !7577
  store %struct.alias_prop* %34, %struct.alias_prop** %ap, align 8, !dbg !7581
  %35 = load %struct.alias_prop*, %struct.alias_prop** %ap, align 8, !dbg !7582
  %tobool50 = icmp ne %struct.alias_prop* %35, null, !dbg !7582
  br i1 %tobool50, label %if.end52, label %if.then51, !dbg !7584

if.then51:                                        ; preds = %if.end46
  br label %for.inc, !dbg !7585

if.end52:                                         ; preds = %if.end46
  %36 = load %struct.alias_prop*, %struct.alias_prop** %ap, align 8, !dbg !7586
  %37 = bitcast %struct.alias_prop* %36 to i8*, !dbg !7587
  %38 = load i32, i32* %len, align 4, !dbg !7588
  %conv53 = sext i32 %38 to i64, !dbg !7588
  %add54 = add i64 40, %conv53, !dbg !7589
  %add55 = add i64 %add54, 1, !dbg !7590
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 %add55, i1 false), !dbg !7587
  %39 = load i8*, i8** %start, align 8, !dbg !7591
  %40 = load %struct.alias_prop*, %struct.alias_prop** %ap, align 8, !dbg !7592
  %alias = getelementptr inbounds %struct.alias_prop, %struct.alias_prop* %40, i32 0, i32 1, !dbg !7593
  store i8* %39, i8** %alias, align 8, !dbg !7594
  %41 = load %struct.alias_prop*, %struct.alias_prop** %ap, align 8, !dbg !7595
  %42 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !7596
  %43 = load i32, i32* %id, align 4, !dbg !7597
  %44 = load i8*, i8** %start, align 8, !dbg !7598
  %45 = load i32, i32* %len, align 4, !dbg !7599
  call void @of_alias_add(%struct.alias_prop* %41, %struct.device_node* %42, i32 %43, i8* %44, i32 %45) #10, !dbg !7600
  br label %for.inc, !dbg !7601

for.inc:                                          ; preds = %if.end52, %if.then51, %if.then45, %if.then34, %if.then30
  %46 = load %struct.property*, %struct.property** %pp, align 8, !dbg !7512
  %next = getelementptr inbounds %struct.property, %struct.property* %46, i32 0, i32 3, !dbg !7512
  %47 = load %struct.property*, %struct.property** %next, align 8, !dbg !7512
  store %struct.property* %47, %struct.property** %pp, align 8, !dbg !7512
  br label %for.cond, !dbg !7512, !llvm.loop !7602

for.end:                                          ; preds = %if.then15, %for.cond
  ret void, !dbg !7604
}

; Function Attrs: noredzone
declare dso_local i32 @of_property_read_string(%struct.device_node*, i8*, i8**) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @isdigit(i32 %c) #0 !dbg !7605 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !7607, metadata !DIExpression()), !dbg !7608
  %0 = load i32, i32* %c.addr, align 4, !dbg !7609
  %cmp = icmp sle i32 48, %0, !dbg !7610
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7611

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !7612
  %cmp1 = icmp sle i32 %1, 57, !dbg !7613
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !7614
  %land.ext = zext i1 %2 to i32, !dbg !7611
  ret i32 %land.ext, !dbg !7615
}

; Function Attrs: noredzone
declare dso_local i32 @kstrtoint(i8*, i32, i32*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @of_alias_add(%struct.alias_prop* %ap, %struct.device_node* %np, i32 %id, i8* %stem, i32 %stem_len) #0 !dbg !7616 {
entry:
  %ap.addr = alloca %struct.alias_prop*, align 8
  %np.addr = alloca %struct.device_node*, align 8
  %id.addr = alloca i32, align 4
  %stem.addr = alloca i8*, align 8
  %stem_len.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.alias_prop* %ap, %struct.alias_prop** %ap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.alias_prop** %ap.addr, metadata !7619, metadata !DIExpression()), !dbg !7620
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7621, metadata !DIExpression()), !dbg !7622
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !7623, metadata !DIExpression()), !dbg !7624
  store i8* %stem, i8** %stem.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stem.addr, metadata !7625, metadata !DIExpression()), !dbg !7626
  store i32 %stem_len, i32* %stem_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stem_len.addr, metadata !7627, metadata !DIExpression()), !dbg !7628
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7629
  %1 = load %struct.alias_prop*, %struct.alias_prop** %ap.addr, align 8, !dbg !7630
  %np1 = getelementptr inbounds %struct.alias_prop, %struct.alias_prop* %1, i32 0, i32 2, !dbg !7631
  store %struct.device_node* %0, %struct.device_node** %np1, align 8, !dbg !7632
  %2 = load i32, i32* %id.addr, align 4, !dbg !7633
  %3 = load %struct.alias_prop*, %struct.alias_prop** %ap.addr, align 8, !dbg !7634
  %id2 = getelementptr inbounds %struct.alias_prop, %struct.alias_prop* %3, i32 0, i32 3, !dbg !7635
  store i32 %2, i32* %id2, align 8, !dbg !7636
  %4 = load %struct.alias_prop*, %struct.alias_prop** %ap.addr, align 8, !dbg !7637
  %stem3 = getelementptr inbounds %struct.alias_prop, %struct.alias_prop* %4, i32 0, i32 4, !dbg !7638
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %stem3, i64 0, i64 0, !dbg !7637
  %5 = load i8*, i8** %stem.addr, align 8, !dbg !7639
  %6 = load i32, i32* %stem_len.addr, align 4, !dbg !7640
  %conv = sext i32 %6 to i64, !dbg !7640
  %call = call i8* @strncpy(i8* %arraydecay, i8* %5, i64 %conv) #10, !dbg !7641
  %7 = load %struct.alias_prop*, %struct.alias_prop** %ap.addr, align 8, !dbg !7642
  %stem4 = getelementptr inbounds %struct.alias_prop, %struct.alias_prop* %7, i32 0, i32 4, !dbg !7643
  %8 = load i32, i32* %stem_len.addr, align 4, !dbg !7644
  %idxprom = sext i32 %8 to i64, !dbg !7642
  %arrayidx = getelementptr [0 x i8], [0 x i8]* %stem4, i64 0, i64 %idxprom, !dbg !7642
  store i8 0, i8* %arrayidx, align 1, !dbg !7645
  %9 = load %struct.alias_prop*, %struct.alias_prop** %ap.addr, align 8, !dbg !7646
  %link = getelementptr inbounds %struct.alias_prop, %struct.alias_prop* %9, i32 0, i32 0, !dbg !7647
  call void @list_add_tail(%struct.list_head* %link, %struct.list_head* @aliases_lookup) #10, !dbg !7648
  store i32 0, i32* %tmp, align 4, !dbg !7649
  %10 = load i32, i32* %tmp, align 4, !dbg !7652
  ret void, !dbg !7653
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_alias_get_id(%struct.device_node* %np, i8* %stem) #0 !dbg !7654 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %stem.addr = alloca i8*, align 8
  %app = alloca %struct.alias_prop*, align 8
  %id = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.alias_prop*, align 8
  %__mptr8 = alloca i8*, align 8
  %tmp12 = alloca %struct.alias_prop*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7657, metadata !DIExpression()), !dbg !7658
  store i8* %stem, i8** %stem.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stem.addr, metadata !7659, metadata !DIExpression()), !dbg !7660
  call void @llvm.dbg.declare(metadata %struct.alias_prop** %app, metadata !7661, metadata !DIExpression()), !dbg !7662
  call void @llvm.dbg.declare(metadata i32* %id, metadata !7663, metadata !DIExpression()), !dbg !7664
  store i32 -19, i32* %id, align 4, !dbg !7664
  call void @mutex_lock(%struct.mutex* @of_mutex) #10, !dbg !7665
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7666, metadata !DIExpression()), !dbg !7669
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @aliases_lookup, i32 0, i32 0), align 8, !dbg !7669
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !7669
  store i8* %1, i8** %__mptr, align 8, !dbg !7669
  br label %do.body, !dbg !7669

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7670

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7669
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !7669
  %3 = bitcast i8* %add.ptr to %struct.alias_prop*, !dbg !7669
  store %struct.alias_prop* %3, %struct.alias_prop** %tmp, align 8, !dbg !7670
  %4 = load %struct.alias_prop*, %struct.alias_prop** %tmp, align 8, !dbg !7669
  store %struct.alias_prop* %4, %struct.alias_prop** %app, align 8, !dbg !7672
  br label %for.cond, !dbg !7672

for.cond:                                         ; preds = %do.end11, %do.end
  %5 = load %struct.alias_prop*, %struct.alias_prop** %app, align 8, !dbg !7673
  %link = getelementptr inbounds %struct.alias_prop, %struct.alias_prop* %5, i32 0, i32 0, !dbg !7673
  %cmp = icmp eq %struct.list_head* %link, @aliases_lookup, !dbg !7673
  %lnot = xor i1 %cmp, true, !dbg !7673
  br i1 %lnot, label %for.body, label %for.end, !dbg !7672

for.body:                                         ; preds = %for.cond
  %6 = load %struct.alias_prop*, %struct.alias_prop** %app, align 8, !dbg !7675
  %stem1 = getelementptr inbounds %struct.alias_prop, %struct.alias_prop* %6, i32 0, i32 4, !dbg !7678
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %stem1, i64 0, i64 0, !dbg !7675
  %7 = load i8*, i8** %stem.addr, align 8, !dbg !7679
  %call = call i32 @strcmp(i8* %arraydecay, i8* %7) #10, !dbg !7680
  %cmp2 = icmp ne i32 %call, 0, !dbg !7681
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7682

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !7683

if.end:                                           ; preds = %for.body
  %8 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7684
  %9 = load %struct.alias_prop*, %struct.alias_prop** %app, align 8, !dbg !7686
  %np3 = getelementptr inbounds %struct.alias_prop, %struct.alias_prop* %9, i32 0, i32 2, !dbg !7687
  %10 = load %struct.device_node*, %struct.device_node** %np3, align 8, !dbg !7687
  %cmp4 = icmp eq %struct.device_node* %8, %10, !dbg !7688
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !7689

if.then5:                                         ; preds = %if.end
  %11 = load %struct.alias_prop*, %struct.alias_prop** %app, align 8, !dbg !7690
  %id6 = getelementptr inbounds %struct.alias_prop, %struct.alias_prop* %11, i32 0, i32 3, !dbg !7692
  %12 = load i32, i32* %id6, align 8, !dbg !7692
  store i32 %12, i32* %id, align 4, !dbg !7693
  br label %for.end, !dbg !7694

if.end7:                                          ; preds = %if.end
  br label %for.inc, !dbg !7695

for.inc:                                          ; preds = %if.end7, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr8, metadata !7696, metadata !DIExpression()), !dbg !7698
  %13 = load %struct.alias_prop*, %struct.alias_prop** %app, align 8, !dbg !7698
  %link9 = getelementptr inbounds %struct.alias_prop, %struct.alias_prop* %13, i32 0, i32 0, !dbg !7698
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %link9, i32 0, i32 0, !dbg !7698
  %14 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7698
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !7698
  store i8* %15, i8** %__mptr8, align 8, !dbg !7698
  br label %do.body10, !dbg !7698

do.body10:                                        ; preds = %for.inc
  br label %do.end11, !dbg !7699

do.end11:                                         ; preds = %do.body10
  %16 = load i8*, i8** %__mptr8, align 8, !dbg !7698
  %add.ptr13 = getelementptr i8, i8* %16, i64 0, !dbg !7698
  %17 = bitcast i8* %add.ptr13 to %struct.alias_prop*, !dbg !7698
  store %struct.alias_prop* %17, %struct.alias_prop** %tmp12, align 8, !dbg !7699
  %18 = load %struct.alias_prop*, %struct.alias_prop** %tmp12, align 8, !dbg !7698
  store %struct.alias_prop* %18, %struct.alias_prop** %app, align 8, !dbg !7673
  br label %for.cond, !dbg !7673, !llvm.loop !7701

for.end:                                          ; preds = %if.then5, %for.cond
  call void @mutex_unlock(%struct.mutex* @of_mutex) #10, !dbg !7703
  %19 = load i32, i32* %id, align 4, !dbg !7704
  ret i32 %19, !dbg !7705
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_alias_get_alias_list(%struct.of_device_id* %matches, i8* %stem, i64* %bitmap, i32 %nbits) #0 !dbg !7706 {
entry:
  %matches.addr = alloca %struct.of_device_id*, align 8
  %stem.addr = alloca i8*, align 8
  %bitmap.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  %app = alloca %struct.alias_prop*, align 8
  %ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.alias_prop*, align 8
  %tmp2 = alloca i32, align 4
  %tmp5 = alloca i32, align 4
  %tmp8 = alloca i32, align 4
  %__mptr16 = alloca i8*, align 8
  %tmp20 = alloca %struct.alias_prop*, align 8
  store %struct.of_device_id* %matches, %struct.of_device_id** %matches.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.of_device_id** %matches.addr, metadata !7709, metadata !DIExpression()), !dbg !7710
  store i8* %stem, i8** %stem.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stem.addr, metadata !7711, metadata !DIExpression()), !dbg !7712
  store i64* %bitmap, i64** %bitmap.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %bitmap.addr, metadata !7713, metadata !DIExpression()), !dbg !7714
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !7715, metadata !DIExpression()), !dbg !7716
  call void @llvm.dbg.declare(metadata %struct.alias_prop** %app, metadata !7717, metadata !DIExpression()), !dbg !7718
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7719, metadata !DIExpression()), !dbg !7720
  store i32 0, i32* %ret, align 4, !dbg !7720
  %0 = load i64*, i64** %bitmap.addr, align 8, !dbg !7721
  %1 = load i32, i32* %nbits.addr, align 4, !dbg !7722
  call void @bitmap_zero(i64* %0, i32 %1) #10, !dbg !7723
  call void @mutex_lock(%struct.mutex* @of_mutex) #10, !dbg !7724
  store i32 0, i32* %tmp, align 4, !dbg !7725
  %2 = load i32, i32* %tmp, align 4, !dbg !7728
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7729, metadata !DIExpression()), !dbg !7732
  %3 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @aliases_lookup, i32 0, i32 0), align 8, !dbg !7732
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !7732
  store i8* %4, i8** %__mptr, align 8, !dbg !7732
  br label %do.body, !dbg !7732

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7733

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !7732
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !7732
  %6 = bitcast i8* %add.ptr to %struct.alias_prop*, !dbg !7732
  store %struct.alias_prop* %6, %struct.alias_prop** %tmp1, align 8, !dbg !7733
  %7 = load %struct.alias_prop*, %struct.alias_prop** %tmp1, align 8, !dbg !7732
  store %struct.alias_prop* %7, %struct.alias_prop** %app, align 8, !dbg !7735
  br label %for.cond, !dbg !7735

for.cond:                                         ; preds = %do.end19, %do.end
  %8 = load %struct.alias_prop*, %struct.alias_prop** %app, align 8, !dbg !7736
  %link = getelementptr inbounds %struct.alias_prop, %struct.alias_prop* %8, i32 0, i32 0, !dbg !7736
  %cmp = icmp eq %struct.list_head* %link, @aliases_lookup, !dbg !7736
  %lnot = xor i1 %cmp, true, !dbg !7736
  br i1 %lnot, label %for.body, label %for.end, !dbg !7735

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %tmp2, align 4, !dbg !7738
  %9 = load i32, i32* %tmp2, align 4, !dbg !7742
  %10 = load %struct.alias_prop*, %struct.alias_prop** %app, align 8, !dbg !7743
  %stem3 = getelementptr inbounds %struct.alias_prop, %struct.alias_prop* %10, i32 0, i32 4, !dbg !7745
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %stem3, i64 0, i64 0, !dbg !7743
  %11 = load i8*, i8** %stem.addr, align 8, !dbg !7746
  %call = call i32 @strcmp(i8* %arraydecay, i8* %11) #10, !dbg !7747
  %cmp4 = icmp ne i32 %call, 0, !dbg !7748
  br i1 %cmp4, label %if.then, label %if.end, !dbg !7749

if.then:                                          ; preds = %for.body
  store i32 0, i32* %tmp5, align 4, !dbg !7750
  %12 = load i32, i32* %tmp5, align 4, !dbg !7754
  br label %for.inc, !dbg !7755

if.end:                                           ; preds = %for.body
  %13 = load %struct.of_device_id*, %struct.of_device_id** %matches.addr, align 8, !dbg !7756
  %14 = load %struct.alias_prop*, %struct.alias_prop** %app, align 8, !dbg !7758
  %np = getelementptr inbounds %struct.alias_prop, %struct.alias_prop* %14, i32 0, i32 2, !dbg !7759
  %15 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !7759
  %call6 = call %struct.of_device_id* @of_match_node(%struct.of_device_id* %13, %struct.device_node* %15) #10, !dbg !7760
  %tobool = icmp ne %struct.of_device_id* %call6, null, !dbg !7760
  br i1 %tobool, label %if.then7, label %if.end15, !dbg !7761

if.then7:                                         ; preds = %if.end
  store i32 0, i32* %tmp8, align 4, !dbg !7762
  %16 = load i32, i32* %tmp8, align 4, !dbg !7766
  %17 = load %struct.alias_prop*, %struct.alias_prop** %app, align 8, !dbg !7767
  %id = getelementptr inbounds %struct.alias_prop, %struct.alias_prop* %17, i32 0, i32 3, !dbg !7769
  %18 = load i32, i32* %id, align 8, !dbg !7769
  %19 = load i32, i32* %nbits.addr, align 4, !dbg !7770
  %cmp9 = icmp uge i32 %18, %19, !dbg !7771
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !7772

if.then10:                                        ; preds = %if.then7
  %20 = load %struct.alias_prop*, %struct.alias_prop** %app, align 8, !dbg !7773
  %id11 = getelementptr inbounds %struct.alias_prop, %struct.alias_prop* %20, i32 0, i32 3, !dbg !7773
  %21 = load i32, i32* %id11, align 8, !dbg !7773
  %22 = load i32, i32* %nbits.addr, align 4, !dbg !7773
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.of_alias_get_alias_list, i64 0, i64 0), i32 %21, i32 %22) #11, !dbg !7773
  store i32 -75, i32* %ret, align 4, !dbg !7775
  br label %if.end14, !dbg !7776

if.else:                                          ; preds = %if.then7
  %23 = load %struct.alias_prop*, %struct.alias_prop** %app, align 8, !dbg !7777
  %id13 = getelementptr inbounds %struct.alias_prop, %struct.alias_prop* %23, i32 0, i32 3, !dbg !7779
  %24 = load i32, i32* %id13, align 8, !dbg !7779
  %conv = sext i32 %24 to i64, !dbg !7777
  %25 = load i64*, i64** %bitmap.addr, align 8, !dbg !7780
  call void @set_bit(i64 %conv, i64* %25) #10, !dbg !7781
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then10
  br label %if.end15, !dbg !7782

if.end15:                                         ; preds = %if.end14, %if.end
  br label %for.inc, !dbg !7783

for.inc:                                          ; preds = %if.end15, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr16, metadata !7784, metadata !DIExpression()), !dbg !7786
  %26 = load %struct.alias_prop*, %struct.alias_prop** %app, align 8, !dbg !7786
  %link17 = getelementptr inbounds %struct.alias_prop, %struct.alias_prop* %26, i32 0, i32 0, !dbg !7786
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %link17, i32 0, i32 0, !dbg !7786
  %27 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7786
  %28 = bitcast %struct.list_head* %27 to i8*, !dbg !7786
  store i8* %28, i8** %__mptr16, align 8, !dbg !7786
  br label %do.body18, !dbg !7786

do.body18:                                        ; preds = %for.inc
  br label %do.end19, !dbg !7787

do.end19:                                         ; preds = %do.body18
  %29 = load i8*, i8** %__mptr16, align 8, !dbg !7786
  %add.ptr21 = getelementptr i8, i8* %29, i64 0, !dbg !7786
  %30 = bitcast i8* %add.ptr21 to %struct.alias_prop*, !dbg !7786
  store %struct.alias_prop* %30, %struct.alias_prop** %tmp20, align 8, !dbg !7787
  %31 = load %struct.alias_prop*, %struct.alias_prop** %tmp20, align 8, !dbg !7786
  store %struct.alias_prop* %31, %struct.alias_prop** %app, align 8, !dbg !7736
  br label %for.cond, !dbg !7736, !llvm.loop !7789

for.end:                                          ; preds = %for.cond
  call void @mutex_unlock(%struct.mutex* @of_mutex) #10, !dbg !7791
  %32 = load i32, i32* %ret, align 4, !dbg !7792
  ret i32 %32, !dbg !7793
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bitmap_zero(i64* %dst, i32 %nbits) #0 !dbg !7794 {
entry:
  %dst.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  %len = alloca i32, align 4
  store i64* %dst, i64** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.addr, metadata !7798, metadata !DIExpression()), !dbg !7799
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !7800, metadata !DIExpression()), !dbg !7801
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7802, metadata !DIExpression()), !dbg !7803
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !7804
  %conv = zext i32 %0 to i64, !dbg !7804
  %add = add i64 %conv, 64, !dbg !7804
  %sub = sub i64 %add, 1, !dbg !7804
  %div = udiv i64 %sub, 64, !dbg !7804
  %mul = mul i64 %div, 8, !dbg !7805
  %conv1 = trunc i64 %mul to i32, !dbg !7804
  store i32 %conv1, i32* %len, align 4, !dbg !7803
  %1 = load i64*, i64** %dst.addr, align 8, !dbg !7806
  %2 = bitcast i64* %1 to i8*, !dbg !7807
  %3 = load i32, i32* %len, align 4, !dbg !7808
  %conv2 = zext i32 %3 to i64, !dbg !7808
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 %conv2, i1 false), !dbg !7807
  ret void, !dbg !7809
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !7810 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7816, metadata !DIExpression()), !dbg !7819
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7821, metadata !DIExpression()), !dbg !7822
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7823, metadata !DIExpression()), !dbg !7831
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7833, metadata !DIExpression()), !dbg !7834
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7835, metadata !DIExpression()), !dbg !7836
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7837, metadata !DIExpression()), !dbg !7838
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7839
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7840
  %div = sdiv i64 %1, 64, !dbg !7840
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7841
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7839
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7842
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7843
  %conv.i = trunc i64 %4 to i32, !dbg !7843
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !7844
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7845
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7845
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #13, !dbg !7845
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7846
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7847
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !7848
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #9, !dbg !7850
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !7851

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !7852
  %12 = bitcast i64* %11 to i8*, !dbg !7852
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !7852
  %shr.i = ashr i64 %13, 3, !dbg !7852
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !7852
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !7854
  %and.i = and i64 %14, 7, !dbg !7854
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !7854
  %shl.i = shl i32 1, %sh_prom.i, !dbg !7854
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #9, !dbg !7855, !srcloc !7856
  br label %arch_set_bit.exit, !dbg !7857

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !7858
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !7860
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #9, !dbg !7861, !srcloc !7862
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !7863
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_alias_get_highest_id(i8* %stem) #0 !dbg !7864 {
entry:
  %stem.addr = alloca i8*, align 8
  %app = alloca %struct.alias_prop*, align 8
  %id = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.alias_prop*, align 8
  %__mptr8 = alloca i8*, align 8
  %tmp12 = alloca %struct.alias_prop*, align 8
  store i8* %stem, i8** %stem.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stem.addr, metadata !7865, metadata !DIExpression()), !dbg !7866
  call void @llvm.dbg.declare(metadata %struct.alias_prop** %app, metadata !7867, metadata !DIExpression()), !dbg !7868
  call void @llvm.dbg.declare(metadata i32* %id, metadata !7869, metadata !DIExpression()), !dbg !7870
  store i32 -19, i32* %id, align 4, !dbg !7870
  call void @mutex_lock(%struct.mutex* @of_mutex) #10, !dbg !7871
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7872, metadata !DIExpression()), !dbg !7875
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @aliases_lookup, i32 0, i32 0), align 8, !dbg !7875
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !7875
  store i8* %1, i8** %__mptr, align 8, !dbg !7875
  br label %do.body, !dbg !7875

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7876

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7875
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !7875
  %3 = bitcast i8* %add.ptr to %struct.alias_prop*, !dbg !7875
  store %struct.alias_prop* %3, %struct.alias_prop** %tmp, align 8, !dbg !7876
  %4 = load %struct.alias_prop*, %struct.alias_prop** %tmp, align 8, !dbg !7875
  store %struct.alias_prop* %4, %struct.alias_prop** %app, align 8, !dbg !7878
  br label %for.cond, !dbg !7878

for.cond:                                         ; preds = %do.end11, %do.end
  %5 = load %struct.alias_prop*, %struct.alias_prop** %app, align 8, !dbg !7879
  %link = getelementptr inbounds %struct.alias_prop, %struct.alias_prop* %5, i32 0, i32 0, !dbg !7879
  %cmp = icmp eq %struct.list_head* %link, @aliases_lookup, !dbg !7879
  %lnot = xor i1 %cmp, true, !dbg !7879
  br i1 %lnot, label %for.body, label %for.end, !dbg !7878

for.body:                                         ; preds = %for.cond
  %6 = load %struct.alias_prop*, %struct.alias_prop** %app, align 8, !dbg !7881
  %stem1 = getelementptr inbounds %struct.alias_prop, %struct.alias_prop* %6, i32 0, i32 4, !dbg !7884
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %stem1, i64 0, i64 0, !dbg !7881
  %7 = load i8*, i8** %stem.addr, align 8, !dbg !7885
  %call = call i32 @strcmp(i8* %arraydecay, i8* %7) #10, !dbg !7886
  %cmp2 = icmp ne i32 %call, 0, !dbg !7887
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7888

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !7889

if.end:                                           ; preds = %for.body
  %8 = load %struct.alias_prop*, %struct.alias_prop** %app, align 8, !dbg !7890
  %id3 = getelementptr inbounds %struct.alias_prop, %struct.alias_prop* %8, i32 0, i32 3, !dbg !7892
  %9 = load i32, i32* %id3, align 8, !dbg !7892
  %10 = load i32, i32* %id, align 4, !dbg !7893
  %cmp4 = icmp sgt i32 %9, %10, !dbg !7894
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !7895

if.then5:                                         ; preds = %if.end
  %11 = load %struct.alias_prop*, %struct.alias_prop** %app, align 8, !dbg !7896
  %id6 = getelementptr inbounds %struct.alias_prop, %struct.alias_prop* %11, i32 0, i32 3, !dbg !7897
  %12 = load i32, i32* %id6, align 8, !dbg !7897
  store i32 %12, i32* %id, align 4, !dbg !7898
  br label %if.end7, !dbg !7899

if.end7:                                          ; preds = %if.then5, %if.end
  br label %for.inc, !dbg !7900

for.inc:                                          ; preds = %if.end7, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr8, metadata !7901, metadata !DIExpression()), !dbg !7903
  %13 = load %struct.alias_prop*, %struct.alias_prop** %app, align 8, !dbg !7903
  %link9 = getelementptr inbounds %struct.alias_prop, %struct.alias_prop* %13, i32 0, i32 0, !dbg !7903
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %link9, i32 0, i32 0, !dbg !7903
  %14 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7903
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !7903
  store i8* %15, i8** %__mptr8, align 8, !dbg !7903
  br label %do.body10, !dbg !7903

do.body10:                                        ; preds = %for.inc
  br label %do.end11, !dbg !7904

do.end11:                                         ; preds = %do.body10
  %16 = load i8*, i8** %__mptr8, align 8, !dbg !7903
  %add.ptr13 = getelementptr i8, i8* %16, i64 0, !dbg !7903
  %17 = bitcast i8* %add.ptr13 to %struct.alias_prop*, !dbg !7903
  store %struct.alias_prop* %17, %struct.alias_prop** %tmp12, align 8, !dbg !7904
  %18 = load %struct.alias_prop*, %struct.alias_prop** %tmp12, align 8, !dbg !7903
  store %struct.alias_prop* %18, %struct.alias_prop** %app, align 8, !dbg !7879
  br label %for.cond, !dbg !7879, !llvm.loop !7906

for.end:                                          ; preds = %for.cond
  call void @mutex_unlock(%struct.mutex* @of_mutex) #10, !dbg !7908
  %19 = load i32, i32* %id, align 4, !dbg !7909
  ret i32 %19, !dbg !7910
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @of_console_check(%struct.device_node* %dn, i8* %name, i32 %index) #0 !dbg !7911 {
entry:
  %retval = alloca i1, align 1
  %dn.addr = alloca %struct.device_node*, align 8
  %name.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  store %struct.device_node* %dn, %struct.device_node** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %dn.addr, metadata !7914, metadata !DIExpression()), !dbg !7915
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7916, metadata !DIExpression()), !dbg !7917
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7918, metadata !DIExpression()), !dbg !7919
  %0 = load %struct.device_node*, %struct.device_node** %dn.addr, align 8, !dbg !7920
  %tobool = icmp ne %struct.device_node* %0, null, !dbg !7920
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7922

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.device_node*, %struct.device_node** %dn.addr, align 8, !dbg !7923
  %2 = load %struct.device_node*, %struct.device_node** @of_stdout, align 8, !dbg !7924
  %cmp = icmp ne %struct.device_node* %1, %2, !dbg !7925
  br i1 %cmp, label %if.then, label %lor.lhs.false1, !dbg !7926

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %3 = load i32, i32* @console_set_on_cmdline, align 4, !dbg !7927
  %tobool2 = icmp ne i32 %3, 0, !dbg !7927
  br i1 %tobool2, label %if.then, label %if.end, !dbg !7928

if.then:                                          ; preds = %lor.lhs.false1, %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !7929
  br label %return, !dbg !7929

if.end:                                           ; preds = %lor.lhs.false1
  %4 = load i8*, i8** %name.addr, align 8, !dbg !7930
  %5 = load i32, i32* %index.addr, align 4, !dbg !7931
  %6 = load i8*, i8** @of_stdout_options, align 8, !dbg !7932
  %call = call i32 @add_preferred_console(i8* %4, i32 %5, i8* %6) #10, !dbg !7933
  %tobool3 = icmp ne i32 %call, 0, !dbg !7934
  %lnot = xor i1 %tobool3, true, !dbg !7934
  store i1 %lnot, i1* %retval, align 1, !dbg !7935
  br label %return, !dbg !7935

return:                                           ; preds = %if.end, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !7936
  ret i1 %7, !dbg !7936
}

; Function Attrs: noredzone
declare dso_local i32 @add_preferred_console(i8*, i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.device_node* @of_find_next_cache_node(%struct.device_node* %np) #0 !dbg !7937 {
entry:
  %retval = alloca %struct.device_node*, align 8
  %np.addr = alloca %struct.device_node*, align 8
  %child = alloca %struct.device_node*, align 8
  %cache_node = alloca %struct.device_node*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !7938, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.declare(metadata %struct.device_node** %child, metadata !7940, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.declare(metadata %struct.device_node** %cache_node, metadata !7942, metadata !DIExpression()), !dbg !7943
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7944
  %call = call %struct.device_node* @of_parse_phandle(%struct.device_node* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i64 0, i64 0), i32 0) #10, !dbg !7945
  store %struct.device_node* %call, %struct.device_node** %cache_node, align 8, !dbg !7946
  %1 = load %struct.device_node*, %struct.device_node** %cache_node, align 8, !dbg !7947
  %tobool = icmp ne %struct.device_node* %1, null, !dbg !7947
  br i1 %tobool, label %if.end, label %if.then, !dbg !7949

if.then:                                          ; preds = %entry
  %2 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !7950
  %call1 = call %struct.device_node* @of_parse_phandle(%struct.device_node* %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i32 0) #10, !dbg !7951
  store %struct.device_node* %call1, %struct.device_node** %cache_node, align 8, !dbg !7952
  br label %if.end, !dbg !7953

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.device_node*, %struct.device_node** %cache_node, align 8, !dbg !7954
  %tobool2 = icmp ne %struct.device_node* %3, null, !dbg !7954
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !7956

if.then3:                                         ; preds = %if.end
  %4 = load %struct.device_node*, %struct.device_node** %cache_node, align 8, !dbg !7957
  store %struct.device_node* %4, %struct.device_node** %retval, align 8, !dbg !7958
  br label %return, !dbg !7958

if.end4:                                          ; preds = %if.end
  store %struct.device_node* null, %struct.device_node** %retval, align 8, !dbg !7959
  br label %return, !dbg !7959

return:                                           ; preds = %if.end4, %if.then3
  %5 = load %struct.device_node*, %struct.device_node** %retval, align 8, !dbg !7960
  ret %struct.device_node* %5, !dbg !7960
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_find_last_cache_level(i32 %cpu) #0 !dbg !7961 {
entry:
  %cpu.addr = alloca i32, align 4
  %cache_level = alloca i32, align 4
  %prev = alloca %struct.device_node*, align 8
  %np = alloca %struct.device_node*, align 8
  store i32 %cpu, i32* %cpu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cpu.addr, metadata !7964, metadata !DIExpression()), !dbg !7965
  call void @llvm.dbg.declare(metadata i32* %cache_level, metadata !7966, metadata !DIExpression()), !dbg !7967
  store i32 0, i32* %cache_level, align 4, !dbg !7967
  call void @llvm.dbg.declare(metadata %struct.device_node** %prev, metadata !7968, metadata !DIExpression()), !dbg !7969
  store %struct.device_node* null, %struct.device_node** %prev, align 8, !dbg !7969
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !7970, metadata !DIExpression()), !dbg !7971
  %0 = load i32, i32* %cpu.addr, align 4, !dbg !7972
  %call = call %struct.device_node* @of_cpu_device_node_get(i32 %0) #10, !dbg !7973
  store %struct.device_node* %call, %struct.device_node** %np, align 8, !dbg !7971
  br label %while.cond, !dbg !7974

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !7975
  %tobool = icmp ne %struct.device_node* %1, null, !dbg !7974
  br i1 %tobool, label %while.body, label %while.end, !dbg !7974

while.body:                                       ; preds = %while.cond
  %2 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !7976
  store %struct.device_node* %2, %struct.device_node** %prev, align 8, !dbg !7978
  %3 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !7979
  call void @of_node_put(%struct.device_node* %3) #10, !dbg !7980
  %4 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !7981
  %call1 = call %struct.device_node* @of_find_next_cache_node(%struct.device_node* %4) #10, !dbg !7982
  store %struct.device_node* %call1, %struct.device_node** %np, align 8, !dbg !7983
  br label %while.cond, !dbg !7974, !llvm.loop !7984

while.end:                                        ; preds = %while.cond
  %5 = load %struct.device_node*, %struct.device_node** %prev, align 8, !dbg !7986
  %call2 = call i32 @of_property_read_u32(%struct.device_node* %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0), i32* %cache_level) #10, !dbg !7987
  %6 = load i32, i32* %cache_level, align 4, !dbg !7988
  ret i32 %6, !dbg !7989
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @of_map_id(%struct.device_node* %np, i32 %id, i8* %map_name, i8* %map_mask_name, %struct.device_node** %target, i32* %id_out) #0 !dbg !7990 {
entry:
  %p.addr.i.i106 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i.i106, metadata !6338, metadata !DIExpression()), !dbg !7994
  %p.addr.i107 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i107, metadata !6352, metadata !DIExpression()), !dbg !8000
  %p.addr.i.i88 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i.i88, metadata !6338, metadata !DIExpression()), !dbg !8001
  %p.addr.i89 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i89, metadata !6352, metadata !DIExpression()), !dbg !8004
  %p.addr.i.i70 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i.i70, metadata !6338, metadata !DIExpression()), !dbg !8005
  %p.addr.i71 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i71, metadata !6352, metadata !DIExpression()), !dbg !8008
  %p.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i.i, metadata !6338, metadata !DIExpression()), !dbg !8009
  %p.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i, metadata !6352, metadata !DIExpression()), !dbg !8012
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %id.addr = alloca i32, align 4
  %map_name.addr = alloca i8*, align 8
  %map_mask_name.addr = alloca i8*, align 8
  %target.addr = alloca %struct.device_node**, align 8
  %id_out.addr = alloca i32*, align 8
  %map_mask = alloca i32, align 4
  %masked_id = alloca i32, align 4
  %map_len = alloca i32, align 4
  %map = alloca i32*, align 8
  %phandle_node = alloca %struct.device_node*, align 8
  %id_base = alloca i32, align 4
  %phandle = alloca i32, align 4
  %out_base = alloca i32, align 4
  %id_len = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !8013, metadata !DIExpression()), !dbg !8014
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !8015, metadata !DIExpression()), !dbg !8016
  store i8* %map_name, i8** %map_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map_name.addr, metadata !8017, metadata !DIExpression()), !dbg !8018
  store i8* %map_mask_name, i8** %map_mask_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map_mask_name.addr, metadata !8019, metadata !DIExpression()), !dbg !8020
  store %struct.device_node** %target, %struct.device_node*** %target.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node*** %target.addr, metadata !8021, metadata !DIExpression()), !dbg !8022
  store i32* %id_out, i32** %id_out.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %id_out.addr, metadata !8023, metadata !DIExpression()), !dbg !8024
  call void @llvm.dbg.declare(metadata i32* %map_mask, metadata !8025, metadata !DIExpression()), !dbg !8026
  call void @llvm.dbg.declare(metadata i32* %masked_id, metadata !8027, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.declare(metadata i32* %map_len, metadata !8029, metadata !DIExpression()), !dbg !8030
  call void @llvm.dbg.declare(metadata i32** %map, metadata !8031, metadata !DIExpression()), !dbg !8032
  store i32* null, i32** %map, align 8, !dbg !8032
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !8033
  %tobool = icmp ne %struct.device_node* %0, null, !dbg !8033
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8035

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %map_name.addr, align 8, !dbg !8036
  %tobool1 = icmp ne i8* %1, null, !dbg !8036
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !8037

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load %struct.device_node**, %struct.device_node*** %target.addr, align 8, !dbg !8038
  %tobool3 = icmp ne %struct.device_node** %2, null, !dbg !8038
  br i1 %tobool3, label %if.end, label %land.lhs.true, !dbg !8039

land.lhs.true:                                    ; preds = %lor.lhs.false2
  %3 = load i32*, i32** %id_out.addr, align 8, !dbg !8040
  %tobool4 = icmp ne i32* %3, null, !dbg !8040
  br i1 %tobool4, label %if.end, label %if.then, !dbg !8041

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !8042
  br label %return, !dbg !8042

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false2
  %4 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !8043
  %5 = load i8*, i8** %map_name.addr, align 8, !dbg !8044
  %call = call i8* @of_get_property(%struct.device_node* %4, i8* %5, i32* %map_len) #10, !dbg !8045
  %6 = bitcast i8* %call to i32*, !dbg !8045
  store i32* %6, i32** %map, align 8, !dbg !8046
  %7 = load i32*, i32** %map, align 8, !dbg !8047
  %tobool5 = icmp ne i32* %7, null, !dbg !8047
  br i1 %tobool5, label %if.end10, label %if.then6, !dbg !8049

if.then6:                                         ; preds = %if.end
  %8 = load %struct.device_node**, %struct.device_node*** %target.addr, align 8, !dbg !8050
  %tobool7 = icmp ne %struct.device_node** %8, null, !dbg !8050
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !8053

if.then8:                                         ; preds = %if.then6
  store i32 -19, i32* %retval, align 4, !dbg !8054
  br label %return, !dbg !8054

if.end9:                                          ; preds = %if.then6
  %9 = load i32, i32* %id.addr, align 4, !dbg !8055
  %10 = load i32*, i32** %id_out.addr, align 8, !dbg !8056
  store i32 %9, i32* %10, align 4, !dbg !8057
  store i32 0, i32* %retval, align 4, !dbg !8058
  br label %return, !dbg !8058

if.end10:                                         ; preds = %if.end
  %11 = load i32, i32* %map_len, align 4, !dbg !8059
  %tobool11 = icmp ne i32 %11, 0, !dbg !8059
  br i1 %tobool11, label %lor.lhs.false12, label %if.then14, !dbg !8061

lor.lhs.false12:                                  ; preds = %if.end10
  %12 = load i32, i32* %map_len, align 4, !dbg !8062
  %conv = sext i32 %12 to i64, !dbg !8062
  %rem = urem i64 %conv, 16, !dbg !8063
  %tobool13 = icmp ne i64 %rem, 0, !dbg !8063
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !8064

if.then14:                                        ; preds = %lor.lhs.false12, %if.end10
  %13 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !8065
  %14 = load i8*, i8** %map_name.addr, align 8, !dbg !8065
  %15 = load i32, i32* %map_len, align 4, !dbg !8065
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.40, i64 0, i64 0), %struct.device_node* %13, i8* %14, i32 %15) #11, !dbg !8065
  store i32 -22, i32* %retval, align 4, !dbg !8067
  br label %return, !dbg !8067

if.end16:                                         ; preds = %lor.lhs.false12
  store i32 -1, i32* %map_mask, align 4, !dbg !8068
  %16 = load i8*, i8** %map_mask_name.addr, align 8, !dbg !8069
  %tobool17 = icmp ne i8* %16, null, !dbg !8069
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !8071

if.then18:                                        ; preds = %if.end16
  %17 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !8072
  %18 = load i8*, i8** %map_mask_name.addr, align 8, !dbg !8073
  %call19 = call i32 @of_property_read_u32(%struct.device_node* %17, i8* %18, i32* %map_mask) #10, !dbg !8074
  br label %if.end20, !dbg !8074

if.end20:                                         ; preds = %if.then18, %if.end16
  %19 = load i32, i32* %map_mask, align 4, !dbg !8075
  %20 = load i32, i32* %id.addr, align 4, !dbg !8076
  %and = and i32 %19, %20, !dbg !8077
  store i32 %and, i32* %masked_id, align 4, !dbg !8078
  br label %for.cond, !dbg !8079

for.cond:                                         ; preds = %for.inc, %if.end20
  %21 = load i32, i32* %map_len, align 4, !dbg !8080
  %cmp = icmp sgt i32 %21, 0, !dbg !8081
  br i1 %cmp, label %for.body, label %for.end, !dbg !8082

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.device_node** %phandle_node, metadata !8083, metadata !DIExpression()), !dbg !8084
  call void @llvm.dbg.declare(metadata i32* %id_base, metadata !8085, metadata !DIExpression()), !dbg !8086
  %22 = load i32*, i32** %map, align 8, !dbg !8087
  %add.ptr = getelementptr i32, i32* %22, i64 0, !dbg !8088
  store i32* %add.ptr, i32** %p.addr.i, align 8
  %23 = load i32*, i32** %p.addr.i, align 8, !dbg !8089
  store i32* %23, i32** %p.addr.i.i, align 8
  %24 = load i32*, i32** %p.addr.i.i, align 8, !dbg !8090
  %25 = load i32, i32* %24, align 4, !dbg !8090
  %26 = call i1 @llvm.is.constant.i32(i32 %25) #9, !dbg !8090
  br i1 %26, label %cond.true.i.i, label %cond.false.i.i, !dbg !8090

cond.true.i.i:                                    ; preds = %for.body
  %27 = load i32*, i32** %p.addr.i.i, align 8, !dbg !8090
  %28 = load i32, i32* %27, align 4, !dbg !8090
  %and.i.i = and i32 %28, 255, !dbg !8090
  %shl.i.i = shl i32 %and.i.i, 24, !dbg !8090
  %29 = load i32*, i32** %p.addr.i.i, align 8, !dbg !8090
  %30 = load i32, i32* %29, align 4, !dbg !8090
  %and1.i.i = and i32 %30, 65280, !dbg !8090
  %shl2.i.i = shl i32 %and1.i.i, 8, !dbg !8090
  %or.i.i = or i32 %shl.i.i, %shl2.i.i, !dbg !8090
  %31 = load i32*, i32** %p.addr.i.i, align 8, !dbg !8090
  %32 = load i32, i32* %31, align 4, !dbg !8090
  %and3.i.i = and i32 %32, 16711680, !dbg !8090
  %shr.i.i = lshr i32 %and3.i.i, 8, !dbg !8090
  %or4.i.i = or i32 %or.i.i, %shr.i.i, !dbg !8090
  %33 = load i32*, i32** %p.addr.i.i, align 8, !dbg !8090
  %34 = load i32, i32* %33, align 4, !dbg !8090
  %and5.i.i = and i32 %34, -16777216, !dbg !8090
  %shr6.i.i = lshr i32 %and5.i.i, 24, !dbg !8090
  %or7.i.i = or i32 %or4.i.i, %shr6.i.i, !dbg !8090
  br label %__be32_to_cpup.exit, !dbg !8090

cond.false.i.i:                                   ; preds = %for.body
  %35 = load i32*, i32** %p.addr.i.i, align 8, !dbg !8090
  %36 = load i32, i32* %35, align 4, !dbg !8090
  %call.i.i = call i32 @__fswab32(i32 %36) #12, !dbg !8090
  br label %__be32_to_cpup.exit, !dbg !8090

__be32_to_cpup.exit:                              ; preds = %cond.true.i.i, %cond.false.i.i
  %cond.i.i = phi i32 [ %or7.i.i, %cond.true.i.i ], [ %call.i.i, %cond.false.i.i ], !dbg !8090
  store i32 %cond.i.i, i32* %id_base, align 4, !dbg !8086
  call void @llvm.dbg.declare(metadata i32* %phandle, metadata !8091, metadata !DIExpression()), !dbg !8092
  %37 = load i32*, i32** %map, align 8, !dbg !8093
  %add.ptr23 = getelementptr i32, i32* %37, i64 1, !dbg !8094
  store i32* %add.ptr23, i32** %p.addr.i71, align 8
  %38 = load i32*, i32** %p.addr.i71, align 8, !dbg !8095
  store i32* %38, i32** %p.addr.i.i70, align 8
  %39 = load i32*, i32** %p.addr.i.i70, align 8, !dbg !8096
  %40 = load i32, i32* %39, align 4, !dbg !8096
  %41 = call i1 @llvm.is.constant.i32(i32 %40) #9, !dbg !8096
  br i1 %41, label %cond.true.i.i83, label %cond.false.i.i85, !dbg !8096

cond.true.i.i83:                                  ; preds = %__be32_to_cpup.exit
  %42 = load i32*, i32** %p.addr.i.i70, align 8, !dbg !8096
  %43 = load i32, i32* %42, align 4, !dbg !8096
  %and.i.i72 = and i32 %43, 255, !dbg !8096
  %shl.i.i73 = shl i32 %and.i.i72, 24, !dbg !8096
  %44 = load i32*, i32** %p.addr.i.i70, align 8, !dbg !8096
  %45 = load i32, i32* %44, align 4, !dbg !8096
  %and1.i.i74 = and i32 %45, 65280, !dbg !8096
  %shl2.i.i75 = shl i32 %and1.i.i74, 8, !dbg !8096
  %or.i.i76 = or i32 %shl.i.i73, %shl2.i.i75, !dbg !8096
  %46 = load i32*, i32** %p.addr.i.i70, align 8, !dbg !8096
  %47 = load i32, i32* %46, align 4, !dbg !8096
  %and3.i.i77 = and i32 %47, 16711680, !dbg !8096
  %shr.i.i78 = lshr i32 %and3.i.i77, 8, !dbg !8096
  %or4.i.i79 = or i32 %or.i.i76, %shr.i.i78, !dbg !8096
  %48 = load i32*, i32** %p.addr.i.i70, align 8, !dbg !8096
  %49 = load i32, i32* %48, align 4, !dbg !8096
  %and5.i.i80 = and i32 %49, -16777216, !dbg !8096
  %shr6.i.i81 = lshr i32 %and5.i.i80, 24, !dbg !8096
  %or7.i.i82 = or i32 %or4.i.i79, %shr6.i.i81, !dbg !8096
  br label %__be32_to_cpup.exit87, !dbg !8096

cond.false.i.i85:                                 ; preds = %__be32_to_cpup.exit
  %50 = load i32*, i32** %p.addr.i.i70, align 8, !dbg !8096
  %51 = load i32, i32* %50, align 4, !dbg !8096
  %call.i.i84 = call i32 @__fswab32(i32 %51) #12, !dbg !8096
  br label %__be32_to_cpup.exit87, !dbg !8096

__be32_to_cpup.exit87:                            ; preds = %cond.true.i.i83, %cond.false.i.i85
  %cond.i.i86 = phi i32 [ %or7.i.i82, %cond.true.i.i83 ], [ %call.i.i84, %cond.false.i.i85 ], !dbg !8096
  store i32 %cond.i.i86, i32* %phandle, align 4, !dbg !8092
  call void @llvm.dbg.declare(metadata i32* %out_base, metadata !8097, metadata !DIExpression()), !dbg !8098
  %52 = load i32*, i32** %map, align 8, !dbg !8099
  %add.ptr25 = getelementptr i32, i32* %52, i64 2, !dbg !8100
  store i32* %add.ptr25, i32** %p.addr.i89, align 8
  %53 = load i32*, i32** %p.addr.i89, align 8, !dbg !8101
  store i32* %53, i32** %p.addr.i.i88, align 8
  %54 = load i32*, i32** %p.addr.i.i88, align 8, !dbg !8102
  %55 = load i32, i32* %54, align 4, !dbg !8102
  %56 = call i1 @llvm.is.constant.i32(i32 %55) #9, !dbg !8102
  br i1 %56, label %cond.true.i.i101, label %cond.false.i.i103, !dbg !8102

cond.true.i.i101:                                 ; preds = %__be32_to_cpup.exit87
  %57 = load i32*, i32** %p.addr.i.i88, align 8, !dbg !8102
  %58 = load i32, i32* %57, align 4, !dbg !8102
  %and.i.i90 = and i32 %58, 255, !dbg !8102
  %shl.i.i91 = shl i32 %and.i.i90, 24, !dbg !8102
  %59 = load i32*, i32** %p.addr.i.i88, align 8, !dbg !8102
  %60 = load i32, i32* %59, align 4, !dbg !8102
  %and1.i.i92 = and i32 %60, 65280, !dbg !8102
  %shl2.i.i93 = shl i32 %and1.i.i92, 8, !dbg !8102
  %or.i.i94 = or i32 %shl.i.i91, %shl2.i.i93, !dbg !8102
  %61 = load i32*, i32** %p.addr.i.i88, align 8, !dbg !8102
  %62 = load i32, i32* %61, align 4, !dbg !8102
  %and3.i.i95 = and i32 %62, 16711680, !dbg !8102
  %shr.i.i96 = lshr i32 %and3.i.i95, 8, !dbg !8102
  %or4.i.i97 = or i32 %or.i.i94, %shr.i.i96, !dbg !8102
  %63 = load i32*, i32** %p.addr.i.i88, align 8, !dbg !8102
  %64 = load i32, i32* %63, align 4, !dbg !8102
  %and5.i.i98 = and i32 %64, -16777216, !dbg !8102
  %shr6.i.i99 = lshr i32 %and5.i.i98, 24, !dbg !8102
  %or7.i.i100 = or i32 %or4.i.i97, %shr6.i.i99, !dbg !8102
  br label %__be32_to_cpup.exit105, !dbg !8102

cond.false.i.i103:                                ; preds = %__be32_to_cpup.exit87
  %65 = load i32*, i32** %p.addr.i.i88, align 8, !dbg !8102
  %66 = load i32, i32* %65, align 4, !dbg !8102
  %call.i.i102 = call i32 @__fswab32(i32 %66) #12, !dbg !8102
  br label %__be32_to_cpup.exit105, !dbg !8102

__be32_to_cpup.exit105:                           ; preds = %cond.true.i.i101, %cond.false.i.i103
  %cond.i.i104 = phi i32 [ %or7.i.i100, %cond.true.i.i101 ], [ %call.i.i102, %cond.false.i.i103 ], !dbg !8102
  store i32 %cond.i.i104, i32* %out_base, align 4, !dbg !8098
  call void @llvm.dbg.declare(metadata i32* %id_len, metadata !8103, metadata !DIExpression()), !dbg !8104
  %67 = load i32*, i32** %map, align 8, !dbg !8105
  %add.ptr27 = getelementptr i32, i32* %67, i64 3, !dbg !8106
  store i32* %add.ptr27, i32** %p.addr.i107, align 8
  %68 = load i32*, i32** %p.addr.i107, align 8, !dbg !8107
  store i32* %68, i32** %p.addr.i.i106, align 8
  %69 = load i32*, i32** %p.addr.i.i106, align 8, !dbg !8108
  %70 = load i32, i32* %69, align 4, !dbg !8108
  %71 = call i1 @llvm.is.constant.i32(i32 %70) #9, !dbg !8108
  br i1 %71, label %cond.true.i.i119, label %cond.false.i.i121, !dbg !8108

cond.true.i.i119:                                 ; preds = %__be32_to_cpup.exit105
  %72 = load i32*, i32** %p.addr.i.i106, align 8, !dbg !8108
  %73 = load i32, i32* %72, align 4, !dbg !8108
  %and.i.i108 = and i32 %73, 255, !dbg !8108
  %shl.i.i109 = shl i32 %and.i.i108, 24, !dbg !8108
  %74 = load i32*, i32** %p.addr.i.i106, align 8, !dbg !8108
  %75 = load i32, i32* %74, align 4, !dbg !8108
  %and1.i.i110 = and i32 %75, 65280, !dbg !8108
  %shl2.i.i111 = shl i32 %and1.i.i110, 8, !dbg !8108
  %or.i.i112 = or i32 %shl.i.i109, %shl2.i.i111, !dbg !8108
  %76 = load i32*, i32** %p.addr.i.i106, align 8, !dbg !8108
  %77 = load i32, i32* %76, align 4, !dbg !8108
  %and3.i.i113 = and i32 %77, 16711680, !dbg !8108
  %shr.i.i114 = lshr i32 %and3.i.i113, 8, !dbg !8108
  %or4.i.i115 = or i32 %or.i.i112, %shr.i.i114, !dbg !8108
  %78 = load i32*, i32** %p.addr.i.i106, align 8, !dbg !8108
  %79 = load i32, i32* %78, align 4, !dbg !8108
  %and5.i.i116 = and i32 %79, -16777216, !dbg !8108
  %shr6.i.i117 = lshr i32 %and5.i.i116, 24, !dbg !8108
  %or7.i.i118 = or i32 %or4.i.i115, %shr6.i.i117, !dbg !8108
  br label %__be32_to_cpup.exit123, !dbg !8108

cond.false.i.i121:                                ; preds = %__be32_to_cpup.exit105
  %80 = load i32*, i32** %p.addr.i.i106, align 8, !dbg !8108
  %81 = load i32, i32* %80, align 4, !dbg !8108
  %call.i.i120 = call i32 @__fswab32(i32 %81) #12, !dbg !8108
  br label %__be32_to_cpup.exit123, !dbg !8108

__be32_to_cpup.exit123:                           ; preds = %cond.true.i.i119, %cond.false.i.i121
  %cond.i.i122 = phi i32 [ %or7.i.i118, %cond.true.i.i119 ], [ %call.i.i120, %cond.false.i.i121 ], !dbg !8108
  store i32 %cond.i.i122, i32* %id_len, align 4, !dbg !8104
  %82 = load i32, i32* %id_base, align 4, !dbg !8109
  %83 = load i32, i32* %map_mask, align 4, !dbg !8111
  %neg = xor i32 %83, -1, !dbg !8112
  %and29 = and i32 %82, %neg, !dbg !8113
  %tobool30 = icmp ne i32 %and29, 0, !dbg !8113
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !8114

if.then31:                                        ; preds = %__be32_to_cpup.exit123
  %84 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !8115
  %85 = load i8*, i8** %map_name.addr, align 8, !dbg !8115
  %86 = load i8*, i8** %map_name.addr, align 8, !dbg !8115
  %87 = load i32, i32* %map_mask, align 4, !dbg !8115
  %88 = load i32, i32* %id_base, align 4, !dbg !8115
  %call32 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.41, i64 0, i64 0), %struct.device_node* %84, i8* %85, i8* %86, i32 %87, i32 %88) #11, !dbg !8115
  store i32 -14, i32* %retval, align 4, !dbg !8117
  br label %return, !dbg !8117

if.end33:                                         ; preds = %__be32_to_cpup.exit123
  %89 = load i32, i32* %masked_id, align 4, !dbg !8118
  %90 = load i32, i32* %id_base, align 4, !dbg !8120
  %cmp34 = icmp ult i32 %89, %90, !dbg !8121
  br i1 %cmp34, label %if.then39, label %lor.lhs.false36, !dbg !8122

lor.lhs.false36:                                  ; preds = %if.end33
  %91 = load i32, i32* %masked_id, align 4, !dbg !8123
  %92 = load i32, i32* %id_base, align 4, !dbg !8124
  %93 = load i32, i32* %id_len, align 4, !dbg !8125
  %add = add i32 %92, %93, !dbg !8126
  %cmp37 = icmp uge i32 %91, %add, !dbg !8127
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !8128

if.then39:                                        ; preds = %lor.lhs.false36, %if.end33
  br label %for.inc, !dbg !8129

if.end40:                                         ; preds = %lor.lhs.false36
  %94 = load i32, i32* %phandle, align 4, !dbg !8130
  %call41 = call %struct.device_node* @of_find_node_by_phandle(i32 %94) #10, !dbg !8131
  store %struct.device_node* %call41, %struct.device_node** %phandle_node, align 8, !dbg !8132
  %95 = load %struct.device_node*, %struct.device_node** %phandle_node, align 8, !dbg !8133
  %tobool42 = icmp ne %struct.device_node* %95, null, !dbg !8133
  br i1 %tobool42, label %if.end44, label %if.then43, !dbg !8135

if.then43:                                        ; preds = %if.end40
  store i32 -19, i32* %retval, align 4, !dbg !8136
  br label %return, !dbg !8136

if.end44:                                         ; preds = %if.end40
  %96 = load %struct.device_node**, %struct.device_node*** %target.addr, align 8, !dbg !8137
  %tobool45 = icmp ne %struct.device_node** %96, null, !dbg !8137
  br i1 %tobool45, label %if.then46, label %if.end54, !dbg !8139

if.then46:                                        ; preds = %if.end44
  %97 = load %struct.device_node**, %struct.device_node*** %target.addr, align 8, !dbg !8140
  %98 = load %struct.device_node*, %struct.device_node** %97, align 8, !dbg !8143
  %tobool47 = icmp ne %struct.device_node* %98, null, !dbg !8143
  br i1 %tobool47, label %if.then48, label %if.else, !dbg !8144

if.then48:                                        ; preds = %if.then46
  %99 = load %struct.device_node*, %struct.device_node** %phandle_node, align 8, !dbg !8145
  call void @of_node_put(%struct.device_node* %99) #10, !dbg !8146
  br label %if.end49, !dbg !8146

if.else:                                          ; preds = %if.then46
  %100 = load %struct.device_node*, %struct.device_node** %phandle_node, align 8, !dbg !8147
  %101 = load %struct.device_node**, %struct.device_node*** %target.addr, align 8, !dbg !8148
  store %struct.device_node* %100, %struct.device_node** %101, align 8, !dbg !8149
  br label %if.end49

if.end49:                                         ; preds = %if.else, %if.then48
  %102 = load %struct.device_node**, %struct.device_node*** %target.addr, align 8, !dbg !8150
  %103 = load %struct.device_node*, %struct.device_node** %102, align 8, !dbg !8152
  %104 = load %struct.device_node*, %struct.device_node** %phandle_node, align 8, !dbg !8153
  %cmp50 = icmp ne %struct.device_node* %103, %104, !dbg !8154
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !8155

if.then52:                                        ; preds = %if.end49
  br label %for.inc, !dbg !8156

if.end53:                                         ; preds = %if.end49
  br label %if.end54, !dbg !8157

if.end54:                                         ; preds = %if.end53, %if.end44
  %105 = load i32*, i32** %id_out.addr, align 8, !dbg !8158
  %tobool55 = icmp ne i32* %105, null, !dbg !8158
  br i1 %tobool55, label %if.then56, label %if.end58, !dbg !8160

if.then56:                                        ; preds = %if.end54
  %106 = load i32, i32* %masked_id, align 4, !dbg !8161
  %107 = load i32, i32* %id_base, align 4, !dbg !8162
  %sub = sub i32 %106, %107, !dbg !8163
  %108 = load i32, i32* %out_base, align 4, !dbg !8164
  %add57 = add i32 %sub, %108, !dbg !8165
  %109 = load i32*, i32** %id_out.addr, align 8, !dbg !8166
  store i32 %add57, i32* %109, align 4, !dbg !8167
  br label %if.end58, !dbg !8168

if.end58:                                         ; preds = %if.then56, %if.end54
  store i32 0, i32* %tmp, align 4, !dbg !8169
  %110 = load i32, i32* %tmp, align 4, !dbg !8172
  store i32 0, i32* %retval, align 4, !dbg !8173
  br label %return, !dbg !8173

for.inc:                                          ; preds = %if.then52, %if.then39
  %111 = load i32, i32* %map_len, align 4, !dbg !8174
  %conv59 = sext i32 %111 to i64, !dbg !8174
  %sub60 = sub i64 %conv59, 16, !dbg !8174
  %conv61 = trunc i64 %sub60 to i32, !dbg !8174
  store i32 %conv61, i32* %map_len, align 4, !dbg !8174
  %112 = load i32*, i32** %map, align 8, !dbg !8175
  %add.ptr62 = getelementptr i32, i32* %112, i64 4, !dbg !8175
  store i32* %add.ptr62, i32** %map, align 8, !dbg !8175
  br label %for.cond, !dbg !8176, !llvm.loop !8177

for.end:                                          ; preds = %for.cond
  %113 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !8179
  %114 = load i8*, i8** %map_name.addr, align 8, !dbg !8179
  %115 = load i32, i32* %id.addr, align 4, !dbg !8179
  %116 = load %struct.device_node**, %struct.device_node*** %target.addr, align 8, !dbg !8179
  %tobool63 = icmp ne %struct.device_node** %116, null, !dbg !8179
  br i1 %tobool63, label %land.lhs.true64, label %cond.false, !dbg !8179

land.lhs.true64:                                  ; preds = %for.end
  %117 = load %struct.device_node**, %struct.device_node*** %target.addr, align 8, !dbg !8179
  %118 = load %struct.device_node*, %struct.device_node** %117, align 8, !dbg !8179
  %tobool65 = icmp ne %struct.device_node* %118, null, !dbg !8179
  br i1 %tobool65, label %cond.true, label %cond.false, !dbg !8179

cond.true:                                        ; preds = %land.lhs.true64
  %119 = load %struct.device_node**, %struct.device_node*** %target.addr, align 8, !dbg !8179
  %120 = load %struct.device_node*, %struct.device_node** %119, align 8, !dbg !8179
  br label %cond.end, !dbg !8179

cond.false:                                       ; preds = %land.lhs.true64, %for.end
  br label %cond.end, !dbg !8179

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.device_node* [ %120, %cond.true ], [ null, %cond.false ], !dbg !8179
  %call66 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.42, i64 0, i64 0), %struct.device_node* %113, i8* %114, i32 %115, %struct.device_node* %cond) #11, !dbg !8179
  %121 = load i32*, i32** %id_out.addr, align 8, !dbg !8180
  %tobool67 = icmp ne i32* %121, null, !dbg !8180
  br i1 %tobool67, label %if.then68, label %if.end69, !dbg !8182

if.then68:                                        ; preds = %cond.end
  %122 = load i32, i32* %id.addr, align 4, !dbg !8183
  %123 = load i32*, i32** %id_out.addr, align 8, !dbg !8184
  store i32 %122, i32* %123, align 4, !dbg !8185
  br label %if.end69, !dbg !8186

if.end69:                                         ; preds = %if.then68, %cond.end
  store i32 0, i32* %retval, align 4, !dbg !8187
  br label %return, !dbg !8187

return:                                           ; preds = %if.end69, %if.end58, %if.then43, %if.then31, %if.then14, %if.end9, %if.then8, %if.then
  %124 = load i32, i32* %retval, align 4, !dbg !8188
  ret i32 %124, !dbg !8188
}

; Function Attrs: noredzone
declare dso_local i8* @strrchr(i8*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_property_read_u32_array(%struct.device_node* %np, i8* %propname, i32* %out_values, i64 %sz) #0 !dbg !8189 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %propname.addr = alloca i8*, align 8
  %out_values.addr = alloca i32*, align 8
  %sz.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !8192, metadata !DIExpression()), !dbg !8193
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !8194, metadata !DIExpression()), !dbg !8195
  store i32* %out_values, i32** %out_values.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %out_values.addr, metadata !8196, metadata !DIExpression()), !dbg !8197
  store i64 %sz, i64* %sz.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %sz.addr, metadata !8198, metadata !DIExpression()), !dbg !8199
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8200, metadata !DIExpression()), !dbg !8201
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !8202
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !8203
  %2 = load i32*, i32** %out_values.addr, align 8, !dbg !8204
  %3 = load i64, i64* %sz.addr, align 8, !dbg !8205
  %call = call i32 @of_property_read_variable_u32_array(%struct.device_node* %0, i8* %1, i32* %2, i64 %3, i64 0) #10, !dbg !8206
  store i32 %call, i32* %ret, align 4, !dbg !8201
  %4 = load i32, i32* %ret, align 4, !dbg !8207
  %cmp = icmp sge i32 %4, 0, !dbg !8209
  br i1 %cmp, label %if.then, label %if.else, !dbg !8210

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8211
  br label %return, !dbg !8211

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %ret, align 4, !dbg !8212
  store i32 %5, i32* %retval, align 4, !dbg !8213
  br label %return, !dbg !8213

return:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !8214
  ret i32 %6, !dbg !8214
}

; Function Attrs: noredzone
declare dso_local i32 @of_property_read_variable_u32_array(%struct.device_node*, i8*, i32*, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hash_32_generic(i32 %val, i32 %bits) #0 !dbg !8215 {
entry:
  %val.addr = alloca i32, align 4
  %bits.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !8219, metadata !DIExpression()), !dbg !8220
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !8221, metadata !DIExpression()), !dbg !8222
  %0 = load i32, i32* %val.addr, align 4, !dbg !8223
  %call = call i32 @__hash_32_generic(i32 %0) #10, !dbg !8224
  %1 = load i32, i32* %bits.addr, align 4, !dbg !8225
  %sub = sub i32 32, %1, !dbg !8226
  %shr = lshr i32 %call, %sub, !dbg !8227
  ret i32 %shr, !dbg !8228
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__hash_32_generic(i32 %val) #0 !dbg !8229 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !8232, metadata !DIExpression()), !dbg !8233
  %0 = load i32, i32* %val.addr, align 4, !dbg !8234
  %mul = mul i32 %0, 1640531527, !dbg !8235
  ret i32 %mul, !dbg !8236
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !8237 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !8238, metadata !DIExpression()), !dbg !8240
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8241, metadata !DIExpression()), !dbg !8240
  %0 = load i64, i64* %__edi, align 8, !dbg !8240
  store i64 %0, i64* %__edi, align 8, !dbg !8240
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8242, metadata !DIExpression()), !dbg !8240
  %1 = load i64, i64* %__esi, align 8, !dbg !8240
  store i64 %1, i64* %__esi, align 8, !dbg !8240
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8243, metadata !DIExpression()), !dbg !8240
  %2 = load i64, i64* %__edx, align 8, !dbg !8240
  store i64 %2, i64* %__edx, align 8, !dbg !8240
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8244, metadata !DIExpression()), !dbg !8240
  %3 = load i64, i64* %__ecx, align 8, !dbg !8240
  store i64 %3, i64* %__ecx, align 8, !dbg !8240
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8245, metadata !DIExpression()), !dbg !8240
  %4 = load i64, i64* %__eax, align 8, !dbg !8240
  store i64 %4, i64* %__eax, align 8, !dbg !8240
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !8240
  %6 = call i64 @llvm.read_register.i64(metadata !3635), !dbg !8246
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #9, !dbg !8246, !srcloc !8249
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !8246
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !8246
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8246
  call void @llvm.write_register.i64(metadata !3635, i64 %asmresult1), !dbg !8246
  %8 = load i64, i64* %__eax, align 8, !dbg !8246
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !8250, metadata !DIExpression()), !dbg !8252
  store i64 -1, i64* %__mask, align 8, !dbg !8252
  %9 = load i64, i64* %__mask, align 8, !dbg !8252
  store i64 %9, i64* %tmp, align 8, !dbg !8252
  %10 = load i64, i64* %tmp, align 8, !dbg !8252
  %and = and i64 %8, %10, !dbg !8246
  store i64 %and, i64* %__ret, align 8, !dbg !8246
  %11 = load i64, i64* %__ret, align 8, !dbg !8240
  store i64 %11, i64* %tmp2, align 8, !dbg !8253
  %12 = load i64, i64* %tmp2, align 8, !dbg !8240
  ret i64 %12, !dbg !8254
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !8255 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8256, metadata !DIExpression()), !dbg !8258
  %0 = load i64, i64* %__edi, align 8, !dbg !8258
  store i64 %0, i64* %__edi, align 8, !dbg !8258
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8259, metadata !DIExpression()), !dbg !8258
  %1 = load i64, i64* %__esi, align 8, !dbg !8258
  store i64 %1, i64* %__esi, align 8, !dbg !8258
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8260, metadata !DIExpression()), !dbg !8258
  %2 = load i64, i64* %__edx, align 8, !dbg !8258
  store i64 %2, i64* %__edx, align 8, !dbg !8258
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8261, metadata !DIExpression()), !dbg !8258
  %3 = load i64, i64* %__ecx, align 8, !dbg !8258
  store i64 %3, i64* %__ecx, align 8, !dbg !8258
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8262, metadata !DIExpression()), !dbg !8258
  %4 = load i64, i64* %__eax, align 8, !dbg !8258
  store i64 %4, i64* %__eax, align 8, !dbg !8258
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !8258
  %6 = call i64 @llvm.read_register.i64(metadata !3635), !dbg !8258
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #9, !dbg !8258, !srcloc !8263
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !8258
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !8258
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8258
  call void @llvm.write_register.i64(metadata !3635, i64 %asmresult1), !dbg !8258
  ret void, !dbg !8264
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #8

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #9

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @of_read_number(i32* %cell, i32 %size) #0 !dbg !8265 {
entry:
  %cell.addr = alloca i32*, align 8
  %size.addr = alloca i32, align 4
  %r = alloca i64, align 8
  store i32* %cell, i32** %cell.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %cell.addr, metadata !8268, metadata !DIExpression()), !dbg !8269
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8270, metadata !DIExpression()), !dbg !8271
  call void @llvm.dbg.declare(metadata i64* %r, metadata !8272, metadata !DIExpression()), !dbg !8273
  store i64 0, i64* %r, align 8, !dbg !8273
  br label %for.cond, !dbg !8274

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %size.addr, align 4, !dbg !8275
  %dec = add i32 %0, -1, !dbg !8275
  store i32 %dec, i32* %size.addr, align 4, !dbg !8275
  %tobool = icmp ne i32 %0, 0, !dbg !8278
  br i1 %tobool, label %for.body, label %for.end, !dbg !8278

for.body:                                         ; preds = %for.cond
  %1 = load i64, i64* %r, align 8, !dbg !8279
  %shl = shl i64 %1, 32, !dbg !8280
  %2 = load i32*, i32** %cell.addr, align 8, !dbg !8281
  %3 = load i32, i32* %2, align 4, !dbg !8281
  %4 = call i1 @llvm.is.constant.i32(i32 %3), !dbg !8281
  br i1 %4, label %cond.true, label %cond.false, !dbg !8281

cond.true:                                        ; preds = %for.body
  %5 = load i32*, i32** %cell.addr, align 8, !dbg !8281
  %6 = load i32, i32* %5, align 4, !dbg !8281
  %and = and i32 %6, 255, !dbg !8281
  %shl1 = shl i32 %and, 24, !dbg !8281
  %7 = load i32*, i32** %cell.addr, align 8, !dbg !8281
  %8 = load i32, i32* %7, align 4, !dbg !8281
  %and2 = and i32 %8, 65280, !dbg !8281
  %shl3 = shl i32 %and2, 8, !dbg !8281
  %or = or i32 %shl1, %shl3, !dbg !8281
  %9 = load i32*, i32** %cell.addr, align 8, !dbg !8281
  %10 = load i32, i32* %9, align 4, !dbg !8281
  %and4 = and i32 %10, 16711680, !dbg !8281
  %shr = lshr i32 %and4, 8, !dbg !8281
  %or5 = or i32 %or, %shr, !dbg !8281
  %11 = load i32*, i32** %cell.addr, align 8, !dbg !8281
  %12 = load i32, i32* %11, align 4, !dbg !8281
  %and6 = and i32 %12, -16777216, !dbg !8281
  %shr7 = lshr i32 %and6, 24, !dbg !8281
  %or8 = or i32 %or5, %shr7, !dbg !8281
  br label %cond.end, !dbg !8281

cond.false:                                       ; preds = %for.body
  %13 = load i32*, i32** %cell.addr, align 8, !dbg !8281
  %14 = load i32, i32* %13, align 4, !dbg !8281
  %call = call i32 @__fswab32(i32 %14) #12, !dbg !8281
  br label %cond.end, !dbg !8281

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or8, %cond.true ], [ %call, %cond.false ], !dbg !8281
  %conv = zext i32 %cond to i64, !dbg !8281
  %or9 = or i64 %shl, %conv, !dbg !8282
  store i64 %or9, i64* %r, align 8, !dbg !8283
  br label %for.inc, !dbg !8284

for.inc:                                          ; preds = %cond.end
  %15 = load i32*, i32** %cell.addr, align 8, !dbg !8285
  %incdec.ptr = getelementptr i32, i32* %15, i32 1, !dbg !8285
  store i32* %incdec.ptr, i32** %cell.addr, align 8, !dbg !8285
  br label %for.cond, !dbg !8286, !llvm.loop !8287

for.end:                                          ; preds = %for.cond
  %16 = load i64, i64* %r, align 8, !dbg !8289
  ret i64 %16, !dbg !8290
}

; Function Attrs: noredzone
declare dso_local %struct.device* @get_cpu_device(i32) #2

; Function Attrs: noredzone
declare dso_local i8* @of_prop_next_string(%struct.property*, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @strcasecmp(i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #0 !dbg !8291 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !8297, metadata !DIExpression()), !dbg !8299
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !8301, metadata !DIExpression()), !dbg !8302
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !8303, metadata !DIExpression()), !dbg !8304
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !8305, metadata !DIExpression()), !dbg !8307
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !8309, metadata !DIExpression()), !dbg !8310
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !8311, metadata !DIExpression()), !dbg !8313
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8315, metadata !DIExpression()), !dbg !8316
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !8317, metadata !DIExpression()), !dbg !8318
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !8319, metadata !DIExpression()), !dbg !8320
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !8321
  %1 = load i64, i64* %nr.addr, align 8, !dbg !8322
  %div = sdiv i64 %1, 64, !dbg !8322
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !8323
  %2 = bitcast i64* %add.ptr to i8*, !dbg !8321
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !8324
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8325
  %conv.i = trunc i64 %4 to i32, !dbg !8325
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #13, !dbg !8326
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !8327
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !8327
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #13, !dbg !8327
  %7 = load i64, i64* %nr.addr, align 8, !dbg !8328
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !8328
  br i1 %8, label %cond.true, label %cond.false, !dbg !8328

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !8328
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !8328
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !8329
  %and.i = and i64 %11, 63, !dbg !8330
  %shl.i = shl i64 1, %and.i, !dbg !8331
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !8332
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !8333
  %shr.i = ashr i64 %13, 6, !dbg !8334
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !8332
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !8332
  %and1.i = and i64 %shl.i, %14, !dbg !8335
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !8336
  %conv = zext i1 %cmp.i to i32, !dbg !8328
  br label %cond.end, !dbg !8328

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !8328
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !8328
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !8337
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !8338
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #9, !dbg !8339, !srcloc !8340
  store i8 %19, i8* %oldbit.i, align 1, !dbg !8339
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !8341
  %tobool.i = trunc i8 %20 to i1, !dbg !8341
  %conv2 = zext i1 %tobool.i to i32, !dbg !8328
  br label %cond.end, !dbg !8328

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !8328
  %tobool = icmp ne i32 %cond, 0, !dbg !8328
  ret i1 %tobool, !dbg !8342
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !8343 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8347, metadata !DIExpression()), !dbg !8348
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8349, metadata !DIExpression()), !dbg !8350
  ret i1 true, !dbg !8351
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !8352 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8356, metadata !DIExpression()), !dbg !8357
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8358, metadata !DIExpression()), !dbg !8359
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8360, metadata !DIExpression()), !dbg !8361
  ret void, !dbg !8362
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__arch_swab32(i32 %val) #7 !dbg !8363 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !8365, metadata !DIExpression()), !dbg !8366
  %0 = load i32, i32* %val.addr, align 4, !dbg !8367
  %1 = call i32 asm "bswapl $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %0) #14, !dbg !8368, !srcloc !8369
  store i32 %1, i32* %val.addr, align 4, !dbg !8368
  %2 = load i32, i32* %val.addr, align 4, !dbg !8370
  ret i32 %2, !dbg !8371
}

; Function Attrs: noredzone
declare dso_local i8* @strncpy(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !8372 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8376, metadata !DIExpression()), !dbg !8377
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8378, metadata !DIExpression()), !dbg !8379
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8380
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8381
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !8382
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !8382
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8383
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #10, !dbg !8384
  ret void, !dbg !8385
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !8386 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8389, metadata !DIExpression()), !dbg !8390
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !8391, metadata !DIExpression()), !dbg !8392
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !8393, metadata !DIExpression()), !dbg !8394
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8395
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8397
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8398
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #10, !dbg !8399
  br i1 %call, label %if.end, label %if.then, !dbg !8400

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !8401

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8402
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8403
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !8404
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !8405
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8406
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8407
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !8408
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !8409
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8410
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8411
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !8412
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !8413
  br label %do.body, !dbg !8414

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !8415

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !8417

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !8415

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8419
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8419
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !8419
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !8419
  br label %do.end7, !dbg !8419

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !8415

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !8421
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !8422 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8425, metadata !DIExpression()), !dbg !8426
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !8427, metadata !DIExpression()), !dbg !8428
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !8429, metadata !DIExpression()), !dbg !8430
  ret i1 true, !dbg !8431
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !8432 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8433, metadata !DIExpression()), !dbg !8434
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8435, metadata !DIExpression()), !dbg !8436
  ret i1 true, !dbg !8437
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { noredzone }
attributes #11 = { cold noredzone }
attributes #12 = { noredzone nounwind readnone }
attributes #13 = { noredzone nounwind }
attributes #14 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!3635}
!llvm.module.flags = !{!3636, !3637, !3638, !3639}
!llvm.ident = !{!3640}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "aliases_lookup", scope: !2, file: !3, line: 34, type: !110, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !85, globals: !3595, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/of/base.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !18, !24, !30, !39, !47, !53, !59, !66, !74, !80}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !14, line: 65, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17}
!16 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !19, line: 16, baseType: !7, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22, !23}
!21 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !25, line: 54, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !31, line: 296, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36, !37, !38}
!33 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!35 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!36 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!37 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!38 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !40, line: 9, baseType: !7, size: 32, elements: !41)
!40 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!41 = !{!42, !43, !44, !45, !46}
!42 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!43 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!44 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!45 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!46 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !48, line: 26, baseType: !7, size: 32, elements: !49)
!48 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!49 = !{!50, !51, !52}
!50 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !54, line: 44, baseType: !7, size: 32, elements: !55)
!54 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!55 = !{!56, !57, !58}
!56 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!57 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!58 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !60, line: 343, baseType: !7, size: 32, elements: !61)
!60 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!61 = !{!62, !63, !64, !65}
!62 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!63 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!64 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!65 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !67, line: 524, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71, !72, !73}
!69 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!72 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!73 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!74 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !67, line: 502, baseType: !7, size: 32, elements: !75)
!75 = !{!76, !77, !78, !79}
!76 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!77 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!78 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!79 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!80 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !81, line: 10, baseType: !7, size: 32, elements: !82)
!81 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!82 = !{!83, !84}
!83 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!84 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!85 = !{!86, !87, !91, !101, !103, !89, !105, !221, !98, !205, !3588, !3589, !3590, !3592, !3594}
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!87 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !88, line: 21, baseType: !89)
!88 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!89 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !90, line: 27, baseType: !7)
!90 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!91 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !92, size: 64)
!92 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !93)
!93 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !94, line: 17, size: 64, elements: !95)
!94 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96}
!96 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !93, file: !94, line: 17, baseType: !97, size: 64)
!97 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 64, elements: !99)
!98 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!99 = !{!100}
!100 = !DISubrange(count: 1)
!101 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !102, line: 148, baseType: !7)
!102 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !104, line: 32, baseType: !89)
!104 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 64)
!106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alias_prop", file: !107, line: 22, size: 320, elements: !108)
!107 = !DIFile(filename: "drivers/of/of_private.h", directory: "/home/lizy2001/genbc/linux")
!108 = !{!109, !115, !119, !3585, !3586}
!109 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !106, file: !107, line: 23, baseType: !110, size: 128)
!110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !102, line: 178, size: 128, elements: !111)
!111 = !{!112, !114}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !110, file: !102, line: 179, baseType: !113, size: 64)
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !110, file: !102, line: 179, baseType: !113, size: 64, offset: 64)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !106, file: !107, line: 24, baseType: !116, size: 64, offset: 128)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!118 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "np", scope: !106, file: !107, line: 25, baseType: !120, size: 64, offset: 192)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64)
!121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !122, line: 51, size: 1344, elements: !123)
!122 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!123 = !{!124, !125, !127, !128, !3569, !3578, !3579, !3580, !3581, !3582, !3583, !3584}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !121, file: !122, line: 52, baseType: !116, size: 64)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !121, file: !122, line: 53, baseType: !126, size: 32, offset: 64)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !122, line: 28, baseType: !87)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !121, file: !122, line: 54, baseType: !116, size: 64, offset: 128)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !121, file: !122, line: 55, baseType: !129, size: 192, offset: 192)
!129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !130, line: 17, size: 192, elements: !131)
!130 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!131 = !{!132, !134, !3568}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !129, file: !130, line: 18, baseType: !133, size: 64)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 64)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !129, file: !130, line: 19, baseType: !135, size: 64, offset: 64)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64)
!136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !137)
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !130, line: 110, size: 1152, elements: !138)
!138 = !{!139, !143, !147, !155, !3510, !3514, !3518, !3523, !3527, !3528, !3532, !3536, !3540, !3551, !3552, !3553, !3554, !3564}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !137, file: !130, line: 111, baseType: !140, size: 64)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!141 = !DISubroutineType(types: !142)
!142 = !{!133, !133}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !137, file: !130, line: 112, baseType: !144, size: 64, offset: 64)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 64)
!145 = !DISubroutineType(types: !146)
!146 = !{null, !133}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !137, file: !130, line: 113, baseType: !148, size: 64, offset: 128)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64)
!149 = !DISubroutineType(types: !150)
!150 = !{!151, !153}
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !102, line: 30, baseType: !152)
!152 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64)
!154 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !129)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !137, file: !130, line: 114, baseType: !156, size: 64, offset: 192)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 64)
!157 = !DISubroutineType(types: !158)
!158 = !{!159, !153, !161}
!159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 64)
!160 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 64)
!162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !163)
!163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !60, line: 461, size: 5568, elements: !164)
!164 = !{!165, !3155, !3157, !3160, !3161, !3212, !3303, !3304, !3305, !3306, !3307, !3316, !3421, !3434, !3437, !3438, !3442, !3444, !3445, !3446, !3450, !3456, !3457, !3460, !3461, !3462, !3463, !3464, !3465, !3466, !3498, !3499, !3500, !3503, !3506, !3507, !3508, !3509}
!165 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !163, file: !60, line: 462, baseType: !166, size: 512)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !167, line: 64, size: 512, elements: !168)
!167 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!168 = !{!169, !170, !171, !173, !234, !3006, !3145, !3150, !3151, !3152, !3153, !3154}
!169 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !166, file: !167, line: 65, baseType: !116, size: 64)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !166, file: !167, line: 66, baseType: !110, size: 128, offset: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !166, file: !167, line: 67, baseType: !172, size: 64, offset: 192)
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 64)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !166, file: !167, line: 68, baseType: !174, size: 64, offset: 256)
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64)
!175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !167, line: 192, size: 704, elements: !176)
!176 = !{!177, !178, !194, !195}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !175, file: !167, line: 193, baseType: !110, size: 128)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !175, file: !167, line: 194, baseType: !179, offset: 128)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !180, line: 83, baseType: !181)
!180 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !180, line: 71, elements: !182)
!182 = !{!183}
!183 = !DIDerivedType(tag: DW_TAG_member, scope: !181, file: !180, line: 72, baseType: !184)
!184 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !181, file: !180, line: 72, elements: !185)
!185 = !{!186}
!186 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !184, file: !180, line: 73, baseType: !187)
!187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !180, line: 20, elements: !188)
!188 = !{!189}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !187, file: !180, line: 21, baseType: !190)
!190 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !191, line: 25, baseType: !192)
!191 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!192 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !191, line: 25, elements: !193)
!193 = !{}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !175, file: !167, line: 195, baseType: !166, size: 512, offset: 128)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !175, file: !167, line: 196, baseType: !196, size: 64, offset: 640)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64)
!197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !198)
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !167, line: 156, size: 192, elements: !199)
!199 = !{!200, !206, !211}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !198, file: !167, line: 157, baseType: !201, size: 64)
!201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64)
!203 = !DISubroutineType(types: !204)
!204 = !{!205, !174, !172}
!205 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !198, file: !167, line: 158, baseType: !207, size: 64, offset: 64)
!207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 64)
!209 = !DISubroutineType(types: !210)
!210 = !{!116, !174, !172}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !198, file: !167, line: 159, baseType: !212, size: 64, offset: 128)
!212 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !213)
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!214 = !DISubroutineType(types: !215)
!215 = !{!205, !174, !172, !216}
!216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 64)
!217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !167, line: 148, size: 20736, elements: !218)
!218 = !{!219, !224, !228, !229, !233}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !217, file: !167, line: 149, baseType: !220, size: 192)
!220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !221, size: 192, elements: !222)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 64)
!222 = !{!223}
!223 = !DISubrange(count: 3)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !217, file: !167, line: 150, baseType: !225, size: 4096, offset: 192)
!225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !221, size: 4096, elements: !226)
!226 = !{!227}
!227 = !DISubrange(count: 64)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !217, file: !167, line: 151, baseType: !205, size: 32, offset: 4288)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !217, file: !167, line: 152, baseType: !230, size: 16384, offset: 4320)
!230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 16384, elements: !231)
!231 = !{!232}
!232 = !DISubrange(count: 2048)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !217, file: !167, line: 153, baseType: !205, size: 32, offset: 20704)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !166, file: !167, line: 69, baseType: !235, size: 64, offset: 320)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !167, line: 138, size: 448, elements: !237)
!237 = !{!238, !242, !271, !273, !2968, !2996, !3000}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !236, file: !167, line: 139, baseType: !239, size: 64)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64)
!240 = !DISubroutineType(types: !241)
!241 = !{null, !172}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !236, file: !167, line: 140, baseType: !243, size: 64, offset: 64)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64)
!244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !245)
!245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !246, line: 230, size: 128, elements: !247)
!246 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!247 = !{!248, !264}
!248 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !245, file: !246, line: 231, baseType: !249, size: 64)
!249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 64)
!250 = !DISubroutineType(types: !251)
!251 = !{!252, !172, !257, !221}
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !102, line: 60, baseType: !253)
!253 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !254, line: 73, baseType: !255)
!254 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!255 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !254, line: 15, baseType: !256)
!256 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 64)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !246, line: 30, size: 128, elements: !259)
!259 = !{!260, !261}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !258, file: !246, line: 31, baseType: !116, size: 64)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !258, file: !246, line: 32, baseType: !262, size: 16, offset: 64)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !102, line: 19, baseType: !263)
!263 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !245, file: !246, line: 232, baseType: !265, size: 64, offset: 64)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64)
!266 = !DISubroutineType(types: !267)
!267 = !{!252, !172, !257, !116, !268}
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !102, line: 55, baseType: !269)
!269 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !254, line: 72, baseType: !270)
!270 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !254, line: 16, baseType: !98)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !236, file: !167, line: 141, baseType: !272, size: 64, offset: 128)
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 64)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !236, file: !167, line: 142, baseType: !274, size: 64, offset: 192)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !277)
!277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !246, line: 84, size: 320, elements: !278)
!278 = !{!279, !280, !284, !2965, !2966}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !277, file: !246, line: 85, baseType: !116, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !277, file: !246, line: 86, baseType: !281, size: 64, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64)
!282 = !DISubroutineType(types: !283)
!283 = !{!262, !172, !257, !205}
!284 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !277, file: !246, line: 88, baseType: !285, size: 64, offset: 128)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64)
!286 = !DISubroutineType(types: !287)
!287 = !{!262, !172, !288, !205}
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64)
!289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !246, line: 168, size: 448, elements: !290)
!290 = !{!291, !292, !293, !294, !2960, !2961}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !289, file: !246, line: 169, baseType: !258, size: 128)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !289, file: !246, line: 170, baseType: !268, size: 64, offset: 128)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !289, file: !246, line: 171, baseType: !86, size: 64, offset: 192)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !289, file: !246, line: 172, baseType: !295, size: 64, offset: 256)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!296 = !DISubroutineType(types: !297)
!297 = !{!252, !298, !172, !288, !221, !471, !268}
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !31, line: 916, size: 1856, align: 32, elements: !300)
!300 = !{!301, !319, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2943, !2944, !2953, !2954, !2955, !2956, !2957, !2958, !2959}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !299, file: !31, line: 920, baseType: !302, size: 128)
!302 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !299, file: !31, line: 917, size: 128, elements: !303)
!303 = !{!304, !310}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !302, file: !31, line: 918, baseType: !305, size: 64)
!305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !306, line: 58, size: 64, elements: !307)
!306 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!307 = !{!308}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !305, file: !306, line: 59, baseType: !309, size: 64)
!309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !302, file: !31, line: 919, baseType: !311, size: 128, align: 64)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !102, line: 216, size: 128, align: 64, elements: !312)
!312 = !{!313, !315}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !311, file: !102, line: 217, baseType: !314, size: 64)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !311, file: !102, line: 218, baseType: !316, size: 64, offset: 64)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!317 = !DISubroutineType(types: !318)
!318 = !{null, !314}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !299, file: !31, line: 921, baseType: !320, size: 128, offset: 128)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !321, line: 8, size: 128, elements: !322)
!321 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!322 = !{!323, !327}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !320, file: !321, line: 9, baseType: !324, size: 64)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!325 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !326, line: 18, flags: DIFlagFwdDecl)
!326 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!327 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !320, file: !321, line: 10, baseType: !328, size: 64, offset: 64)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !326, line: 89, size: 1536, elements: !330)
!330 = !{!331, !332, !342, !350, !351, !370, !2893, !2895, !2907, !2908, !2909, !2910, !2911, !2917, !2918, !2919}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !329, file: !326, line: 91, baseType: !7, size: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !329, file: !326, line: 92, baseType: !333, size: 32, offset: 32)
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !334, line: 277, baseType: !335)
!334 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !334, line: 277, size: 32, elements: !336)
!336 = !{!337}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !335, file: !334, line: 277, baseType: !338, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !334, line: 70, baseType: !339)
!339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !334, line: 65, size: 32, elements: !340)
!340 = !{!341}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !339, file: !334, line: 66, baseType: !7, size: 32)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !329, file: !326, line: 93, baseType: !343, size: 128, offset: 64)
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !344, line: 38, size: 128, elements: !345)
!344 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!345 = !{!346, !348}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !343, file: !344, line: 39, baseType: !347, size: 64)
!347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 64)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !343, file: !344, line: 39, baseType: !349, size: 64, offset: 64)
!349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !329, file: !326, line: 94, baseType: !328, size: 64, offset: 192)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !329, file: !326, line: 95, baseType: !352, size: 128, offset: 256)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !326, line: 47, size: 128, elements: !353)
!353 = !{!354, !366}
!354 = !DIDerivedType(tag: DW_TAG_member, scope: !352, file: !326, line: 48, baseType: !355, size: 64)
!355 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !352, file: !326, line: 48, size: 64, elements: !356)
!356 = !{!357, !362}
!357 = !DIDerivedType(tag: DW_TAG_member, scope: !355, file: !326, line: 49, baseType: !358, size: 64)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !355, file: !326, line: 49, size: 64, elements: !359)
!359 = !{!360, !361}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !358, file: !326, line: 50, baseType: !87, size: 32)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !358, file: !326, line: 50, baseType: !87, size: 32, offset: 32)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !355, file: !326, line: 52, baseType: !363, size: 64)
!363 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !88, line: 23, baseType: !364)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !90, line: 31, baseType: !365)
!365 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !352, file: !326, line: 54, baseType: !367, size: 64, offset: 64)
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !369)
!369 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !329, file: !326, line: 96, baseType: !371, size: 64, offset: 384)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !31, line: 610, size: 4224, elements: !373)
!373 = !{!374, !375, !376, !384, !391, !392, !538, !2605, !2606, !2607, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2869, !2877, !2878, !2879, !2889, !2890, !2891, !2892}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !372, file: !31, line: 611, baseType: !262, size: 16)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !372, file: !31, line: 612, baseType: !263, size: 16, offset: 16)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !372, file: !31, line: 613, baseType: !377, size: 32, offset: 32)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !378, line: 23, baseType: !379)
!378 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 21, size: 32, elements: !380)
!380 = !{!381}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !379, file: !378, line: 22, baseType: !382, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !102, line: 32, baseType: !383)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !254, line: 49, baseType: !7)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !372, file: !31, line: 614, baseType: !385, size: 32, offset: 64)
!385 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !378, line: 28, baseType: !386)
!386 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 26, size: 32, elements: !387)
!387 = !{!388}
!388 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !386, file: !378, line: 27, baseType: !389, size: 32)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !102, line: 33, baseType: !390)
!390 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !254, line: 50, baseType: !7)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !372, file: !31, line: 615, baseType: !7, size: 32, offset: 96)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !372, file: !31, line: 622, baseType: !393, size: 64, offset: 128)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !395)
!395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !31, line: 1864, size: 1536, align: 512, elements: !396)
!396 = !{!397, !401, !414, !418, !424, !428, !432, !436, !440, !444, !448, !449, !455, !459, !485, !514, !518, !524, !529, !533, !534}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !395, file: !31, line: 1865, baseType: !398, size: 64)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!399 = !DISubroutineType(types: !400)
!400 = !{!328, !371, !328, !7}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !395, file: !31, line: 1866, baseType: !402, size: 64, offset: 64)
!402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 64)
!403 = !DISubroutineType(types: !404)
!404 = !{!116, !328, !371, !405}
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !407, line: 10, size: 128, elements: !408)
!407 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!408 = !{!409, !413}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !406, file: !407, line: 11, baseType: !410, size: 64)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 64)
!411 = !DISubroutineType(types: !412)
!412 = !{null, !86}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !406, file: !407, line: 12, baseType: !86, size: 64, offset: 64)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !395, file: !31, line: 1867, baseType: !415, size: 64, offset: 128)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = !DISubroutineType(types: !417)
!417 = !{!205, !371, !205}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !395, file: !31, line: 1868, baseType: !419, size: 64, offset: 192)
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!420 = !DISubroutineType(types: !421)
!421 = !{!422, !371, !205}
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!423 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !31, line: 581, flags: DIFlagFwdDecl)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !395, file: !31, line: 1870, baseType: !425, size: 64, offset: 256)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!426 = !DISubroutineType(types: !427)
!427 = !{!205, !328, !221, !205}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !395, file: !31, line: 1872, baseType: !429, size: 64, offset: 320)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64)
!430 = !DISubroutineType(types: !431)
!431 = !{!205, !371, !328, !262, !151}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !395, file: !31, line: 1873, baseType: !433, size: 64, offset: 384)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = !DISubroutineType(types: !435)
!435 = !{!205, !328, !371, !328}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !395, file: !31, line: 1874, baseType: !437, size: 64, offset: 448)
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!438 = !DISubroutineType(types: !439)
!439 = !{!205, !371, !328}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !395, file: !31, line: 1875, baseType: !441, size: 64, offset: 512)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!442 = !DISubroutineType(types: !443)
!443 = !{!205, !371, !328, !116}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !395, file: !31, line: 1876, baseType: !445, size: 64, offset: 576)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = !DISubroutineType(types: !447)
!447 = !{!205, !371, !328, !262}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !395, file: !31, line: 1877, baseType: !437, size: 64, offset: 640)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !395, file: !31, line: 1878, baseType: !450, size: 64, offset: 704)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!451 = !DISubroutineType(types: !452)
!452 = !{!205, !371, !328, !262, !453}
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !102, line: 16, baseType: !454)
!454 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !102, line: 13, baseType: !87)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !395, file: !31, line: 1879, baseType: !456, size: 64, offset: 768)
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!457 = !DISubroutineType(types: !458)
!458 = !{!205, !371, !328, !371, !328, !7}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !395, file: !31, line: 1881, baseType: !460, size: 64, offset: 832)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!461 = !DISubroutineType(types: !462)
!462 = !{!205, !328, !463}
!463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !464, size: 64)
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !31, line: 219, size: 640, elements: !465)
!465 = !{!466, !467, !468, !469, !470, !474, !482, !483, !484}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !464, file: !31, line: 220, baseType: !7, size: 32)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !464, file: !31, line: 221, baseType: !262, size: 16, offset: 32)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !464, file: !31, line: 222, baseType: !377, size: 32, offset: 64)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !464, file: !31, line: 223, baseType: !385, size: 32, offset: 96)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !464, file: !31, line: 224, baseType: !471, size: 64, offset: 128)
!471 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !102, line: 46, baseType: !472)
!472 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !254, line: 88, baseType: !473)
!473 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !464, file: !31, line: 225, baseType: !475, size: 128, offset: 192)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !476, line: 13, size: 128, elements: !477)
!476 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!477 = !{!478, !481}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !475, file: !476, line: 14, baseType: !479, size: 64)
!479 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !476, line: 8, baseType: !480)
!480 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !90, line: 30, baseType: !473)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !475, file: !476, line: 15, baseType: !256, size: 64, offset: 64)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !464, file: !31, line: 226, baseType: !475, size: 128, offset: 320)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !464, file: !31, line: 227, baseType: !475, size: 128, offset: 448)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !464, file: !31, line: 234, baseType: !298, size: 64, offset: 576)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !395, file: !31, line: 1882, baseType: !486, size: 64, offset: 896)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64)
!487 = !DISubroutineType(types: !488)
!488 = !{!205, !489, !491, !87, !7}
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !320)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !493, line: 22, size: 1152, elements: !494)
!493 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!494 = !{!495, !496, !497, !498, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513}
!495 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !492, file: !493, line: 23, baseType: !87, size: 32)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !492, file: !493, line: 24, baseType: !262, size: 16, offset: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !492, file: !493, line: 25, baseType: !7, size: 32, offset: 64)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !492, file: !493, line: 26, baseType: !499, size: 32, offset: 96)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !102, line: 104, baseType: !87)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !492, file: !493, line: 27, baseType: !363, size: 64, offset: 128)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !492, file: !493, line: 28, baseType: !363, size: 64, offset: 192)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !492, file: !493, line: 37, baseType: !363, size: 64, offset: 256)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !492, file: !493, line: 38, baseType: !453, size: 32, offset: 320)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !492, file: !493, line: 39, baseType: !453, size: 32, offset: 352)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !492, file: !493, line: 40, baseType: !377, size: 32, offset: 384)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !492, file: !493, line: 41, baseType: !385, size: 32, offset: 416)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !492, file: !493, line: 42, baseType: !471, size: 64, offset: 448)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !492, file: !493, line: 43, baseType: !475, size: 128, offset: 512)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !492, file: !493, line: 44, baseType: !475, size: 128, offset: 640)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !492, file: !493, line: 45, baseType: !475, size: 128, offset: 768)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !492, file: !493, line: 46, baseType: !475, size: 128, offset: 896)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !492, file: !493, line: 47, baseType: !363, size: 64, offset: 1024)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !492, file: !493, line: 48, baseType: !363, size: 64, offset: 1088)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !395, file: !31, line: 1883, baseType: !515, size: 64, offset: 960)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = !DISubroutineType(types: !517)
!517 = !{!252, !328, !221, !268}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !395, file: !31, line: 1884, baseType: !519, size: 64, offset: 1024)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!520 = !DISubroutineType(types: !521)
!521 = !{!205, !371, !522, !363, !363}
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 64)
!523 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !31, line: 50, flags: DIFlagFwdDecl)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !395, file: !31, line: 1886, baseType: !525, size: 64, offset: 1088)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!526 = !DISubroutineType(types: !527)
!527 = !{!205, !371, !528, !205}
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !395, file: !31, line: 1887, baseType: !530, size: 64, offset: 1152)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!531 = !DISubroutineType(types: !532)
!532 = !{!205, !371, !328, !298, !7, !262}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !395, file: !31, line: 1890, baseType: !445, size: 64, offset: 1216)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !395, file: !31, line: 1891, baseType: !535, size: 64, offset: 1280)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64)
!536 = !DISubroutineType(types: !537)
!537 = !{!205, !371, !422, !205}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !372, file: !31, line: 623, baseType: !539, size: 64, offset: 192)
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64)
!540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !31, line: 1416, size: 9472, elements: !541)
!541 = !{!542, !543, !544, !545, !546, !547, !597, !2212, !2294, !2377, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2393, !2397, !2398, !2401, !2402, !2405, !2406, !2407, !2448, !2475, !2476, !2477, !2478, !2479, !2480, !2483, !2485, !2492, !2493, !2495, !2496, !2497, !2556, !2557, !2572, !2573, !2574, !2575, !2576, !2579, !2580, !2581, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !540, file: !31, line: 1417, baseType: !110, size: 128)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !540, file: !31, line: 1418, baseType: !453, size: 32, offset: 128)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !540, file: !31, line: 1419, baseType: !369, size: 8, offset: 160)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !540, file: !31, line: 1420, baseType: !98, size: 64, offset: 192)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !540, file: !31, line: 1421, baseType: !471, size: 64, offset: 256)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !540, file: !31, line: 1422, baseType: !548, size: 64, offset: 320)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !31, line: 2228, size: 576, elements: !550)
!550 = !{!551, !552, !553, !560, !564, !568, !572, !576, !577, !587, !590, !591, !592, !594, !595, !596}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !549, file: !31, line: 2229, baseType: !116, size: 64)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !549, file: !31, line: 2230, baseType: !205, size: 32, offset: 64)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !549, file: !31, line: 2238, baseType: !554, size: 64, offset: 128)
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 64)
!555 = !DISubroutineType(types: !556)
!556 = !{!205, !557}
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!558 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !559, line: 28, flags: DIFlagFwdDecl)
!559 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!560 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !549, file: !31, line: 2239, baseType: !561, size: 64, offset: 192)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !563)
!563 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !31, line: 70, flags: DIFlagFwdDecl)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !549, file: !31, line: 2240, baseType: !565, size: 64, offset: 256)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = !DISubroutineType(types: !567)
!567 = !{!328, !548, !205, !116, !86}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !549, file: !31, line: 2242, baseType: !569, size: 64, offset: 320)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!570 = !DISubroutineType(types: !571)
!571 = !{null, !539}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !549, file: !31, line: 2243, baseType: !573, size: 64, offset: 384)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 64)
!574 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !575, line: 76, flags: DIFlagFwdDecl)
!575 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!576 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !549, file: !31, line: 2244, baseType: !548, size: 64, offset: 448)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !549, file: !31, line: 2245, baseType: !578, size: 64, offset: 512)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !102, line: 182, size: 64, elements: !579)
!579 = !{!580}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !578, file: !102, line: 183, baseType: !581, size: 64)
!581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 64)
!582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !102, line: 186, size: 128, elements: !583)
!583 = !{!584, !585}
!584 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !582, file: !102, line: 187, baseType: !581, size: 64)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !582, file: !102, line: 187, baseType: !586, size: 64, offset: 64)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !549, file: !31, line: 2247, baseType: !588, offset: 576)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !589, line: 187, elements: !193)
!589 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!590 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !549, file: !31, line: 2248, baseType: !588, offset: 576)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !549, file: !31, line: 2249, baseType: !588, offset: 576)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !549, file: !31, line: 2250, baseType: !593, offset: 576)
!593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !588, elements: !222)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !549, file: !31, line: 2252, baseType: !588, offset: 576)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !549, file: !31, line: 2253, baseType: !588, offset: 576)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !549, file: !31, line: 2254, baseType: !588, offset: 576)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !540, file: !31, line: 1423, baseType: !598, size: 64, offset: 384)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !600)
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !31, line: 1935, size: 1472, elements: !601)
!601 = !{!602, !606, !610, !611, !615, !621, !625, !626, !627, !631, !635, !636, !637, !638, !644, !649, !650, !657, !658, !659, !660, !2196, !2211}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !600, file: !31, line: 1936, baseType: !603, size: 64)
!603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64)
!604 = !DISubroutineType(types: !605)
!605 = !{!371, !539}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !600, file: !31, line: 1937, baseType: !607, size: 64, offset: 64)
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 64)
!608 = !DISubroutineType(types: !609)
!609 = !{null, !371}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !600, file: !31, line: 1938, baseType: !607, size: 64, offset: 128)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !600, file: !31, line: 1940, baseType: !612, size: 64, offset: 192)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!613 = !DISubroutineType(types: !614)
!614 = !{null, !371, !205}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !600, file: !31, line: 1941, baseType: !616, size: 64, offset: 256)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = !DISubroutineType(types: !618)
!618 = !{!205, !371, !619}
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!620 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !31, line: 289, flags: DIFlagFwdDecl)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !600, file: !31, line: 1942, baseType: !622, size: 64, offset: 320)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 64)
!623 = !DISubroutineType(types: !624)
!624 = !{!205, !371}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !600, file: !31, line: 1943, baseType: !607, size: 64, offset: 384)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !600, file: !31, line: 1944, baseType: !569, size: 64, offset: 448)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !600, file: !31, line: 1945, baseType: !628, size: 64, offset: 512)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!629 = !DISubroutineType(types: !630)
!630 = !{!205, !539, !205}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !600, file: !31, line: 1946, baseType: !632, size: 64, offset: 576)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!633 = !DISubroutineType(types: !634)
!634 = !{!205, !539}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !600, file: !31, line: 1947, baseType: !632, size: 64, offset: 640)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !600, file: !31, line: 1948, baseType: !632, size: 64, offset: 704)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !600, file: !31, line: 1949, baseType: !632, size: 64, offset: 768)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !600, file: !31, line: 1950, baseType: !639, size: 64, offset: 832)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!640 = !DISubroutineType(types: !641)
!641 = !{!205, !328, !642}
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !31, line: 57, flags: DIFlagFwdDecl)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !600, file: !31, line: 1951, baseType: !645, size: 64, offset: 896)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!646 = !DISubroutineType(types: !647)
!647 = !{!205, !539, !648, !221}
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !600, file: !31, line: 1952, baseType: !569, size: 64, offset: 960)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !600, file: !31, line: 1954, baseType: !651, size: 64, offset: 1024)
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 64)
!652 = !DISubroutineType(types: !653)
!653 = !{!205, !654, !328}
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 64)
!655 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !656, line: 539, flags: DIFlagFwdDecl)
!656 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!657 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !600, file: !31, line: 1955, baseType: !651, size: 64, offset: 1088)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !600, file: !31, line: 1956, baseType: !651, size: 64, offset: 1152)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !600, file: !31, line: 1957, baseType: !651, size: 64, offset: 1216)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !600, file: !31, line: 1963, baseType: !661, size: 64, offset: 1280)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = !DISubroutineType(types: !663)
!663 = !{!205, !539, !664, !101}
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !666, line: 68, size: 512, align: 128, elements: !667)
!666 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!667 = !{!668, !669, !2188, !2195}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !665, file: !666, line: 69, baseType: !98, size: 64)
!669 = !DIDerivedType(tag: DW_TAG_member, scope: !665, file: !666, line: 77, baseType: !670, size: 320, offset: 64)
!670 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !665, file: !666, line: 77, size: 320, elements: !671)
!671 = !{!672, !859, !864, !892, !900, !906, !2180, !2187}
!672 = !DIDerivedType(tag: DW_TAG_member, scope: !670, file: !666, line: 78, baseType: !673, size: 320)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !670, file: !666, line: 78, size: 320, elements: !674)
!674 = !{!675, !676, !857, !858}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !673, file: !666, line: 84, baseType: !110, size: 128)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !673, file: !666, line: 86, baseType: !677, size: 64, offset: 128)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !31, line: 451, size: 1216, align: 64, elements: !679)
!679 = !{!680, !681, !688, !689, !694, !709, !725, !726, !727, !728, !850, !851, !854, !855, !856}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !678, file: !31, line: 452, baseType: !371, size: 64)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !678, file: !31, line: 453, baseType: !682, size: 128, offset: 64)
!682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !683, line: 292, size: 128, elements: !684)
!683 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!684 = !{!685, !686, !687}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !682, file: !683, line: 293, baseType: !179)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !682, file: !683, line: 295, baseType: !101, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !682, file: !683, line: 296, baseType: !86, size: 64, offset: 64)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !678, file: !31, line: 454, baseType: !101, size: 32, offset: 192)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !678, file: !31, line: 455, baseType: !690, size: 32, offset: 224)
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !102, line: 168, baseType: !691)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !102, line: 166, size: 32, elements: !692)
!692 = !{!693}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !691, file: !102, line: 167, baseType: !205, size: 32)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !678, file: !31, line: 460, baseType: !695, size: 128, offset: 256)
!695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !696, line: 125, size: 128, elements: !697)
!696 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!697 = !{!698, !708}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !695, file: !696, line: 126, baseType: !699, size: 64)
!699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !696, line: 31, size: 64, elements: !700)
!700 = !{!701}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !699, file: !696, line: 32, baseType: !702, size: 64)
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 64)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !696, line: 24, size: 192, align: 64, elements: !704)
!704 = !{!705, !706, !707}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !703, file: !696, line: 25, baseType: !98, size: 64)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !703, file: !696, line: 26, baseType: !702, size: 64, offset: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !703, file: !696, line: 27, baseType: !702, size: 64, offset: 128)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !695, file: !696, line: 127, baseType: !702, size: 64, offset: 64)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !678, file: !31, line: 461, baseType: !710, size: 256, offset: 384)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !711, line: 35, size: 256, elements: !712)
!711 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!712 = !{!713, !721, !722, !724}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !710, file: !711, line: 36, baseType: !714, size: 64)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !715, line: 13, baseType: !716)
!715 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !102, line: 175, baseType: !717)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !102, line: 173, size: 64, elements: !718)
!718 = !{!719}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !717, file: !102, line: 174, baseType: !720, size: 64)
!720 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !88, line: 22, baseType: !480)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !710, file: !711, line: 42, baseType: !714, size: 64, offset: 64)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !710, file: !711, line: 46, baseType: !723, offset: 128)
!723 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !180, line: 29, baseType: !187)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !710, file: !711, line: 47, baseType: !110, size: 128, offset: 128)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !678, file: !31, line: 462, baseType: !98, size: 64, offset: 640)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !678, file: !31, line: 463, baseType: !98, size: 64, offset: 704)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !678, file: !31, line: 464, baseType: !98, size: 64, offset: 768)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !678, file: !31, line: 465, baseType: !729, size: 64, offset: 832)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !731)
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !31, line: 367, size: 1408, elements: !732)
!732 = !{!733, !737, !741, !745, !749, !753, !759, !765, !769, !774, !778, !782, !786, !814, !818, !824, !825, !826, !830, !835, !839, !846}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !731, file: !31, line: 368, baseType: !734, size: 64)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = !DISubroutineType(types: !736)
!736 = !{!205, !664, !619}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !731, file: !31, line: 369, baseType: !738, size: 64, offset: 64)
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!739 = !DISubroutineType(types: !740)
!740 = !{!205, !298, !664}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !731, file: !31, line: 372, baseType: !742, size: 64, offset: 128)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = !DISubroutineType(types: !744)
!744 = !{!205, !677, !619}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !731, file: !31, line: 375, baseType: !746, size: 64, offset: 192)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = !DISubroutineType(types: !748)
!748 = !{!205, !664}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !731, file: !31, line: 381, baseType: !750, size: 64, offset: 256)
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = !DISubroutineType(types: !752)
!752 = !{!205, !298, !677, !113, !7}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !731, file: !31, line: 383, baseType: !754, size: 64, offset: 320)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!755 = !DISubroutineType(types: !756)
!756 = !{null, !757}
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!758 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !31, line: 290, flags: DIFlagFwdDecl)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !731, file: !31, line: 385, baseType: !760, size: 64, offset: 384)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!761 = !DISubroutineType(types: !762)
!762 = !{!205, !298, !677, !471, !7, !7, !763, !764}
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 64)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !731, file: !31, line: 388, baseType: !766, size: 64, offset: 448)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = !DISubroutineType(types: !768)
!768 = !{!205, !298, !677, !471, !7, !7, !664, !86}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !731, file: !31, line: 393, baseType: !770, size: 64, offset: 512)
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!771 = !DISubroutineType(types: !772)
!772 = !{!773, !677, !773}
!773 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !102, line: 125, baseType: !363)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !731, file: !31, line: 394, baseType: !775, size: 64, offset: 576)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DISubroutineType(types: !777)
!777 = !{null, !664, !7, !7}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !731, file: !31, line: 395, baseType: !779, size: 64, offset: 640)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DISubroutineType(types: !781)
!781 = !{!205, !664, !101}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !731, file: !31, line: 396, baseType: !783, size: 64, offset: 704)
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 64)
!784 = !DISubroutineType(types: !785)
!785 = !{null, !664}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !731, file: !31, line: 397, baseType: !787, size: 64, offset: 768)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!788 = !DISubroutineType(types: !789)
!789 = !{!252, !790, !812}
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !31, line: 320, size: 384, elements: !792)
!792 = !{!793, !794, !795, !799, !800, !801, !804, !805}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !791, file: !31, line: 321, baseType: !298, size: 64)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !791, file: !31, line: 326, baseType: !471, size: 64, offset: 64)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !791, file: !31, line: 327, baseType: !796, size: 64, offset: 128)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DISubroutineType(types: !798)
!798 = !{null, !790, !256, !256}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !791, file: !31, line: 328, baseType: !86, size: 64, offset: 192)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !791, file: !31, line: 329, baseType: !205, size: 32, offset: 256)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !791, file: !31, line: 330, baseType: !802, size: 16, offset: 288)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !88, line: 19, baseType: !803)
!803 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !90, line: 24, baseType: !263)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !791, file: !31, line: 331, baseType: !802, size: 16, offset: 304)
!805 = !DIDerivedType(tag: DW_TAG_member, scope: !791, file: !31, line: 332, baseType: !806, size: 64, offset: 320)
!806 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !791, file: !31, line: 332, size: 64, elements: !807)
!807 = !{!808, !809}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !806, file: !31, line: 333, baseType: !7, size: 32)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !806, file: !31, line: 334, baseType: !810, size: 64)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !31, line: 334, flags: DIFlagFwdDecl)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !31, line: 64, flags: DIFlagFwdDecl)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !731, file: !31, line: 402, baseType: !815, size: 64, offset: 832)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = !DISubroutineType(types: !817)
!817 = !{!205, !677, !664, !664, !5}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !731, file: !31, line: 404, baseType: !819, size: 64, offset: 896)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = !DISubroutineType(types: !821)
!821 = !{!151, !664, !822}
!822 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !823, line: 305, baseType: !7)
!823 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!824 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !731, file: !31, line: 405, baseType: !783, size: 64, offset: 960)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !731, file: !31, line: 406, baseType: !746, size: 64, offset: 1024)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !731, file: !31, line: 407, baseType: !827, size: 64, offset: 1088)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DISubroutineType(types: !829)
!829 = !{!205, !664, !98, !98}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !731, file: !31, line: 409, baseType: !831, size: 64, offset: 1152)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DISubroutineType(types: !833)
!833 = !{null, !664, !834, !834}
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 64)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !731, file: !31, line: 410, baseType: !836, size: 64, offset: 1216)
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = !DISubroutineType(types: !838)
!838 = !{!205, !677, !664}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !731, file: !31, line: 413, baseType: !840, size: 64, offset: 1280)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DISubroutineType(types: !842)
!842 = !{!205, !843, !298, !845}
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !31, line: 61, flags: DIFlagFwdDecl)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !731, file: !31, line: 415, baseType: !847, size: 64, offset: 1344)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = !DISubroutineType(types: !849)
!849 = !{null, !298}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !678, file: !31, line: 466, baseType: !98, size: 64, offset: 896)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !678, file: !31, line: 467, baseType: !852, size: 32, offset: 960)
!852 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !853, line: 8, baseType: !87)
!853 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!854 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !678, file: !31, line: 468, baseType: !179, offset: 992)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !678, file: !31, line: 469, baseType: !110, size: 128, offset: 1024)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !678, file: !31, line: 470, baseType: !86, size: 64, offset: 1152)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !673, file: !666, line: 87, baseType: !98, size: 64, offset: 192)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !673, file: !666, line: 94, baseType: !98, size: 64, offset: 256)
!859 = !DIDerivedType(tag: DW_TAG_member, scope: !670, file: !666, line: 96, baseType: !860, size: 64)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !670, file: !666, line: 96, size: 64, elements: !861)
!861 = !{!862}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !860, file: !666, line: 101, baseType: !863, size: 64)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !102, line: 143, baseType: !363)
!864 = !DIDerivedType(tag: DW_TAG_member, scope: !670, file: !666, line: 103, baseType: !865, size: 320)
!865 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !670, file: !666, line: 103, size: 320, elements: !866)
!866 = !{!867, !877, !880, !881}
!867 = !DIDerivedType(tag: DW_TAG_member, scope: !865, file: !666, line: 104, baseType: !868, size: 128)
!868 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !865, file: !666, line: 104, size: 128, elements: !869)
!869 = !{!870, !871}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !868, file: !666, line: 105, baseType: !110, size: 128)
!871 = !DIDerivedType(tag: DW_TAG_member, scope: !868, file: !666, line: 106, baseType: !872, size: 128)
!872 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !868, file: !666, line: 106, size: 128, elements: !873)
!873 = !{!874, !875, !876}
!874 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !872, file: !666, line: 107, baseType: !664, size: 64)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !872, file: !666, line: 109, baseType: !205, size: 32, offset: 64)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !872, file: !666, line: 110, baseType: !205, size: 32, offset: 96)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !865, file: !666, line: 117, baseType: !878, size: 64, offset: 128)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 64)
!879 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !666, line: 117, flags: DIFlagFwdDecl)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !865, file: !666, line: 119, baseType: !86, size: 64, offset: 192)
!881 = !DIDerivedType(tag: DW_TAG_member, scope: !865, file: !666, line: 120, baseType: !882, size: 64, offset: 256)
!882 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !865, file: !666, line: 120, size: 64, elements: !883)
!883 = !{!884, !885, !886}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !882, file: !666, line: 121, baseType: !86, size: 64)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !882, file: !666, line: 122, baseType: !98, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_member, scope: !882, file: !666, line: 123, baseType: !887, size: 32)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !882, file: !666, line: 123, size: 32, elements: !888)
!888 = !{!889, !890, !891}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !887, file: !666, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !887, file: !666, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !887, file: !666, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!892 = !DIDerivedType(tag: DW_TAG_member, scope: !670, file: !666, line: 130, baseType: !893, size: 192)
!893 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !670, file: !666, line: 130, size: 192, elements: !894)
!894 = !{!895, !896, !897, !898, !899}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !893, file: !666, line: 131, baseType: !98, size: 64)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !893, file: !666, line: 134, baseType: !369, size: 8, offset: 64)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !893, file: !666, line: 135, baseType: !369, size: 8, offset: 72)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !893, file: !666, line: 136, baseType: !690, size: 32, offset: 96)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !893, file: !666, line: 137, baseType: !7, size: 32, offset: 128)
!900 = !DIDerivedType(tag: DW_TAG_member, scope: !670, file: !666, line: 139, baseType: !901, size: 256)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !670, file: !666, line: 139, size: 256, elements: !902)
!902 = !{!903, !904, !905}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !901, file: !666, line: 140, baseType: !98, size: 64)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !901, file: !666, line: 141, baseType: !690, size: 32, offset: 64)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !901, file: !666, line: 143, baseType: !110, size: 128, offset: 128)
!906 = !DIDerivedType(tag: DW_TAG_member, scope: !670, file: !666, line: 145, baseType: !907, size: 256)
!907 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !670, file: !666, line: 145, size: 256, elements: !908)
!908 = !{!909, !910, !912, !913, !2179}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !907, file: !666, line: 146, baseType: !98, size: 64)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !907, file: !666, line: 147, baseType: !911, size: 64, offset: 64)
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !656, line: 509, baseType: !664)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !907, file: !666, line: 148, baseType: !98, size: 64, offset: 128)
!913 = !DIDerivedType(tag: DW_TAG_member, scope: !907, file: !666, line: 149, baseType: !914, size: 64, offset: 192)
!914 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !907, file: !666, line: 149, size: 64, elements: !915)
!915 = !{!916, !2178}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !914, file: !666, line: 150, baseType: !917, size: 64)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !666, line: 388, size: 7296, elements: !919)
!919 = !{!920, !2174}
!920 = !DIDerivedType(tag: DW_TAG_member, scope: !918, file: !666, line: 389, baseType: !921, size: 7296)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !918, file: !666, line: 389, size: 7296, elements: !922)
!922 = !{!923, !961, !962, !963, !967, !968, !969, !970, !971, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1012, !1020, !1023, !1069, !1070, !2158, !2159, !2162, !2163, !2164, !2167, !2168, !2169, !2172, !2173}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !921, file: !666, line: 390, baseType: !924, size: 64)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !666, line: 305, size: 1472, elements: !926)
!926 = !{!927, !928, !929, !930, !931, !932, !933, !934, !941, !942, !947, !948, !951, !955, !956, !957, !958, !959}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !925, file: !666, line: 308, baseType: !98, size: 64)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !925, file: !666, line: 309, baseType: !98, size: 64, offset: 64)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !925, file: !666, line: 313, baseType: !924, size: 64, offset: 128)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !925, file: !666, line: 313, baseType: !924, size: 64, offset: 192)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !925, file: !666, line: 315, baseType: !703, size: 192, align: 64, offset: 256)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !925, file: !666, line: 323, baseType: !98, size: 64, offset: 448)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !925, file: !666, line: 327, baseType: !917, size: 64, offset: 512)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !925, file: !666, line: 333, baseType: !935, size: 64, offset: 576)
!935 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !656, line: 284, baseType: !936)
!936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !656, line: 284, size: 64, elements: !937)
!937 = !{!938}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !936, file: !656, line: 284, baseType: !939, size: 64)
!939 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !940, line: 19, baseType: !98)
!940 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!941 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !925, file: !666, line: 334, baseType: !98, size: 64, offset: 640)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !925, file: !666, line: 343, baseType: !943, size: 256, offset: 704)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !925, file: !666, line: 340, size: 256, elements: !944)
!944 = !{!945, !946}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !943, file: !666, line: 341, baseType: !703, size: 192, align: 64)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !943, file: !666, line: 342, baseType: !98, size: 64, offset: 192)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !925, file: !666, line: 351, baseType: !110, size: 128, offset: 960)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !925, file: !666, line: 353, baseType: !949, size: 64, offset: 1088)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !666, line: 353, flags: DIFlagFwdDecl)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !925, file: !666, line: 356, baseType: !952, size: 64, offset: 1152)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!953 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !954)
!954 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !666, line: 356, flags: DIFlagFwdDecl)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !925, file: !666, line: 359, baseType: !98, size: 64, offset: 1216)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !925, file: !666, line: 361, baseType: !298, size: 64, offset: 1280)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !925, file: !666, line: 362, baseType: !86, size: 64, offset: 1344)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !925, file: !666, line: 365, baseType: !714, size: 64, offset: 1408)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !925, file: !666, line: 373, baseType: !960, offset: 1472)
!960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !666, line: 296, elements: !193)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !921, file: !666, line: 391, baseType: !699, size: 64, offset: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !921, file: !666, line: 392, baseType: !363, size: 64, offset: 128)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !921, file: !666, line: 394, baseType: !964, size: 64, offset: 192)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64)
!965 = !DISubroutineType(types: !966)
!966 = !{!98, !298, !98, !98, !98, !98}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !921, file: !666, line: 398, baseType: !98, size: 64, offset: 256)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !921, file: !666, line: 399, baseType: !98, size: 64, offset: 320)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !921, file: !666, line: 405, baseType: !98, size: 64, offset: 384)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !921, file: !666, line: 406, baseType: !98, size: 64, offset: 448)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !921, file: !666, line: 407, baseType: !972, size: 64, offset: 512)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 64)
!973 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !656, line: 286, baseType: !974)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 286, size: 64, elements: !975)
!975 = !{!976}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !974, file: !656, line: 286, baseType: !977, size: 64)
!977 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !940, line: 18, baseType: !98)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !921, file: !666, line: 416, baseType: !690, size: 32, offset: 576)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !921, file: !666, line: 428, baseType: !690, size: 32, offset: 608)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !921, file: !666, line: 437, baseType: !690, size: 32, offset: 640)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !921, file: !666, line: 447, baseType: !690, size: 32, offset: 672)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !921, file: !666, line: 450, baseType: !714, size: 64, offset: 704)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !921, file: !666, line: 452, baseType: !205, size: 32, offset: 768)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !921, file: !666, line: 454, baseType: !179, offset: 800)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !921, file: !666, line: 457, baseType: !710, size: 256, offset: 832)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !921, file: !666, line: 459, baseType: !110, size: 128, offset: 1088)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !921, file: !666, line: 466, baseType: !98, size: 64, offset: 1216)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !921, file: !666, line: 467, baseType: !98, size: 64, offset: 1280)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !921, file: !666, line: 469, baseType: !98, size: 64, offset: 1344)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !921, file: !666, line: 470, baseType: !98, size: 64, offset: 1408)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !921, file: !666, line: 471, baseType: !716, size: 64, offset: 1472)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !921, file: !666, line: 472, baseType: !98, size: 64, offset: 1536)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !921, file: !666, line: 473, baseType: !98, size: 64, offset: 1600)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !921, file: !666, line: 474, baseType: !98, size: 64, offset: 1664)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !921, file: !666, line: 475, baseType: !98, size: 64, offset: 1728)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !921, file: !666, line: 477, baseType: !179, offset: 1792)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !921, file: !666, line: 478, baseType: !98, size: 64, offset: 1792)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !921, file: !666, line: 478, baseType: !98, size: 64, offset: 1856)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !921, file: !666, line: 478, baseType: !98, size: 64, offset: 1920)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !921, file: !666, line: 478, baseType: !98, size: 64, offset: 1984)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !921, file: !666, line: 479, baseType: !98, size: 64, offset: 2048)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !921, file: !666, line: 479, baseType: !98, size: 64, offset: 2112)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !921, file: !666, line: 479, baseType: !98, size: 64, offset: 2176)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !921, file: !666, line: 480, baseType: !98, size: 64, offset: 2240)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !921, file: !666, line: 480, baseType: !98, size: 64, offset: 2304)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !921, file: !666, line: 480, baseType: !98, size: 64, offset: 2368)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !921, file: !666, line: 480, baseType: !98, size: 64, offset: 2432)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !921, file: !666, line: 482, baseType: !1009, size: 2816, offset: 2496)
!1009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, size: 2816, elements: !1010)
!1010 = !{!1011}
!1011 = !DISubrange(count: 44)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !921, file: !666, line: 488, baseType: !1013, size: 256, offset: 5312)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1014, line: 60, size: 256, elements: !1015)
!1014 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1015 = !{!1016}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1013, file: !1014, line: 61, baseType: !1017, size: 256)
!1017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !714, size: 256, elements: !1018)
!1018 = !{!1019}
!1019 = !DISubrange(count: 4)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !921, file: !666, line: 490, baseType: !1021, size: 64, offset: 5568)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1022 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !666, line: 490, flags: DIFlagFwdDecl)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !921, file: !666, line: 493, baseType: !1024, size: 896, offset: 5632)
!1024 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1025, line: 53, baseType: !1026)
!1025 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1025, line: 13, size: 896, elements: !1027)
!1027 = !{!1028, !1029, !1030, !1031, !1034, !1035, !1042, !1043, !1063, !1064, !1065}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1026, file: !1025, line: 18, baseType: !363, size: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1026, file: !1025, line: 28, baseType: !716, size: 64, offset: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1026, file: !1025, line: 31, baseType: !710, size: 256, offset: 128)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1026, file: !1025, line: 32, baseType: !1032, size: 64, offset: 384)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1025, line: 32, flags: DIFlagFwdDecl)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1026, file: !1025, line: 37, baseType: !263, size: 16, offset: 448)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1026, file: !1025, line: 40, baseType: !1036, size: 192, offset: 512)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1037, line: 53, size: 192, elements: !1038)
!1037 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1038 = !{!1039, !1040, !1041}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1036, file: !1037, line: 54, baseType: !714, size: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1036, file: !1037, line: 55, baseType: !179, offset: 64)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1036, file: !1037, line: 59, baseType: !110, size: 128, offset: 64)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1026, file: !1025, line: 41, baseType: !86, size: 64, offset: 704)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1026, file: !1025, line: 42, baseType: !1044, size: 64, offset: 768)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1046)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1047, line: 13, size: 896, elements: !1048)
!1047 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1048 = !{!1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1046, file: !1047, line: 14, baseType: !86, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1046, file: !1047, line: 15, baseType: !98, size: 64, offset: 64)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1046, file: !1047, line: 17, baseType: !98, size: 64, offset: 128)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1046, file: !1047, line: 17, baseType: !98, size: 64, offset: 192)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1046, file: !1047, line: 19, baseType: !256, size: 64, offset: 256)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1046, file: !1047, line: 21, baseType: !256, size: 64, offset: 320)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1046, file: !1047, line: 22, baseType: !256, size: 64, offset: 384)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1046, file: !1047, line: 23, baseType: !256, size: 64, offset: 448)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1046, file: !1047, line: 24, baseType: !256, size: 64, offset: 512)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1046, file: !1047, line: 25, baseType: !256, size: 64, offset: 576)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1046, file: !1047, line: 26, baseType: !256, size: 64, offset: 640)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1046, file: !1047, line: 27, baseType: !256, size: 64, offset: 704)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1046, file: !1047, line: 28, baseType: !256, size: 64, offset: 768)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1046, file: !1047, line: 29, baseType: !256, size: 64, offset: 832)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1026, file: !1025, line: 44, baseType: !690, size: 32, offset: 832)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1026, file: !1025, line: 50, baseType: !802, size: 16, offset: 864)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1026, file: !1025, line: 51, baseType: !1066, size: 16, offset: 880)
!1066 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !88, line: 18, baseType: !1067)
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !90, line: 23, baseType: !1068)
!1068 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !921, file: !666, line: 495, baseType: !98, size: 64, offset: 6528)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !921, file: !666, line: 497, baseType: !1071, size: 64, offset: 6592)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !666, line: 381, size: 384, elements: !1073)
!1073 = !{!1074, !1075, !2157}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1072, file: !666, line: 382, baseType: !690, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1072, file: !666, line: 383, baseType: !1076, size: 128, offset: 64)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !666, line: 376, size: 128, elements: !1077)
!1077 = !{!1078, !2155}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1076, file: !666, line: 377, baseType: !1079, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1081, line: 640, size: 48640, elements: !1082)
!1081 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1082 = !{!1083, !1089, !1091, !1092, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1109, !1127, !1138, !1223, !1224, !1225, !1229, !1230, !1232, !1233, !1234, !1235, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1314, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1352, !1354, !1355, !1356, !1368, !1369, !1370, !1371, !1372, !1373, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1397, !1402, !1586, !1587, !1588, !1589, !1593, !1596, !1599, !1602, !1605, !1608, !1710, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1756, !1757, !1758, !1759, !1760, !1765, !1766, !1767, !1770, !1771, !1774, !1777, !1780, !1783, !1826, !1829, !1830, !1909, !1910, !1913, !1914, !1917, !1918, !1919, !1923, !1924, !1925, !1938, !1939, !1940, !1950, !1955, !1958, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1080, file: !1081, line: 646, baseType: !1084, size: 128)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1085, line: 56, size: 128, elements: !1086)
!1085 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1086 = !{!1087, !1088}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1084, file: !1085, line: 57, baseType: !98, size: 64)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1084, file: !1085, line: 58, baseType: !87, size: 32, offset: 64)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1080, file: !1081, line: 649, baseType: !1090, size: 64, offset: 128)
!1090 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !256)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1080, file: !1081, line: 657, baseType: !86, size: 64, offset: 192)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1080, file: !1081, line: 658, baseType: !1093, size: 32, offset: 256)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1094, line: 113, baseType: !1095)
!1094 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1094, line: 111, size: 32, elements: !1096)
!1096 = !{!1097}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1095, file: !1094, line: 112, baseType: !690, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1080, file: !1081, line: 660, baseType: !7, size: 32, offset: 288)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1080, file: !1081, line: 661, baseType: !7, size: 32, offset: 320)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1080, file: !1081, line: 684, baseType: !205, size: 32, offset: 352)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1080, file: !1081, line: 686, baseType: !205, size: 32, offset: 384)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1080, file: !1081, line: 687, baseType: !205, size: 32, offset: 416)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1080, file: !1081, line: 688, baseType: !205, size: 32, offset: 448)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1080, file: !1081, line: 689, baseType: !7, size: 32, offset: 480)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1080, file: !1081, line: 691, baseType: !1106, size: 64, offset: 512)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1108)
!1108 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1081, line: 691, flags: DIFlagFwdDecl)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1080, file: !1081, line: 692, baseType: !1110, size: 832, offset: 576)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1081, line: 451, size: 832, elements: !1111)
!1111 = !{!1112, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1110, file: !1081, line: 453, baseType: !1113, size: 128)
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1081, line: 325, size: 128, elements: !1114)
!1114 = !{!1115, !1116}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1113, file: !1081, line: 326, baseType: !98, size: 64)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1113, file: !1081, line: 327, baseType: !87, size: 32, offset: 64)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1110, file: !1081, line: 454, baseType: !703, size: 192, align: 64, offset: 128)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1110, file: !1081, line: 455, baseType: !110, size: 128, offset: 320)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1110, file: !1081, line: 456, baseType: !7, size: 32, offset: 448)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1110, file: !1081, line: 458, baseType: !363, size: 64, offset: 512)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1110, file: !1081, line: 459, baseType: !363, size: 64, offset: 576)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1110, file: !1081, line: 460, baseType: !363, size: 64, offset: 640)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1110, file: !1081, line: 461, baseType: !363, size: 64, offset: 704)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1110, file: !1081, line: 463, baseType: !363, size: 64, offset: 768)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1110, file: !1081, line: 465, baseType: !1126, offset: 832)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1081, line: 415, elements: !193)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1080, file: !1081, line: 693, baseType: !1128, size: 384, offset: 1408)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1081, line: 489, size: 384, elements: !1129)
!1129 = !{!1130, !1131, !1132, !1133, !1134, !1135, !1136}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1128, file: !1081, line: 490, baseType: !110, size: 128)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1128, file: !1081, line: 491, baseType: !98, size: 64, offset: 128)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1128, file: !1081, line: 492, baseType: !98, size: 64, offset: 192)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1128, file: !1081, line: 493, baseType: !7, size: 32, offset: 256)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1128, file: !1081, line: 494, baseType: !263, size: 16, offset: 288)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1128, file: !1081, line: 495, baseType: !263, size: 16, offset: 304)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1128, file: !1081, line: 497, baseType: !1137, size: 64, offset: 320)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1080, file: !1081, line: 697, baseType: !1139, size: 1792, offset: 1792)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1081, line: 507, size: 1792, elements: !1140)
!1140 = !{!1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1220, !1221}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1139, file: !1081, line: 508, baseType: !703, size: 192, align: 64)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1139, file: !1081, line: 515, baseType: !363, size: 64, offset: 192)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1139, file: !1081, line: 516, baseType: !363, size: 64, offset: 256)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1139, file: !1081, line: 517, baseType: !363, size: 64, offset: 320)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1139, file: !1081, line: 518, baseType: !363, size: 64, offset: 384)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1139, file: !1081, line: 519, baseType: !363, size: 64, offset: 448)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1139, file: !1081, line: 526, baseType: !720, size: 64, offset: 512)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1139, file: !1081, line: 527, baseType: !363, size: 64, offset: 576)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1139, file: !1081, line: 528, baseType: !7, size: 32, offset: 640)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1139, file: !1081, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1139, file: !1081, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1139, file: !1081, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1139, file: !1081, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1139, file: !1081, line: 563, baseType: !1155, size: 512, offset: 704)
!1155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !14, line: 118, size: 512, elements: !1156)
!1156 = !{!1157, !1165, !1166, !1171, !1214, !1217, !1218, !1219}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1155, file: !14, line: 119, baseType: !1158, size: 256)
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1159, line: 9, size: 256, elements: !1160)
!1159 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1160 = !{!1161, !1162}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1158, file: !1159, line: 10, baseType: !703, size: 192, align: 64)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1158, file: !1159, line: 11, baseType: !1163, size: 64, offset: 192)
!1163 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1164, line: 29, baseType: !720)
!1164 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1155, file: !14, line: 120, baseType: !1163, size: 64, offset: 256)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1155, file: !14, line: 121, baseType: !1167, size: 64, offset: 320)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{!13, !1170}
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1155, file: !14, line: 122, baseType: !1172, size: 64, offset: 384)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !14, line: 159, size: 512, align: 512, elements: !1174)
!1174 = !{!1175, !1195, !1196, !1199, !1204, !1205, !1209, !1213}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1173, file: !14, line: 160, baseType: !1176, size: 64)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !14, line: 214, size: 4608, align: 512, elements: !1178)
!1178 = !{!1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1177, file: !14, line: 215, baseType: !723)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1177, file: !14, line: 216, baseType: !7, size: 32)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1177, file: !14, line: 217, baseType: !7, size: 32, offset: 32)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1177, file: !14, line: 218, baseType: !7, size: 32, offset: 64)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1177, file: !14, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1177, file: !14, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1177, file: !14, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1177, file: !14, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1177, file: !14, line: 233, baseType: !1163, size: 64, offset: 128)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1177, file: !14, line: 234, baseType: !1170, size: 64, offset: 192)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1177, file: !14, line: 235, baseType: !1163, size: 64, offset: 256)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1177, file: !14, line: 236, baseType: !1170, size: 64, offset: 320)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1177, file: !14, line: 237, baseType: !1192, size: 4096, offset: 512)
!1192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1173, size: 4096, elements: !1193)
!1193 = !{!1194}
!1194 = !DISubrange(count: 8)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1173, file: !14, line: 161, baseType: !7, size: 32, offset: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1173, file: !14, line: 162, baseType: !1197, size: 32, offset: 96)
!1197 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !102, line: 27, baseType: !1198)
!1198 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !254, line: 96, baseType: !205)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1173, file: !14, line: 163, baseType: !1200, size: 32, offset: 128)
!1200 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !334, line: 276, baseType: !1201)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !334, line: 276, size: 32, elements: !1202)
!1202 = !{!1203}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1201, file: !334, line: 276, baseType: !338, size: 32)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1173, file: !14, line: 164, baseType: !1170, size: 64, offset: 192)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1173, file: !14, line: 165, baseType: !1206, size: 128, offset: 256)
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1159, line: 14, size: 128, elements: !1207)
!1207 = !{!1208}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1206, file: !1159, line: 15, baseType: !695, size: 128)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1173, file: !14, line: 166, baseType: !1210, size: 64, offset: 384)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64)
!1211 = !DISubroutineType(types: !1212)
!1212 = !{!1163}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1173, file: !14, line: 167, baseType: !1163, size: 64, offset: 448)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1155, file: !14, line: 123, baseType: !1215, size: 8, offset: 448)
!1215 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !88, line: 17, baseType: !1216)
!1216 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !90, line: 21, baseType: !369)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1155, file: !14, line: 124, baseType: !1215, size: 8, offset: 456)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1155, file: !14, line: 125, baseType: !1215, size: 8, offset: 464)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1155, file: !14, line: 126, baseType: !1215, size: 8, offset: 472)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1139, file: !1081, line: 572, baseType: !1155, size: 512, offset: 1216)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1139, file: !1081, line: 580, baseType: !1222, size: 64, offset: 1728)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1080, file: !1081, line: 721, baseType: !7, size: 32, offset: 3584)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1080, file: !1081, line: 722, baseType: !205, size: 32, offset: 3616)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1080, file: !1081, line: 723, baseType: !1226, size: 64, offset: 3648)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!1227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1228)
!1228 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !94, line: 17, baseType: !93)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1080, file: !1081, line: 724, baseType: !1228, size: 64, offset: 3712)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1080, file: !1081, line: 749, baseType: !1231, offset: 3776)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1081, line: 290, elements: !193)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1080, file: !1081, line: 751, baseType: !110, size: 128, offset: 3776)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1080, file: !1081, line: 757, baseType: !917, size: 64, offset: 3904)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1080, file: !1081, line: 758, baseType: !917, size: 64, offset: 3968)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1080, file: !1081, line: 761, baseType: !1236, size: 320, offset: 4032)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1014, line: 34, size: 320, elements: !1237)
!1237 = !{!1238, !1239}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1236, file: !1014, line: 35, baseType: !363, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1236, file: !1014, line: 36, baseType: !1240, size: 256, offset: 64)
!1240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !924, size: 256, elements: !1018)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1080, file: !1081, line: 766, baseType: !205, size: 32, offset: 4352)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1080, file: !1081, line: 767, baseType: !205, size: 32, offset: 4384)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1080, file: !1081, line: 768, baseType: !205, size: 32, offset: 4416)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1080, file: !1081, line: 770, baseType: !205, size: 32, offset: 4448)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1080, file: !1081, line: 772, baseType: !98, size: 64, offset: 4480)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1080, file: !1081, line: 775, baseType: !7, size: 32, offset: 4544)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1080, file: !1081, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1080, file: !1081, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1080, file: !1081, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1080, file: !1081, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1080, file: !1081, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1080, file: !1081, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1080, file: !1081, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1080, file: !1081, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1080, file: !1081, line: 831, baseType: !98, size: 64, offset: 4672)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1080, file: !1081, line: 833, baseType: !1257, size: 384, offset: 4736)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !19, line: 25, size: 384, elements: !1258)
!1258 = !{!1259, !1264}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1257, file: !19, line: 26, baseType: !1260, size: 64)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64)
!1261 = !DISubroutineType(types: !1262)
!1262 = !{!256, !1263}
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1264 = !DIDerivedType(tag: DW_TAG_member, scope: !1257, file: !19, line: 27, baseType: !1265, size: 320, offset: 64)
!1265 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1257, file: !19, line: 27, size: 320, elements: !1266)
!1266 = !{!1267, !1277, !1304}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1265, file: !19, line: 36, baseType: !1268, size: 320)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1265, file: !19, line: 29, size: 320, elements: !1269)
!1269 = !{!1270, !1272, !1273, !1274, !1275, !1276}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1268, file: !19, line: 30, baseType: !1271, size: 64)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !87, size: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1268, file: !19, line: 31, baseType: !87, size: 32, offset: 64)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1268, file: !19, line: 32, baseType: !87, size: 32, offset: 96)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1268, file: !19, line: 33, baseType: !87, size: 32, offset: 128)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1268, file: !19, line: 34, baseType: !363, size: 64, offset: 192)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1268, file: !19, line: 35, baseType: !1271, size: 64, offset: 256)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1265, file: !19, line: 46, baseType: !1278, size: 192)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1265, file: !19, line: 38, size: 192, elements: !1279)
!1279 = !{!1280, !1281, !1282, !1303}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1278, file: !19, line: 39, baseType: !1197, size: 32)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1278, file: !19, line: 40, baseType: !18, size: 32, offset: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, scope: !1278, file: !19, line: 41, baseType: !1283, size: 64, offset: 64)
!1283 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1278, file: !19, line: 41, size: 64, elements: !1284)
!1284 = !{!1285, !1293}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1283, file: !19, line: 42, baseType: !1286, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1288, line: 7, size: 128, elements: !1289)
!1288 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1289 = !{!1290, !1292}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1287, file: !1288, line: 8, baseType: !1291, size: 64)
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !254, line: 93, baseType: !473)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1287, file: !1288, line: 9, baseType: !473, size: 64, offset: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1283, file: !19, line: 43, baseType: !1294, size: 64)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1296, line: 7, size: 64, elements: !1297)
!1296 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1297 = !{!1298, !1302}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1295, file: !1296, line: 8, baseType: !1299, size: 32)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1296, line: 5, baseType: !1300)
!1300 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !88, line: 20, baseType: !1301)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !90, line: 26, baseType: !205)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1295, file: !1296, line: 9, baseType: !1300, size: 32, offset: 32)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1278, file: !19, line: 45, baseType: !363, size: 64, offset: 128)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1265, file: !19, line: 54, baseType: !1305, size: 256)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1265, file: !19, line: 48, size: 256, elements: !1306)
!1306 = !{!1307, !1310, !1311, !1312, !1313}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1305, file: !19, line: 49, baseType: !1308, size: 64)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!1309 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !19, line: 14, flags: DIFlagFwdDecl)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1305, file: !19, line: 50, baseType: !205, size: 32, offset: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1305, file: !19, line: 51, baseType: !205, size: 32, offset: 96)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1305, file: !19, line: 52, baseType: !98, size: 64, offset: 128)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1305, file: !19, line: 53, baseType: !98, size: 64, offset: 192)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1080, file: !1081, line: 835, baseType: !1315, size: 32, offset: 5120)
!1315 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !102, line: 22, baseType: !1316)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !254, line: 28, baseType: !205)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1080, file: !1081, line: 836, baseType: !1315, size: 32, offset: 5152)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1080, file: !1081, line: 840, baseType: !98, size: 64, offset: 5184)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1080, file: !1081, line: 849, baseType: !1079, size: 64, offset: 5248)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1080, file: !1081, line: 852, baseType: !1079, size: 64, offset: 5312)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1080, file: !1081, line: 857, baseType: !110, size: 128, offset: 5376)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1080, file: !1081, line: 858, baseType: !110, size: 128, offset: 5504)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1080, file: !1081, line: 859, baseType: !1079, size: 64, offset: 5632)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1080, file: !1081, line: 867, baseType: !110, size: 128, offset: 5696)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1080, file: !1081, line: 868, baseType: !110, size: 128, offset: 5824)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1080, file: !1081, line: 871, baseType: !1327, size: 64, offset: 5952)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !40, line: 59, size: 768, elements: !1329)
!1329 = !{!1330, !1331, !1332, !1333, !1335, !1336, !1343, !1344}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1328, file: !40, line: 61, baseType: !1093, size: 32)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1328, file: !40, line: 62, baseType: !7, size: 32, offset: 32)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1328, file: !40, line: 63, baseType: !179, offset: 64)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1328, file: !40, line: 65, baseType: !1334, size: 256, offset: 64)
!1334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !578, size: 256, elements: !1018)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1328, file: !40, line: 66, baseType: !578, size: 64, offset: 320)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1328, file: !40, line: 68, baseType: !1337, size: 128, offset: 384)
!1337 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1338, line: 40, baseType: !1339)
!1338 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1338, line: 36, size: 128, elements: !1340)
!1340 = !{!1341, !1342}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1339, file: !1338, line: 37, baseType: !179)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1339, file: !1338, line: 38, baseType: !110, size: 128)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1328, file: !40, line: 69, baseType: !311, size: 128, align: 64, offset: 512)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1328, file: !40, line: 70, baseType: !1345, size: 128, offset: 640)
!1345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1346, size: 128, elements: !99)
!1346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !40, line: 54, size: 128, elements: !1347)
!1347 = !{!1348, !1349}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1346, file: !40, line: 55, baseType: !205, size: 32)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1346, file: !40, line: 56, baseType: !1350, size: 64, offset: 64)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64)
!1351 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !40, line: 56, flags: DIFlagFwdDecl)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1080, file: !1081, line: 872, baseType: !1353, size: 512, offset: 6016)
!1353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !582, size: 512, elements: !1018)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1080, file: !1081, line: 873, baseType: !110, size: 128, offset: 6528)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1080, file: !1081, line: 874, baseType: !110, size: 128, offset: 6656)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1080, file: !1081, line: 876, baseType: !1357, size: 64, offset: 6784)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1359, line: 26, size: 192, elements: !1360)
!1359 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1360 = !{!1361, !1362}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1358, file: !1359, line: 27, baseType: !7, size: 32)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1358, file: !1359, line: 28, baseType: !1363, size: 128, offset: 64)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1364, line: 43, size: 128, elements: !1365)
!1364 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1365 = !{!1366, !1367}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1363, file: !1364, line: 44, baseType: !723)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1363, file: !1364, line: 45, baseType: !110, size: 128)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1080, file: !1081, line: 879, baseType: !648, size: 64, offset: 6848)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1080, file: !1081, line: 882, baseType: !648, size: 64, offset: 6912)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1080, file: !1081, line: 884, baseType: !363, size: 64, offset: 6976)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1080, file: !1081, line: 885, baseType: !363, size: 64, offset: 7040)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1080, file: !1081, line: 890, baseType: !363, size: 64, offset: 7104)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1080, file: !1081, line: 891, baseType: !1374, size: 128, offset: 7168)
!1374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1081, line: 242, size: 128, elements: !1375)
!1375 = !{!1376, !1377, !1378}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1374, file: !1081, line: 244, baseType: !363, size: 64)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1374, file: !1081, line: 245, baseType: !363, size: 64, offset: 64)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1374, file: !1081, line: 246, baseType: !723, offset: 128)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1080, file: !1081, line: 900, baseType: !98, size: 64, offset: 7296)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1080, file: !1081, line: 901, baseType: !98, size: 64, offset: 7360)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1080, file: !1081, line: 904, baseType: !363, size: 64, offset: 7424)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1080, file: !1081, line: 907, baseType: !363, size: 64, offset: 7488)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1080, file: !1081, line: 910, baseType: !98, size: 64, offset: 7552)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1080, file: !1081, line: 911, baseType: !98, size: 64, offset: 7616)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1080, file: !1081, line: 914, baseType: !1386, size: 640, offset: 7680)
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1387, line: 123, size: 640, elements: !1388)
!1387 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1388 = !{!1389, !1395, !1396}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1386, file: !1387, line: 124, baseType: !1390, size: 576)
!1390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1391, size: 576, elements: !222)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1387, line: 108, size: 192, elements: !1392)
!1392 = !{!1393, !1394}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1391, file: !1387, line: 109, baseType: !363, size: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1391, file: !1387, line: 110, baseType: !1206, size: 128, offset: 64)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1386, file: !1387, line: 125, baseType: !7, size: 32, offset: 576)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1386, file: !1387, line: 126, baseType: !7, size: 32, offset: 608)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1080, file: !1081, line: 917, baseType: !1398, size: 192, offset: 8320)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1387, line: 134, size: 192, elements: !1399)
!1399 = !{!1400, !1401}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1398, file: !1387, line: 135, baseType: !311, size: 128, align: 64)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1398, file: !1387, line: 136, baseType: !7, size: 32, offset: 128)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1080, file: !1081, line: 923, baseType: !1403, size: 64, offset: 8512)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1405)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1406, line: 111, size: 1280, elements: !1407)
!1406 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1407 = !{!1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1427, !1428, !1429, !1430, !1431, !1432, !1539, !1540, !1541, !1542, !1568, !1571, !1581}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1405, file: !1406, line: 112, baseType: !690, size: 32)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1405, file: !1406, line: 120, baseType: !377, size: 32, offset: 32)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1405, file: !1406, line: 121, baseType: !385, size: 32, offset: 64)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1405, file: !1406, line: 122, baseType: !377, size: 32, offset: 96)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1405, file: !1406, line: 123, baseType: !385, size: 32, offset: 128)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1405, file: !1406, line: 124, baseType: !377, size: 32, offset: 160)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1405, file: !1406, line: 125, baseType: !385, size: 32, offset: 192)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1405, file: !1406, line: 126, baseType: !377, size: 32, offset: 224)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1405, file: !1406, line: 127, baseType: !385, size: 32, offset: 256)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1405, file: !1406, line: 128, baseType: !7, size: 32, offset: 288)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1405, file: !1406, line: 129, baseType: !1419, size: 64, offset: 320)
!1419 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1420, line: 26, baseType: !1421)
!1420 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1420, line: 24, size: 64, elements: !1422)
!1422 = !{!1423}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1421, file: !1420, line: 25, baseType: !1424, size: 64)
!1424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 64, elements: !1425)
!1425 = !{!1426}
!1426 = !DISubrange(count: 2)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1405, file: !1406, line: 130, baseType: !1419, size: 64, offset: 384)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1405, file: !1406, line: 131, baseType: !1419, size: 64, offset: 448)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1405, file: !1406, line: 132, baseType: !1419, size: 64, offset: 512)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1405, file: !1406, line: 133, baseType: !1419, size: 64, offset: 576)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1405, file: !1406, line: 135, baseType: !369, size: 8, offset: 640)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1405, file: !1406, line: 137, baseType: !1433, size: 64, offset: 704)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 64)
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1435, line: 189, size: 1664, elements: !1436)
!1435 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1436 = !{!1437, !1438, !1441, !1446, !1447, !1450, !1451, !1456, !1457, !1458, !1459, !1461, !1462, !1463, !1464, !1465, !1503, !1524}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1434, file: !1435, line: 190, baseType: !1093, size: 32)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1434, file: !1435, line: 191, baseType: !1439, size: 32, offset: 32)
!1439 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1435, line: 28, baseType: !1440)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !102, line: 98, baseType: !1300)
!1441 = !DIDerivedType(tag: DW_TAG_member, scope: !1434, file: !1435, line: 192, baseType: !1442, size: 192, offset: 64)
!1442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1434, file: !1435, line: 192, size: 192, elements: !1443)
!1443 = !{!1444, !1445}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1442, file: !1435, line: 193, baseType: !110, size: 128)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1442, file: !1435, line: 194, baseType: !703, size: 192, align: 64)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1434, file: !1435, line: 199, baseType: !710, size: 256, offset: 256)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1434, file: !1435, line: 200, baseType: !1448, size: 64, offset: 512)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64)
!1449 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1435, line: 200, flags: DIFlagFwdDecl)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1434, file: !1435, line: 201, baseType: !86, size: 64, offset: 576)
!1451 = !DIDerivedType(tag: DW_TAG_member, scope: !1434, file: !1435, line: 202, baseType: !1452, size: 64, offset: 640)
!1452 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1434, file: !1435, line: 202, size: 64, elements: !1453)
!1453 = !{!1454, !1455}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1452, file: !1435, line: 203, baseType: !479, size: 64)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1452, file: !1435, line: 204, baseType: !479, size: 64)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1434, file: !1435, line: 206, baseType: !479, size: 64, offset: 704)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1434, file: !1435, line: 207, baseType: !377, size: 32, offset: 768)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1434, file: !1435, line: 208, baseType: !385, size: 32, offset: 800)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1434, file: !1435, line: 209, baseType: !1460, size: 32, offset: 832)
!1460 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1435, line: 31, baseType: !499)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1434, file: !1435, line: 210, baseType: !263, size: 16, offset: 864)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1434, file: !1435, line: 211, baseType: !263, size: 16, offset: 880)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1434, file: !1435, line: 215, baseType: !1068, size: 16, offset: 896)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1434, file: !1435, line: 222, baseType: !98, size: 64, offset: 960)
!1465 = !DIDerivedType(tag: DW_TAG_member, scope: !1434, file: !1435, line: 239, baseType: !1466, size: 320, offset: 1024)
!1466 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1434, file: !1435, line: 239, size: 320, elements: !1467)
!1467 = !{!1468, !1495}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1466, file: !1435, line: 240, baseType: !1469, size: 320)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1435, line: 108, size: 320, elements: !1470)
!1470 = !{!1471, !1472, !1484, !1487, !1494}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1469, file: !1435, line: 110, baseType: !98, size: 64)
!1472 = !DIDerivedType(tag: DW_TAG_member, scope: !1469, file: !1435, line: 111, baseType: !1473, size: 64, offset: 64)
!1473 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1469, file: !1435, line: 111, size: 64, elements: !1474)
!1474 = !{!1475, !1483}
!1475 = !DIDerivedType(tag: DW_TAG_member, scope: !1473, file: !1435, line: 112, baseType: !1476, size: 64)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1473, file: !1435, line: 112, size: 64, elements: !1477)
!1477 = !{!1478, !1479}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1476, file: !1435, line: 114, baseType: !802, size: 16)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1476, file: !1435, line: 115, baseType: !1480, size: 48, offset: 16)
!1480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 48, elements: !1481)
!1481 = !{!1482}
!1482 = !DISubrange(count: 6)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1473, file: !1435, line: 121, baseType: !98, size: 64)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1469, file: !1435, line: 123, baseType: !1485, size: 64, offset: 128)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64)
!1486 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1435, line: 96, flags: DIFlagFwdDecl)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1469, file: !1435, line: 124, baseType: !1488, size: 64, offset: 192)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64)
!1489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1435, line: 102, size: 192, elements: !1490)
!1490 = !{!1491, !1492, !1493}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1489, file: !1435, line: 103, baseType: !311, size: 128, align: 64)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1489, file: !1435, line: 104, baseType: !1093, size: 32, offset: 128)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1489, file: !1435, line: 105, baseType: !151, size: 8, offset: 160)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1469, file: !1435, line: 125, baseType: !116, size: 64, offset: 256)
!1495 = !DIDerivedType(tag: DW_TAG_member, scope: !1466, file: !1435, line: 241, baseType: !1496, size: 320)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1466, file: !1435, line: 241, size: 320, elements: !1497)
!1497 = !{!1498, !1499, !1500, !1501, !1502}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1496, file: !1435, line: 242, baseType: !98, size: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1496, file: !1435, line: 243, baseType: !98, size: 64, offset: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1496, file: !1435, line: 244, baseType: !1485, size: 64, offset: 128)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1496, file: !1435, line: 245, baseType: !1488, size: 64, offset: 192)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1496, file: !1435, line: 246, baseType: !221, size: 64, offset: 256)
!1503 = !DIDerivedType(tag: DW_TAG_member, scope: !1434, file: !1435, line: 254, baseType: !1504, size: 256, offset: 1344)
!1504 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1434, file: !1435, line: 254, size: 256, elements: !1505)
!1505 = !{!1506, !1512}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1504, file: !1435, line: 255, baseType: !1507, size: 256)
!1507 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1435, line: 128, size: 256, elements: !1508)
!1508 = !{!1509, !1510}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1507, file: !1435, line: 129, baseType: !86, size: 64)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1507, file: !1435, line: 130, baseType: !1511, size: 256)
!1511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !86, size: 256, elements: !1018)
!1512 = !DIDerivedType(tag: DW_TAG_member, scope: !1504, file: !1435, line: 256, baseType: !1513, size: 256)
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1504, file: !1435, line: 256, size: 256, elements: !1514)
!1514 = !{!1515, !1516}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1513, file: !1435, line: 258, baseType: !110, size: 128)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1513, file: !1435, line: 259, baseType: !1517, size: 128, offset: 128)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1518, line: 22, size: 128, elements: !1519)
!1518 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1519 = !{!1520, !1523}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1517, file: !1518, line: 23, baseType: !1521, size: 64)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!1522 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1518, line: 23, flags: DIFlagFwdDecl)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1517, file: !1518, line: 24, baseType: !98, size: 64, offset: 64)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1434, file: !1435, line: 274, baseType: !1525, size: 64, offset: 1600)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1435, line: 170, size: 192, elements: !1527)
!1527 = !{!1528, !1537, !1538}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1526, file: !1435, line: 171, baseType: !1529, size: 64)
!1529 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1435, line: 165, baseType: !1530)
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 64)
!1531 = !DISubroutineType(types: !1532)
!1532 = !{!205, !1433, !1533, !1535, !1433}
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64)
!1534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1486)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 64)
!1536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1507)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1526, file: !1435, line: 172, baseType: !1433, size: 64, offset: 64)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1526, file: !1435, line: 173, baseType: !1485, size: 64, offset: 128)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1405, file: !1406, line: 138, baseType: !1433, size: 64, offset: 768)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1405, file: !1406, line: 139, baseType: !1433, size: 64, offset: 832)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1405, file: !1406, line: 140, baseType: !1433, size: 64, offset: 896)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1405, file: !1406, line: 145, baseType: !1543, size: 64, offset: 960)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64)
!1544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1545, line: 13, size: 896, elements: !1546)
!1545 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1546 = !{!1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1544, file: !1545, line: 14, baseType: !1093, size: 32)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1544, file: !1545, line: 15, baseType: !690, size: 32, offset: 32)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1544, file: !1545, line: 16, baseType: !690, size: 32, offset: 64)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1544, file: !1545, line: 21, baseType: !714, size: 64, offset: 128)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1544, file: !1545, line: 27, baseType: !98, size: 64, offset: 192)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1544, file: !1545, line: 28, baseType: !98, size: 64, offset: 256)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1544, file: !1545, line: 29, baseType: !714, size: 64, offset: 320)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1544, file: !1545, line: 32, baseType: !582, size: 128, offset: 384)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1544, file: !1545, line: 33, baseType: !377, size: 32, offset: 512)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1544, file: !1545, line: 37, baseType: !714, size: 64, offset: 576)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1544, file: !1545, line: 44, baseType: !1558, size: 256, offset: 640)
!1558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1559, line: 15, size: 256, elements: !1560)
!1559 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1560 = !{!1561, !1562, !1563, !1564, !1565, !1566, !1567}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1558, file: !1559, line: 16, baseType: !723)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1558, file: !1559, line: 18, baseType: !205, size: 32)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1558, file: !1559, line: 19, baseType: !205, size: 32, offset: 32)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1558, file: !1559, line: 20, baseType: !205, size: 32, offset: 64)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1558, file: !1559, line: 21, baseType: !205, size: 32, offset: 96)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1558, file: !1559, line: 22, baseType: !98, size: 64, offset: 128)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1558, file: !1559, line: 23, baseType: !98, size: 64, offset: 192)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1405, file: !1406, line: 146, baseType: !1569, size: 64, offset: 1024)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64)
!1570 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !378, line: 18, flags: DIFlagFwdDecl)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1405, file: !1406, line: 147, baseType: !1572, size: 64, offset: 1088)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 64)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1406, line: 25, size: 64, elements: !1574)
!1574 = !{!1575, !1576, !1577}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1573, file: !1406, line: 26, baseType: !690, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1573, file: !1406, line: 27, baseType: !205, size: 32, offset: 32)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1573, file: !1406, line: 28, baseType: !1578, offset: 64)
!1578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !385, elements: !1579)
!1579 = !{!1580}
!1580 = !DISubrange(count: 0)
!1581 = !DIDerivedType(tag: DW_TAG_member, scope: !1405, file: !1406, line: 149, baseType: !1582, size: 128, offset: 1152)
!1582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1405, file: !1406, line: 149, size: 128, elements: !1583)
!1583 = !{!1584, !1585}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1582, file: !1406, line: 150, baseType: !205, size: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1582, file: !1406, line: 151, baseType: !311, size: 128, align: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1080, file: !1081, line: 926, baseType: !1403, size: 64, offset: 8576)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1080, file: !1081, line: 929, baseType: !1403, size: 64, offset: 8640)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1080, file: !1081, line: 933, baseType: !1433, size: 64, offset: 8704)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1080, file: !1081, line: 943, baseType: !1590, size: 128, offset: 8768)
!1590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 128, elements: !1591)
!1591 = !{!1592}
!1592 = !DISubrange(count: 16)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1080, file: !1081, line: 945, baseType: !1594, size: 64, offset: 8896)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 64)
!1595 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1081, line: 49, flags: DIFlagFwdDecl)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1080, file: !1081, line: 956, baseType: !1597, size: 64, offset: 8960)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64)
!1598 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1081, line: 45, flags: DIFlagFwdDecl)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1080, file: !1081, line: 959, baseType: !1600, size: 64, offset: 9024)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64)
!1601 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1081, line: 959, flags: DIFlagFwdDecl)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1080, file: !1081, line: 962, baseType: !1603, size: 64, offset: 9088)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1081, line: 66, flags: DIFlagFwdDecl)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1080, file: !1081, line: 966, baseType: !1606, size: 64, offset: 9152)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 64)
!1607 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1081, line: 50, flags: DIFlagFwdDecl)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1080, file: !1081, line: 969, baseType: !1609, size: 64, offset: 9216)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 64)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1611, line: 82, size: 7296, elements: !1612)
!1611 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1612 = !{!1613, !1614, !1615, !1616, !1617, !1618, !1619, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1648, !1657, !1658, !1660, !1661, !1662, !1666, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1696, !1697, !1704, !1705, !1706, !1707, !1708, !1709}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1610, file: !1611, line: 83, baseType: !1093, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1610, file: !1611, line: 84, baseType: !690, size: 32, offset: 32)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1610, file: !1611, line: 85, baseType: !205, size: 32, offset: 64)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1610, file: !1611, line: 86, baseType: !110, size: 128, offset: 128)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1610, file: !1611, line: 88, baseType: !1337, size: 128, offset: 256)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1610, file: !1611, line: 91, baseType: !1079, size: 64, offset: 384)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1610, file: !1611, line: 94, baseType: !1620, size: 192, offset: 448)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1621, line: 30, size: 192, elements: !1622)
!1621 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1622 = !{!1623, !1624}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1620, file: !1621, line: 31, baseType: !110, size: 128)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1620, file: !1621, line: 32, baseType: !1625, size: 64, offset: 128)
!1625 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1626, line: 25, baseType: !1627)
!1626 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1627 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1626, line: 23, size: 64, elements: !1628)
!1628 = !{!1629}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1627, file: !1626, line: 24, baseType: !97, size: 64)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1610, file: !1611, line: 97, baseType: !578, size: 64, offset: 640)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1610, file: !1611, line: 100, baseType: !205, size: 32, offset: 704)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1610, file: !1611, line: 106, baseType: !205, size: 32, offset: 736)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1610, file: !1611, line: 107, baseType: !1079, size: 64, offset: 768)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1610, file: !1611, line: 110, baseType: !205, size: 32, offset: 832)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1610, file: !1611, line: 111, baseType: !7, size: 32, offset: 864)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1610, file: !1611, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1610, file: !1611, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1610, file: !1611, line: 128, baseType: !205, size: 32, offset: 928)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1610, file: !1611, line: 129, baseType: !110, size: 128, offset: 960)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1610, file: !1611, line: 132, baseType: !1155, size: 512, offset: 1088)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1610, file: !1611, line: 133, baseType: !1163, size: 64, offset: 1600)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1610, file: !1611, line: 140, baseType: !1643, size: 256, offset: 1664)
!1643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1644, size: 256, elements: !1425)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1611, line: 38, size: 128, elements: !1645)
!1645 = !{!1646, !1647}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1644, file: !1611, line: 39, baseType: !363, size: 64)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1644, file: !1611, line: 40, baseType: !363, size: 64, offset: 64)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1610, file: !1611, line: 146, baseType: !1649, size: 192, offset: 1920)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1611, line: 66, size: 192, elements: !1650)
!1650 = !{!1651}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1649, file: !1611, line: 67, baseType: !1652, size: 192)
!1652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1611, line: 47, size: 192, elements: !1653)
!1653 = !{!1654, !1655, !1656}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1652, file: !1611, line: 48, baseType: !716, size: 64)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1652, file: !1611, line: 49, baseType: !716, size: 64, offset: 64)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1652, file: !1611, line: 50, baseType: !716, size: 64, offset: 128)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1610, file: !1611, line: 150, baseType: !1386, size: 640, offset: 2112)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1610, file: !1611, line: 153, baseType: !1659, size: 256, offset: 2752)
!1659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1327, size: 256, elements: !1018)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1610, file: !1611, line: 159, baseType: !1327, size: 64, offset: 3008)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1610, file: !1611, line: 162, baseType: !205, size: 32, offset: 3072)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1610, file: !1611, line: 164, baseType: !1663, size: 64, offset: 3136)
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 64)
!1664 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1665, line: 24, flags: DIFlagFwdDecl)
!1665 = !DIFile(filename: "./include/linux/console.h", directory: "/home/lizy2001/genbc/linux")
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1610, file: !1611, line: 175, baseType: !1667, size: 32, offset: 3200)
!1667 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !334, line: 805, baseType: !1668)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !334, line: 798, size: 32, elements: !1669)
!1669 = !{!1670, !1671}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1668, file: !334, line: 803, baseType: !333, size: 32)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1668, file: !334, line: 804, baseType: !179, offset: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1610, file: !1611, line: 176, baseType: !363, size: 64, offset: 3264)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1610, file: !1611, line: 176, baseType: !363, size: 64, offset: 3328)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1610, file: !1611, line: 176, baseType: !363, size: 64, offset: 3392)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1610, file: !1611, line: 176, baseType: !363, size: 64, offset: 3456)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1610, file: !1611, line: 177, baseType: !363, size: 64, offset: 3520)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1610, file: !1611, line: 178, baseType: !363, size: 64, offset: 3584)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1610, file: !1611, line: 179, baseType: !1374, size: 128, offset: 3648)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1610, file: !1611, line: 180, baseType: !98, size: 64, offset: 3776)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1610, file: !1611, line: 180, baseType: !98, size: 64, offset: 3840)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1610, file: !1611, line: 180, baseType: !98, size: 64, offset: 3904)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1610, file: !1611, line: 180, baseType: !98, size: 64, offset: 3968)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1610, file: !1611, line: 181, baseType: !98, size: 64, offset: 4032)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1610, file: !1611, line: 181, baseType: !98, size: 64, offset: 4096)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1610, file: !1611, line: 181, baseType: !98, size: 64, offset: 4160)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1610, file: !1611, line: 181, baseType: !98, size: 64, offset: 4224)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1610, file: !1611, line: 182, baseType: !98, size: 64, offset: 4288)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1610, file: !1611, line: 182, baseType: !98, size: 64, offset: 4352)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1610, file: !1611, line: 182, baseType: !98, size: 64, offset: 4416)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1610, file: !1611, line: 182, baseType: !98, size: 64, offset: 4480)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1610, file: !1611, line: 183, baseType: !98, size: 64, offset: 4544)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1610, file: !1611, line: 183, baseType: !98, size: 64, offset: 4608)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1610, file: !1611, line: 184, baseType: !1694, offset: 4672)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1695, line: 12, elements: !193)
!1695 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1610, file: !1611, line: 192, baseType: !365, size: 64, offset: 4672)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1610, file: !1611, line: 203, baseType: !1698, size: 2048, offset: 4736)
!1698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1699, size: 2048, elements: !1591)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1700, line: 43, size: 128, elements: !1701)
!1700 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1701 = !{!1702, !1703}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1699, file: !1700, line: 44, baseType: !270, size: 64)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1699, file: !1700, line: 45, baseType: !270, size: 64, offset: 64)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1610, file: !1611, line: 220, baseType: !151, size: 8, offset: 6784)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1610, file: !1611, line: 221, baseType: !1068, size: 16, offset: 6800)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1610, file: !1611, line: 222, baseType: !1068, size: 16, offset: 6816)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1610, file: !1611, line: 224, baseType: !917, size: 64, offset: 6848)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1610, file: !1611, line: 227, baseType: !1036, size: 192, offset: 6912)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1610, file: !1611, line: 233, baseType: !1036, size: 192, offset: 7104)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1080, file: !1081, line: 970, baseType: !1711, size: 64, offset: 9280)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 64)
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1611, line: 20, size: 16576, elements: !1713)
!1713 = !{!1714, !1715, !1716, !1717}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1712, file: !1611, line: 21, baseType: !179)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1712, file: !1611, line: 22, baseType: !1093, size: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1712, file: !1611, line: 23, baseType: !1337, size: 128, offset: 64)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1712, file: !1611, line: 24, baseType: !1718, size: 16384, offset: 192)
!1718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1719, size: 16384, elements: !226)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1621, line: 49, size: 256, elements: !1720)
!1720 = !{!1721}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1719, file: !1621, line: 50, baseType: !1722, size: 256)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1621, line: 35, size: 256, elements: !1723)
!1723 = !{!1724, !1731, !1732, !1738}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1722, file: !1621, line: 37, baseType: !1725, size: 64)
!1725 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1726, line: 19, baseType: !1727)
!1726 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 64)
!1728 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1726, line: 18, baseType: !1729)
!1729 = !DISubroutineType(types: !1730)
!1730 = !{null, !205}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1722, file: !1621, line: 38, baseType: !98, size: 64, offset: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1722, file: !1621, line: 44, baseType: !1733, size: 64, offset: 128)
!1733 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1726, line: 22, baseType: !1734)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64)
!1735 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1726, line: 21, baseType: !1736)
!1736 = !DISubroutineType(types: !1737)
!1737 = !{null}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1722, file: !1621, line: 46, baseType: !1625, size: 64, offset: 192)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1080, file: !1081, line: 971, baseType: !1625, size: 64, offset: 9344)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1080, file: !1081, line: 972, baseType: !1625, size: 64, offset: 9408)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1080, file: !1081, line: 974, baseType: !1625, size: 64, offset: 9472)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1080, file: !1081, line: 975, baseType: !1620, size: 192, offset: 9536)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1080, file: !1081, line: 976, baseType: !98, size: 64, offset: 9728)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1080, file: !1081, line: 977, baseType: !268, size: 64, offset: 9792)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1080, file: !1081, line: 978, baseType: !7, size: 32, offset: 9856)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1080, file: !1081, line: 980, baseType: !314, size: 64, offset: 9920)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1080, file: !1081, line: 989, baseType: !1748, size: 128, offset: 9984)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1749, line: 35, size: 128, elements: !1750)
!1749 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1750 = !{!1751, !1752, !1753}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1748, file: !1749, line: 36, baseType: !205, size: 32)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1748, file: !1749, line: 37, baseType: !690, size: 32, offset: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1748, file: !1749, line: 38, baseType: !1754, size: 64, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64)
!1755 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1749, line: 23, flags: DIFlagFwdDecl)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1080, file: !1081, line: 992, baseType: !363, size: 64, offset: 10112)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1080, file: !1081, line: 993, baseType: !363, size: 64, offset: 10176)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1080, file: !1081, line: 996, baseType: !179, offset: 10240)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1080, file: !1081, line: 999, baseType: !723, offset: 10240)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1080, file: !1081, line: 1001, baseType: !1761, size: 64, offset: 10240)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1081, line: 636, size: 64, elements: !1762)
!1762 = !{!1763}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1761, file: !1081, line: 637, baseType: !1764, size: 64)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1080, file: !1081, line: 1005, baseType: !695, size: 128, offset: 10304)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1080, file: !1081, line: 1007, baseType: !1079, size: 64, offset: 10432)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1080, file: !1081, line: 1009, baseType: !1768, size: 64, offset: 10496)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 64)
!1769 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1081, line: 1009, flags: DIFlagFwdDecl)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1080, file: !1081, line: 1043, baseType: !86, size: 64, offset: 10560)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1080, file: !1081, line: 1046, baseType: !1772, size: 64, offset: 10624)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1081, line: 41, flags: DIFlagFwdDecl)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1080, file: !1081, line: 1050, baseType: !1775, size: 64, offset: 10688)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 64)
!1776 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1081, line: 42, flags: DIFlagFwdDecl)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1080, file: !1081, line: 1054, baseType: !1778, size: 64, offset: 10752)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 64)
!1779 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1081, line: 55, flags: DIFlagFwdDecl)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1080, file: !1081, line: 1056, baseType: !1781, size: 64, offset: 10816)
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 64)
!1782 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1081, line: 40, flags: DIFlagFwdDecl)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1080, file: !1081, line: 1058, baseType: !1784, size: 64, offset: 10880)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1786, line: 99, size: 704, elements: !1787)
!1786 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1787 = !{!1788, !1789, !1790, !1791, !1792, !1793, !1794, !1813, !1814}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1785, file: !1786, line: 100, baseType: !714, size: 64)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1785, file: !1786, line: 101, baseType: !690, size: 32, offset: 64)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1785, file: !1786, line: 102, baseType: !690, size: 32, offset: 96)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1785, file: !1786, line: 105, baseType: !179, offset: 128)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1785, file: !1786, line: 107, baseType: !263, size: 16, offset: 128)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1785, file: !1786, line: 109, baseType: !682, size: 128, offset: 192)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1785, file: !1786, line: 110, baseType: !1795, size: 64, offset: 320)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1786, line: 73, size: 448, elements: !1797)
!1797 = !{!1798, !1801, !1802, !1807, !1812}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1796, file: !1786, line: 74, baseType: !1799, size: 64)
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 64)
!1800 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !1786, line: 74, flags: DIFlagFwdDecl)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !1796, file: !1786, line: 75, baseType: !1784, size: 64, offset: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, scope: !1796, file: !1786, line: 83, baseType: !1803, size: 128, offset: 128)
!1803 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1796, file: !1786, line: 83, size: 128, elements: !1804)
!1804 = !{!1805, !1806}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !1803, file: !1786, line: 84, baseType: !110, size: 128)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !1803, file: !1786, line: 85, baseType: !878, size: 64)
!1807 = !DIDerivedType(tag: DW_TAG_member, scope: !1796, file: !1786, line: 87, baseType: !1808, size: 128, offset: 256)
!1808 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1796, file: !1786, line: 87, size: 128, elements: !1809)
!1809 = !{!1810, !1811}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !1808, file: !1786, line: 88, baseType: !582, size: 128)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !1808, file: !1786, line: 89, baseType: !311, size: 128, align: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1796, file: !1786, line: 92, baseType: !7, size: 32, offset: 384)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1785, file: !1786, line: 111, baseType: !578, size: 64, offset: 384)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1785, file: !1786, line: 113, baseType: !1815, size: 256, offset: 448)
!1815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1816, line: 102, size: 256, elements: !1817)
!1816 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1817 = !{!1818, !1819, !1820}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1815, file: !1816, line: 103, baseType: !714, size: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1815, file: !1816, line: 104, baseType: !110, size: 128, offset: 64)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1815, file: !1816, line: 105, baseType: !1821, size: 64, offset: 192)
!1821 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1816, line: 21, baseType: !1822)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 64)
!1823 = !DISubroutineType(types: !1824)
!1824 = !{null, !1825}
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 64)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1080, file: !1081, line: 1061, baseType: !1827, size: 64, offset: 10944)
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 64)
!1828 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1081, line: 43, flags: DIFlagFwdDecl)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1080, file: !1081, line: 1064, baseType: !98, size: 64, offset: 11008)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1080, file: !1081, line: 1065, baseType: !1831, size: 64, offset: 11072)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64)
!1832 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1621, line: 14, baseType: !1833)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1621, line: 12, size: 384, elements: !1834)
!1834 = !{!1835}
!1835 = !DIDerivedType(tag: DW_TAG_member, scope: !1833, file: !1621, line: 13, baseType: !1836, size: 384)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1833, file: !1621, line: 13, size: 384, elements: !1837)
!1837 = !{!1838, !1839, !1840, !1841}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !1836, file: !1621, line: 13, baseType: !205, size: 32)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !1836, file: !1621, line: 13, baseType: !205, size: 32, offset: 32)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !1836, file: !1621, line: 13, baseType: !205, size: 32, offset: 64)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !1836, file: !1621, line: 13, baseType: !1842, size: 256, offset: 128)
!1842 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !1843, line: 32, size: 256, elements: !1844)
!1843 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!1844 = !{!1845, !1850, !1863, !1869, !1878, !1898, !1903}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !1842, file: !1843, line: 37, baseType: !1846, size: 64)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1842, file: !1843, line: 34, size: 64, elements: !1847)
!1847 = !{!1848, !1849}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1846, file: !1843, line: 35, baseType: !1316, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1846, file: !1843, line: 36, baseType: !383, size: 32, offset: 32)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !1842, file: !1843, line: 45, baseType: !1851, size: 192)
!1851 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1842, file: !1843, line: 40, size: 192, elements: !1852)
!1852 = !{!1853, !1855, !1856, !1862}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !1851, file: !1843, line: 41, baseType: !1854, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !254, line: 95, baseType: !205)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !1851, file: !1843, line: 42, baseType: !205, size: 32, offset: 32)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1851, file: !1843, line: 43, baseType: !1857, size: 64, offset: 64)
!1857 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !1843, line: 11, baseType: !1858)
!1858 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !1843, line: 8, size: 64, elements: !1859)
!1859 = !{!1860, !1861}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !1858, file: !1843, line: 9, baseType: !205, size: 32)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !1858, file: !1843, line: 10, baseType: !86, size: 64)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !1851, file: !1843, line: 44, baseType: !205, size: 32, offset: 128)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !1842, file: !1843, line: 52, baseType: !1864, size: 128)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1842, file: !1843, line: 48, size: 128, elements: !1865)
!1865 = !{!1866, !1867, !1868}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1864, file: !1843, line: 49, baseType: !1316, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1864, file: !1843, line: 50, baseType: !383, size: 32, offset: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1864, file: !1843, line: 51, baseType: !1857, size: 64, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !1842, file: !1843, line: 61, baseType: !1870, size: 256)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1842, file: !1843, line: 55, size: 256, elements: !1871)
!1871 = !{!1872, !1873, !1874, !1875, !1877}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1870, file: !1843, line: 56, baseType: !1316, size: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1870, file: !1843, line: 57, baseType: !383, size: 32, offset: 32)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !1870, file: !1843, line: 58, baseType: !205, size: 32, offset: 64)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !1870, file: !1843, line: 59, baseType: !1876, size: 64, offset: 128)
!1876 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !254, line: 94, baseType: !255)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !1870, file: !1843, line: 60, baseType: !1876, size: 64, offset: 192)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !1842, file: !1843, line: 95, baseType: !1879, size: 256)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1842, file: !1843, line: 64, size: 256, elements: !1880)
!1880 = !{!1881, !1882}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !1879, file: !1843, line: 65, baseType: !86, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_member, scope: !1879, file: !1843, line: 77, baseType: !1883, size: 192, offset: 64)
!1883 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1879, file: !1843, line: 77, size: 192, elements: !1884)
!1884 = !{!1885, !1886, !1893}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !1883, file: !1843, line: 82, baseType: !1068, size: 16)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !1883, file: !1843, line: 88, baseType: !1887, size: 192)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1883, file: !1843, line: 84, size: 192, elements: !1888)
!1888 = !{!1889, !1891, !1892}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !1887, file: !1843, line: 85, baseType: !1890, size: 64)
!1890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 64, elements: !1193)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !1887, file: !1843, line: 86, baseType: !86, size: 64, offset: 64)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !1887, file: !1843, line: 87, baseType: !86, size: 64, offset: 128)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !1883, file: !1843, line: 93, baseType: !1894, size: 96)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1883, file: !1843, line: 90, size: 96, elements: !1895)
!1895 = !{!1896, !1897}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !1894, file: !1843, line: 91, baseType: !1890, size: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !1894, file: !1843, line: 92, baseType: !89, size: 32, offset: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !1842, file: !1843, line: 101, baseType: !1899, size: 128)
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1842, file: !1843, line: 98, size: 128, elements: !1900)
!1900 = !{!1901, !1902}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !1899, file: !1843, line: 99, baseType: !256, size: 64)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !1899, file: !1843, line: 100, baseType: !205, size: 32, offset: 64)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !1842, file: !1843, line: 108, baseType: !1904, size: 128)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1842, file: !1843, line: 104, size: 128, elements: !1905)
!1905 = !{!1906, !1907, !1908}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !1904, file: !1843, line: 105, baseType: !86, size: 64)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !1904, file: !1843, line: 106, baseType: !205, size: 32, offset: 64)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !1904, file: !1843, line: 107, baseType: !7, size: 32, offset: 96)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1080, file: !1081, line: 1067, baseType: !1694, offset: 11136)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1080, file: !1081, line: 1099, baseType: !1911, size: 64, offset: 11136)
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 64)
!1912 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1081, line: 56, flags: DIFlagFwdDecl)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1080, file: !1081, line: 1103, baseType: !110, size: 128, offset: 11200)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1080, file: !1081, line: 1104, baseType: !1915, size: 64, offset: 11328)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 64)
!1916 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1081, line: 46, flags: DIFlagFwdDecl)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1080, file: !1081, line: 1105, baseType: !1036, size: 192, offset: 11392)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1080, file: !1081, line: 1106, baseType: !7, size: 32, offset: 11584)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1080, file: !1081, line: 1109, baseType: !1920, size: 128, offset: 11648)
!1920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1921, size: 128, elements: !1425)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 64)
!1922 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1081, line: 51, flags: DIFlagFwdDecl)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1080, file: !1081, line: 1110, baseType: !1036, size: 192, offset: 11776)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1080, file: !1081, line: 1111, baseType: !110, size: 128, offset: 11968)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1080, file: !1081, line: 1173, baseType: !1926, size: 64, offset: 12096)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !1928, line: 62, size: 256, align: 256, elements: !1929)
!1928 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!1929 = !{!1930, !1931, !1932, !1937}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !1927, file: !1928, line: 75, baseType: !89, size: 32)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !1927, file: !1928, line: 90, baseType: !89, size: 32, offset: 32)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !1927, file: !1928, line: 124, baseType: !1933, size: 64, offset: 64)
!1933 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1927, file: !1928, line: 109, size: 64, elements: !1934)
!1934 = !{!1935, !1936}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !1933, file: !1928, line: 110, baseType: !364, size: 64)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1933, file: !1928, line: 112, baseType: !364, size: 64)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1927, file: !1928, line: 144, baseType: !89, size: 32, offset: 128)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1080, file: !1081, line: 1174, baseType: !87, size: 32, offset: 12160)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1080, file: !1081, line: 1179, baseType: !98, size: 64, offset: 12224)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1080, file: !1081, line: 1182, baseType: !1941, size: 128, offset: 12288)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1014, line: 76, size: 128, elements: !1942)
!1942 = !{!1943, !1948, !1949}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1941, file: !1014, line: 85, baseType: !1944, size: 64)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !1945, line: 7, size: 64, elements: !1946)
!1945 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!1946 = !{!1947}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !1944, file: !1945, line: 12, baseType: !93, size: 64)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !1941, file: !1014, line: 88, baseType: !151, size: 8, offset: 64)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !1941, file: !1014, line: 95, baseType: !151, size: 8, offset: 72)
!1950 = !DIDerivedType(tag: DW_TAG_member, scope: !1080, file: !1081, line: 1184, baseType: !1951, size: 128, offset: 12416)
!1951 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1080, file: !1081, line: 1184, size: 128, elements: !1952)
!1952 = !{!1953, !1954}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !1951, file: !1081, line: 1185, baseType: !1093, size: 32)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1951, file: !1081, line: 1186, baseType: !311, size: 128, align: 64)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1080, file: !1081, line: 1190, baseType: !1956, size: 64, offset: 12544)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 64)
!1957 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1081, line: 53, flags: DIFlagFwdDecl)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1080, file: !1081, line: 1192, baseType: !1959, size: 128, offset: 12608)
!1959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1014, line: 64, size: 128, elements: !1960)
!1960 = !{!1961, !1962, !1963}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1959, file: !1014, line: 65, baseType: !664, size: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1959, file: !1014, line: 67, baseType: !89, size: 32, offset: 64)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1959, file: !1014, line: 68, baseType: !89, size: 32, offset: 96)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1080, file: !1081, line: 1206, baseType: !205, size: 32, offset: 12736)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1080, file: !1081, line: 1207, baseType: !205, size: 32, offset: 12768)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1080, file: !1081, line: 1209, baseType: !98, size: 64, offset: 12800)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1080, file: !1081, line: 1219, baseType: !363, size: 64, offset: 12864)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1080, file: !1081, line: 1220, baseType: !363, size: 64, offset: 12928)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1080, file: !1081, line: 1317, baseType: !205, size: 32, offset: 12992)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1080, file: !1081, line: 1319, baseType: !1079, size: 64, offset: 13056)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1080, file: !1081, line: 1322, baseType: !1972, size: 64, offset: 13120)
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 64)
!1973 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !1081, line: 1322, flags: DIFlagFwdDecl)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1080, file: !1081, line: 1326, baseType: !1093, size: 32, offset: 13184)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1080, file: !1081, line: 1342, baseType: !86, size: 64, offset: 13248)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1080, file: !1081, line: 1343, baseType: !364, size: 64, offset: 13312)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1080, file: !1081, line: 1344, baseType: !363, size: 64, offset: 13376)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1080, file: !1081, line: 1345, baseType: !364, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1080, file: !1081, line: 1346, baseType: !364, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1080, file: !1081, line: 1347, baseType: !364, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1080, file: !1081, line: 1348, baseType: !311, size: 128, align: 64, offset: 13504)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1080, file: !1081, line: 1358, baseType: !1983, size: 34816, offset: 13824)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !1984, line: 485, size: 34816, elements: !1985)
!1984 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!1985 = !{!1986, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2015, !2016, !2017, !2018, !2019, !2020, !2023, !2024, !2025}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !1983, file: !1984, line: 487, baseType: !1987, size: 192)
!1987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1988, size: 192, elements: !222)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !1989, line: 16, size: 64, elements: !1990)
!1989 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!1990 = !{!1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !1988, file: !1989, line: 17, baseType: !802, size: 16)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !1988, file: !1989, line: 18, baseType: !802, size: 16, offset: 16)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !1988, file: !1989, line: 19, baseType: !802, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1988, file: !1989, line: 19, baseType: !802, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !1988, file: !1989, line: 19, baseType: !802, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !1988, file: !1989, line: 19, baseType: !802, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1988, file: !1989, line: 19, baseType: !802, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !1988, file: !1989, line: 20, baseType: !802, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !1988, file: !1989, line: 20, baseType: !802, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1988, file: !1989, line: 20, baseType: !802, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !1988, file: !1989, line: 20, baseType: !802, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1988, file: !1989, line: 20, baseType: !802, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !1988, file: !1989, line: 20, baseType: !802, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !1983, file: !1984, line: 491, baseType: !98, size: 64, offset: 192)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !1983, file: !1984, line: 495, baseType: !263, size: 16, offset: 256)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !1983, file: !1984, line: 496, baseType: !263, size: 16, offset: 272)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !1983, file: !1984, line: 497, baseType: !263, size: 16, offset: 288)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !1983, file: !1984, line: 498, baseType: !263, size: 16, offset: 304)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !1983, file: !1984, line: 502, baseType: !98, size: 64, offset: 320)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1983, file: !1984, line: 503, baseType: !98, size: 64, offset: 384)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !1983, file: !1984, line: 514, baseType: !2012, size: 256, offset: 448)
!2012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2013, size: 256, elements: !1018)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !1984, line: 483, flags: DIFlagFwdDecl)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !1983, file: !1984, line: 516, baseType: !98, size: 64, offset: 704)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !1983, file: !1984, line: 518, baseType: !98, size: 64, offset: 768)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !1983, file: !1984, line: 520, baseType: !98, size: 64, offset: 832)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !1983, file: !1984, line: 521, baseType: !98, size: 64, offset: 896)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !1983, file: !1984, line: 522, baseType: !98, size: 64, offset: 960)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !1983, file: !1984, line: 528, baseType: !2021, size: 64, offset: 1024)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64)
!2022 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !1984, line: 10, flags: DIFlagFwdDecl)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !1983, file: !1984, line: 535, baseType: !98, size: 64, offset: 1088)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !1983, file: !1984, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !1983, file: !1984, line: 540, baseType: !2026, size: 33280, offset: 1536)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2027, line: 317, size: 33280, elements: !2028)
!2027 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2028 = !{!2029, !2030, !2031}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2026, file: !2027, line: 330, baseType: !7, size: 32)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2026, file: !2027, line: 337, baseType: !98, size: 64, offset: 64)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2026, file: !2027, line: 348, baseType: !2032, size: 32768, offset: 512)
!2032 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2027, line: 304, size: 32768, elements: !2033)
!2033 = !{!2034, !2049, !2088, !2138, !2151}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2032, file: !2027, line: 305, baseType: !2035, size: 896)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2027, line: 12, size: 896, elements: !2036)
!2036 = !{!2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2048}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2035, file: !2027, line: 13, baseType: !87, size: 32)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2035, file: !2027, line: 14, baseType: !87, size: 32, offset: 32)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2035, file: !2027, line: 15, baseType: !87, size: 32, offset: 64)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2035, file: !2027, line: 16, baseType: !87, size: 32, offset: 96)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2035, file: !2027, line: 17, baseType: !87, size: 32, offset: 128)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2035, file: !2027, line: 18, baseType: !87, size: 32, offset: 160)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2035, file: !2027, line: 19, baseType: !87, size: 32, offset: 192)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2035, file: !2027, line: 22, baseType: !2045, size: 640, offset: 224)
!2045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !87, size: 640, elements: !2046)
!2046 = !{!2047}
!2047 = !DISubrange(count: 20)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2035, file: !2027, line: 25, baseType: !87, size: 32, offset: 864)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2032, file: !2027, line: 306, baseType: !2050, size: 4096, align: 128)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2027, line: 34, size: 4096, align: 128, elements: !2051)
!2051 = !{!2052, !2053, !2054, !2055, !2056, !2071, !2072, !2073, !2077, !2079, !2083}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2050, file: !2027, line: 35, baseType: !802, size: 16)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2050, file: !2027, line: 36, baseType: !802, size: 16, offset: 16)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2050, file: !2027, line: 37, baseType: !802, size: 16, offset: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2050, file: !2027, line: 38, baseType: !802, size: 16, offset: 48)
!2056 = !DIDerivedType(tag: DW_TAG_member, scope: !2050, file: !2027, line: 39, baseType: !2057, size: 128, offset: 64)
!2057 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2050, file: !2027, line: 39, size: 128, elements: !2058)
!2058 = !{!2059, !2064}
!2059 = !DIDerivedType(tag: DW_TAG_member, scope: !2057, file: !2027, line: 40, baseType: !2060, size: 128)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2057, file: !2027, line: 40, size: 128, elements: !2061)
!2061 = !{!2062, !2063}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2060, file: !2027, line: 41, baseType: !363, size: 64)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2060, file: !2027, line: 42, baseType: !363, size: 64, offset: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, scope: !2057, file: !2027, line: 44, baseType: !2065, size: 128)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2057, file: !2027, line: 44, size: 128, elements: !2066)
!2066 = !{!2067, !2068, !2069, !2070}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2065, file: !2027, line: 45, baseType: !87, size: 32)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2065, file: !2027, line: 46, baseType: !87, size: 32, offset: 32)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2065, file: !2027, line: 47, baseType: !87, size: 32, offset: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2065, file: !2027, line: 48, baseType: !87, size: 32, offset: 96)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2050, file: !2027, line: 51, baseType: !87, size: 32, offset: 192)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2050, file: !2027, line: 52, baseType: !87, size: 32, offset: 224)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2050, file: !2027, line: 55, baseType: !2074, size: 1024, offset: 256)
!2074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !87, size: 1024, elements: !2075)
!2075 = !{!2076}
!2076 = !DISubrange(count: 32)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2050, file: !2027, line: 58, baseType: !2078, size: 2048, offset: 1280)
!2078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !87, size: 2048, elements: !226)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2050, file: !2027, line: 60, baseType: !2080, size: 384, offset: 3328)
!2080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !87, size: 384, elements: !2081)
!2081 = !{!2082}
!2082 = !DISubrange(count: 12)
!2083 = !DIDerivedType(tag: DW_TAG_member, scope: !2050, file: !2027, line: 62, baseType: !2084, size: 384, offset: 3712)
!2084 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2050, file: !2027, line: 62, size: 384, elements: !2085)
!2085 = !{!2086, !2087}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2084, file: !2027, line: 63, baseType: !2080, size: 384)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2084, file: !2027, line: 64, baseType: !2080, size: 384)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2032, file: !2027, line: 307, baseType: !2089, size: 1088)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2027, line: 79, size: 1088, elements: !2090)
!2090 = !{!2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2137}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2089, file: !2027, line: 80, baseType: !87, size: 32)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2089, file: !2027, line: 81, baseType: !87, size: 32, offset: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2089, file: !2027, line: 82, baseType: !87, size: 32, offset: 64)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2089, file: !2027, line: 83, baseType: !87, size: 32, offset: 96)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2089, file: !2027, line: 84, baseType: !87, size: 32, offset: 128)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2089, file: !2027, line: 85, baseType: !87, size: 32, offset: 160)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2089, file: !2027, line: 86, baseType: !87, size: 32, offset: 192)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2089, file: !2027, line: 88, baseType: !2045, size: 640, offset: 224)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2089, file: !2027, line: 89, baseType: !1215, size: 8, offset: 864)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2089, file: !2027, line: 90, baseType: !1215, size: 8, offset: 872)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2089, file: !2027, line: 91, baseType: !1215, size: 8, offset: 880)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2089, file: !2027, line: 92, baseType: !1215, size: 8, offset: 888)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2089, file: !2027, line: 93, baseType: !1215, size: 8, offset: 896)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2089, file: !2027, line: 94, baseType: !1215, size: 8, offset: 904)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2089, file: !2027, line: 95, baseType: !2106, size: 64, offset: 960)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 64)
!2107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2108, line: 11, size: 128, elements: !2109)
!2108 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2109 = !{!2110, !2111}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2107, file: !2108, line: 12, baseType: !256, size: 64)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2107, file: !2108, line: 13, baseType: !2112, size: 64, offset: 64)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2114, line: 56, size: 1344, elements: !2115)
!2114 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2115 = !{!2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2113, file: !2114, line: 61, baseType: !98, size: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2113, file: !2114, line: 62, baseType: !98, size: 64, offset: 64)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2113, file: !2114, line: 63, baseType: !98, size: 64, offset: 128)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2113, file: !2114, line: 64, baseType: !98, size: 64, offset: 192)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2113, file: !2114, line: 65, baseType: !98, size: 64, offset: 256)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2113, file: !2114, line: 66, baseType: !98, size: 64, offset: 320)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2113, file: !2114, line: 68, baseType: !98, size: 64, offset: 384)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2113, file: !2114, line: 69, baseType: !98, size: 64, offset: 448)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2113, file: !2114, line: 70, baseType: !98, size: 64, offset: 512)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2113, file: !2114, line: 71, baseType: !98, size: 64, offset: 576)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2113, file: !2114, line: 72, baseType: !98, size: 64, offset: 640)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2113, file: !2114, line: 73, baseType: !98, size: 64, offset: 704)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2113, file: !2114, line: 74, baseType: !98, size: 64, offset: 768)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2113, file: !2114, line: 75, baseType: !98, size: 64, offset: 832)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2113, file: !2114, line: 76, baseType: !98, size: 64, offset: 896)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2113, file: !2114, line: 81, baseType: !98, size: 64, offset: 960)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2113, file: !2114, line: 83, baseType: !98, size: 64, offset: 1024)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2113, file: !2114, line: 84, baseType: !98, size: 64, offset: 1088)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2113, file: !2114, line: 85, baseType: !98, size: 64, offset: 1152)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2113, file: !2114, line: 86, baseType: !98, size: 64, offset: 1216)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2113, file: !2114, line: 87, baseType: !98, size: 64, offset: 1280)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2089, file: !2027, line: 96, baseType: !87, size: 32, offset: 1024)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2032, file: !2027, line: 308, baseType: !2139, size: 4608, align: 512)
!2139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2027, line: 289, size: 4608, align: 512, elements: !2140)
!2140 = !{!2141, !2142, !2149}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2139, file: !2027, line: 290, baseType: !2050, size: 4096, align: 128)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2139, file: !2027, line: 291, baseType: !2143, size: 512, offset: 4096)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2027, line: 268, size: 512, elements: !2144)
!2144 = !{!2145, !2146, !2147}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2143, file: !2027, line: 269, baseType: !363, size: 64)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2143, file: !2027, line: 270, baseType: !363, size: 64, offset: 64)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2143, file: !2027, line: 271, baseType: !2148, size: 384, offset: 128)
!2148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !363, size: 384, elements: !1481)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2139, file: !2027, line: 292, baseType: !2150, offset: 4608)
!2150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, elements: !1579)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2032, file: !2027, line: 309, baseType: !2152, size: 32768)
!2152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1215, size: 32768, elements: !2153)
!2153 = !{!2154}
!2154 = !DISubrange(count: 4096)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1076, file: !666, line: 378, baseType: !2156, size: 64, offset: 64)
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1072, file: !666, line: 384, baseType: !1358, size: 192, offset: 192)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !921, file: !666, line: 500, baseType: !179, offset: 6656)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !921, file: !666, line: 501, baseType: !2160, size: 64, offset: 6656)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 64)
!2161 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !666, line: 387, flags: DIFlagFwdDecl)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !921, file: !666, line: 516, baseType: !1569, size: 64, offset: 6720)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !921, file: !666, line: 519, baseType: !298, size: 64, offset: 6784)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !921, file: !666, line: 521, baseType: !2165, size: 64, offset: 6848)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!2166 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !666, line: 521, flags: DIFlagFwdDecl)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !921, file: !666, line: 545, baseType: !690, size: 32, offset: 6912)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !921, file: !666, line: 548, baseType: !151, size: 8, offset: 6944)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !921, file: !666, line: 550, baseType: !2170, offset: 6952)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2171, line: 142, elements: !193)
!2171 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !921, file: !666, line: 554, baseType: !1815, size: 256, offset: 6976)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !921, file: !666, line: 557, baseType: !87, size: 32, offset: 7232)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !918, file: !666, line: 565, baseType: !2175, offset: 7296)
!2175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !98, elements: !2176)
!2176 = !{!2177}
!2177 = !DISubrange(count: -1)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !914, file: !666, line: 151, baseType: !690, size: 32)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !907, file: !666, line: 156, baseType: !179, offset: 256)
!2180 = !DIDerivedType(tag: DW_TAG_member, scope: !670, file: !666, line: 159, baseType: !2181, size: 128)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !670, file: !666, line: 159, size: 128, elements: !2182)
!2182 = !{!2183, !2186}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2181, file: !666, line: 161, baseType: !2184, size: 64)
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 64)
!2185 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !666, line: 161, flags: DIFlagFwdDecl)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2181, file: !666, line: 162, baseType: !86, size: 64, offset: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !670, file: !666, line: 176, baseType: !311, size: 128, align: 64)
!2188 = !DIDerivedType(tag: DW_TAG_member, scope: !665, file: !666, line: 179, baseType: !2189, size: 32, offset: 384)
!2189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !665, file: !666, line: 179, size: 32, elements: !2190)
!2190 = !{!2191, !2192, !2193, !2194}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2189, file: !666, line: 184, baseType: !690, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2189, file: !666, line: 192, baseType: !7, size: 32)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2189, file: !666, line: 194, baseType: !7, size: 32)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2189, file: !666, line: 195, baseType: !205, size: 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !665, file: !666, line: 199, baseType: !690, size: 32, offset: 416)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !600, file: !31, line: 1964, baseType: !2197, size: 64, offset: 1344)
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 64)
!2198 = !DISubroutineType(types: !2199)
!2199 = !{!256, !539, !2200}
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 64)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2202, line: 12, size: 256, elements: !2203)
!2202 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2203 = !{!2204, !2205, !2206, !2207, !2208}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2201, file: !2202, line: 13, baseType: !101, size: 32)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2201, file: !2202, line: 16, baseType: !205, size: 32, offset: 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2201, file: !2202, line: 23, baseType: !98, size: 64, offset: 64)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2201, file: !2202, line: 30, baseType: !98, size: 64, offset: 128)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2201, file: !2202, line: 33, baseType: !2209, size: 64, offset: 192)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 64)
!2210 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !666, line: 27, flags: DIFlagFwdDecl)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !600, file: !31, line: 1966, baseType: !2197, size: 64, offset: 1408)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !540, file: !31, line: 1424, baseType: !2213, size: 64, offset: 448)
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 64)
!2214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2215)
!2215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !25, line: 322, size: 704, elements: !2216)
!2216 = !{!2217, !2263, !2267, !2271, !2272, !2273, !2274, !2275, !2280, !2285, !2289}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2215, file: !25, line: 323, baseType: !2218, size: 64)
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64)
!2219 = !DISubroutineType(types: !2220)
!2220 = !{!205, !2221}
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 64)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !25, line: 294, size: 1600, elements: !2223)
!2223 = !{!2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2248, !2249, !2250}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2222, file: !25, line: 295, baseType: !582, size: 128)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2222, file: !25, line: 296, baseType: !110, size: 128, offset: 128)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2222, file: !25, line: 297, baseType: !110, size: 128, offset: 256)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2222, file: !25, line: 298, baseType: !110, size: 128, offset: 384)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2222, file: !25, line: 299, baseType: !1036, size: 192, offset: 512)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2222, file: !25, line: 300, baseType: !179, offset: 704)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2222, file: !25, line: 301, baseType: !690, size: 32, offset: 704)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2222, file: !25, line: 302, baseType: !539, size: 64, offset: 768)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2222, file: !25, line: 303, baseType: !2233, size: 64, offset: 832)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !25, line: 68, size: 64, elements: !2234)
!2234 = !{!2235, !2247}
!2235 = !DIDerivedType(tag: DW_TAG_member, scope: !2233, file: !25, line: 69, baseType: !2236, size: 32)
!2236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2233, file: !25, line: 69, size: 32, elements: !2237)
!2237 = !{!2238, !2239, !2240}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2236, file: !25, line: 70, baseType: !377, size: 32)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2236, file: !25, line: 71, baseType: !385, size: 32)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2236, file: !25, line: 72, baseType: !2241, size: 32)
!2241 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2242, line: 24, baseType: !2243)
!2242 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2242, line: 22, size: 32, elements: !2244)
!2244 = !{!2245}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2243, file: !2242, line: 23, baseType: !2246, size: 32)
!2246 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2242, line: 20, baseType: !383)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2233, file: !25, line: 74, baseType: !24, size: 32, offset: 32)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2222, file: !25, line: 304, baseType: !471, size: 64, offset: 896)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2222, file: !25, line: 305, baseType: !98, size: 64, offset: 960)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2222, file: !25, line: 306, baseType: !2251, size: 576, offset: 1024)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !25, line: 205, size: 576, elements: !2252)
!2252 = !{!2253, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2251, file: !25, line: 206, baseType: !2254, size: 64)
!2254 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !25, line: 66, baseType: !473)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2251, file: !25, line: 207, baseType: !2254, size: 64, offset: 64)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2251, file: !25, line: 208, baseType: !2254, size: 64, offset: 128)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2251, file: !25, line: 209, baseType: !2254, size: 64, offset: 192)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2251, file: !25, line: 210, baseType: !2254, size: 64, offset: 256)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2251, file: !25, line: 211, baseType: !2254, size: 64, offset: 320)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2251, file: !25, line: 212, baseType: !2254, size: 64, offset: 384)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2251, file: !25, line: 213, baseType: !479, size: 64, offset: 448)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2251, file: !25, line: 214, baseType: !479, size: 64, offset: 512)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2215, file: !25, line: 324, baseType: !2264, size: 64, offset: 64)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 64)
!2265 = !DISubroutineType(types: !2266)
!2266 = !{!2221, !539, !205}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2215, file: !25, line: 325, baseType: !2268, size: 64, offset: 128)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 64)
!2269 = !DISubroutineType(types: !2270)
!2270 = !{null, !2221}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2215, file: !25, line: 326, baseType: !2218, size: 64, offset: 192)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2215, file: !25, line: 327, baseType: !2218, size: 64, offset: 256)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2215, file: !25, line: 328, baseType: !2218, size: 64, offset: 320)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2215, file: !25, line: 329, baseType: !628, size: 64, offset: 384)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2215, file: !25, line: 332, baseType: !2276, size: 64, offset: 448)
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2277, size: 64)
!2277 = !DISubroutineType(types: !2278)
!2278 = !{!2279, !371}
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 64)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2215, file: !25, line: 333, baseType: !2281, size: 64, offset: 512)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 64)
!2282 = !DISubroutineType(types: !2283)
!2283 = !{!205, !371, !2284}
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 64)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2215, file: !25, line: 335, baseType: !2286, size: 64, offset: 576)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 64)
!2287 = !DISubroutineType(types: !2288)
!2288 = !{!205, !371, !2279}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2215, file: !25, line: 337, baseType: !2290, size: 64, offset: 640)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 64)
!2291 = !DISubroutineType(types: !2292)
!2292 = !{!205, !539, !2293}
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 64)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !540, file: !31, line: 1425, baseType: !2295, size: 64, offset: 512)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 64)
!2296 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2297)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !25, line: 428, size: 704, elements: !2298)
!2298 = !{!2299, !2303, !2304, !2308, !2309, !2310, !2325, !2348, !2352, !2353, !2376}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2297, file: !25, line: 429, baseType: !2300, size: 64)
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 64)
!2301 = !DISubroutineType(types: !2302)
!2302 = !{!205, !539, !205, !205, !489}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2297, file: !25, line: 430, baseType: !628, size: 64, offset: 64)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2297, file: !25, line: 431, baseType: !2305, size: 64, offset: 128)
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 64)
!2306 = !DISubroutineType(types: !2307)
!2307 = !{!205, !539, !7}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2297, file: !25, line: 432, baseType: !2305, size: 64, offset: 192)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2297, file: !25, line: 433, baseType: !628, size: 64, offset: 256)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2297, file: !25, line: 434, baseType: !2311, size: 64, offset: 320)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 64)
!2312 = !DISubroutineType(types: !2313)
!2313 = !{!205, !539, !205, !2314}
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 64)
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !25, line: 415, size: 256, elements: !2316)
!2316 = !{!2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2315, file: !25, line: 416, baseType: !205, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2315, file: !25, line: 417, baseType: !7, size: 32, offset: 32)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2315, file: !25, line: 418, baseType: !7, size: 32, offset: 64)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2315, file: !25, line: 420, baseType: !7, size: 32, offset: 96)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2315, file: !25, line: 421, baseType: !7, size: 32, offset: 128)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2315, file: !25, line: 422, baseType: !7, size: 32, offset: 160)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2315, file: !25, line: 423, baseType: !7, size: 32, offset: 192)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2315, file: !25, line: 424, baseType: !7, size: 32, offset: 224)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2297, file: !25, line: 435, baseType: !2326, size: 64, offset: 384)
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 64)
!2327 = !DISubroutineType(types: !2328)
!2328 = !{!205, !539, !2233, !2329}
!2329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2330, size: 64)
!2330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !25, line: 343, size: 960, elements: !2331)
!2331 = !{!2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347}
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2330, file: !25, line: 344, baseType: !205, size: 32)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2330, file: !25, line: 345, baseType: !363, size: 64, offset: 64)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2330, file: !25, line: 346, baseType: !363, size: 64, offset: 128)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2330, file: !25, line: 347, baseType: !363, size: 64, offset: 192)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2330, file: !25, line: 348, baseType: !363, size: 64, offset: 256)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2330, file: !25, line: 349, baseType: !363, size: 64, offset: 320)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2330, file: !25, line: 350, baseType: !363, size: 64, offset: 384)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2330, file: !25, line: 351, baseType: !720, size: 64, offset: 448)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2330, file: !25, line: 353, baseType: !720, size: 64, offset: 512)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2330, file: !25, line: 354, baseType: !205, size: 32, offset: 576)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2330, file: !25, line: 355, baseType: !205, size: 32, offset: 608)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2330, file: !25, line: 356, baseType: !363, size: 64, offset: 640)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2330, file: !25, line: 357, baseType: !363, size: 64, offset: 704)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2330, file: !25, line: 358, baseType: !363, size: 64, offset: 768)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2330, file: !25, line: 359, baseType: !720, size: 64, offset: 832)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2330, file: !25, line: 360, baseType: !205, size: 32, offset: 896)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2297, file: !25, line: 436, baseType: !2349, size: 64, offset: 448)
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 64)
!2350 = !DISubroutineType(types: !2351)
!2351 = !{!205, !539, !2293, !2329}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2297, file: !25, line: 438, baseType: !2326, size: 64, offset: 512)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2297, file: !25, line: 439, baseType: !2354, size: 64, offset: 576)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64)
!2355 = !DISubroutineType(types: !2356)
!2356 = !{!205, !539, !2357}
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2358, size: 64)
!2358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !25, line: 409, size: 1408, elements: !2359)
!2359 = !{!2360, !2361}
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2358, file: !25, line: 410, baseType: !7, size: 32)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2358, file: !25, line: 411, baseType: !2362, size: 1344, offset: 64)
!2362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2363, size: 1344, elements: !222)
!2363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !25, line: 395, size: 448, elements: !2364)
!2364 = !{!2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2375}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2363, file: !25, line: 396, baseType: !7, size: 32)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2363, file: !25, line: 397, baseType: !7, size: 32, offset: 32)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2363, file: !25, line: 399, baseType: !7, size: 32, offset: 64)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2363, file: !25, line: 400, baseType: !7, size: 32, offset: 96)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2363, file: !25, line: 401, baseType: !7, size: 32, offset: 128)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2363, file: !25, line: 402, baseType: !7, size: 32, offset: 160)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2363, file: !25, line: 403, baseType: !7, size: 32, offset: 192)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2363, file: !25, line: 404, baseType: !365, size: 64, offset: 256)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2363, file: !25, line: 405, baseType: !2374, size: 64, offset: 320)
!2374 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !102, line: 126, baseType: !363)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2363, file: !25, line: 406, baseType: !2374, size: 64, offset: 384)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2297, file: !25, line: 440, baseType: !2305, size: 64, offset: 640)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !540, file: !31, line: 1426, baseType: !2378, size: 64, offset: 576)
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 64)
!2379 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2380)
!2380 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !31, line: 49, flags: DIFlagFwdDecl)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !540, file: !31, line: 1427, baseType: !98, size: 64, offset: 640)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !540, file: !31, line: 1428, baseType: !98, size: 64, offset: 704)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !540, file: !31, line: 1429, baseType: !98, size: 64, offset: 768)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !540, file: !31, line: 1430, baseType: !328, size: 64, offset: 832)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !540, file: !31, line: 1431, baseType: !710, size: 256, offset: 896)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !540, file: !31, line: 1432, baseType: !205, size: 32, offset: 1152)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !540, file: !31, line: 1433, baseType: !690, size: 32, offset: 1184)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !540, file: !31, line: 1437, baseType: !2389, size: 64, offset: 1216)
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 64)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 64)
!2391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2392)
!2392 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !31, line: 1437, flags: DIFlagFwdDecl)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !540, file: !31, line: 1449, baseType: !2394, size: 64, offset: 1280)
!2394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !344, line: 34, size: 64, elements: !2395)
!2395 = !{!2396}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2394, file: !344, line: 35, baseType: !347, size: 64)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !540, file: !31, line: 1450, baseType: !110, size: 128, offset: 1344)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !540, file: !31, line: 1451, baseType: !2399, size: 64, offset: 1472)
!2399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2400, size: 64)
!2400 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !31, line: 699, flags: DIFlagFwdDecl)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !540, file: !31, line: 1452, baseType: !1781, size: 64, offset: 1536)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !540, file: !31, line: 1453, baseType: !2403, size: 64, offset: 1600)
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 64)
!2404 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !31, line: 1453, flags: DIFlagFwdDecl)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !540, file: !31, line: 1454, baseType: !582, size: 128, offset: 1664)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !540, file: !31, line: 1455, baseType: !7, size: 32, offset: 1792)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !540, file: !31, line: 1456, baseType: !2408, size: 2432, offset: 1856)
!2408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !25, line: 518, size: 2432, elements: !2409)
!2409 = !{!2410, !2411, !2412, !2414, !2446}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2408, file: !25, line: 519, baseType: !7, size: 32)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2408, file: !25, line: 520, baseType: !710, size: 256, offset: 64)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2408, file: !25, line: 521, baseType: !2413, size: 192, offset: 320)
!2413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 192, elements: !222)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2408, file: !25, line: 522, baseType: !2415, size: 1728, offset: 512)
!2415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2416, size: 1728, elements: !222)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !25, line: 222, size: 576, elements: !2417)
!2417 = !{!2418, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2416, file: !25, line: 223, baseType: !2419, size: 64)
!2419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 64)
!2420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !25, line: 443, size: 256, elements: !2421)
!2421 = !{!2422, !2423, !2436, !2437}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2420, file: !25, line: 444, baseType: !205, size: 32)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2420, file: !25, line: 445, baseType: !2424, size: 64, offset: 64)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 64)
!2425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2426)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !25, line: 310, size: 512, elements: !2427)
!2427 = !{!2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2426, file: !25, line: 311, baseType: !628, size: 64)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2426, file: !25, line: 312, baseType: !628, size: 64, offset: 64)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2426, file: !25, line: 313, baseType: !628, size: 64, offset: 128)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2426, file: !25, line: 314, baseType: !628, size: 64, offset: 192)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2426, file: !25, line: 315, baseType: !2218, size: 64, offset: 256)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2426, file: !25, line: 316, baseType: !2218, size: 64, offset: 320)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2426, file: !25, line: 317, baseType: !2218, size: 64, offset: 384)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2426, file: !25, line: 318, baseType: !2290, size: 64, offset: 448)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2420, file: !25, line: 446, baseType: !573, size: 64, offset: 128)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2420, file: !25, line: 447, baseType: !2419, size: 64, offset: 192)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2416, file: !25, line: 224, baseType: !205, size: 32, offset: 64)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2416, file: !25, line: 226, baseType: !110, size: 128, offset: 128)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2416, file: !25, line: 227, baseType: !98, size: 64, offset: 256)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2416, file: !25, line: 228, baseType: !7, size: 32, offset: 320)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2416, file: !25, line: 229, baseType: !7, size: 32, offset: 352)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2416, file: !25, line: 230, baseType: !2254, size: 64, offset: 384)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2416, file: !25, line: 231, baseType: !2254, size: 64, offset: 448)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2416, file: !25, line: 232, baseType: !86, size: 64, offset: 512)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2408, file: !25, line: 523, baseType: !2447, size: 192, offset: 2240)
!2447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2424, size: 192, elements: !222)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !540, file: !31, line: 1458, baseType: !2449, size: 2112, offset: 4288)
!2449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !31, line: 1410, size: 2112, elements: !2450)
!2450 = !{!2451, !2452, !2453}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2449, file: !31, line: 1411, baseType: !205, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2449, file: !31, line: 1412, baseType: !1337, size: 128, offset: 64)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2449, file: !31, line: 1413, baseType: !2454, size: 1920, offset: 192)
!2454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2455, size: 1920, elements: !222)
!2455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2456, line: 12, size: 640, elements: !2457)
!2456 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2457 = !{!2458, !2466, !2468, !2473, !2474}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2455, file: !2456, line: 13, baseType: !2459, size: 320)
!2459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2460, line: 17, size: 320, elements: !2461)
!2460 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2461 = !{!2462, !2463, !2464, !2465}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2459, file: !2460, line: 18, baseType: !205, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2459, file: !2460, line: 19, baseType: !205, size: 32, offset: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2459, file: !2460, line: 20, baseType: !1337, size: 128, offset: 64)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2459, file: !2460, line: 22, baseType: !311, size: 128, align: 64, offset: 192)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2455, file: !2456, line: 14, baseType: !2467, size: 64, offset: 320)
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2455, file: !2456, line: 15, baseType: !2469, size: 64, offset: 384)
!2469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2470, line: 16, size: 64, elements: !2471)
!2470 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2471 = !{!2472}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2469, file: !2470, line: 17, baseType: !1079, size: 64)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2455, file: !2456, line: 16, baseType: !1337, size: 128, offset: 448)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2455, file: !2456, line: 17, baseType: !690, size: 32, offset: 576)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !540, file: !31, line: 1465, baseType: !86, size: 64, offset: 6400)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !540, file: !31, line: 1468, baseType: !87, size: 32, offset: 6464)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !540, file: !31, line: 1470, baseType: !479, size: 64, offset: 6528)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !540, file: !31, line: 1471, baseType: !479, size: 64, offset: 6592)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !540, file: !31, line: 1473, baseType: !89, size: 32, offset: 6656)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !540, file: !31, line: 1474, baseType: !2481, size: 64, offset: 6720)
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 64)
!2482 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !31, line: 603, flags: DIFlagFwdDecl)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !540, file: !31, line: 1477, baseType: !2484, size: 256, offset: 6784)
!2484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 256, elements: !2075)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !540, file: !31, line: 1478, baseType: !2486, size: 128, offset: 7040)
!2486 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2487, line: 18, baseType: !2488)
!2487 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2488 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2487, line: 16, size: 128, elements: !2489)
!2489 = !{!2490}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2488, file: !2487, line: 17, baseType: !2491, size: 128)
!2491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1216, size: 128, elements: !1591)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !540, file: !31, line: 1480, baseType: !7, size: 32, offset: 7168)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !540, file: !31, line: 1481, baseType: !2494, size: 32, offset: 7200)
!2494 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !102, line: 150, baseType: !7)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !540, file: !31, line: 1487, baseType: !1036, size: 192, offset: 7232)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !540, file: !31, line: 1493, baseType: !116, size: 64, offset: 7424)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !540, file: !31, line: 1495, baseType: !2498, size: 64, offset: 7488)
!2498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2499, size: 64)
!2499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2500)
!2500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !326, line: 135, size: 1024, align: 512, elements: !2501)
!2501 = !{!2502, !2506, !2507, !2514, !2520, !2524, !2528, !2532, !2533, !2537, !2541, !2546, !2550}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2500, file: !326, line: 136, baseType: !2503, size: 64)
!2503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 64)
!2504 = !DISubroutineType(types: !2505)
!2505 = !{!205, !328, !7}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2500, file: !326, line: 137, baseType: !2503, size: 64, offset: 64)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2500, file: !326, line: 138, baseType: !2508, size: 64, offset: 128)
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 64)
!2509 = !DISubroutineType(types: !2510)
!2510 = !{!205, !2511, !2513}
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2512, size: 64)
!2512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !329)
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2500, file: !326, line: 139, baseType: !2515, size: 64, offset: 192)
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2516, size: 64)
!2516 = !DISubroutineType(types: !2517)
!2517 = !{!205, !2511, !7, !116, !2518}
!2518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 64)
!2519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2500, file: !326, line: 141, baseType: !2521, size: 64, offset: 256)
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 64)
!2522 = !DISubroutineType(types: !2523)
!2523 = !{!205, !2511}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2500, file: !326, line: 142, baseType: !2525, size: 64, offset: 320)
!2525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2526, size: 64)
!2526 = !DISubroutineType(types: !2527)
!2527 = !{!205, !328}
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2500, file: !326, line: 143, baseType: !2529, size: 64, offset: 384)
!2529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2530, size: 64)
!2530 = !DISubroutineType(types: !2531)
!2531 = !{null, !328}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2500, file: !326, line: 144, baseType: !2529, size: 64, offset: 448)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2500, file: !326, line: 145, baseType: !2534, size: 64, offset: 512)
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2535, size: 64)
!2535 = !DISubroutineType(types: !2536)
!2536 = !{null, !328, !371}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2500, file: !326, line: 146, baseType: !2538, size: 64, offset: 576)
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 64)
!2539 = !DISubroutineType(types: !2540)
!2540 = !{!221, !328, !221, !205}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2500, file: !326, line: 147, baseType: !2542, size: 64, offset: 640)
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2543, size: 64)
!2543 = !DISubroutineType(types: !2544)
!2544 = !{!324, !2545}
!2545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2500, file: !326, line: 148, baseType: !2547, size: 64, offset: 704)
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2548, size: 64)
!2548 = !DISubroutineType(types: !2549)
!2549 = !{!205, !489, !151}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2500, file: !326, line: 149, baseType: !2551, size: 64, offset: 768)
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 64)
!2552 = !DISubroutineType(types: !2553)
!2553 = !{!328, !328, !2554}
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 64)
!2555 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !372)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !540, file: !31, line: 1500, baseType: !205, size: 32, offset: 7552)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !540, file: !31, line: 1502, baseType: !2558, size: 448, offset: 7616)
!2558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2202, line: 60, size: 448, elements: !2559)
!2559 = !{!2560, !2565, !2566, !2567, !2568, !2569, !2570}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2558, file: !2202, line: 61, baseType: !2561, size: 64)
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 64)
!2562 = !DISubroutineType(types: !2563)
!2563 = !{!98, !2564, !2200}
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 64)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2558, file: !2202, line: 63, baseType: !2561, size: 64, offset: 64)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2558, file: !2202, line: 66, baseType: !256, size: 64, offset: 128)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2558, file: !2202, line: 67, baseType: !205, size: 32, offset: 192)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2558, file: !2202, line: 68, baseType: !7, size: 32, offset: 224)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2558, file: !2202, line: 71, baseType: !110, size: 128, offset: 256)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2558, file: !2202, line: 77, baseType: !2571, size: 64, offset: 384)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !540, file: !31, line: 1505, baseType: !714, size: 64, offset: 8064)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !540, file: !31, line: 1508, baseType: !714, size: 64, offset: 8128)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !540, file: !31, line: 1511, baseType: !205, size: 32, offset: 8192)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !540, file: !31, line: 1514, baseType: !852, size: 32, offset: 8224)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !540, file: !31, line: 1517, baseType: !2577, size: 64, offset: 8256)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 64)
!2578 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1816, line: 18, flags: DIFlagFwdDecl)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !540, file: !31, line: 1518, baseType: !578, size: 64, offset: 8320)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !540, file: !31, line: 1525, baseType: !1569, size: 64, offset: 8384)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !540, file: !31, line: 1532, baseType: !2582, size: 64, offset: 8448)
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2583, line: 52, size: 64, elements: !2584)
!2583 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2584 = !{!2585}
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2582, file: !2583, line: 53, baseType: !2586, size: 64)
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 64)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2583, line: 40, size: 256, elements: !2588)
!2588 = !{!2589, !2590, !2595}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2587, file: !2583, line: 42, baseType: !179)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2587, file: !2583, line: 44, baseType: !2591, size: 192)
!2591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2583, line: 28, size: 192, elements: !2592)
!2592 = !{!2593, !2594}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2591, file: !2583, line: 29, baseType: !110, size: 128)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2591, file: !2583, line: 31, baseType: !256, size: 64, offset: 128)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2587, file: !2583, line: 49, baseType: !256, size: 64, offset: 192)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !540, file: !31, line: 1533, baseType: !2582, size: 64, offset: 8512)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !540, file: !31, line: 1534, baseType: !311, size: 128, align: 64, offset: 8576)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !540, file: !31, line: 1535, baseType: !1815, size: 256, offset: 8704)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !540, file: !31, line: 1537, baseType: !1036, size: 192, offset: 8960)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !540, file: !31, line: 1542, baseType: !205, size: 32, offset: 9152)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !540, file: !31, line: 1545, baseType: !179, offset: 9184)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !540, file: !31, line: 1546, baseType: !110, size: 128, offset: 9216)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !540, file: !31, line: 1548, baseType: !179, offset: 9344)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !540, file: !31, line: 1549, baseType: !110, size: 128, offset: 9344)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !372, file: !31, line: 624, baseType: !677, size: 64, offset: 256)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !372, file: !31, line: 631, baseType: !98, size: 64, offset: 320)
!2607 = !DIDerivedType(tag: DW_TAG_member, scope: !372, file: !31, line: 639, baseType: !2608, size: 32, offset: 384)
!2608 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !372, file: !31, line: 639, size: 32, elements: !2609)
!2609 = !{!2610, !2612}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2608, file: !31, line: 640, baseType: !2611, size: 32)
!2611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2608, file: !31, line: 641, baseType: !7, size: 32)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !372, file: !31, line: 643, baseType: !453, size: 32, offset: 416)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !372, file: !31, line: 644, baseType: !471, size: 64, offset: 448)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !372, file: !31, line: 645, baseType: !475, size: 128, offset: 512)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !372, file: !31, line: 646, baseType: !475, size: 128, offset: 640)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !372, file: !31, line: 647, baseType: !475, size: 128, offset: 768)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !372, file: !31, line: 648, baseType: !179, offset: 896)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !372, file: !31, line: 649, baseType: !263, size: 16, offset: 896)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !372, file: !31, line: 650, baseType: !1215, size: 8, offset: 912)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !372, file: !31, line: 651, baseType: !1215, size: 8, offset: 920)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !372, file: !31, line: 652, baseType: !2374, size: 64, offset: 960)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !372, file: !31, line: 659, baseType: !98, size: 64, offset: 1024)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !372, file: !31, line: 660, baseType: !710, size: 256, offset: 1088)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !372, file: !31, line: 662, baseType: !98, size: 64, offset: 1344)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !372, file: !31, line: 663, baseType: !98, size: 64, offset: 1408)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !372, file: !31, line: 665, baseType: !582, size: 128, offset: 1472)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !372, file: !31, line: 666, baseType: !110, size: 128, offset: 1600)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !372, file: !31, line: 675, baseType: !110, size: 128, offset: 1728)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !372, file: !31, line: 676, baseType: !110, size: 128, offset: 1856)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !372, file: !31, line: 677, baseType: !110, size: 128, offset: 1984)
!2632 = !DIDerivedType(tag: DW_TAG_member, scope: !372, file: !31, line: 678, baseType: !2633, size: 128, offset: 2112)
!2633 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !372, file: !31, line: 678, size: 128, elements: !2634)
!2634 = !{!2635, !2636}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2633, file: !31, line: 679, baseType: !578, size: 64)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2633, file: !31, line: 680, baseType: !311, size: 128, align: 64)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !372, file: !31, line: 682, baseType: !716, size: 64, offset: 2240)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !372, file: !31, line: 683, baseType: !716, size: 64, offset: 2304)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !372, file: !31, line: 684, baseType: !690, size: 32, offset: 2368)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !372, file: !31, line: 685, baseType: !690, size: 32, offset: 2400)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !372, file: !31, line: 686, baseType: !690, size: 32, offset: 2432)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !372, file: !31, line: 688, baseType: !690, size: 32, offset: 2464)
!2643 = !DIDerivedType(tag: DW_TAG_member, scope: !372, file: !31, line: 690, baseType: !2644, size: 64, offset: 2496)
!2644 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !372, file: !31, line: 690, size: 64, elements: !2645)
!2645 = !{!2646, !2868}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2644, file: !31, line: 691, baseType: !2647, size: 64)
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 64)
!2648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2649)
!2649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !31, line: 1822, size: 2048, elements: !2650)
!2650 = !{!2651, !2652, !2656, !2661, !2665, !2666, !2667, !2671, !2684, !2685, !2692, !2696, !2697, !2701, !2702, !2706, !2711, !2712, !2716, !2720, !2828, !2832, !2833, !2837, !2838, !2842, !2846, !2851, !2855, !2859, !2863, !2867}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2649, file: !31, line: 1823, baseType: !573, size: 64)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2649, file: !31, line: 1824, baseType: !2653, size: 64, offset: 64)
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 64)
!2654 = !DISubroutineType(types: !2655)
!2655 = !{!471, !298, !471, !205}
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2649, file: !31, line: 1825, baseType: !2657, size: 64, offset: 128)
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 64)
!2658 = !DISubroutineType(types: !2659)
!2659 = !{!252, !298, !221, !268, !2660}
!2660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2649, file: !31, line: 1826, baseType: !2662, size: 64, offset: 192)
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 64)
!2663 = !DISubroutineType(types: !2664)
!2664 = !{!252, !298, !116, !268, !2660}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2649, file: !31, line: 1827, baseType: !787, size: 64, offset: 256)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2649, file: !31, line: 1828, baseType: !787, size: 64, offset: 320)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2649, file: !31, line: 1829, baseType: !2668, size: 64, offset: 384)
!2668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 64)
!2669 = !DISubroutineType(types: !2670)
!2670 = !{!205, !790, !151}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2649, file: !31, line: 1830, baseType: !2672, size: 64, offset: 448)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 64)
!2673 = !DISubroutineType(types: !2674)
!2674 = !{!205, !298, !2675}
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 64)
!2676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !31, line: 1776, size: 128, elements: !2677)
!2677 = !{!2678, !2683}
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2676, file: !31, line: 1777, baseType: !2679, size: 64)
!2679 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !31, line: 1773, baseType: !2680)
!2680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2681, size: 64)
!2681 = !DISubroutineType(types: !2682)
!2682 = !{!205, !2675, !116, !205, !471, !363, !7}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2676, file: !31, line: 1778, baseType: !471, size: 64, offset: 64)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2649, file: !31, line: 1831, baseType: !2672, size: 64, offset: 512)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2649, file: !31, line: 1832, baseType: !2686, size: 64, offset: 576)
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 64)
!2687 = !DISubroutineType(types: !2688)
!2688 = !{!2689, !298, !2690}
!2689 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !104, line: 52, baseType: !7)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 64)
!2691 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !559, line: 27, flags: DIFlagFwdDecl)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2649, file: !31, line: 1833, baseType: !2693, size: 64, offset: 640)
!2693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2694, size: 64)
!2694 = !DISubroutineType(types: !2695)
!2695 = !{!256, !298, !7, !98}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2649, file: !31, line: 1834, baseType: !2693, size: 64, offset: 704)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2649, file: !31, line: 1835, baseType: !2698, size: 64, offset: 768)
!2698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2699, size: 64)
!2699 = !DISubroutineType(types: !2700)
!2700 = !{!205, !298, !924}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2649, file: !31, line: 1836, baseType: !98, size: 64, offset: 832)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2649, file: !31, line: 1837, baseType: !2703, size: 64, offset: 896)
!2703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2704, size: 64)
!2704 = !DISubroutineType(types: !2705)
!2705 = !{!205, !371, !298}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2649, file: !31, line: 1838, baseType: !2707, size: 64, offset: 960)
!2707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2708, size: 64)
!2708 = !DISubroutineType(types: !2709)
!2709 = !{!205, !298, !2710}
!2710 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !31, line: 1007, baseType: !86)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2649, file: !31, line: 1839, baseType: !2703, size: 64, offset: 1024)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2649, file: !31, line: 1840, baseType: !2713, size: 64, offset: 1088)
!2713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2714, size: 64)
!2714 = !DISubroutineType(types: !2715)
!2715 = !{!205, !298, !471, !471, !205}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2649, file: !31, line: 1841, baseType: !2717, size: 64, offset: 1152)
!2717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2718, size: 64)
!2718 = !DISubroutineType(types: !2719)
!2719 = !{!205, !205, !298, !205}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2649, file: !31, line: 1842, baseType: !2721, size: 64, offset: 1216)
!2721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2722, size: 64)
!2722 = !DISubroutineType(types: !2723)
!2723 = !{!205, !298, !205, !2724}
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2725, size: 64)
!2725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !31, line: 1062, size: 1664, elements: !2726)
!2726 = !{!2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2758, !2759, !2760, !2773, !2804}
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !2725, file: !31, line: 1063, baseType: !2724, size: 64)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !2725, file: !31, line: 1064, baseType: !110, size: 128, offset: 64)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !2725, file: !31, line: 1065, baseType: !582, size: 128, offset: 192)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !2725, file: !31, line: 1066, baseType: !110, size: 128, offset: 320)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !2725, file: !31, line: 1069, baseType: !110, size: 128, offset: 448)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !2725, file: !31, line: 1072, baseType: !2710, size: 64, offset: 576)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !2725, file: !31, line: 1073, baseType: !7, size: 32, offset: 640)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !2725, file: !31, line: 1074, baseType: !369, size: 8, offset: 672)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !2725, file: !31, line: 1075, baseType: !7, size: 32, offset: 704)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !2725, file: !31, line: 1076, baseType: !205, size: 32, offset: 736)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !2725, file: !31, line: 1077, baseType: !1337, size: 128, offset: 768)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !2725, file: !31, line: 1078, baseType: !298, size: 64, offset: 896)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !2725, file: !31, line: 1079, baseType: !471, size: 64, offset: 960)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !2725, file: !31, line: 1080, baseType: !471, size: 64, offset: 1024)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !2725, file: !31, line: 1082, baseType: !2742, size: 64, offset: 1088)
!2742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2743, size: 64)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !31, line: 1314, size: 320, elements: !2744)
!2744 = !{!2745, !2753, !2754, !2755, !2756, !2757}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !2743, file: !31, line: 1315, baseType: !2746)
!2746 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2747, line: 20, baseType: !2748)
!2747 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2748 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2747, line: 11, elements: !2749)
!2749 = !{!2750}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2748, file: !2747, line: 12, baseType: !2751)
!2751 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !191, line: 33, baseType: !2752)
!2752 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !191, line: 31, elements: !193)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2743, file: !31, line: 1316, baseType: !205, size: 32)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !2743, file: !31, line: 1317, baseType: !205, size: 32, offset: 32)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !2743, file: !31, line: 1318, baseType: !2742, size: 64, offset: 64)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !2743, file: !31, line: 1319, baseType: !298, size: 64, offset: 128)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !2743, file: !31, line: 1320, baseType: !311, size: 128, align: 64, offset: 192)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !2725, file: !31, line: 1084, baseType: !98, size: 64, offset: 1152)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !2725, file: !31, line: 1085, baseType: !98, size: 64, offset: 1216)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !2725, file: !31, line: 1087, baseType: !2761, size: 64, offset: 1280)
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 64)
!2762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2763)
!2763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !31, line: 1011, size: 128, elements: !2764)
!2764 = !{!2765, !2769}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !2763, file: !31, line: 1012, baseType: !2766, size: 64)
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 64)
!2767 = !DISubroutineType(types: !2768)
!2768 = !{null, !2724, !2724}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !2763, file: !31, line: 1013, baseType: !2770, size: 64, offset: 64)
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2771, size: 64)
!2771 = !DISubroutineType(types: !2772)
!2772 = !{null, !2724}
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !2725, file: !31, line: 1088, baseType: !2774, size: 64, offset: 1344)
!2774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2775, size: 64)
!2775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2776)
!2776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !31, line: 1016, size: 512, elements: !2777)
!2777 = !{!2778, !2782, !2786, !2787, !2791, !2795, !2799, !2803}
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !2776, file: !31, line: 1017, baseType: !2779, size: 64)
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 64)
!2780 = !DISubroutineType(types: !2781)
!2781 = !{!2710, !2710}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !2776, file: !31, line: 1018, baseType: !2783, size: 64, offset: 64)
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 64)
!2784 = !DISubroutineType(types: !2785)
!2785 = !{null, !2710}
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !2776, file: !31, line: 1019, baseType: !2770, size: 64, offset: 128)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !2776, file: !31, line: 1020, baseType: !2788, size: 64, offset: 192)
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 64)
!2789 = !DISubroutineType(types: !2790)
!2790 = !{!205, !2724, !205}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !2776, file: !31, line: 1021, baseType: !2792, size: 64, offset: 256)
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 64)
!2793 = !DISubroutineType(types: !2794)
!2794 = !{!151, !2724}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !2776, file: !31, line: 1022, baseType: !2796, size: 64, offset: 320)
!2796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2797, size: 64)
!2797 = !DISubroutineType(types: !2798)
!2798 = !{!205, !2724, !205, !113}
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !2776, file: !31, line: 1023, baseType: !2800, size: 64, offset: 384)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 64)
!2801 = !DISubroutineType(types: !2802)
!2802 = !{null, !2724, !764}
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !2776, file: !31, line: 1024, baseType: !2792, size: 64, offset: 448)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !2725, file: !31, line: 1097, baseType: !2805, size: 256, offset: 1408)
!2805 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2725, file: !31, line: 1089, size: 256, elements: !2806)
!2806 = !{!2807, !2816, !2822}
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !2805, file: !31, line: 1090, baseType: !2808, size: 256)
!2808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !2809, line: 10, size: 256, elements: !2810)
!2809 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!2810 = !{!2811, !2812, !2815}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2808, file: !2809, line: 11, baseType: !87, size: 32)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2808, file: !2809, line: 12, baseType: !2813, size: 64, offset: 64)
!2813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2814, size: 64)
!2814 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !2809, line: 5, flags: DIFlagFwdDecl)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2808, file: !2809, line: 13, baseType: !110, size: 128, offset: 128)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !2805, file: !31, line: 1091, baseType: !2817, size: 64)
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !2809, line: 17, size: 64, elements: !2818)
!2818 = !{!2819}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2817, file: !2809, line: 18, baseType: !2820, size: 64)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64)
!2821 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !2809, line: 16, flags: DIFlagFwdDecl)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !2805, file: !31, line: 1096, baseType: !2823, size: 192)
!2823 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2805, file: !31, line: 1092, size: 192, elements: !2824)
!2824 = !{!2825, !2826, !2827}
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !2823, file: !31, line: 1093, baseType: !110, size: 128)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2823, file: !31, line: 1094, baseType: !205, size: 32, offset: 128)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !2823, file: !31, line: 1095, baseType: !7, size: 32, offset: 160)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2649, file: !31, line: 1843, baseType: !2829, size: 64, offset: 1280)
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 64)
!2830 = !DISubroutineType(types: !2831)
!2831 = !{!252, !298, !664, !205, !268, !2660, !205}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2649, file: !31, line: 1844, baseType: !964, size: 64, offset: 1344)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2649, file: !31, line: 1845, baseType: !2834, size: 64, offset: 1408)
!2834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2835, size: 64)
!2835 = !DISubroutineType(types: !2836)
!2836 = !{!205, !205}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2649, file: !31, line: 1846, baseType: !2721, size: 64, offset: 1472)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2649, file: !31, line: 1847, baseType: !2839, size: 64, offset: 1536)
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2840, size: 64)
!2840 = !DISubroutineType(types: !2841)
!2841 = !{!252, !1956, !298, !2660, !268, !7}
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2649, file: !31, line: 1848, baseType: !2843, size: 64, offset: 1600)
!2843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2844, size: 64)
!2844 = !DISubroutineType(types: !2845)
!2845 = !{!252, !298, !2660, !1956, !268, !7}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2649, file: !31, line: 1849, baseType: !2847, size: 64, offset: 1664)
!2847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2848, size: 64)
!2848 = !DISubroutineType(types: !2849)
!2849 = !{!205, !298, !256, !2850, !764}
!2850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2649, file: !31, line: 1850, baseType: !2852, size: 64, offset: 1728)
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!2853 = !DISubroutineType(types: !2854)
!2854 = !{!256, !298, !205, !471, !471}
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2649, file: !31, line: 1852, baseType: !2856, size: 64, offset: 1792)
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 64)
!2857 = !DISubroutineType(types: !2858)
!2858 = !{null, !654, !298}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2649, file: !31, line: 1856, baseType: !2860, size: 64, offset: 1856)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 64)
!2861 = !DISubroutineType(types: !2862)
!2862 = !{!252, !298, !471, !298, !471, !268, !7}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2649, file: !31, line: 1858, baseType: !2864, size: 64, offset: 1920)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 64)
!2865 = !DISubroutineType(types: !2866)
!2866 = !{!471, !298, !471, !298, !471, !471, !7}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2649, file: !31, line: 1861, baseType: !2713, size: 64, offset: 1984)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2644, file: !31, line: 692, baseType: !607, size: 64)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !372, file: !31, line: 694, baseType: !2870, size: 64, offset: 2560)
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2871, size: 64)
!2871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !31, line: 1100, size: 384, elements: !2872)
!2872 = !{!2873, !2874, !2875, !2876}
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !2871, file: !31, line: 1101, baseType: !179)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !2871, file: !31, line: 1102, baseType: !110, size: 128)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !2871, file: !31, line: 1103, baseType: !110, size: 128, offset: 128)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !2871, file: !31, line: 1104, baseType: !110, size: 128, offset: 256)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !372, file: !31, line: 695, baseType: !678, size: 1216, align: 64, offset: 2624)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !372, file: !31, line: 696, baseType: !110, size: 128, offset: 3840)
!2879 = !DIDerivedType(tag: DW_TAG_member, scope: !372, file: !31, line: 697, baseType: !2880, size: 64, offset: 3968)
!2880 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !372, file: !31, line: 697, size: 64, elements: !2881)
!2881 = !{!2882, !2883, !2884, !2887, !2888}
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !2880, file: !31, line: 698, baseType: !1956, size: 64)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !2880, file: !31, line: 699, baseType: !2399, size: 64)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !2880, file: !31, line: 700, baseType: !2885, size: 64)
!2885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2886, size: 64)
!2886 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !31, line: 700, flags: DIFlagFwdDecl)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !2880, file: !31, line: 701, baseType: !221, size: 64)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !2880, file: !31, line: 702, baseType: !7, size: 32)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !372, file: !31, line: 705, baseType: !89, size: 32, offset: 4032)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !372, file: !31, line: 708, baseType: !89, size: 32, offset: 4064)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !372, file: !31, line: 709, baseType: !2481, size: 64, offset: 4096)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !372, file: !31, line: 720, baseType: !86, size: 64, offset: 4160)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !329, file: !326, line: 98, baseType: !2894, size: 256, offset: 448)
!2894 = !DICompositeType(tag: DW_TAG_array_type, baseType: !369, size: 256, elements: !2075)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !329, file: !326, line: 101, baseType: !2896, size: 32, offset: 704)
!2896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !2897, line: 25, size: 32, elements: !2898)
!2897 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!2898 = !{!2899}
!2899 = !DIDerivedType(tag: DW_TAG_member, scope: !2896, file: !2897, line: 26, baseType: !2900, size: 32)
!2900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2896, file: !2897, line: 26, size: 32, elements: !2901)
!2901 = !{!2902}
!2902 = !DIDerivedType(tag: DW_TAG_member, scope: !2900, file: !2897, line: 30, baseType: !2903, size: 32)
!2903 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2900, file: !2897, line: 30, size: 32, elements: !2904)
!2904 = !{!2905, !2906}
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2903, file: !2897, line: 31, baseType: !179)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2903, file: !2897, line: 32, baseType: !205, size: 32)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !329, file: !326, line: 102, baseType: !2498, size: 64, offset: 768)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !329, file: !326, line: 103, baseType: !539, size: 64, offset: 832)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !329, file: !326, line: 104, baseType: !98, size: 64, offset: 896)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !329, file: !326, line: 105, baseType: !86, size: 64, offset: 960)
!2911 = !DIDerivedType(tag: DW_TAG_member, scope: !329, file: !326, line: 107, baseType: !2912, size: 128, offset: 1024)
!2912 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !329, file: !326, line: 107, size: 128, elements: !2913)
!2913 = !{!2914, !2915}
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !2912, file: !326, line: 108, baseType: !110, size: 128)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !2912, file: !326, line: 109, baseType: !2916, size: 64)
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !329, file: !326, line: 111, baseType: !110, size: 128, offset: 1152)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !329, file: !326, line: 112, baseType: !110, size: 128, offset: 1280)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !329, file: !326, line: 120, baseType: !2920, size: 128, offset: 1408)
!2920 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !329, file: !326, line: 116, size: 128, elements: !2921)
!2921 = !{!2922, !2923, !2924}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !2920, file: !326, line: 117, baseType: !582, size: 128)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !2920, file: !326, line: 118, baseType: !343, size: 128)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !2920, file: !326, line: 119, baseType: !311, size: 128, align: 64)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !299, file: !31, line: 922, baseType: !371, size: 64, offset: 256)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !299, file: !31, line: 923, baseType: !2647, size: 64, offset: 320)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !299, file: !31, line: 929, baseType: !179, offset: 384)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !299, file: !31, line: 930, baseType: !30, size: 32, offset: 384)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !299, file: !31, line: 931, baseType: !714, size: 64, offset: 448)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !299, file: !31, line: 932, baseType: !7, size: 32, offset: 512)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !299, file: !31, line: 933, baseType: !2494, size: 32, offset: 544)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !299, file: !31, line: 934, baseType: !1036, size: 192, offset: 576)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !299, file: !31, line: 935, baseType: !471, size: 64, offset: 768)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !299, file: !31, line: 936, baseType: !2935, size: 192, offset: 832)
!2935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !31, line: 885, size: 192, elements: !2936)
!2936 = !{!2937, !2938, !2939, !2940, !2941, !2942}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2935, file: !31, line: 886, baseType: !2746)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2935, file: !31, line: 887, baseType: !1327, size: 64)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !2935, file: !31, line: 888, baseType: !39, size: 32, offset: 64)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2935, file: !31, line: 889, baseType: !377, size: 32, offset: 96)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2935, file: !31, line: 889, baseType: !377, size: 32, offset: 128)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !2935, file: !31, line: 890, baseType: !205, size: 32, offset: 160)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !299, file: !31, line: 937, baseType: !1403, size: 64, offset: 1024)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !299, file: !31, line: 938, baseType: !2945, size: 256, offset: 1088)
!2945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !31, line: 896, size: 256, elements: !2946)
!2946 = !{!2947, !2948, !2949, !2950, !2951, !2952}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2945, file: !31, line: 897, baseType: !98, size: 64)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2945, file: !31, line: 898, baseType: !7, size: 32, offset: 64)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !2945, file: !31, line: 899, baseType: !7, size: 32, offset: 96)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !2945, file: !31, line: 902, baseType: !7, size: 32, offset: 128)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !2945, file: !31, line: 903, baseType: !7, size: 32, offset: 160)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !2945, file: !31, line: 904, baseType: !471, size: 64, offset: 192)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !299, file: !31, line: 940, baseType: !363, size: 64, offset: 1344)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !299, file: !31, line: 945, baseType: !86, size: 64, offset: 1408)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !299, file: !31, line: 949, baseType: !110, size: 128, offset: 1472)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !299, file: !31, line: 950, baseType: !110, size: 128, offset: 1600)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !299, file: !31, line: 952, baseType: !677, size: 64, offset: 1728)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !299, file: !31, line: 953, baseType: !852, size: 32, offset: 1792)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !299, file: !31, line: 954, baseType: !852, size: 32, offset: 1824)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !289, file: !246, line: 174, baseType: !295, size: 64, offset: 320)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !289, file: !246, line: 176, baseType: !2962, size: 64, offset: 384)
!2962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2963, size: 64)
!2963 = !DISubroutineType(types: !2964)
!2964 = !{!205, !298, !172, !288, !924}
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !277, file: !246, line: 90, baseType: !272, size: 64, offset: 192)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !277, file: !246, line: 91, baseType: !2967, size: 64, offset: 256)
!2967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !236, file: !167, line: 143, baseType: !2969, size: 64, offset: 256)
!2969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2970, size: 64)
!2970 = !DISubroutineType(types: !2971)
!2971 = !{!2972, !172}
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 64)
!2973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2974)
!2974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !48, line: 39, size: 384, elements: !2975)
!2975 = !{!2976, !2977, !2981, !2985, !2991, !2995}
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2974, file: !48, line: 40, baseType: !47, size: 32)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !2974, file: !48, line: 41, baseType: !2978, size: 64, offset: 64)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 64)
!2979 = !DISubroutineType(types: !2980)
!2980 = !{!151}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !2974, file: !48, line: 42, baseType: !2982, size: 64, offset: 128)
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2983, size: 64)
!2983 = !DISubroutineType(types: !2984)
!2984 = !{!86}
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !2974, file: !48, line: 43, baseType: !2986, size: 64, offset: 192)
!2986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2987, size: 64)
!2987 = !DISubroutineType(types: !2988)
!2988 = !{!159, !2989}
!2989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2990, size: 64)
!2990 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !48, line: 19, flags: DIFlagFwdDecl)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !2974, file: !48, line: 44, baseType: !2992, size: 64, offset: 256)
!2992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2993, size: 64)
!2993 = !DISubroutineType(types: !2994)
!2994 = !{!159}
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !2974, file: !48, line: 45, baseType: !410, size: 64, offset: 320)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !236, file: !167, line: 144, baseType: !2997, size: 64, offset: 320)
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 64)
!2998 = !DISubroutineType(types: !2999)
!2999 = !{!159, !172}
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !236, file: !167, line: 145, baseType: !3001, size: 64, offset: 384)
!3001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3002, size: 64)
!3002 = !DISubroutineType(types: !3003)
!3003 = !{null, !172, !3004, !3005}
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64)
!3005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !166, file: !167, line: 70, baseType: !3007, size: 64, offset: 384)
!3007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3008, size: 64)
!3008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !559, line: 123, size: 1024, elements: !3009)
!3009 = !{!3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3138, !3139, !3140, !3141, !3142}
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3008, file: !559, line: 124, baseType: !690, size: 32)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3008, file: !559, line: 125, baseType: !690, size: 32, offset: 32)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3008, file: !559, line: 135, baseType: !3007, size: 64, offset: 64)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3008, file: !559, line: 136, baseType: !116, size: 64, offset: 128)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3008, file: !559, line: 138, baseType: !703, size: 192, align: 64, offset: 192)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3008, file: !559, line: 140, baseType: !159, size: 64, offset: 384)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3008, file: !559, line: 141, baseType: !7, size: 32, offset: 448)
!3017 = !DIDerivedType(tag: DW_TAG_member, scope: !3008, file: !559, line: 142, baseType: !3018, size: 256, offset: 512)
!3018 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3008, file: !559, line: 142, size: 256, elements: !3019)
!3019 = !{!3020, !3066, !3070}
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3018, file: !559, line: 143, baseType: !3021, size: 192)
!3021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !559, line: 91, size: 192, elements: !3022)
!3022 = !{!3023, !3024, !3025}
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3021, file: !559, line: 92, baseType: !98, size: 64)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3021, file: !559, line: 94, baseType: !699, size: 64, offset: 64)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3021, file: !559, line: 100, baseType: !3026, size: 64, offset: 128)
!3026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3027, size: 64)
!3027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !559, line: 180, size: 704, elements: !3028)
!3028 = !{!3029, !3030, !3031, !3038, !3039, !3040, !3064, !3065}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3027, file: !559, line: 182, baseType: !3007, size: 64)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3027, file: !559, line: 183, baseType: !7, size: 32, offset: 64)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3027, file: !559, line: 186, baseType: !3032, size: 192, offset: 128)
!3032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3033, line: 19, size: 192, elements: !3034)
!3033 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3034 = !{!3035, !3036, !3037}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3032, file: !3033, line: 20, baseType: !682, size: 128)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3032, file: !3033, line: 21, baseType: !7, size: 32, offset: 128)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3032, file: !3033, line: 22, baseType: !7, size: 32, offset: 160)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3027, file: !559, line: 187, baseType: !87, size: 32, offset: 320)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3027, file: !559, line: 188, baseType: !87, size: 32, offset: 352)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3027, file: !559, line: 189, baseType: !3041, size: 64, offset: 384)
!3041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3042, size: 64)
!3042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !559, line: 168, size: 320, elements: !3043)
!3043 = !{!3044, !3048, !3052, !3056, !3060}
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3042, file: !559, line: 169, baseType: !3045, size: 64)
!3045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3046, size: 64)
!3046 = !DISubroutineType(types: !3047)
!3047 = !{!205, !654, !3026}
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3042, file: !559, line: 171, baseType: !3049, size: 64, offset: 64)
!3049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3050, size: 64)
!3050 = !DISubroutineType(types: !3051)
!3051 = !{!205, !3007, !116, !262}
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3042, file: !559, line: 173, baseType: !3053, size: 64, offset: 128)
!3053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3054, size: 64)
!3054 = !DISubroutineType(types: !3055)
!3055 = !{!205, !3007}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3042, file: !559, line: 174, baseType: !3057, size: 64, offset: 192)
!3057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3058, size: 64)
!3058 = !DISubroutineType(types: !3059)
!3059 = !{!205, !3007, !3007, !116}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3042, file: !559, line: 176, baseType: !3061, size: 64, offset: 256)
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 64)
!3062 = !DISubroutineType(types: !3063)
!3063 = !{!205, !654, !3007, !3026}
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3027, file: !559, line: 192, baseType: !110, size: 128, offset: 448)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3027, file: !559, line: 194, baseType: !1337, size: 128, offset: 576)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3018, file: !559, line: 144, baseType: !3067, size: 64)
!3067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !559, line: 103, size: 64, elements: !3068)
!3068 = !{!3069}
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3067, file: !559, line: 104, baseType: !3007, size: 64)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3018, file: !559, line: 145, baseType: !3071, size: 256)
!3071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !559, line: 107, size: 256, elements: !3072)
!3072 = !{!3073, !3133, !3136, !3137}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3071, file: !559, line: 108, baseType: !3074, size: 64)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3076)
!3076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !559, line: 217, size: 768, elements: !3077)
!3077 = !{!3078, !3098, !3102, !3106, !3110, !3114, !3118, !3122, !3123, !3124, !3125, !3129}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3076, file: !559, line: 222, baseType: !3079, size: 64)
!3079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3080, size: 64)
!3080 = !DISubroutineType(types: !3081)
!3081 = !{!205, !3082}
!3082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3083, size: 64)
!3083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !559, line: 197, size: 1088, elements: !3084)
!3084 = !{!3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3083, file: !559, line: 199, baseType: !3007, size: 64)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3083, file: !559, line: 200, baseType: !298, size: 64, offset: 64)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3083, file: !559, line: 201, baseType: !654, size: 64, offset: 128)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3083, file: !559, line: 202, baseType: !86, size: 64, offset: 192)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3083, file: !559, line: 205, baseType: !1036, size: 192, offset: 256)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3083, file: !559, line: 206, baseType: !1036, size: 192, offset: 448)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3083, file: !559, line: 207, baseType: !205, size: 32, offset: 640)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3083, file: !559, line: 208, baseType: !110, size: 128, offset: 704)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3083, file: !559, line: 209, baseType: !221, size: 64, offset: 832)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3083, file: !559, line: 211, baseType: !268, size: 64, offset: 896)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3083, file: !559, line: 212, baseType: !151, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3083, file: !559, line: 213, baseType: !151, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3083, file: !559, line: 214, baseType: !952, size: 64, offset: 1024)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3076, file: !559, line: 223, baseType: !3099, size: 64, offset: 64)
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3100, size: 64)
!3100 = !DISubroutineType(types: !3101)
!3101 = !{null, !3082}
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3076, file: !559, line: 236, baseType: !3103, size: 64, offset: 128)
!3103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3104, size: 64)
!3104 = !DISubroutineType(types: !3105)
!3105 = !{!205, !654, !86}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3076, file: !559, line: 238, baseType: !3107, size: 64, offset: 192)
!3107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3108, size: 64)
!3108 = !DISubroutineType(types: !3109)
!3109 = !{!86, !654, !2660}
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3076, file: !559, line: 239, baseType: !3111, size: 64, offset: 256)
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3112, size: 64)
!3112 = !DISubroutineType(types: !3113)
!3113 = !{!86, !654, !86, !2660}
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3076, file: !559, line: 240, baseType: !3115, size: 64, offset: 320)
!3115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3116, size: 64)
!3116 = !DISubroutineType(types: !3117)
!3117 = !{null, !654, !86}
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3076, file: !559, line: 242, baseType: !3119, size: 64, offset: 384)
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3120, size: 64)
!3120 = !DISubroutineType(types: !3121)
!3121 = !{!252, !3082, !221, !268, !471}
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3076, file: !559, line: 252, baseType: !268, size: 64, offset: 448)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3076, file: !559, line: 259, baseType: !151, size: 8, offset: 512)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3076, file: !559, line: 260, baseType: !3119, size: 64, offset: 576)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3076, file: !559, line: 263, baseType: !3126, size: 64, offset: 640)
!3126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3127, size: 64)
!3127 = !DISubroutineType(types: !3128)
!3128 = !{!2689, !3082, !2690}
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3076, file: !559, line: 266, baseType: !3130, size: 64, offset: 704)
!3130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3131, size: 64)
!3131 = !DISubroutineType(types: !3132)
!3132 = !{!205, !3082, !924}
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3071, file: !559, line: 109, baseType: !3134, size: 64, offset: 64)
!3134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3135, size: 64)
!3135 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !559, line: 31, flags: DIFlagFwdDecl)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3071, file: !559, line: 110, baseType: !471, size: 64, offset: 128)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3071, file: !559, line: 111, baseType: !3007, size: 64, offset: 192)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3008, file: !559, line: 148, baseType: !86, size: 64, offset: 768)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3008, file: !559, line: 154, baseType: !363, size: 64, offset: 832)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3008, file: !559, line: 156, baseType: !263, size: 16, offset: 896)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3008, file: !559, line: 157, baseType: !262, size: 16, offset: 912)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3008, file: !559, line: 158, baseType: !3143, size: 64, offset: 960)
!3143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3144, size: 64)
!3144 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !559, line: 32, flags: DIFlagFwdDecl)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !166, file: !167, line: 71, baseType: !3146, size: 32, offset: 448)
!3146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3147, line: 19, size: 32, elements: !3148)
!3147 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3148 = !{!3149}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3146, file: !3147, line: 20, baseType: !1093, size: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !166, file: !167, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !166, file: !167, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !166, file: !167, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !166, file: !167, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !166, file: !167, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !163, file: !60, line: 463, baseType: !3156, size: 64, offset: 512)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 64)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !163, file: !60, line: 465, baseType: !3158, size: 64, offset: 576)
!3158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3159, size: 64)
!3159 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !60, line: 36, flags: DIFlagFwdDecl)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !163, file: !60, line: 467, baseType: !116, size: 64, offset: 640)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !163, file: !60, line: 468, baseType: !3162, size: 64, offset: 704)
!3162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 64)
!3163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3164)
!3164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !60, line: 87, size: 384, elements: !3165)
!3165 = !{!3166, !3167, !3168, !3172, !3177, !3181}
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3164, file: !60, line: 88, baseType: !116, size: 64)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3164, file: !60, line: 89, baseType: !274, size: 64, offset: 64)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3164, file: !60, line: 90, baseType: !3169, size: 64, offset: 128)
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3170, size: 64)
!3170 = !DISubroutineType(types: !3171)
!3171 = !{!205, !3156, !216}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3164, file: !60, line: 91, baseType: !3173, size: 64, offset: 192)
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 64)
!3174 = !DISubroutineType(types: !3175)
!3175 = !{!221, !3156, !3176, !3004, !3005}
!3176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3164, file: !60, line: 93, baseType: !3178, size: 64, offset: 256)
!3178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3179, size: 64)
!3179 = !DISubroutineType(types: !3180)
!3180 = !{null, !3156}
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3164, file: !60, line: 95, baseType: !3182, size: 64, offset: 320)
!3182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3183, size: 64)
!3183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3184)
!3184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !67, line: 278, size: 1472, elements: !3185)
!3185 = !{!3186, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211}
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3184, file: !67, line: 279, baseType: !3187, size: 64)
!3187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3188, size: 64)
!3188 = !DISubroutineType(types: !3189)
!3189 = !{!205, !3156}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3184, file: !67, line: 280, baseType: !3178, size: 64, offset: 64)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3184, file: !67, line: 281, baseType: !3187, size: 64, offset: 128)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3184, file: !67, line: 282, baseType: !3187, size: 64, offset: 192)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3184, file: !67, line: 283, baseType: !3187, size: 64, offset: 256)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3184, file: !67, line: 284, baseType: !3187, size: 64, offset: 320)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3184, file: !67, line: 285, baseType: !3187, size: 64, offset: 384)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3184, file: !67, line: 286, baseType: !3187, size: 64, offset: 448)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3184, file: !67, line: 287, baseType: !3187, size: 64, offset: 512)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3184, file: !67, line: 288, baseType: !3187, size: 64, offset: 576)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3184, file: !67, line: 289, baseType: !3187, size: 64, offset: 640)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3184, file: !67, line: 290, baseType: !3187, size: 64, offset: 704)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3184, file: !67, line: 291, baseType: !3187, size: 64, offset: 768)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3184, file: !67, line: 292, baseType: !3187, size: 64, offset: 832)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3184, file: !67, line: 293, baseType: !3187, size: 64, offset: 896)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3184, file: !67, line: 294, baseType: !3187, size: 64, offset: 960)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3184, file: !67, line: 295, baseType: !3187, size: 64, offset: 1024)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3184, file: !67, line: 296, baseType: !3187, size: 64, offset: 1088)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3184, file: !67, line: 297, baseType: !3187, size: 64, offset: 1152)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3184, file: !67, line: 298, baseType: !3187, size: 64, offset: 1216)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3184, file: !67, line: 299, baseType: !3187, size: 64, offset: 1280)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3184, file: !67, line: 300, baseType: !3187, size: 64, offset: 1344)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3184, file: !67, line: 301, baseType: !3187, size: 64, offset: 1408)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !163, file: !60, line: 470, baseType: !3213, size: 64, offset: 768)
!3213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3214, size: 64)
!3214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3215, line: 82, size: 1408, elements: !3216)
!3215 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3216 = !{!3217, !3218, !3219, !3220, !3221, !3222, !3223, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3298, !3301, !3302}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3214, file: !3215, line: 83, baseType: !116, size: 64)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3214, file: !3215, line: 84, baseType: !116, size: 64, offset: 64)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3214, file: !3215, line: 85, baseType: !3156, size: 64, offset: 128)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3214, file: !3215, line: 86, baseType: !274, size: 64, offset: 192)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3214, file: !3215, line: 87, baseType: !274, size: 64, offset: 256)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3214, file: !3215, line: 88, baseType: !274, size: 64, offset: 320)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3214, file: !3215, line: 90, baseType: !3224, size: 64, offset: 384)
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3225, size: 64)
!3225 = !DISubroutineType(types: !3226)
!3226 = !{!205, !3156, !3227}
!3227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3228, size: 64)
!3228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !54, line: 95, size: 1152, elements: !3229)
!3229 = !{!3230, !3231, !3232, !3233, !3234, !3235, !3236, !3249, !3262, !3263, !3264, !3265, !3266, !3274, !3275, !3276, !3277, !3278, !3279}
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3228, file: !54, line: 96, baseType: !116, size: 64)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3228, file: !54, line: 97, baseType: !3213, size: 64, offset: 64)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3228, file: !54, line: 99, baseType: !573, size: 64, offset: 128)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3228, file: !54, line: 100, baseType: !116, size: 64, offset: 192)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3228, file: !54, line: 102, baseType: !151, size: 8, offset: 256)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3228, file: !54, line: 103, baseType: !53, size: 32, offset: 288)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3228, file: !54, line: 105, baseType: !3237, size: 64, offset: 320)
!3237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3238, size: 64)
!3238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3239)
!3239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3240, line: 262, size: 1600, elements: !3241)
!3240 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3241 = !{!3242, !3243, !3244, !3248}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3239, file: !3240, line: 263, baseType: !2484, size: 256)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3239, file: !3240, line: 264, baseType: !2484, size: 256, offset: 256)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3239, file: !3240, line: 265, baseType: !3245, size: 1024, offset: 512)
!3245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 1024, elements: !3246)
!3246 = !{!3247}
!3247 = !DISubrange(count: 128)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3239, file: !3240, line: 266, baseType: !159, size: 64, offset: 1536)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3228, file: !54, line: 106, baseType: !3250, size: 64, offset: 384)
!3250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3251, size: 64)
!3251 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3252)
!3252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3240, line: 210, size: 256, elements: !3253)
!3253 = !{!3254, !3258, !3260, !3261}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3252, file: !3240, line: 211, baseType: !3255, size: 72)
!3255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1216, size: 72, elements: !3256)
!3256 = !{!3257}
!3257 = !DISubrange(count: 9)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3252, file: !3240, line: 212, baseType: !3259, size: 64, offset: 128)
!3259 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3240, line: 14, baseType: !98)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3252, file: !3240, line: 213, baseType: !89, size: 32, offset: 192)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3252, file: !3240, line: 214, baseType: !89, size: 32, offset: 224)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3228, file: !54, line: 108, baseType: !3187, size: 64, offset: 448)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3228, file: !54, line: 109, baseType: !3178, size: 64, offset: 512)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3228, file: !54, line: 110, baseType: !3187, size: 64, offset: 576)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3228, file: !54, line: 111, baseType: !3178, size: 64, offset: 640)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3228, file: !54, line: 112, baseType: !3267, size: 64, offset: 704)
!3267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3268, size: 64)
!3268 = !DISubroutineType(types: !3269)
!3269 = !{!205, !3156, !3270}
!3270 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !67, line: 52, baseType: !3271)
!3271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !67, line: 50, size: 32, elements: !3272)
!3272 = !{!3273}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3271, file: !67, line: 51, baseType: !205, size: 32)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3228, file: !54, line: 113, baseType: !3187, size: 64, offset: 768)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3228, file: !54, line: 114, baseType: !274, size: 64, offset: 832)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3228, file: !54, line: 115, baseType: !274, size: 64, offset: 896)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3228, file: !54, line: 117, baseType: !3182, size: 64, offset: 960)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3228, file: !54, line: 118, baseType: !3178, size: 64, offset: 1024)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3228, file: !54, line: 120, baseType: !3280, size: 64, offset: 1088)
!3280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3281, size: 64)
!3281 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !54, line: 120, flags: DIFlagFwdDecl)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3214, file: !3215, line: 91, baseType: !3169, size: 64, offset: 448)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3214, file: !3215, line: 92, baseType: !3187, size: 64, offset: 512)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3214, file: !3215, line: 93, baseType: !3178, size: 64, offset: 576)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3214, file: !3215, line: 94, baseType: !3187, size: 64, offset: 640)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3214, file: !3215, line: 95, baseType: !3178, size: 64, offset: 704)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3214, file: !3215, line: 97, baseType: !3187, size: 64, offset: 768)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3214, file: !3215, line: 98, baseType: !3187, size: 64, offset: 832)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3214, file: !3215, line: 100, baseType: !3267, size: 64, offset: 896)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3214, file: !3215, line: 101, baseType: !3187, size: 64, offset: 960)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3214, file: !3215, line: 103, baseType: !3187, size: 64, offset: 1024)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3214, file: !3215, line: 105, baseType: !3187, size: 64, offset: 1088)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3214, file: !3215, line: 107, baseType: !3182, size: 64, offset: 1152)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3214, file: !3215, line: 109, baseType: !3295, size: 64, offset: 1216)
!3295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3296, size: 64)
!3296 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3297)
!3297 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3215, line: 109, flags: DIFlagFwdDecl)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3214, file: !3215, line: 111, baseType: !3299, size: 64, offset: 1280)
!3299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3300, size: 64)
!3300 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3215, line: 111, flags: DIFlagFwdDecl)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3214, file: !3215, line: 112, baseType: !588, offset: 1344)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3214, file: !3215, line: 114, baseType: !151, size: 8, offset: 1344)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !163, file: !60, line: 471, baseType: !3227, size: 64, offset: 832)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !163, file: !60, line: 473, baseType: !86, size: 64, offset: 896)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !163, file: !60, line: 475, baseType: !86, size: 64, offset: 960)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !163, file: !60, line: 480, baseType: !1036, size: 192, offset: 1024)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !163, file: !60, line: 484, baseType: !3308, size: 576, offset: 1216)
!3308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !60, line: 361, size: 576, elements: !3309)
!3309 = !{!3310, !3311, !3312, !3313, !3314, !3315}
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3308, file: !60, line: 362, baseType: !110, size: 128)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3308, file: !60, line: 363, baseType: !110, size: 128, offset: 128)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3308, file: !60, line: 364, baseType: !110, size: 128, offset: 256)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3308, file: !60, line: 365, baseType: !110, size: 128, offset: 384)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3308, file: !60, line: 366, baseType: !151, size: 8, offset: 512)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3308, file: !60, line: 367, baseType: !59, size: 32, offset: 544)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !163, file: !60, line: 485, baseType: !3317, size: 2304, offset: 1792)
!3317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !67, line: 565, size: 2304, elements: !3318)
!3318 = !{!3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3414, !3418}
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3317, file: !67, line: 566, baseType: !3270, size: 32)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3317, file: !67, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3317, file: !67, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3317, file: !67, line: 569, baseType: !151, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3317, file: !67, line: 570, baseType: !151, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3317, file: !67, line: 571, baseType: !151, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3317, file: !67, line: 572, baseType: !151, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3317, file: !67, line: 573, baseType: !151, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3317, file: !67, line: 574, baseType: !151, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3317, file: !67, line: 575, baseType: !151, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3317, file: !67, line: 576, baseType: !151, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3317, file: !67, line: 577, baseType: !87, size: 32, offset: 64)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3317, file: !67, line: 578, baseType: !179, offset: 96)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3317, file: !67, line: 580, baseType: !110, size: 128, offset: 128)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3317, file: !67, line: 581, baseType: !1358, size: 192, offset: 256)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3317, file: !67, line: 582, baseType: !3335, size: 64, offset: 448)
!3335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 64)
!3336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3337, line: 43, size: 1472, elements: !3338)
!3337 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3338 = !{!3339, !3340, !3341, !3342, !3343, !3346, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371}
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3336, file: !3337, line: 44, baseType: !116, size: 64)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3336, file: !3337, line: 45, baseType: !205, size: 32, offset: 64)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3336, file: !3337, line: 46, baseType: !110, size: 128, offset: 128)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3336, file: !3337, line: 47, baseType: !179, offset: 256)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3336, file: !3337, line: 48, baseType: !3344, size: 64, offset: 256)
!3344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3345, size: 64)
!3345 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !67, line: 533, flags: DIFlagFwdDecl)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3336, file: !3337, line: 49, baseType: !3347, size: 320, offset: 320)
!3347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3348, line: 11, size: 320, elements: !3349)
!3348 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3349 = !{!3350, !3351, !3352, !3357}
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3347, file: !3348, line: 16, baseType: !582, size: 128)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3347, file: !3348, line: 17, baseType: !98, size: 64, offset: 128)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3347, file: !3348, line: 18, baseType: !3353, size: 64, offset: 192)
!3353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3354, size: 64)
!3354 = !DISubroutineType(types: !3355)
!3355 = !{null, !3356}
!3356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3347, size: 64)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3347, file: !3348, line: 19, baseType: !87, size: 32, offset: 256)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3336, file: !3337, line: 50, baseType: !98, size: 64, offset: 640)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3336, file: !3337, line: 51, baseType: !1163, size: 64, offset: 704)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3336, file: !3337, line: 52, baseType: !1163, size: 64, offset: 768)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3336, file: !3337, line: 53, baseType: !1163, size: 64, offset: 832)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3336, file: !3337, line: 54, baseType: !1163, size: 64, offset: 896)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3336, file: !3337, line: 55, baseType: !1163, size: 64, offset: 960)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3336, file: !3337, line: 56, baseType: !98, size: 64, offset: 1024)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3336, file: !3337, line: 57, baseType: !98, size: 64, offset: 1088)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3336, file: !3337, line: 58, baseType: !98, size: 64, offset: 1152)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3336, file: !3337, line: 59, baseType: !98, size: 64, offset: 1216)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3336, file: !3337, line: 60, baseType: !98, size: 64, offset: 1280)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3336, file: !3337, line: 61, baseType: !3156, size: 64, offset: 1344)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3336, file: !3337, line: 62, baseType: !151, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3336, file: !3337, line: 63, baseType: !151, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3317, file: !67, line: 583, baseType: !151, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3317, file: !67, line: 584, baseType: !151, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3317, file: !67, line: 585, baseType: !151, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3317, file: !67, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3317, file: !67, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3317, file: !67, line: 592, baseType: !1155, size: 512, offset: 576)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3317, file: !67, line: 593, baseType: !363, size: 64, offset: 1088)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3317, file: !67, line: 594, baseType: !1815, size: 256, offset: 1152)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3317, file: !67, line: 595, baseType: !1337, size: 128, offset: 1408)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3317, file: !67, line: 596, baseType: !3344, size: 64, offset: 1536)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3317, file: !67, line: 597, baseType: !690, size: 32, offset: 1600)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3317, file: !67, line: 598, baseType: !690, size: 32, offset: 1632)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3317, file: !67, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3317, file: !67, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3317, file: !67, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3317, file: !67, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3317, file: !67, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3317, file: !67, line: 604, baseType: !151, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3317, file: !67, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3317, file: !67, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3317, file: !67, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3317, file: !67, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3317, file: !67, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3317, file: !67, line: 610, baseType: !7, size: 32, offset: 1696)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3317, file: !67, line: 611, baseType: !66, size: 32, offset: 1728)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3317, file: !67, line: 612, baseType: !74, size: 32, offset: 1760)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3317, file: !67, line: 613, baseType: !205, size: 32, offset: 1792)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3317, file: !67, line: 614, baseType: !205, size: 32, offset: 1824)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3317, file: !67, line: 615, baseType: !363, size: 64, offset: 1856)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3317, file: !67, line: 616, baseType: !363, size: 64, offset: 1920)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3317, file: !67, line: 617, baseType: !363, size: 64, offset: 1984)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3317, file: !67, line: 618, baseType: !363, size: 64, offset: 2048)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3317, file: !67, line: 620, baseType: !3405, size: 64, offset: 2112)
!3405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3406, size: 64)
!3406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !67, line: 536, size: 256, elements: !3407)
!3407 = !{!3408, !3409, !3410, !3411}
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3406, file: !67, line: 537, baseType: !179)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3406, file: !67, line: 538, baseType: !7, size: 32)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3406, file: !67, line: 540, baseType: !110, size: 128, offset: 64)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3406, file: !67, line: 543, baseType: !3412, size: 64, offset: 192)
!3412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3413, size: 64)
!3413 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !67, line: 534, flags: DIFlagFwdDecl)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3317, file: !67, line: 621, baseType: !3415, size: 64, offset: 2176)
!3415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3416, size: 64)
!3416 = !DISubroutineType(types: !3417)
!3417 = !{null, !3156, !1300}
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3317, file: !67, line: 622, baseType: !3419, size: 64, offset: 2240)
!3419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3420, size: 64)
!3420 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !67, line: 622, flags: DIFlagFwdDecl)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !163, file: !60, line: 486, baseType: !3422, size: 64, offset: 4096)
!3422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3423, size: 64)
!3423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !67, line: 642, size: 1792, elements: !3424)
!3424 = !{!3425, !3426, !3427, !3431, !3432, !3433}
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3423, file: !67, line: 643, baseType: !3184, size: 1472)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3423, file: !67, line: 644, baseType: !3187, size: 64, offset: 1472)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3423, file: !67, line: 645, baseType: !3428, size: 64, offset: 1536)
!3428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3429, size: 64)
!3429 = !DISubroutineType(types: !3430)
!3430 = !{null, !3156, !151}
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3423, file: !67, line: 646, baseType: !3187, size: 64, offset: 1600)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3423, file: !67, line: 647, baseType: !3178, size: 64, offset: 1664)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3423, file: !67, line: 648, baseType: !3178, size: 64, offset: 1728)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !163, file: !60, line: 493, baseType: !3435, size: 64, offset: 4160)
!3435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3436, size: 64)
!3436 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !60, line: 493, flags: DIFlagFwdDecl)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !163, file: !60, line: 499, baseType: !110, size: 128, offset: 4224)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !163, file: !60, line: 502, baseType: !3439, size: 64, offset: 4352)
!3439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3440, size: 64)
!3440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3441)
!3441 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !60, line: 502, flags: DIFlagFwdDecl)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !163, file: !60, line: 504, baseType: !3443, size: 64, offset: 4416)
!3443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !163, file: !60, line: 505, baseType: !363, size: 64, offset: 4480)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !163, file: !60, line: 510, baseType: !363, size: 64, offset: 4544)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !163, file: !60, line: 511, baseType: !3447, size: 64, offset: 4608)
!3447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3448, size: 64)
!3448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3449)
!3449 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !60, line: 511, flags: DIFlagFwdDecl)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !163, file: !60, line: 513, baseType: !3451, size: 64, offset: 4672)
!3451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3452, size: 64)
!3452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !60, line: 288, size: 128, elements: !3453)
!3453 = !{!3454, !3455}
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3452, file: !60, line: 293, baseType: !7, size: 32)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3452, file: !60, line: 294, baseType: !98, size: 64, offset: 64)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !163, file: !60, line: 515, baseType: !110, size: 128, offset: 4736)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !163, file: !60, line: 526, baseType: !3458, offset: 4864)
!3458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3459, line: 5, elements: !193)
!3459 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !163, file: !60, line: 528, baseType: !120, size: 64, offset: 4864)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !163, file: !60, line: 529, baseType: !133, size: 64, offset: 4928)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !163, file: !60, line: 534, baseType: !453, size: 32, offset: 4992)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !163, file: !60, line: 535, baseType: !87, size: 32, offset: 5024)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !163, file: !60, line: 537, baseType: !179, offset: 5056)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !163, file: !60, line: 538, baseType: !110, size: 128, offset: 5056)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !163, file: !60, line: 540, baseType: !3467, size: 64, offset: 5184)
!3467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3468, size: 64)
!3468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3469, line: 54, size: 960, elements: !3470)
!3469 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3470 = !{!3471, !3472, !3473, !3474, !3475, !3476, !3477, !3481, !3485, !3486, !3487, !3488, !3492, !3496, !3497}
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3468, file: !3469, line: 55, baseType: !116, size: 64)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3468, file: !3469, line: 56, baseType: !573, size: 64, offset: 64)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3468, file: !3469, line: 58, baseType: !274, size: 64, offset: 128)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3468, file: !3469, line: 59, baseType: !274, size: 64, offset: 192)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3468, file: !3469, line: 60, baseType: !172, size: 64, offset: 256)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3468, file: !3469, line: 62, baseType: !3169, size: 64, offset: 320)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3468, file: !3469, line: 63, baseType: !3478, size: 64, offset: 384)
!3478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3479, size: 64)
!3479 = !DISubroutineType(types: !3480)
!3480 = !{!221, !3156, !3176}
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3468, file: !3469, line: 65, baseType: !3482, size: 64, offset: 448)
!3482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3483, size: 64)
!3483 = !DISubroutineType(types: !3484)
!3484 = !{null, !3467}
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3468, file: !3469, line: 66, baseType: !3178, size: 64, offset: 512)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3468, file: !3469, line: 68, baseType: !3187, size: 64, offset: 576)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3468, file: !3469, line: 70, baseType: !2972, size: 64, offset: 640)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3468, file: !3469, line: 71, baseType: !3489, size: 64, offset: 704)
!3489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3490, size: 64)
!3490 = !DISubroutineType(types: !3491)
!3491 = !{!159, !3156}
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3468, file: !3469, line: 73, baseType: !3493, size: 64, offset: 768)
!3493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3494, size: 64)
!3494 = !DISubroutineType(types: !3495)
!3495 = !{null, !3156, !3004, !3005}
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3468, file: !3469, line: 75, baseType: !3182, size: 64, offset: 832)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3468, file: !3469, line: 77, baseType: !3299, size: 64, offset: 896)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !163, file: !60, line: 541, baseType: !274, size: 64, offset: 5248)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !163, file: !60, line: 543, baseType: !3178, size: 64, offset: 5312)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !163, file: !60, line: 544, baseType: !3501, size: 64, offset: 5376)
!3501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3502, size: 64)
!3502 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !60, line: 45, flags: DIFlagFwdDecl)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !163, file: !60, line: 545, baseType: !3504, size: 64, offset: 5440)
!3504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3505, size: 64)
!3505 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !60, line: 47, flags: DIFlagFwdDecl)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !163, file: !60, line: 547, baseType: !151, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !163, file: !60, line: 548, baseType: !151, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !163, file: !60, line: 549, baseType: !151, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !163, file: !60, line: 550, baseType: !151, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !137, file: !130, line: 116, baseType: !3511, size: 64, offset: 256)
!3511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3512, size: 64)
!3512 = !DISubroutineType(types: !3513)
!3513 = !{!151, !153, !116}
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !137, file: !130, line: 118, baseType: !3515, size: 64, offset: 320)
!3515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3516, size: 64)
!3516 = !DISubroutineType(types: !3517)
!3517 = !{!205, !153, !116, !7, !86, !268}
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !137, file: !130, line: 123, baseType: !3519, size: 64, offset: 384)
!3519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3520, size: 64)
!3520 = !DISubroutineType(types: !3521)
!3521 = !{!205, !153, !116, !3522, !268}
!3522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !137, file: !130, line: 126, baseType: !3524, size: 64, offset: 448)
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 64)
!3525 = !DISubroutineType(types: !3526)
!3526 = !{!116, !153}
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !137, file: !130, line: 127, baseType: !3524, size: 64, offset: 512)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !137, file: !130, line: 128, baseType: !3529, size: 64, offset: 576)
!3529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3530, size: 64)
!3530 = !DISubroutineType(types: !3531)
!3531 = !{!133, !153}
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !137, file: !130, line: 130, baseType: !3533, size: 64, offset: 640)
!3533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3534, size: 64)
!3534 = !DISubroutineType(types: !3535)
!3535 = !{!133, !153, !133}
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !137, file: !130, line: 133, baseType: !3537, size: 64, offset: 704)
!3537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3538, size: 64)
!3538 = !DISubroutineType(types: !3539)
!3539 = !{!133, !153, !116}
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !137, file: !130, line: 135, baseType: !3541, size: 64, offset: 768)
!3541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3542, size: 64)
!3542 = !DISubroutineType(types: !3543)
!3543 = !{!205, !153, !116, !116, !7, !7, !3544}
!3544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3545, size: 64)
!3545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !130, line: 43, size: 640, elements: !3546)
!3546 = !{!3547, !3548, !3549}
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3545, file: !130, line: 44, baseType: !133, size: 64)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3545, file: !130, line: 45, baseType: !7, size: 32, offset: 64)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3545, file: !130, line: 46, baseType: !3550, size: 512, offset: 128)
!3550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !363, size: 512, elements: !1193)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !137, file: !130, line: 140, baseType: !3533, size: 64, offset: 832)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !137, file: !130, line: 143, baseType: !3529, size: 64, offset: 896)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !137, file: !130, line: 145, baseType: !140, size: 64, offset: 960)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !137, file: !130, line: 146, baseType: !3555, size: 64, offset: 1024)
!3555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3556, size: 64)
!3556 = !DISubroutineType(types: !3557)
!3557 = !{!205, !153, !3558}
!3558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3559, size: 64)
!3559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !130, line: 29, size: 128, elements: !3560)
!3560 = !{!3561, !3562, !3563}
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3559, file: !130, line: 30, baseType: !7, size: 32)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3559, file: !130, line: 31, baseType: !7, size: 32, offset: 32)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3559, file: !130, line: 32, baseType: !153, size: 64, offset: 64)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !137, file: !130, line: 148, baseType: !3565, size: 64, offset: 1088)
!3565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3566, size: 64)
!3566 = !DISubroutineType(types: !3567)
!3567 = !{!205, !153, !3156}
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !129, file: !130, line: 20, baseType: !3156, size: 64, offset: 128)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !121, file: !122, line: 57, baseType: !3570, size: 64, offset: 384)
!3570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 64)
!3571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !122, line: 31, size: 704, elements: !3572)
!3572 = !{!3573, !3574, !3575, !3576, !3577}
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3571, file: !122, line: 32, baseType: !221, size: 64)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3571, file: !122, line: 33, baseType: !205, size: 32, offset: 64)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3571, file: !122, line: 34, baseType: !86, size: 64, offset: 128)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3571, file: !122, line: 35, baseType: !3570, size: 64, offset: 192)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3571, file: !122, line: 43, baseType: !289, size: 448, offset: 256)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !121, file: !122, line: 58, baseType: !3570, size: 64, offset: 448)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !121, file: !122, line: 59, baseType: !120, size: 64, offset: 512)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !121, file: !122, line: 60, baseType: !120, size: 64, offset: 576)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !121, file: !122, line: 61, baseType: !120, size: 64, offset: 640)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !121, file: !122, line: 63, baseType: !166, size: 512, offset: 704)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !121, file: !122, line: 65, baseType: !98, size: 64, offset: 1216)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !121, file: !122, line: 66, baseType: !86, size: 64, offset: 1280)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !106, file: !107, line: 26, baseType: !205, size: 32, offset: 256)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "stem", scope: !106, file: !107, line: 27, baseType: !3587, offset: 288)
!3587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, elements: !2176)
!3588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 64)
!3589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !89, size: 64)
!3590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3591, size: 64)
!3591 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !113)
!3592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3593, size: 64)
!3593 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !118)
!3594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64)
!3595 = !{!0, !3596, !3598, !3600, !3618, !3620, !3622, !3624, !3626, !3628, !3630, !3632}
!3596 = !DIGlobalVariableExpression(var: !3597, expr: !DIExpression())
!3597 = distinct !DIGlobalVariable(name: "of_mutex", scope: !2, file: !3, line: 51, type: !1036, isLocal: false, isDefinition: true)
!3598 = !DIGlobalVariableExpression(var: !3599, expr: !DIExpression())
!3599 = distinct !DIGlobalVariable(name: "devtree_lock", scope: !2, file: !3, line: 56, type: !723, isLocal: false, isDefinition: true)
!3600 = !DIGlobalVariableExpression(var: !3601, expr: !DIExpression())
!3601 = distinct !DIGlobalVariable(name: "dummy_mask", scope: !3602, file: !3, line: 1549, type: !3614, isLocal: true, isDefinition: true)
!3602 = distinct !DISubprogram(name: "of_parse_phandle_with_args_map", scope: !3, file: !3, line: 1540, type: !3603, scopeLine: 1544, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!3603 = !DISubroutineType(types: !3604)
!3604 = !{!205, !3605, !116, !116, !205, !3607}
!3605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3606, size: 64)
!3606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 64)
!3608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_phandle_args", file: !122, line: 74, size: 640, elements: !3609)
!3609 = !{!3610, !3611, !3612}
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "np", scope: !3608, file: !122, line: 75, baseType: !120, size: 64)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "args_count", scope: !3608, file: !122, line: 76, baseType: !205, size: 32, offset: 64)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3608, file: !122, line: 77, baseType: !3613, size: 512, offset: 96)
!3613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !499, size: 512, elements: !1591)
!3614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3615, size: 544, elements: !3616)
!3615 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!3616 = !{!3617}
!3617 = !DISubrange(count: 17)
!3618 = !DIGlobalVariableExpression(var: !3619, expr: !DIExpression())
!3619 = distinct !DIGlobalVariable(name: "dummy_pass", scope: !3602, file: !3, line: 1550, type: !3614, isLocal: true, isDefinition: true)
!3620 = !DIGlobalVariableExpression(var: !3621, expr: !DIExpression())
!3621 = distinct !DIGlobalVariable(name: "of_root", scope: !2, file: !3, line: 36, type: !120, isLocal: false, isDefinition: true)
!3622 = !DIGlobalVariableExpression(var: !3623, expr: !DIExpression())
!3623 = distinct !DIGlobalVariable(name: "of_chosen", scope: !2, file: !3, line: 38, type: !120, isLocal: false, isDefinition: true)
!3624 = !DIGlobalVariableExpression(var: !3625, expr: !DIExpression())
!3625 = distinct !DIGlobalVariable(name: "of_aliases", scope: !2, file: !3, line: 39, type: !120, isLocal: false, isDefinition: true)
!3626 = !DIGlobalVariableExpression(var: !3627, expr: !DIExpression())
!3627 = distinct !DIGlobalVariable(name: "of_stdout", scope: !2, file: !3, line: 40, type: !120, isLocal: false, isDefinition: true)
!3628 = !DIGlobalVariableExpression(var: !3629, expr: !DIExpression())
!3629 = distinct !DIGlobalVariable(name: "of_stdout_options", scope: !2, file: !3, line: 41, type: !116, isLocal: true, isDefinition: true)
!3630 = !DIGlobalVariableExpression(var: !3631, expr: !DIExpression())
!3631 = distinct !DIGlobalVariable(name: "of_kset", scope: !2, file: !3, line: 43, type: !174, isLocal: false, isDefinition: true)
!3632 = !DIGlobalVariableExpression(var: !3633, expr: !DIExpression())
!3633 = distinct !DIGlobalVariable(name: "phandle_cache", scope: !2, file: !3, line: 141, type: !3634, isLocal: true, isDefinition: true)
!3634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 8192, elements: !3246)
!3635 = !{!"rsp"}
!3636 = !{i32 7, !"Dwarf Version", i32 4}
!3637 = !{i32 2, !"Debug Info Version", i32 3}
!3638 = !{i32 1, !"wchar_size", i32 2}
!3639 = !{i32 1, !"Code Model", i32 2}
!3640 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!3641 = distinct !DISubprogram(name: "of_node_name_eq", scope: !3, file: !3, line: 58, type: !3642, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!3642 = !DISubroutineType(types: !3643)
!3643 = !{!151, !3605, !116}
!3644 = !DILocalVariable(name: "np", arg: 1, scope: !3641, file: !3, line: 58, type: !3605)
!3645 = !DILocation(line: 58, column: 48, scope: !3641)
!3646 = !DILocalVariable(name: "name", arg: 2, scope: !3641, file: !3, line: 58, type: !116)
!3647 = !DILocation(line: 58, column: 64, scope: !3641)
!3648 = !DILocalVariable(name: "node_name", scope: !3641, file: !3, line: 60, type: !116)
!3649 = !DILocation(line: 60, column: 14, scope: !3641)
!3650 = !DILocalVariable(name: "len", scope: !3641, file: !3, line: 61, type: !268)
!3651 = !DILocation(line: 61, column: 9, scope: !3641)
!3652 = !DILocation(line: 63, column: 7, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3641, file: !3, line: 63, column: 6)
!3654 = !DILocation(line: 63, column: 6, scope: !3641)
!3655 = !DILocation(line: 64, column: 3, scope: !3653)
!3656 = !DILocation(line: 66, column: 24, scope: !3641)
!3657 = !DILocation(line: 66, column: 28, scope: !3641)
!3658 = !DILocation(line: 66, column: 14, scope: !3641)
!3659 = !DILocation(line: 66, column: 12, scope: !3641)
!3660 = !DILocation(line: 67, column: 18, scope: !3641)
!3661 = !DILocation(line: 67, column: 8, scope: !3641)
!3662 = !DILocation(line: 67, column: 36, scope: !3641)
!3663 = !DILocation(line: 67, column: 34, scope: !3641)
!3664 = !DILocation(line: 67, column: 6, scope: !3641)
!3665 = !DILocation(line: 69, column: 17, scope: !3641)
!3666 = !DILocation(line: 69, column: 10, scope: !3641)
!3667 = !DILocation(line: 69, column: 26, scope: !3641)
!3668 = !DILocation(line: 69, column: 23, scope: !3641)
!3669 = !DILocation(line: 69, column: 31, scope: !3641)
!3670 = !DILocation(line: 69, column: 43, scope: !3641)
!3671 = !DILocation(line: 69, column: 54, scope: !3641)
!3672 = !DILocation(line: 69, column: 60, scope: !3641)
!3673 = !DILocation(line: 69, column: 35, scope: !3641)
!3674 = !DILocation(line: 69, column: 65, scope: !3641)
!3675 = !DILocation(line: 0, scope: !3641)
!3676 = !DILocation(line: 69, column: 2, scope: !3641)
!3677 = !DILocation(line: 70, column: 1, scope: !3641)
!3678 = distinct !DISubprogram(name: "kbasename", scope: !3679, file: !3679, line: 252, type: !3680, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!3679 = !DIFile(filename: "./include/linux/string.h", directory: "/home/lizy2001/genbc/linux")
!3680 = !DISubroutineType(types: !3681)
!3681 = !{!116, !116}
!3682 = !DILocalVariable(name: "path", arg: 1, scope: !3678, file: !3679, line: 252, type: !116)
!3683 = !DILocation(line: 252, column: 49, scope: !3678)
!3684 = !DILocalVariable(name: "tail", scope: !3678, file: !3679, line: 254, type: !116)
!3685 = !DILocation(line: 254, column: 14, scope: !3678)
!3686 = !DILocation(line: 254, column: 29, scope: !3678)
!3687 = !DILocation(line: 254, column: 21, scope: !3678)
!3688 = !DILocation(line: 255, column: 9, scope: !3678)
!3689 = !DILocation(line: 255, column: 16, scope: !3678)
!3690 = !DILocation(line: 255, column: 21, scope: !3678)
!3691 = !DILocation(line: 255, column: 27, scope: !3678)
!3692 = !DILocation(line: 255, column: 2, scope: !3678)
!3693 = distinct !DISubprogram(name: "of_node_name_prefix", scope: !3, file: !3, line: 73, type: !3642, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!3694 = !DILocalVariable(name: "np", arg: 1, scope: !3693, file: !3, line: 73, type: !3605)
!3695 = !DILocation(line: 73, column: 52, scope: !3693)
!3696 = !DILocalVariable(name: "prefix", arg: 2, scope: !3693, file: !3, line: 73, type: !116)
!3697 = !DILocation(line: 73, column: 68, scope: !3693)
!3698 = !DILocation(line: 75, column: 7, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3693, file: !3, line: 75, column: 6)
!3700 = !DILocation(line: 75, column: 6, scope: !3693)
!3701 = !DILocation(line: 76, column: 3, scope: !3699)
!3702 = !DILocation(line: 78, column: 27, scope: !3693)
!3703 = !DILocation(line: 78, column: 31, scope: !3693)
!3704 = !DILocation(line: 78, column: 17, scope: !3693)
!3705 = !DILocation(line: 78, column: 43, scope: !3693)
!3706 = !DILocation(line: 78, column: 58, scope: !3693)
!3707 = !DILocation(line: 78, column: 51, scope: !3693)
!3708 = !DILocation(line: 78, column: 9, scope: !3693)
!3709 = !DILocation(line: 78, column: 67, scope: !3693)
!3710 = !DILocation(line: 78, column: 2, scope: !3693)
!3711 = !DILocation(line: 79, column: 1, scope: !3693)
!3712 = distinct !DISubprogram(name: "of_bus_n_addr_cells", scope: !3, file: !3, line: 89, type: !3713, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!3713 = !DISubroutineType(types: !3714)
!3714 = !{!205, !120}
!3715 = !DILocalVariable(name: "np", arg: 1, scope: !3712, file: !3, line: 89, type: !120)
!3716 = !DILocation(line: 89, column: 45, scope: !3712)
!3717 = !DILocalVariable(name: "cells", scope: !3712, file: !3, line: 91, type: !87)
!3718 = !DILocation(line: 91, column: 6, scope: !3712)
!3719 = !DILocation(line: 93, column: 2, scope: !3712)
!3720 = !DILocation(line: 93, column: 9, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3722, file: !3, line: 93, column: 2)
!3722 = distinct !DILexicalBlock(scope: !3712, file: !3, line: 93, column: 2)
!3723 = !DILocation(line: 93, column: 2, scope: !3722)
!3724 = !DILocation(line: 94, column: 29, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3721, file: !3, line: 94, column: 7)
!3726 = !DILocation(line: 94, column: 8, scope: !3725)
!3727 = !DILocation(line: 94, column: 7, scope: !3721)
!3728 = !DILocation(line: 95, column: 11, scope: !3725)
!3729 = !DILocation(line: 95, column: 4, scope: !3725)
!3730 = !DILocation(line: 94, column: 57, scope: !3725)
!3731 = !DILocation(line: 93, column: 18, scope: !3721)
!3732 = !DILocation(line: 93, column: 22, scope: !3721)
!3733 = !DILocation(line: 93, column: 16, scope: !3721)
!3734 = !DILocation(line: 93, column: 2, scope: !3721)
!3735 = distinct !{!3735, !3723, !3736}
!3736 = !DILocation(line: 95, column: 11, scope: !3722)
!3737 = !DILocation(line: 98, column: 2, scope: !3712)
!3738 = !DILocation(line: 99, column: 1, scope: !3712)
!3739 = distinct !DISubprogram(name: "of_property_read_u32", scope: !122, file: !122, line: 1214, type: !3740, scopeLine: 1217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!3740 = !DISubroutineType(types: !3741)
!3741 = !{!205, !3605, !116, !1271}
!3742 = !DILocalVariable(name: "np", arg: 1, scope: !3739, file: !122, line: 1214, type: !3605)
!3743 = !DILocation(line: 1214, column: 66, scope: !3739)
!3744 = !DILocalVariable(name: "propname", arg: 2, scope: !3739, file: !122, line: 1215, type: !116)
!3745 = !DILocation(line: 1215, column: 24, scope: !3739)
!3746 = !DILocalVariable(name: "out_value", arg: 3, scope: !3739, file: !122, line: 1216, type: !1271)
!3747 = !DILocation(line: 1216, column: 17, scope: !3739)
!3748 = !DILocation(line: 1218, column: 36, scope: !3739)
!3749 = !DILocation(line: 1218, column: 40, scope: !3739)
!3750 = !DILocation(line: 1218, column: 50, scope: !3739)
!3751 = !DILocation(line: 1218, column: 9, scope: !3739)
!3752 = !DILocation(line: 1218, column: 2, scope: !3739)
!3753 = distinct !DISubprogram(name: "of_n_addr_cells", scope: !3, file: !3, line: 101, type: !3713, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!3754 = !DILocalVariable(name: "np", arg: 1, scope: !3753, file: !3, line: 101, type: !120)
!3755 = !DILocation(line: 101, column: 41, scope: !3753)
!3756 = !DILocation(line: 103, column: 6, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3753, file: !3, line: 103, column: 6)
!3758 = !DILocation(line: 103, column: 10, scope: !3757)
!3759 = !DILocation(line: 103, column: 6, scope: !3753)
!3760 = !DILocation(line: 104, column: 8, scope: !3757)
!3761 = !DILocation(line: 104, column: 12, scope: !3757)
!3762 = !DILocation(line: 104, column: 6, scope: !3757)
!3763 = !DILocation(line: 104, column: 3, scope: !3757)
!3764 = !DILocation(line: 106, column: 29, scope: !3753)
!3765 = !DILocation(line: 106, column: 9, scope: !3753)
!3766 = !DILocation(line: 106, column: 2, scope: !3753)
!3767 = distinct !DISubprogram(name: "of_bus_n_size_cells", scope: !3, file: !3, line: 110, type: !3713, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!3768 = !DILocalVariable(name: "np", arg: 1, scope: !3767, file: !3, line: 110, type: !120)
!3769 = !DILocation(line: 110, column: 45, scope: !3767)
!3770 = !DILocalVariable(name: "cells", scope: !3767, file: !3, line: 112, type: !87)
!3771 = !DILocation(line: 112, column: 6, scope: !3767)
!3772 = !DILocation(line: 114, column: 2, scope: !3767)
!3773 = !DILocation(line: 114, column: 9, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3775, file: !3, line: 114, column: 2)
!3775 = distinct !DILexicalBlock(scope: !3767, file: !3, line: 114, column: 2)
!3776 = !DILocation(line: 114, column: 2, scope: !3775)
!3777 = !DILocation(line: 115, column: 29, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 115, column: 7)
!3779 = !DILocation(line: 115, column: 8, scope: !3778)
!3780 = !DILocation(line: 115, column: 7, scope: !3774)
!3781 = !DILocation(line: 116, column: 11, scope: !3778)
!3782 = !DILocation(line: 116, column: 4, scope: !3778)
!3783 = !DILocation(line: 115, column: 54, scope: !3778)
!3784 = !DILocation(line: 114, column: 18, scope: !3774)
!3785 = !DILocation(line: 114, column: 22, scope: !3774)
!3786 = !DILocation(line: 114, column: 16, scope: !3774)
!3787 = !DILocation(line: 114, column: 2, scope: !3774)
!3788 = distinct !{!3788, !3776, !3789}
!3789 = !DILocation(line: 116, column: 11, scope: !3775)
!3790 = !DILocation(line: 119, column: 2, scope: !3767)
!3791 = !DILocation(line: 120, column: 1, scope: !3767)
!3792 = distinct !DISubprogram(name: "of_n_size_cells", scope: !3, file: !3, line: 122, type: !3713, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!3793 = !DILocalVariable(name: "np", arg: 1, scope: !3792, file: !3, line: 122, type: !120)
!3794 = !DILocation(line: 122, column: 41, scope: !3792)
!3795 = !DILocation(line: 124, column: 6, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 124, column: 6)
!3797 = !DILocation(line: 124, column: 10, scope: !3796)
!3798 = !DILocation(line: 124, column: 6, scope: !3792)
!3799 = !DILocation(line: 125, column: 8, scope: !3796)
!3800 = !DILocation(line: 125, column: 12, scope: !3796)
!3801 = !DILocation(line: 125, column: 6, scope: !3796)
!3802 = !DILocation(line: 125, column: 3, scope: !3796)
!3803 = !DILocation(line: 127, column: 29, scope: !3792)
!3804 = !DILocation(line: 127, column: 9, scope: !3792)
!3805 = !DILocation(line: 127, column: 2, scope: !3792)
!3806 = distinct !DISubprogram(name: "__of_phandle_cache_inv_entry", scope: !3, file: !3, line: 151, type: !3807, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!3807 = !DISubroutineType(types: !3808)
!3808 = !{null, !126}
!3809 = !DILocalVariable(name: "handle", arg: 1, scope: !3806, file: !3, line: 151, type: !126)
!3810 = !DILocation(line: 151, column: 43, scope: !3806)
!3811 = !DILocalVariable(name: "handle_hash", scope: !3806, file: !3, line: 153, type: !87)
!3812 = !DILocation(line: 153, column: 6, scope: !3806)
!3813 = !DILocalVariable(name: "np", scope: !3806, file: !3, line: 154, type: !120)
!3814 = !DILocation(line: 154, column: 22, scope: !3806)
!3815 = !DILocation(line: 156, column: 7, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 156, column: 6)
!3817 = !DILocation(line: 156, column: 6, scope: !3806)
!3818 = !DILocation(line: 157, column: 3, scope: !3816)
!3819 = !DILocation(line: 159, column: 38, scope: !3806)
!3820 = !DILocation(line: 159, column: 16, scope: !3806)
!3821 = !DILocation(line: 159, column: 14, scope: !3806)
!3822 = !DILocation(line: 161, column: 21, scope: !3806)
!3823 = !DILocation(line: 161, column: 7, scope: !3806)
!3824 = !DILocation(line: 161, column: 5, scope: !3806)
!3825 = !DILocation(line: 162, column: 6, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 162, column: 6)
!3827 = !DILocation(line: 162, column: 9, scope: !3826)
!3828 = !DILocation(line: 162, column: 12, scope: !3826)
!3829 = !DILocation(line: 162, column: 22, scope: !3826)
!3830 = !DILocation(line: 162, column: 26, scope: !3826)
!3831 = !DILocation(line: 162, column: 19, scope: !3826)
!3832 = !DILocation(line: 162, column: 6, scope: !3806)
!3833 = !DILocation(line: 163, column: 17, scope: !3826)
!3834 = !DILocation(line: 163, column: 3, scope: !3826)
!3835 = !DILocation(line: 163, column: 30, scope: !3826)
!3836 = !DILocation(line: 164, column: 1, scope: !3806)
!3837 = distinct !DISubprogram(name: "of_phandle_cache_hash", scope: !3, file: !3, line: 143, type: !3838, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!3838 = !DISubroutineType(types: !3839)
!3839 = !{!87, !126}
!3840 = !DILocalVariable(name: "handle", arg: 1, scope: !3837, file: !3, line: 143, type: !126)
!3841 = !DILocation(line: 143, column: 42, scope: !3837)
!3842 = !DILocation(line: 145, column: 17, scope: !3837)
!3843 = !DILocation(line: 145, column: 9, scope: !3837)
!3844 = !DILocation(line: 145, column: 2, scope: !3837)
!3845 = distinct !DISubprogram(name: "of_core_init", scope: !3, file: !3, line: 166, type: !1736, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!3846 = !DILocalVariable(name: "np", scope: !3845, file: !3, line: 168, type: !120)
!3847 = !DILocation(line: 168, column: 22, scope: !3845)
!3848 = !DILocation(line: 172, column: 2, scope: !3845)
!3849 = !DILocation(line: 173, column: 52, scope: !3845)
!3850 = !DILocation(line: 173, column: 12, scope: !3845)
!3851 = !DILocation(line: 173, column: 10, scope: !3845)
!3852 = !DILocation(line: 174, column: 7, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 174, column: 6)
!3854 = !DILocation(line: 174, column: 6, scope: !3845)
!3855 = !DILocation(line: 175, column: 3, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3853, file: !3, line: 174, column: 16)
!3857 = !DILocation(line: 176, column: 3, scope: !3856)
!3858 = !DILocation(line: 177, column: 3, scope: !3856)
!3859 = !DILocation(line: 179, column: 2, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 179, column: 2)
!3861 = !DILocation(line: 179, column: 2, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3860, file: !3, line: 179, column: 2)
!3863 = !DILocation(line: 180, column: 26, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3862, file: !3, line: 179, column: 27)
!3865 = !DILocation(line: 180, column: 3, scope: !3864)
!3866 = !DILocation(line: 181, column: 7, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3864, file: !3, line: 181, column: 7)
!3868 = !DILocation(line: 181, column: 11, scope: !3867)
!3869 = !DILocation(line: 181, column: 19, scope: !3867)
!3870 = !DILocation(line: 181, column: 59, scope: !3867)
!3871 = !DILocation(line: 181, column: 63, scope: !3867)
!3872 = !DILocation(line: 181, column: 37, scope: !3867)
!3873 = !DILocation(line: 181, column: 23, scope: !3867)
!3874 = !DILocation(line: 181, column: 7, scope: !3864)
!3875 = !DILocation(line: 182, column: 56, scope: !3867)
!3876 = !DILocation(line: 182, column: 40, scope: !3867)
!3877 = !DILocation(line: 182, column: 44, scope: !3867)
!3878 = !DILocation(line: 182, column: 18, scope: !3867)
!3879 = !DILocation(line: 182, column: 4, scope: !3867)
!3880 = !DILocation(line: 182, column: 54, scope: !3867)
!3881 = !DILocation(line: 183, column: 2, scope: !3864)
!3882 = distinct !{!3882, !3859, !3883}
!3883 = !DILocation(line: 183, column: 2, scope: !3860)
!3884 = !DILocation(line: 184, column: 2, scope: !3845)
!3885 = !DILocation(line: 187, column: 6, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 187, column: 6)
!3887 = !DILocation(line: 187, column: 6, scope: !3845)
!3888 = !DILocation(line: 188, column: 3, scope: !3886)
!3889 = !DILocation(line: 189, column: 1, scope: !3845)
!3890 = distinct !DISubprogram(name: "__of_find_all_nodes", scope: !3, file: !3, line: 225, type: !3891, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!3891 = !DISubroutineType(types: !3892)
!3892 = !{!120, !120}
!3893 = !DILocalVariable(name: "prev", arg: 1, scope: !3890, file: !3, line: 225, type: !120)
!3894 = !DILocation(line: 225, column: 61, scope: !3890)
!3895 = !DILocalVariable(name: "np", scope: !3890, file: !3, line: 227, type: !120)
!3896 = !DILocation(line: 227, column: 22, scope: !3890)
!3897 = !DILocation(line: 228, column: 7, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 228, column: 6)
!3899 = !DILocation(line: 228, column: 6, scope: !3890)
!3900 = !DILocation(line: 229, column: 8, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3898, file: !3, line: 228, column: 13)
!3902 = !DILocation(line: 229, column: 6, scope: !3901)
!3903 = !DILocation(line: 230, column: 2, scope: !3901)
!3904 = !DILocation(line: 230, column: 13, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3898, file: !3, line: 230, column: 13)
!3906 = !DILocation(line: 230, column: 19, scope: !3905)
!3907 = !DILocation(line: 230, column: 13, scope: !3898)
!3908 = !DILocation(line: 231, column: 8, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3905, file: !3, line: 230, column: 26)
!3910 = !DILocation(line: 231, column: 14, scope: !3909)
!3911 = !DILocation(line: 231, column: 6, scope: !3909)
!3912 = !DILocation(line: 232, column: 2, scope: !3909)
!3913 = !DILocation(line: 234, column: 8, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3905, file: !3, line: 232, column: 9)
!3915 = !DILocation(line: 234, column: 6, scope: !3914)
!3916 = !DILocation(line: 235, column: 3, scope: !3914)
!3917 = !DILocation(line: 235, column: 10, scope: !3914)
!3918 = !DILocation(line: 235, column: 14, scope: !3914)
!3919 = !DILocation(line: 235, column: 21, scope: !3914)
!3920 = !DILocation(line: 235, column: 25, scope: !3914)
!3921 = !DILocation(line: 235, column: 29, scope: !3914)
!3922 = !DILocation(line: 235, column: 24, scope: !3914)
!3923 = !DILocation(line: 0, scope: !3914)
!3924 = !DILocation(line: 236, column: 9, scope: !3914)
!3925 = !DILocation(line: 236, column: 13, scope: !3914)
!3926 = !DILocation(line: 236, column: 7, scope: !3914)
!3927 = distinct !{!3927, !3916, !3925}
!3928 = !DILocation(line: 237, column: 8, scope: !3914)
!3929 = !DILocation(line: 237, column: 12, scope: !3914)
!3930 = !DILocation(line: 237, column: 6, scope: !3914)
!3931 = !DILocation(line: 239, column: 9, scope: !3890)
!3932 = !DILocation(line: 239, column: 2, scope: !3890)
!3933 = distinct !DISubprogram(name: "of_find_property", scope: !3, file: !3, line: 210, type: !3934, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!3934 = !DISubroutineType(types: !3935)
!3935 = !{!3570, !3605, !116, !648}
!3936 = !DILocalVariable(name: "np", arg: 1, scope: !3933, file: !3, line: 210, type: !3605)
!3937 = !DILocation(line: 210, column: 61, scope: !3933)
!3938 = !DILocalVariable(name: "name", arg: 2, scope: !3933, file: !3, line: 211, type: !116)
!3939 = !DILocation(line: 211, column: 19, scope: !3933)
!3940 = !DILocalVariable(name: "lenp", arg: 3, scope: !3933, file: !3, line: 212, type: !648)
!3941 = !DILocation(line: 212, column: 12, scope: !3933)
!3942 = !DILocalVariable(name: "pp", scope: !3933, file: !3, line: 214, type: !3570)
!3943 = !DILocation(line: 214, column: 19, scope: !3933)
!3944 = !DILocalVariable(name: "flags", scope: !3933, file: !3, line: 215, type: !98)
!3945 = !DILocation(line: 215, column: 16, scope: !3933)
!3946 = !DILocation(line: 217, column: 2, scope: !3933)
!3947 = !DILocalVariable(name: "__dummy", scope: !3948, file: !3, line: 217, type: !98)
!3948 = distinct !DILexicalBlock(scope: !3949, file: !3, line: 217, column: 2)
!3949 = distinct !DILexicalBlock(scope: !3933, file: !3, line: 217, column: 2)
!3950 = !DILocation(line: 217, column: 2, scope: !3948)
!3951 = !DILocalVariable(name: "__dummy2", scope: !3948, file: !3, line: 217, type: !98)
!3952 = !DILocation(line: 217, column: 2, scope: !3949)
!3953 = !DILocation(line: 217, column: 2, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3949, file: !3, line: 217, column: 2)
!3955 = !DILocation(line: 217, column: 2, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3954, file: !3, line: 217, column: 2)
!3957 = !DILocalVariable(name: "__dummy", scope: !3958, file: !3, line: 217, type: !98)
!3958 = distinct !DILexicalBlock(scope: !3959, file: !3, line: 217, column: 2)
!3959 = distinct !DILexicalBlock(scope: !3956, file: !3, line: 217, column: 2)
!3960 = !DILocation(line: 217, column: 2, scope: !3958)
!3961 = !DILocalVariable(name: "__dummy2", scope: !3958, file: !3, line: 217, type: !98)
!3962 = !DILocation(line: 217, column: 2, scope: !3959)
!3963 = !DILocation(line: 217, column: 2, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3954, file: !3, line: 217, column: 2)
!3965 = !{i32 -2142659178}
!3966 = !DILocation(line: 217, column: 2, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3964, file: !3, line: 217, column: 2)
!3968 = !DILocation(line: 218, column: 26, scope: !3933)
!3969 = !DILocation(line: 218, column: 30, scope: !3933)
!3970 = !DILocation(line: 218, column: 36, scope: !3933)
!3971 = !DILocation(line: 218, column: 7, scope: !3933)
!3972 = !DILocation(line: 218, column: 5, scope: !3933)
!3973 = !DILocation(line: 219, column: 2, scope: !3933)
!3974 = !DILocalVariable(name: "__dummy", scope: !3975, file: !3, line: 219, type: !98)
!3975 = distinct !DILexicalBlock(scope: !3976, file: !3, line: 219, column: 2)
!3976 = distinct !DILexicalBlock(scope: !3933, file: !3, line: 219, column: 2)
!3977 = !DILocation(line: 219, column: 2, scope: !3975)
!3978 = !DILocalVariable(name: "__dummy2", scope: !3975, file: !3, line: 219, type: !98)
!3979 = !DILocation(line: 219, column: 2, scope: !3976)
!3980 = !DILocation(line: 219, column: 2, scope: !3981)
!3981 = distinct !DILexicalBlock(scope: !3976, file: !3, line: 219, column: 2)
!3982 = !DILocation(line: 219, column: 2, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3981, file: !3, line: 219, column: 2)
!3984 = !DILocalVariable(name: "__dummy", scope: !3985, file: !3, line: 219, type: !98)
!3985 = distinct !DILexicalBlock(scope: !3986, file: !3, line: 219, column: 2)
!3986 = distinct !DILexicalBlock(scope: !3983, file: !3, line: 219, column: 2)
!3987 = !DILocation(line: 219, column: 2, scope: !3985)
!3988 = !DILocalVariable(name: "__dummy2", scope: !3985, file: !3, line: 219, type: !98)
!3989 = !DILocation(line: 219, column: 2, scope: !3986)
!3990 = !DILocation(line: 219, column: 2, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3981, file: !3, line: 219, column: 2)
!3992 = !{i32 -2142658335}
!3993 = !DILocation(line: 219, column: 2, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3991, file: !3, line: 219, column: 2)
!3995 = !DILocation(line: 221, column: 9, scope: !3933)
!3996 = !DILocation(line: 221, column: 2, scope: !3933)
!3997 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !3998, file: !3998, line: 666, type: !3999, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!3998 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!3999 = !DISubroutineType(types: !4000)
!4000 = !{!98}
!4001 = !DILocalVariable(name: "f", scope: !3997, file: !3998, line: 668, type: !98)
!4002 = !DILocation(line: 668, column: 16, scope: !3997)
!4003 = !DILocation(line: 670, column: 6, scope: !3997)
!4004 = !DILocation(line: 670, column: 4, scope: !3997)
!4005 = !DILocation(line: 671, column: 2, scope: !3997)
!4006 = !DILocation(line: 672, column: 9, scope: !3997)
!4007 = !DILocation(line: 672, column: 2, scope: !3997)
!4008 = distinct !DISubprogram(name: "__of_find_property", scope: !3, file: !3, line: 191, type: !3934, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4009 = !DILocalVariable(name: "np", arg: 1, scope: !4008, file: !3, line: 191, type: !3605)
!4010 = !DILocation(line: 191, column: 70, scope: !4008)
!4011 = !DILocalVariable(name: "name", arg: 2, scope: !4008, file: !3, line: 192, type: !116)
!4012 = !DILocation(line: 192, column: 21, scope: !4008)
!4013 = !DILocalVariable(name: "lenp", arg: 3, scope: !4008, file: !3, line: 192, type: !648)
!4014 = !DILocation(line: 192, column: 32, scope: !4008)
!4015 = !DILocalVariable(name: "pp", scope: !4008, file: !3, line: 194, type: !3570)
!4016 = !DILocation(line: 194, column: 19, scope: !4008)
!4017 = !DILocation(line: 196, column: 7, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !4008, file: !3, line: 196, column: 6)
!4019 = !DILocation(line: 196, column: 6, scope: !4008)
!4020 = !DILocation(line: 197, column: 3, scope: !4018)
!4021 = !DILocation(line: 199, column: 12, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4008, file: !3, line: 199, column: 2)
!4023 = !DILocation(line: 199, column: 16, scope: !4022)
!4024 = !DILocation(line: 199, column: 10, scope: !4022)
!4025 = !DILocation(line: 199, column: 7, scope: !4022)
!4026 = !DILocation(line: 199, column: 28, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4022, file: !3, line: 199, column: 2)
!4028 = !DILocation(line: 199, column: 2, scope: !4022)
!4029 = !DILocation(line: 200, column: 7, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4031, file: !3, line: 200, column: 7)
!4031 = distinct !DILexicalBlock(scope: !4027, file: !3, line: 199, column: 47)
!4032 = !DILocation(line: 200, column: 35, scope: !4030)
!4033 = !DILocation(line: 200, column: 7, scope: !4031)
!4034 = !DILocation(line: 201, column: 8, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4036, file: !3, line: 201, column: 8)
!4036 = distinct !DILexicalBlock(scope: !4030, file: !3, line: 200, column: 41)
!4037 = !DILocation(line: 201, column: 8, scope: !4036)
!4038 = !DILocation(line: 202, column: 13, scope: !4035)
!4039 = !DILocation(line: 202, column: 17, scope: !4035)
!4040 = !DILocation(line: 202, column: 6, scope: !4035)
!4041 = !DILocation(line: 202, column: 11, scope: !4035)
!4042 = !DILocation(line: 202, column: 5, scope: !4035)
!4043 = !DILocation(line: 203, column: 4, scope: !4036)
!4044 = !DILocation(line: 205, column: 2, scope: !4031)
!4045 = !DILocation(line: 199, column: 37, scope: !4027)
!4046 = !DILocation(line: 199, column: 41, scope: !4027)
!4047 = !DILocation(line: 199, column: 35, scope: !4027)
!4048 = !DILocation(line: 199, column: 2, scope: !4027)
!4049 = distinct !{!4049, !4028, !4050}
!4050 = !DILocation(line: 205, column: 2, scope: !4022)
!4051 = !DILocation(line: 207, column: 9, scope: !4008)
!4052 = !DILocation(line: 207, column: 2, scope: !4008)
!4053 = !DILocation(line: 208, column: 1, scope: !4008)
!4054 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !3998, file: !3998, line: 651, type: !4055, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4055 = !DISubroutineType(types: !4056)
!4056 = !{null, !98}
!4057 = !DILocalVariable(name: "f", arg: 1, scope: !4054, file: !3998, line: 651, type: !98)
!4058 = !DILocation(line: 651, column: 65, scope: !4054)
!4059 = !DILocalVariable(name: "__edi", scope: !4060, file: !3998, line: 653, type: !98)
!4060 = distinct !DILexicalBlock(scope: !4054, file: !3998, line: 653, column: 2)
!4061 = !DILocation(line: 653, column: 2, scope: !4060)
!4062 = !DILocalVariable(name: "__esi", scope: !4060, file: !3998, line: 653, type: !98)
!4063 = !DILocalVariable(name: "__edx", scope: !4060, file: !3998, line: 653, type: !98)
!4064 = !DILocalVariable(name: "__ecx", scope: !4060, file: !3998, line: 653, type: !98)
!4065 = !DILocalVariable(name: "__eax", scope: !4060, file: !3998, line: 653, type: !98)
!4066 = !{i32 -2145685338, i32 -2145684588, i32 -2145684354, i32 -2145684303, i32 -2145684275, i32 -2145684250, i32 -2145684566, i32 -2145684553, i32 -2145684115, i32 -2145683996, i32 -2145684461, i32 -2145684434, i32 -2145684406, i32 -2145684376}
!4067 = !DILocation(line: 654, column: 1, scope: !4054)
!4068 = distinct !DISubprogram(name: "of_find_all_nodes", scope: !3, file: !3, line: 250, type: !3891, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4069 = !DILocalVariable(name: "prev", arg: 1, scope: !4068, file: !3, line: 250, type: !120)
!4070 = !DILocation(line: 250, column: 59, scope: !4068)
!4071 = !DILocalVariable(name: "np", scope: !4068, file: !3, line: 252, type: !120)
!4072 = !DILocation(line: 252, column: 22, scope: !4068)
!4073 = !DILocalVariable(name: "flags", scope: !4068, file: !3, line: 253, type: !98)
!4074 = !DILocation(line: 253, column: 16, scope: !4068)
!4075 = !DILocation(line: 255, column: 2, scope: !4068)
!4076 = !DILocalVariable(name: "__dummy", scope: !4077, file: !3, line: 255, type: !98)
!4077 = distinct !DILexicalBlock(scope: !4078, file: !3, line: 255, column: 2)
!4078 = distinct !DILexicalBlock(scope: !4068, file: !3, line: 255, column: 2)
!4079 = !DILocation(line: 255, column: 2, scope: !4077)
!4080 = !DILocalVariable(name: "__dummy2", scope: !4077, file: !3, line: 255, type: !98)
!4081 = !DILocation(line: 255, column: 2, scope: !4078)
!4082 = !DILocation(line: 255, column: 2, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4078, file: !3, line: 255, column: 2)
!4084 = !DILocation(line: 255, column: 2, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4083, file: !3, line: 255, column: 2)
!4086 = !DILocalVariable(name: "__dummy", scope: !4087, file: !3, line: 255, type: !98)
!4087 = distinct !DILexicalBlock(scope: !4088, file: !3, line: 255, column: 2)
!4088 = distinct !DILexicalBlock(scope: !4085, file: !3, line: 255, column: 2)
!4089 = !DILocation(line: 255, column: 2, scope: !4087)
!4090 = !DILocalVariable(name: "__dummy2", scope: !4087, file: !3, line: 255, type: !98)
!4091 = !DILocation(line: 255, column: 2, scope: !4088)
!4092 = !DILocation(line: 255, column: 2, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4083, file: !3, line: 255, column: 2)
!4094 = !{i32 -2142657422}
!4095 = !DILocation(line: 255, column: 2, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4093, file: !3, line: 255, column: 2)
!4097 = !DILocation(line: 256, column: 27, scope: !4068)
!4098 = !DILocation(line: 256, column: 7, scope: !4068)
!4099 = !DILocation(line: 256, column: 5, scope: !4068)
!4100 = !DILocation(line: 257, column: 14, scope: !4068)
!4101 = !DILocation(line: 257, column: 2, scope: !4068)
!4102 = !DILocation(line: 258, column: 14, scope: !4068)
!4103 = !DILocation(line: 258, column: 2, scope: !4068)
!4104 = !DILocation(line: 259, column: 2, scope: !4068)
!4105 = !DILocalVariable(name: "__dummy", scope: !4106, file: !3, line: 259, type: !98)
!4106 = distinct !DILexicalBlock(scope: !4107, file: !3, line: 259, column: 2)
!4107 = distinct !DILexicalBlock(scope: !4068, file: !3, line: 259, column: 2)
!4108 = !DILocation(line: 259, column: 2, scope: !4106)
!4109 = !DILocalVariable(name: "__dummy2", scope: !4106, file: !3, line: 259, type: !98)
!4110 = !DILocation(line: 259, column: 2, scope: !4107)
!4111 = !DILocation(line: 259, column: 2, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4107, file: !3, line: 259, column: 2)
!4113 = !DILocation(line: 259, column: 2, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4112, file: !3, line: 259, column: 2)
!4115 = !DILocalVariable(name: "__dummy", scope: !4116, file: !3, line: 259, type: !98)
!4116 = distinct !DILexicalBlock(scope: !4117, file: !3, line: 259, column: 2)
!4117 = distinct !DILexicalBlock(scope: !4114, file: !3, line: 259, column: 2)
!4118 = !DILocation(line: 259, column: 2, scope: !4116)
!4119 = !DILocalVariable(name: "__dummy2", scope: !4116, file: !3, line: 259, type: !98)
!4120 = !DILocation(line: 259, column: 2, scope: !4117)
!4121 = !DILocation(line: 259, column: 2, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4112, file: !3, line: 259, column: 2)
!4123 = !{i32 -2142656579}
!4124 = !DILocation(line: 259, column: 2, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4122, file: !3, line: 259, column: 2)
!4126 = !DILocation(line: 260, column: 9, scope: !4068)
!4127 = !DILocation(line: 260, column: 2, scope: !4068)
!4128 = distinct !DISubprogram(name: "of_node_get", scope: !122, file: !122, line: 125, type: !3891, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4129 = !DILocalVariable(name: "node", arg: 1, scope: !4128, file: !122, line: 125, type: !120)
!4130 = !DILocation(line: 125, column: 67, scope: !4128)
!4131 = !DILocation(line: 127, column: 9, scope: !4128)
!4132 = !DILocation(line: 127, column: 2, scope: !4128)
!4133 = distinct !DISubprogram(name: "of_node_put", scope: !122, file: !122, line: 129, type: !4134, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4134 = !DISubroutineType(types: !4135)
!4135 = !{null, !120}
!4136 = !DILocalVariable(name: "node", arg: 1, scope: !4133, file: !122, line: 129, type: !120)
!4137 = !DILocation(line: 129, column: 52, scope: !4133)
!4138 = !DILocation(line: 129, column: 60, scope: !4133)
!4139 = distinct !DISubprogram(name: "__of_get_property", scope: !3, file: !3, line: 268, type: !4140, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4140 = !DISubroutineType(types: !4141)
!4141 = !{!159, !3605, !116, !648}
!4142 = !DILocalVariable(name: "np", arg: 1, scope: !4139, file: !3, line: 268, type: !3605)
!4143 = !DILocation(line: 268, column: 57, scope: !4139)
!4144 = !DILocalVariable(name: "name", arg: 2, scope: !4139, file: !3, line: 269, type: !116)
!4145 = !DILocation(line: 269, column: 22, scope: !4139)
!4146 = !DILocalVariable(name: "lenp", arg: 3, scope: !4139, file: !3, line: 269, type: !648)
!4147 = !DILocation(line: 269, column: 33, scope: !4139)
!4148 = !DILocalVariable(name: "pp", scope: !4139, file: !3, line: 271, type: !3570)
!4149 = !DILocation(line: 271, column: 19, scope: !4139)
!4150 = !DILocation(line: 271, column: 43, scope: !4139)
!4151 = !DILocation(line: 271, column: 47, scope: !4139)
!4152 = !DILocation(line: 271, column: 53, scope: !4139)
!4153 = !DILocation(line: 271, column: 24, scope: !4139)
!4154 = !DILocation(line: 273, column: 9, scope: !4139)
!4155 = !DILocation(line: 273, column: 14, scope: !4139)
!4156 = !DILocation(line: 273, column: 18, scope: !4139)
!4157 = !DILocation(line: 273, column: 2, scope: !4139)
!4158 = distinct !DISubprogram(name: "of_get_property", scope: !3, file: !3, line: 280, type: !4140, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4159 = !DILocalVariable(name: "np", arg: 1, scope: !4158, file: !3, line: 280, type: !3605)
!4160 = !DILocation(line: 280, column: 55, scope: !4158)
!4161 = !DILocalVariable(name: "name", arg: 2, scope: !4158, file: !3, line: 280, type: !116)
!4162 = !DILocation(line: 280, column: 71, scope: !4158)
!4163 = !DILocalVariable(name: "lenp", arg: 3, scope: !4158, file: !3, line: 281, type: !648)
!4164 = !DILocation(line: 281, column: 13, scope: !4158)
!4165 = !DILocalVariable(name: "pp", scope: !4158, file: !3, line: 283, type: !3570)
!4166 = !DILocation(line: 283, column: 19, scope: !4158)
!4167 = !DILocation(line: 283, column: 41, scope: !4158)
!4168 = !DILocation(line: 283, column: 45, scope: !4158)
!4169 = !DILocation(line: 283, column: 51, scope: !4158)
!4170 = !DILocation(line: 283, column: 24, scope: !4158)
!4171 = !DILocation(line: 285, column: 9, scope: !4158)
!4172 = !DILocation(line: 285, column: 14, scope: !4158)
!4173 = !DILocation(line: 285, column: 18, scope: !4158)
!4174 = !DILocation(line: 285, column: 2, scope: !4158)
!4175 = distinct !DISubprogram(name: "arch_match_cpu_phys_id", scope: !3, file: !3, line: 303, type: !4176, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4176 = !DISubroutineType(types: !4177)
!4177 = !{!151, !205, !363}
!4178 = !DILocalVariable(name: "cpu", arg: 1, scope: !4175, file: !3, line: 303, type: !205)
!4179 = !DILocation(line: 303, column: 40, scope: !4175)
!4180 = !DILocalVariable(name: "phys_id", arg: 2, scope: !4175, file: !3, line: 303, type: !363)
!4181 = !DILocation(line: 303, column: 49, scope: !4175)
!4182 = !DILocation(line: 305, column: 14, scope: !4175)
!4183 = !DILocation(line: 305, column: 9, scope: !4175)
!4184 = !DILocation(line: 305, column: 25, scope: !4175)
!4185 = !DILocation(line: 305, column: 22, scope: !4175)
!4186 = !DILocation(line: 305, column: 2, scope: !4175)
!4187 = distinct !DISubprogram(name: "arch_find_n_match_cpu_physical_id", scope: !3, file: !3, line: 345, type: !4188, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4188 = !DISubroutineType(types: !4189)
!4189 = !{!151, !120, !205, !2467}
!4190 = !DILocalVariable(name: "cpun", arg: 1, scope: !4187, file: !3, line: 345, type: !120)
!4191 = !DILocation(line: 345, column: 67, scope: !4187)
!4192 = !DILocalVariable(name: "cpu", arg: 2, scope: !4187, file: !3, line: 346, type: !205)
!4193 = !DILocation(line: 346, column: 16, scope: !4187)
!4194 = !DILocalVariable(name: "thread", arg: 3, scope: !4187, file: !3, line: 346, type: !2467)
!4195 = !DILocation(line: 346, column: 35, scope: !4187)
!4196 = !DILocation(line: 358, column: 40, scope: !4187)
!4197 = !DILocation(line: 358, column: 53, scope: !4187)
!4198 = !DILocation(line: 358, column: 58, scope: !4187)
!4199 = !DILocation(line: 358, column: 9, scope: !4187)
!4200 = !DILocation(line: 358, column: 2, scope: !4187)
!4201 = distinct !DISubprogram(name: "__of_find_n_match_cpu_property", scope: !3, file: !3, line: 313, type: !4202, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4202 = !DISubroutineType(types: !4203)
!4203 = !{!151, !120, !116, !205, !2467}
!4204 = !DILocalVariable(name: "cpun", arg: 1, scope: !4201, file: !3, line: 313, type: !120)
!4205 = !DILocation(line: 313, column: 64, scope: !4201)
!4206 = !DILocalVariable(name: "prop_name", arg: 2, scope: !4201, file: !3, line: 314, type: !116)
!4207 = !DILocation(line: 314, column: 16, scope: !4201)
!4208 = !DILocalVariable(name: "cpu", arg: 3, scope: !4201, file: !3, line: 314, type: !205)
!4209 = !DILocation(line: 314, column: 31, scope: !4201)
!4210 = !DILocalVariable(name: "thread", arg: 4, scope: !4201, file: !3, line: 314, type: !2467)
!4211 = !DILocation(line: 314, column: 50, scope: !4201)
!4212 = !DILocalVariable(name: "cell", scope: !4201, file: !3, line: 316, type: !4213)
!4213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3615, size: 64)
!4214 = !DILocation(line: 316, column: 16, scope: !4201)
!4215 = !DILocalVariable(name: "ac", scope: !4201, file: !3, line: 317, type: !205)
!4216 = !DILocation(line: 317, column: 6, scope: !4201)
!4217 = !DILocalVariable(name: "prop_len", scope: !4201, file: !3, line: 317, type: !205)
!4218 = !DILocation(line: 317, column: 10, scope: !4201)
!4219 = !DILocalVariable(name: "tid", scope: !4201, file: !3, line: 317, type: !205)
!4220 = !DILocation(line: 317, column: 20, scope: !4201)
!4221 = !DILocalVariable(name: "hwid", scope: !4201, file: !3, line: 318, type: !363)
!4222 = !DILocation(line: 318, column: 6, scope: !4201)
!4223 = !DILocation(line: 320, column: 23, scope: !4201)
!4224 = !DILocation(line: 320, column: 7, scope: !4201)
!4225 = !DILocation(line: 320, column: 5, scope: !4201)
!4226 = !DILocation(line: 321, column: 25, scope: !4201)
!4227 = !DILocation(line: 321, column: 31, scope: !4201)
!4228 = !DILocation(line: 321, column: 9, scope: !4201)
!4229 = !DILocation(line: 321, column: 7, scope: !4201)
!4230 = !DILocation(line: 322, column: 7, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4201, file: !3, line: 322, column: 6)
!4232 = !DILocation(line: 322, column: 12, scope: !4231)
!4233 = !DILocation(line: 322, column: 16, scope: !4231)
!4234 = !DILocation(line: 322, column: 19, scope: !4231)
!4235 = !DILocation(line: 322, column: 45, scope: !4231)
!4236 = !DILocation(line: 322, column: 22, scope: !4231)
!4237 = !DILocation(line: 322, column: 6, scope: !4201)
!4238 = !DILocation(line: 323, column: 3, scope: !4231)
!4239 = !DILocation(line: 324, column: 7, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4201, file: !3, line: 324, column: 6)
!4241 = !DILocation(line: 324, column: 12, scope: !4240)
!4242 = !DILocation(line: 324, column: 16, scope: !4240)
!4243 = !DILocation(line: 324, column: 6, scope: !4201)
!4244 = !DILocation(line: 325, column: 3, scope: !4240)
!4245 = !DILocation(line: 326, column: 30, scope: !4201)
!4246 = !DILocation(line: 326, column: 28, scope: !4201)
!4247 = !DILocation(line: 326, column: 11, scope: !4201)
!4248 = !DILocation(line: 327, column: 11, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4201, file: !3, line: 327, column: 2)
!4250 = !DILocation(line: 327, column: 7, scope: !4249)
!4251 = !DILocation(line: 327, column: 16, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4249, file: !3, line: 327, column: 2)
!4253 = !DILocation(line: 327, column: 22, scope: !4252)
!4254 = !DILocation(line: 327, column: 20, scope: !4252)
!4255 = !DILocation(line: 327, column: 2, scope: !4249)
!4256 = !DILocation(line: 328, column: 25, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4252, file: !3, line: 327, column: 39)
!4258 = !DILocation(line: 328, column: 31, scope: !4257)
!4259 = !DILocation(line: 328, column: 10, scope: !4257)
!4260 = !DILocation(line: 328, column: 8, scope: !4257)
!4261 = !DILocation(line: 329, column: 30, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4257, file: !3, line: 329, column: 7)
!4263 = !DILocation(line: 329, column: 35, scope: !4262)
!4264 = !DILocation(line: 329, column: 7, scope: !4262)
!4265 = !DILocation(line: 329, column: 7, scope: !4257)
!4266 = !DILocation(line: 330, column: 8, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4268, file: !3, line: 330, column: 8)
!4268 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 329, column: 42)
!4269 = !DILocation(line: 330, column: 8, scope: !4268)
!4270 = !DILocation(line: 331, column: 15, scope: !4267)
!4271 = !DILocation(line: 331, column: 6, scope: !4267)
!4272 = !DILocation(line: 331, column: 13, scope: !4267)
!4273 = !DILocation(line: 331, column: 5, scope: !4267)
!4274 = !DILocation(line: 332, column: 4, scope: !4268)
!4275 = !DILocation(line: 334, column: 11, scope: !4257)
!4276 = !DILocation(line: 334, column: 8, scope: !4257)
!4277 = !DILocation(line: 335, column: 2, scope: !4257)
!4278 = !DILocation(line: 327, column: 35, scope: !4252)
!4279 = !DILocation(line: 327, column: 2, scope: !4252)
!4280 = distinct !{!4280, !4255, !4281}
!4281 = !DILocation(line: 335, column: 2, scope: !4249)
!4282 = !DILocation(line: 336, column: 2, scope: !4201)
!4283 = !DILocation(line: 337, column: 1, scope: !4201)
!4284 = distinct !DISubprogram(name: "of_get_cpu_node", scope: !3, file: !3, line: 380, type: !4285, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4285 = !DISubroutineType(types: !4286)
!4286 = !{!120, !205, !2467}
!4287 = !DILocalVariable(name: "cpu", arg: 1, scope: !4284, file: !3, line: 380, type: !205)
!4288 = !DILocation(line: 380, column: 41, scope: !4284)
!4289 = !DILocalVariable(name: "thread", arg: 2, scope: !4284, file: !3, line: 380, type: !2467)
!4290 = !DILocation(line: 380, column: 60, scope: !4284)
!4291 = !DILocalVariable(name: "cpun", scope: !4284, file: !3, line: 382, type: !120)
!4292 = !DILocation(line: 382, column: 22, scope: !4284)
!4293 = !DILocation(line: 384, column: 2, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4284, file: !3, line: 384, column: 2)
!4295 = !DILocation(line: 384, column: 2, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4294, file: !3, line: 384, column: 2)
!4297 = !DILocation(line: 385, column: 41, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4299, file: !3, line: 385, column: 7)
!4299 = distinct !DILexicalBlock(scope: !4296, file: !3, line: 384, column: 29)
!4300 = !DILocation(line: 385, column: 47, scope: !4298)
!4301 = !DILocation(line: 385, column: 52, scope: !4298)
!4302 = !DILocation(line: 385, column: 7, scope: !4298)
!4303 = !DILocation(line: 385, column: 7, scope: !4299)
!4304 = !DILocation(line: 386, column: 11, scope: !4298)
!4305 = !DILocation(line: 386, column: 4, scope: !4298)
!4306 = !DILocation(line: 387, column: 2, scope: !4299)
!4307 = distinct !{!4307, !4293, !4308}
!4308 = !DILocation(line: 387, column: 2, scope: !4294)
!4309 = !DILocation(line: 388, column: 2, scope: !4284)
!4310 = !DILocation(line: 389, column: 1, scope: !4284)
!4311 = distinct !DISubprogram(name: "of_get_next_cpu_node", scope: !3, file: !3, line: 782, type: !3891, scopeLine: 783, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4312 = !DILocalVariable(name: "prev", arg: 1, scope: !4311, file: !3, line: 782, type: !120)
!4313 = !DILocation(line: 782, column: 62, scope: !4311)
!4314 = !DILocalVariable(name: "next", scope: !4311, file: !3, line: 784, type: !120)
!4315 = !DILocation(line: 784, column: 22, scope: !4311)
!4316 = !DILocalVariable(name: "flags", scope: !4311, file: !3, line: 785, type: !98)
!4317 = !DILocation(line: 785, column: 16, scope: !4311)
!4318 = !DILocalVariable(name: "node", scope: !4311, file: !3, line: 786, type: !120)
!4319 = !DILocation(line: 786, column: 22, scope: !4311)
!4320 = !DILocation(line: 788, column: 7, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4311, file: !3, line: 788, column: 6)
!4322 = !DILocation(line: 788, column: 6, scope: !4311)
!4323 = !DILocation(line: 789, column: 10, scope: !4321)
!4324 = !DILocation(line: 789, column: 8, scope: !4321)
!4325 = !DILocation(line: 789, column: 3, scope: !4321)
!4326 = !DILocation(line: 791, column: 2, scope: !4311)
!4327 = !DILocalVariable(name: "__dummy", scope: !4328, file: !3, line: 791, type: !98)
!4328 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 791, column: 2)
!4329 = distinct !DILexicalBlock(scope: !4311, file: !3, line: 791, column: 2)
!4330 = !DILocation(line: 791, column: 2, scope: !4328)
!4331 = !DILocalVariable(name: "__dummy2", scope: !4328, file: !3, line: 791, type: !98)
!4332 = !DILocation(line: 791, column: 2, scope: !4329)
!4333 = !DILocation(line: 791, column: 2, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4329, file: !3, line: 791, column: 2)
!4335 = !DILocation(line: 791, column: 2, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4334, file: !3, line: 791, column: 2)
!4337 = !DILocalVariable(name: "__dummy", scope: !4338, file: !3, line: 791, type: !98)
!4338 = distinct !DILexicalBlock(scope: !4339, file: !3, line: 791, column: 2)
!4339 = distinct !DILexicalBlock(scope: !4336, file: !3, line: 791, column: 2)
!4340 = !DILocation(line: 791, column: 2, scope: !4338)
!4341 = !DILocalVariable(name: "__dummy2", scope: !4338, file: !3, line: 791, type: !98)
!4342 = !DILocation(line: 791, column: 2, scope: !4339)
!4343 = !DILocation(line: 791, column: 2, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4334, file: !3, line: 791, column: 2)
!4345 = !{i32 -2142638318}
!4346 = !DILocation(line: 791, column: 2, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4344, file: !3, line: 791, column: 2)
!4348 = !DILocation(line: 792, column: 6, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4311, file: !3, line: 792, column: 6)
!4350 = !DILocation(line: 792, column: 6, scope: !4311)
!4351 = !DILocation(line: 793, column: 10, scope: !4349)
!4352 = !DILocation(line: 793, column: 16, scope: !4349)
!4353 = !DILocation(line: 793, column: 8, scope: !4349)
!4354 = !DILocation(line: 793, column: 3, scope: !4349)
!4355 = !DILocation(line: 794, column: 11, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4349, file: !3, line: 794, column: 11)
!4357 = !DILocation(line: 794, column: 11, scope: !4349)
!4358 = !DILocation(line: 795, column: 10, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4356, file: !3, line: 794, column: 17)
!4360 = !DILocation(line: 795, column: 16, scope: !4359)
!4361 = !DILocation(line: 795, column: 8, scope: !4359)
!4362 = !DILocation(line: 796, column: 15, scope: !4359)
!4363 = !DILocation(line: 796, column: 3, scope: !4359)
!4364 = !DILocation(line: 797, column: 2, scope: !4359)
!4365 = !DILocation(line: 798, column: 2, scope: !4311)
!4366 = !DILocation(line: 798, column: 9, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4368, file: !3, line: 798, column: 2)
!4368 = distinct !DILexicalBlock(scope: !4311, file: !3, line: 798, column: 2)
!4369 = !DILocation(line: 798, column: 2, scope: !4368)
!4370 = !DILocation(line: 799, column: 25, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4372, file: !3, line: 799, column: 7)
!4372 = distinct !DILexicalBlock(scope: !4367, file: !3, line: 798, column: 37)
!4373 = !DILocation(line: 799, column: 9, scope: !4371)
!4374 = !DILocation(line: 799, column: 38, scope: !4371)
!4375 = !DILocation(line: 800, column: 27, scope: !4371)
!4376 = !DILocation(line: 800, column: 9, scope: !4371)
!4377 = !DILocation(line: 799, column: 7, scope: !4372)
!4378 = !DILocation(line: 801, column: 4, scope: !4371)
!4379 = !DILocation(line: 802, column: 19, scope: !4380)
!4380 = distinct !DILexicalBlock(scope: !4372, file: !3, line: 802, column: 7)
!4381 = !DILocation(line: 802, column: 7, scope: !4380)
!4382 = !DILocation(line: 802, column: 7, scope: !4372)
!4383 = !DILocation(line: 803, column: 4, scope: !4380)
!4384 = !DILocation(line: 804, column: 2, scope: !4372)
!4385 = !DILocation(line: 798, column: 22, scope: !4367)
!4386 = !DILocation(line: 798, column: 28, scope: !4367)
!4387 = !DILocation(line: 798, column: 20, scope: !4367)
!4388 = !DILocation(line: 798, column: 2, scope: !4367)
!4389 = distinct !{!4389, !4369, !4390}
!4390 = !DILocation(line: 804, column: 2, scope: !4368)
!4391 = !DILocation(line: 805, column: 14, scope: !4311)
!4392 = !DILocation(line: 805, column: 2, scope: !4311)
!4393 = !DILocation(line: 806, column: 2, scope: !4311)
!4394 = !DILocalVariable(name: "__dummy", scope: !4395, file: !3, line: 806, type: !98)
!4395 = distinct !DILexicalBlock(scope: !4396, file: !3, line: 806, column: 2)
!4396 = distinct !DILexicalBlock(scope: !4311, file: !3, line: 806, column: 2)
!4397 = !DILocation(line: 806, column: 2, scope: !4395)
!4398 = !DILocalVariable(name: "__dummy2", scope: !4395, file: !3, line: 806, type: !98)
!4399 = !DILocation(line: 806, column: 2, scope: !4396)
!4400 = !DILocation(line: 806, column: 2, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4396, file: !3, line: 806, column: 2)
!4402 = !DILocation(line: 806, column: 2, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 806, column: 2)
!4404 = !DILocalVariable(name: "__dummy", scope: !4405, file: !3, line: 806, type: !98)
!4405 = distinct !DILexicalBlock(scope: !4406, file: !3, line: 806, column: 2)
!4406 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 806, column: 2)
!4407 = !DILocation(line: 806, column: 2, scope: !4405)
!4408 = !DILocalVariable(name: "__dummy2", scope: !4405, file: !3, line: 806, type: !98)
!4409 = !DILocation(line: 806, column: 2, scope: !4406)
!4410 = !DILocation(line: 806, column: 2, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 806, column: 2)
!4412 = !{i32 -2142637475}
!4413 = !DILocation(line: 806, column: 2, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4411, file: !3, line: 806, column: 2)
!4415 = !DILocation(line: 807, column: 9, scope: !4311)
!4416 = !DILocation(line: 807, column: 2, scope: !4311)
!4417 = distinct !DISubprogram(name: "of_cpu_node_to_id", scope: !3, file: !3, line: 400, type: !3713, scopeLine: 401, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4418 = !DILocalVariable(name: "cpu_node", arg: 1, scope: !4417, file: !3, line: 400, type: !120)
!4419 = !DILocation(line: 400, column: 43, scope: !4417)
!4420 = !DILocalVariable(name: "cpu", scope: !4417, file: !3, line: 402, type: !205)
!4421 = !DILocation(line: 402, column: 6, scope: !4417)
!4422 = !DILocalVariable(name: "found", scope: !4417, file: !3, line: 403, type: !151)
!4423 = !DILocation(line: 403, column: 7, scope: !4417)
!4424 = !DILocalVariable(name: "np", scope: !4417, file: !3, line: 404, type: !120)
!4425 = !DILocation(line: 404, column: 22, scope: !4417)
!4426 = !DILocation(line: 406, column: 2, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 406, column: 2)
!4428 = !DILocation(line: 406, column: 2, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4427, file: !3, line: 406, column: 2)
!4430 = !DILocation(line: 407, column: 31, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4429, file: !3, line: 406, column: 29)
!4432 = !DILocation(line: 407, column: 8, scope: !4431)
!4433 = !DILocation(line: 407, column: 6, scope: !4431)
!4434 = !DILocation(line: 408, column: 12, scope: !4431)
!4435 = !DILocation(line: 408, column: 24, scope: !4431)
!4436 = !DILocation(line: 408, column: 21, scope: !4431)
!4437 = !DILocation(line: 408, column: 9, scope: !4431)
!4438 = !DILocation(line: 409, column: 15, scope: !4431)
!4439 = !DILocation(line: 409, column: 3, scope: !4431)
!4440 = !DILocation(line: 410, column: 7, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4431, file: !3, line: 410, column: 7)
!4442 = !DILocation(line: 410, column: 7, scope: !4431)
!4443 = !DILocation(line: 411, column: 11, scope: !4441)
!4444 = !DILocation(line: 411, column: 4, scope: !4441)
!4445 = !DILocation(line: 412, column: 2, scope: !4431)
!4446 = distinct !{!4446, !4426, !4447}
!4447 = !DILocation(line: 412, column: 2, scope: !4427)
!4448 = !DILocation(line: 414, column: 2, scope: !4417)
!4449 = !DILocation(line: 415, column: 1, scope: !4417)
!4450 = distinct !DISubprogram(name: "of_cpu_device_node_get", scope: !4451, file: !4451, line: 49, type: !4452, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4451 = !DIFile(filename: "./include/linux/of_device.h", directory: "/home/lizy2001/genbc/linux")
!4452 = !DISubroutineType(types: !4453)
!4453 = !{!120, !205}
!4454 = !DILocalVariable(name: "cpu", arg: 1, scope: !4450, file: !4451, line: 49, type: !205)
!4455 = !DILocation(line: 49, column: 62, scope: !4450)
!4456 = !DILocalVariable(name: "cpu_dev", scope: !4450, file: !4451, line: 51, type: !3156)
!4457 = !DILocation(line: 51, column: 17, scope: !4450)
!4458 = !DILocation(line: 52, column: 27, scope: !4450)
!4459 = !DILocation(line: 52, column: 12, scope: !4450)
!4460 = !DILocation(line: 52, column: 10, scope: !4450)
!4461 = !DILocation(line: 53, column: 7, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4450, file: !4451, line: 53, column: 6)
!4463 = !DILocation(line: 53, column: 6, scope: !4450)
!4464 = !DILocation(line: 54, column: 26, scope: !4462)
!4465 = !DILocation(line: 54, column: 10, scope: !4462)
!4466 = !DILocation(line: 54, column: 3, scope: !4462)
!4467 = !DILocation(line: 55, column: 21, scope: !4450)
!4468 = !DILocation(line: 55, column: 30, scope: !4450)
!4469 = !DILocation(line: 55, column: 9, scope: !4450)
!4470 = !DILocation(line: 55, column: 2, scope: !4450)
!4471 = !DILocation(line: 56, column: 1, scope: !4450)
!4472 = distinct !DISubprogram(name: "of_get_cpu_state_node", scope: !3, file: !3, line: 433, type: !4473, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4473 = !DISubroutineType(types: !4474)
!4474 = !{!120, !120, !205}
!4475 = !DILocalVariable(name: "cpu_node", arg: 1, scope: !4472, file: !3, line: 433, type: !120)
!4476 = !DILocation(line: 433, column: 63, scope: !4472)
!4477 = !DILocalVariable(name: "index", arg: 2, scope: !4472, file: !3, line: 434, type: !205)
!4478 = !DILocation(line: 434, column: 12, scope: !4472)
!4479 = !DILocalVariable(name: "args", scope: !4472, file: !3, line: 436, type: !3608)
!4480 = !DILocation(line: 436, column: 25, scope: !4472)
!4481 = !DILocalVariable(name: "err", scope: !4472, file: !3, line: 437, type: !205)
!4482 = !DILocation(line: 437, column: 6, scope: !4472)
!4483 = !DILocation(line: 439, column: 35, scope: !4472)
!4484 = !DILocation(line: 439, column: 8, scope: !4472)
!4485 = !DILocation(line: 439, column: 6, scope: !4472)
!4486 = !DILocation(line: 441, column: 7, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4472, file: !3, line: 441, column: 6)
!4488 = !DILocation(line: 441, column: 6, scope: !4472)
!4489 = !DILocalVariable(name: "state_node", scope: !4490, file: !3, line: 442, type: !120)
!4490 = distinct !DILexicalBlock(scope: !4487, file: !3, line: 441, column: 12)
!4491 = !DILocation(line: 442, column: 23, scope: !4490)
!4492 = !DILocation(line: 443, column: 26, scope: !4490)
!4493 = !DILocation(line: 443, column: 52, scope: !4490)
!4494 = !DILocation(line: 443, column: 4, scope: !4490)
!4495 = !DILocation(line: 445, column: 20, scope: !4490)
!4496 = !DILocation(line: 445, column: 3, scope: !4490)
!4497 = !DILocation(line: 446, column: 7, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !4490, file: !3, line: 446, column: 7)
!4499 = !DILocation(line: 446, column: 7, scope: !4490)
!4500 = !DILocation(line: 447, column: 11, scope: !4498)
!4501 = !DILocation(line: 447, column: 4, scope: !4498)
!4502 = !DILocation(line: 448, column: 2, scope: !4490)
!4503 = !DILocation(line: 450, column: 26, scope: !4472)
!4504 = !DILocation(line: 450, column: 55, scope: !4472)
!4505 = !DILocation(line: 450, column: 9, scope: !4472)
!4506 = !DILocation(line: 450, column: 2, scope: !4472)
!4507 = !DILocation(line: 451, column: 1, scope: !4472)
!4508 = distinct !DISubprogram(name: "of_parse_phandle_with_args", scope: !3, file: !3, line: 1480, type: !3603, scopeLine: 1483, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4509 = !DILocalVariable(name: "np", arg: 1, scope: !4508, file: !3, line: 1480, type: !3605)
!4510 = !DILocation(line: 1480, column: 58, scope: !4508)
!4511 = !DILocalVariable(name: "list_name", arg: 2, scope: !4508, file: !3, line: 1480, type: !116)
!4512 = !DILocation(line: 1480, column: 74, scope: !4508)
!4513 = !DILocalVariable(name: "cells_name", arg: 3, scope: !4508, file: !3, line: 1481, type: !116)
!4514 = !DILocation(line: 1481, column: 17, scope: !4508)
!4515 = !DILocalVariable(name: "index", arg: 4, scope: !4508, file: !3, line: 1481, type: !205)
!4516 = !DILocation(line: 1481, column: 33, scope: !4508)
!4517 = !DILocalVariable(name: "out_args", arg: 5, scope: !4508, file: !3, line: 1482, type: !3607)
!4518 = !DILocation(line: 1482, column: 29, scope: !4508)
!4519 = !DILocalVariable(name: "cell_count", scope: !4508, file: !3, line: 1484, type: !205)
!4520 = !DILocation(line: 1484, column: 6, scope: !4508)
!4521 = !DILocation(line: 1486, column: 6, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4508, file: !3, line: 1486, column: 6)
!4523 = !DILocation(line: 1486, column: 12, scope: !4522)
!4524 = !DILocation(line: 1486, column: 6, scope: !4508)
!4525 = !DILocation(line: 1487, column: 3, scope: !4522)
!4526 = !DILocation(line: 1490, column: 7, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4508, file: !3, line: 1490, column: 6)
!4528 = !DILocation(line: 1490, column: 6, scope: !4508)
!4529 = !DILocation(line: 1491, column: 14, scope: !4527)
!4530 = !DILocation(line: 1491, column: 3, scope: !4527)
!4531 = !DILocation(line: 1493, column: 38, scope: !4508)
!4532 = !DILocation(line: 1493, column: 42, scope: !4508)
!4533 = !DILocation(line: 1493, column: 53, scope: !4508)
!4534 = !DILocation(line: 1494, column: 10, scope: !4508)
!4535 = !DILocation(line: 1494, column: 22, scope: !4508)
!4536 = !DILocation(line: 1494, column: 29, scope: !4508)
!4537 = !DILocation(line: 1493, column: 9, scope: !4508)
!4538 = !DILocation(line: 1493, column: 2, scope: !4508)
!4539 = !DILocation(line: 1495, column: 1, scope: !4508)
!4540 = distinct !DISubprogram(name: "of_parse_phandle", scope: !3, file: !3, line: 1432, type: !4541, scopeLine: 1434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4541 = !DISubroutineType(types: !4542)
!4542 = !{!120, !3605, !116, !205}
!4543 = !DILocalVariable(name: "np", arg: 1, scope: !4540, file: !3, line: 1432, type: !3605)
!4544 = !DILocation(line: 1432, column: 64, scope: !4540)
!4545 = !DILocalVariable(name: "phandle_name", arg: 2, scope: !4540, file: !3, line: 1433, type: !116)
!4546 = !DILocation(line: 1433, column: 22, scope: !4540)
!4547 = !DILocalVariable(name: "index", arg: 3, scope: !4540, file: !3, line: 1433, type: !205)
!4548 = !DILocation(line: 1433, column: 40, scope: !4540)
!4549 = !DILocalVariable(name: "args", scope: !4540, file: !3, line: 1435, type: !3608)
!4550 = !DILocation(line: 1435, column: 25, scope: !4540)
!4551 = !DILocation(line: 1437, column: 6, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4540, file: !3, line: 1437, column: 6)
!4553 = !DILocation(line: 1437, column: 12, scope: !4552)
!4554 = !DILocation(line: 1437, column: 6, scope: !4540)
!4555 = !DILocation(line: 1438, column: 3, scope: !4552)
!4556 = !DILocation(line: 1440, column: 35, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4540, file: !3, line: 1440, column: 6)
!4558 = !DILocation(line: 1440, column: 39, scope: !4557)
!4559 = !DILocation(line: 1441, column: 7, scope: !4557)
!4560 = !DILocation(line: 1440, column: 6, scope: !4557)
!4561 = !DILocation(line: 1440, column: 6, scope: !4540)
!4562 = !DILocation(line: 1442, column: 3, scope: !4557)
!4563 = !DILocation(line: 1444, column: 14, scope: !4540)
!4564 = !DILocation(line: 1444, column: 2, scope: !4540)
!4565 = !DILocation(line: 1445, column: 1, scope: !4540)
!4566 = distinct !DISubprogram(name: "of_device_is_compatible", scope: !3, file: !3, line: 525, type: !4567, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4567 = !DISubroutineType(types: !4568)
!4568 = !{!205, !3605, !116}
!4569 = !DILocalVariable(name: "device", arg: 1, scope: !4566, file: !3, line: 525, type: !3605)
!4570 = !DILocation(line: 525, column: 55, scope: !4566)
!4571 = !DILocalVariable(name: "compat", arg: 2, scope: !4566, file: !3, line: 526, type: !116)
!4572 = !DILocation(line: 526, column: 15, scope: !4566)
!4573 = !DILocalVariable(name: "flags", scope: !4566, file: !3, line: 528, type: !98)
!4574 = !DILocation(line: 528, column: 16, scope: !4566)
!4575 = !DILocalVariable(name: "res", scope: !4566, file: !3, line: 529, type: !205)
!4576 = !DILocation(line: 529, column: 6, scope: !4566)
!4577 = !DILocation(line: 531, column: 2, scope: !4566)
!4578 = !DILocalVariable(name: "__dummy", scope: !4579, file: !3, line: 531, type: !98)
!4579 = distinct !DILexicalBlock(scope: !4580, file: !3, line: 531, column: 2)
!4580 = distinct !DILexicalBlock(scope: !4566, file: !3, line: 531, column: 2)
!4581 = !DILocation(line: 531, column: 2, scope: !4579)
!4582 = !DILocalVariable(name: "__dummy2", scope: !4579, file: !3, line: 531, type: !98)
!4583 = !DILocation(line: 531, column: 2, scope: !4580)
!4584 = !DILocation(line: 531, column: 2, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4580, file: !3, line: 531, column: 2)
!4586 = !DILocation(line: 531, column: 2, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4585, file: !3, line: 531, column: 2)
!4588 = !DILocalVariable(name: "__dummy", scope: !4589, file: !3, line: 531, type: !98)
!4589 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 531, column: 2)
!4590 = distinct !DILexicalBlock(scope: !4587, file: !3, line: 531, column: 2)
!4591 = !DILocation(line: 531, column: 2, scope: !4589)
!4592 = !DILocalVariable(name: "__dummy2", scope: !4589, file: !3, line: 531, type: !98)
!4593 = !DILocation(line: 531, column: 2, scope: !4590)
!4594 = !DILocation(line: 531, column: 2, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4585, file: !3, line: 531, column: 2)
!4596 = !{i32 -2142654097}
!4597 = !DILocation(line: 531, column: 2, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4595, file: !3, line: 531, column: 2)
!4599 = !DILocation(line: 532, column: 34, scope: !4566)
!4600 = !DILocation(line: 532, column: 42, scope: !4566)
!4601 = !DILocation(line: 532, column: 8, scope: !4566)
!4602 = !DILocation(line: 532, column: 6, scope: !4566)
!4603 = !DILocation(line: 533, column: 2, scope: !4566)
!4604 = !DILocalVariable(name: "__dummy", scope: !4605, file: !3, line: 533, type: !98)
!4605 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 533, column: 2)
!4606 = distinct !DILexicalBlock(scope: !4566, file: !3, line: 533, column: 2)
!4607 = !DILocation(line: 533, column: 2, scope: !4605)
!4608 = !DILocalVariable(name: "__dummy2", scope: !4605, file: !3, line: 533, type: !98)
!4609 = !DILocation(line: 533, column: 2, scope: !4606)
!4610 = !DILocation(line: 533, column: 2, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4606, file: !3, line: 533, column: 2)
!4612 = !DILocation(line: 533, column: 2, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4611, file: !3, line: 533, column: 2)
!4614 = !DILocalVariable(name: "__dummy", scope: !4615, file: !3, line: 533, type: !98)
!4615 = distinct !DILexicalBlock(scope: !4616, file: !3, line: 533, column: 2)
!4616 = distinct !DILexicalBlock(scope: !4613, file: !3, line: 533, column: 2)
!4617 = !DILocation(line: 533, column: 2, scope: !4615)
!4618 = !DILocalVariable(name: "__dummy2", scope: !4615, file: !3, line: 533, type: !98)
!4619 = !DILocation(line: 533, column: 2, scope: !4616)
!4620 = !DILocation(line: 533, column: 2, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4611, file: !3, line: 533, column: 2)
!4622 = !{i32 -2142653230}
!4623 = !DILocation(line: 533, column: 2, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4621, file: !3, line: 533, column: 2)
!4625 = !DILocation(line: 534, column: 9, scope: !4566)
!4626 = !DILocation(line: 534, column: 2, scope: !4566)
!4627 = distinct !DISubprogram(name: "__of_device_is_compatible", scope: !3, file: !3, line: 484, type: !4628, scopeLine: 486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4628 = !DISubroutineType(types: !4629)
!4629 = !{!205, !3605, !116, !116, !116}
!4630 = !DILocalVariable(name: "device", arg: 1, scope: !4627, file: !3, line: 484, type: !3605)
!4631 = !DILocation(line: 484, column: 64, scope: !4627)
!4632 = !DILocalVariable(name: "compat", arg: 2, scope: !4627, file: !3, line: 485, type: !116)
!4633 = !DILocation(line: 485, column: 22, scope: !4627)
!4634 = !DILocalVariable(name: "type", arg: 3, scope: !4627, file: !3, line: 485, type: !116)
!4635 = !DILocation(line: 485, column: 42, scope: !4627)
!4636 = !DILocalVariable(name: "name", arg: 4, scope: !4627, file: !3, line: 485, type: !116)
!4637 = !DILocation(line: 485, column: 60, scope: !4627)
!4638 = !DILocalVariable(name: "prop", scope: !4627, file: !3, line: 487, type: !3570)
!4639 = !DILocation(line: 487, column: 19, scope: !4627)
!4640 = !DILocalVariable(name: "cp", scope: !4627, file: !3, line: 488, type: !116)
!4641 = !DILocation(line: 488, column: 14, scope: !4627)
!4642 = !DILocalVariable(name: "index", scope: !4627, file: !3, line: 489, type: !205)
!4643 = !DILocation(line: 489, column: 6, scope: !4627)
!4644 = !DILocalVariable(name: "score", scope: !4627, file: !3, line: 489, type: !205)
!4645 = !DILocation(line: 489, column: 17, scope: !4627)
!4646 = !DILocation(line: 492, column: 6, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4627, file: !3, line: 492, column: 6)
!4648 = !DILocation(line: 492, column: 13, scope: !4647)
!4649 = !DILocation(line: 492, column: 16, scope: !4647)
!4650 = !DILocation(line: 492, column: 6, scope: !4627)
!4651 = !DILocation(line: 493, column: 29, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4647, file: !3, line: 492, column: 27)
!4653 = !DILocation(line: 493, column: 10, scope: !4652)
!4654 = !DILocation(line: 493, column: 8, scope: !4652)
!4655 = !DILocation(line: 494, column: 33, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4652, file: !3, line: 494, column: 3)
!4657 = !DILocation(line: 494, column: 13, scope: !4656)
!4658 = !DILocation(line: 494, column: 11, scope: !4656)
!4659 = !DILocation(line: 494, column: 8, scope: !4656)
!4660 = !DILocation(line: 494, column: 46, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4656, file: !3, line: 494, column: 3)
!4662 = !DILocation(line: 494, column: 3, scope: !4656)
!4663 = !DILocation(line: 496, column: 8, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4665, file: !3, line: 496, column: 8)
!4665 = distinct !DILexicalBlock(scope: !4661, file: !3, line: 495, column: 53)
!4666 = !DILocation(line: 496, column: 50, scope: !4664)
!4667 = !DILocation(line: 496, column: 8, scope: !4665)
!4668 = !DILocation(line: 497, column: 26, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 496, column: 56)
!4670 = !DILocation(line: 497, column: 32, scope: !4669)
!4671 = !DILocation(line: 497, column: 23, scope: !4669)
!4672 = !DILocation(line: 497, column: 11, scope: !4669)
!4673 = !DILocation(line: 498, column: 5, scope: !4669)
!4674 = !DILocation(line: 500, column: 3, scope: !4665)
!4675 = !DILocation(line: 495, column: 33, scope: !4661)
!4676 = !DILocation(line: 495, column: 39, scope: !4661)
!4677 = !DILocation(line: 495, column: 13, scope: !4661)
!4678 = !DILocation(line: 495, column: 11, scope: !4661)
!4679 = !DILocation(line: 495, column: 49, scope: !4661)
!4680 = !DILocation(line: 494, column: 3, scope: !4661)
!4681 = distinct !{!4681, !4662, !4682}
!4682 = !DILocation(line: 500, column: 3, scope: !4656)
!4683 = !DILocation(line: 501, column: 8, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4652, file: !3, line: 501, column: 7)
!4685 = !DILocation(line: 501, column: 7, scope: !4652)
!4686 = !DILocation(line: 502, column: 4, scope: !4684)
!4687 = !DILocation(line: 503, column: 2, scope: !4652)
!4688 = !DILocation(line: 506, column: 6, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4627, file: !3, line: 506, column: 6)
!4690 = !DILocation(line: 506, column: 11, scope: !4689)
!4691 = !DILocation(line: 506, column: 14, scope: !4689)
!4692 = !DILocation(line: 506, column: 6, scope: !4627)
!4693 = !DILocation(line: 507, column: 26, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 507, column: 7)
!4695 = distinct !DILexicalBlock(scope: !4689, file: !3, line: 506, column: 23)
!4696 = !DILocation(line: 507, column: 34, scope: !4694)
!4697 = !DILocation(line: 507, column: 8, scope: !4694)
!4698 = !DILocation(line: 507, column: 7, scope: !4695)
!4699 = !DILocation(line: 508, column: 4, scope: !4694)
!4700 = !DILocation(line: 509, column: 9, scope: !4695)
!4701 = !DILocation(line: 510, column: 2, scope: !4695)
!4702 = !DILocation(line: 513, column: 6, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4627, file: !3, line: 513, column: 6)
!4704 = !DILocation(line: 513, column: 11, scope: !4703)
!4705 = !DILocation(line: 513, column: 14, scope: !4703)
!4706 = !DILocation(line: 513, column: 6, scope: !4627)
!4707 = !DILocation(line: 514, column: 24, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !3, line: 514, column: 7)
!4709 = distinct !DILexicalBlock(scope: !4703, file: !3, line: 513, column: 23)
!4710 = !DILocation(line: 514, column: 32, scope: !4708)
!4711 = !DILocation(line: 514, column: 8, scope: !4708)
!4712 = !DILocation(line: 514, column: 7, scope: !4709)
!4713 = !DILocation(line: 515, column: 4, scope: !4708)
!4714 = !DILocation(line: 516, column: 8, scope: !4709)
!4715 = !DILocation(line: 517, column: 2, scope: !4709)
!4716 = !DILocation(line: 519, column: 9, scope: !4627)
!4717 = !DILocation(line: 519, column: 2, scope: !4627)
!4718 = !DILocation(line: 520, column: 1, scope: !4627)
!4719 = distinct !DISubprogram(name: "of_device_compatible_match", scope: !3, file: !3, line: 542, type: !4720, scopeLine: 544, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4720 = !DISubroutineType(types: !4721)
!4721 = !{!205, !120, !4722}
!4722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4723, size: 64)
!4723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !116)
!4724 = !DILocalVariable(name: "device", arg: 1, scope: !4719, file: !3, line: 542, type: !120)
!4725 = !DILocation(line: 542, column: 52, scope: !4719)
!4726 = !DILocalVariable(name: "compat", arg: 2, scope: !4719, file: !3, line: 543, type: !4722)
!4727 = !DILocation(line: 543, column: 30, scope: !4719)
!4728 = !DILocalVariable(name: "tmp", scope: !4719, file: !3, line: 545, type: !7)
!4729 = !DILocation(line: 545, column: 15, scope: !4719)
!4730 = !DILocalVariable(name: "score", scope: !4719, file: !3, line: 545, type: !7)
!4731 = !DILocation(line: 545, column: 20, scope: !4719)
!4732 = !DILocation(line: 547, column: 7, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4719, file: !3, line: 547, column: 6)
!4734 = !DILocation(line: 547, column: 6, scope: !4719)
!4735 = !DILocation(line: 548, column: 3, scope: !4733)
!4736 = !DILocation(line: 550, column: 2, scope: !4719)
!4737 = !DILocation(line: 550, column: 10, scope: !4719)
!4738 = !DILocation(line: 550, column: 9, scope: !4719)
!4739 = !DILocation(line: 551, column: 33, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4719, file: !3, line: 550, column: 18)
!4741 = !DILocation(line: 551, column: 42, scope: !4740)
!4742 = !DILocation(line: 551, column: 41, scope: !4740)
!4743 = !DILocation(line: 551, column: 9, scope: !4740)
!4744 = !DILocation(line: 551, column: 7, scope: !4740)
!4745 = !DILocation(line: 552, column: 7, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4740, file: !3, line: 552, column: 7)
!4747 = !DILocation(line: 552, column: 13, scope: !4746)
!4748 = !DILocation(line: 552, column: 11, scope: !4746)
!4749 = !DILocation(line: 552, column: 7, scope: !4740)
!4750 = !DILocation(line: 553, column: 12, scope: !4746)
!4751 = !DILocation(line: 553, column: 10, scope: !4746)
!4752 = !DILocation(line: 553, column: 4, scope: !4746)
!4753 = !DILocation(line: 554, column: 9, scope: !4740)
!4754 = distinct !{!4754, !4736, !4755}
!4755 = !DILocation(line: 555, column: 2, scope: !4719)
!4756 = !DILocation(line: 557, column: 9, scope: !4719)
!4757 = !DILocation(line: 557, column: 2, scope: !4719)
!4758 = !DILocation(line: 558, column: 1, scope: !4719)
!4759 = distinct !DISubprogram(name: "of_machine_is_compatible", scope: !3, file: !3, line: 567, type: !4760, scopeLine: 568, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4760 = !DISubroutineType(types: !4761)
!4761 = !{!205, !116}
!4762 = !DILocalVariable(name: "compat", arg: 1, scope: !4759, file: !3, line: 567, type: !116)
!4763 = !DILocation(line: 567, column: 42, scope: !4759)
!4764 = !DILocalVariable(name: "root", scope: !4759, file: !3, line: 569, type: !120)
!4765 = !DILocation(line: 569, column: 22, scope: !4759)
!4766 = !DILocalVariable(name: "rc", scope: !4759, file: !3, line: 570, type: !205)
!4767 = !DILocation(line: 570, column: 6, scope: !4759)
!4768 = !DILocation(line: 572, column: 9, scope: !4759)
!4769 = !DILocation(line: 572, column: 7, scope: !4759)
!4770 = !DILocation(line: 573, column: 6, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4759, file: !3, line: 573, column: 6)
!4772 = !DILocation(line: 573, column: 6, scope: !4759)
!4773 = !DILocation(line: 574, column: 32, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4771, file: !3, line: 573, column: 12)
!4775 = !DILocation(line: 574, column: 38, scope: !4774)
!4776 = !DILocation(line: 574, column: 8, scope: !4774)
!4777 = !DILocation(line: 574, column: 6, scope: !4774)
!4778 = !DILocation(line: 575, column: 15, scope: !4774)
!4779 = !DILocation(line: 575, column: 3, scope: !4774)
!4780 = !DILocation(line: 576, column: 2, scope: !4774)
!4781 = !DILocation(line: 577, column: 9, scope: !4759)
!4782 = !DILocation(line: 577, column: 2, scope: !4759)
!4783 = distinct !DISubprogram(name: "of_find_node_by_path", scope: !122, file: !122, line: 280, type: !4784, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4784 = !DISubroutineType(types: !4785)
!4785 = !{!120, !116}
!4786 = !DILocalVariable(name: "path", arg: 1, scope: !4783, file: !122, line: 280, type: !116)
!4787 = !DILocation(line: 280, column: 68, scope: !4783)
!4788 = !DILocation(line: 282, column: 35, scope: !4783)
!4789 = !DILocation(line: 282, column: 9, scope: !4783)
!4790 = !DILocation(line: 282, column: 2, scope: !4783)
!4791 = distinct !DISubprogram(name: "of_device_is_available", scope: !3, file: !3, line: 617, type: !4792, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4792 = !DISubroutineType(types: !4793)
!4793 = !{!151, !3605}
!4794 = !DILocalVariable(name: "device", arg: 1, scope: !4791, file: !3, line: 617, type: !3605)
!4795 = !DILocation(line: 617, column: 55, scope: !4791)
!4796 = !DILocalVariable(name: "flags", scope: !4791, file: !3, line: 619, type: !98)
!4797 = !DILocation(line: 619, column: 16, scope: !4791)
!4798 = !DILocalVariable(name: "res", scope: !4791, file: !3, line: 620, type: !151)
!4799 = !DILocation(line: 620, column: 7, scope: !4791)
!4800 = !DILocation(line: 622, column: 2, scope: !4791)
!4801 = !DILocalVariable(name: "__dummy", scope: !4802, file: !3, line: 622, type: !98)
!4802 = distinct !DILexicalBlock(scope: !4803, file: !3, line: 622, column: 2)
!4803 = distinct !DILexicalBlock(scope: !4791, file: !3, line: 622, column: 2)
!4804 = !DILocation(line: 622, column: 2, scope: !4802)
!4805 = !DILocalVariable(name: "__dummy2", scope: !4802, file: !3, line: 622, type: !98)
!4806 = !DILocation(line: 622, column: 2, scope: !4803)
!4807 = !DILocation(line: 622, column: 2, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4803, file: !3, line: 622, column: 2)
!4809 = !DILocation(line: 622, column: 2, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4808, file: !3, line: 622, column: 2)
!4811 = !DILocalVariable(name: "__dummy", scope: !4812, file: !3, line: 622, type: !98)
!4812 = distinct !DILexicalBlock(scope: !4813, file: !3, line: 622, column: 2)
!4813 = distinct !DILexicalBlock(scope: !4810, file: !3, line: 622, column: 2)
!4814 = !DILocation(line: 622, column: 2, scope: !4812)
!4815 = !DILocalVariable(name: "__dummy2", scope: !4812, file: !3, line: 622, type: !98)
!4816 = !DILocation(line: 622, column: 2, scope: !4813)
!4817 = !DILocation(line: 622, column: 2, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4808, file: !3, line: 622, column: 2)
!4819 = !{i32 -2142652184}
!4820 = !DILocation(line: 622, column: 2, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4818, file: !3, line: 622, column: 2)
!4822 = !DILocation(line: 623, column: 33, scope: !4791)
!4823 = !DILocation(line: 623, column: 8, scope: !4791)
!4824 = !DILocation(line: 623, column: 6, scope: !4791)
!4825 = !DILocation(line: 624, column: 2, scope: !4791)
!4826 = !DILocalVariable(name: "__dummy", scope: !4827, file: !3, line: 624, type: !98)
!4827 = distinct !DILexicalBlock(scope: !4828, file: !3, line: 624, column: 2)
!4828 = distinct !DILexicalBlock(scope: !4791, file: !3, line: 624, column: 2)
!4829 = !DILocation(line: 624, column: 2, scope: !4827)
!4830 = !DILocalVariable(name: "__dummy2", scope: !4827, file: !3, line: 624, type: !98)
!4831 = !DILocation(line: 624, column: 2, scope: !4828)
!4832 = !DILocation(line: 624, column: 2, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4828, file: !3, line: 624, column: 2)
!4834 = !DILocation(line: 624, column: 2, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 624, column: 2)
!4836 = !DILocalVariable(name: "__dummy", scope: !4837, file: !3, line: 624, type: !98)
!4837 = distinct !DILexicalBlock(scope: !4838, file: !3, line: 624, column: 2)
!4838 = distinct !DILexicalBlock(scope: !4835, file: !3, line: 624, column: 2)
!4839 = !DILocation(line: 624, column: 2, scope: !4837)
!4840 = !DILocalVariable(name: "__dummy2", scope: !4837, file: !3, line: 624, type: !98)
!4841 = !DILocation(line: 624, column: 2, scope: !4838)
!4842 = !DILocation(line: 624, column: 2, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 624, column: 2)
!4844 = !{i32 -2142651341}
!4845 = !DILocation(line: 624, column: 2, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4843, file: !3, line: 624, column: 2)
!4847 = !DILocation(line: 625, column: 9, scope: !4791)
!4848 = !DILocation(line: 625, column: 2, scope: !4791)
!4849 = distinct !DISubprogram(name: "__of_device_is_available", scope: !3, file: !3, line: 589, type: !4792, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4850 = !DILocalVariable(name: "device", arg: 1, scope: !4849, file: !3, line: 589, type: !3605)
!4851 = !DILocation(line: 589, column: 64, scope: !4849)
!4852 = !DILocalVariable(name: "status", scope: !4849, file: !3, line: 591, type: !116)
!4853 = !DILocation(line: 591, column: 14, scope: !4849)
!4854 = !DILocalVariable(name: "statlen", scope: !4849, file: !3, line: 592, type: !205)
!4855 = !DILocation(line: 592, column: 6, scope: !4849)
!4856 = !DILocation(line: 594, column: 7, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4849, file: !3, line: 594, column: 6)
!4858 = !DILocation(line: 594, column: 6, scope: !4849)
!4859 = !DILocation(line: 595, column: 3, scope: !4857)
!4860 = !DILocation(line: 597, column: 29, scope: !4849)
!4861 = !DILocation(line: 597, column: 11, scope: !4849)
!4862 = !DILocation(line: 597, column: 9, scope: !4849)
!4863 = !DILocation(line: 598, column: 6, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4849, file: !3, line: 598, column: 6)
!4865 = !DILocation(line: 598, column: 13, scope: !4864)
!4866 = !DILocation(line: 598, column: 6, scope: !4849)
!4867 = !DILocation(line: 599, column: 3, scope: !4864)
!4868 = !DILocation(line: 601, column: 6, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4849, file: !3, line: 601, column: 6)
!4870 = !DILocation(line: 601, column: 14, scope: !4869)
!4871 = !DILocation(line: 601, column: 6, scope: !4849)
!4872 = !DILocation(line: 602, column: 15, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 602, column: 7)
!4874 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 601, column: 19)
!4875 = !DILocation(line: 602, column: 8, scope: !4873)
!4876 = !DILocation(line: 602, column: 31, scope: !4873)
!4877 = !DILocation(line: 602, column: 42, scope: !4873)
!4878 = !DILocation(line: 602, column: 35, scope: !4873)
!4879 = !DILocation(line: 602, column: 7, scope: !4874)
!4880 = !DILocation(line: 603, column: 4, scope: !4873)
!4881 = !DILocation(line: 604, column: 2, scope: !4874)
!4882 = !DILocation(line: 606, column: 2, scope: !4849)
!4883 = !DILocation(line: 607, column: 1, scope: !4849)
!4884 = distinct !DISubprogram(name: "of_device_is_big_endian", scope: !3, file: !3, line: 642, type: !4792, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4885 = !DILocalVariable(name: "device", arg: 1, scope: !4884, file: !3, line: 642, type: !3605)
!4886 = !DILocation(line: 642, column: 56, scope: !4884)
!4887 = !DILocation(line: 644, column: 28, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4884, file: !3, line: 644, column: 6)
!4889 = !DILocation(line: 644, column: 6, scope: !4888)
!4890 = !DILocation(line: 644, column: 6, scope: !4884)
!4891 = !DILocation(line: 645, column: 3, scope: !4888)
!4892 = !DILocation(line: 649, column: 2, scope: !4884)
!4893 = !DILocation(line: 650, column: 1, scope: !4884)
!4894 = distinct !DISubprogram(name: "of_property_read_bool", scope: !122, file: !122, line: 1192, type: !3642, scopeLine: 1194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4895 = !DILocalVariable(name: "np", arg: 1, scope: !4894, file: !122, line: 1192, type: !3605)
!4896 = !DILocation(line: 1192, column: 68, scope: !4894)
!4897 = !DILocalVariable(name: "propname", arg: 2, scope: !4894, file: !122, line: 1193, type: !116)
!4898 = !DILocation(line: 1193, column: 19, scope: !4894)
!4899 = !DILocalVariable(name: "prop", scope: !4894, file: !122, line: 1195, type: !3570)
!4900 = !DILocation(line: 1195, column: 19, scope: !4894)
!4901 = !DILocation(line: 1195, column: 43, scope: !4894)
!4902 = !DILocation(line: 1195, column: 47, scope: !4894)
!4903 = !DILocation(line: 1195, column: 26, scope: !4894)
!4904 = !DILocation(line: 1197, column: 9, scope: !4894)
!4905 = !DILocation(line: 1197, column: 2, scope: !4894)
!4906 = distinct !DISubprogram(name: "of_get_parent", scope: !3, file: !3, line: 660, type: !4907, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4907 = !DISubroutineType(types: !4908)
!4908 = !{!120, !3605}
!4909 = !DILocalVariable(name: "node", arg: 1, scope: !4906, file: !3, line: 660, type: !3605)
!4910 = !DILocation(line: 660, column: 61, scope: !4906)
!4911 = !DILocalVariable(name: "np", scope: !4906, file: !3, line: 662, type: !120)
!4912 = !DILocation(line: 662, column: 22, scope: !4906)
!4913 = !DILocalVariable(name: "flags", scope: !4906, file: !3, line: 663, type: !98)
!4914 = !DILocation(line: 663, column: 16, scope: !4906)
!4915 = !DILocation(line: 665, column: 7, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 665, column: 6)
!4917 = !DILocation(line: 665, column: 6, scope: !4906)
!4918 = !DILocation(line: 666, column: 3, scope: !4916)
!4919 = !DILocation(line: 668, column: 2, scope: !4906)
!4920 = !DILocalVariable(name: "__dummy", scope: !4921, file: !3, line: 668, type: !98)
!4921 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 668, column: 2)
!4922 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 668, column: 2)
!4923 = !DILocation(line: 668, column: 2, scope: !4921)
!4924 = !DILocalVariable(name: "__dummy2", scope: !4921, file: !3, line: 668, type: !98)
!4925 = !DILocation(line: 668, column: 2, scope: !4922)
!4926 = !DILocation(line: 668, column: 2, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 668, column: 2)
!4928 = !DILocation(line: 668, column: 2, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 668, column: 2)
!4930 = !DILocalVariable(name: "__dummy", scope: !4931, file: !3, line: 668, type: !98)
!4931 = distinct !DILexicalBlock(scope: !4932, file: !3, line: 668, column: 2)
!4932 = distinct !DILexicalBlock(scope: !4929, file: !3, line: 668, column: 2)
!4933 = !DILocation(line: 668, column: 2, scope: !4931)
!4934 = !DILocalVariable(name: "__dummy2", scope: !4931, file: !3, line: 668, type: !98)
!4935 = !DILocation(line: 668, column: 2, scope: !4932)
!4936 = !DILocation(line: 668, column: 2, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 668, column: 2)
!4938 = !{i32 -2142645412}
!4939 = !DILocation(line: 668, column: 2, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4937, file: !3, line: 668, column: 2)
!4941 = !DILocation(line: 669, column: 19, scope: !4906)
!4942 = !DILocation(line: 669, column: 25, scope: !4906)
!4943 = !DILocation(line: 669, column: 7, scope: !4906)
!4944 = !DILocation(line: 669, column: 5, scope: !4906)
!4945 = !DILocation(line: 670, column: 2, scope: !4906)
!4946 = !DILocalVariable(name: "__dummy", scope: !4947, file: !3, line: 670, type: !98)
!4947 = distinct !DILexicalBlock(scope: !4948, file: !3, line: 670, column: 2)
!4948 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 670, column: 2)
!4949 = !DILocation(line: 670, column: 2, scope: !4947)
!4950 = !DILocalVariable(name: "__dummy2", scope: !4947, file: !3, line: 670, type: !98)
!4951 = !DILocation(line: 670, column: 2, scope: !4948)
!4952 = !DILocation(line: 670, column: 2, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4948, file: !3, line: 670, column: 2)
!4954 = !DILocation(line: 670, column: 2, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4953, file: !3, line: 670, column: 2)
!4956 = !DILocalVariable(name: "__dummy", scope: !4957, file: !3, line: 670, type: !98)
!4957 = distinct !DILexicalBlock(scope: !4958, file: !3, line: 670, column: 2)
!4958 = distinct !DILexicalBlock(scope: !4955, file: !3, line: 670, column: 2)
!4959 = !DILocation(line: 670, column: 2, scope: !4957)
!4960 = !DILocalVariable(name: "__dummy2", scope: !4957, file: !3, line: 670, type: !98)
!4961 = !DILocation(line: 670, column: 2, scope: !4958)
!4962 = !DILocation(line: 670, column: 2, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4953, file: !3, line: 670, column: 2)
!4964 = !{i32 -2142644569}
!4965 = !DILocation(line: 670, column: 2, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4963, file: !3, line: 670, column: 2)
!4967 = !DILocation(line: 671, column: 9, scope: !4906)
!4968 = !DILocation(line: 671, column: 2, scope: !4906)
!4969 = !DILocation(line: 672, column: 1, scope: !4906)
!4970 = distinct !DISubprogram(name: "of_get_next_parent", scope: !3, file: !3, line: 686, type: !3891, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!4971 = !DILocalVariable(name: "node", arg: 1, scope: !4970, file: !3, line: 686, type: !120)
!4972 = !DILocation(line: 686, column: 60, scope: !4970)
!4973 = !DILocalVariable(name: "parent", scope: !4970, file: !3, line: 688, type: !120)
!4974 = !DILocation(line: 688, column: 22, scope: !4970)
!4975 = !DILocalVariable(name: "flags", scope: !4970, file: !3, line: 689, type: !98)
!4976 = !DILocation(line: 689, column: 16, scope: !4970)
!4977 = !DILocation(line: 691, column: 7, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4970, file: !3, line: 691, column: 6)
!4979 = !DILocation(line: 691, column: 6, scope: !4970)
!4980 = !DILocation(line: 692, column: 3, scope: !4978)
!4981 = !DILocation(line: 694, column: 2, scope: !4970)
!4982 = !DILocalVariable(name: "__dummy", scope: !4983, file: !3, line: 694, type: !98)
!4983 = distinct !DILexicalBlock(scope: !4984, file: !3, line: 694, column: 2)
!4984 = distinct !DILexicalBlock(scope: !4970, file: !3, line: 694, column: 2)
!4985 = !DILocation(line: 694, column: 2, scope: !4983)
!4986 = !DILocalVariable(name: "__dummy2", scope: !4983, file: !3, line: 694, type: !98)
!4987 = !DILocation(line: 694, column: 2, scope: !4984)
!4988 = !DILocation(line: 694, column: 2, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4984, file: !3, line: 694, column: 2)
!4990 = !DILocation(line: 694, column: 2, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4989, file: !3, line: 694, column: 2)
!4992 = !DILocalVariable(name: "__dummy", scope: !4993, file: !3, line: 694, type: !98)
!4993 = distinct !DILexicalBlock(scope: !4994, file: !3, line: 694, column: 2)
!4994 = distinct !DILexicalBlock(scope: !4991, file: !3, line: 694, column: 2)
!4995 = !DILocation(line: 694, column: 2, scope: !4993)
!4996 = !DILocalVariable(name: "__dummy2", scope: !4993, file: !3, line: 694, type: !98)
!4997 = !DILocation(line: 694, column: 2, scope: !4994)
!4998 = !DILocation(line: 694, column: 2, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4989, file: !3, line: 694, column: 2)
!5000 = !{i32 -2142643650}
!5001 = !DILocation(line: 694, column: 2, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 694, column: 2)
!5003 = !DILocation(line: 695, column: 23, scope: !4970)
!5004 = !DILocation(line: 695, column: 29, scope: !4970)
!5005 = !DILocation(line: 695, column: 11, scope: !4970)
!5006 = !DILocation(line: 695, column: 9, scope: !4970)
!5007 = !DILocation(line: 696, column: 14, scope: !4970)
!5008 = !DILocation(line: 696, column: 2, scope: !4970)
!5009 = !DILocation(line: 697, column: 2, scope: !4970)
!5010 = !DILocalVariable(name: "__dummy", scope: !5011, file: !3, line: 697, type: !98)
!5011 = distinct !DILexicalBlock(scope: !5012, file: !3, line: 697, column: 2)
!5012 = distinct !DILexicalBlock(scope: !4970, file: !3, line: 697, column: 2)
!5013 = !DILocation(line: 697, column: 2, scope: !5011)
!5014 = !DILocalVariable(name: "__dummy2", scope: !5011, file: !3, line: 697, type: !98)
!5015 = !DILocation(line: 697, column: 2, scope: !5012)
!5016 = !DILocation(line: 697, column: 2, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5012, file: !3, line: 697, column: 2)
!5018 = !DILocation(line: 697, column: 2, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 697, column: 2)
!5020 = !DILocalVariable(name: "__dummy", scope: !5021, file: !3, line: 697, type: !98)
!5021 = distinct !DILexicalBlock(scope: !5022, file: !3, line: 697, column: 2)
!5022 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 697, column: 2)
!5023 = !DILocation(line: 697, column: 2, scope: !5021)
!5024 = !DILocalVariable(name: "__dummy2", scope: !5021, file: !3, line: 697, type: !98)
!5025 = !DILocation(line: 697, column: 2, scope: !5022)
!5026 = !DILocation(line: 697, column: 2, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 697, column: 2)
!5028 = !{i32 -2142642807}
!5029 = !DILocation(line: 697, column: 2, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5027, file: !3, line: 697, column: 2)
!5031 = !DILocation(line: 698, column: 9, scope: !4970)
!5032 = !DILocation(line: 698, column: 2, scope: !4970)
!5033 = !DILocation(line: 699, column: 1, scope: !4970)
!5034 = distinct !DISubprogram(name: "of_get_next_child", scope: !3, file: !3, line: 730, type: !5035, scopeLine: 732, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!5035 = !DISubroutineType(types: !5036)
!5036 = !{!120, !3605, !120}
!5037 = !DILocalVariable(name: "node", arg: 1, scope: !5034, file: !3, line: 730, type: !3605)
!5038 = !DILocation(line: 730, column: 65, scope: !5034)
!5039 = !DILocalVariable(name: "prev", arg: 2, scope: !5034, file: !3, line: 731, type: !120)
!5040 = !DILocation(line: 731, column: 22, scope: !5034)
!5041 = !DILocalVariable(name: "next", scope: !5034, file: !3, line: 733, type: !120)
!5042 = !DILocation(line: 733, column: 22, scope: !5034)
!5043 = !DILocalVariable(name: "flags", scope: !5034, file: !3, line: 734, type: !98)
!5044 = !DILocation(line: 734, column: 16, scope: !5034)
!5045 = !DILocation(line: 736, column: 2, scope: !5034)
!5046 = !DILocalVariable(name: "__dummy", scope: !5047, file: !3, line: 736, type: !98)
!5047 = distinct !DILexicalBlock(scope: !5048, file: !3, line: 736, column: 2)
!5048 = distinct !DILexicalBlock(scope: !5034, file: !3, line: 736, column: 2)
!5049 = !DILocation(line: 736, column: 2, scope: !5047)
!5050 = !DILocalVariable(name: "__dummy2", scope: !5047, file: !3, line: 736, type: !98)
!5051 = !DILocation(line: 736, column: 2, scope: !5048)
!5052 = !DILocation(line: 736, column: 2, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5048, file: !3, line: 736, column: 2)
!5054 = !DILocation(line: 736, column: 2, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5053, file: !3, line: 736, column: 2)
!5056 = !DILocalVariable(name: "__dummy", scope: !5057, file: !3, line: 736, type: !98)
!5057 = distinct !DILexicalBlock(scope: !5058, file: !3, line: 736, column: 2)
!5058 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 736, column: 2)
!5059 = !DILocation(line: 736, column: 2, scope: !5057)
!5060 = !DILocalVariable(name: "__dummy2", scope: !5057, file: !3, line: 736, type: !98)
!5061 = !DILocation(line: 736, column: 2, scope: !5058)
!5062 = !DILocation(line: 736, column: 2, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5053, file: !3, line: 736, column: 2)
!5064 = !{i32 -2142641878}
!5065 = !DILocation(line: 736, column: 2, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5063, file: !3, line: 736, column: 2)
!5067 = !DILocation(line: 737, column: 29, scope: !5034)
!5068 = !DILocation(line: 737, column: 35, scope: !5034)
!5069 = !DILocation(line: 737, column: 9, scope: !5034)
!5070 = !DILocation(line: 737, column: 7, scope: !5034)
!5071 = !DILocation(line: 738, column: 2, scope: !5034)
!5072 = !DILocalVariable(name: "__dummy", scope: !5073, file: !3, line: 738, type: !98)
!5073 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 738, column: 2)
!5074 = distinct !DILexicalBlock(scope: !5034, file: !3, line: 738, column: 2)
!5075 = !DILocation(line: 738, column: 2, scope: !5073)
!5076 = !DILocalVariable(name: "__dummy2", scope: !5073, file: !3, line: 738, type: !98)
!5077 = !DILocation(line: 738, column: 2, scope: !5074)
!5078 = !DILocation(line: 738, column: 2, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 738, column: 2)
!5080 = !DILocation(line: 738, column: 2, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5079, file: !3, line: 738, column: 2)
!5082 = !DILocalVariable(name: "__dummy", scope: !5083, file: !3, line: 738, type: !98)
!5083 = distinct !DILexicalBlock(scope: !5084, file: !3, line: 738, column: 2)
!5084 = distinct !DILexicalBlock(scope: !5081, file: !3, line: 738, column: 2)
!5085 = !DILocation(line: 738, column: 2, scope: !5083)
!5086 = !DILocalVariable(name: "__dummy2", scope: !5083, file: !3, line: 738, type: !98)
!5087 = !DILocation(line: 738, column: 2, scope: !5084)
!5088 = !DILocation(line: 738, column: 2, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5079, file: !3, line: 738, column: 2)
!5090 = !{i32 -2142641035}
!5091 = !DILocation(line: 738, column: 2, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 738, column: 2)
!5093 = !DILocation(line: 739, column: 9, scope: !5034)
!5094 = !DILocation(line: 739, column: 2, scope: !5034)
!5095 = distinct !DISubprogram(name: "__of_get_next_child", scope: !3, file: !3, line: 702, type: !5035, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!5096 = !DILocalVariable(name: "node", arg: 1, scope: !5095, file: !3, line: 702, type: !3605)
!5097 = !DILocation(line: 702, column: 74, scope: !5095)
!5098 = !DILocalVariable(name: "prev", arg: 2, scope: !5095, file: !3, line: 703, type: !120)
!5099 = !DILocation(line: 703, column: 27, scope: !5095)
!5100 = !DILocalVariable(name: "next", scope: !5095, file: !3, line: 705, type: !120)
!5101 = !DILocation(line: 705, column: 22, scope: !5095)
!5102 = !DILocation(line: 707, column: 7, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !5095, file: !3, line: 707, column: 6)
!5104 = !DILocation(line: 707, column: 6, scope: !5095)
!5105 = !DILocation(line: 708, column: 3, scope: !5103)
!5106 = !DILocation(line: 710, column: 9, scope: !5095)
!5107 = !DILocation(line: 710, column: 16, scope: !5095)
!5108 = !DILocation(line: 710, column: 22, scope: !5095)
!5109 = !DILocation(line: 710, column: 32, scope: !5095)
!5110 = !DILocation(line: 710, column: 38, scope: !5095)
!5111 = !DILocation(line: 710, column: 7, scope: !5095)
!5112 = !DILocation(line: 711, column: 2, scope: !5095)
!5113 = !DILocation(line: 711, column: 9, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5115, file: !3, line: 711, column: 2)
!5115 = distinct !DILexicalBlock(scope: !5095, file: !3, line: 711, column: 2)
!5116 = !DILocation(line: 711, column: 2, scope: !5115)
!5117 = !DILocation(line: 712, column: 19, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 712, column: 7)
!5119 = !DILocation(line: 712, column: 7, scope: !5118)
!5120 = !DILocation(line: 712, column: 7, scope: !5114)
!5121 = !DILocation(line: 713, column: 4, scope: !5118)
!5122 = !DILocation(line: 712, column: 23, scope: !5118)
!5123 = !DILocation(line: 711, column: 22, scope: !5114)
!5124 = !DILocation(line: 711, column: 28, scope: !5114)
!5125 = !DILocation(line: 711, column: 20, scope: !5114)
!5126 = !DILocation(line: 711, column: 2, scope: !5114)
!5127 = distinct !{!5127, !5116, !5128}
!5128 = !DILocation(line: 713, column: 4, scope: !5115)
!5129 = !DILocation(line: 714, column: 14, scope: !5095)
!5130 = !DILocation(line: 714, column: 2, scope: !5095)
!5131 = !DILocation(line: 715, column: 9, scope: !5095)
!5132 = !DILocation(line: 715, column: 2, scope: !5095)
!5133 = !DILocation(line: 716, column: 1, scope: !5095)
!5134 = distinct !DISubprogram(name: "of_get_next_available_child", scope: !3, file: !3, line: 751, type: !5035, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!5135 = !DILocalVariable(name: "node", arg: 1, scope: !5134, file: !3, line: 751, type: !3605)
!5136 = !DILocation(line: 751, column: 75, scope: !5134)
!5137 = !DILocalVariable(name: "prev", arg: 2, scope: !5134, file: !3, line: 752, type: !120)
!5138 = !DILocation(line: 752, column: 22, scope: !5134)
!5139 = !DILocalVariable(name: "next", scope: !5134, file: !3, line: 754, type: !120)
!5140 = !DILocation(line: 754, column: 22, scope: !5134)
!5141 = !DILocalVariable(name: "flags", scope: !5134, file: !3, line: 755, type: !98)
!5142 = !DILocation(line: 755, column: 16, scope: !5134)
!5143 = !DILocation(line: 757, column: 7, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 757, column: 6)
!5145 = !DILocation(line: 757, column: 6, scope: !5134)
!5146 = !DILocation(line: 758, column: 3, scope: !5144)
!5147 = !DILocation(line: 760, column: 2, scope: !5134)
!5148 = !DILocalVariable(name: "__dummy", scope: !5149, file: !3, line: 760, type: !98)
!5149 = distinct !DILexicalBlock(scope: !5150, file: !3, line: 760, column: 2)
!5150 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 760, column: 2)
!5151 = !DILocation(line: 760, column: 2, scope: !5149)
!5152 = !DILocalVariable(name: "__dummy2", scope: !5149, file: !3, line: 760, type: !98)
!5153 = !DILocation(line: 760, column: 2, scope: !5150)
!5154 = !DILocation(line: 760, column: 2, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5150, file: !3, line: 760, column: 2)
!5156 = !DILocation(line: 760, column: 2, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5155, file: !3, line: 760, column: 2)
!5158 = !DILocalVariable(name: "__dummy", scope: !5159, file: !3, line: 760, type: !98)
!5159 = distinct !DILexicalBlock(scope: !5160, file: !3, line: 760, column: 2)
!5160 = distinct !DILexicalBlock(scope: !5157, file: !3, line: 760, column: 2)
!5161 = !DILocation(line: 760, column: 2, scope: !5159)
!5162 = !DILocalVariable(name: "__dummy2", scope: !5159, file: !3, line: 760, type: !98)
!5163 = !DILocation(line: 760, column: 2, scope: !5160)
!5164 = !DILocation(line: 760, column: 2, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5155, file: !3, line: 760, column: 2)
!5166 = !{i32 -2142640108}
!5167 = !DILocation(line: 760, column: 2, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 760, column: 2)
!5169 = !DILocation(line: 761, column: 9, scope: !5134)
!5170 = !DILocation(line: 761, column: 16, scope: !5134)
!5171 = !DILocation(line: 761, column: 22, scope: !5134)
!5172 = !DILocation(line: 761, column: 32, scope: !5134)
!5173 = !DILocation(line: 761, column: 38, scope: !5134)
!5174 = !DILocation(line: 761, column: 7, scope: !5134)
!5175 = !DILocation(line: 762, column: 2, scope: !5134)
!5176 = !DILocation(line: 762, column: 9, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5178, file: !3, line: 762, column: 2)
!5178 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 762, column: 2)
!5179 = !DILocation(line: 762, column: 2, scope: !5178)
!5180 = !DILocation(line: 763, column: 33, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 763, column: 7)
!5182 = distinct !DILexicalBlock(scope: !5177, file: !3, line: 762, column: 37)
!5183 = !DILocation(line: 763, column: 8, scope: !5181)
!5184 = !DILocation(line: 763, column: 7, scope: !5182)
!5185 = !DILocation(line: 764, column: 4, scope: !5181)
!5186 = !DILocation(line: 765, column: 19, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 765, column: 7)
!5188 = !DILocation(line: 765, column: 7, scope: !5187)
!5189 = !DILocation(line: 765, column: 7, scope: !5182)
!5190 = !DILocation(line: 766, column: 4, scope: !5187)
!5191 = !DILocation(line: 767, column: 2, scope: !5182)
!5192 = !DILocation(line: 762, column: 22, scope: !5177)
!5193 = !DILocation(line: 762, column: 28, scope: !5177)
!5194 = !DILocation(line: 762, column: 20, scope: !5177)
!5195 = !DILocation(line: 762, column: 2, scope: !5177)
!5196 = distinct !{!5196, !5179, !5197}
!5197 = !DILocation(line: 767, column: 2, scope: !5178)
!5198 = !DILocation(line: 768, column: 14, scope: !5134)
!5199 = !DILocation(line: 768, column: 2, scope: !5134)
!5200 = !DILocation(line: 769, column: 2, scope: !5134)
!5201 = !DILocalVariable(name: "__dummy", scope: !5202, file: !3, line: 769, type: !98)
!5202 = distinct !DILexicalBlock(scope: !5203, file: !3, line: 769, column: 2)
!5203 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 769, column: 2)
!5204 = !DILocation(line: 769, column: 2, scope: !5202)
!5205 = !DILocalVariable(name: "__dummy2", scope: !5202, file: !3, line: 769, type: !98)
!5206 = !DILocation(line: 769, column: 2, scope: !5203)
!5207 = !DILocation(line: 769, column: 2, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5203, file: !3, line: 769, column: 2)
!5209 = !DILocation(line: 769, column: 2, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5208, file: !3, line: 769, column: 2)
!5211 = !DILocalVariable(name: "__dummy", scope: !5212, file: !3, line: 769, type: !98)
!5212 = distinct !DILexicalBlock(scope: !5213, file: !3, line: 769, column: 2)
!5213 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 769, column: 2)
!5214 = !DILocation(line: 769, column: 2, scope: !5212)
!5215 = !DILocalVariable(name: "__dummy2", scope: !5212, file: !3, line: 769, type: !98)
!5216 = !DILocation(line: 769, column: 2, scope: !5213)
!5217 = !DILocation(line: 769, column: 2, scope: !5218)
!5218 = distinct !DILexicalBlock(scope: !5208, file: !3, line: 769, column: 2)
!5219 = !{i32 -2142639265}
!5220 = !DILocation(line: 769, column: 2, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5218, file: !3, line: 769, column: 2)
!5222 = !DILocation(line: 770, column: 9, scope: !5134)
!5223 = !DILocation(line: 770, column: 2, scope: !5134)
!5224 = !DILocation(line: 771, column: 1, scope: !5134)
!5225 = distinct !DISubprogram(name: "__of_node_is_type", scope: !3, file: !3, line: 82, type: !3642, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!5226 = !DILocalVariable(name: "np", arg: 1, scope: !5225, file: !3, line: 82, type: !3605)
!5227 = !DILocation(line: 82, column: 57, scope: !5225)
!5228 = !DILocalVariable(name: "type", arg: 2, scope: !5225, file: !3, line: 82, type: !116)
!5229 = !DILocation(line: 82, column: 73, scope: !5225)
!5230 = !DILocalVariable(name: "match", scope: !5225, file: !3, line: 84, type: !116)
!5231 = !DILocation(line: 84, column: 14, scope: !5225)
!5232 = !DILocation(line: 84, column: 40, scope: !5225)
!5233 = !DILocation(line: 84, column: 22, scope: !5225)
!5234 = !DILocation(line: 86, column: 9, scope: !5225)
!5235 = !DILocation(line: 86, column: 12, scope: !5225)
!5236 = !DILocation(line: 86, column: 15, scope: !5225)
!5237 = !DILocation(line: 86, column: 21, scope: !5225)
!5238 = !DILocation(line: 86, column: 24, scope: !5225)
!5239 = !DILocation(line: 86, column: 29, scope: !5225)
!5240 = !DILocation(line: 86, column: 40, scope: !5225)
!5241 = !DILocation(line: 86, column: 47, scope: !5225)
!5242 = !DILocation(line: 86, column: 33, scope: !5225)
!5243 = !DILocation(line: 86, column: 32, scope: !5225)
!5244 = !DILocation(line: 0, scope: !5225)
!5245 = !DILocation(line: 86, column: 2, scope: !5225)
!5246 = distinct !DISubprogram(name: "of_get_compatible_child", scope: !3, file: !3, line: 822, type: !5247, scopeLine: 824, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!5247 = !DISubroutineType(types: !5248)
!5248 = !{!120, !3605, !116}
!5249 = !DILocalVariable(name: "parent", arg: 1, scope: !5246, file: !3, line: 822, type: !3605)
!5250 = !DILocation(line: 822, column: 71, scope: !5246)
!5251 = !DILocalVariable(name: "compatible", arg: 2, scope: !5246, file: !3, line: 823, type: !116)
!5252 = !DILocation(line: 823, column: 17, scope: !5246)
!5253 = !DILocalVariable(name: "child", scope: !5246, file: !3, line: 825, type: !120)
!5254 = !DILocation(line: 825, column: 22, scope: !5246)
!5255 = !DILocation(line: 827, column: 2, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5246, file: !3, line: 827, column: 2)
!5257 = !DILocation(line: 827, column: 2, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5256, file: !3, line: 827, column: 2)
!5259 = !DILocation(line: 828, column: 31, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5261, file: !3, line: 828, column: 7)
!5261 = distinct !DILexicalBlock(scope: !5258, file: !3, line: 827, column: 40)
!5262 = !DILocation(line: 828, column: 38, scope: !5260)
!5263 = !DILocation(line: 828, column: 7, scope: !5260)
!5264 = !DILocation(line: 828, column: 7, scope: !5261)
!5265 = !DILocation(line: 829, column: 4, scope: !5260)
!5266 = !DILocation(line: 830, column: 2, scope: !5261)
!5267 = distinct !{!5267, !5255, !5268}
!5268 = !DILocation(line: 830, column: 2, scope: !5256)
!5269 = !DILocation(line: 832, column: 9, scope: !5246)
!5270 = !DILocation(line: 832, column: 2, scope: !5246)
!5271 = distinct !DISubprogram(name: "of_get_child_by_name", scope: !3, file: !3, line: 847, type: !5247, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!5272 = !DILocalVariable(name: "node", arg: 1, scope: !5271, file: !3, line: 847, type: !3605)
!5273 = !DILocation(line: 847, column: 68, scope: !5271)
!5274 = !DILocalVariable(name: "name", arg: 2, scope: !5271, file: !3, line: 848, type: !116)
!5275 = !DILocation(line: 848, column: 17, scope: !5271)
!5276 = !DILocalVariable(name: "child", scope: !5271, file: !3, line: 850, type: !120)
!5277 = !DILocation(line: 850, column: 22, scope: !5271)
!5278 = !DILocation(line: 852, column: 2, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5271, file: !3, line: 852, column: 2)
!5280 = !DILocation(line: 852, column: 2, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5279, file: !3, line: 852, column: 2)
!5282 = !DILocation(line: 853, column: 23, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 853, column: 7)
!5284 = !DILocation(line: 853, column: 30, scope: !5283)
!5285 = !DILocation(line: 853, column: 7, scope: !5283)
!5286 = !DILocation(line: 853, column: 7, scope: !5281)
!5287 = !DILocation(line: 854, column: 4, scope: !5283)
!5288 = !DILocation(line: 853, column: 34, scope: !5283)
!5289 = distinct !{!5289, !5278, !5290}
!5290 = !DILocation(line: 854, column: 4, scope: !5279)
!5291 = !DILocation(line: 855, column: 9, scope: !5271)
!5292 = !DILocation(line: 855, column: 2, scope: !5271)
!5293 = distinct !DISubprogram(name: "__of_find_node_by_path", scope: !3, file: !3, line: 859, type: !5294, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!5294 = !DISubroutineType(types: !5295)
!5295 = !{!120, !120, !116}
!5296 = !DILocalVariable(name: "parent", arg: 1, scope: !5293, file: !3, line: 859, type: !120)
!5297 = !DILocation(line: 859, column: 64, scope: !5293)
!5298 = !DILocalVariable(name: "path", arg: 2, scope: !5293, file: !3, line: 860, type: !116)
!5299 = !DILocation(line: 860, column: 19, scope: !5293)
!5300 = !DILocalVariable(name: "child", scope: !5293, file: !3, line: 862, type: !120)
!5301 = !DILocation(line: 862, column: 22, scope: !5293)
!5302 = !DILocalVariable(name: "len", scope: !5293, file: !3, line: 863, type: !205)
!5303 = !DILocation(line: 863, column: 6, scope: !5293)
!5304 = !DILocation(line: 865, column: 16, scope: !5293)
!5305 = !DILocation(line: 865, column: 8, scope: !5293)
!5306 = !DILocation(line: 865, column: 6, scope: !5293)
!5307 = !DILocation(line: 866, column: 7, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5293, file: !3, line: 866, column: 6)
!5309 = !DILocation(line: 866, column: 6, scope: !5293)
!5310 = !DILocation(line: 867, column: 3, scope: !5308)
!5311 = !DILocation(line: 869, column: 2, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5293, file: !3, line: 869, column: 2)
!5313 = !DILocation(line: 869, column: 2, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5312, file: !3, line: 869, column: 2)
!5315 = !DILocalVariable(name: "name", scope: !5316, file: !3, line: 870, type: !116)
!5316 = distinct !DILexicalBlock(scope: !5314, file: !3, line: 869, column: 42)
!5317 = !DILocation(line: 870, column: 15, scope: !5316)
!5318 = !DILocation(line: 870, column: 32, scope: !5316)
!5319 = !DILocation(line: 870, column: 39, scope: !5316)
!5320 = !DILocation(line: 870, column: 22, scope: !5316)
!5321 = !DILocation(line: 871, column: 15, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5316, file: !3, line: 871, column: 7)
!5323 = !DILocation(line: 871, column: 21, scope: !5322)
!5324 = !DILocation(line: 871, column: 27, scope: !5322)
!5325 = !DILocation(line: 871, column: 7, scope: !5322)
!5326 = !DILocation(line: 871, column: 32, scope: !5322)
!5327 = !DILocation(line: 871, column: 37, scope: !5322)
!5328 = !DILocation(line: 871, column: 48, scope: !5322)
!5329 = !DILocation(line: 871, column: 41, scope: !5322)
!5330 = !DILocation(line: 871, column: 57, scope: !5322)
!5331 = !DILocation(line: 871, column: 54, scope: !5322)
!5332 = !DILocation(line: 871, column: 7, scope: !5316)
!5333 = !DILocation(line: 872, column: 11, scope: !5322)
!5334 = !DILocation(line: 872, column: 4, scope: !5322)
!5335 = !DILocation(line: 873, column: 2, scope: !5316)
!5336 = distinct !{!5336, !5311, !5337}
!5337 = !DILocation(line: 873, column: 2, scope: !5312)
!5338 = !DILocation(line: 874, column: 2, scope: !5293)
!5339 = !DILocation(line: 875, column: 1, scope: !5293)
!5340 = distinct !DISubprogram(name: "__of_find_node_by_full_path", scope: !3, file: !3, line: 877, type: !5294, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!5341 = !DILocalVariable(name: "node", arg: 1, scope: !5340, file: !3, line: 877, type: !120)
!5342 = !DILocation(line: 877, column: 69, scope: !5340)
!5343 = !DILocalVariable(name: "path", arg: 2, scope: !5340, file: !3, line: 878, type: !116)
!5344 = !DILocation(line: 878, column: 19, scope: !5340)
!5345 = !DILocalVariable(name: "separator", scope: !5340, file: !3, line: 880, type: !116)
!5346 = !DILocation(line: 880, column: 14, scope: !5340)
!5347 = !DILocation(line: 880, column: 33, scope: !5340)
!5348 = !DILocation(line: 880, column: 26, scope: !5340)
!5349 = !DILocation(line: 882, column: 2, scope: !5340)
!5350 = !DILocation(line: 882, column: 9, scope: !5340)
!5351 = !DILocation(line: 882, column: 14, scope: !5340)
!5352 = !DILocation(line: 882, column: 18, scope: !5340)
!5353 = !DILocation(line: 882, column: 17, scope: !5340)
!5354 = !DILocation(line: 882, column: 23, scope: !5340)
!5355 = !DILocation(line: 0, scope: !5340)
!5356 = !DILocalVariable(name: "tmp", scope: !5357, file: !3, line: 883, type: !120)
!5357 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 882, column: 31)
!5358 = !DILocation(line: 883, column: 23, scope: !5357)
!5359 = !DILocation(line: 883, column: 29, scope: !5357)
!5360 = !DILocation(line: 885, column: 7, scope: !5357)
!5361 = !DILocation(line: 886, column: 33, scope: !5357)
!5362 = !DILocation(line: 886, column: 39, scope: !5357)
!5363 = !DILocation(line: 886, column: 10, scope: !5357)
!5364 = !DILocation(line: 886, column: 8, scope: !5357)
!5365 = !DILocation(line: 887, column: 15, scope: !5357)
!5366 = !DILocation(line: 887, column: 3, scope: !5357)
!5367 = !DILocation(line: 888, column: 20, scope: !5357)
!5368 = !DILocation(line: 888, column: 10, scope: !5357)
!5369 = !DILocation(line: 888, column: 8, scope: !5357)
!5370 = !DILocation(line: 889, column: 7, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5357, file: !3, line: 889, column: 7)
!5372 = !DILocation(line: 889, column: 17, scope: !5371)
!5373 = !DILocation(line: 889, column: 20, scope: !5371)
!5374 = !DILocation(line: 889, column: 32, scope: !5371)
!5375 = !DILocation(line: 889, column: 30, scope: !5371)
!5376 = !DILocation(line: 889, column: 7, scope: !5357)
!5377 = !DILocation(line: 890, column: 4, scope: !5371)
!5378 = distinct !{!5378, !5349, !5379}
!5379 = !DILocation(line: 891, column: 2, scope: !5340)
!5380 = !DILocation(line: 892, column: 9, scope: !5340)
!5381 = !DILocation(line: 892, column: 2, scope: !5340)
!5382 = distinct !DISubprogram(name: "of_find_node_opts_by_path", scope: !3, file: !3, line: 913, type: !5383, scopeLine: 914, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!5383 = !DISubroutineType(types: !5384)
!5384 = !{!120, !116, !3522}
!5385 = !DILocalVariable(name: "path", arg: 1, scope: !5382, file: !3, line: 913, type: !116)
!5386 = !DILocation(line: 913, column: 59, scope: !5382)
!5387 = !DILocalVariable(name: "opts", arg: 2, scope: !5382, file: !3, line: 913, type: !3522)
!5388 = !DILocation(line: 913, column: 78, scope: !5382)
!5389 = !DILocalVariable(name: "np", scope: !5382, file: !3, line: 915, type: !120)
!5390 = !DILocation(line: 915, column: 22, scope: !5382)
!5391 = !DILocalVariable(name: "pp", scope: !5382, file: !3, line: 916, type: !3570)
!5392 = !DILocation(line: 916, column: 19, scope: !5382)
!5393 = !DILocalVariable(name: "flags", scope: !5382, file: !3, line: 917, type: !98)
!5394 = !DILocation(line: 917, column: 16, scope: !5382)
!5395 = !DILocalVariable(name: "separator", scope: !5382, file: !3, line: 918, type: !116)
!5396 = !DILocation(line: 918, column: 14, scope: !5382)
!5397 = !DILocation(line: 918, column: 33, scope: !5382)
!5398 = !DILocation(line: 918, column: 26, scope: !5382)
!5399 = !DILocation(line: 920, column: 6, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5382, file: !3, line: 920, column: 6)
!5401 = !DILocation(line: 920, column: 6, scope: !5382)
!5402 = !DILocation(line: 921, column: 11, scope: !5400)
!5403 = !DILocation(line: 921, column: 23, scope: !5400)
!5404 = !DILocation(line: 921, column: 33, scope: !5400)
!5405 = !DILocation(line: 921, column: 4, scope: !5400)
!5406 = !DILocation(line: 921, column: 9, scope: !5400)
!5407 = !DILocation(line: 921, column: 3, scope: !5400)
!5408 = !DILocation(line: 923, column: 13, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5382, file: !3, line: 923, column: 6)
!5410 = !DILocation(line: 923, column: 6, scope: !5409)
!5411 = !DILocation(line: 923, column: 24, scope: !5409)
!5412 = !DILocation(line: 923, column: 6, scope: !5382)
!5413 = !DILocation(line: 924, column: 22, scope: !5409)
!5414 = !DILocation(line: 924, column: 10, scope: !5409)
!5415 = !DILocation(line: 924, column: 3, scope: !5409)
!5416 = !DILocation(line: 927, column: 7, scope: !5417)
!5417 = distinct !DILexicalBlock(scope: !5382, file: !3, line: 927, column: 6)
!5418 = !DILocation(line: 927, column: 6, scope: !5417)
!5419 = !DILocation(line: 927, column: 12, scope: !5417)
!5420 = !DILocation(line: 927, column: 6, scope: !5382)
!5421 = !DILocalVariable(name: "len", scope: !5422, file: !3, line: 928, type: !205)
!5422 = distinct !DILexicalBlock(scope: !5417, file: !3, line: 927, column: 20)
!5423 = !DILocation(line: 928, column: 7, scope: !5422)
!5424 = !DILocalVariable(name: "p", scope: !5422, file: !3, line: 929, type: !116)
!5425 = !DILocation(line: 929, column: 15, scope: !5422)
!5426 = !DILocation(line: 929, column: 19, scope: !5422)
!5427 = !DILocation(line: 931, column: 8, scope: !5428)
!5428 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 931, column: 7)
!5429 = !DILocation(line: 931, column: 7, scope: !5422)
!5430 = !DILocation(line: 932, column: 18, scope: !5428)
!5431 = !DILocation(line: 932, column: 8, scope: !5428)
!5432 = !DILocation(line: 932, column: 6, scope: !5428)
!5433 = !DILocation(line: 932, column: 4, scope: !5428)
!5434 = !DILocation(line: 933, column: 9, scope: !5422)
!5435 = !DILocation(line: 933, column: 13, scope: !5422)
!5436 = !DILocation(line: 933, column: 11, scope: !5422)
!5437 = !DILocation(line: 933, column: 7, scope: !5422)
!5438 = !DILocation(line: 936, column: 8, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 936, column: 7)
!5440 = !DILocation(line: 936, column: 7, scope: !5422)
!5441 = !DILocation(line: 937, column: 4, scope: !5439)
!5442 = !DILocation(line: 939, column: 3, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 939, column: 3)
!5444 = !DILocation(line: 939, column: 3, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !5443, file: !3, line: 939, column: 3)
!5446 = !DILocation(line: 940, column: 15, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 940, column: 8)
!5448 = distinct !DILexicalBlock(scope: !5445, file: !3, line: 939, column: 45)
!5449 = !DILocation(line: 940, column: 19, scope: !5447)
!5450 = !DILocation(line: 940, column: 8, scope: !5447)
!5451 = !DILocation(line: 940, column: 28, scope: !5447)
!5452 = !DILocation(line: 940, column: 25, scope: !5447)
!5453 = !DILocation(line: 940, column: 32, scope: !5447)
!5454 = !DILocation(line: 940, column: 44, scope: !5447)
!5455 = !DILocation(line: 940, column: 48, scope: !5447)
!5456 = !DILocation(line: 940, column: 54, scope: !5447)
!5457 = !DILocation(line: 940, column: 60, scope: !5447)
!5458 = !DILocation(line: 940, column: 36, scope: !5447)
!5459 = !DILocation(line: 940, column: 8, scope: !5448)
!5460 = !DILocation(line: 941, column: 31, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 940, column: 66)
!5462 = !DILocation(line: 941, column: 35, scope: !5461)
!5463 = !DILocation(line: 941, column: 10, scope: !5461)
!5464 = !DILocation(line: 941, column: 8, scope: !5461)
!5465 = !DILocation(line: 942, column: 5, scope: !5461)
!5466 = !DILocation(line: 944, column: 3, scope: !5448)
!5467 = distinct !{!5467, !5442, !5468}
!5468 = !DILocation(line: 944, column: 3, scope: !5443)
!5469 = !DILocation(line: 945, column: 8, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 945, column: 7)
!5471 = !DILocation(line: 945, column: 7, scope: !5422)
!5472 = !DILocation(line: 946, column: 4, scope: !5470)
!5473 = !DILocation(line: 947, column: 10, scope: !5422)
!5474 = !DILocation(line: 947, column: 8, scope: !5422)
!5475 = !DILocation(line: 948, column: 2, scope: !5422)
!5476 = !DILocation(line: 951, column: 2, scope: !5382)
!5477 = !DILocalVariable(name: "__dummy", scope: !5478, file: !3, line: 951, type: !98)
!5478 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 951, column: 2)
!5479 = distinct !DILexicalBlock(scope: !5382, file: !3, line: 951, column: 2)
!5480 = !DILocation(line: 951, column: 2, scope: !5478)
!5481 = !DILocalVariable(name: "__dummy2", scope: !5478, file: !3, line: 951, type: !98)
!5482 = !DILocation(line: 951, column: 2, scope: !5479)
!5483 = !DILocation(line: 951, column: 2, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 951, column: 2)
!5485 = !DILocation(line: 951, column: 2, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5484, file: !3, line: 951, column: 2)
!5487 = !DILocalVariable(name: "__dummy", scope: !5488, file: !3, line: 951, type: !98)
!5488 = distinct !DILexicalBlock(scope: !5489, file: !3, line: 951, column: 2)
!5489 = distinct !DILexicalBlock(scope: !5486, file: !3, line: 951, column: 2)
!5490 = !DILocation(line: 951, column: 2, scope: !5488)
!5491 = !DILocalVariable(name: "__dummy2", scope: !5488, file: !3, line: 951, type: !98)
!5492 = !DILocation(line: 951, column: 2, scope: !5489)
!5493 = !DILocation(line: 951, column: 2, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5484, file: !3, line: 951, column: 2)
!5495 = !{i32 -2142635671}
!5496 = !DILocation(line: 951, column: 2, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5494, file: !3, line: 951, column: 2)
!5498 = !DILocation(line: 952, column: 7, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5382, file: !3, line: 952, column: 6)
!5500 = !DILocation(line: 952, column: 6, scope: !5382)
!5501 = !DILocation(line: 953, column: 20, scope: !5499)
!5502 = !DILocation(line: 953, column: 8, scope: !5499)
!5503 = !DILocation(line: 953, column: 6, scope: !5499)
!5504 = !DILocation(line: 953, column: 3, scope: !5499)
!5505 = !DILocation(line: 954, column: 35, scope: !5382)
!5506 = !DILocation(line: 954, column: 39, scope: !5382)
!5507 = !DILocation(line: 954, column: 7, scope: !5382)
!5508 = !DILocation(line: 954, column: 5, scope: !5382)
!5509 = !DILocation(line: 955, column: 2, scope: !5382)
!5510 = !DILocalVariable(name: "__dummy", scope: !5511, file: !3, line: 955, type: !98)
!5511 = distinct !DILexicalBlock(scope: !5512, file: !3, line: 955, column: 2)
!5512 = distinct !DILexicalBlock(scope: !5382, file: !3, line: 955, column: 2)
!5513 = !DILocation(line: 955, column: 2, scope: !5511)
!5514 = !DILocalVariable(name: "__dummy2", scope: !5511, file: !3, line: 955, type: !98)
!5515 = !DILocation(line: 955, column: 2, scope: !5512)
!5516 = !DILocation(line: 955, column: 2, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5512, file: !3, line: 955, column: 2)
!5518 = !DILocation(line: 955, column: 2, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5517, file: !3, line: 955, column: 2)
!5520 = !DILocalVariable(name: "__dummy", scope: !5521, file: !3, line: 955, type: !98)
!5521 = distinct !DILexicalBlock(scope: !5522, file: !3, line: 955, column: 2)
!5522 = distinct !DILexicalBlock(scope: !5519, file: !3, line: 955, column: 2)
!5523 = !DILocation(line: 955, column: 2, scope: !5521)
!5524 = !DILocalVariable(name: "__dummy2", scope: !5521, file: !3, line: 955, type: !98)
!5525 = !DILocation(line: 955, column: 2, scope: !5522)
!5526 = !DILocation(line: 955, column: 2, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5517, file: !3, line: 955, column: 2)
!5528 = !{i32 -2142634828}
!5529 = !DILocation(line: 955, column: 2, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 955, column: 2)
!5531 = !DILocation(line: 956, column: 9, scope: !5382)
!5532 = !DILocation(line: 956, column: 2, scope: !5382)
!5533 = !DILocation(line: 957, column: 1, scope: !5382)
!5534 = distinct !DISubprogram(name: "of_find_node_by_name", scope: !3, file: !3, line: 971, type: !5294, scopeLine: 973, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!5535 = !DILocalVariable(name: "from", arg: 1, scope: !5534, file: !3, line: 971, type: !120)
!5536 = !DILocation(line: 971, column: 62, scope: !5534)
!5537 = !DILocalVariable(name: "name", arg: 2, scope: !5534, file: !3, line: 972, type: !116)
!5538 = !DILocation(line: 972, column: 14, scope: !5534)
!5539 = !DILocalVariable(name: "np", scope: !5534, file: !3, line: 974, type: !120)
!5540 = !DILocation(line: 974, column: 22, scope: !5534)
!5541 = !DILocalVariable(name: "flags", scope: !5534, file: !3, line: 975, type: !98)
!5542 = !DILocation(line: 975, column: 16, scope: !5534)
!5543 = !DILocation(line: 977, column: 2, scope: !5534)
!5544 = !DILocalVariable(name: "__dummy", scope: !5545, file: !3, line: 977, type: !98)
!5545 = distinct !DILexicalBlock(scope: !5546, file: !3, line: 977, column: 2)
!5546 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 977, column: 2)
!5547 = !DILocation(line: 977, column: 2, scope: !5545)
!5548 = !DILocalVariable(name: "__dummy2", scope: !5545, file: !3, line: 977, type: !98)
!5549 = !DILocation(line: 977, column: 2, scope: !5546)
!5550 = !DILocation(line: 977, column: 2, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5546, file: !3, line: 977, column: 2)
!5552 = !DILocation(line: 977, column: 2, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5551, file: !3, line: 977, column: 2)
!5554 = !DILocalVariable(name: "__dummy", scope: !5555, file: !3, line: 977, type: !98)
!5555 = distinct !DILexicalBlock(scope: !5556, file: !3, line: 977, column: 2)
!5556 = distinct !DILexicalBlock(scope: !5553, file: !3, line: 977, column: 2)
!5557 = !DILocation(line: 977, column: 2, scope: !5555)
!5558 = !DILocalVariable(name: "__dummy2", scope: !5555, file: !3, line: 977, type: !98)
!5559 = !DILocation(line: 977, column: 2, scope: !5556)
!5560 = !DILocation(line: 977, column: 2, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5551, file: !3, line: 977, column: 2)
!5562 = !{i32 -2142633897}
!5563 = !DILocation(line: 977, column: 2, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5561, file: !3, line: 977, column: 2)
!5565 = !DILocation(line: 978, column: 2, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 978, column: 2)
!5567 = !DILocation(line: 978, column: 2, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5566, file: !3, line: 978, column: 2)
!5569 = !DILocation(line: 979, column: 23, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5568, file: !3, line: 979, column: 7)
!5571 = !DILocation(line: 979, column: 27, scope: !5570)
!5572 = !DILocation(line: 979, column: 7, scope: !5570)
!5573 = !DILocation(line: 979, column: 33, scope: !5570)
!5574 = !DILocation(line: 979, column: 48, scope: !5570)
!5575 = !DILocation(line: 979, column: 36, scope: !5570)
!5576 = !DILocation(line: 979, column: 7, scope: !5568)
!5577 = !DILocation(line: 980, column: 4, scope: !5570)
!5578 = !DILocation(line: 979, column: 50, scope: !5570)
!5579 = distinct !{!5579, !5565, !5580}
!5580 = !DILocation(line: 980, column: 4, scope: !5566)
!5581 = !DILocation(line: 981, column: 14, scope: !5534)
!5582 = !DILocation(line: 981, column: 2, scope: !5534)
!5583 = !DILocation(line: 982, column: 2, scope: !5534)
!5584 = !DILocalVariable(name: "__dummy", scope: !5585, file: !3, line: 982, type: !98)
!5585 = distinct !DILexicalBlock(scope: !5586, file: !3, line: 982, column: 2)
!5586 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 982, column: 2)
!5587 = !DILocation(line: 982, column: 2, scope: !5585)
!5588 = !DILocalVariable(name: "__dummy2", scope: !5585, file: !3, line: 982, type: !98)
!5589 = !DILocation(line: 982, column: 2, scope: !5586)
!5590 = !DILocation(line: 982, column: 2, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5586, file: !3, line: 982, column: 2)
!5592 = !DILocation(line: 982, column: 2, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5591, file: !3, line: 982, column: 2)
!5594 = !DILocalVariable(name: "__dummy", scope: !5595, file: !3, line: 982, type: !98)
!5595 = distinct !DILexicalBlock(scope: !5596, file: !3, line: 982, column: 2)
!5596 = distinct !DILexicalBlock(scope: !5593, file: !3, line: 982, column: 2)
!5597 = !DILocation(line: 982, column: 2, scope: !5595)
!5598 = !DILocalVariable(name: "__dummy2", scope: !5595, file: !3, line: 982, type: !98)
!5599 = !DILocation(line: 982, column: 2, scope: !5596)
!5600 = !DILocation(line: 982, column: 2, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5591, file: !3, line: 982, column: 2)
!5602 = !{i32 -2142632966}
!5603 = !DILocation(line: 982, column: 2, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 982, column: 2)
!5605 = !DILocation(line: 983, column: 9, scope: !5534)
!5606 = !DILocation(line: 983, column: 2, scope: !5534)
!5607 = distinct !DISubprogram(name: "of_find_node_by_type", scope: !3, file: !3, line: 999, type: !5294, scopeLine: 1001, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!5608 = !DILocalVariable(name: "from", arg: 1, scope: !5607, file: !3, line: 999, type: !120)
!5609 = !DILocation(line: 999, column: 62, scope: !5607)
!5610 = !DILocalVariable(name: "type", arg: 2, scope: !5607, file: !3, line: 1000, type: !116)
!5611 = !DILocation(line: 1000, column: 14, scope: !5607)
!5612 = !DILocalVariable(name: "np", scope: !5607, file: !3, line: 1002, type: !120)
!5613 = !DILocation(line: 1002, column: 22, scope: !5607)
!5614 = !DILocalVariable(name: "flags", scope: !5607, file: !3, line: 1003, type: !98)
!5615 = !DILocation(line: 1003, column: 16, scope: !5607)
!5616 = !DILocation(line: 1005, column: 2, scope: !5607)
!5617 = !DILocalVariable(name: "__dummy", scope: !5618, file: !3, line: 1005, type: !98)
!5618 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 1005, column: 2)
!5619 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 1005, column: 2)
!5620 = !DILocation(line: 1005, column: 2, scope: !5618)
!5621 = !DILocalVariable(name: "__dummy2", scope: !5618, file: !3, line: 1005, type: !98)
!5622 = !DILocation(line: 1005, column: 2, scope: !5619)
!5623 = !DILocation(line: 1005, column: 2, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 1005, column: 2)
!5625 = !DILocation(line: 1005, column: 2, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5624, file: !3, line: 1005, column: 2)
!5627 = !DILocalVariable(name: "__dummy", scope: !5628, file: !3, line: 1005, type: !98)
!5628 = distinct !DILexicalBlock(scope: !5629, file: !3, line: 1005, column: 2)
!5629 = distinct !DILexicalBlock(scope: !5626, file: !3, line: 1005, column: 2)
!5630 = !DILocation(line: 1005, column: 2, scope: !5628)
!5631 = !DILocalVariable(name: "__dummy2", scope: !5628, file: !3, line: 1005, type: !98)
!5632 = !DILocation(line: 1005, column: 2, scope: !5629)
!5633 = !DILocation(line: 1005, column: 2, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5624, file: !3, line: 1005, column: 2)
!5635 = !{i32 -2142632045}
!5636 = !DILocation(line: 1005, column: 2, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5634, file: !3, line: 1005, column: 2)
!5638 = !DILocation(line: 1006, column: 2, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 1006, column: 2)
!5640 = !DILocation(line: 1006, column: 2, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5639, file: !3, line: 1006, column: 2)
!5642 = !DILocation(line: 1007, column: 25, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 1007, column: 7)
!5644 = !DILocation(line: 1007, column: 29, scope: !5643)
!5645 = !DILocation(line: 1007, column: 7, scope: !5643)
!5646 = !DILocation(line: 1007, column: 35, scope: !5643)
!5647 = !DILocation(line: 1007, column: 50, scope: !5643)
!5648 = !DILocation(line: 1007, column: 38, scope: !5643)
!5649 = !DILocation(line: 1007, column: 7, scope: !5641)
!5650 = !DILocation(line: 1008, column: 4, scope: !5643)
!5651 = !DILocation(line: 1007, column: 52, scope: !5643)
!5652 = distinct !{!5652, !5638, !5653}
!5653 = !DILocation(line: 1008, column: 4, scope: !5639)
!5654 = !DILocation(line: 1009, column: 14, scope: !5607)
!5655 = !DILocation(line: 1009, column: 2, scope: !5607)
!5656 = !DILocation(line: 1010, column: 2, scope: !5607)
!5657 = !DILocalVariable(name: "__dummy", scope: !5658, file: !3, line: 1010, type: !98)
!5658 = distinct !DILexicalBlock(scope: !5659, file: !3, line: 1010, column: 2)
!5659 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 1010, column: 2)
!5660 = !DILocation(line: 1010, column: 2, scope: !5658)
!5661 = !DILocalVariable(name: "__dummy2", scope: !5658, file: !3, line: 1010, type: !98)
!5662 = !DILocation(line: 1010, column: 2, scope: !5659)
!5663 = !DILocation(line: 1010, column: 2, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5659, file: !3, line: 1010, column: 2)
!5665 = !DILocation(line: 1010, column: 2, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5664, file: !3, line: 1010, column: 2)
!5667 = !DILocalVariable(name: "__dummy", scope: !5668, file: !3, line: 1010, type: !98)
!5668 = distinct !DILexicalBlock(scope: !5669, file: !3, line: 1010, column: 2)
!5669 = distinct !DILexicalBlock(scope: !5666, file: !3, line: 1010, column: 2)
!5670 = !DILocation(line: 1010, column: 2, scope: !5668)
!5671 = !DILocalVariable(name: "__dummy2", scope: !5668, file: !3, line: 1010, type: !98)
!5672 = !DILocation(line: 1010, column: 2, scope: !5669)
!5673 = !DILocation(line: 1010, column: 2, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5664, file: !3, line: 1010, column: 2)
!5675 = !{i32 -2142631114}
!5676 = !DILocation(line: 1010, column: 2, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5674, file: !3, line: 1010, column: 2)
!5678 = !DILocation(line: 1011, column: 9, scope: !5607)
!5679 = !DILocation(line: 1011, column: 2, scope: !5607)
!5680 = distinct !DISubprogram(name: "of_find_compatible_node", scope: !3, file: !3, line: 1029, type: !5681, scopeLine: 1031, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!5681 = !DISubroutineType(types: !5682)
!5682 = !{!120, !120, !116, !116}
!5683 = !DILocalVariable(name: "from", arg: 1, scope: !5680, file: !3, line: 1029, type: !120)
!5684 = !DILocation(line: 1029, column: 65, scope: !5680)
!5685 = !DILocalVariable(name: "type", arg: 2, scope: !5680, file: !3, line: 1030, type: !116)
!5686 = !DILocation(line: 1030, column: 14, scope: !5680)
!5687 = !DILocalVariable(name: "compatible", arg: 3, scope: !5680, file: !3, line: 1030, type: !116)
!5688 = !DILocation(line: 1030, column: 32, scope: !5680)
!5689 = !DILocalVariable(name: "np", scope: !5680, file: !3, line: 1032, type: !120)
!5690 = !DILocation(line: 1032, column: 22, scope: !5680)
!5691 = !DILocalVariable(name: "flags", scope: !5680, file: !3, line: 1033, type: !98)
!5692 = !DILocation(line: 1033, column: 16, scope: !5680)
!5693 = !DILocation(line: 1035, column: 2, scope: !5680)
!5694 = !DILocalVariable(name: "__dummy", scope: !5695, file: !3, line: 1035, type: !98)
!5695 = distinct !DILexicalBlock(scope: !5696, file: !3, line: 1035, column: 2)
!5696 = distinct !DILexicalBlock(scope: !5680, file: !3, line: 1035, column: 2)
!5697 = !DILocation(line: 1035, column: 2, scope: !5695)
!5698 = !DILocalVariable(name: "__dummy2", scope: !5695, file: !3, line: 1035, type: !98)
!5699 = !DILocation(line: 1035, column: 2, scope: !5696)
!5700 = !DILocation(line: 1035, column: 2, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5696, file: !3, line: 1035, column: 2)
!5702 = !DILocation(line: 1035, column: 2, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5701, file: !3, line: 1035, column: 2)
!5704 = !DILocalVariable(name: "__dummy", scope: !5705, file: !3, line: 1035, type: !98)
!5705 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 1035, column: 2)
!5706 = distinct !DILexicalBlock(scope: !5703, file: !3, line: 1035, column: 2)
!5707 = !DILocation(line: 1035, column: 2, scope: !5705)
!5708 = !DILocalVariable(name: "__dummy2", scope: !5705, file: !3, line: 1035, type: !98)
!5709 = !DILocation(line: 1035, column: 2, scope: !5706)
!5710 = !DILocation(line: 1035, column: 2, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5701, file: !3, line: 1035, column: 2)
!5712 = !{i32 -2142630193}
!5713 = !DILocation(line: 1035, column: 2, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5711, file: !3, line: 1035, column: 2)
!5715 = !DILocation(line: 1036, column: 2, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5680, file: !3, line: 1036, column: 2)
!5717 = !DILocation(line: 1036, column: 2, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 1036, column: 2)
!5719 = !DILocation(line: 1037, column: 33, scope: !5720)
!5720 = distinct !DILexicalBlock(scope: !5718, file: !3, line: 1037, column: 7)
!5721 = !DILocation(line: 1037, column: 37, scope: !5720)
!5722 = !DILocation(line: 1037, column: 49, scope: !5720)
!5723 = !DILocation(line: 1037, column: 7, scope: !5720)
!5724 = !DILocation(line: 1037, column: 61, scope: !5720)
!5725 = !DILocation(line: 1038, column: 19, scope: !5720)
!5726 = !DILocation(line: 1038, column: 7, scope: !5720)
!5727 = !DILocation(line: 1037, column: 7, scope: !5718)
!5728 = !DILocation(line: 1039, column: 4, scope: !5720)
!5729 = !DILocation(line: 1038, column: 21, scope: !5720)
!5730 = distinct !{!5730, !5715, !5731}
!5731 = !DILocation(line: 1039, column: 4, scope: !5716)
!5732 = !DILocation(line: 1040, column: 14, scope: !5680)
!5733 = !DILocation(line: 1040, column: 2, scope: !5680)
!5734 = !DILocation(line: 1041, column: 2, scope: !5680)
!5735 = !DILocalVariable(name: "__dummy", scope: !5736, file: !3, line: 1041, type: !98)
!5736 = distinct !DILexicalBlock(scope: !5737, file: !3, line: 1041, column: 2)
!5737 = distinct !DILexicalBlock(scope: !5680, file: !3, line: 1041, column: 2)
!5738 = !DILocation(line: 1041, column: 2, scope: !5736)
!5739 = !DILocalVariable(name: "__dummy2", scope: !5736, file: !3, line: 1041, type: !98)
!5740 = !DILocation(line: 1041, column: 2, scope: !5737)
!5741 = !DILocation(line: 1041, column: 2, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5737, file: !3, line: 1041, column: 2)
!5743 = !DILocation(line: 1041, column: 2, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5742, file: !3, line: 1041, column: 2)
!5745 = !DILocalVariable(name: "__dummy", scope: !5746, file: !3, line: 1041, type: !98)
!5746 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 1041, column: 2)
!5747 = distinct !DILexicalBlock(scope: !5744, file: !3, line: 1041, column: 2)
!5748 = !DILocation(line: 1041, column: 2, scope: !5746)
!5749 = !DILocalVariable(name: "__dummy2", scope: !5746, file: !3, line: 1041, type: !98)
!5750 = !DILocation(line: 1041, column: 2, scope: !5747)
!5751 = !DILocation(line: 1041, column: 2, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5742, file: !3, line: 1041, column: 2)
!5753 = !{i32 -2142629250}
!5754 = !DILocation(line: 1041, column: 2, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5752, file: !3, line: 1041, column: 2)
!5756 = !DILocation(line: 1042, column: 9, scope: !5680)
!5757 = !DILocation(line: 1042, column: 2, scope: !5680)
!5758 = distinct !DISubprogram(name: "of_find_node_with_property", scope: !3, file: !3, line: 1058, type: !5294, scopeLine: 1060, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!5759 = !DILocalVariable(name: "from", arg: 1, scope: !5758, file: !3, line: 1058, type: !120)
!5760 = !DILocation(line: 1058, column: 68, scope: !5758)
!5761 = !DILocalVariable(name: "prop_name", arg: 2, scope: !5758, file: !3, line: 1059, type: !116)
!5762 = !DILocation(line: 1059, column: 14, scope: !5758)
!5763 = !DILocalVariable(name: "np", scope: !5758, file: !3, line: 1061, type: !120)
!5764 = !DILocation(line: 1061, column: 22, scope: !5758)
!5765 = !DILocalVariable(name: "pp", scope: !5758, file: !3, line: 1062, type: !3570)
!5766 = !DILocation(line: 1062, column: 19, scope: !5758)
!5767 = !DILocalVariable(name: "flags", scope: !5758, file: !3, line: 1063, type: !98)
!5768 = !DILocation(line: 1063, column: 16, scope: !5758)
!5769 = !DILocation(line: 1065, column: 2, scope: !5758)
!5770 = !DILocalVariable(name: "__dummy", scope: !5771, file: !3, line: 1065, type: !98)
!5771 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 1065, column: 2)
!5772 = distinct !DILexicalBlock(scope: !5758, file: !3, line: 1065, column: 2)
!5773 = !DILocation(line: 1065, column: 2, scope: !5771)
!5774 = !DILocalVariable(name: "__dummy2", scope: !5771, file: !3, line: 1065, type: !98)
!5775 = !DILocation(line: 1065, column: 2, scope: !5772)
!5776 = !DILocation(line: 1065, column: 2, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 1065, column: 2)
!5778 = !DILocation(line: 1065, column: 2, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5777, file: !3, line: 1065, column: 2)
!5780 = !DILocalVariable(name: "__dummy", scope: !5781, file: !3, line: 1065, type: !98)
!5781 = distinct !DILexicalBlock(scope: !5782, file: !3, line: 1065, column: 2)
!5782 = distinct !DILexicalBlock(scope: !5779, file: !3, line: 1065, column: 2)
!5783 = !DILocation(line: 1065, column: 2, scope: !5781)
!5784 = !DILocalVariable(name: "__dummy2", scope: !5781, file: !3, line: 1065, type: !98)
!5785 = !DILocation(line: 1065, column: 2, scope: !5782)
!5786 = !DILocation(line: 1065, column: 2, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5777, file: !3, line: 1065, column: 2)
!5788 = !{i32 -2142628323}
!5789 = !DILocation(line: 1065, column: 2, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 1065, column: 2)
!5791 = !DILocation(line: 1066, column: 2, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5758, file: !3, line: 1066, column: 2)
!5793 = !DILocation(line: 1066, column: 2, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5792, file: !3, line: 1066, column: 2)
!5795 = !DILocation(line: 1067, column: 13, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5797, file: !3, line: 1067, column: 3)
!5797 = distinct !DILexicalBlock(scope: !5794, file: !3, line: 1066, column: 38)
!5798 = !DILocation(line: 1067, column: 17, scope: !5796)
!5799 = !DILocation(line: 1067, column: 11, scope: !5796)
!5800 = !DILocation(line: 1067, column: 8, scope: !5796)
!5801 = !DILocation(line: 1067, column: 29, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5796, file: !3, line: 1067, column: 3)
!5803 = !DILocation(line: 1067, column: 3, scope: !5796)
!5804 = !DILocation(line: 1068, column: 8, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5806, file: !3, line: 1068, column: 8)
!5806 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 1067, column: 48)
!5807 = !DILocation(line: 1068, column: 41, scope: !5805)
!5808 = !DILocation(line: 1068, column: 8, scope: !5806)
!5809 = !DILocation(line: 1069, column: 17, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 1068, column: 47)
!5811 = !DILocation(line: 1069, column: 5, scope: !5810)
!5812 = !DILocation(line: 1070, column: 5, scope: !5810)
!5813 = !DILocation(line: 1072, column: 3, scope: !5806)
!5814 = !DILocation(line: 1067, column: 38, scope: !5802)
!5815 = !DILocation(line: 1067, column: 42, scope: !5802)
!5816 = !DILocation(line: 1067, column: 36, scope: !5802)
!5817 = !DILocation(line: 1067, column: 3, scope: !5802)
!5818 = distinct !{!5818, !5803, !5819}
!5819 = !DILocation(line: 1072, column: 3, scope: !5796)
!5820 = !DILocation(line: 1073, column: 2, scope: !5797)
!5821 = distinct !{!5821, !5791, !5822}
!5822 = !DILocation(line: 1073, column: 2, scope: !5792)
!5823 = !DILabel(scope: !5758, name: "out", file: !3, line: 1074)
!5824 = !DILocation(line: 1074, column: 1, scope: !5758)
!5825 = !DILocation(line: 1075, column: 14, scope: !5758)
!5826 = !DILocation(line: 1075, column: 2, scope: !5758)
!5827 = !DILocation(line: 1076, column: 2, scope: !5758)
!5828 = !DILocalVariable(name: "__dummy", scope: !5829, file: !3, line: 1076, type: !98)
!5829 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 1076, column: 2)
!5830 = distinct !DILexicalBlock(scope: !5758, file: !3, line: 1076, column: 2)
!5831 = !DILocation(line: 1076, column: 2, scope: !5829)
!5832 = !DILocalVariable(name: "__dummy2", scope: !5829, file: !3, line: 1076, type: !98)
!5833 = !DILocation(line: 1076, column: 2, scope: !5830)
!5834 = !DILocation(line: 1076, column: 2, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 1076, column: 2)
!5836 = !DILocation(line: 1076, column: 2, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 1076, column: 2)
!5838 = !DILocalVariable(name: "__dummy", scope: !5839, file: !3, line: 1076, type: !98)
!5839 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 1076, column: 2)
!5840 = distinct !DILexicalBlock(scope: !5837, file: !3, line: 1076, column: 2)
!5841 = !DILocation(line: 1076, column: 2, scope: !5839)
!5842 = !DILocalVariable(name: "__dummy2", scope: !5839, file: !3, line: 1076, type: !98)
!5843 = !DILocation(line: 1076, column: 2, scope: !5840)
!5844 = !DILocation(line: 1076, column: 2, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 1076, column: 2)
!5846 = !{i32 -2142627354}
!5847 = !DILocation(line: 1076, column: 2, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5845, file: !3, line: 1076, column: 2)
!5849 = !DILocation(line: 1077, column: 9, scope: !5758)
!5850 = !DILocation(line: 1077, column: 2, scope: !5758)
!5851 = distinct !DISubprogram(name: "of_match_node", scope: !3, file: !3, line: 1110, type: !5852, scopeLine: 1112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!5852 = !DISubroutineType(types: !5853)
!5853 = !{!3237, !3237, !3605}
!5854 = !DILocalVariable(name: "matches", arg: 1, scope: !5851, file: !3, line: 1110, type: !3237)
!5855 = !DILocation(line: 1110, column: 69, scope: !5851)
!5856 = !DILocalVariable(name: "node", arg: 2, scope: !5851, file: !3, line: 1111, type: !3605)
!5857 = !DILocation(line: 1111, column: 33, scope: !5851)
!5858 = !DILocalVariable(name: "match", scope: !5851, file: !3, line: 1113, type: !3237)
!5859 = !DILocation(line: 1113, column: 29, scope: !5851)
!5860 = !DILocalVariable(name: "flags", scope: !5851, file: !3, line: 1114, type: !98)
!5861 = !DILocation(line: 1114, column: 16, scope: !5851)
!5862 = !DILocation(line: 1116, column: 2, scope: !5851)
!5863 = !DILocalVariable(name: "__dummy", scope: !5864, file: !3, line: 1116, type: !98)
!5864 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 1116, column: 2)
!5865 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 1116, column: 2)
!5866 = !DILocation(line: 1116, column: 2, scope: !5864)
!5867 = !DILocalVariable(name: "__dummy2", scope: !5864, file: !3, line: 1116, type: !98)
!5868 = !DILocation(line: 1116, column: 2, scope: !5865)
!5869 = !DILocation(line: 1116, column: 2, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 1116, column: 2)
!5871 = !DILocation(line: 1116, column: 2, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 1116, column: 2)
!5873 = !DILocalVariable(name: "__dummy", scope: !5874, file: !3, line: 1116, type: !98)
!5874 = distinct !DILexicalBlock(scope: !5875, file: !3, line: 1116, column: 2)
!5875 = distinct !DILexicalBlock(scope: !5872, file: !3, line: 1116, column: 2)
!5876 = !DILocation(line: 1116, column: 2, scope: !5874)
!5877 = !DILocalVariable(name: "__dummy2", scope: !5874, file: !3, line: 1116, type: !98)
!5878 = !DILocation(line: 1116, column: 2, scope: !5875)
!5879 = !DILocation(line: 1116, column: 2, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 1116, column: 2)
!5881 = !{i32 -2142626397}
!5882 = !DILocation(line: 1116, column: 2, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5880, file: !3, line: 1116, column: 2)
!5884 = !DILocation(line: 1117, column: 26, scope: !5851)
!5885 = !DILocation(line: 1117, column: 35, scope: !5851)
!5886 = !DILocation(line: 1117, column: 10, scope: !5851)
!5887 = !DILocation(line: 1117, column: 8, scope: !5851)
!5888 = !DILocation(line: 1118, column: 2, scope: !5851)
!5889 = !DILocalVariable(name: "__dummy", scope: !5890, file: !3, line: 1118, type: !98)
!5890 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 1118, column: 2)
!5891 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 1118, column: 2)
!5892 = !DILocation(line: 1118, column: 2, scope: !5890)
!5893 = !DILocalVariable(name: "__dummy2", scope: !5890, file: !3, line: 1118, type: !98)
!5894 = !DILocation(line: 1118, column: 2, scope: !5891)
!5895 = !DILocation(line: 1118, column: 2, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 1118, column: 2)
!5897 = !DILocation(line: 1118, column: 2, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 1118, column: 2)
!5899 = !DILocalVariable(name: "__dummy", scope: !5900, file: !3, line: 1118, type: !98)
!5900 = distinct !DILexicalBlock(scope: !5901, file: !3, line: 1118, column: 2)
!5901 = distinct !DILexicalBlock(scope: !5898, file: !3, line: 1118, column: 2)
!5902 = !DILocation(line: 1118, column: 2, scope: !5900)
!5903 = !DILocalVariable(name: "__dummy2", scope: !5900, file: !3, line: 1118, type: !98)
!5904 = !DILocation(line: 1118, column: 2, scope: !5901)
!5905 = !DILocation(line: 1118, column: 2, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 1118, column: 2)
!5907 = !{i32 -2142625554}
!5908 = !DILocation(line: 1118, column: 2, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !5906, file: !3, line: 1118, column: 2)
!5910 = !DILocation(line: 1119, column: 9, scope: !5851)
!5911 = !DILocation(line: 1119, column: 2, scope: !5851)
!5912 = distinct !DISubprogram(name: "__of_match_node", scope: !3, file: !3, line: 1082, type: !5852, scopeLine: 1084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!5913 = !DILocalVariable(name: "matches", arg: 1, scope: !5912, file: !3, line: 1082, type: !3237)
!5914 = !DILocation(line: 1082, column: 71, scope: !5912)
!5915 = !DILocalVariable(name: "node", arg: 2, scope: !5912, file: !3, line: 1083, type: !3605)
!5916 = !DILocation(line: 1083, column: 35, scope: !5912)
!5917 = !DILocalVariable(name: "best_match", scope: !5912, file: !3, line: 1085, type: !3237)
!5918 = !DILocation(line: 1085, column: 29, scope: !5912)
!5919 = !DILocalVariable(name: "score", scope: !5912, file: !3, line: 1086, type: !205)
!5920 = !DILocation(line: 1086, column: 6, scope: !5912)
!5921 = !DILocalVariable(name: "best_score", scope: !5912, file: !3, line: 1086, type: !205)
!5922 = !DILocation(line: 1086, column: 13, scope: !5912)
!5923 = !DILocation(line: 1088, column: 7, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5912, file: !3, line: 1088, column: 6)
!5925 = !DILocation(line: 1088, column: 6, scope: !5912)
!5926 = !DILocation(line: 1089, column: 3, scope: !5924)
!5927 = !DILocation(line: 1091, column: 2, scope: !5912)
!5928 = !DILocation(line: 1091, column: 9, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 1091, column: 2)
!5930 = distinct !DILexicalBlock(scope: !5912, file: !3, line: 1091, column: 2)
!5931 = !DILocation(line: 1091, column: 18, scope: !5929)
!5932 = !DILocation(line: 1091, column: 26, scope: !5929)
!5933 = !DILocation(line: 1091, column: 29, scope: !5929)
!5934 = !DILocation(line: 1091, column: 38, scope: !5929)
!5935 = !DILocation(line: 1091, column: 46, scope: !5929)
!5936 = !DILocation(line: 1091, column: 49, scope: !5929)
!5937 = !DILocation(line: 1091, column: 58, scope: !5929)
!5938 = !DILocation(line: 1091, column: 2, scope: !5930)
!5939 = !DILocation(line: 1092, column: 37, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5929, file: !3, line: 1091, column: 84)
!5941 = !DILocation(line: 1092, column: 43, scope: !5940)
!5942 = !DILocation(line: 1092, column: 52, scope: !5940)
!5943 = !DILocation(line: 1093, column: 9, scope: !5940)
!5944 = !DILocation(line: 1093, column: 18, scope: !5940)
!5945 = !DILocation(line: 1093, column: 24, scope: !5940)
!5946 = !DILocation(line: 1093, column: 33, scope: !5940)
!5947 = !DILocation(line: 1092, column: 11, scope: !5940)
!5948 = !DILocation(line: 1092, column: 9, scope: !5940)
!5949 = !DILocation(line: 1094, column: 7, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 1094, column: 7)
!5951 = !DILocation(line: 1094, column: 15, scope: !5950)
!5952 = !DILocation(line: 1094, column: 13, scope: !5950)
!5953 = !DILocation(line: 1094, column: 7, scope: !5940)
!5954 = !DILocation(line: 1095, column: 17, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5950, file: !3, line: 1094, column: 27)
!5956 = !DILocation(line: 1095, column: 15, scope: !5955)
!5957 = !DILocation(line: 1096, column: 17, scope: !5955)
!5958 = !DILocation(line: 1096, column: 15, scope: !5955)
!5959 = !DILocation(line: 1097, column: 3, scope: !5955)
!5960 = !DILocation(line: 1098, column: 2, scope: !5940)
!5961 = !DILocation(line: 1091, column: 80, scope: !5929)
!5962 = !DILocation(line: 1091, column: 2, scope: !5929)
!5963 = distinct !{!5963, !5938, !5964}
!5964 = !DILocation(line: 1098, column: 2, scope: !5930)
!5965 = !DILocation(line: 1100, column: 9, scope: !5912)
!5966 = !DILocation(line: 1100, column: 2, scope: !5912)
!5967 = !DILocation(line: 1101, column: 1, scope: !5912)
!5968 = distinct !DISubprogram(name: "of_find_matching_node_and_match", scope: !3, file: !3, line: 1136, type: !5969, scopeLine: 1139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!5969 = !DISubroutineType(types: !5970)
!5970 = !{!120, !120, !3237, !5971}
!5971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3237, size: 64)
!5972 = !DILocalVariable(name: "from", arg: 1, scope: !5968, file: !3, line: 1136, type: !120)
!5973 = !DILocation(line: 1136, column: 73, scope: !5968)
!5974 = !DILocalVariable(name: "matches", arg: 2, scope: !5968, file: !3, line: 1137, type: !3237)
!5975 = !DILocation(line: 1137, column: 33, scope: !5968)
!5976 = !DILocalVariable(name: "match", arg: 3, scope: !5968, file: !3, line: 1138, type: !5971)
!5977 = !DILocation(line: 1138, column: 34, scope: !5968)
!5978 = !DILocalVariable(name: "np", scope: !5968, file: !3, line: 1140, type: !120)
!5979 = !DILocation(line: 1140, column: 22, scope: !5968)
!5980 = !DILocalVariable(name: "m", scope: !5968, file: !3, line: 1141, type: !3237)
!5981 = !DILocation(line: 1141, column: 29, scope: !5968)
!5982 = !DILocalVariable(name: "flags", scope: !5968, file: !3, line: 1142, type: !98)
!5983 = !DILocation(line: 1142, column: 16, scope: !5968)
!5984 = !DILocation(line: 1144, column: 6, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5968, file: !3, line: 1144, column: 6)
!5986 = !DILocation(line: 1144, column: 6, scope: !5968)
!5987 = !DILocation(line: 1145, column: 4, scope: !5985)
!5988 = !DILocation(line: 1145, column: 10, scope: !5985)
!5989 = !DILocation(line: 1145, column: 3, scope: !5985)
!5990 = !DILocation(line: 1147, column: 2, scope: !5968)
!5991 = !DILocalVariable(name: "__dummy", scope: !5992, file: !3, line: 1147, type: !98)
!5992 = distinct !DILexicalBlock(scope: !5993, file: !3, line: 1147, column: 2)
!5993 = distinct !DILexicalBlock(scope: !5968, file: !3, line: 1147, column: 2)
!5994 = !DILocation(line: 1147, column: 2, scope: !5992)
!5995 = !DILocalVariable(name: "__dummy2", scope: !5992, file: !3, line: 1147, type: !98)
!5996 = !DILocation(line: 1147, column: 2, scope: !5993)
!5997 = !DILocation(line: 1147, column: 2, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5993, file: !3, line: 1147, column: 2)
!5999 = !DILocation(line: 1147, column: 2, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5998, file: !3, line: 1147, column: 2)
!6001 = !DILocalVariable(name: "__dummy", scope: !6002, file: !3, line: 1147, type: !98)
!6002 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 1147, column: 2)
!6003 = distinct !DILexicalBlock(scope: !6000, file: !3, line: 1147, column: 2)
!6004 = !DILocation(line: 1147, column: 2, scope: !6002)
!6005 = !DILocalVariable(name: "__dummy2", scope: !6002, file: !3, line: 1147, type: !98)
!6006 = !DILocation(line: 1147, column: 2, scope: !6003)
!6007 = !DILocation(line: 1147, column: 2, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !5998, file: !3, line: 1147, column: 2)
!6009 = !{i32 -2142624635}
!6010 = !DILocation(line: 1147, column: 2, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 1147, column: 2)
!6012 = !DILocation(line: 1148, column: 2, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !5968, file: !3, line: 1148, column: 2)
!6014 = !DILocation(line: 1148, column: 2, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !6013, file: !3, line: 1148, column: 2)
!6016 = !DILocation(line: 1149, column: 23, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !6015, file: !3, line: 1148, column: 38)
!6018 = !DILocation(line: 1149, column: 32, scope: !6017)
!6019 = !DILocation(line: 1149, column: 7, scope: !6017)
!6020 = !DILocation(line: 1149, column: 5, scope: !6017)
!6021 = !DILocation(line: 1150, column: 7, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !6017, file: !3, line: 1150, column: 7)
!6023 = !DILocation(line: 1150, column: 9, scope: !6022)
!6024 = !DILocation(line: 1150, column: 24, scope: !6022)
!6025 = !DILocation(line: 1150, column: 12, scope: !6022)
!6026 = !DILocation(line: 1150, column: 7, scope: !6017)
!6027 = !DILocation(line: 1151, column: 8, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6029, file: !3, line: 1151, column: 8)
!6029 = distinct !DILexicalBlock(scope: !6022, file: !3, line: 1150, column: 29)
!6030 = !DILocation(line: 1151, column: 8, scope: !6029)
!6031 = !DILocation(line: 1152, column: 14, scope: !6028)
!6032 = !DILocation(line: 1152, column: 6, scope: !6028)
!6033 = !DILocation(line: 1152, column: 12, scope: !6028)
!6034 = !DILocation(line: 1152, column: 5, scope: !6028)
!6035 = !DILocation(line: 1153, column: 4, scope: !6029)
!6036 = !DILocation(line: 1155, column: 2, scope: !6017)
!6037 = distinct !{!6037, !6012, !6038}
!6038 = !DILocation(line: 1155, column: 2, scope: !6013)
!6039 = !DILocation(line: 1156, column: 14, scope: !5968)
!6040 = !DILocation(line: 1156, column: 2, scope: !5968)
!6041 = !DILocation(line: 1157, column: 2, scope: !5968)
!6042 = !DILocalVariable(name: "__dummy", scope: !6043, file: !3, line: 1157, type: !98)
!6043 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 1157, column: 2)
!6044 = distinct !DILexicalBlock(scope: !5968, file: !3, line: 1157, column: 2)
!6045 = !DILocation(line: 1157, column: 2, scope: !6043)
!6046 = !DILocalVariable(name: "__dummy2", scope: !6043, file: !3, line: 1157, type: !98)
!6047 = !DILocation(line: 1157, column: 2, scope: !6044)
!6048 = !DILocation(line: 1157, column: 2, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 1157, column: 2)
!6050 = !DILocation(line: 1157, column: 2, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6049, file: !3, line: 1157, column: 2)
!6052 = !DILocalVariable(name: "__dummy", scope: !6053, file: !3, line: 1157, type: !98)
!6053 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 1157, column: 2)
!6054 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 1157, column: 2)
!6055 = !DILocation(line: 1157, column: 2, scope: !6053)
!6056 = !DILocalVariable(name: "__dummy2", scope: !6053, file: !3, line: 1157, type: !98)
!6057 = !DILocation(line: 1157, column: 2, scope: !6054)
!6058 = !DILocation(line: 1157, column: 2, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !6049, file: !3, line: 1157, column: 2)
!6060 = !{i32 -2142623704}
!6061 = !DILocation(line: 1157, column: 2, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6059, file: !3, line: 1157, column: 2)
!6063 = !DILocation(line: 1158, column: 9, scope: !5968)
!6064 = !DILocation(line: 1158, column: 2, scope: !5968)
!6065 = distinct !DISubprogram(name: "of_modalias_node", scope: !3, file: !3, line: 1175, type: !6066, scopeLine: 1176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!6066 = !DISubroutineType(types: !6067)
!6067 = !{!205, !120, !221, !205}
!6068 = !DILocalVariable(name: "node", arg: 1, scope: !6065, file: !3, line: 1175, type: !120)
!6069 = !DILocation(line: 1175, column: 42, scope: !6065)
!6070 = !DILocalVariable(name: "modalias", arg: 2, scope: !6065, file: !3, line: 1175, type: !221)
!6071 = !DILocation(line: 1175, column: 54, scope: !6065)
!6072 = !DILocalVariable(name: "len", arg: 3, scope: !6065, file: !3, line: 1175, type: !205)
!6073 = !DILocation(line: 1175, column: 68, scope: !6065)
!6074 = !DILocalVariable(name: "compatible", scope: !6065, file: !3, line: 1177, type: !116)
!6075 = !DILocation(line: 1177, column: 14, scope: !6065)
!6076 = !DILocalVariable(name: "p", scope: !6065, file: !3, line: 1177, type: !116)
!6077 = !DILocation(line: 1177, column: 27, scope: !6065)
!6078 = !DILocalVariable(name: "cplen", scope: !6065, file: !3, line: 1178, type: !205)
!6079 = !DILocation(line: 1178, column: 6, scope: !6065)
!6080 = !DILocation(line: 1180, column: 31, scope: !6065)
!6081 = !DILocation(line: 1180, column: 15, scope: !6065)
!6082 = !DILocation(line: 1180, column: 13, scope: !6065)
!6083 = !DILocation(line: 1181, column: 7, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !6065, file: !3, line: 1181, column: 6)
!6085 = !DILocation(line: 1181, column: 18, scope: !6084)
!6086 = !DILocation(line: 1181, column: 28, scope: !6084)
!6087 = !DILocation(line: 1181, column: 21, scope: !6084)
!6088 = !DILocation(line: 1181, column: 42, scope: !6084)
!6089 = !DILocation(line: 1181, column: 40, scope: !6084)
!6090 = !DILocation(line: 1181, column: 6, scope: !6065)
!6091 = !DILocation(line: 1182, column: 3, scope: !6084)
!6092 = !DILocation(line: 1183, column: 13, scope: !6065)
!6093 = !DILocation(line: 1183, column: 6, scope: !6065)
!6094 = !DILocation(line: 1183, column: 4, scope: !6065)
!6095 = !DILocation(line: 1184, column: 10, scope: !6065)
!6096 = !DILocation(line: 1184, column: 20, scope: !6065)
!6097 = !DILocation(line: 1184, column: 24, scope: !6065)
!6098 = !DILocation(line: 1184, column: 26, scope: !6065)
!6099 = !DILocation(line: 1184, column: 32, scope: !6065)
!6100 = !DILocation(line: 1184, column: 44, scope: !6065)
!6101 = !DILocation(line: 1184, column: 2, scope: !6065)
!6102 = !DILocation(line: 1185, column: 2, scope: !6065)
!6103 = !DILocation(line: 1186, column: 1, scope: !6065)
!6104 = distinct !DISubprogram(name: "of_find_node_by_phandle", scope: !3, file: !3, line: 1196, type: !6105, scopeLine: 1197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!6105 = !DISubroutineType(types: !6106)
!6106 = !{!120, !126}
!6107 = !DILocalVariable(name: "handle", arg: 1, scope: !6104, file: !3, line: 1196, type: !126)
!6108 = !DILocation(line: 1196, column: 53, scope: !6104)
!6109 = !DILocalVariable(name: "np", scope: !6104, file: !3, line: 1198, type: !120)
!6110 = !DILocation(line: 1198, column: 22, scope: !6104)
!6111 = !DILocalVariable(name: "flags", scope: !6104, file: !3, line: 1199, type: !98)
!6112 = !DILocation(line: 1199, column: 16, scope: !6104)
!6113 = !DILocalVariable(name: "handle_hash", scope: !6104, file: !3, line: 1200, type: !87)
!6114 = !DILocation(line: 1200, column: 6, scope: !6104)
!6115 = !DILocation(line: 1202, column: 7, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6104, file: !3, line: 1202, column: 6)
!6117 = !DILocation(line: 1202, column: 6, scope: !6104)
!6118 = !DILocation(line: 1203, column: 3, scope: !6116)
!6119 = !DILocation(line: 1205, column: 38, scope: !6104)
!6120 = !DILocation(line: 1205, column: 16, scope: !6104)
!6121 = !DILocation(line: 1205, column: 14, scope: !6104)
!6122 = !DILocation(line: 1207, column: 2, scope: !6104)
!6123 = !DILocalVariable(name: "__dummy", scope: !6124, file: !3, line: 1207, type: !98)
!6124 = distinct !DILexicalBlock(scope: !6125, file: !3, line: 1207, column: 2)
!6125 = distinct !DILexicalBlock(scope: !6104, file: !3, line: 1207, column: 2)
!6126 = !DILocation(line: 1207, column: 2, scope: !6124)
!6127 = !DILocalVariable(name: "__dummy2", scope: !6124, file: !3, line: 1207, type: !98)
!6128 = !DILocation(line: 1207, column: 2, scope: !6125)
!6129 = !DILocation(line: 1207, column: 2, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6125, file: !3, line: 1207, column: 2)
!6131 = !DILocation(line: 1207, column: 2, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6130, file: !3, line: 1207, column: 2)
!6133 = !DILocalVariable(name: "__dummy", scope: !6134, file: !3, line: 1207, type: !98)
!6134 = distinct !DILexicalBlock(scope: !6135, file: !3, line: 1207, column: 2)
!6135 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 1207, column: 2)
!6136 = !DILocation(line: 1207, column: 2, scope: !6134)
!6137 = !DILocalVariable(name: "__dummy2", scope: !6134, file: !3, line: 1207, type: !98)
!6138 = !DILocation(line: 1207, column: 2, scope: !6135)
!6139 = !DILocation(line: 1207, column: 2, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6130, file: !3, line: 1207, column: 2)
!6141 = !{i32 -2142622635}
!6142 = !DILocation(line: 1207, column: 2, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6140, file: !3, line: 1207, column: 2)
!6144 = !DILocation(line: 1209, column: 20, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6104, file: !3, line: 1209, column: 6)
!6146 = !DILocation(line: 1209, column: 6, scope: !6145)
!6147 = !DILocation(line: 1209, column: 33, scope: !6145)
!6148 = !DILocation(line: 1210, column: 6, scope: !6145)
!6149 = !DILocation(line: 1210, column: 30, scope: !6145)
!6150 = !DILocation(line: 1210, column: 16, scope: !6145)
!6151 = !DILocation(line: 1210, column: 44, scope: !6145)
!6152 = !DILocation(line: 1210, column: 13, scope: !6145)
!6153 = !DILocation(line: 1209, column: 6, scope: !6104)
!6154 = !DILocation(line: 1211, column: 22, scope: !6145)
!6155 = !DILocation(line: 1211, column: 8, scope: !6145)
!6156 = !DILocation(line: 1211, column: 6, scope: !6145)
!6157 = !DILocation(line: 1211, column: 3, scope: !6145)
!6158 = !DILocation(line: 1213, column: 7, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6104, file: !3, line: 1213, column: 6)
!6160 = !DILocation(line: 1213, column: 6, scope: !6104)
!6161 = !DILocation(line: 1214, column: 3, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6163, file: !3, line: 1214, column: 3)
!6163 = distinct !DILexicalBlock(scope: !6159, file: !3, line: 1213, column: 11)
!6164 = !DILocation(line: 1214, column: 3, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6162, file: !3, line: 1214, column: 3)
!6166 = !DILocation(line: 1215, column: 8, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6165, file: !3, line: 1215, column: 8)
!6168 = !DILocation(line: 1215, column: 12, scope: !6167)
!6169 = !DILocation(line: 1215, column: 23, scope: !6167)
!6170 = !DILocation(line: 1215, column: 20, scope: !6167)
!6171 = !DILocation(line: 1215, column: 30, scope: !6167)
!6172 = !DILocation(line: 1216, column: 28, scope: !6167)
!6173 = !DILocation(line: 1216, column: 9, scope: !6167)
!6174 = !DILocation(line: 1215, column: 8, scope: !6165)
!6175 = !DILocation(line: 1217, column: 34, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6167, file: !3, line: 1216, column: 46)
!6177 = !DILocation(line: 1217, column: 19, scope: !6176)
!6178 = !DILocation(line: 1217, column: 5, scope: !6176)
!6179 = !DILocation(line: 1217, column: 32, scope: !6176)
!6180 = !DILocation(line: 1218, column: 5, scope: !6176)
!6181 = !DILocation(line: 1216, column: 43, scope: !6167)
!6182 = distinct !{!6182, !6161, !6183}
!6183 = !DILocation(line: 1219, column: 4, scope: !6162)
!6184 = !DILocation(line: 1220, column: 2, scope: !6163)
!6185 = !DILocation(line: 1222, column: 14, scope: !6104)
!6186 = !DILocation(line: 1222, column: 2, scope: !6104)
!6187 = !DILocation(line: 1223, column: 2, scope: !6104)
!6188 = !DILocalVariable(name: "__dummy", scope: !6189, file: !3, line: 1223, type: !98)
!6189 = distinct !DILexicalBlock(scope: !6190, file: !3, line: 1223, column: 2)
!6190 = distinct !DILexicalBlock(scope: !6104, file: !3, line: 1223, column: 2)
!6191 = !DILocation(line: 1223, column: 2, scope: !6189)
!6192 = !DILocalVariable(name: "__dummy2", scope: !6189, file: !3, line: 1223, type: !98)
!6193 = !DILocation(line: 1223, column: 2, scope: !6190)
!6194 = !DILocation(line: 1223, column: 2, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6190, file: !3, line: 1223, column: 2)
!6196 = !DILocation(line: 1223, column: 2, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 1223, column: 2)
!6198 = !DILocalVariable(name: "__dummy", scope: !6199, file: !3, line: 1223, type: !98)
!6199 = distinct !DILexicalBlock(scope: !6200, file: !3, line: 1223, column: 2)
!6200 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 1223, column: 2)
!6201 = !DILocation(line: 1223, column: 2, scope: !6199)
!6202 = !DILocalVariable(name: "__dummy2", scope: !6199, file: !3, line: 1223, type: !98)
!6203 = !DILocation(line: 1223, column: 2, scope: !6200)
!6204 = !DILocation(line: 1223, column: 2, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 1223, column: 2)
!6206 = !{i32 -2142621644}
!6207 = !DILocation(line: 1223, column: 2, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6205, file: !3, line: 1223, column: 2)
!6209 = !DILocation(line: 1224, column: 9, scope: !6104)
!6210 = !DILocation(line: 1224, column: 2, scope: !6104)
!6211 = !DILocation(line: 1225, column: 1, scope: !6104)
!6212 = distinct !DISubprogram(name: "of_node_check_flag", scope: !122, file: !122, line: 188, type: !6213, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!6213 = !DISubroutineType(types: !6214)
!6214 = !{!205, !120, !98}
!6215 = !DILocalVariable(name: "n", arg: 1, scope: !6212, file: !122, line: 188, type: !120)
!6216 = !DILocation(line: 188, column: 58, scope: !6212)
!6217 = !DILocalVariable(name: "flag", arg: 2, scope: !6212, file: !122, line: 188, type: !98)
!6218 = !DILocation(line: 188, column: 75, scope: !6212)
!6219 = !DILocation(line: 190, column: 18, scope: !6212)
!6220 = !DILocation(line: 190, column: 25, scope: !6212)
!6221 = !DILocation(line: 190, column: 28, scope: !6212)
!6222 = !DILocation(line: 190, column: 9, scope: !6212)
!6223 = !DILocation(line: 190, column: 2, scope: !6212)
!6224 = distinct !DISubprogram(name: "of_print_phandle_args", scope: !3, file: !3, line: 1228, type: !6225, scopeLine: 1229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!6225 = !DISubroutineType(types: !6226)
!6226 = !{null, !116, !6227}
!6227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6228, size: 64)
!6228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3608)
!6229 = !DILocalVariable(name: "msg", arg: 1, scope: !6224, file: !3, line: 1228, type: !116)
!6230 = !DILocation(line: 1228, column: 40, scope: !6224)
!6231 = !DILocalVariable(name: "args", arg: 2, scope: !6224, file: !3, line: 1228, type: !6227)
!6232 = !DILocation(line: 1228, column: 75, scope: !6224)
!6233 = !DILocalVariable(name: "i", scope: !6224, file: !3, line: 1230, type: !205)
!6234 = !DILocation(line: 1230, column: 6, scope: !6224)
!6235 = !DILocation(line: 1231, column: 20, scope: !6224)
!6236 = !DILocation(line: 1231, column: 25, scope: !6224)
!6237 = !DILocation(line: 1231, column: 31, scope: !6224)
!6238 = !DILocation(line: 1231, column: 2, scope: !6224)
!6239 = !DILocation(line: 1232, column: 9, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6224, file: !3, line: 1232, column: 2)
!6241 = !DILocation(line: 1232, column: 7, scope: !6240)
!6242 = !DILocation(line: 1232, column: 14, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 1232, column: 2)
!6244 = !DILocation(line: 1232, column: 18, scope: !6243)
!6245 = !DILocation(line: 1232, column: 24, scope: !6243)
!6246 = !DILocation(line: 1232, column: 16, scope: !6243)
!6247 = !DILocation(line: 1232, column: 2, scope: !6240)
!6248 = !DILocalVariable(name: "delim", scope: !6249, file: !3, line: 1233, type: !117)
!6249 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 1232, column: 41)
!6250 = !DILocation(line: 1233, column: 14, scope: !6249)
!6251 = !DILocation(line: 1233, column: 22, scope: !6249)
!6252 = !DILocation(line: 1235, column: 3, scope: !6249)
!6253 = !DILocation(line: 1236, column: 2, scope: !6249)
!6254 = !DILocation(line: 1232, column: 37, scope: !6243)
!6255 = !DILocation(line: 1232, column: 2, scope: !6243)
!6256 = distinct !{!6256, !6247, !6257}
!6257 = !DILocation(line: 1236, column: 2, scope: !6240)
!6258 = !DILocation(line: 1237, column: 2, scope: !6224)
!6259 = !DILocation(line: 1238, column: 1, scope: !6224)
!6260 = distinct !DISubprogram(name: "of_phandle_iterator_init", scope: !3, file: !3, line: 1240, type: !6261, scopeLine: 1245, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!6261 = !DISubroutineType(types: !6262)
!6262 = !{!205, !6263, !3605, !116, !116, !205}
!6263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6264, size: 64)
!6264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_phandle_iterator", file: !122, line: 80, size: 512, elements: !6265)
!6265 = !{!6266, !6267, !6268, !6269, !6270, !6271, !6272, !6273, !6274}
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "cells_name", scope: !6264, file: !122, line: 82, baseType: !116, size: 64)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "cell_count", scope: !6264, file: !122, line: 83, baseType: !205, size: 32, offset: 64)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6264, file: !122, line: 84, baseType: !3605, size: 64, offset: 128)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "list_end", scope: !6264, file: !122, line: 87, baseType: !4213, size: 64, offset: 192)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "phandle_end", scope: !6264, file: !122, line: 88, baseType: !4213, size: 64, offset: 256)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !6264, file: !122, line: 91, baseType: !4213, size: 64, offset: 320)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "cur_count", scope: !6264, file: !122, line: 92, baseType: !499, size: 32, offset: 384)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !6264, file: !122, line: 93, baseType: !126, size: 32, offset: 416)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6264, file: !122, line: 94, baseType: !120, size: 64, offset: 448)
!6275 = !DILocalVariable(name: "it", arg: 1, scope: !6260, file: !3, line: 1240, type: !6263)
!6276 = !DILocation(line: 1240, column: 58, scope: !6260)
!6277 = !DILocalVariable(name: "np", arg: 2, scope: !6260, file: !3, line: 1241, type: !3605)
!6278 = !DILocation(line: 1241, column: 29, scope: !6260)
!6279 = !DILocalVariable(name: "list_name", arg: 3, scope: !6260, file: !3, line: 1242, type: !116)
!6280 = !DILocation(line: 1242, column: 15, scope: !6260)
!6281 = !DILocalVariable(name: "cells_name", arg: 4, scope: !6260, file: !3, line: 1243, type: !116)
!6282 = !DILocation(line: 1243, column: 15, scope: !6260)
!6283 = !DILocalVariable(name: "cell_count", arg: 5, scope: !6260, file: !3, line: 1244, type: !205)
!6284 = !DILocation(line: 1244, column: 7, scope: !6260)
!6285 = !DILocalVariable(name: "list", scope: !6260, file: !3, line: 1246, type: !4213)
!6286 = !DILocation(line: 1246, column: 16, scope: !6260)
!6287 = !DILocalVariable(name: "size", scope: !6260, file: !3, line: 1247, type: !205)
!6288 = !DILocation(line: 1247, column: 6, scope: !6260)
!6289 = !DILocation(line: 1249, column: 9, scope: !6260)
!6290 = !DILocation(line: 1249, column: 2, scope: !6260)
!6291 = !DILocation(line: 1255, column: 6, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6260, file: !3, line: 1255, column: 6)
!6293 = !DILocation(line: 1255, column: 17, scope: !6292)
!6294 = !DILocation(line: 1255, column: 21, scope: !6292)
!6295 = !DILocation(line: 1255, column: 25, scope: !6292)
!6296 = !DILocation(line: 1255, column: 6, scope: !6260)
!6297 = !DILocation(line: 1256, column: 3, scope: !6292)
!6298 = !DILocation(line: 1258, column: 25, scope: !6260)
!6299 = !DILocation(line: 1258, column: 29, scope: !6260)
!6300 = !DILocation(line: 1258, column: 9, scope: !6260)
!6301 = !DILocation(line: 1258, column: 7, scope: !6260)
!6302 = !DILocation(line: 1259, column: 7, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6260, file: !3, line: 1259, column: 6)
!6304 = !DILocation(line: 1259, column: 6, scope: !6260)
!6305 = !DILocation(line: 1260, column: 3, scope: !6303)
!6306 = !DILocation(line: 1262, column: 19, scope: !6260)
!6307 = !DILocation(line: 1262, column: 2, scope: !6260)
!6308 = !DILocation(line: 1262, column: 6, scope: !6260)
!6309 = !DILocation(line: 1262, column: 17, scope: !6260)
!6310 = !DILocation(line: 1263, column: 19, scope: !6260)
!6311 = !DILocation(line: 1263, column: 2, scope: !6260)
!6312 = !DILocation(line: 1263, column: 6, scope: !6260)
!6313 = !DILocation(line: 1263, column: 17, scope: !6260)
!6314 = !DILocation(line: 1264, column: 15, scope: !6260)
!6315 = !DILocation(line: 1264, column: 2, scope: !6260)
!6316 = !DILocation(line: 1264, column: 6, scope: !6260)
!6317 = !DILocation(line: 1264, column: 13, scope: !6260)
!6318 = !DILocation(line: 1265, column: 17, scope: !6260)
!6319 = !DILocation(line: 1265, column: 24, scope: !6260)
!6320 = !DILocation(line: 1265, column: 29, scope: !6260)
!6321 = !DILocation(line: 1265, column: 22, scope: !6260)
!6322 = !DILocation(line: 1265, column: 2, scope: !6260)
!6323 = !DILocation(line: 1265, column: 6, scope: !6260)
!6324 = !DILocation(line: 1265, column: 15, scope: !6260)
!6325 = !DILocation(line: 1266, column: 20, scope: !6260)
!6326 = !DILocation(line: 1266, column: 2, scope: !6260)
!6327 = !DILocation(line: 1266, column: 6, scope: !6260)
!6328 = !DILocation(line: 1266, column: 18, scope: !6260)
!6329 = !DILocation(line: 1267, column: 12, scope: !6260)
!6330 = !DILocation(line: 1267, column: 2, scope: !6260)
!6331 = !DILocation(line: 1267, column: 6, scope: !6260)
!6332 = !DILocation(line: 1267, column: 10, scope: !6260)
!6333 = !DILocation(line: 1269, column: 2, scope: !6260)
!6334 = !DILocation(line: 1270, column: 1, scope: !6260)
!6335 = distinct !DISubprogram(name: "of_phandle_iterator_next", scope: !3, file: !3, line: 1273, type: !6336, scopeLine: 1274, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!6336 = !DISubroutineType(types: !6337)
!6337 = !{!205, !6263}
!6338 = !DILocalVariable(name: "p", arg: 1, scope: !6339, file: !6340, line: 184, type: !6343)
!6339 = distinct !DISubprogram(name: "__swab32p", scope: !6340, file: !6340, line: 184, type: !6341, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!6340 = !DIFile(filename: "./include/uapi/linux/swab.h", directory: "/home/lizy2001/genbc/linux")
!6341 = !DISubroutineType(types: !6342)
!6342 = !{!89, !6343}
!6343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6344, size: 64)
!6344 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !89)
!6345 = !DILocation(line: 184, column: 53, scope: !6339, inlinedAt: !6346)
!6346 = distinct !DILocation(line: 82, column: 9, scope: !6347, inlinedAt: !6351)
!6347 = distinct !DISubprogram(name: "__be32_to_cpup", scope: !6348, file: !6348, line: 80, type: !6349, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!6348 = !DIFile(filename: "./include/uapi/linux/byteorder/little_endian.h", directory: "/home/lizy2001/genbc/linux")
!6349 = !DISubroutineType(types: !6350)
!6350 = !{!89, !4213}
!6351 = distinct !DILocation(line: 1288, column: 16, scope: !6335)
!6352 = !DILocalVariable(name: "p", arg: 1, scope: !6347, file: !6348, line: 80, type: !4213)
!6353 = !DILocation(line: 80, column: 59, scope: !6347, inlinedAt: !6351)
!6354 = !DILocalVariable(name: "it", arg: 1, scope: !6335, file: !3, line: 1273, type: !6263)
!6355 = !DILocation(line: 1273, column: 58, scope: !6335)
!6356 = !DILocalVariable(name: "count", scope: !6335, file: !3, line: 1275, type: !499)
!6357 = !DILocation(line: 1275, column: 11, scope: !6335)
!6358 = !DILocation(line: 1277, column: 6, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6335, file: !3, line: 1277, column: 6)
!6360 = !DILocation(line: 1277, column: 10, scope: !6359)
!6361 = !DILocation(line: 1277, column: 6, scope: !6335)
!6362 = !DILocation(line: 1278, column: 15, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6359, file: !3, line: 1277, column: 16)
!6364 = !DILocation(line: 1278, column: 19, scope: !6363)
!6365 = !DILocation(line: 1278, column: 3, scope: !6363)
!6366 = !DILocation(line: 1279, column: 3, scope: !6363)
!6367 = !DILocation(line: 1279, column: 7, scope: !6363)
!6368 = !DILocation(line: 1279, column: 12, scope: !6363)
!6369 = !DILocation(line: 1280, column: 2, scope: !6363)
!6370 = !DILocation(line: 1282, column: 7, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6335, file: !3, line: 1282, column: 6)
!6372 = !DILocation(line: 1282, column: 11, scope: !6371)
!6373 = !DILocation(line: 1282, column: 15, scope: !6371)
!6374 = !DILocation(line: 1282, column: 18, scope: !6371)
!6375 = !DILocation(line: 1282, column: 22, scope: !6371)
!6376 = !DILocation(line: 1282, column: 37, scope: !6371)
!6377 = !DILocation(line: 1282, column: 41, scope: !6371)
!6378 = !DILocation(line: 1282, column: 34, scope: !6371)
!6379 = !DILocation(line: 1282, column: 6, scope: !6335)
!6380 = !DILocation(line: 1283, column: 3, scope: !6371)
!6381 = !DILocation(line: 1285, column: 12, scope: !6335)
!6382 = !DILocation(line: 1285, column: 16, scope: !6335)
!6383 = !DILocation(line: 1285, column: 2, scope: !6335)
!6384 = !DILocation(line: 1285, column: 6, scope: !6335)
!6385 = !DILocation(line: 1285, column: 10, scope: !6335)
!6386 = !DILocation(line: 1288, column: 29, scope: !6335)
!6387 = !DILocation(line: 1288, column: 33, scope: !6335)
!6388 = !DILocation(line: 1288, column: 36, scope: !6335)
!6389 = !DILocation(line: 82, column: 28, scope: !6347, inlinedAt: !6351)
!6390 = !DILocation(line: 189, column: 9, scope: !6339, inlinedAt: !6346)
!6391 = !DILocation(line: 1288, column: 2, scope: !6335)
!6392 = !DILocation(line: 1288, column: 6, scope: !6335)
!6393 = !DILocation(line: 1288, column: 14, scope: !6335)
!6394 = !DILocation(line: 1290, column: 6, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6335, file: !3, line: 1290, column: 6)
!6396 = !DILocation(line: 1290, column: 10, scope: !6395)
!6397 = !DILocation(line: 1290, column: 6, scope: !6335)
!6398 = !DILocation(line: 1296, column: 38, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 1290, column: 19)
!6400 = !DILocation(line: 1296, column: 42, scope: !6399)
!6401 = !DILocation(line: 1296, column: 14, scope: !6399)
!6402 = !DILocation(line: 1296, column: 3, scope: !6399)
!6403 = !DILocation(line: 1296, column: 7, scope: !6399)
!6404 = !DILocation(line: 1296, column: 12, scope: !6399)
!6405 = !DILocation(line: 1298, column: 7, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 1298, column: 7)
!6407 = !DILocation(line: 1298, column: 11, scope: !6406)
!6408 = !DILocation(line: 1298, column: 7, scope: !6399)
!6409 = !DILocation(line: 1299, column: 9, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 1299, column: 8)
!6411 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 1298, column: 23)
!6412 = !DILocation(line: 1299, column: 13, scope: !6410)
!6413 = !DILocation(line: 1299, column: 8, scope: !6411)
!6414 = !DILocation(line: 1300, column: 5, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 1299, column: 19)
!6416 = !DILocation(line: 1302, column: 5, scope: !6415)
!6417 = !DILocation(line: 1305, column: 29, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 1305, column: 8)
!6419 = !DILocation(line: 1305, column: 33, scope: !6418)
!6420 = !DILocation(line: 1305, column: 39, scope: !6418)
!6421 = !DILocation(line: 1305, column: 43, scope: !6418)
!6422 = !DILocation(line: 1305, column: 8, scope: !6418)
!6423 = !DILocation(line: 1305, column: 8, scope: !6411)
!6424 = !DILocation(line: 1312, column: 9, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6426, file: !3, line: 1312, column: 9)
!6426 = distinct !DILexicalBlock(scope: !6418, file: !3, line: 1306, column: 17)
!6427 = !DILocation(line: 1312, column: 13, scope: !6425)
!6428 = !DILocation(line: 1312, column: 24, scope: !6425)
!6429 = !DILocation(line: 1312, column: 9, scope: !6426)
!6430 = !DILocation(line: 1313, column: 14, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 1312, column: 30)
!6432 = !DILocation(line: 1313, column: 18, scope: !6431)
!6433 = !DILocation(line: 1313, column: 12, scope: !6431)
!6434 = !DILocation(line: 1314, column: 5, scope: !6431)
!6435 = !DILocation(line: 1315, column: 6, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 1314, column: 12)
!6437 = !DILocation(line: 1319, column: 6, scope: !6436)
!6438 = !DILocation(line: 1321, column: 4, scope: !6426)
!6439 = !DILocation(line: 1322, column: 3, scope: !6411)
!6440 = !DILocation(line: 1323, column: 12, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 1322, column: 10)
!6442 = !DILocation(line: 1323, column: 16, scope: !6441)
!6443 = !DILocation(line: 1323, column: 10, scope: !6441)
!6444 = !DILocation(line: 1330, column: 7, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 1330, column: 7)
!6446 = !DILocation(line: 1330, column: 11, scope: !6445)
!6447 = !DILocation(line: 1330, column: 17, scope: !6445)
!6448 = !DILocation(line: 1330, column: 15, scope: !6445)
!6449 = !DILocation(line: 1330, column: 25, scope: !6445)
!6450 = !DILocation(line: 1330, column: 29, scope: !6445)
!6451 = !DILocation(line: 1330, column: 23, scope: !6445)
!6452 = !DILocation(line: 1330, column: 7, scope: !6399)
!6453 = !DILocation(line: 1331, column: 4, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6445, file: !3, line: 1330, column: 39)
!6455 = !DILocation(line: 1334, column: 4, scope: !6454)
!6456 = !DILocation(line: 1336, column: 2, scope: !6399)
!6457 = !DILocation(line: 1338, column: 20, scope: !6335)
!6458 = !DILocation(line: 1338, column: 24, scope: !6335)
!6459 = !DILocation(line: 1338, column: 30, scope: !6335)
!6460 = !DILocation(line: 1338, column: 28, scope: !6335)
!6461 = !DILocation(line: 1338, column: 2, scope: !6335)
!6462 = !DILocation(line: 1338, column: 6, scope: !6335)
!6463 = !DILocation(line: 1338, column: 18, scope: !6335)
!6464 = !DILocation(line: 1339, column: 18, scope: !6335)
!6465 = !DILocation(line: 1339, column: 2, scope: !6335)
!6466 = !DILocation(line: 1339, column: 6, scope: !6335)
!6467 = !DILocation(line: 1339, column: 16, scope: !6335)
!6468 = !DILocation(line: 1341, column: 2, scope: !6335)
!6469 = !DILabel(scope: !6335, name: "err", file: !3, line: 1343)
!6470 = !DILocation(line: 1343, column: 1, scope: !6335)
!6471 = !DILocation(line: 1344, column: 6, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6335, file: !3, line: 1344, column: 6)
!6473 = !DILocation(line: 1344, column: 10, scope: !6472)
!6474 = !DILocation(line: 1344, column: 6, scope: !6335)
!6475 = !DILocation(line: 1345, column: 15, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 1344, column: 16)
!6477 = !DILocation(line: 1345, column: 19, scope: !6476)
!6478 = !DILocation(line: 1345, column: 3, scope: !6476)
!6479 = !DILocation(line: 1346, column: 3, scope: !6476)
!6480 = !DILocation(line: 1346, column: 7, scope: !6476)
!6481 = !DILocation(line: 1346, column: 12, scope: !6476)
!6482 = !DILocation(line: 1347, column: 2, scope: !6476)
!6483 = !DILocation(line: 1349, column: 2, scope: !6335)
!6484 = !DILocation(line: 1350, column: 1, scope: !6335)
!6485 = distinct !DISubprogram(name: "of_phandle_iterator_args", scope: !3, file: !3, line: 1353, type: !6486, scopeLine: 1356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!6486 = !DISubroutineType(types: !6487)
!6487 = !{!205, !6263, !6488, !205}
!6488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 64)
!6489 = !DILocation(line: 184, column: 53, scope: !6339, inlinedAt: !6490)
!6490 = distinct !DILocation(line: 82, column: 9, scope: !6347, inlinedAt: !6491)
!6491 = distinct !DILocation(line: 1365, column: 13, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6493, file: !3, line: 1364, column: 2)
!6493 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 1364, column: 2)
!6494 = !DILocation(line: 80, column: 59, scope: !6347, inlinedAt: !6491)
!6495 = !DILocalVariable(name: "it", arg: 1, scope: !6485, file: !3, line: 1353, type: !6263)
!6496 = !DILocation(line: 1353, column: 58, scope: !6485)
!6497 = !DILocalVariable(name: "args", arg: 2, scope: !6485, file: !3, line: 1354, type: !6488)
!6498 = !DILocation(line: 1354, column: 19, scope: !6485)
!6499 = !DILocalVariable(name: "size", arg: 3, scope: !6485, file: !3, line: 1355, type: !205)
!6500 = !DILocation(line: 1355, column: 13, scope: !6485)
!6501 = !DILocalVariable(name: "i", scope: !6485, file: !3, line: 1357, type: !205)
!6502 = !DILocation(line: 1357, column: 6, scope: !6485)
!6503 = !DILocalVariable(name: "count", scope: !6485, file: !3, line: 1357, type: !205)
!6504 = !DILocation(line: 1357, column: 9, scope: !6485)
!6505 = !DILocation(line: 1359, column: 10, scope: !6485)
!6506 = !DILocation(line: 1359, column: 14, scope: !6485)
!6507 = !DILocation(line: 1359, column: 8, scope: !6485)
!6508 = !DILocalVariable(name: "__ret_warn_on", scope: !6509, file: !3, line: 1361, type: !205)
!6509 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 1361, column: 6)
!6510 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 1361, column: 6)
!6511 = !DILocation(line: 1361, column: 6, scope: !6509)
!6512 = !DILocation(line: 1361, column: 6, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 1361, column: 6)
!6514 = !DILocation(line: 1361, column: 6, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 1361, column: 6)
!6516 = !DILocation(line: 1361, column: 6, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6515, file: !3, line: 1361, column: 6)
!6518 = !DILocation(line: 1361, column: 6, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6515, file: !3, line: 1361, column: 6)
!6520 = !{i32 -2142619972, i32 -2142619943, i32 -2142619897, i32 -2142619839, i32 -2142619785, i32 -2142619731, i32 -2142619676, i32 -2142619645}
!6521 = !DILocation(line: 1361, column: 6, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6515, file: !3, line: 1361, column: 6)
!6523 = !{i32 -2142619245, i32 -2142619238, i32 -2142619186, i32 -2142619155, i32 -2142619125}
!6524 = !DILocation(line: 1361, column: 6, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6515, file: !3, line: 1361, column: 6)
!6526 = !DILocation(line: 1361, column: 6, scope: !6510)
!6527 = !DILocation(line: 1361, column: 6, scope: !6485)
!6528 = !DILocation(line: 1362, column: 11, scope: !6510)
!6529 = !DILocation(line: 1362, column: 9, scope: !6510)
!6530 = !DILocation(line: 1362, column: 3, scope: !6510)
!6531 = !DILocation(line: 1364, column: 9, scope: !6493)
!6532 = !DILocation(line: 1364, column: 7, scope: !6493)
!6533 = !DILocation(line: 1364, column: 14, scope: !6492)
!6534 = !DILocation(line: 1364, column: 18, scope: !6492)
!6535 = !DILocation(line: 1364, column: 16, scope: !6492)
!6536 = !DILocation(line: 1364, column: 2, scope: !6493)
!6537 = !DILocation(line: 1365, column: 26, scope: !6492)
!6538 = !DILocation(line: 1365, column: 30, scope: !6492)
!6539 = !DILocation(line: 1365, column: 33, scope: !6492)
!6540 = !DILocation(line: 82, column: 28, scope: !6347, inlinedAt: !6491)
!6541 = !DILocation(line: 189, column: 9, scope: !6339, inlinedAt: !6490)
!6542 = !DILocation(line: 1365, column: 3, scope: !6492)
!6543 = !DILocation(line: 1365, column: 8, scope: !6492)
!6544 = !DILocation(line: 1365, column: 11, scope: !6492)
!6545 = !DILocation(line: 1364, column: 26, scope: !6492)
!6546 = !DILocation(line: 1364, column: 2, scope: !6492)
!6547 = distinct !{!6547, !6536, !6548}
!6548 = !DILocation(line: 1365, column: 35, scope: !6493)
!6549 = !DILocation(line: 1367, column: 9, scope: !6485)
!6550 = !DILocation(line: 1367, column: 2, scope: !6485)
!6551 = distinct !DISubprogram(name: "__of_parse_phandle_with_args", scope: !3, file: !3, line: 1370, type: !6552, scopeLine: 1375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!6552 = !DISubroutineType(types: !6553)
!6553 = !{!205, !3605, !116, !116, !205, !205, !3607}
!6554 = !DILocalVariable(name: "np", arg: 1, scope: !6551, file: !3, line: 1370, type: !3605)
!6555 = !DILocation(line: 1370, column: 67, scope: !6551)
!6556 = !DILocalVariable(name: "list_name", arg: 2, scope: !6551, file: !3, line: 1371, type: !116)
!6557 = !DILocation(line: 1371, column: 18, scope: !6551)
!6558 = !DILocalVariable(name: "cells_name", arg: 3, scope: !6551, file: !3, line: 1372, type: !116)
!6559 = !DILocation(line: 1372, column: 18, scope: !6551)
!6560 = !DILocalVariable(name: "cell_count", arg: 4, scope: !6551, file: !3, line: 1373, type: !205)
!6561 = !DILocation(line: 1373, column: 10, scope: !6551)
!6562 = !DILocalVariable(name: "index", arg: 5, scope: !6551, file: !3, line: 1373, type: !205)
!6563 = !DILocation(line: 1373, column: 26, scope: !6551)
!6564 = !DILocalVariable(name: "out_args", arg: 6, scope: !6551, file: !3, line: 1374, type: !3607)
!6565 = !DILocation(line: 1374, column: 30, scope: !6551)
!6566 = !DILocalVariable(name: "it", scope: !6551, file: !3, line: 1376, type: !6264)
!6567 = !DILocation(line: 1376, column: 29, scope: !6551)
!6568 = !DILocalVariable(name: "rc", scope: !6551, file: !3, line: 1377, type: !205)
!6569 = !DILocation(line: 1377, column: 6, scope: !6551)
!6570 = !DILocalVariable(name: "cur_index", scope: !6551, file: !3, line: 1377, type: !205)
!6571 = !DILocation(line: 1377, column: 10, scope: !6551)
!6572 = !DILocation(line: 1380, column: 2, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6551, file: !3, line: 1380, column: 2)
!6574 = !DILocation(line: 1380, column: 2, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6573, file: !3, line: 1380, column: 2)
!6576 = !DILocation(line: 1387, column: 6, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6575, file: !3, line: 1380, column: 70)
!6578 = !DILocation(line: 1388, column: 7, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6577, file: !3, line: 1388, column: 7)
!6580 = !DILocation(line: 1388, column: 20, scope: !6579)
!6581 = !DILocation(line: 1388, column: 17, scope: !6579)
!6582 = !DILocation(line: 1388, column: 7, scope: !6577)
!6583 = !DILocation(line: 1389, column: 12, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6585, file: !3, line: 1389, column: 8)
!6585 = distinct !DILexicalBlock(scope: !6579, file: !3, line: 1388, column: 27)
!6586 = !DILocation(line: 1389, column: 9, scope: !6584)
!6587 = !DILocation(line: 1389, column: 8, scope: !6585)
!6588 = !DILocation(line: 1390, column: 5, scope: !6584)
!6589 = !DILocation(line: 1392, column: 8, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6585, file: !3, line: 1392, column: 8)
!6591 = !DILocation(line: 1392, column: 8, scope: !6585)
!6592 = !DILocalVariable(name: "c", scope: !6593, file: !3, line: 1393, type: !205)
!6593 = distinct !DILexicalBlock(scope: !6590, file: !3, line: 1392, column: 18)
!6594 = !DILocation(line: 1393, column: 9, scope: !6593)
!6595 = !DILocation(line: 1396, column: 13, scope: !6593)
!6596 = !DILocation(line: 1396, column: 23, scope: !6593)
!6597 = !DILocation(line: 1395, column: 9, scope: !6593)
!6598 = !DILocation(line: 1395, column: 7, scope: !6593)
!6599 = !DILocation(line: 1398, column: 23, scope: !6593)
!6600 = !DILocation(line: 1398, column: 5, scope: !6593)
!6601 = !DILocation(line: 1398, column: 15, scope: !6593)
!6602 = !DILocation(line: 1398, column: 18, scope: !6593)
!6603 = !DILocation(line: 1399, column: 28, scope: !6593)
!6604 = !DILocation(line: 1399, column: 5, scope: !6593)
!6605 = !DILocation(line: 1399, column: 15, scope: !6593)
!6606 = !DILocation(line: 1399, column: 26, scope: !6593)
!6607 = !DILocation(line: 1400, column: 4, scope: !6593)
!6608 = !DILocation(line: 1401, column: 20, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6590, file: !3, line: 1400, column: 11)
!6610 = !DILocation(line: 1401, column: 5, scope: !6609)
!6611 = !DILocation(line: 1405, column: 4, scope: !6585)
!6612 = !DILocation(line: 1408, column: 12, scope: !6577)
!6613 = !DILocation(line: 1409, column: 2, scope: !6577)
!6614 = distinct !{!6614, !6572, !6615}
!6615 = !DILocation(line: 1409, column: 2, scope: !6573)
!6616 = !DILabel(scope: !6551, name: "err", file: !3, line: 1417)
!6617 = !DILocation(line: 1417, column: 2, scope: !6551)
!6618 = !DILocation(line: 1418, column: 17, scope: !6551)
!6619 = !DILocation(line: 1418, column: 2, scope: !6551)
!6620 = !DILocation(line: 1419, column: 9, scope: !6551)
!6621 = !DILocation(line: 1419, column: 2, scope: !6551)
!6622 = !DILocation(line: 1420, column: 1, scope: !6551)
!6623 = !DILocation(line: 184, column: 53, scope: !6339, inlinedAt: !6624)
!6624 = distinct !DILocation(line: 82, column: 9, scope: !6347, inlinedAt: !6625)
!6625 = distinct !DILocation(line: 1614, column: 34, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6627, file: !3, line: 1607, column: 47)
!6627 = distinct !DILexicalBlock(scope: !3602, file: !3, line: 1592, column: 14)
!6628 = !DILocation(line: 80, column: 59, scope: !6347, inlinedAt: !6625)
!6629 = !DILocalVariable(name: "np", arg: 1, scope: !3602, file: !3, line: 1540, type: !3605)
!6630 = !DILocation(line: 1540, column: 62, scope: !3602)
!6631 = !DILocalVariable(name: "list_name", arg: 2, scope: !3602, file: !3, line: 1541, type: !116)
!6632 = !DILocation(line: 1541, column: 20, scope: !3602)
!6633 = !DILocalVariable(name: "stem_name", arg: 3, scope: !3602, file: !3, line: 1542, type: !116)
!6634 = !DILocation(line: 1542, column: 20, scope: !3602)
!6635 = !DILocalVariable(name: "index", arg: 4, scope: !3602, file: !3, line: 1543, type: !205)
!6636 = !DILocation(line: 1543, column: 12, scope: !3602)
!6637 = !DILocalVariable(name: "out_args", arg: 5, scope: !3602, file: !3, line: 1543, type: !3607)
!6638 = !DILocation(line: 1543, column: 43, scope: !3602)
!6639 = !DILocalVariable(name: "cells_name", scope: !3602, file: !3, line: 1545, type: !221)
!6640 = !DILocation(line: 1545, column: 8, scope: !3602)
!6641 = !DILocalVariable(name: "map_name", scope: !3602, file: !3, line: 1545, type: !221)
!6642 = !DILocation(line: 1545, column: 21, scope: !3602)
!6643 = !DILocalVariable(name: "mask_name", scope: !3602, file: !3, line: 1545, type: !221)
!6644 = !DILocation(line: 1545, column: 39, scope: !3602)
!6645 = !DILocalVariable(name: "pass_name", scope: !3602, file: !3, line: 1546, type: !221)
!6646 = !DILocation(line: 1546, column: 8, scope: !3602)
!6647 = !DILocalVariable(name: "cur", scope: !3602, file: !3, line: 1547, type: !120)
!6648 = !DILocation(line: 1547, column: 22, scope: !3602)
!6649 = !DILocalVariable(name: "new", scope: !3602, file: !3, line: 1547, type: !120)
!6650 = !DILocation(line: 1547, column: 28, scope: !3602)
!6651 = !DILocalVariable(name: "map", scope: !3602, file: !3, line: 1548, type: !4213)
!6652 = !DILocation(line: 1548, column: 16, scope: !3602)
!6653 = !DILocalVariable(name: "mask", scope: !3602, file: !3, line: 1548, type: !4213)
!6654 = !DILocation(line: 1548, column: 22, scope: !3602)
!6655 = !DILocalVariable(name: "pass", scope: !3602, file: !3, line: 1548, type: !4213)
!6656 = !DILocation(line: 1548, column: 29, scope: !3602)
!6657 = !DILocalVariable(name: "initial_match_array", scope: !3602, file: !3, line: 1551, type: !6658)
!6658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !103, size: 512, elements: !1591)
!6659 = !DILocation(line: 1551, column: 9, scope: !3602)
!6660 = !DILocalVariable(name: "match_array", scope: !3602, file: !3, line: 1552, type: !4213)
!6661 = !DILocation(line: 1552, column: 16, scope: !3602)
!6662 = !DILocation(line: 1552, column: 30, scope: !3602)
!6663 = !DILocalVariable(name: "i", scope: !3602, file: !3, line: 1553, type: !205)
!6664 = !DILocation(line: 1553, column: 6, scope: !3602)
!6665 = !DILocalVariable(name: "ret", scope: !3602, file: !3, line: 1553, type: !205)
!6666 = !DILocation(line: 1553, column: 9, scope: !3602)
!6667 = !DILocalVariable(name: "map_len", scope: !3602, file: !3, line: 1553, type: !205)
!6668 = !DILocation(line: 1553, column: 14, scope: !3602)
!6669 = !DILocalVariable(name: "match", scope: !3602, file: !3, line: 1553, type: !205)
!6670 = !DILocation(line: 1553, column: 23, scope: !3602)
!6671 = !DILocalVariable(name: "list_size", scope: !3602, file: !3, line: 1554, type: !87)
!6672 = !DILocation(line: 1554, column: 6, scope: !3602)
!6673 = !DILocalVariable(name: "new_size", scope: !3602, file: !3, line: 1554, type: !87)
!6674 = !DILocation(line: 1554, column: 17, scope: !3602)
!6675 = !DILocation(line: 1556, column: 6, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !3602, file: !3, line: 1556, column: 6)
!6677 = !DILocation(line: 1556, column: 12, scope: !6676)
!6678 = !DILocation(line: 1556, column: 6, scope: !3602)
!6679 = !DILocation(line: 1557, column: 3, scope: !6676)
!6680 = !DILocation(line: 1559, column: 50, scope: !3602)
!6681 = !DILocation(line: 1559, column: 15, scope: !3602)
!6682 = !DILocation(line: 1559, column: 13, scope: !3602)
!6683 = !DILocation(line: 1560, column: 7, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !3602, file: !3, line: 1560, column: 6)
!6685 = !DILocation(line: 1560, column: 6, scope: !3602)
!6686 = !DILocation(line: 1561, column: 3, scope: !6684)
!6687 = !DILocation(line: 1563, column: 6, scope: !3602)
!6688 = !DILocation(line: 1564, column: 45, scope: !3602)
!6689 = !DILocation(line: 1564, column: 13, scope: !3602)
!6690 = !DILocation(line: 1564, column: 11, scope: !3602)
!6691 = !DILocation(line: 1565, column: 7, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !3602, file: !3, line: 1565, column: 6)
!6693 = !DILocation(line: 1565, column: 6, scope: !3602)
!6694 = !DILocation(line: 1566, column: 3, scope: !6692)
!6695 = !DILocation(line: 1568, column: 51, scope: !3602)
!6696 = !DILocation(line: 1568, column: 14, scope: !3602)
!6697 = !DILocation(line: 1568, column: 12, scope: !3602)
!6698 = !DILocation(line: 1569, column: 7, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !3602, file: !3, line: 1569, column: 6)
!6700 = !DILocation(line: 1569, column: 6, scope: !3602)
!6701 = !DILocation(line: 1570, column: 3, scope: !6699)
!6702 = !DILocation(line: 1572, column: 56, scope: !3602)
!6703 = !DILocation(line: 1572, column: 14, scope: !3602)
!6704 = !DILocation(line: 1572, column: 12, scope: !3602)
!6705 = !DILocation(line: 1573, column: 7, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !3602, file: !3, line: 1573, column: 6)
!6707 = !DILocation(line: 1573, column: 6, scope: !3602)
!6708 = !DILocation(line: 1574, column: 3, scope: !6706)
!6709 = !DILocation(line: 1576, column: 37, scope: !3602)
!6710 = !DILocation(line: 1576, column: 41, scope: !3602)
!6711 = !DILocation(line: 1576, column: 52, scope: !3602)
!6712 = !DILocation(line: 1576, column: 68, scope: !3602)
!6713 = !DILocation(line: 1577, column: 9, scope: !3602)
!6714 = !DILocation(line: 1576, column: 8, scope: !3602)
!6715 = !DILocation(line: 1576, column: 6, scope: !3602)
!6716 = !DILocation(line: 1578, column: 6, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !3602, file: !3, line: 1578, column: 6)
!6718 = !DILocation(line: 1578, column: 6, scope: !3602)
!6719 = !DILocation(line: 1579, column: 3, scope: !6717)
!6720 = !DILocation(line: 1582, column: 8, scope: !3602)
!6721 = !DILocation(line: 1582, column: 18, scope: !3602)
!6722 = !DILocation(line: 1582, column: 6, scope: !3602)
!6723 = !DILocation(line: 1583, column: 29, scope: !3602)
!6724 = !DILocation(line: 1583, column: 34, scope: !3602)
!6725 = !DILocation(line: 1583, column: 8, scope: !3602)
!6726 = !DILocation(line: 1583, column: 6, scope: !3602)
!6727 = !DILocation(line: 1584, column: 6, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !3602, file: !3, line: 1584, column: 6)
!6729 = !DILocation(line: 1584, column: 10, scope: !6728)
!6730 = !DILocation(line: 1584, column: 6, scope: !3602)
!6731 = !DILocation(line: 1585, column: 3, scope: !6728)
!6732 = !DILocation(line: 1588, column: 9, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !3602, file: !3, line: 1588, column: 2)
!6734 = !DILocation(line: 1588, column: 7, scope: !6733)
!6735 = !DILocation(line: 1588, column: 14, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6733, file: !3, line: 1588, column: 2)
!6737 = !DILocation(line: 1588, column: 18, scope: !6736)
!6738 = !DILocation(line: 1588, column: 16, scope: !6736)
!6739 = !DILocation(line: 1588, column: 2, scope: !6733)
!6740 = !DILocation(line: 1589, column: 28, scope: !6736)
!6741 = !DILocation(line: 1589, column: 23, scope: !6736)
!6742 = !DILocation(line: 1589, column: 3, scope: !6736)
!6743 = !DILocation(line: 1589, column: 26, scope: !6736)
!6744 = !DILocation(line: 1588, column: 30, scope: !6736)
!6745 = !DILocation(line: 1588, column: 2, scope: !6736)
!6746 = distinct !{!6746, !6739, !6747}
!6747 = !DILocation(line: 1589, column: 28, scope: !6733)
!6748 = !DILocation(line: 1591, column: 6, scope: !3602)
!6749 = !DILocation(line: 1592, column: 2, scope: !3602)
!6750 = !DILocation(line: 1592, column: 9, scope: !3602)
!6751 = !DILocation(line: 1594, column: 25, scope: !6627)
!6752 = !DILocation(line: 1594, column: 30, scope: !6627)
!6753 = !DILocation(line: 1594, column: 9, scope: !6627)
!6754 = !DILocation(line: 1594, column: 7, scope: !6627)
!6755 = !DILocation(line: 1595, column: 8, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6627, file: !3, line: 1595, column: 7)
!6757 = !DILocation(line: 1595, column: 7, scope: !6627)
!6758 = !DILocation(line: 1596, column: 8, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6756, file: !3, line: 1595, column: 13)
!6760 = !DILocation(line: 1597, column: 4, scope: !6759)
!6761 = !DILocation(line: 1599, column: 11, scope: !6627)
!6762 = !DILocation(line: 1602, column: 26, scope: !6627)
!6763 = !DILocation(line: 1602, column: 31, scope: !6627)
!6764 = !DILocation(line: 1602, column: 10, scope: !6627)
!6765 = !DILocation(line: 1602, column: 8, scope: !6627)
!6766 = !DILocation(line: 1603, column: 8, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6627, file: !3, line: 1603, column: 7)
!6768 = !DILocation(line: 1603, column: 7, scope: !6627)
!6769 = !DILocation(line: 1604, column: 9, scope: !6767)
!6770 = !DILocation(line: 1604, column: 4, scope: !6767)
!6771 = !DILocation(line: 1606, column: 9, scope: !6627)
!6772 = !DILocation(line: 1607, column: 3, scope: !6627)
!6773 = !DILocation(line: 1607, column: 10, scope: !6627)
!6774 = !DILocation(line: 1607, column: 21, scope: !6627)
!6775 = !DILocation(line: 1607, column: 31, scope: !6627)
!6776 = !DILocation(line: 1607, column: 18, scope: !6627)
!6777 = !DILocation(line: 1607, column: 36, scope: !6627)
!6778 = !DILocation(line: 1607, column: 40, scope: !6627)
!6779 = !DILocation(line: 1607, column: 39, scope: !6627)
!6780 = !DILocation(line: 0, scope: !6627)
!6781 = !DILocation(line: 1609, column: 10, scope: !6626)
!6782 = !DILocation(line: 1610, column: 11, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6626, file: !3, line: 1610, column: 4)
!6784 = !DILocation(line: 1610, column: 9, scope: !6783)
!6785 = !DILocation(line: 1610, column: 16, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6783, file: !3, line: 1610, column: 4)
!6787 = !DILocation(line: 1610, column: 20, scope: !6786)
!6788 = !DILocation(line: 1610, column: 18, scope: !6786)
!6789 = !DILocation(line: 1610, column: 4, scope: !6783)
!6790 = !DILocation(line: 1611, column: 17, scope: !6786)
!6791 = !DILocation(line: 1611, column: 29, scope: !6786)
!6792 = !DILocation(line: 1611, column: 38, scope: !6786)
!6793 = !DILocation(line: 1611, column: 34, scope: !6786)
!6794 = !DILocation(line: 1611, column: 32, scope: !6786)
!6795 = !DILocation(line: 1611, column: 44, scope: !6786)
!6796 = !DILocation(line: 1611, column: 49, scope: !6786)
!6797 = !DILocation(line: 1611, column: 42, scope: !6786)
!6798 = !DILocation(line: 1611, column: 14, scope: !6786)
!6799 = !DILocation(line: 1611, column: 11, scope: !6786)
!6800 = !DILocation(line: 1611, column: 5, scope: !6786)
!6801 = !DILocation(line: 1610, column: 32, scope: !6786)
!6802 = !DILocation(line: 1610, column: 43, scope: !6786)
!6803 = !DILocation(line: 1610, column: 4, scope: !6786)
!6804 = distinct !{!6804, !6789, !6805}
!6805 = !DILocation(line: 1611, column: 51, scope: !6783)
!6806 = !DILocation(line: 1613, column: 16, scope: !6626)
!6807 = !DILocation(line: 1613, column: 4, scope: !6626)
!6808 = !DILocation(line: 1614, column: 47, scope: !6626)
!6809 = !DILocation(line: 82, column: 28, scope: !6347, inlinedAt: !6625)
!6810 = !DILocation(line: 189, column: 9, scope: !6339, inlinedAt: !6624)
!6811 = !DILocation(line: 1614, column: 10, scope: !6626)
!6812 = !DILocation(line: 1614, column: 8, scope: !6626)
!6813 = !DILocation(line: 1615, column: 7, scope: !6626)
!6814 = !DILocation(line: 1616, column: 11, scope: !6626)
!6815 = !DILocation(line: 1619, column: 9, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6626, file: !3, line: 1619, column: 8)
!6817 = !DILocation(line: 1619, column: 8, scope: !6626)
!6818 = !DILocation(line: 1620, column: 5, scope: !6816)
!6819 = !DILocation(line: 1622, column: 32, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6626, file: !3, line: 1622, column: 8)
!6821 = !DILocation(line: 1622, column: 9, scope: !6820)
!6822 = !DILocation(line: 1622, column: 8, scope: !6626)
!6823 = !DILocation(line: 1623, column: 11, scope: !6820)
!6824 = !DILocation(line: 1623, column: 5, scope: !6820)
!6825 = !DILocation(line: 1625, column: 31, scope: !6626)
!6826 = !DILocation(line: 1625, column: 36, scope: !6626)
!6827 = !DILocation(line: 1625, column: 10, scope: !6626)
!6828 = !DILocation(line: 1625, column: 8, scope: !6626)
!6829 = !DILocation(line: 1626, column: 8, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6626, file: !3, line: 1626, column: 8)
!6831 = !DILocation(line: 1626, column: 8, scope: !6626)
!6832 = !DILocation(line: 1627, column: 5, scope: !6830)
!6833 = !DILocalVariable(name: "__ret_warn_on", scope: !6834, file: !3, line: 1630, type: !205)
!6834 = distinct !DILexicalBlock(scope: !6835, file: !3, line: 1630, column: 8)
!6835 = distinct !DILexicalBlock(scope: !6626, file: !3, line: 1630, column: 8)
!6836 = !DILocation(line: 1630, column: 8, scope: !6834)
!6837 = !DILocation(line: 1630, column: 8, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6834, file: !3, line: 1630, column: 8)
!6839 = !DILocation(line: 1630, column: 8, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6838, file: !3, line: 1630, column: 8)
!6841 = !DILocation(line: 1630, column: 8, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 1630, column: 8)
!6843 = !DILocation(line: 1630, column: 8, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 1630, column: 8)
!6845 = !{i32 -2142616717, i32 -2142616688, i32 -2142616642, i32 -2142616584, i32 -2142616530, i32 -2142616476, i32 -2142616421, i32 -2142616390}
!6846 = !DILocation(line: 1630, column: 8, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 1630, column: 8)
!6848 = !{i32 -2142615990, i32 -2142615983, i32 -2142615931, i32 -2142615900, i32 -2142615870}
!6849 = !DILocation(line: 1630, column: 8, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 1630, column: 8)
!6851 = !DILocation(line: 1630, column: 8, scope: !6835)
!6852 = !DILocation(line: 1630, column: 8, scope: !6626)
!6853 = !DILocation(line: 1631, column: 5, scope: !6835)
!6854 = !DILocation(line: 1632, column: 8, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6626, file: !3, line: 1632, column: 8)
!6856 = !DILocation(line: 1632, column: 18, scope: !6855)
!6857 = !DILocation(line: 1632, column: 16, scope: !6855)
!6858 = !DILocation(line: 1632, column: 8, scope: !6626)
!6859 = !DILocation(line: 1633, column: 5, scope: !6855)
!6860 = !DILocation(line: 1636, column: 11, scope: !6626)
!6861 = !DILocation(line: 1636, column: 8, scope: !6626)
!6862 = !DILocation(line: 1637, column: 15, scope: !6626)
!6863 = !DILocation(line: 1637, column: 12, scope: !6626)
!6864 = distinct !{!6864, !6772, !6865}
!6865 = !DILocation(line: 1638, column: 3, scope: !6627)
!6866 = !DILocation(line: 1639, column: 8, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6627, file: !3, line: 1639, column: 7)
!6868 = !DILocation(line: 1639, column: 7, scope: !6627)
!6869 = !DILocation(line: 1640, column: 4, scope: !6867)
!6870 = !DILocation(line: 1643, column: 26, scope: !6627)
!6871 = !DILocation(line: 1643, column: 31, scope: !6627)
!6872 = !DILocation(line: 1643, column: 10, scope: !6627)
!6873 = !DILocation(line: 1643, column: 8, scope: !6627)
!6874 = !DILocation(line: 1644, column: 8, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6627, file: !3, line: 1644, column: 7)
!6876 = !DILocation(line: 1644, column: 7, scope: !6627)
!6877 = !DILocation(line: 1645, column: 9, scope: !6875)
!6878 = !DILocation(line: 1645, column: 4, scope: !6875)
!6879 = !DILocation(line: 1652, column: 17, scope: !6627)
!6880 = !DILocation(line: 1652, column: 23, scope: !6627)
!6881 = !DILocation(line: 1652, column: 21, scope: !6627)
!6882 = !DILocation(line: 1652, column: 15, scope: !6627)
!6883 = !DILocation(line: 1653, column: 10, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6627, file: !3, line: 1653, column: 3)
!6885 = !DILocation(line: 1653, column: 8, scope: !6884)
!6886 = !DILocation(line: 1653, column: 15, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 1653, column: 3)
!6888 = !DILocation(line: 1653, column: 19, scope: !6887)
!6889 = !DILocation(line: 1653, column: 17, scope: !6887)
!6890 = !DILocation(line: 1653, column: 3, scope: !6884)
!6891 = !DILocalVariable(name: "val", scope: !6892, file: !3, line: 1654, type: !103)
!6892 = distinct !DILexicalBlock(scope: !6887, file: !3, line: 1653, column: 34)
!6893 = !DILocation(line: 1654, column: 11, scope: !6892)
!6894 = !DILocation(line: 1654, column: 19, scope: !6892)
!6895 = !DILocation(line: 1654, column: 25, scope: !6892)
!6896 = !DILocation(line: 1654, column: 23, scope: !6892)
!6897 = !DILocation(line: 1654, column: 36, scope: !6892)
!6898 = !DILocation(line: 1654, column: 34, scope: !6892)
!6899 = !DILocation(line: 1654, column: 17, scope: !6892)
!6900 = !DILocation(line: 1656, column: 8, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6892, file: !3, line: 1656, column: 8)
!6902 = !DILocation(line: 1656, column: 12, scope: !6901)
!6903 = !DILocation(line: 1656, column: 10, scope: !6901)
!6904 = !DILocation(line: 1656, column: 8, scope: !6892)
!6905 = !DILocation(line: 1657, column: 13, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6901, file: !3, line: 1656, column: 23)
!6907 = !DILocation(line: 1657, column: 18, scope: !6906)
!6908 = !DILocation(line: 1657, column: 12, scope: !6906)
!6909 = !DILocation(line: 1657, column: 9, scope: !6906)
!6910 = !DILocation(line: 1658, column: 12, scope: !6906)
!6911 = !DILocation(line: 1658, column: 45, scope: !6906)
!6912 = !DILocation(line: 1658, column: 50, scope: !6906)
!6913 = !DILocation(line: 1658, column: 43, scope: !6906)
!6914 = !DILocation(line: 1658, column: 9, scope: !6906)
!6915 = !DILocation(line: 1659, column: 4, scope: !6906)
!6916 = !DILocation(line: 1661, column: 24, scope: !6892)
!6917 = !DILocation(line: 1661, column: 4, scope: !6892)
!6918 = !DILocation(line: 1661, column: 14, scope: !6892)
!6919 = !DILocation(line: 1661, column: 19, scope: !6892)
!6920 = !DILocation(line: 1661, column: 22, scope: !6892)
!6921 = !DILocation(line: 1662, column: 3, scope: !6892)
!6922 = !DILocation(line: 1653, column: 30, scope: !6887)
!6923 = !DILocation(line: 1653, column: 3, scope: !6887)
!6924 = distinct !{!6924, !6890, !6925}
!6925 = !DILocation(line: 1662, column: 3, scope: !6884)
!6926 = !DILocation(line: 1663, column: 38, scope: !6627)
!6927 = !DILocation(line: 1663, column: 36, scope: !6627)
!6928 = !DILocation(line: 1663, column: 3, scope: !6627)
!6929 = !DILocation(line: 1663, column: 13, scope: !6627)
!6930 = !DILocation(line: 1663, column: 24, scope: !6627)
!6931 = !DILocation(line: 1665, column: 18, scope: !6627)
!6932 = !DILocation(line: 1665, column: 3, scope: !6627)
!6933 = !DILocation(line: 1665, column: 13, scope: !6627)
!6934 = !DILocation(line: 1665, column: 16, scope: !6627)
!6935 = !DILocation(line: 1666, column: 15, scope: !6627)
!6936 = !DILocation(line: 1666, column: 3, scope: !6627)
!6937 = !DILocation(line: 1667, column: 9, scope: !6627)
!6938 = !DILocation(line: 1667, column: 7, scope: !6627)
!6939 = distinct !{!6939, !6749, !6940}
!6940 = !DILocation(line: 1668, column: 2, scope: !3602)
!6941 = !DILabel(scope: !3602, name: "put", file: !3, line: 1669)
!6942 = !DILocation(line: 1669, column: 1, scope: !3602)
!6943 = !DILocation(line: 1670, column: 14, scope: !3602)
!6944 = !DILocation(line: 1670, column: 2, scope: !3602)
!6945 = !DILocation(line: 1671, column: 14, scope: !3602)
!6946 = !DILocation(line: 1671, column: 2, scope: !3602)
!6947 = !DILabel(scope: !3602, name: "free", file: !3, line: 1672)
!6948 = !DILocation(line: 1672, column: 1, scope: !3602)
!6949 = !DILocation(line: 1673, column: 8, scope: !3602)
!6950 = !DILocation(line: 1673, column: 2, scope: !3602)
!6951 = !DILocation(line: 1674, column: 8, scope: !3602)
!6952 = !DILocation(line: 1674, column: 2, scope: !3602)
!6953 = !DILocation(line: 1675, column: 8, scope: !3602)
!6954 = !DILocation(line: 1675, column: 2, scope: !3602)
!6955 = !DILocation(line: 1676, column: 8, scope: !3602)
!6956 = !DILocation(line: 1676, column: 2, scope: !3602)
!6957 = !DILocation(line: 1678, column: 9, scope: !3602)
!6958 = !DILocation(line: 1678, column: 2, scope: !3602)
!6959 = !DILocation(line: 1679, column: 1, scope: !3602)
!6960 = distinct !DISubprogram(name: "__fswab32", scope: !6340, file: !6340, line: 57, type: !6961, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!6961 = !DISubroutineType(types: !6962)
!6962 = !{!89, !89}
!6963 = !DILocalVariable(name: "val", arg: 1, scope: !6960, file: !6340, line: 57, type: !89)
!6964 = !DILocation(line: 57, column: 57, scope: !6960)
!6965 = !DILocation(line: 60, column: 23, scope: !6960)
!6966 = !DILocation(line: 60, column: 9, scope: !6960)
!6967 = !DILocation(line: 60, column: 2, scope: !6960)
!6968 = distinct !DISubprogram(name: "of_parse_phandle_with_fixed_args", scope: !3, file: !3, line: 1712, type: !6969, scopeLine: 1715, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!6969 = !DISubroutineType(types: !6970)
!6970 = !{!205, !3605, !116, !205, !205, !3607}
!6971 = !DILocalVariable(name: "np", arg: 1, scope: !6968, file: !3, line: 1712, type: !3605)
!6972 = !DILocation(line: 1712, column: 64, scope: !6968)
!6973 = !DILocalVariable(name: "list_name", arg: 2, scope: !6968, file: !3, line: 1713, type: !116)
!6974 = !DILocation(line: 1713, column: 17, scope: !6968)
!6975 = !DILocalVariable(name: "cell_count", arg: 3, scope: !6968, file: !3, line: 1713, type: !205)
!6976 = !DILocation(line: 1713, column: 32, scope: !6968)
!6977 = !DILocalVariable(name: "index", arg: 4, scope: !6968, file: !3, line: 1714, type: !205)
!6978 = !DILocation(line: 1714, column: 9, scope: !6968)
!6979 = !DILocalVariable(name: "out_args", arg: 5, scope: !6968, file: !3, line: 1714, type: !3607)
!6980 = !DILocation(line: 1714, column: 40, scope: !6968)
!6981 = !DILocation(line: 1716, column: 6, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6968, file: !3, line: 1716, column: 6)
!6983 = !DILocation(line: 1716, column: 12, scope: !6982)
!6984 = !DILocation(line: 1716, column: 6, scope: !6968)
!6985 = !DILocation(line: 1717, column: 3, scope: !6982)
!6986 = !DILocation(line: 1718, column: 38, scope: !6968)
!6987 = !DILocation(line: 1718, column: 42, scope: !6968)
!6988 = !DILocation(line: 1718, column: 59, scope: !6968)
!6989 = !DILocation(line: 1719, column: 9, scope: !6968)
!6990 = !DILocation(line: 1719, column: 16, scope: !6968)
!6991 = !DILocation(line: 1718, column: 9, scope: !6968)
!6992 = !DILocation(line: 1718, column: 2, scope: !6968)
!6993 = !DILocation(line: 1720, column: 1, scope: !6968)
!6994 = distinct !DISubprogram(name: "of_count_phandle_with_args", scope: !3, file: !3, line: 1738, type: !6995, scopeLine: 1740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!6995 = !DISubroutineType(types: !6996)
!6996 = !{!205, !3605, !116, !116}
!6997 = !DILocalVariable(name: "np", arg: 1, scope: !6994, file: !3, line: 1738, type: !3605)
!6998 = !DILocation(line: 1738, column: 58, scope: !6994)
!6999 = !DILocalVariable(name: "list_name", arg: 2, scope: !6994, file: !3, line: 1738, type: !116)
!7000 = !DILocation(line: 1738, column: 74, scope: !6994)
!7001 = !DILocalVariable(name: "cells_name", arg: 3, scope: !6994, file: !3, line: 1739, type: !116)
!7002 = !DILocation(line: 1739, column: 17, scope: !6994)
!7003 = !DILocalVariable(name: "it", scope: !6994, file: !3, line: 1741, type: !6264)
!7004 = !DILocation(line: 1741, column: 29, scope: !6994)
!7005 = !DILocalVariable(name: "rc", scope: !6994, file: !3, line: 1742, type: !205)
!7006 = !DILocation(line: 1742, column: 6, scope: !6994)
!7007 = !DILocalVariable(name: "cur_index", scope: !6994, file: !3, line: 1742, type: !205)
!7008 = !DILocation(line: 1742, column: 10, scope: !6994)
!7009 = !DILocation(line: 1750, column: 7, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !6994, file: !3, line: 1750, column: 6)
!7011 = !DILocation(line: 1750, column: 6, scope: !6994)
!7012 = !DILocalVariable(name: "list", scope: !7013, file: !3, line: 1751, type: !4213)
!7013 = distinct !DILexicalBlock(scope: !7010, file: !3, line: 1750, column: 19)
!7014 = !DILocation(line: 1751, column: 17, scope: !7013)
!7015 = !DILocalVariable(name: "size", scope: !7013, file: !3, line: 1752, type: !205)
!7016 = !DILocation(line: 1752, column: 7, scope: !7013)
!7017 = !DILocation(line: 1754, column: 26, scope: !7013)
!7018 = !DILocation(line: 1754, column: 30, scope: !7013)
!7019 = !DILocation(line: 1754, column: 10, scope: !7013)
!7020 = !DILocation(line: 1754, column: 8, scope: !7013)
!7021 = !DILocation(line: 1755, column: 8, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7013, file: !3, line: 1755, column: 7)
!7023 = !DILocation(line: 1755, column: 7, scope: !7013)
!7024 = !DILocation(line: 1756, column: 4, scope: !7022)
!7025 = !DILocation(line: 1758, column: 10, scope: !7013)
!7026 = !DILocation(line: 1758, column: 15, scope: !7013)
!7027 = !DILocation(line: 1758, column: 3, scope: !7013)
!7028 = !DILocation(line: 1761, column: 37, scope: !6994)
!7029 = !DILocation(line: 1761, column: 41, scope: !6994)
!7030 = !DILocation(line: 1761, column: 52, scope: !6994)
!7031 = !DILocation(line: 1761, column: 7, scope: !6994)
!7032 = !DILocation(line: 1761, column: 5, scope: !6994)
!7033 = !DILocation(line: 1762, column: 6, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !6994, file: !3, line: 1762, column: 6)
!7035 = !DILocation(line: 1762, column: 6, scope: !6994)
!7036 = !DILocation(line: 1763, column: 10, scope: !7034)
!7037 = !DILocation(line: 1763, column: 3, scope: !7034)
!7038 = !DILocation(line: 1765, column: 2, scope: !6994)
!7039 = !DILocation(line: 1765, column: 15, scope: !6994)
!7040 = !DILocation(line: 1765, column: 13, scope: !6994)
!7041 = !DILocation(line: 1765, column: 46, scope: !6994)
!7042 = !DILocation(line: 1766, column: 13, scope: !6994)
!7043 = distinct !{!7043, !7038, !7044}
!7044 = !DILocation(line: 1766, column: 16, scope: !6994)
!7045 = !DILocation(line: 1768, column: 6, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !6994, file: !3, line: 1768, column: 6)
!7047 = !DILocation(line: 1768, column: 9, scope: !7046)
!7048 = !DILocation(line: 1768, column: 6, scope: !6994)
!7049 = !DILocation(line: 1769, column: 10, scope: !7046)
!7050 = !DILocation(line: 1769, column: 3, scope: !7046)
!7051 = !DILocation(line: 1771, column: 9, scope: !6994)
!7052 = !DILocation(line: 1771, column: 2, scope: !6994)
!7053 = !DILocation(line: 1772, column: 1, scope: !6994)
!7054 = distinct !DISubprogram(name: "__of_add_property", scope: !3, file: !3, line: 1778, type: !7055, scopeLine: 1779, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!7055 = !DISubroutineType(types: !7056)
!7056 = !{!205, !120, !3570}
!7057 = !DILocalVariable(name: "np", arg: 1, scope: !7054, file: !3, line: 1778, type: !120)
!7058 = !DILocation(line: 1778, column: 43, scope: !7054)
!7059 = !DILocalVariable(name: "prop", arg: 2, scope: !7054, file: !3, line: 1778, type: !3570)
!7060 = !DILocation(line: 1778, column: 64, scope: !7054)
!7061 = !DILocalVariable(name: "next", scope: !7054, file: !3, line: 1780, type: !7062)
!7062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3570, size: 64)
!7063 = !DILocation(line: 1780, column: 20, scope: !7054)
!7064 = !DILocation(line: 1782, column: 2, scope: !7054)
!7065 = !DILocation(line: 1782, column: 8, scope: !7054)
!7066 = !DILocation(line: 1782, column: 13, scope: !7054)
!7067 = !DILocation(line: 1783, column: 10, scope: !7054)
!7068 = !DILocation(line: 1783, column: 14, scope: !7054)
!7069 = !DILocation(line: 1783, column: 7, scope: !7054)
!7070 = !DILocation(line: 1784, column: 2, scope: !7054)
!7071 = !DILocation(line: 1784, column: 10, scope: !7054)
!7072 = !DILocation(line: 1784, column: 9, scope: !7054)
!7073 = !DILocation(line: 1785, column: 14, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7075, file: !3, line: 1785, column: 7)
!7075 = distinct !DILexicalBlock(scope: !7054, file: !3, line: 1784, column: 16)
!7076 = !DILocation(line: 1785, column: 20, scope: !7074)
!7077 = !DILocation(line: 1785, column: 28, scope: !7074)
!7078 = !DILocation(line: 1785, column: 27, scope: !7074)
!7079 = !DILocation(line: 1785, column: 35, scope: !7074)
!7080 = !DILocation(line: 1785, column: 7, scope: !7074)
!7081 = !DILocation(line: 1785, column: 41, scope: !7074)
!7082 = !DILocation(line: 1785, column: 7, scope: !7075)
!7083 = !DILocation(line: 1787, column: 4, scope: !7074)
!7084 = !DILocation(line: 1789, column: 13, scope: !7075)
!7085 = !DILocation(line: 1789, column: 12, scope: !7075)
!7086 = !DILocation(line: 1789, column: 20, scope: !7075)
!7087 = !DILocation(line: 1789, column: 8, scope: !7075)
!7088 = distinct !{!7088, !7070, !7089}
!7089 = !DILocation(line: 1790, column: 2, scope: !7054)
!7090 = !DILocation(line: 1791, column: 10, scope: !7054)
!7091 = !DILocation(line: 1791, column: 3, scope: !7054)
!7092 = !DILocation(line: 1791, column: 8, scope: !7054)
!7093 = !DILocation(line: 1793, column: 2, scope: !7054)
!7094 = !DILocation(line: 1794, column: 1, scope: !7054)
!7095 = distinct !DISubprogram(name: "of_add_property", scope: !3, file: !3, line: 1799, type: !7055, scopeLine: 1800, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!7096 = !DILocalVariable(name: "np", arg: 1, scope: !7095, file: !3, line: 1799, type: !120)
!7097 = !DILocation(line: 1799, column: 41, scope: !7095)
!7098 = !DILocalVariable(name: "prop", arg: 2, scope: !7095, file: !3, line: 1799, type: !3570)
!7099 = !DILocation(line: 1799, column: 62, scope: !7095)
!7100 = !DILocalVariable(name: "flags", scope: !7095, file: !3, line: 1801, type: !98)
!7101 = !DILocation(line: 1801, column: 16, scope: !7095)
!7102 = !DILocalVariable(name: "rc", scope: !7095, file: !3, line: 1802, type: !205)
!7103 = !DILocation(line: 1802, column: 6, scope: !7095)
!7104 = !DILocation(line: 1804, column: 2, scope: !7095)
!7105 = !DILocation(line: 1806, column: 2, scope: !7095)
!7106 = !DILocalVariable(name: "__dummy", scope: !7107, file: !3, line: 1806, type: !98)
!7107 = distinct !DILexicalBlock(scope: !7108, file: !3, line: 1806, column: 2)
!7108 = distinct !DILexicalBlock(scope: !7095, file: !3, line: 1806, column: 2)
!7109 = !DILocation(line: 1806, column: 2, scope: !7107)
!7110 = !DILocalVariable(name: "__dummy2", scope: !7107, file: !3, line: 1806, type: !98)
!7111 = !DILocation(line: 1806, column: 2, scope: !7108)
!7112 = !DILocation(line: 1806, column: 2, scope: !7113)
!7113 = distinct !DILexicalBlock(scope: !7108, file: !3, line: 1806, column: 2)
!7114 = !DILocation(line: 1806, column: 2, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7113, file: !3, line: 1806, column: 2)
!7116 = !DILocalVariable(name: "__dummy", scope: !7117, file: !3, line: 1806, type: !98)
!7117 = distinct !DILexicalBlock(scope: !7118, file: !3, line: 1806, column: 2)
!7118 = distinct !DILexicalBlock(scope: !7115, file: !3, line: 1806, column: 2)
!7119 = !DILocation(line: 1806, column: 2, scope: !7117)
!7120 = !DILocalVariable(name: "__dummy2", scope: !7117, file: !3, line: 1806, type: !98)
!7121 = !DILocation(line: 1806, column: 2, scope: !7118)
!7122 = !DILocation(line: 1806, column: 2, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7113, file: !3, line: 1806, column: 2)
!7124 = !{i32 -2142613585}
!7125 = !DILocation(line: 1806, column: 2, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7123, file: !3, line: 1806, column: 2)
!7127 = !DILocation(line: 1807, column: 25, scope: !7095)
!7128 = !DILocation(line: 1807, column: 29, scope: !7095)
!7129 = !DILocation(line: 1807, column: 7, scope: !7095)
!7130 = !DILocation(line: 1807, column: 5, scope: !7095)
!7131 = !DILocation(line: 1808, column: 2, scope: !7095)
!7132 = !DILocalVariable(name: "__dummy", scope: !7133, file: !3, line: 1808, type: !98)
!7133 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 1808, column: 2)
!7134 = distinct !DILexicalBlock(scope: !7095, file: !3, line: 1808, column: 2)
!7135 = !DILocation(line: 1808, column: 2, scope: !7133)
!7136 = !DILocalVariable(name: "__dummy2", scope: !7133, file: !3, line: 1808, type: !98)
!7137 = !DILocation(line: 1808, column: 2, scope: !7134)
!7138 = !DILocation(line: 1808, column: 2, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 1808, column: 2)
!7140 = !DILocation(line: 1808, column: 2, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 1808, column: 2)
!7142 = !DILocalVariable(name: "__dummy", scope: !7143, file: !3, line: 1808, type: !98)
!7143 = distinct !DILexicalBlock(scope: !7144, file: !3, line: 1808, column: 2)
!7144 = distinct !DILexicalBlock(scope: !7141, file: !3, line: 1808, column: 2)
!7145 = !DILocation(line: 1808, column: 2, scope: !7143)
!7146 = !DILocalVariable(name: "__dummy2", scope: !7143, file: !3, line: 1808, type: !98)
!7147 = !DILocation(line: 1808, column: 2, scope: !7144)
!7148 = !DILocation(line: 1808, column: 2, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 1808, column: 2)
!7150 = !{i32 -2142612742}
!7151 = !DILocation(line: 1808, column: 2, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 1808, column: 2)
!7153 = !DILocation(line: 1810, column: 7, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7095, file: !3, line: 1810, column: 6)
!7155 = !DILocation(line: 1810, column: 6, scope: !7095)
!7156 = !DILocation(line: 1811, column: 27, scope: !7154)
!7157 = !DILocation(line: 1811, column: 31, scope: !7154)
!7158 = !DILocation(line: 1811, column: 3, scope: !7154)
!7159 = !DILocation(line: 1813, column: 2, scope: !7095)
!7160 = !DILocation(line: 1815, column: 7, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7095, file: !3, line: 1815, column: 6)
!7162 = !DILocation(line: 1815, column: 6, scope: !7095)
!7163 = !DILocation(line: 1816, column: 48, scope: !7161)
!7164 = !DILocation(line: 1816, column: 52, scope: !7161)
!7165 = !DILocation(line: 1816, column: 3, scope: !7161)
!7166 = !DILocation(line: 1818, column: 9, scope: !7095)
!7167 = !DILocation(line: 1818, column: 2, scope: !7095)
!7168 = distinct !DISubprogram(name: "of_property_notify", scope: !107, file: !107, line: 53, type: !7169, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!7169 = !DISubroutineType(types: !7170)
!7170 = !{!205, !205, !120, !3570, !3570}
!7171 = !DILocalVariable(name: "action", arg: 1, scope: !7168, file: !107, line: 53, type: !205)
!7172 = !DILocation(line: 53, column: 42, scope: !7168)
!7173 = !DILocalVariable(name: "np", arg: 2, scope: !7168, file: !107, line: 53, type: !120)
!7174 = !DILocation(line: 53, column: 70, scope: !7168)
!7175 = !DILocalVariable(name: "prop", arg: 3, scope: !7168, file: !107, line: 54, type: !3570)
!7176 = !DILocation(line: 54, column: 27, scope: !7168)
!7177 = !DILocalVariable(name: "old_prop", arg: 4, scope: !7168, file: !107, line: 54, type: !3570)
!7178 = !DILocation(line: 54, column: 50, scope: !7168)
!7179 = !DILocation(line: 56, column: 2, scope: !7168)
!7180 = distinct !DISubprogram(name: "__of_remove_property", scope: !3, file: !3, line: 1821, type: !7055, scopeLine: 1822, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!7181 = !DILocalVariable(name: "np", arg: 1, scope: !7180, file: !3, line: 1821, type: !120)
!7182 = !DILocation(line: 1821, column: 46, scope: !7180)
!7183 = !DILocalVariable(name: "prop", arg: 2, scope: !7180, file: !3, line: 1821, type: !3570)
!7184 = !DILocation(line: 1821, column: 67, scope: !7180)
!7185 = !DILocalVariable(name: "next", scope: !7180, file: !3, line: 1823, type: !7062)
!7186 = !DILocation(line: 1823, column: 20, scope: !7180)
!7187 = !DILocation(line: 1825, column: 15, scope: !7188)
!7188 = distinct !DILexicalBlock(scope: !7180, file: !3, line: 1825, column: 2)
!7189 = !DILocation(line: 1825, column: 19, scope: !7188)
!7190 = !DILocation(line: 1825, column: 12, scope: !7188)
!7191 = !DILocation(line: 1825, column: 7, scope: !7188)
!7192 = !DILocation(line: 1825, column: 32, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7188, file: !3, line: 1825, column: 2)
!7194 = !DILocation(line: 1825, column: 31, scope: !7193)
!7195 = !DILocation(line: 1825, column: 2, scope: !7188)
!7196 = !DILocation(line: 1826, column: 8, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7198, file: !3, line: 1826, column: 7)
!7198 = distinct !DILexicalBlock(scope: !7193, file: !3, line: 1825, column: 61)
!7199 = !DILocation(line: 1826, column: 7, scope: !7197)
!7200 = !DILocation(line: 1826, column: 16, scope: !7197)
!7201 = !DILocation(line: 1826, column: 13, scope: !7197)
!7202 = !DILocation(line: 1826, column: 7, scope: !7198)
!7203 = !DILocation(line: 1827, column: 4, scope: !7197)
!7204 = !DILocation(line: 1828, column: 2, scope: !7198)
!7205 = !DILocation(line: 1825, column: 48, scope: !7193)
!7206 = !DILocation(line: 1825, column: 47, scope: !7193)
!7207 = !DILocation(line: 1825, column: 55, scope: !7193)
!7208 = !DILocation(line: 1825, column: 43, scope: !7193)
!7209 = !DILocation(line: 1825, column: 2, scope: !7193)
!7210 = distinct !{!7210, !7195, !7211}
!7211 = !DILocation(line: 1828, column: 2, scope: !7188)
!7212 = !DILocation(line: 1829, column: 7, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7180, file: !3, line: 1829, column: 6)
!7214 = !DILocation(line: 1829, column: 6, scope: !7213)
!7215 = !DILocation(line: 1829, column: 12, scope: !7213)
!7216 = !DILocation(line: 1829, column: 6, scope: !7180)
!7217 = !DILocation(line: 1830, column: 3, scope: !7213)
!7218 = !DILocation(line: 1833, column: 10, scope: !7180)
!7219 = !DILocation(line: 1833, column: 16, scope: !7180)
!7220 = !DILocation(line: 1833, column: 3, scope: !7180)
!7221 = !DILocation(line: 1833, column: 8, scope: !7180)
!7222 = !DILocation(line: 1834, column: 15, scope: !7180)
!7223 = !DILocation(line: 1834, column: 19, scope: !7180)
!7224 = !DILocation(line: 1834, column: 2, scope: !7180)
!7225 = !DILocation(line: 1834, column: 8, scope: !7180)
!7226 = !DILocation(line: 1834, column: 13, scope: !7180)
!7227 = !DILocation(line: 1835, column: 18, scope: !7180)
!7228 = !DILocation(line: 1835, column: 2, scope: !7180)
!7229 = !DILocation(line: 1835, column: 6, scope: !7180)
!7230 = !DILocation(line: 1835, column: 16, scope: !7180)
!7231 = !DILocation(line: 1837, column: 2, scope: !7180)
!7232 = !DILocation(line: 1838, column: 1, scope: !7180)
!7233 = distinct !DISubprogram(name: "of_remove_property", scope: !3, file: !3, line: 1848, type: !7055, scopeLine: 1849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!7234 = !DILocalVariable(name: "np", arg: 1, scope: !7233, file: !3, line: 1848, type: !120)
!7235 = !DILocation(line: 1848, column: 44, scope: !7233)
!7236 = !DILocalVariable(name: "prop", arg: 2, scope: !7233, file: !3, line: 1848, type: !3570)
!7237 = !DILocation(line: 1848, column: 65, scope: !7233)
!7238 = !DILocalVariable(name: "flags", scope: !7233, file: !3, line: 1850, type: !98)
!7239 = !DILocation(line: 1850, column: 16, scope: !7233)
!7240 = !DILocalVariable(name: "rc", scope: !7233, file: !3, line: 1851, type: !205)
!7241 = !DILocation(line: 1851, column: 6, scope: !7233)
!7242 = !DILocation(line: 1853, column: 7, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7233, file: !3, line: 1853, column: 6)
!7244 = !DILocation(line: 1853, column: 6, scope: !7233)
!7245 = !DILocation(line: 1854, column: 3, scope: !7243)
!7246 = !DILocation(line: 1856, column: 2, scope: !7233)
!7247 = !DILocation(line: 1858, column: 2, scope: !7233)
!7248 = !DILocalVariable(name: "__dummy", scope: !7249, file: !3, line: 1858, type: !98)
!7249 = distinct !DILexicalBlock(scope: !7250, file: !3, line: 1858, column: 2)
!7250 = distinct !DILexicalBlock(scope: !7233, file: !3, line: 1858, column: 2)
!7251 = !DILocation(line: 1858, column: 2, scope: !7249)
!7252 = !DILocalVariable(name: "__dummy2", scope: !7249, file: !3, line: 1858, type: !98)
!7253 = !DILocation(line: 1858, column: 2, scope: !7250)
!7254 = !DILocation(line: 1858, column: 2, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7250, file: !3, line: 1858, column: 2)
!7256 = !DILocation(line: 1858, column: 2, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7255, file: !3, line: 1858, column: 2)
!7258 = !DILocalVariable(name: "__dummy", scope: !7259, file: !3, line: 1858, type: !98)
!7259 = distinct !DILexicalBlock(scope: !7260, file: !3, line: 1858, column: 2)
!7260 = distinct !DILexicalBlock(scope: !7257, file: !3, line: 1858, column: 2)
!7261 = !DILocation(line: 1858, column: 2, scope: !7259)
!7262 = !DILocalVariable(name: "__dummy2", scope: !7259, file: !3, line: 1858, type: !98)
!7263 = !DILocation(line: 1858, column: 2, scope: !7260)
!7264 = !DILocation(line: 1858, column: 2, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7255, file: !3, line: 1858, column: 2)
!7266 = !{i32 -2142611883}
!7267 = !DILocation(line: 1858, column: 2, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 1858, column: 2)
!7269 = !DILocation(line: 1859, column: 28, scope: !7233)
!7270 = !DILocation(line: 1859, column: 32, scope: !7233)
!7271 = !DILocation(line: 1859, column: 7, scope: !7233)
!7272 = !DILocation(line: 1859, column: 5, scope: !7233)
!7273 = !DILocation(line: 1860, column: 2, scope: !7233)
!7274 = !DILocalVariable(name: "__dummy", scope: !7275, file: !3, line: 1860, type: !98)
!7275 = distinct !DILexicalBlock(scope: !7276, file: !3, line: 1860, column: 2)
!7276 = distinct !DILexicalBlock(scope: !7233, file: !3, line: 1860, column: 2)
!7277 = !DILocation(line: 1860, column: 2, scope: !7275)
!7278 = !DILocalVariable(name: "__dummy2", scope: !7275, file: !3, line: 1860, type: !98)
!7279 = !DILocation(line: 1860, column: 2, scope: !7276)
!7280 = !DILocation(line: 1860, column: 2, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7276, file: !3, line: 1860, column: 2)
!7282 = !DILocation(line: 1860, column: 2, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 1860, column: 2)
!7284 = !DILocalVariable(name: "__dummy", scope: !7285, file: !3, line: 1860, type: !98)
!7285 = distinct !DILexicalBlock(scope: !7286, file: !3, line: 1860, column: 2)
!7286 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 1860, column: 2)
!7287 = !DILocation(line: 1860, column: 2, scope: !7285)
!7288 = !DILocalVariable(name: "__dummy2", scope: !7285, file: !3, line: 1860, type: !98)
!7289 = !DILocation(line: 1860, column: 2, scope: !7286)
!7290 = !DILocation(line: 1860, column: 2, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 1860, column: 2)
!7292 = !{i32 -2142611040}
!7293 = !DILocation(line: 1860, column: 2, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7291, file: !3, line: 1860, column: 2)
!7295 = !DILocation(line: 1862, column: 7, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7233, file: !3, line: 1862, column: 6)
!7297 = !DILocation(line: 1862, column: 6, scope: !7233)
!7298 = !DILocation(line: 1863, column: 30, scope: !7296)
!7299 = !DILocation(line: 1863, column: 34, scope: !7296)
!7300 = !DILocation(line: 1863, column: 3, scope: !7296)
!7301 = !DILocation(line: 1865, column: 2, scope: !7233)
!7302 = !DILocation(line: 1867, column: 7, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7233, file: !3, line: 1867, column: 6)
!7304 = !DILocation(line: 1867, column: 6, scope: !7233)
!7305 = !DILocation(line: 1868, column: 51, scope: !7303)
!7306 = !DILocation(line: 1868, column: 55, scope: !7303)
!7307 = !DILocation(line: 1868, column: 3, scope: !7303)
!7308 = !DILocation(line: 1870, column: 9, scope: !7233)
!7309 = !DILocation(line: 1870, column: 2, scope: !7233)
!7310 = !DILocation(line: 1871, column: 1, scope: !7233)
!7311 = distinct !DISubprogram(name: "__of_update_property", scope: !3, file: !3, line: 1874, type: !7312, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!7312 = !DISubroutineType(types: !7313)
!7313 = !{!205, !120, !3570, !7062}
!7314 = !DILocalVariable(name: "np", arg: 1, scope: !7311, file: !3, line: 1874, type: !120)
!7315 = !DILocation(line: 1874, column: 46, scope: !7311)
!7316 = !DILocalVariable(name: "newprop", arg: 2, scope: !7311, file: !3, line: 1874, type: !3570)
!7317 = !DILocation(line: 1874, column: 67, scope: !7311)
!7318 = !DILocalVariable(name: "oldpropp", arg: 3, scope: !7311, file: !3, line: 1875, type: !7062)
!7319 = !DILocation(line: 1875, column: 21, scope: !7311)
!7320 = !DILocalVariable(name: "next", scope: !7311, file: !3, line: 1877, type: !7062)
!7321 = !DILocation(line: 1877, column: 20, scope: !7311)
!7322 = !DILocalVariable(name: "oldprop", scope: !7311, file: !3, line: 1877, type: !3570)
!7323 = !DILocation(line: 1877, column: 27, scope: !7311)
!7324 = !DILocation(line: 1879, column: 15, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7311, file: !3, line: 1879, column: 2)
!7326 = !DILocation(line: 1879, column: 19, scope: !7325)
!7327 = !DILocation(line: 1879, column: 12, scope: !7325)
!7328 = !DILocation(line: 1879, column: 7, scope: !7325)
!7329 = !DILocation(line: 1879, column: 32, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7325, file: !3, line: 1879, column: 2)
!7331 = !DILocation(line: 1879, column: 31, scope: !7330)
!7332 = !DILocation(line: 1879, column: 2, scope: !7325)
!7333 = !DILocation(line: 1880, column: 7, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7335, file: !3, line: 1880, column: 7)
!7335 = distinct !DILexicalBlock(scope: !7330, file: !3, line: 1879, column: 61)
!7336 = !DILocation(line: 1880, column: 49, scope: !7334)
!7337 = !DILocation(line: 1880, column: 7, scope: !7335)
!7338 = !DILocation(line: 1881, column: 4, scope: !7334)
!7339 = !DILocation(line: 1882, column: 2, scope: !7335)
!7340 = !DILocation(line: 1879, column: 48, scope: !7330)
!7341 = !DILocation(line: 1879, column: 47, scope: !7330)
!7342 = !DILocation(line: 1879, column: 55, scope: !7330)
!7343 = !DILocation(line: 1879, column: 43, scope: !7330)
!7344 = !DILocation(line: 1879, column: 2, scope: !7330)
!7345 = distinct !{!7345, !7332, !7346}
!7346 = !DILocation(line: 1882, column: 2, scope: !7325)
!7347 = !DILocation(line: 1883, column: 25, scope: !7311)
!7348 = !DILocation(line: 1883, column: 24, scope: !7311)
!7349 = !DILocation(line: 1883, column: 22, scope: !7311)
!7350 = !DILocation(line: 1883, column: 3, scope: !7311)
!7351 = !DILocation(line: 1883, column: 12, scope: !7311)
!7352 = !DILocation(line: 1885, column: 6, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7311, file: !3, line: 1885, column: 6)
!7354 = !DILocation(line: 1885, column: 6, scope: !7311)
!7355 = !DILocation(line: 1887, column: 19, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7353, file: !3, line: 1885, column: 15)
!7357 = !DILocation(line: 1887, column: 28, scope: !7356)
!7358 = !DILocation(line: 1887, column: 3, scope: !7356)
!7359 = !DILocation(line: 1887, column: 12, scope: !7356)
!7360 = !DILocation(line: 1887, column: 17, scope: !7356)
!7361 = !DILocation(line: 1888, column: 11, scope: !7356)
!7362 = !DILocation(line: 1888, column: 4, scope: !7356)
!7363 = !DILocation(line: 1888, column: 9, scope: !7356)
!7364 = !DILocation(line: 1889, column: 19, scope: !7356)
!7365 = !DILocation(line: 1889, column: 23, scope: !7356)
!7366 = !DILocation(line: 1889, column: 3, scope: !7356)
!7367 = !DILocation(line: 1889, column: 12, scope: !7356)
!7368 = !DILocation(line: 1889, column: 17, scope: !7356)
!7369 = !DILocation(line: 1890, column: 19, scope: !7356)
!7370 = !DILocation(line: 1890, column: 3, scope: !7356)
!7371 = !DILocation(line: 1890, column: 7, scope: !7356)
!7372 = !DILocation(line: 1890, column: 17, scope: !7356)
!7373 = !DILocation(line: 1891, column: 2, scope: !7356)
!7374 = !DILocation(line: 1893, column: 3, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7353, file: !3, line: 1891, column: 9)
!7376 = !DILocation(line: 1893, column: 12, scope: !7375)
!7377 = !DILocation(line: 1893, column: 17, scope: !7375)
!7378 = !DILocation(line: 1894, column: 11, scope: !7375)
!7379 = !DILocation(line: 1894, column: 4, scope: !7375)
!7380 = !DILocation(line: 1894, column: 9, scope: !7375)
!7381 = !DILocation(line: 1897, column: 2, scope: !7311)
!7382 = distinct !DISubprogram(name: "of_update_property", scope: !3, file: !3, line: 1909, type: !7055, scopeLine: 1910, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!7383 = !DILocalVariable(name: "np", arg: 1, scope: !7382, file: !3, line: 1909, type: !120)
!7384 = !DILocation(line: 1909, column: 44, scope: !7382)
!7385 = !DILocalVariable(name: "newprop", arg: 2, scope: !7382, file: !3, line: 1909, type: !3570)
!7386 = !DILocation(line: 1909, column: 65, scope: !7382)
!7387 = !DILocalVariable(name: "oldprop", scope: !7382, file: !3, line: 1911, type: !3570)
!7388 = !DILocation(line: 1911, column: 19, scope: !7382)
!7389 = !DILocalVariable(name: "flags", scope: !7382, file: !3, line: 1912, type: !98)
!7390 = !DILocation(line: 1912, column: 16, scope: !7382)
!7391 = !DILocalVariable(name: "rc", scope: !7382, file: !3, line: 1913, type: !205)
!7392 = !DILocation(line: 1913, column: 6, scope: !7382)
!7393 = !DILocation(line: 1915, column: 7, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7382, file: !3, line: 1915, column: 6)
!7395 = !DILocation(line: 1915, column: 16, scope: !7394)
!7396 = !DILocation(line: 1915, column: 6, scope: !7382)
!7397 = !DILocation(line: 1916, column: 3, scope: !7394)
!7398 = !DILocation(line: 1918, column: 2, scope: !7382)
!7399 = !DILocation(line: 1920, column: 2, scope: !7382)
!7400 = !DILocalVariable(name: "__dummy", scope: !7401, file: !3, line: 1920, type: !98)
!7401 = distinct !DILexicalBlock(scope: !7402, file: !3, line: 1920, column: 2)
!7402 = distinct !DILexicalBlock(scope: !7382, file: !3, line: 1920, column: 2)
!7403 = !DILocation(line: 1920, column: 2, scope: !7401)
!7404 = !DILocalVariable(name: "__dummy2", scope: !7401, file: !3, line: 1920, type: !98)
!7405 = !DILocation(line: 1920, column: 2, scope: !7402)
!7406 = !DILocation(line: 1920, column: 2, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7402, file: !3, line: 1920, column: 2)
!7408 = !DILocation(line: 1920, column: 2, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 1920, column: 2)
!7410 = !DILocalVariable(name: "__dummy", scope: !7411, file: !3, line: 1920, type: !98)
!7411 = distinct !DILexicalBlock(scope: !7412, file: !3, line: 1920, column: 2)
!7412 = distinct !DILexicalBlock(scope: !7409, file: !3, line: 1920, column: 2)
!7413 = !DILocation(line: 1920, column: 2, scope: !7411)
!7414 = !DILocalVariable(name: "__dummy2", scope: !7411, file: !3, line: 1920, type: !98)
!7415 = !DILocation(line: 1920, column: 2, scope: !7412)
!7416 = !DILocation(line: 1920, column: 2, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 1920, column: 2)
!7418 = !{i32 -2142610034}
!7419 = !DILocation(line: 1920, column: 2, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !7417, file: !3, line: 1920, column: 2)
!7421 = !DILocation(line: 1921, column: 28, scope: !7382)
!7422 = !DILocation(line: 1921, column: 32, scope: !7382)
!7423 = !DILocation(line: 1921, column: 7, scope: !7382)
!7424 = !DILocation(line: 1921, column: 5, scope: !7382)
!7425 = !DILocation(line: 1922, column: 2, scope: !7382)
!7426 = !DILocalVariable(name: "__dummy", scope: !7427, file: !3, line: 1922, type: !98)
!7427 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 1922, column: 2)
!7428 = distinct !DILexicalBlock(scope: !7382, file: !3, line: 1922, column: 2)
!7429 = !DILocation(line: 1922, column: 2, scope: !7427)
!7430 = !DILocalVariable(name: "__dummy2", scope: !7427, file: !3, line: 1922, type: !98)
!7431 = !DILocation(line: 1922, column: 2, scope: !7428)
!7432 = !DILocation(line: 1922, column: 2, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 1922, column: 2)
!7434 = !DILocation(line: 1922, column: 2, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7433, file: !3, line: 1922, column: 2)
!7436 = !DILocalVariable(name: "__dummy", scope: !7437, file: !3, line: 1922, type: !98)
!7437 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 1922, column: 2)
!7438 = distinct !DILexicalBlock(scope: !7435, file: !3, line: 1922, column: 2)
!7439 = !DILocation(line: 1922, column: 2, scope: !7437)
!7440 = !DILocalVariable(name: "__dummy2", scope: !7437, file: !3, line: 1922, type: !98)
!7441 = !DILocation(line: 1922, column: 2, scope: !7438)
!7442 = !DILocation(line: 1922, column: 2, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7433, file: !3, line: 1922, column: 2)
!7444 = !{i32 -2142609191}
!7445 = !DILocation(line: 1922, column: 2, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7443, file: !3, line: 1922, column: 2)
!7447 = !DILocation(line: 1924, column: 7, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7382, file: !3, line: 1924, column: 6)
!7449 = !DILocation(line: 1924, column: 6, scope: !7382)
!7450 = !DILocation(line: 1925, column: 30, scope: !7448)
!7451 = !DILocation(line: 1925, column: 34, scope: !7448)
!7452 = !DILocation(line: 1925, column: 43, scope: !7448)
!7453 = !DILocation(line: 1925, column: 3, scope: !7448)
!7454 = !DILocation(line: 1927, column: 2, scope: !7382)
!7455 = !DILocation(line: 1929, column: 7, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7382, file: !3, line: 1929, column: 6)
!7457 = !DILocation(line: 1929, column: 6, scope: !7382)
!7458 = !DILocation(line: 1930, column: 51, scope: !7456)
!7459 = !DILocation(line: 1930, column: 55, scope: !7456)
!7460 = !DILocation(line: 1930, column: 64, scope: !7456)
!7461 = !DILocation(line: 1930, column: 3, scope: !7456)
!7462 = !DILocation(line: 1932, column: 9, scope: !7382)
!7463 = !DILocation(line: 1932, column: 2, scope: !7382)
!7464 = !DILocation(line: 1933, column: 1, scope: !7382)
!7465 = distinct !DISubprogram(name: "of_alias_scan", scope: !3, file: !3, line: 1957, type: !7466, scopeLine: 1958, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!7466 = !DISubroutineType(types: !7467)
!7467 = !{null, !7468}
!7468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7469, size: 64)
!7469 = !DISubroutineType(types: !7470)
!7470 = !{!86, !363, !363}
!7471 = !DILocalVariable(name: "dt_alloc", arg: 1, scope: !7465, file: !3, line: 1957, type: !7468)
!7472 = !DILocation(line: 1957, column: 29, scope: !7465)
!7473 = !DILocalVariable(name: "pp", scope: !7465, file: !3, line: 1959, type: !3570)
!7474 = !DILocation(line: 1959, column: 19, scope: !7465)
!7475 = !DILocation(line: 1961, column: 15, scope: !7465)
!7476 = !DILocation(line: 1961, column: 13, scope: !7465)
!7477 = !DILocation(line: 1962, column: 14, scope: !7465)
!7478 = !DILocation(line: 1962, column: 12, scope: !7465)
!7479 = !DILocation(line: 1963, column: 6, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 1963, column: 6)
!7481 = !DILocation(line: 1963, column: 16, scope: !7480)
!7482 = !DILocation(line: 1963, column: 6, scope: !7465)
!7483 = !DILocation(line: 1964, column: 15, scope: !7480)
!7484 = !DILocation(line: 1964, column: 13, scope: !7480)
!7485 = !DILocation(line: 1964, column: 3, scope: !7480)
!7486 = !DILocation(line: 1966, column: 6, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 1966, column: 6)
!7488 = !DILocation(line: 1966, column: 6, scope: !7465)
!7489 = !DILocalVariable(name: "name", scope: !7490, file: !3, line: 1968, type: !116)
!7490 = distinct !DILexicalBlock(scope: !7487, file: !3, line: 1966, column: 17)
!7491 = !DILocation(line: 1968, column: 15, scope: !7490)
!7492 = !DILocation(line: 1970, column: 31, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7490, file: !3, line: 1970, column: 7)
!7494 = !DILocation(line: 1970, column: 7, scope: !7493)
!7495 = !DILocation(line: 1970, column: 7, scope: !7490)
!7496 = !DILocation(line: 1971, column: 28, scope: !7493)
!7497 = !DILocation(line: 1971, column: 4, scope: !7493)
!7498 = !DILocation(line: 1975, column: 7, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7490, file: !3, line: 1975, column: 7)
!7500 = !DILocation(line: 1975, column: 7, scope: !7490)
!7501 = !DILocation(line: 1976, column: 42, scope: !7499)
!7502 = !DILocation(line: 1976, column: 16, scope: !7499)
!7503 = !DILocation(line: 1976, column: 14, scope: !7499)
!7504 = !DILocation(line: 1976, column: 4, scope: !7499)
!7505 = !DILocation(line: 1977, column: 2, scope: !7490)
!7506 = !DILocation(line: 1979, column: 7, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 1979, column: 6)
!7508 = !DILocation(line: 1979, column: 6, scope: !7465)
!7509 = !DILocation(line: 1980, column: 3, scope: !7507)
!7510 = !DILocation(line: 1982, column: 2, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 1982, column: 2)
!7512 = !DILocation(line: 1982, column: 2, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7511, file: !3, line: 1982, column: 2)
!7514 = !DILocalVariable(name: "start", scope: !7515, file: !3, line: 1983, type: !116)
!7515 = distinct !DILexicalBlock(scope: !7513, file: !3, line: 1982, column: 44)
!7516 = !DILocation(line: 1983, column: 15, scope: !7515)
!7517 = !DILocation(line: 1983, column: 23, scope: !7515)
!7518 = !DILocation(line: 1983, column: 27, scope: !7515)
!7519 = !DILocalVariable(name: "end", scope: !7515, file: !3, line: 1984, type: !116)
!7520 = !DILocation(line: 1984, column: 15, scope: !7515)
!7521 = !DILocation(line: 1984, column: 21, scope: !7515)
!7522 = !DILocation(line: 1984, column: 36, scope: !7515)
!7523 = !DILocation(line: 1984, column: 29, scope: !7515)
!7524 = !DILocation(line: 1984, column: 27, scope: !7515)
!7525 = !DILocalVariable(name: "np", scope: !7515, file: !3, line: 1985, type: !120)
!7526 = !DILocation(line: 1985, column: 23, scope: !7515)
!7527 = !DILocalVariable(name: "ap", scope: !7515, file: !3, line: 1986, type: !105)
!7528 = !DILocation(line: 1986, column: 22, scope: !7515)
!7529 = !DILocalVariable(name: "id", scope: !7515, file: !3, line: 1987, type: !205)
!7530 = !DILocation(line: 1987, column: 7, scope: !7515)
!7531 = !DILocalVariable(name: "len", scope: !7515, file: !3, line: 1987, type: !205)
!7532 = !DILocation(line: 1987, column: 11, scope: !7515)
!7533 = !DILocation(line: 1990, column: 15, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7515, file: !3, line: 1990, column: 7)
!7535 = !DILocation(line: 1990, column: 19, scope: !7534)
!7536 = !DILocation(line: 1990, column: 8, scope: !7534)
!7537 = !DILocation(line: 1990, column: 33, scope: !7534)
!7538 = !DILocation(line: 1991, column: 15, scope: !7534)
!7539 = !DILocation(line: 1991, column: 19, scope: !7534)
!7540 = !DILocation(line: 1991, column: 8, scope: !7534)
!7541 = !DILocation(line: 1991, column: 36, scope: !7534)
!7542 = !DILocation(line: 1992, column: 15, scope: !7534)
!7543 = !DILocation(line: 1992, column: 19, scope: !7534)
!7544 = !DILocation(line: 1992, column: 8, scope: !7534)
!7545 = !DILocation(line: 1990, column: 7, scope: !7515)
!7546 = !DILocation(line: 1993, column: 4, scope: !7534)
!7547 = !DILocation(line: 1995, column: 29, scope: !7515)
!7548 = !DILocation(line: 1995, column: 33, scope: !7515)
!7549 = !DILocation(line: 1995, column: 8, scope: !7515)
!7550 = !DILocation(line: 1995, column: 6, scope: !7515)
!7551 = !DILocation(line: 1996, column: 8, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7515, file: !3, line: 1996, column: 7)
!7553 = !DILocation(line: 1996, column: 7, scope: !7515)
!7554 = !DILocation(line: 1997, column: 4, scope: !7552)
!7555 = !DILocation(line: 2001, column: 3, scope: !7515)
!7556 = !DILocation(line: 2001, column: 20, scope: !7515)
!7557 = !DILocation(line: 2001, column: 23, scope: !7515)
!7558 = !DILocation(line: 2001, column: 18, scope: !7515)
!7559 = !DILocation(line: 2001, column: 10, scope: !7515)
!7560 = !DILocation(line: 2001, column: 28, scope: !7515)
!7561 = !DILocation(line: 2001, column: 31, scope: !7515)
!7562 = !DILocation(line: 2001, column: 37, scope: !7515)
!7563 = !DILocation(line: 2001, column: 35, scope: !7515)
!7564 = !DILocation(line: 0, scope: !7515)
!7565 = !DILocation(line: 2002, column: 7, scope: !7515)
!7566 = distinct !{!7566, !7555, !7565}
!7567 = !DILocation(line: 2003, column: 9, scope: !7515)
!7568 = !DILocation(line: 2003, column: 15, scope: !7515)
!7569 = !DILocation(line: 2003, column: 13, scope: !7515)
!7570 = !DILocation(line: 2003, column: 7, scope: !7515)
!7571 = !DILocation(line: 2005, column: 17, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7515, file: !3, line: 2005, column: 7)
!7573 = !DILocation(line: 2005, column: 7, scope: !7572)
!7574 = !DILocation(line: 2005, column: 31, scope: !7572)
!7575 = !DILocation(line: 2005, column: 7, scope: !7515)
!7576 = !DILocation(line: 2006, column: 4, scope: !7572)
!7577 = !DILocation(line: 2009, column: 8, scope: !7515)
!7578 = !DILocation(line: 2009, column: 31, scope: !7515)
!7579 = !DILocation(line: 2009, column: 29, scope: !7515)
!7580 = !DILocation(line: 2009, column: 35, scope: !7515)
!7581 = !DILocation(line: 2009, column: 6, scope: !7515)
!7582 = !DILocation(line: 2010, column: 8, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7515, file: !3, line: 2010, column: 7)
!7584 = !DILocation(line: 2010, column: 7, scope: !7515)
!7585 = !DILocation(line: 2011, column: 4, scope: !7583)
!7586 = !DILocation(line: 2012, column: 10, scope: !7515)
!7587 = !DILocation(line: 2012, column: 3, scope: !7515)
!7588 = !DILocation(line: 2012, column: 31, scope: !7515)
!7589 = !DILocation(line: 2012, column: 29, scope: !7515)
!7590 = !DILocation(line: 2012, column: 35, scope: !7515)
!7591 = !DILocation(line: 2013, column: 15, scope: !7515)
!7592 = !DILocation(line: 2013, column: 3, scope: !7515)
!7593 = !DILocation(line: 2013, column: 7, scope: !7515)
!7594 = !DILocation(line: 2013, column: 13, scope: !7515)
!7595 = !DILocation(line: 2014, column: 16, scope: !7515)
!7596 = !DILocation(line: 2014, column: 20, scope: !7515)
!7597 = !DILocation(line: 2014, column: 24, scope: !7515)
!7598 = !DILocation(line: 2014, column: 28, scope: !7515)
!7599 = !DILocation(line: 2014, column: 35, scope: !7515)
!7600 = !DILocation(line: 2014, column: 3, scope: !7515)
!7601 = !DILocation(line: 2015, column: 2, scope: !7515)
!7602 = distinct !{!7602, !7510, !7603}
!7603 = !DILocation(line: 2015, column: 2, scope: !7511)
!7604 = !DILocation(line: 2016, column: 1, scope: !7465)
!7605 = distinct !DISubprogram(name: "isdigit", scope: !7606, file: !7606, line: 26, type: !2835, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!7606 = !DIFile(filename: "./include/linux/ctype.h", directory: "/home/lizy2001/genbc/linux")
!7607 = !DILocalVariable(name: "c", arg: 1, scope: !7605, file: !7606, line: 26, type: !205)
!7608 = !DILocation(line: 26, column: 31, scope: !7605)
!7609 = !DILocation(line: 28, column: 16, scope: !7605)
!7610 = !DILocation(line: 28, column: 13, scope: !7605)
!7611 = !DILocation(line: 28, column: 18, scope: !7605)
!7612 = !DILocation(line: 28, column: 21, scope: !7605)
!7613 = !DILocation(line: 28, column: 23, scope: !7605)
!7614 = !DILocation(line: 0, scope: !7605)
!7615 = !DILocation(line: 28, column: 2, scope: !7605)
!7616 = distinct !DISubprogram(name: "of_alias_add", scope: !3, file: !3, line: 1935, type: !7617, scopeLine: 1937, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!7617 = !DISubroutineType(types: !7618)
!7618 = !{null, !105, !120, !205, !116, !205}
!7619 = !DILocalVariable(name: "ap", arg: 1, scope: !7616, file: !3, line: 1935, type: !105)
!7620 = !DILocation(line: 1935, column: 45, scope: !7616)
!7621 = !DILocalVariable(name: "np", arg: 2, scope: !7616, file: !3, line: 1935, type: !120)
!7622 = !DILocation(line: 1935, column: 69, scope: !7616)
!7623 = !DILocalVariable(name: "id", arg: 3, scope: !7616, file: !3, line: 1936, type: !205)
!7624 = !DILocation(line: 1936, column: 9, scope: !7616)
!7625 = !DILocalVariable(name: "stem", arg: 4, scope: !7616, file: !3, line: 1936, type: !116)
!7626 = !DILocation(line: 1936, column: 25, scope: !7616)
!7627 = !DILocalVariable(name: "stem_len", arg: 5, scope: !7616, file: !3, line: 1936, type: !205)
!7628 = !DILocation(line: 1936, column: 35, scope: !7616)
!7629 = !DILocation(line: 1938, column: 11, scope: !7616)
!7630 = !DILocation(line: 1938, column: 2, scope: !7616)
!7631 = !DILocation(line: 1938, column: 6, scope: !7616)
!7632 = !DILocation(line: 1938, column: 9, scope: !7616)
!7633 = !DILocation(line: 1939, column: 11, scope: !7616)
!7634 = !DILocation(line: 1939, column: 2, scope: !7616)
!7635 = !DILocation(line: 1939, column: 6, scope: !7616)
!7636 = !DILocation(line: 1939, column: 9, scope: !7616)
!7637 = !DILocation(line: 1940, column: 10, scope: !7616)
!7638 = !DILocation(line: 1940, column: 14, scope: !7616)
!7639 = !DILocation(line: 1940, column: 20, scope: !7616)
!7640 = !DILocation(line: 1940, column: 26, scope: !7616)
!7641 = !DILocation(line: 1940, column: 2, scope: !7616)
!7642 = !DILocation(line: 1941, column: 2, scope: !7616)
!7643 = !DILocation(line: 1941, column: 6, scope: !7616)
!7644 = !DILocation(line: 1941, column: 11, scope: !7616)
!7645 = !DILocation(line: 1941, column: 21, scope: !7616)
!7646 = !DILocation(line: 1942, column: 17, scope: !7616)
!7647 = !DILocation(line: 1942, column: 21, scope: !7616)
!7648 = !DILocation(line: 1942, column: 2, scope: !7616)
!7649 = !DILocation(line: 1943, column: 2, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7651, file: !3, line: 1943, column: 2)
!7651 = distinct !DILexicalBlock(scope: !7616, file: !3, line: 1943, column: 2)
!7652 = !DILocation(line: 1943, column: 2, scope: !7651)
!7653 = !DILocation(line: 1945, column: 1, scope: !7616)
!7654 = distinct !DISubprogram(name: "of_alias_get_id", scope: !3, file: !3, line: 2026, type: !7655, scopeLine: 2027, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!7655 = !DISubroutineType(types: !7656)
!7656 = !{!205, !120, !116}
!7657 = !DILocalVariable(name: "np", arg: 1, scope: !7654, file: !3, line: 2026, type: !120)
!7658 = !DILocation(line: 2026, column: 41, scope: !7654)
!7659 = !DILocalVariable(name: "stem", arg: 2, scope: !7654, file: !3, line: 2026, type: !116)
!7660 = !DILocation(line: 2026, column: 57, scope: !7654)
!7661 = !DILocalVariable(name: "app", scope: !7654, file: !3, line: 2028, type: !105)
!7662 = !DILocation(line: 2028, column: 21, scope: !7654)
!7663 = !DILocalVariable(name: "id", scope: !7654, file: !3, line: 2029, type: !205)
!7664 = !DILocation(line: 2029, column: 6, scope: !7654)
!7665 = !DILocation(line: 2031, column: 2, scope: !7654)
!7666 = !DILocalVariable(name: "__mptr", scope: !7667, file: !3, line: 2032, type: !86)
!7667 = distinct !DILexicalBlock(scope: !7668, file: !3, line: 2032, column: 2)
!7668 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 2032, column: 2)
!7669 = !DILocation(line: 2032, column: 2, scope: !7667)
!7670 = !DILocation(line: 2032, column: 2, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7667, file: !3, line: 2032, column: 2)
!7672 = !DILocation(line: 2032, column: 2, scope: !7668)
!7673 = !DILocation(line: 2032, column: 2, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7668, file: !3, line: 2032, column: 2)
!7675 = !DILocation(line: 2033, column: 14, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7677, file: !3, line: 2033, column: 7)
!7677 = distinct !DILexicalBlock(scope: !7674, file: !3, line: 2032, column: 50)
!7678 = !DILocation(line: 2033, column: 19, scope: !7676)
!7679 = !DILocation(line: 2033, column: 25, scope: !7676)
!7680 = !DILocation(line: 2033, column: 7, scope: !7676)
!7681 = !DILocation(line: 2033, column: 31, scope: !7676)
!7682 = !DILocation(line: 2033, column: 7, scope: !7677)
!7683 = !DILocation(line: 2034, column: 4, scope: !7676)
!7684 = !DILocation(line: 2036, column: 7, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7677, file: !3, line: 2036, column: 7)
!7686 = !DILocation(line: 2036, column: 13, scope: !7685)
!7687 = !DILocation(line: 2036, column: 18, scope: !7685)
!7688 = !DILocation(line: 2036, column: 10, scope: !7685)
!7689 = !DILocation(line: 2036, column: 7, scope: !7677)
!7690 = !DILocation(line: 2037, column: 9, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7685, file: !3, line: 2036, column: 22)
!7692 = !DILocation(line: 2037, column: 14, scope: !7691)
!7693 = !DILocation(line: 2037, column: 7, scope: !7691)
!7694 = !DILocation(line: 2038, column: 4, scope: !7691)
!7695 = !DILocation(line: 2040, column: 2, scope: !7677)
!7696 = !DILocalVariable(name: "__mptr", scope: !7697, file: !3, line: 2032, type: !86)
!7697 = distinct !DILexicalBlock(scope: !7674, file: !3, line: 2032, column: 2)
!7698 = !DILocation(line: 2032, column: 2, scope: !7697)
!7699 = !DILocation(line: 2032, column: 2, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 2032, column: 2)
!7701 = distinct !{!7701, !7672, !7702}
!7702 = !DILocation(line: 2040, column: 2, scope: !7668)
!7703 = !DILocation(line: 2041, column: 2, scope: !7654)
!7704 = !DILocation(line: 2043, column: 9, scope: !7654)
!7705 = !DILocation(line: 2043, column: 2, scope: !7654)
!7706 = distinct !DISubprogram(name: "of_alias_get_alias_list", scope: !3, file: !3, line: 2060, type: !7707, scopeLine: 2063, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!7707 = !DISubroutineType(types: !7708)
!7708 = !{!205, !3237, !116, !3588, !7}
!7709 = !DILocalVariable(name: "matches", arg: 1, scope: !7706, file: !3, line: 2060, type: !3237)
!7710 = !DILocation(line: 2060, column: 56, scope: !7706)
!7711 = !DILocalVariable(name: "stem", arg: 2, scope: !7706, file: !3, line: 2061, type: !116)
!7712 = !DILocation(line: 2061, column: 21, scope: !7706)
!7713 = !DILocalVariable(name: "bitmap", arg: 3, scope: !7706, file: !3, line: 2061, type: !3588)
!7714 = !DILocation(line: 2061, column: 42, scope: !7706)
!7715 = !DILocalVariable(name: "nbits", arg: 4, scope: !7706, file: !3, line: 2062, type: !7)
!7716 = !DILocation(line: 2062, column: 22, scope: !7706)
!7717 = !DILocalVariable(name: "app", scope: !7706, file: !3, line: 2064, type: !105)
!7718 = !DILocation(line: 2064, column: 21, scope: !7706)
!7719 = !DILocalVariable(name: "ret", scope: !7706, file: !3, line: 2065, type: !205)
!7720 = !DILocation(line: 2065, column: 6, scope: !7706)
!7721 = !DILocation(line: 2068, column: 14, scope: !7706)
!7722 = !DILocation(line: 2068, column: 22, scope: !7706)
!7723 = !DILocation(line: 2068, column: 2, scope: !7706)
!7724 = !DILocation(line: 2070, column: 2, scope: !7706)
!7725 = !DILocation(line: 2071, column: 2, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7727, file: !3, line: 2071, column: 2)
!7727 = distinct !DILexicalBlock(scope: !7706, file: !3, line: 2071, column: 2)
!7728 = !DILocation(line: 2071, column: 2, scope: !7727)
!7729 = !DILocalVariable(name: "__mptr", scope: !7730, file: !3, line: 2072, type: !86)
!7730 = distinct !DILexicalBlock(scope: !7731, file: !3, line: 2072, column: 2)
!7731 = distinct !DILexicalBlock(scope: !7706, file: !3, line: 2072, column: 2)
!7732 = !DILocation(line: 2072, column: 2, scope: !7730)
!7733 = !DILocation(line: 2072, column: 2, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7730, file: !3, line: 2072, column: 2)
!7735 = !DILocation(line: 2072, column: 2, scope: !7731)
!7736 = !DILocation(line: 2072, column: 2, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7731, file: !3, line: 2072, column: 2)
!7738 = !DILocation(line: 2073, column: 3, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7740, file: !3, line: 2073, column: 3)
!7740 = distinct !DILexicalBlock(scope: !7741, file: !3, line: 2073, column: 3)
!7741 = distinct !DILexicalBlock(scope: !7737, file: !3, line: 2072, column: 50)
!7742 = !DILocation(line: 2073, column: 3, scope: !7740)
!7743 = !DILocation(line: 2076, column: 14, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7741, file: !3, line: 2076, column: 7)
!7745 = !DILocation(line: 2076, column: 19, scope: !7744)
!7746 = !DILocation(line: 2076, column: 25, scope: !7744)
!7747 = !DILocation(line: 2076, column: 7, scope: !7744)
!7748 = !DILocation(line: 2076, column: 31, scope: !7744)
!7749 = !DILocation(line: 2076, column: 7, scope: !7741)
!7750 = !DILocation(line: 2077, column: 4, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7752, file: !3, line: 2077, column: 4)
!7752 = distinct !DILexicalBlock(scope: !7753, file: !3, line: 2077, column: 4)
!7753 = distinct !DILexicalBlock(scope: !7744, file: !3, line: 2076, column: 37)
!7754 = !DILocation(line: 2077, column: 4, scope: !7752)
!7755 = !DILocation(line: 2079, column: 4, scope: !7753)
!7756 = !DILocation(line: 2082, column: 21, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7741, file: !3, line: 2082, column: 7)
!7758 = !DILocation(line: 2082, column: 30, scope: !7757)
!7759 = !DILocation(line: 2082, column: 35, scope: !7757)
!7760 = !DILocation(line: 2082, column: 7, scope: !7757)
!7761 = !DILocation(line: 2082, column: 7, scope: !7741)
!7762 = !DILocation(line: 2083, column: 4, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7764, file: !3, line: 2083, column: 4)
!7764 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 2083, column: 4)
!7765 = distinct !DILexicalBlock(scope: !7757, file: !3, line: 2082, column: 40)
!7766 = !DILocation(line: 2083, column: 4, scope: !7764)
!7767 = !DILocation(line: 2085, column: 8, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 2085, column: 8)
!7769 = !DILocation(line: 2085, column: 13, scope: !7768)
!7770 = !DILocation(line: 2085, column: 19, scope: !7768)
!7771 = !DILocation(line: 2085, column: 16, scope: !7768)
!7772 = !DILocation(line: 2085, column: 8, scope: !7765)
!7773 = !DILocation(line: 2086, column: 5, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7768, file: !3, line: 2085, column: 26)
!7775 = !DILocation(line: 2088, column: 9, scope: !7774)
!7776 = !DILocation(line: 2089, column: 4, scope: !7774)
!7777 = !DILocation(line: 2090, column: 13, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7768, file: !3, line: 2089, column: 11)
!7779 = !DILocation(line: 2090, column: 18, scope: !7778)
!7780 = !DILocation(line: 2090, column: 22, scope: !7778)
!7781 = !DILocation(line: 2090, column: 5, scope: !7778)
!7782 = !DILocation(line: 2092, column: 3, scope: !7765)
!7783 = !DILocation(line: 2093, column: 2, scope: !7741)
!7784 = !DILocalVariable(name: "__mptr", scope: !7785, file: !3, line: 2072, type: !86)
!7785 = distinct !DILexicalBlock(scope: !7737, file: !3, line: 2072, column: 2)
!7786 = !DILocation(line: 2072, column: 2, scope: !7785)
!7787 = !DILocation(line: 2072, column: 2, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7785, file: !3, line: 2072, column: 2)
!7789 = distinct !{!7789, !7735, !7790}
!7790 = !DILocation(line: 2093, column: 2, scope: !7731)
!7791 = !DILocation(line: 2094, column: 2, scope: !7706)
!7792 = !DILocation(line: 2096, column: 9, scope: !7706)
!7793 = !DILocation(line: 2096, column: 2, scope: !7706)
!7794 = distinct !DISubprogram(name: "bitmap_zero", scope: !7795, file: !7795, line: 235, type: !7796, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!7795 = !DIFile(filename: "./include/linux/bitmap.h", directory: "/home/lizy2001/genbc/linux")
!7796 = !DISubroutineType(types: !7797)
!7797 = !{null, !3588, !7}
!7798 = !DILocalVariable(name: "dst", arg: 1, scope: !7794, file: !7795, line: 235, type: !3588)
!7799 = !DILocation(line: 235, column: 47, scope: !7794)
!7800 = !DILocalVariable(name: "nbits", arg: 2, scope: !7794, file: !7795, line: 235, type: !7)
!7801 = !DILocation(line: 235, column: 65, scope: !7794)
!7802 = !DILocalVariable(name: "len", scope: !7794, file: !7795, line: 237, type: !7)
!7803 = !DILocation(line: 237, column: 15, scope: !7794)
!7804 = !DILocation(line: 237, column: 21, scope: !7794)
!7805 = !DILocation(line: 237, column: 42, scope: !7794)
!7806 = !DILocation(line: 238, column: 9, scope: !7794)
!7807 = !DILocation(line: 238, column: 2, scope: !7794)
!7808 = !DILocation(line: 238, column: 17, scope: !7794)
!7809 = !DILocation(line: 239, column: 1, scope: !7794)
!7810 = distinct !DISubprogram(name: "set_bit", scope: !7811, file: !7811, line: 26, type: !7812, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!7811 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!7812 = !DISubroutineType(types: !7813)
!7813 = !{null, !256, !7814}
!7814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7815, size: 64)
!7815 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !98)
!7816 = !DILocalVariable(name: "nr", arg: 1, scope: !7817, file: !7818, line: 52, type: !256)
!7817 = distinct !DISubprogram(name: "arch_set_bit", scope: !7818, file: !7818, line: 52, type: !7812, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!7818 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!7819 = !DILocation(line: 52, column: 19, scope: !7817, inlinedAt: !7820)
!7820 = distinct !DILocation(line: 29, column: 2, scope: !7810)
!7821 = !DILocalVariable(name: "addr", arg: 2, scope: !7817, file: !7818, line: 52, type: !7814)
!7822 = !DILocation(line: 52, column: 47, scope: !7817, inlinedAt: !7820)
!7823 = !DILocalVariable(name: "v", arg: 1, scope: !7824, file: !7825, line: 84, type: !7828)
!7824 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !7825, file: !7825, line: 84, type: !7826, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!7825 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!7826 = !DISubroutineType(types: !7827)
!7827 = !{null, !7828, !268}
!7828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7829, size: 64)
!7829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7830)
!7830 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!7831 = !DILocation(line: 84, column: 74, scope: !7824, inlinedAt: !7832)
!7832 = distinct !DILocation(line: 28, column: 2, scope: !7810)
!7833 = !DILocalVariable(name: "size", arg: 2, scope: !7824, file: !7825, line: 84, type: !268)
!7834 = !DILocation(line: 84, column: 84, scope: !7824, inlinedAt: !7832)
!7835 = !DILocalVariable(name: "nr", arg: 1, scope: !7810, file: !7811, line: 26, type: !256)
!7836 = !DILocation(line: 26, column: 33, scope: !7810)
!7837 = !DILocalVariable(name: "addr", arg: 2, scope: !7810, file: !7811, line: 26, type: !7814)
!7838 = !DILocation(line: 26, column: 61, scope: !7810)
!7839 = !DILocation(line: 28, column: 26, scope: !7810)
!7840 = !DILocation(line: 28, column: 33, scope: !7810)
!7841 = !DILocation(line: 28, column: 31, scope: !7810)
!7842 = !DILocation(line: 86, column: 20, scope: !7824, inlinedAt: !7832)
!7843 = !DILocation(line: 86, column: 23, scope: !7824, inlinedAt: !7832)
!7844 = !DILocation(line: 86, column: 2, scope: !7824, inlinedAt: !7832)
!7845 = !DILocation(line: 87, column: 2, scope: !7824, inlinedAt: !7832)
!7846 = !DILocation(line: 29, column: 15, scope: !7810)
!7847 = !DILocation(line: 29, column: 19, scope: !7810)
!7848 = !DILocation(line: 54, column: 27, scope: !7849, inlinedAt: !7820)
!7849 = distinct !DILexicalBlock(scope: !7817, file: !7818, line: 54, column: 6)
!7850 = !DILocation(line: 54, column: 6, scope: !7849, inlinedAt: !7820)
!7851 = !DILocation(line: 54, column: 6, scope: !7817, inlinedAt: !7820)
!7852 = !DILocation(line: 56, column: 6, scope: !7853, inlinedAt: !7820)
!7853 = distinct !DILexicalBlock(scope: !7849, file: !7818, line: 54, column: 32)
!7854 = !DILocation(line: 57, column: 12, scope: !7853, inlinedAt: !7820)
!7855 = !DILocation(line: 55, column: 3, scope: !7853, inlinedAt: !7820)
!7856 = !{i32 -2147183110}
!7857 = !DILocation(line: 59, column: 2, scope: !7853, inlinedAt: !7820)
!7858 = !DILocation(line: 61, column: 8, scope: !7859, inlinedAt: !7820)
!7859 = distinct !DILexicalBlock(scope: !7849, file: !7818, line: 59, column: 9)
!7860 = !DILocation(line: 61, column: 32, scope: !7859, inlinedAt: !7820)
!7861 = !DILocation(line: 60, column: 3, scope: !7859, inlinedAt: !7820)
!7862 = !{i32 -2147182978}
!7863 = !DILocation(line: 30, column: 1, scope: !7810)
!7864 = distinct !DISubprogram(name: "of_alias_get_highest_id", scope: !3, file: !3, line: 2107, type: !4760, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!7865 = !DILocalVariable(name: "stem", arg: 1, scope: !7864, file: !3, line: 2107, type: !116)
!7866 = !DILocation(line: 2107, column: 41, scope: !7864)
!7867 = !DILocalVariable(name: "app", scope: !7864, file: !3, line: 2109, type: !105)
!7868 = !DILocation(line: 2109, column: 21, scope: !7864)
!7869 = !DILocalVariable(name: "id", scope: !7864, file: !3, line: 2110, type: !205)
!7870 = !DILocation(line: 2110, column: 6, scope: !7864)
!7871 = !DILocation(line: 2112, column: 2, scope: !7864)
!7872 = !DILocalVariable(name: "__mptr", scope: !7873, file: !3, line: 2113, type: !86)
!7873 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 2113, column: 2)
!7874 = distinct !DILexicalBlock(scope: !7864, file: !3, line: 2113, column: 2)
!7875 = !DILocation(line: 2113, column: 2, scope: !7873)
!7876 = !DILocation(line: 2113, column: 2, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7873, file: !3, line: 2113, column: 2)
!7878 = !DILocation(line: 2113, column: 2, scope: !7874)
!7879 = !DILocation(line: 2113, column: 2, scope: !7880)
!7880 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 2113, column: 2)
!7881 = !DILocation(line: 2114, column: 14, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7883, file: !3, line: 2114, column: 7)
!7883 = distinct !DILexicalBlock(scope: !7880, file: !3, line: 2113, column: 50)
!7884 = !DILocation(line: 2114, column: 19, scope: !7882)
!7885 = !DILocation(line: 2114, column: 25, scope: !7882)
!7886 = !DILocation(line: 2114, column: 7, scope: !7882)
!7887 = !DILocation(line: 2114, column: 31, scope: !7882)
!7888 = !DILocation(line: 2114, column: 7, scope: !7883)
!7889 = !DILocation(line: 2115, column: 4, scope: !7882)
!7890 = !DILocation(line: 2117, column: 7, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7883, file: !3, line: 2117, column: 7)
!7892 = !DILocation(line: 2117, column: 12, scope: !7891)
!7893 = !DILocation(line: 2117, column: 17, scope: !7891)
!7894 = !DILocation(line: 2117, column: 15, scope: !7891)
!7895 = !DILocation(line: 2117, column: 7, scope: !7883)
!7896 = !DILocation(line: 2118, column: 9, scope: !7891)
!7897 = !DILocation(line: 2118, column: 14, scope: !7891)
!7898 = !DILocation(line: 2118, column: 7, scope: !7891)
!7899 = !DILocation(line: 2118, column: 4, scope: !7891)
!7900 = !DILocation(line: 2119, column: 2, scope: !7883)
!7901 = !DILocalVariable(name: "__mptr", scope: !7902, file: !3, line: 2113, type: !86)
!7902 = distinct !DILexicalBlock(scope: !7880, file: !3, line: 2113, column: 2)
!7903 = !DILocation(line: 2113, column: 2, scope: !7902)
!7904 = !DILocation(line: 2113, column: 2, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7902, file: !3, line: 2113, column: 2)
!7906 = distinct !{!7906, !7878, !7907}
!7907 = !DILocation(line: 2119, column: 2, scope: !7874)
!7908 = !DILocation(line: 2120, column: 2, scope: !7864)
!7909 = !DILocation(line: 2122, column: 9, scope: !7864)
!7910 = !DILocation(line: 2122, column: 2, scope: !7864)
!7911 = distinct !DISubprogram(name: "of_console_check", scope: !3, file: !3, line: 2136, type: !7912, scopeLine: 2137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!7912 = !DISubroutineType(types: !7913)
!7913 = !{!151, !120, !221, !205}
!7914 = !DILocalVariable(name: "dn", arg: 1, scope: !7911, file: !3, line: 2136, type: !120)
!7915 = !DILocation(line: 2136, column: 43, scope: !7911)
!7916 = !DILocalVariable(name: "name", arg: 2, scope: !7911, file: !3, line: 2136, type: !221)
!7917 = !DILocation(line: 2136, column: 53, scope: !7911)
!7918 = !DILocalVariable(name: "index", arg: 3, scope: !7911, file: !3, line: 2136, type: !205)
!7919 = !DILocation(line: 2136, column: 63, scope: !7911)
!7920 = !DILocation(line: 2138, column: 7, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7911, file: !3, line: 2138, column: 6)
!7922 = !DILocation(line: 2138, column: 10, scope: !7921)
!7923 = !DILocation(line: 2138, column: 13, scope: !7921)
!7924 = !DILocation(line: 2138, column: 19, scope: !7921)
!7925 = !DILocation(line: 2138, column: 16, scope: !7921)
!7926 = !DILocation(line: 2138, column: 29, scope: !7921)
!7927 = !DILocation(line: 2138, column: 32, scope: !7921)
!7928 = !DILocation(line: 2138, column: 6, scope: !7911)
!7929 = !DILocation(line: 2139, column: 3, scope: !7921)
!7930 = !DILocation(line: 2145, column: 32, scope: !7911)
!7931 = !DILocation(line: 2145, column: 38, scope: !7911)
!7932 = !DILocation(line: 2145, column: 53, scope: !7911)
!7933 = !DILocation(line: 2145, column: 10, scope: !7911)
!7934 = !DILocation(line: 2145, column: 9, scope: !7911)
!7935 = !DILocation(line: 2145, column: 2, scope: !7911)
!7936 = !DILocation(line: 2146, column: 1, scope: !7911)
!7937 = distinct !DISubprogram(name: "of_find_next_cache_node", scope: !3, file: !3, line: 2157, type: !4907, scopeLine: 2158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!7938 = !DILocalVariable(name: "np", arg: 1, scope: !7937, file: !3, line: 2157, type: !3605)
!7939 = !DILocation(line: 2157, column: 71, scope: !7937)
!7940 = !DILocalVariable(name: "child", scope: !7937, file: !3, line: 2159, type: !120)
!7941 = !DILocation(line: 2159, column: 22, scope: !7937)
!7942 = !DILocalVariable(name: "cache_node", scope: !7937, file: !3, line: 2159, type: !120)
!7943 = !DILocation(line: 2159, column: 30, scope: !7937)
!7944 = !DILocation(line: 2161, column: 32, scope: !7937)
!7945 = !DILocation(line: 2161, column: 15, scope: !7937)
!7946 = !DILocation(line: 2161, column: 13, scope: !7937)
!7947 = !DILocation(line: 2162, column: 7, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7937, file: !3, line: 2162, column: 6)
!7949 = !DILocation(line: 2162, column: 6, scope: !7937)
!7950 = !DILocation(line: 2163, column: 33, scope: !7948)
!7951 = !DILocation(line: 2163, column: 16, scope: !7948)
!7952 = !DILocation(line: 2163, column: 14, scope: !7948)
!7953 = !DILocation(line: 2163, column: 3, scope: !7948)
!7954 = !DILocation(line: 2165, column: 6, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7937, file: !3, line: 2165, column: 6)
!7956 = !DILocation(line: 2165, column: 6, scope: !7937)
!7957 = !DILocation(line: 2166, column: 10, scope: !7955)
!7958 = !DILocation(line: 2166, column: 3, scope: !7955)
!7959 = !DILocation(line: 2176, column: 2, scope: !7937)
!7960 = !DILocation(line: 2177, column: 1, scope: !7937)
!7961 = distinct !DISubprogram(name: "of_find_last_cache_level", scope: !3, file: !3, line: 2188, type: !7962, scopeLine: 2189, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!7962 = !DISubroutineType(types: !7963)
!7963 = !{!205, !7}
!7964 = !DILocalVariable(name: "cpu", arg: 1, scope: !7961, file: !3, line: 2188, type: !7)
!7965 = !DILocation(line: 2188, column: 43, scope: !7961)
!7966 = !DILocalVariable(name: "cache_level", scope: !7961, file: !3, line: 2190, type: !87)
!7967 = !DILocation(line: 2190, column: 6, scope: !7961)
!7968 = !DILocalVariable(name: "prev", scope: !7961, file: !3, line: 2191, type: !120)
!7969 = !DILocation(line: 2191, column: 22, scope: !7961)
!7970 = !DILocalVariable(name: "np", scope: !7961, file: !3, line: 2191, type: !120)
!7971 = !DILocation(line: 2191, column: 36, scope: !7961)
!7972 = !DILocation(line: 2191, column: 64, scope: !7961)
!7973 = !DILocation(line: 2191, column: 41, scope: !7961)
!7974 = !DILocation(line: 2193, column: 2, scope: !7961)
!7975 = !DILocation(line: 2193, column: 9, scope: !7961)
!7976 = !DILocation(line: 2194, column: 10, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7961, file: !3, line: 2193, column: 13)
!7978 = !DILocation(line: 2194, column: 8, scope: !7977)
!7979 = !DILocation(line: 2195, column: 15, scope: !7977)
!7980 = !DILocation(line: 2195, column: 3, scope: !7977)
!7981 = !DILocation(line: 2196, column: 32, scope: !7977)
!7982 = !DILocation(line: 2196, column: 8, scope: !7977)
!7983 = !DILocation(line: 2196, column: 6, scope: !7977)
!7984 = distinct !{!7984, !7974, !7985}
!7985 = !DILocation(line: 2197, column: 2, scope: !7961)
!7986 = !DILocation(line: 2199, column: 23, scope: !7961)
!7987 = !DILocation(line: 2199, column: 2, scope: !7961)
!7988 = !DILocation(line: 2201, column: 9, scope: !7961)
!7989 = !DILocation(line: 2201, column: 2, scope: !7961)
!7990 = distinct !DISubprogram(name: "of_map_id", scope: !3, file: !3, line: 2223, type: !7991, scopeLine: 2226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !193)
!7991 = !DISubroutineType(types: !7992)
!7992 = !{!205, !120, !87, !116, !116, !7993, !1271}
!7993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64)
!7994 = !DILocation(line: 184, column: 53, scope: !6339, inlinedAt: !7995)
!7995 = distinct !DILocation(line: 82, column: 9, scope: !6347, inlinedAt: !7996)
!7996 = distinct !DILocation(line: 2265, column: 16, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7998, file: !3, line: 2260, column: 62)
!7998 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 2260, column: 2)
!7999 = distinct !DILexicalBlock(scope: !7990, file: !3, line: 2260, column: 2)
!8000 = !DILocation(line: 80, column: 59, scope: !6347, inlinedAt: !7996)
!8001 = !DILocation(line: 184, column: 53, scope: !6339, inlinedAt: !8002)
!8002 = distinct !DILocation(line: 82, column: 9, scope: !6347, inlinedAt: !8003)
!8003 = distinct !DILocation(line: 2264, column: 18, scope: !7997)
!8004 = !DILocation(line: 80, column: 59, scope: !6347, inlinedAt: !8003)
!8005 = !DILocation(line: 184, column: 53, scope: !6339, inlinedAt: !8006)
!8006 = distinct !DILocation(line: 82, column: 9, scope: !6347, inlinedAt: !8007)
!8007 = distinct !DILocation(line: 2263, column: 17, scope: !7997)
!8008 = !DILocation(line: 80, column: 59, scope: !6347, inlinedAt: !8007)
!8009 = !DILocation(line: 184, column: 53, scope: !6339, inlinedAt: !8010)
!8010 = distinct !DILocation(line: 82, column: 9, scope: !6347, inlinedAt: !8011)
!8011 = distinct !DILocation(line: 2262, column: 17, scope: !7997)
!8012 = !DILocation(line: 80, column: 59, scope: !6347, inlinedAt: !8011)
!8013 = !DILocalVariable(name: "np", arg: 1, scope: !7990, file: !3, line: 2223, type: !120)
!8014 = !DILocation(line: 2223, column: 35, scope: !7990)
!8015 = !DILocalVariable(name: "id", arg: 2, scope: !7990, file: !3, line: 2223, type: !87)
!8016 = !DILocation(line: 2223, column: 43, scope: !7990)
!8017 = !DILocalVariable(name: "map_name", arg: 3, scope: !7990, file: !3, line: 2224, type: !116)
!8018 = !DILocation(line: 2224, column: 21, scope: !7990)
!8019 = !DILocalVariable(name: "map_mask_name", arg: 4, scope: !7990, file: !3, line: 2224, type: !116)
!8020 = !DILocation(line: 2224, column: 43, scope: !7990)
!8021 = !DILocalVariable(name: "target", arg: 5, scope: !7990, file: !3, line: 2225, type: !7993)
!8022 = !DILocation(line: 2225, column: 30, scope: !7990)
!8023 = !DILocalVariable(name: "id_out", arg: 6, scope: !7990, file: !3, line: 2225, type: !1271)
!8024 = !DILocation(line: 2225, column: 43, scope: !7990)
!8025 = !DILocalVariable(name: "map_mask", scope: !7990, file: !3, line: 2227, type: !87)
!8026 = !DILocation(line: 2227, column: 6, scope: !7990)
!8027 = !DILocalVariable(name: "masked_id", scope: !7990, file: !3, line: 2227, type: !87)
!8028 = !DILocation(line: 2227, column: 16, scope: !7990)
!8029 = !DILocalVariable(name: "map_len", scope: !7990, file: !3, line: 2228, type: !205)
!8030 = !DILocation(line: 2228, column: 6, scope: !7990)
!8031 = !DILocalVariable(name: "map", scope: !7990, file: !3, line: 2229, type: !4213)
!8032 = !DILocation(line: 2229, column: 16, scope: !7990)
!8033 = !DILocation(line: 2231, column: 7, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !7990, file: !3, line: 2231, column: 6)
!8035 = !DILocation(line: 2231, column: 10, scope: !8034)
!8036 = !DILocation(line: 2231, column: 14, scope: !8034)
!8037 = !DILocation(line: 2231, column: 23, scope: !8034)
!8038 = !DILocation(line: 2231, column: 28, scope: !8034)
!8039 = !DILocation(line: 2231, column: 35, scope: !8034)
!8040 = !DILocation(line: 2231, column: 39, scope: !8034)
!8041 = !DILocation(line: 2231, column: 6, scope: !7990)
!8042 = !DILocation(line: 2232, column: 3, scope: !8034)
!8043 = !DILocation(line: 2234, column: 24, scope: !7990)
!8044 = !DILocation(line: 2234, column: 28, scope: !7990)
!8045 = !DILocation(line: 2234, column: 8, scope: !7990)
!8046 = !DILocation(line: 2234, column: 6, scope: !7990)
!8047 = !DILocation(line: 2235, column: 7, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !7990, file: !3, line: 2235, column: 6)
!8049 = !DILocation(line: 2235, column: 6, scope: !7990)
!8050 = !DILocation(line: 2236, column: 7, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8052, file: !3, line: 2236, column: 7)
!8052 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 2235, column: 12)
!8053 = !DILocation(line: 2236, column: 7, scope: !8052)
!8054 = !DILocation(line: 2237, column: 4, scope: !8051)
!8055 = !DILocation(line: 2239, column: 13, scope: !8052)
!8056 = !DILocation(line: 2239, column: 4, scope: !8052)
!8057 = !DILocation(line: 2239, column: 11, scope: !8052)
!8058 = !DILocation(line: 2240, column: 3, scope: !8052)
!8059 = !DILocation(line: 2243, column: 7, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !7990, file: !3, line: 2243, column: 6)
!8061 = !DILocation(line: 2243, column: 15, scope: !8060)
!8062 = !DILocation(line: 2243, column: 18, scope: !8060)
!8063 = !DILocation(line: 2243, column: 26, scope: !8060)
!8064 = !DILocation(line: 2243, column: 6, scope: !7990)
!8065 = !DILocation(line: 2244, column: 3, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8060, file: !3, line: 2243, column: 48)
!8067 = !DILocation(line: 2246, column: 3, scope: !8066)
!8068 = !DILocation(line: 2250, column: 11, scope: !7990)
!8069 = !DILocation(line: 2256, column: 6, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !7990, file: !3, line: 2256, column: 6)
!8071 = !DILocation(line: 2256, column: 6, scope: !7990)
!8072 = !DILocation(line: 2257, column: 24, scope: !8070)
!8073 = !DILocation(line: 2257, column: 28, scope: !8070)
!8074 = !DILocation(line: 2257, column: 3, scope: !8070)
!8075 = !DILocation(line: 2259, column: 14, scope: !7990)
!8076 = !DILocation(line: 2259, column: 25, scope: !7990)
!8077 = !DILocation(line: 2259, column: 23, scope: !7990)
!8078 = !DILocation(line: 2259, column: 12, scope: !7990)
!8079 = !DILocation(line: 2260, column: 2, scope: !7990)
!8080 = !DILocation(line: 2260, column: 10, scope: !7998)
!8081 = !DILocation(line: 2260, column: 18, scope: !7998)
!8082 = !DILocation(line: 2260, column: 2, scope: !7999)
!8083 = !DILocalVariable(name: "phandle_node", scope: !7997, file: !3, line: 2261, type: !120)
!8084 = !DILocation(line: 2261, column: 23, scope: !7997)
!8085 = !DILocalVariable(name: "id_base", scope: !7997, file: !3, line: 2262, type: !87)
!8086 = !DILocation(line: 2262, column: 7, scope: !7997)
!8087 = !DILocation(line: 2262, column: 30, scope: !7997)
!8088 = !DILocation(line: 2262, column: 34, scope: !7997)
!8089 = !DILocation(line: 82, column: 28, scope: !6347, inlinedAt: !8011)
!8090 = !DILocation(line: 189, column: 9, scope: !6339, inlinedAt: !8010)
!8091 = !DILocalVariable(name: "phandle", scope: !7997, file: !3, line: 2263, type: !87)
!8092 = !DILocation(line: 2263, column: 7, scope: !7997)
!8093 = !DILocation(line: 2263, column: 30, scope: !7997)
!8094 = !DILocation(line: 2263, column: 34, scope: !7997)
!8095 = !DILocation(line: 82, column: 28, scope: !6347, inlinedAt: !8007)
!8096 = !DILocation(line: 189, column: 9, scope: !6339, inlinedAt: !8006)
!8097 = !DILocalVariable(name: "out_base", scope: !7997, file: !3, line: 2264, type: !87)
!8098 = !DILocation(line: 2264, column: 7, scope: !7997)
!8099 = !DILocation(line: 2264, column: 31, scope: !7997)
!8100 = !DILocation(line: 2264, column: 35, scope: !7997)
!8101 = !DILocation(line: 82, column: 28, scope: !6347, inlinedAt: !8003)
!8102 = !DILocation(line: 189, column: 9, scope: !6339, inlinedAt: !8002)
!8103 = !DILocalVariable(name: "id_len", scope: !7997, file: !3, line: 2265, type: !87)
!8104 = !DILocation(line: 2265, column: 7, scope: !7997)
!8105 = !DILocation(line: 2265, column: 29, scope: !7997)
!8106 = !DILocation(line: 2265, column: 33, scope: !7997)
!8107 = !DILocation(line: 82, column: 28, scope: !6347, inlinedAt: !7996)
!8108 = !DILocation(line: 189, column: 9, scope: !6339, inlinedAt: !7995)
!8109 = !DILocation(line: 2267, column: 7, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !7997, file: !3, line: 2267, column: 7)
!8111 = !DILocation(line: 2267, column: 18, scope: !8110)
!8112 = !DILocation(line: 2267, column: 17, scope: !8110)
!8113 = !DILocation(line: 2267, column: 15, scope: !8110)
!8114 = !DILocation(line: 2267, column: 7, scope: !7997)
!8115 = !DILocation(line: 2268, column: 4, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8110, file: !3, line: 2267, column: 28)
!8117 = !DILocation(line: 2271, column: 4, scope: !8116)
!8118 = !DILocation(line: 2274, column: 7, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !7997, file: !3, line: 2274, column: 7)
!8120 = !DILocation(line: 2274, column: 19, scope: !8119)
!8121 = !DILocation(line: 2274, column: 17, scope: !8119)
!8122 = !DILocation(line: 2274, column: 27, scope: !8119)
!8123 = !DILocation(line: 2274, column: 30, scope: !8119)
!8124 = !DILocation(line: 2274, column: 43, scope: !8119)
!8125 = !DILocation(line: 2274, column: 53, scope: !8119)
!8126 = !DILocation(line: 2274, column: 51, scope: !8119)
!8127 = !DILocation(line: 2274, column: 40, scope: !8119)
!8128 = !DILocation(line: 2274, column: 7, scope: !7997)
!8129 = !DILocation(line: 2275, column: 4, scope: !8119)
!8130 = !DILocation(line: 2277, column: 42, scope: !7997)
!8131 = !DILocation(line: 2277, column: 18, scope: !7997)
!8132 = !DILocation(line: 2277, column: 16, scope: !7997)
!8133 = !DILocation(line: 2278, column: 8, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !7997, file: !3, line: 2278, column: 7)
!8135 = !DILocation(line: 2278, column: 7, scope: !7997)
!8136 = !DILocation(line: 2279, column: 4, scope: !8134)
!8137 = !DILocation(line: 2281, column: 7, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !7997, file: !3, line: 2281, column: 7)
!8139 = !DILocation(line: 2281, column: 7, scope: !7997)
!8140 = !DILocation(line: 2282, column: 9, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 2282, column: 8)
!8142 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 2281, column: 15)
!8143 = !DILocation(line: 2282, column: 8, scope: !8141)
!8144 = !DILocation(line: 2282, column: 8, scope: !8142)
!8145 = !DILocation(line: 2283, column: 17, scope: !8141)
!8146 = !DILocation(line: 2283, column: 5, scope: !8141)
!8147 = !DILocation(line: 2285, column: 15, scope: !8141)
!8148 = !DILocation(line: 2285, column: 6, scope: !8141)
!8149 = !DILocation(line: 2285, column: 13, scope: !8141)
!8150 = !DILocation(line: 2287, column: 9, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 2287, column: 8)
!8152 = !DILocation(line: 2287, column: 8, scope: !8151)
!8153 = !DILocation(line: 2287, column: 19, scope: !8151)
!8154 = !DILocation(line: 2287, column: 16, scope: !8151)
!8155 = !DILocation(line: 2287, column: 8, scope: !8142)
!8156 = !DILocation(line: 2288, column: 5, scope: !8151)
!8157 = !DILocation(line: 2289, column: 3, scope: !8142)
!8158 = !DILocation(line: 2291, column: 7, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !7997, file: !3, line: 2291, column: 7)
!8160 = !DILocation(line: 2291, column: 7, scope: !7997)
!8161 = !DILocation(line: 2292, column: 14, scope: !8159)
!8162 = !DILocation(line: 2292, column: 26, scope: !8159)
!8163 = !DILocation(line: 2292, column: 24, scope: !8159)
!8164 = !DILocation(line: 2292, column: 36, scope: !8159)
!8165 = !DILocation(line: 2292, column: 34, scope: !8159)
!8166 = !DILocation(line: 2292, column: 5, scope: !8159)
!8167 = !DILocation(line: 2292, column: 12, scope: !8159)
!8168 = !DILocation(line: 2292, column: 4, scope: !8159)
!8169 = !DILocation(line: 2294, column: 3, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8171, file: !3, line: 2294, column: 3)
!8171 = distinct !DILexicalBlock(scope: !7997, file: !3, line: 2294, column: 3)
!8172 = !DILocation(line: 2294, column: 3, scope: !8171)
!8173 = !DILocation(line: 2297, column: 3, scope: !7997)
!8174 = !DILocation(line: 2260, column: 31, scope: !7998)
!8175 = !DILocation(line: 2260, column: 56, scope: !7998)
!8176 = !DILocation(line: 2260, column: 2, scope: !7998)
!8177 = distinct !{!8177, !8082, !8178}
!8178 = !DILocation(line: 2298, column: 2, scope: !7999)
!8179 = !DILocation(line: 2300, column: 2, scope: !7990)
!8180 = !DILocation(line: 2304, column: 6, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !7990, file: !3, line: 2304, column: 6)
!8182 = !DILocation(line: 2304, column: 6, scope: !7990)
!8183 = !DILocation(line: 2305, column: 13, scope: !8181)
!8184 = !DILocation(line: 2305, column: 4, scope: !8181)
!8185 = !DILocation(line: 2305, column: 11, scope: !8181)
!8186 = !DILocation(line: 2305, column: 3, scope: !8181)
!8187 = !DILocation(line: 2306, column: 2, scope: !7990)
!8188 = !DILocation(line: 2307, column: 1, scope: !7990)
!8189 = distinct !DISubprogram(name: "of_property_read_u32_array", scope: !122, file: !122, line: 494, type: !8190, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!8190 = !DISubroutineType(types: !8191)
!8191 = !{!205, !3605, !116, !1271, !268}
!8192 = !DILocalVariable(name: "np", arg: 1, scope: !8189, file: !122, line: 494, type: !3605)
!8193 = !DILocation(line: 494, column: 72, scope: !8189)
!8194 = !DILocalVariable(name: "propname", arg: 2, scope: !8189, file: !122, line: 495, type: !116)
!8195 = !DILocation(line: 495, column: 23, scope: !8189)
!8196 = !DILocalVariable(name: "out_values", arg: 3, scope: !8189, file: !122, line: 496, type: !1271)
!8197 = !DILocation(line: 496, column: 16, scope: !8189)
!8198 = !DILocalVariable(name: "sz", arg: 4, scope: !8189, file: !122, line: 496, type: !268)
!8199 = !DILocation(line: 496, column: 35, scope: !8189)
!8200 = !DILocalVariable(name: "ret", scope: !8189, file: !122, line: 498, type: !205)
!8201 = !DILocation(line: 498, column: 6, scope: !8189)
!8202 = !DILocation(line: 498, column: 48, scope: !8189)
!8203 = !DILocation(line: 498, column: 52, scope: !8189)
!8204 = !DILocation(line: 498, column: 62, scope: !8189)
!8205 = !DILocation(line: 499, column: 13, scope: !8189)
!8206 = !DILocation(line: 498, column: 12, scope: !8189)
!8207 = !DILocation(line: 500, column: 6, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8189, file: !122, line: 500, column: 6)
!8209 = !DILocation(line: 500, column: 10, scope: !8208)
!8210 = !DILocation(line: 500, column: 6, scope: !8189)
!8211 = !DILocation(line: 501, column: 3, scope: !8208)
!8212 = !DILocation(line: 503, column: 10, scope: !8208)
!8213 = !DILocation(line: 503, column: 3, scope: !8208)
!8214 = !DILocation(line: 504, column: 1, scope: !8189)
!8215 = distinct !DISubprogram(name: "hash_32_generic", scope: !8216, file: !8216, line: 68, type: !8217, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!8216 = !DIFile(filename: "./include/linux/hash.h", directory: "/home/lizy2001/genbc/linux")
!8217 = !DISubroutineType(types: !8218)
!8218 = !{!87, !87, !7}
!8219 = !DILocalVariable(name: "val", arg: 1, scope: !8215, file: !8216, line: 68, type: !87)
!8220 = !DILocation(line: 68, column: 39, scope: !8215)
!8221 = !DILocalVariable(name: "bits", arg: 2, scope: !8215, file: !8216, line: 68, type: !7)
!8222 = !DILocation(line: 68, column: 57, scope: !8215)
!8223 = !DILocation(line: 71, column: 19, scope: !8215)
!8224 = !DILocation(line: 71, column: 9, scope: !8215)
!8225 = !DILocation(line: 71, column: 33, scope: !8215)
!8226 = !DILocation(line: 71, column: 31, scope: !8215)
!8227 = !DILocation(line: 71, column: 24, scope: !8215)
!8228 = !DILocation(line: 71, column: 2, scope: !8215)
!8229 = distinct !DISubprogram(name: "__hash_32_generic", scope: !8216, file: !8216, line: 60, type: !8230, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!8230 = !DISubroutineType(types: !8231)
!8231 = !{!87, !87}
!8232 = !DILocalVariable(name: "val", arg: 1, scope: !8229, file: !8216, line: 60, type: !87)
!8233 = !DILocation(line: 60, column: 41, scope: !8229)
!8234 = !DILocation(line: 62, column: 9, scope: !8229)
!8235 = !DILocation(line: 62, column: 13, scope: !8229)
!8236 = !DILocation(line: 62, column: 2, scope: !8229)
!8237 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !3998, file: !3998, line: 646, type: !3999, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!8238 = !DILocalVariable(name: "__ret", scope: !8239, file: !3998, line: 648, type: !98)
!8239 = distinct !DILexicalBlock(scope: !8237, file: !3998, line: 648, column: 9)
!8240 = !DILocation(line: 648, column: 9, scope: !8239)
!8241 = !DILocalVariable(name: "__edi", scope: !8239, file: !3998, line: 648, type: !98)
!8242 = !DILocalVariable(name: "__esi", scope: !8239, file: !3998, line: 648, type: !98)
!8243 = !DILocalVariable(name: "__edx", scope: !8239, file: !3998, line: 648, type: !98)
!8244 = !DILocalVariable(name: "__ecx", scope: !8239, file: !3998, line: 648, type: !98)
!8245 = !DILocalVariable(name: "__eax", scope: !8239, file: !3998, line: 648, type: !98)
!8246 = !DILocation(line: 648, column: 9, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8248, file: !3998, line: 648, column: 9)
!8248 = distinct !DILexicalBlock(scope: !8239, file: !3998, line: 648, column: 9)
!8249 = !{i32 -2145689805, i32 -2145687490, i32 -2145687256, i32 -2145687205, i32 -2145687177, i32 -2145687152, i32 -2145687468, i32 -2145687455, i32 -2145687017, i32 -2145686898, i32 -2145687363, i32 -2145687336, i32 -2145687308, i32 -2145687278}
!8250 = !DILocalVariable(name: "__mask", scope: !8251, file: !3998, line: 648, type: !98)
!8251 = distinct !DILexicalBlock(scope: !8247, file: !3998, line: 648, column: 9)
!8252 = !DILocation(line: 648, column: 9, scope: !8251)
!8253 = !DILocation(line: 648, column: 9, scope: !8248)
!8254 = !DILocation(line: 648, column: 2, scope: !8237)
!8255 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !3998, file: !3998, line: 656, type: !1736, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!8256 = !DILocalVariable(name: "__edi", scope: !8257, file: !3998, line: 658, type: !98)
!8257 = distinct !DILexicalBlock(scope: !8255, file: !3998, line: 658, column: 2)
!8258 = !DILocation(line: 658, column: 2, scope: !8257)
!8259 = !DILocalVariable(name: "__esi", scope: !8257, file: !3998, line: 658, type: !98)
!8260 = !DILocalVariable(name: "__edx", scope: !8257, file: !3998, line: 658, type: !98)
!8261 = !DILocalVariable(name: "__ecx", scope: !8257, file: !3998, line: 658, type: !98)
!8262 = !DILocalVariable(name: "__eax", scope: !8257, file: !3998, line: 658, type: !98)
!8263 = !{i32 -2145682711, i32 -2145681979, i32 -2145681745, i32 -2145681694, i32 -2145681666, i32 -2145681641, i32 -2145681957, i32 -2145681944, i32 -2145681506, i32 -2145681387, i32 -2145681852, i32 -2145681825, i32 -2145681797, i32 -2145681767}
!8264 = !DILocation(line: 659, column: 1, scope: !8255)
!8265 = distinct !DISubprogram(name: "of_read_number", scope: !122, file: !122, line: 234, type: !8266, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!8266 = !DISubroutineType(types: !8267)
!8267 = !{!363, !4213, !205}
!8268 = !DILocalVariable(name: "cell", arg: 1, scope: !8265, file: !122, line: 234, type: !4213)
!8269 = !DILocation(line: 234, column: 48, scope: !8265)
!8270 = !DILocalVariable(name: "size", arg: 2, scope: !8265, file: !122, line: 234, type: !205)
!8271 = !DILocation(line: 234, column: 58, scope: !8265)
!8272 = !DILocalVariable(name: "r", scope: !8265, file: !122, line: 236, type: !363)
!8273 = !DILocation(line: 236, column: 6, scope: !8265)
!8274 = !DILocation(line: 237, column: 2, scope: !8265)
!8275 = !DILocation(line: 237, column: 13, scope: !8276)
!8276 = distinct !DILexicalBlock(scope: !8277, file: !122, line: 237, column: 2)
!8277 = distinct !DILexicalBlock(scope: !8265, file: !122, line: 237, column: 2)
!8278 = !DILocation(line: 237, column: 2, scope: !8277)
!8279 = !DILocation(line: 238, column: 8, scope: !8276)
!8280 = !DILocation(line: 238, column: 10, scope: !8276)
!8281 = !DILocation(line: 238, column: 19, scope: !8276)
!8282 = !DILocation(line: 238, column: 17, scope: !8276)
!8283 = !DILocation(line: 238, column: 5, scope: !8276)
!8284 = !DILocation(line: 238, column: 3, scope: !8276)
!8285 = !DILocation(line: 237, column: 21, scope: !8276)
!8286 = !DILocation(line: 237, column: 2, scope: !8276)
!8287 = distinct !{!8287, !8278, !8288}
!8288 = !DILocation(line: 238, column: 19, scope: !8277)
!8289 = !DILocation(line: 239, column: 9, scope: !8265)
!8290 = !DILocation(line: 239, column: 2, scope: !8265)
!8291 = distinct !DISubprogram(name: "test_bit", scope: !8292, file: !8292, line: 132, type: !8293, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!8292 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!8293 = !DISubroutineType(types: !8294)
!8294 = !{!151, !256, !8295}
!8295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8296, size: 64)
!8296 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7815)
!8297 = !DILocalVariable(name: "nr", arg: 1, scope: !8298, file: !7818, line: 210, type: !256)
!8298 = distinct !DISubprogram(name: "variable_test_bit", scope: !7818, file: !7818, line: 210, type: !8293, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!8299 = !DILocation(line: 210, column: 52, scope: !8298, inlinedAt: !8300)
!8300 = distinct !DILocation(line: 135, column: 9, scope: !8291)
!8301 = !DILocalVariable(name: "addr", arg: 2, scope: !8298, file: !7818, line: 210, type: !8295)
!8302 = !DILocation(line: 210, column: 86, scope: !8298, inlinedAt: !8300)
!8303 = !DILocalVariable(name: "oldbit", scope: !8298, file: !7818, line: 212, type: !151)
!8304 = !DILocation(line: 212, column: 7, scope: !8298, inlinedAt: !8300)
!8305 = !DILocalVariable(name: "nr", arg: 1, scope: !8306, file: !7818, line: 204, type: !256)
!8306 = distinct !DISubprogram(name: "constant_test_bit", scope: !7818, file: !7818, line: 204, type: !8293, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!8307 = !DILocation(line: 204, column: 52, scope: !8306, inlinedAt: !8308)
!8308 = distinct !DILocation(line: 135, column: 9, scope: !8291)
!8309 = !DILocalVariable(name: "addr", arg: 2, scope: !8306, file: !7818, line: 204, type: !8295)
!8310 = !DILocation(line: 204, column: 86, scope: !8306, inlinedAt: !8308)
!8311 = !DILocalVariable(name: "v", arg: 1, scope: !8312, file: !7825, line: 69, type: !7828)
!8312 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !7825, file: !7825, line: 69, type: !7826, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!8313 = !DILocation(line: 69, column: 73, scope: !8312, inlinedAt: !8314)
!8314 = distinct !DILocation(line: 134, column: 2, scope: !8291)
!8315 = !DILocalVariable(name: "size", arg: 2, scope: !8312, file: !7825, line: 69, type: !268)
!8316 = !DILocation(line: 69, column: 83, scope: !8312, inlinedAt: !8314)
!8317 = !DILocalVariable(name: "nr", arg: 1, scope: !8291, file: !8292, line: 132, type: !256)
!8318 = !DILocation(line: 132, column: 34, scope: !8291)
!8319 = !DILocalVariable(name: "addr", arg: 2, scope: !8291, file: !8292, line: 132, type: !8295)
!8320 = !DILocation(line: 132, column: 68, scope: !8291)
!8321 = !DILocation(line: 134, column: 25, scope: !8291)
!8322 = !DILocation(line: 134, column: 32, scope: !8291)
!8323 = !DILocation(line: 134, column: 30, scope: !8291)
!8324 = !DILocation(line: 71, column: 19, scope: !8312, inlinedAt: !8314)
!8325 = !DILocation(line: 71, column: 22, scope: !8312, inlinedAt: !8314)
!8326 = !DILocation(line: 71, column: 2, scope: !8312, inlinedAt: !8314)
!8327 = !DILocation(line: 72, column: 2, scope: !8312, inlinedAt: !8314)
!8328 = !DILocation(line: 135, column: 9, scope: !8291)
!8329 = !DILocation(line: 206, column: 19, scope: !8306, inlinedAt: !8308)
!8330 = !DILocation(line: 206, column: 22, scope: !8306, inlinedAt: !8308)
!8331 = !DILocation(line: 206, column: 15, scope: !8306, inlinedAt: !8308)
!8332 = !DILocation(line: 207, column: 4, scope: !8306, inlinedAt: !8308)
!8333 = !DILocation(line: 207, column: 9, scope: !8306, inlinedAt: !8308)
!8334 = !DILocation(line: 207, column: 12, scope: !8306, inlinedAt: !8308)
!8335 = !DILocation(line: 206, column: 44, scope: !8306, inlinedAt: !8308)
!8336 = !DILocation(line: 207, column: 37, scope: !8306, inlinedAt: !8308)
!8337 = !DILocation(line: 217, column: 33, scope: !8298, inlinedAt: !8300)
!8338 = !DILocation(line: 217, column: 46, scope: !8298, inlinedAt: !8300)
!8339 = !DILocation(line: 214, column: 2, scope: !8298, inlinedAt: !8300)
!8340 = !{i32 -2147173794, i32 -2147173734}
!8341 = !DILocation(line: 219, column: 9, scope: !8298, inlinedAt: !8300)
!8342 = !DILocation(line: 135, column: 2, scope: !8291)
!8343 = distinct !DISubprogram(name: "kasan_check_read", scope: !8344, file: !8344, line: 34, type: !8345, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!8344 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!8345 = !DISubroutineType(types: !8346)
!8346 = !{!151, !7828, !7}
!8347 = !DILocalVariable(name: "p", arg: 1, scope: !8343, file: !8344, line: 34, type: !7828)
!8348 = !DILocation(line: 34, column: 58, scope: !8343)
!8349 = !DILocalVariable(name: "size", arg: 2, scope: !8343, file: !8344, line: 34, type: !7)
!8350 = !DILocation(line: 34, column: 74, scope: !8343)
!8351 = !DILocation(line: 36, column: 2, scope: !8343)
!8352 = distinct !DISubprogram(name: "kcsan_check_access", scope: !8353, file: !8353, line: 178, type: !8354, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!8353 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!8354 = !DISubroutineType(types: !8355)
!8355 = !{null, !7828, !268, !205}
!8356 = !DILocalVariable(name: "ptr", arg: 1, scope: !8352, file: !8353, line: 178, type: !7828)
!8357 = !DILocation(line: 178, column: 60, scope: !8352)
!8358 = !DILocalVariable(name: "size", arg: 2, scope: !8352, file: !8353, line: 178, type: !268)
!8359 = !DILocation(line: 178, column: 72, scope: !8352)
!8360 = !DILocalVariable(name: "type", arg: 3, scope: !8352, file: !8353, line: 179, type: !205)
!8361 = !DILocation(line: 179, column: 15, scope: !8352)
!8362 = !DILocation(line: 179, column: 23, scope: !8352)
!8363 = distinct !DISubprogram(name: "__arch_swab32", scope: !8364, file: !8364, line: 8, type: !6961, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!8364 = !DIFile(filename: "./arch/x86/include/uapi/asm/swab.h", directory: "/home/lizy2001/genbc/linux")
!8365 = !DILocalVariable(name: "val", arg: 1, scope: !8363, file: !8364, line: 8, type: !89)
!8366 = !DILocation(line: 8, column: 61, scope: !8363)
!8367 = !DILocation(line: 10, column: 38, scope: !8363)
!8368 = !DILocation(line: 10, column: 2, scope: !8363)
!8369 = !{i32 389551}
!8370 = !DILocation(line: 11, column: 9, scope: !8363)
!8371 = !DILocation(line: 11, column: 2, scope: !8363)
!8372 = distinct !DISubprogram(name: "list_add_tail", scope: !8373, file: !8373, line: 98, type: !8374, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!8373 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!8374 = !DISubroutineType(types: !8375)
!8375 = !{null, !113, !113}
!8376 = !DILocalVariable(name: "new", arg: 1, scope: !8372, file: !8373, line: 98, type: !113)
!8377 = !DILocation(line: 98, column: 52, scope: !8372)
!8378 = !DILocalVariable(name: "head", arg: 2, scope: !8372, file: !8373, line: 98, type: !113)
!8379 = !DILocation(line: 98, column: 75, scope: !8372)
!8380 = !DILocation(line: 100, column: 13, scope: !8372)
!8381 = !DILocation(line: 100, column: 18, scope: !8372)
!8382 = !DILocation(line: 100, column: 24, scope: !8372)
!8383 = !DILocation(line: 100, column: 30, scope: !8372)
!8384 = !DILocation(line: 100, column: 2, scope: !8372)
!8385 = !DILocation(line: 101, column: 1, scope: !8372)
!8386 = distinct !DISubprogram(name: "__list_add", scope: !8373, file: !8373, line: 63, type: !8387, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!8387 = !DISubroutineType(types: !8388)
!8388 = !{null, !113, !113, !113}
!8389 = !DILocalVariable(name: "new", arg: 1, scope: !8386, file: !8373, line: 63, type: !113)
!8390 = !DILocation(line: 63, column: 49, scope: !8386)
!8391 = !DILocalVariable(name: "prev", arg: 2, scope: !8386, file: !8373, line: 64, type: !113)
!8392 = !DILocation(line: 64, column: 28, scope: !8386)
!8393 = !DILocalVariable(name: "next", arg: 3, scope: !8386, file: !8373, line: 65, type: !113)
!8394 = !DILocation(line: 65, column: 28, scope: !8386)
!8395 = !DILocation(line: 67, column: 24, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8386, file: !8373, line: 67, column: 6)
!8397 = !DILocation(line: 67, column: 29, scope: !8396)
!8398 = !DILocation(line: 67, column: 35, scope: !8396)
!8399 = !DILocation(line: 67, column: 7, scope: !8396)
!8400 = !DILocation(line: 67, column: 6, scope: !8386)
!8401 = !DILocation(line: 68, column: 3, scope: !8396)
!8402 = !DILocation(line: 70, column: 15, scope: !8386)
!8403 = !DILocation(line: 70, column: 2, scope: !8386)
!8404 = !DILocation(line: 70, column: 8, scope: !8386)
!8405 = !DILocation(line: 70, column: 13, scope: !8386)
!8406 = !DILocation(line: 71, column: 14, scope: !8386)
!8407 = !DILocation(line: 71, column: 2, scope: !8386)
!8408 = !DILocation(line: 71, column: 7, scope: !8386)
!8409 = !DILocation(line: 71, column: 12, scope: !8386)
!8410 = !DILocation(line: 72, column: 14, scope: !8386)
!8411 = !DILocation(line: 72, column: 2, scope: !8386)
!8412 = !DILocation(line: 72, column: 7, scope: !8386)
!8413 = !DILocation(line: 72, column: 12, scope: !8386)
!8414 = !DILocation(line: 73, column: 2, scope: !8386)
!8415 = !DILocation(line: 73, column: 2, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8386, file: !8373, line: 73, column: 2)
!8417 = !DILocation(line: 73, column: 2, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8416, file: !8373, line: 73, column: 2)
!8419 = !DILocation(line: 73, column: 2, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8416, file: !8373, line: 73, column: 2)
!8421 = !DILocation(line: 74, column: 1, scope: !8386)
!8422 = distinct !DISubprogram(name: "__list_add_valid", scope: !8373, file: !8373, line: 45, type: !8423, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!8423 = !DISubroutineType(types: !8424)
!8424 = !{!151, !113, !113, !113}
!8425 = !DILocalVariable(name: "new", arg: 1, scope: !8422, file: !8373, line: 45, type: !113)
!8426 = !DILocation(line: 45, column: 55, scope: !8422)
!8427 = !DILocalVariable(name: "prev", arg: 2, scope: !8422, file: !8373, line: 46, type: !113)
!8428 = !DILocation(line: 46, column: 23, scope: !8422)
!8429 = !DILocalVariable(name: "next", arg: 3, scope: !8422, file: !8373, line: 47, type: !113)
!8430 = !DILocation(line: 47, column: 23, scope: !8422)
!8431 = !DILocation(line: 49, column: 2, scope: !8422)
!8432 = distinct !DISubprogram(name: "kasan_check_write", scope: !8344, file: !8344, line: 38, type: !8345, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !193)
!8433 = !DILocalVariable(name: "p", arg: 1, scope: !8432, file: !8344, line: 38, type: !7828)
!8434 = !DILocation(line: 38, column: 59, scope: !8432)
!8435 = !DILocalVariable(name: "size", arg: 2, scope: !8432, file: !8344, line: 38, type: !7)
!8436 = !DILocation(line: 38, column: 75, scope: !8432)
!8437 = !DILocation(line: 40, column: 2, scope: !8432)
