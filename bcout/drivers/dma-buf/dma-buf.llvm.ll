; ModuleID = '../bcout/drivers/dma-buf/dma-buf.llvm.bc'
source_filename = "drivers/dma-buf/dma-buf.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall4.init\22, \22a\22\09"
module asm "__initcall_dma_buf_init4:\09\09\09"
module asm ".long\09dma_buf_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.lock_class_key = type {}
%struct.dma_buf_list = type { %struct.list_head, %struct.mutex }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.spinlock = type { %union.anon.2 }
%union.anon.2 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.vfsmount = type { %struct.dentry*, %struct.super_block*, i32 }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.63, %struct.list_head, %struct.list_head, %union.anon.64 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.55, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.56, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.57, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.60, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.module = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.14 }
%union.anon.14 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.26, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.mm_struct = type { %struct.anon.25, [0 x i64] }
%struct.anon.25 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.46, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.27 }
%union.anon.27 = type { %struct.anon.28 }
%struct.anon.28 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.3, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.4, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.5, %union.anon.9, %struct.key_restriction* }
%union.anon.3 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.4 = type { i64 }
%union.anon.5 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.6, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.6 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.9 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.backing_dev_info = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.32, %union.anon.33, i32 }
%struct.request_queue = type opaque
%union.anon.32 = type { %struct.list_head }
%union.anon.33 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.34 }
%struct.anon.34 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.38 }
%struct.anon.38 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.45, i32, [12 x i8] }
%union.anon.45 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.46 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.page = type { i64, %union.anon.12, %union.anon.53, %struct.atomic_t, [8 x i8] }
%union.anon.12 = type { %struct.anon.13 }
%struct.anon.13 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.53 = type { %struct.atomic_t }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.47, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.50 }
%union.anon.47 = type { %struct.anon.48 }
%struct.anon.48 = type { i64, i64 }
%union.anon.50 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.user_namespace = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.pgprot = type { i64 }
%struct.anon.26 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.58 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.58 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.11 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.11 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.55 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%union.anon.56 = type { %struct.callback_head }
%struct.atomic_t = type { i32 }
%union.anon.57 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.writeback_control = type opaque
%struct.readahead_control = type opaque
%struct.swap_info_struct = type opaque
%union.anon.60 = type { %struct.pipe_inode_info* }
%struct.fsnotify_mark_connector = type opaque
%struct.lockref = type { %union.anon.61 }
%union.anon.61 = type { %struct.anon.62 }
%struct.anon.62 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%union.anon.63 = type { %struct.list_head }
%union.anon.64 = type { %struct.hlist_node }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type { %struct.fs_context_operations*, %struct.mutex, %struct.file_system_type*, i8*, i8*, %struct.dentry*, %struct.user_namespace*, %struct.net*, %struct.cred*, %struct.p_log, i8*, i8*, i8*, i32, i32, i32, i32, i24 }
%struct.fs_context_operations = type { void (%struct.fs_context*)*, i32 (%struct.fs_context*, %struct.fs_context*)*, i32 (%struct.fs_context*, %struct.fs_parameter*)*, i32 (%struct.fs_context*, i8*)*, {}*, {}* }
%struct.fs_parameter = type { i8*, i8, %union.anon.1, i64, i32 }
%union.anon.1 = type { i8* }
%struct.net = type opaque
%struct.p_log = type { i8*, %struct.fc_log* }
%struct.fc_log = type { %struct.refcount_struct, i8, i8, i8, %struct.module*, [8 x i8*] }
%struct.fs_parameter_spec = type opaque
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.kstatfs = type opaque
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.54, i32 }
%union.anon.54 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.kmem_cache = type opaque
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.dma_buf = type { i64, %struct.file*, %struct.list_head, %struct.dma_buf_ops*, %struct.mutex, i32, i8*, i8*, i8*, %struct.spinlock, %struct.module*, %struct.list_head, i8*, %struct.dma_resv*, %struct.wait_queue_head, %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t }
%struct.dma_buf_ops = type { i8, i32 (%struct.dma_buf*, %struct.dma_buf_attachment*)*, void (%struct.dma_buf*, %struct.dma_buf_attachment*)*, i32 (%struct.dma_buf_attachment*)*, void (%struct.dma_buf_attachment*)*, %struct.sg_table* (%struct.dma_buf_attachment*, i32)*, void (%struct.dma_buf_attachment*, %struct.sg_table*, i32)*, void (%struct.dma_buf*)*, i32 (%struct.dma_buf*, i32)*, i32 (%struct.dma_buf*, i32)*, i32 (%struct.dma_buf*, %struct.vm_area_struct*)*, i8* (%struct.dma_buf*)*, void (%struct.dma_buf*, i8*)* }
%struct.dma_buf_attachment = type { %struct.dma_buf*, %struct.device*, %struct.list_head, %struct.sg_table*, i32, i8, %struct.dma_buf_attach_ops*, i8*, i8* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.65, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.65 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type opaque
%struct.acpi_device_id = type opaque
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.sg_table = type { %struct.scatterlist*, i32, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.dma_buf_attach_ops = type { i8, void (%struct.dma_buf_attachment*)* }
%struct.dma_resv = type { %struct.ww_mutex, %struct.seqcount_ww_mutex, %struct.dma_fence*, %struct.dma_resv_list* }
%struct.ww_mutex = type { %struct.mutex, %struct.ww_acquire_ctx* }
%struct.ww_acquire_ctx = type { %struct.task_struct*, i64, i32, i16, i16 }
%struct.seqcount_ww_mutex = type { %struct.seqcount }
%struct.dma_fence = type { %struct.spinlock*, %struct.dma_fence_ops*, %union.anon.66, i64, i64, i64, %struct.kref, i32 }
%struct.dma_fence_ops = type { i8, i8* (%struct.dma_fence*)*, i8* (%struct.dma_fence*)*, i1 (%struct.dma_fence*)*, i1 (%struct.dma_fence*)*, i64 (%struct.dma_fence*, i1, i64)*, void (%struct.dma_fence*)*, void (%struct.dma_fence*, i8*, i32)*, void (%struct.dma_fence*, i8*, i32)* }
%union.anon.66 = type { %struct.list_head }
%struct.dma_resv_list = type { %struct.callback_head, i32, i32, [0 x %struct.dma_fence*] }
%struct.dma_buf_poll_cb_t = type { %struct.dma_fence_cb, %struct.wait_queue_head*, i32 }
%struct.dma_fence_cb = type { %struct.list_head, void (%struct.dma_fence*, %struct.dma_fence_cb*)* }
%struct.dma_buf_export_info = type { i8*, %struct.module*, %struct.dma_buf_ops*, i64, i32, %struct.dma_resv*, i8* }
%struct.dma_buf_sync = type { i64 }
%struct.pseudo_fs_context = type { %struct.super_operations*, %struct.xattr_handler**, %struct.dentry_operations*, i64 }

@.str = private unnamed_addr constant [26 x i8] c"drivers/dma-buf/dma-buf.c\00", align 1
@dma_buf_export.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !0
@.str.1 = private unnamed_addr constant [14 x i8] c"&dmabuf->poll\00", align 1
@dma_buf_export.__key.2 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4106
@.str.3 = private unnamed_addr constant [14 x i8] c"&dmabuf->lock\00", align 1
@db_list = internal global %struct.dma_buf_list zeroinitializer, align 8, !dbg !4115
@__UNIQUE_ID___addressable_dma_buf_init268 = internal global i8* bitcast (i32 ()* @dma_buf_init to i8*), section ".discard.addressable", align 8, !dbg !4108
@dma_buf_mnt = internal global %struct.vfsmount* null, align 8, !dbg !4121
@__exitcall_dma_buf_deinit = internal global void ()* @dma_buf_deinit, section ".exitcall.exit", align 8, !dbg !4110
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.4 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"dmabuf\00", align 1
@dma_buf_fops = internal constant %struct.file_operations { %struct.module* null, i64 (%struct.file*, i64, i32)* @dma_buf_llseek, i64 (%struct.file*, i8*, i64, i64*)* null, i64 (%struct.file*, i8*, i64, i64*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i32 (%struct.kiocb*, i1)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.poll_table_struct*)* @dma_buf_poll, i64 (%struct.file*, i32, i64)* @dma_buf_ioctl, i64 (%struct.file*, i32, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* @dma_buf_mmap_internal, i64 0, i32 (%struct.inode*, %struct.file*)* null, i32 (%struct.file*, i8*)* null, i32 (%struct.inode*, %struct.file*)* null, i32 (%struct.file*, i64, i64, i32)* null, i32 (i32, %struct.file*, i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)* null, i64 (%struct.file*, i64, i64, i64, i64)* null, i32 (i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)* null, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)* null, i32 (%struct.file*, i64, %struct.file_lock**, i8**)* null, i64 (%struct.file*, i32, i64, i64)* null, void (%struct.seq_file*, %struct.file*)* @dma_buf_show_fdinfo, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i32 (%struct.file*, i64, i64, i32)* null }, align 8, !dbg !4123
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.6 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.7 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"size:\09%zu\0A\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"count:\09%ld\0A\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"exp_name:\09%s\0A\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"name:\09%s\0A\00", align 1
@dma_buf_fs_type = internal global %struct.file_system_type { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i32 0, i32 0), i32 0, i32 (%struct.fs_context*)* @dma_buf_fs_init_context, %struct.fs_parameter_spec* null, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)* null, void (%struct.super_block*)* @kill_anon_super, %struct.module* null, %struct.file_system_type* null, %struct.hlist_head zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, [3 x %struct.lock_class_key] zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer }, align 8, !dbg !4130
@dma_buf_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4125
@.str.12 = private unnamed_addr constant [14 x i8] c"&db_list.lock\00", align 1
@dma_buf_dentry_ops = internal constant %struct.dentry_operations { i32 (%struct.dentry*, i32)* null, i32 (%struct.dentry*, i32)* null, i32 (%struct.dentry*, %struct.qstr*)* null, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)* null, i32 (%struct.dentry*)* null, i32 (%struct.dentry*)* null, void (%struct.dentry*)* @dma_buf_release, void (%struct.dentry*)* null, void (%struct.dentry*, %struct.inode*)* null, i8* (%struct.dentry*, i8*, i32)* @dmabuffs_dname, %struct.vfsmount* (%struct.path*)* null, i32 (%struct.path*, i1)* null, %struct.dentry* (%struct.dentry*, %struct.inode*)* null, [24 x i8] undef }, align 64, !dbg !4132
@.str.13 = private unnamed_addr constant [7 x i8] c"/%s:%s\00", align 1
@.str.14 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@llvm.used = appending global [3 x i8*] [i8* bitcast (i8** @__UNIQUE_ID___addressable_dma_buf_init268 to i8*), i8* bitcast (void ()* @dma_buf_deinit to i8*), i8* bitcast (void ()** @__exitcall_dma_buf_deinit to i8*)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dma_buf* @dma_buf_export(%struct.dma_buf_export_info* %exp_info) #0 !dbg !2 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4140, metadata !DIExpression()), !dbg !4146
  %retval = alloca %struct.dma_buf*, align 8
  %exp_info.addr = alloca %struct.dma_buf_export_info*, align 8
  %dmabuf = alloca %struct.dma_buf*, align 8
  %resv = alloca %struct.dma_resv*, align 8
  %file = alloca %struct.file*, align 8
  %alloc_size = alloca i64, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on39 = alloca i32, align 4
  %tmp70 = alloca i64, align 8
  %__ret_warn_on81 = alloca i32, align 4
  %tmp114 = alloca i64, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  store %struct.dma_buf_export_info* %exp_info, %struct.dma_buf_export_info** %exp_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_buf_export_info** %exp_info.addr, metadata !4149, metadata !DIExpression()), !dbg !4150
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf, metadata !4151, metadata !DIExpression()), !dbg !4152
  call void @llvm.dbg.declare(metadata %struct.dma_resv** %resv, metadata !4153, metadata !DIExpression()), !dbg !4154
  %0 = load %struct.dma_buf_export_info*, %struct.dma_buf_export_info** %exp_info.addr, align 8, !dbg !4155
  %resv1 = getelementptr inbounds %struct.dma_buf_export_info, %struct.dma_buf_export_info* %0, i32 0, i32 5, !dbg !4156
  %1 = load %struct.dma_resv*, %struct.dma_resv** %resv1, align 8, !dbg !4156
  store %struct.dma_resv* %1, %struct.dma_resv** %resv, align 8, !dbg !4154
  call void @llvm.dbg.declare(metadata %struct.file** %file, metadata !4157, metadata !DIExpression()), !dbg !4158
  call void @llvm.dbg.declare(metadata i64* %alloc_size, metadata !4159, metadata !DIExpression()), !dbg !4160
  store i64 232, i64* %alloc_size, align 8, !dbg !4160
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4161, metadata !DIExpression()), !dbg !4162
  %2 = load %struct.dma_buf_export_info*, %struct.dma_buf_export_info** %exp_info.addr, align 8, !dbg !4163
  %resv2 = getelementptr inbounds %struct.dma_buf_export_info, %struct.dma_buf_export_info* %2, i32 0, i32 5, !dbg !4165
  %3 = load %struct.dma_resv*, %struct.dma_resv** %resv2, align 8, !dbg !4165
  %tobool = icmp ne %struct.dma_resv* %3, null, !dbg !4163
  br i1 %tobool, label %if.else, label %if.then, !dbg !4166

if.then:                                          ; preds = %entry
  %4 = load i64, i64* %alloc_size, align 8, !dbg !4167
  %add = add i64 %4, 56, !dbg !4167
  store i64 %add, i64* %alloc_size, align 8, !dbg !4167
  br label %if.end, !dbg !4168

if.else:                                          ; preds = %entry
  %5 = load i64, i64* %alloc_size, align 8, !dbg !4169
  %add3 = add i64 %5, 1, !dbg !4169
  store i64 %add3, i64* %alloc_size, align 8, !dbg !4169
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !4170, metadata !DIExpression()), !dbg !4173
  %6 = load %struct.dma_buf_export_info*, %struct.dma_buf_export_info** %exp_info.addr, align 8, !dbg !4173
  %priv = getelementptr inbounds %struct.dma_buf_export_info, %struct.dma_buf_export_info* %6, i32 0, i32 6, !dbg !4173
  %7 = load i8*, i8** %priv, align 8, !dbg !4173
  %tobool4 = icmp ne i8* %7, null, !dbg !4173
  br i1 %tobool4, label %lor.lhs.false, label %lor.end, !dbg !4173

lor.lhs.false:                                    ; preds = %if.end
  %8 = load %struct.dma_buf_export_info*, %struct.dma_buf_export_info** %exp_info.addr, align 8, !dbg !4173
  %ops = getelementptr inbounds %struct.dma_buf_export_info, %struct.dma_buf_export_info* %8, i32 0, i32 2, !dbg !4173
  %9 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops, align 8, !dbg !4173
  %tobool5 = icmp ne %struct.dma_buf_ops* %9, null, !dbg !4173
  br i1 %tobool5, label %lor.lhs.false6, label %lor.end, !dbg !4173

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %10 = load %struct.dma_buf_export_info*, %struct.dma_buf_export_info** %exp_info.addr, align 8, !dbg !4173
  %ops7 = getelementptr inbounds %struct.dma_buf_export_info, %struct.dma_buf_export_info* %10, i32 0, i32 2, !dbg !4173
  %11 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops7, align 8, !dbg !4173
  %map_dma_buf = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %11, i32 0, i32 5, !dbg !4173
  %12 = load %struct.sg_table* (%struct.dma_buf_attachment*, i32)*, %struct.sg_table* (%struct.dma_buf_attachment*, i32)** %map_dma_buf, align 8, !dbg !4173
  %tobool8 = icmp ne %struct.sg_table* (%struct.dma_buf_attachment*, i32)* %12, null, !dbg !4173
  br i1 %tobool8, label %lor.lhs.false9, label %lor.end, !dbg !4173

lor.lhs.false9:                                   ; preds = %lor.lhs.false6
  %13 = load %struct.dma_buf_export_info*, %struct.dma_buf_export_info** %exp_info.addr, align 8, !dbg !4173
  %ops10 = getelementptr inbounds %struct.dma_buf_export_info, %struct.dma_buf_export_info* %13, i32 0, i32 2, !dbg !4173
  %14 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops10, align 8, !dbg !4173
  %unmap_dma_buf = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %14, i32 0, i32 6, !dbg !4173
  %15 = load void (%struct.dma_buf_attachment*, %struct.sg_table*, i32)*, void (%struct.dma_buf_attachment*, %struct.sg_table*, i32)** %unmap_dma_buf, align 8, !dbg !4173
  %tobool11 = icmp ne void (%struct.dma_buf_attachment*, %struct.sg_table*, i32)* %15, null, !dbg !4173
  br i1 %tobool11, label %lor.rhs, label %lor.end, !dbg !4173

lor.rhs:                                          ; preds = %lor.lhs.false9
  %16 = load %struct.dma_buf_export_info*, %struct.dma_buf_export_info** %exp_info.addr, align 8, !dbg !4173
  %ops12 = getelementptr inbounds %struct.dma_buf_export_info, %struct.dma_buf_export_info* %16, i32 0, i32 2, !dbg !4173
  %17 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops12, align 8, !dbg !4173
  %release = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %17, i32 0, i32 7, !dbg !4173
  %18 = load void (%struct.dma_buf*)*, void (%struct.dma_buf*)** %release, align 8, !dbg !4173
  %tobool13 = icmp ne void (%struct.dma_buf*)* %18, null, !dbg !4173
  %lnot = xor i1 %tobool13, true, !dbg !4173
  br label %lor.end, !dbg !4173

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false9, %lor.lhs.false6, %lor.lhs.false, %if.end
  %19 = phi i1 [ true, %lor.lhs.false9 ], [ true, %lor.lhs.false6 ], [ true, %lor.lhs.false ], [ true, %if.end ], [ %lnot, %lor.rhs ]
  %lnot14 = xor i1 %19, true, !dbg !4173
  %lnot15 = xor i1 %lnot14, true, !dbg !4173
  %lnot.ext = zext i1 %lnot15 to i32, !dbg !4173
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !4173
  %20 = load i32, i32* %__ret_warn_on, align 4, !dbg !4174
  %tobool16 = icmp ne i32 %20, 0, !dbg !4174
  %lnot17 = xor i1 %tobool16, true, !dbg !4174
  %lnot19 = xor i1 %lnot17, true, !dbg !4174
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !4174
  %conv = sext i32 %lnot.ext20 to i64, !dbg !4174
  %tobool21 = icmp ne i64 %conv, 0, !dbg !4174
  br i1 %tobool21, label %if.then22, label %if.end29, !dbg !4173

if.then22:                                        ; preds = %lor.end
  br label %do.body, !dbg !4174

do.body:                                          ; preds = %if.then22
  br label %do.body23, !dbg !4176

do.body23:                                        ; preds = %do.body
  br label %do.end, !dbg !4178

do.end:                                           ; preds = %do.body23
  br label %do.body24, !dbg !4176

do.body24:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 524, i32 2305, i64 12) #9, !dbg !4180, !srcloc !4182
  br label %do.end25, !dbg !4180

do.end25:                                         ; preds = %do.body24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 246) #9, !dbg !4183, !srcloc !4185
  br label %do.body26, !dbg !4176

do.body26:                                        ; preds = %do.end25
  br label %do.end27, !dbg !4186

do.end27:                                         ; preds = %do.body26
  br label %do.end28, !dbg !4176

do.end28:                                         ; preds = %do.end27
  br label %if.end29, !dbg !4176

if.end29:                                         ; preds = %do.end28, %lor.end
  %21 = load i32, i32* %__ret_warn_on, align 4, !dbg !4173
  %tobool30 = icmp ne i32 %21, 0, !dbg !4173
  %lnot31 = xor i1 %tobool30, true, !dbg !4173
  %lnot33 = xor i1 %lnot31, true, !dbg !4173
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !4173
  %conv35 = sext i32 %lnot.ext34 to i64, !dbg !4173
  store i64 %conv35, i64* %tmp, align 8, !dbg !4174
  %22 = load i64, i64* %tmp, align 8, !dbg !4173
  %tobool36 = icmp ne i64 %22, 0, !dbg !4188
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !4189

if.then37:                                        ; preds = %if.end29
  %call = call i8* @ERR_PTR(i64 -22) #10, !dbg !4190
  %23 = bitcast i8* %call to %struct.dma_buf*, !dbg !4190
  store %struct.dma_buf* %23, %struct.dma_buf** %retval, align 8, !dbg !4192
  br label %return, !dbg !4192

if.end38:                                         ; preds = %if.end29
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on39, metadata !4193, metadata !DIExpression()), !dbg !4196
  %24 = load %struct.dma_buf_export_info*, %struct.dma_buf_export_info** %exp_info.addr, align 8, !dbg !4196
  %ops40 = getelementptr inbounds %struct.dma_buf_export_info, %struct.dma_buf_export_info* %24, i32 0, i32 2, !dbg !4196
  %25 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops40, align 8, !dbg !4196
  %cache_sgt_mapping = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %25, i32 0, i32 0, !dbg !4196
  %26 = load i8, i8* %cache_sgt_mapping, align 8, !dbg !4196
  %tobool41 = trunc i8 %26 to i1, !dbg !4196
  br i1 %tobool41, label %land.rhs, label %land.end, !dbg !4196

land.rhs:                                         ; preds = %if.end38
  %27 = load %struct.dma_buf_export_info*, %struct.dma_buf_export_info** %exp_info.addr, align 8, !dbg !4196
  %ops43 = getelementptr inbounds %struct.dma_buf_export_info, %struct.dma_buf_export_info* %27, i32 0, i32 2, !dbg !4196
  %28 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops43, align 8, !dbg !4196
  %pin = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %28, i32 0, i32 3, !dbg !4196
  %29 = load i32 (%struct.dma_buf_attachment*)*, i32 (%struct.dma_buf_attachment*)** %pin, align 8, !dbg !4196
  %tobool44 = icmp ne i32 (%struct.dma_buf_attachment*)* %29, null, !dbg !4196
  br i1 %tobool44, label %lor.end48, label %lor.rhs45, !dbg !4196

lor.rhs45:                                        ; preds = %land.rhs
  %30 = load %struct.dma_buf_export_info*, %struct.dma_buf_export_info** %exp_info.addr, align 8, !dbg !4196
  %ops46 = getelementptr inbounds %struct.dma_buf_export_info, %struct.dma_buf_export_info* %30, i32 0, i32 2, !dbg !4196
  %31 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops46, align 8, !dbg !4196
  %unpin = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %31, i32 0, i32 4, !dbg !4196
  %32 = load void (%struct.dma_buf_attachment*)*, void (%struct.dma_buf_attachment*)** %unpin, align 8, !dbg !4196
  %tobool47 = icmp ne void (%struct.dma_buf_attachment*)* %32, null, !dbg !4196
  br label %lor.end48, !dbg !4196

lor.end48:                                        ; preds = %lor.rhs45, %land.rhs
  %33 = phi i1 [ true, %land.rhs ], [ %tobool47, %lor.rhs45 ]
  br label %land.end

land.end:                                         ; preds = %lor.end48, %if.end38
  %34 = phi i1 [ false, %if.end38 ], [ %33, %lor.end48 ], !dbg !4197
  %lnot49 = xor i1 %34, true, !dbg !4196
  %lnot51 = xor i1 %lnot49, true, !dbg !4196
  %lnot.ext52 = zext i1 %lnot51 to i32, !dbg !4196
  store i32 %lnot.ext52, i32* %__ret_warn_on39, align 4, !dbg !4196
  %35 = load i32, i32* %__ret_warn_on39, align 4, !dbg !4198
  %tobool53 = icmp ne i32 %35, 0, !dbg !4198
  %lnot54 = xor i1 %tobool53, true, !dbg !4198
  %lnot56 = xor i1 %lnot54, true, !dbg !4198
  %lnot.ext57 = zext i1 %lnot56 to i32, !dbg !4198
  %conv58 = sext i32 %lnot.ext57 to i64, !dbg !4198
  %tobool59 = icmp ne i64 %conv58, 0, !dbg !4198
  br i1 %tobool59, label %if.then60, label %if.end69, !dbg !4196

if.then60:                                        ; preds = %land.end
  br label %do.body61, !dbg !4198

do.body61:                                        ; preds = %if.then60
  br label %do.body62, !dbg !4200

do.body62:                                        ; preds = %do.body61
  br label %do.end63, !dbg !4202

do.end63:                                         ; preds = %do.body62
  br label %do.body64, !dbg !4200

do.body64:                                        ; preds = %do.end63
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 529, i32 2305, i64 12) #9, !dbg !4204, !srcloc !4206
  br label %do.end65, !dbg !4204

do.end65:                                         ; preds = %do.body64
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 247) #9, !dbg !4207, !srcloc !4209
  br label %do.body66, !dbg !4200

do.body66:                                        ; preds = %do.end65
  br label %do.end67, !dbg !4210

do.end67:                                         ; preds = %do.body66
  br label %do.end68, !dbg !4200

do.end68:                                         ; preds = %do.end67
  br label %if.end69, !dbg !4200

if.end69:                                         ; preds = %do.end68, %land.end
  %36 = load i32, i32* %__ret_warn_on39, align 4, !dbg !4196
  %tobool71 = icmp ne i32 %36, 0, !dbg !4196
  %lnot72 = xor i1 %tobool71, true, !dbg !4196
  %lnot74 = xor i1 %lnot72, true, !dbg !4196
  %lnot.ext75 = zext i1 %lnot74 to i32, !dbg !4196
  %conv76 = sext i32 %lnot.ext75 to i64, !dbg !4196
  store i64 %conv76, i64* %tmp70, align 8, !dbg !4198
  %37 = load i64, i64* %tmp70, align 8, !dbg !4196
  %tobool77 = icmp ne i64 %37, 0, !dbg !4212
  br i1 %tobool77, label %if.then78, label %if.end80, !dbg !4213

if.then78:                                        ; preds = %if.end69
  %call79 = call i8* @ERR_PTR(i64 -22) #10, !dbg !4214
  %38 = bitcast i8* %call79 to %struct.dma_buf*, !dbg !4214
  store %struct.dma_buf* %38, %struct.dma_buf** %retval, align 8, !dbg !4215
  br label %return, !dbg !4215

if.end80:                                         ; preds = %if.end69
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on81, metadata !4216, metadata !DIExpression()), !dbg !4219
  %39 = load %struct.dma_buf_export_info*, %struct.dma_buf_export_info** %exp_info.addr, align 8, !dbg !4219
  %ops82 = getelementptr inbounds %struct.dma_buf_export_info, %struct.dma_buf_export_info* %39, i32 0, i32 2, !dbg !4219
  %40 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops82, align 8, !dbg !4219
  %pin83 = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %40, i32 0, i32 3, !dbg !4219
  %41 = load i32 (%struct.dma_buf_attachment*)*, i32 (%struct.dma_buf_attachment*)** %pin83, align 8, !dbg !4219
  %tobool84 = icmp ne i32 (%struct.dma_buf_attachment*)* %41, null, !dbg !4219
  %lnot85 = xor i1 %tobool84, true, !dbg !4219
  %lnot.ext86 = zext i1 %lnot85 to i32, !dbg !4219
  %42 = load %struct.dma_buf_export_info*, %struct.dma_buf_export_info** %exp_info.addr, align 8, !dbg !4219
  %ops87 = getelementptr inbounds %struct.dma_buf_export_info, %struct.dma_buf_export_info* %42, i32 0, i32 2, !dbg !4219
  %43 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops87, align 8, !dbg !4219
  %unpin88 = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %43, i32 0, i32 4, !dbg !4219
  %44 = load void (%struct.dma_buf_attachment*)*, void (%struct.dma_buf_attachment*)** %unpin88, align 8, !dbg !4219
  %tobool89 = icmp ne void (%struct.dma_buf_attachment*)* %44, null, !dbg !4219
  %lnot90 = xor i1 %tobool89, true, !dbg !4219
  %lnot.ext91 = zext i1 %lnot90 to i32, !dbg !4219
  %cmp = icmp ne i32 %lnot.ext86, %lnot.ext91, !dbg !4219
  %lnot93 = xor i1 %cmp, true, !dbg !4219
  %lnot95 = xor i1 %lnot93, true, !dbg !4219
  %lnot.ext96 = zext i1 %lnot95 to i32, !dbg !4219
  store i32 %lnot.ext96, i32* %__ret_warn_on81, align 4, !dbg !4219
  %45 = load i32, i32* %__ret_warn_on81, align 4, !dbg !4220
  %tobool97 = icmp ne i32 %45, 0, !dbg !4220
  %lnot98 = xor i1 %tobool97, true, !dbg !4220
  %lnot100 = xor i1 %lnot98, true, !dbg !4220
  %lnot.ext101 = zext i1 %lnot100 to i32, !dbg !4220
  %conv102 = sext i32 %lnot.ext101 to i64, !dbg !4220
  %tobool103 = icmp ne i64 %conv102, 0, !dbg !4220
  br i1 %tobool103, label %if.then104, label %if.end113, !dbg !4219

if.then104:                                       ; preds = %if.end80
  br label %do.body105, !dbg !4220

do.body105:                                       ; preds = %if.then104
  br label %do.body106, !dbg !4222

do.body106:                                       ; preds = %do.body105
  br label %do.end107, !dbg !4224

do.end107:                                        ; preds = %do.body106
  br label %do.body108, !dbg !4222

do.body108:                                       ; preds = %do.end107
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 532, i32 2305, i64 12) #9, !dbg !4226, !srcloc !4228
  br label %do.end109, !dbg !4226

do.end109:                                        ; preds = %do.body108
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 248) #9, !dbg !4229, !srcloc !4231
  br label %do.body110, !dbg !4222

do.body110:                                       ; preds = %do.end109
  br label %do.end111, !dbg !4232

do.end111:                                        ; preds = %do.body110
  br label %do.end112, !dbg !4222

do.end112:                                        ; preds = %do.end111
  br label %if.end113, !dbg !4222

if.end113:                                        ; preds = %do.end112, %if.end80
  %46 = load i32, i32* %__ret_warn_on81, align 4, !dbg !4219
  %tobool115 = icmp ne i32 %46, 0, !dbg !4219
  %lnot116 = xor i1 %tobool115, true, !dbg !4219
  %lnot118 = xor i1 %lnot116, true, !dbg !4219
  %lnot.ext119 = zext i1 %lnot118 to i32, !dbg !4219
  %conv120 = sext i32 %lnot.ext119 to i64, !dbg !4219
  store i64 %conv120, i64* %tmp114, align 8, !dbg !4220
  %47 = load i64, i64* %tmp114, align 8, !dbg !4219
  %tobool121 = icmp ne i64 %47, 0, !dbg !4234
  br i1 %tobool121, label %if.then122, label %if.end124, !dbg !4235

if.then122:                                       ; preds = %if.end113
  %call123 = call i8* @ERR_PTR(i64 -22) #10, !dbg !4236
  %48 = bitcast i8* %call123 to %struct.dma_buf*, !dbg !4236
  store %struct.dma_buf* %48, %struct.dma_buf** %retval, align 8, !dbg !4237
  br label %return, !dbg !4237

if.end124:                                        ; preds = %if.end113
  %49 = load %struct.dma_buf_export_info*, %struct.dma_buf_export_info** %exp_info.addr, align 8, !dbg !4238
  %owner = getelementptr inbounds %struct.dma_buf_export_info, %struct.dma_buf_export_info* %49, i32 0, i32 1, !dbg !4240
  %50 = load %struct.module*, %struct.module** %owner, align 8, !dbg !4240
  %call125 = call zeroext i1 @try_module_get(%struct.module* %50) #10, !dbg !4241
  br i1 %call125, label %if.end128, label %if.then126, !dbg !4242

if.then126:                                       ; preds = %if.end124
  %call127 = call i8* @ERR_PTR(i64 -2) #10, !dbg !4243
  %51 = bitcast i8* %call127 to %struct.dma_buf*, !dbg !4243
  store %struct.dma_buf* %51, %struct.dma_buf** %retval, align 8, !dbg !4244
  br label %return, !dbg !4244

if.end128:                                        ; preds = %if.end124
  %52 = load i64, i64* %alloc_size, align 8, !dbg !4245
  %call129 = call i8* @kzalloc(i64 %52, i32 3264) #10, !dbg !4246
  %53 = bitcast i8* %call129 to %struct.dma_buf*, !dbg !4246
  store %struct.dma_buf* %53, %struct.dma_buf** %dmabuf, align 8, !dbg !4247
  %54 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !4248
  %tobool130 = icmp ne %struct.dma_buf* %54, null, !dbg !4248
  br i1 %tobool130, label %if.end132, label %if.then131, !dbg !4250

if.then131:                                       ; preds = %if.end128
  store i32 -12, i32* %ret, align 4, !dbg !4251
  br label %err_module, !dbg !4253

if.end132:                                        ; preds = %if.end128
  %55 = load %struct.dma_buf_export_info*, %struct.dma_buf_export_info** %exp_info.addr, align 8, !dbg !4254
  %priv133 = getelementptr inbounds %struct.dma_buf_export_info, %struct.dma_buf_export_info* %55, i32 0, i32 6, !dbg !4255
  %56 = load i8*, i8** %priv133, align 8, !dbg !4255
  %57 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !4256
  %priv134 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %57, i32 0, i32 12, !dbg !4257
  store i8* %56, i8** %priv134, align 8, !dbg !4258
  %58 = load %struct.dma_buf_export_info*, %struct.dma_buf_export_info** %exp_info.addr, align 8, !dbg !4259
  %ops135 = getelementptr inbounds %struct.dma_buf_export_info, %struct.dma_buf_export_info* %58, i32 0, i32 2, !dbg !4260
  %59 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops135, align 8, !dbg !4260
  %60 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !4261
  %ops136 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %60, i32 0, i32 3, !dbg !4262
  store %struct.dma_buf_ops* %59, %struct.dma_buf_ops** %ops136, align 8, !dbg !4263
  %61 = load %struct.dma_buf_export_info*, %struct.dma_buf_export_info** %exp_info.addr, align 8, !dbg !4264
  %size = getelementptr inbounds %struct.dma_buf_export_info, %struct.dma_buf_export_info* %61, i32 0, i32 3, !dbg !4265
  %62 = load i64, i64* %size, align 8, !dbg !4265
  %63 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !4266
  %size137 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %63, i32 0, i32 0, !dbg !4267
  store i64 %62, i64* %size137, align 8, !dbg !4268
  %64 = load %struct.dma_buf_export_info*, %struct.dma_buf_export_info** %exp_info.addr, align 8, !dbg !4269
  %exp_name = getelementptr inbounds %struct.dma_buf_export_info, %struct.dma_buf_export_info* %64, i32 0, i32 0, !dbg !4270
  %65 = load i8*, i8** %exp_name, align 8, !dbg !4270
  %66 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !4271
  %exp_name138 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %66, i32 0, i32 7, !dbg !4272
  store i8* %65, i8** %exp_name138, align 8, !dbg !4273
  %67 = load %struct.dma_buf_export_info*, %struct.dma_buf_export_info** %exp_info.addr, align 8, !dbg !4274
  %owner139 = getelementptr inbounds %struct.dma_buf_export_info, %struct.dma_buf_export_info* %67, i32 0, i32 1, !dbg !4275
  %68 = load %struct.module*, %struct.module** %owner139, align 8, !dbg !4275
  %69 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !4276
  %owner140 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %69, i32 0, i32 10, !dbg !4277
  store %struct.module* %68, %struct.module** %owner140, align 8, !dbg !4278
  br label %do.body141, !dbg !4279

do.body141:                                       ; preds = %if.end132
  %70 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !4280
  %name_lock = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %70, i32 0, i32 9, !dbg !4280
  store %struct.spinlock* %name_lock, %struct.spinlock** %lock.addr.i, align 8
  %71 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4281
  %72 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %71, i32 0, i32 0, !dbg !4282
  %rlock.i = bitcast %union.anon.2* %72 to %struct.raw_spinlock*, !dbg !4282
  %73 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !4280
  %name_lock143 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %73, i32 0, i32 9, !dbg !4280
  %74 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !4280
  %rlock = bitcast %union.anon.2* %74 to %struct.raw_spinlock*, !dbg !4280
  %75 = bitcast %struct.spinlock* %name_lock143 to i8*, !dbg !4280
  %76 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !4280
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 1 %76, i64 0, i1 false), !dbg !4280
  br label %do.end144, !dbg !4280

do.end144:                                        ; preds = %do.body141
  br label %do.body145, !dbg !4283

do.body145:                                       ; preds = %do.end144
  %77 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !4284
  %poll = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %77, i32 0, i32 14, !dbg !4284
  call void @__init_waitqueue_head(%struct.wait_queue_head* %poll, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), %struct.lock_class_key* @dma_buf_export.__key) #10, !dbg !4284
  br label %do.end146, !dbg !4284

do.end146:                                        ; preds = %do.body145
  %78 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !4286
  %poll147 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %78, i32 0, i32 14, !dbg !4287
  %79 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !4288
  %cb_shared = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %79, i32 0, i32 16, !dbg !4289
  %poll148 = getelementptr inbounds %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t* %cb_shared, i32 0, i32 1, !dbg !4290
  store %struct.wait_queue_head* %poll147, %struct.wait_queue_head** %poll148, align 8, !dbg !4291
  %80 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !4292
  %cb_excl = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %80, i32 0, i32 15, !dbg !4293
  %poll149 = getelementptr inbounds %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t* %cb_excl, i32 0, i32 1, !dbg !4294
  store %struct.wait_queue_head* %poll147, %struct.wait_queue_head** %poll149, align 8, !dbg !4295
  %81 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !4296
  %cb_shared150 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %81, i32 0, i32 16, !dbg !4297
  %active = getelementptr inbounds %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t* %cb_shared150, i32 0, i32 2, !dbg !4298
  store i32 0, i32* %active, align 8, !dbg !4299
  %82 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !4300
  %cb_excl151 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %82, i32 0, i32 15, !dbg !4301
  %active152 = getelementptr inbounds %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t* %cb_excl151, i32 0, i32 2, !dbg !4302
  store i32 0, i32* %active152, align 8, !dbg !4303
  %83 = load %struct.dma_resv*, %struct.dma_resv** %resv, align 8, !dbg !4304
  %tobool153 = icmp ne %struct.dma_resv* %83, null, !dbg !4304
  br i1 %tobool153, label %if.end155, label %if.then154, !dbg !4306

if.then154:                                       ; preds = %do.end146
  %84 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !4307
  %arrayidx = getelementptr %struct.dma_buf, %struct.dma_buf* %84, i64 1, !dbg !4307
  %85 = bitcast %struct.dma_buf* %arrayidx to %struct.dma_resv*, !dbg !4309
  store %struct.dma_resv* %85, %struct.dma_resv** %resv, align 8, !dbg !4310
  %86 = load %struct.dma_resv*, %struct.dma_resv** %resv, align 8, !dbg !4311
  call void @dma_resv_init(%struct.dma_resv* %86) #10, !dbg !4312
  br label %if.end155, !dbg !4313

if.end155:                                        ; preds = %if.then154, %do.end146
  %87 = load %struct.dma_resv*, %struct.dma_resv** %resv, align 8, !dbg !4314
  %88 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !4315
  %resv156 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %88, i32 0, i32 13, !dbg !4316
  store %struct.dma_resv* %87, %struct.dma_resv** %resv156, align 8, !dbg !4317
  %89 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !4318
  %90 = load %struct.dma_buf_export_info*, %struct.dma_buf_export_info** %exp_info.addr, align 8, !dbg !4319
  %flags = getelementptr inbounds %struct.dma_buf_export_info, %struct.dma_buf_export_info* %90, i32 0, i32 4, !dbg !4320
  %91 = load i32, i32* %flags, align 8, !dbg !4320
  %call157 = call %struct.file* @dma_buf_getfile(%struct.dma_buf* %89, i32 %91) #10, !dbg !4321
  store %struct.file* %call157, %struct.file** %file, align 8, !dbg !4322
  %92 = load %struct.file*, %struct.file** %file, align 8, !dbg !4323
  %93 = bitcast %struct.file* %92 to i8*, !dbg !4323
  %call158 = call zeroext i1 @IS_ERR(i8* %93) #10, !dbg !4325
  br i1 %call158, label %if.then159, label %if.end162, !dbg !4326

if.then159:                                       ; preds = %if.end155
  %94 = load %struct.file*, %struct.file** %file, align 8, !dbg !4327
  %95 = bitcast %struct.file* %94 to i8*, !dbg !4327
  %call160 = call i64 @PTR_ERR(i8* %95) #10, !dbg !4329
  %conv161 = trunc i64 %call160 to i32, !dbg !4329
  store i32 %conv161, i32* %ret, align 4, !dbg !4330
  br label %err_dmabuf, !dbg !4331

if.end162:                                        ; preds = %if.end155
  %96 = load %struct.file*, %struct.file** %file, align 8, !dbg !4332
  %f_mode = getelementptr inbounds %struct.file, %struct.file* %96, i32 0, i32 8, !dbg !4333
  %97 = load i32, i32* %f_mode, align 4, !dbg !4334
  %or = or i32 %97, 4, !dbg !4334
  store i32 %or, i32* %f_mode, align 4, !dbg !4334
  %98 = load %struct.file*, %struct.file** %file, align 8, !dbg !4335
  %99 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !4336
  %file163 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %99, i32 0, i32 1, !dbg !4337
  store %struct.file* %98, %struct.file** %file163, align 8, !dbg !4338
  br label %do.body164, !dbg !4339

do.body164:                                       ; preds = %if.end162
  %100 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !4340
  %lock = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %100, i32 0, i32 4, !dbg !4340
  call void @__mutex_init(%struct.mutex* %lock, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), %struct.lock_class_key* @dma_buf_export.__key.2) #10, !dbg !4340
  br label %do.end165, !dbg !4340

do.end165:                                        ; preds = %do.body164
  %101 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !4342
  %attachments = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %101, i32 0, i32 2, !dbg !4343
  call void @INIT_LIST_HEAD(%struct.list_head* %attachments) #10, !dbg !4344
  call void @mutex_lock(%struct.mutex* getelementptr inbounds (%struct.dma_buf_list, %struct.dma_buf_list* @db_list, i32 0, i32 1)) #10, !dbg !4345
  %102 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !4346
  %list_node = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %102, i32 0, i32 11, !dbg !4347
  call void @list_add(%struct.list_head* %list_node, %struct.list_head* getelementptr inbounds (%struct.dma_buf_list, %struct.dma_buf_list* @db_list, i32 0, i32 0)) #10, !dbg !4348
  call void @mutex_unlock(%struct.mutex* getelementptr inbounds (%struct.dma_buf_list, %struct.dma_buf_list* @db_list, i32 0, i32 1)) #10, !dbg !4349
  %103 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !4350
  store %struct.dma_buf* %103, %struct.dma_buf** %retval, align 8, !dbg !4351
  br label %return, !dbg !4351

err_dmabuf:                                       ; preds = %if.then159
  call void @llvm.dbg.label(metadata !4352), !dbg !4353
  %104 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !4354
  %105 = bitcast %struct.dma_buf* %104 to i8*, !dbg !4354
  call void @kfree(i8* %105) #10, !dbg !4355
  br label %err_module, !dbg !4355

err_module:                                       ; preds = %err_dmabuf, %if.then131
  call void @llvm.dbg.label(metadata !4356), !dbg !4357
  %106 = load %struct.dma_buf_export_info*, %struct.dma_buf_export_info** %exp_info.addr, align 8, !dbg !4358
  %owner166 = getelementptr inbounds %struct.dma_buf_export_info, %struct.dma_buf_export_info* %106, i32 0, i32 1, !dbg !4359
  %107 = load %struct.module*, %struct.module** %owner166, align 8, !dbg !4359
  call void @module_put(%struct.module* %107) #10, !dbg !4360
  %108 = load i32, i32* %ret, align 4, !dbg !4361
  %conv167 = sext i32 %108 to i64, !dbg !4361
  %call168 = call i8* @ERR_PTR(i64 %conv167) #10, !dbg !4362
  %109 = bitcast i8* %call168 to %struct.dma_buf*, !dbg !4362
  store %struct.dma_buf* %109, %struct.dma_buf** %retval, align 8, !dbg !4363
  br label %return, !dbg !4363

return:                                           ; preds = %err_module, %do.end165, %if.then126, %if.then122, %if.then78, %if.then37
  %110 = load %struct.dma_buf*, %struct.dma_buf** %retval, align 8, !dbg !4364
  ret %struct.dma_buf* %110, !dbg !4364
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !4365 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !4369, metadata !DIExpression()), !dbg !4370
  %0 = load i64, i64* %error.addr, align 8, !dbg !4371
  %1 = inttoptr i64 %0 to i8*, !dbg !4372
  ret i8* %1, !dbg !4373
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @try_module_get(%struct.module* %module) #0 !dbg !4374 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !4378, metadata !DIExpression()), !dbg !4379
  ret i1 true, !dbg !4380
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !4381 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !4384, metadata !DIExpression()), !dbg !4388
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !4394, metadata !DIExpression()), !dbg !4395
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !4396, metadata !DIExpression()), !dbg !4397
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !4398, metadata !DIExpression()), !dbg !4399
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !4400, metadata !DIExpression()), !dbg !4404
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !4406, metadata !DIExpression()), !dbg !4410
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !4412, metadata !DIExpression()), !dbg !4416
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !4421, metadata !DIExpression()), !dbg !4422
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !4423, metadata !DIExpression()), !dbg !4424
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4425, metadata !DIExpression()), !dbg !4426
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !4427, metadata !DIExpression()), !dbg !4428
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !4429, metadata !DIExpression()), !dbg !4430
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4431, metadata !DIExpression()), !dbg !4432
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !4433, metadata !DIExpression()), !dbg !4434
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !4435, metadata !DIExpression()), !dbg !4436
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !4437, metadata !DIExpression()), !dbg !4438
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !4439, metadata !DIExpression()), !dbg !4440
  %0 = load i64, i64* %size.addr, align 8, !dbg !4441
  %1 = load i32, i32* %flags.addr, align 4, !dbg !4442
  %or = or i32 %1, 256, !dbg !4443
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !4444
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #9, !dbg !4445
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !4446

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !4447
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !4448
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !4449

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !4450
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !4451
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !4452
  %call.i.i = call i32 @get_order(i64 %7) #11, !dbg !4453
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !4430
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !4454
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !4455
  %10 = load i32, i32* %order.i.i, align 4, !dbg !4456
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !4457
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !4458
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !4459
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !4460
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !4460
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !4460
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !4460
  call void @llvm.assume(i1 %maskcond.i.i.i) #9, !dbg !4460
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !4461
  br label %kmalloc.exit, !dbg !4461

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !4462
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4463
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !4463
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !4465

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !4466
  br label %kmalloc_index.exit.i, !dbg !4466

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4467
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !4469
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !4470

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !4471
  br label %kmalloc_index.exit.i, !dbg !4471

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4472
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !4474
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !4475

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4476
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !4477
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !4478

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !4479
  br label %kmalloc_index.exit.i, !dbg !4479

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4480
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !4482
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !4483

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4484
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !4485
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !4486

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !4487
  br label %kmalloc_index.exit.i, !dbg !4487

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4488
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !4490
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !4491

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !4492
  br label %kmalloc_index.exit.i, !dbg !4492

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4493
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !4495
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !4496

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !4497
  br label %kmalloc_index.exit.i, !dbg !4497

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4498
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !4500
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !4501

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !4502
  br label %kmalloc_index.exit.i, !dbg !4502

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4503
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !4505
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !4506

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !4507
  br label %kmalloc_index.exit.i, !dbg !4507

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4508
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !4510
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !4511

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !4512
  br label %kmalloc_index.exit.i, !dbg !4512

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4513
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !4515
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !4516

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !4517
  br label %kmalloc_index.exit.i, !dbg !4517

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4518
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !4520
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !4521

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !4522
  br label %kmalloc_index.exit.i, !dbg !4522

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4523
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !4525
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !4526

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !4527
  br label %kmalloc_index.exit.i, !dbg !4527

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4528
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !4530
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !4531

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !4532
  br label %kmalloc_index.exit.i, !dbg !4532

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4533
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !4535
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !4536

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !4537
  br label %kmalloc_index.exit.i, !dbg !4537

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4538
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !4540
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !4541

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !4542
  br label %kmalloc_index.exit.i, !dbg !4542

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4543
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !4545
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !4546

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !4547
  br label %kmalloc_index.exit.i, !dbg !4547

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4548
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !4550
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !4551

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !4552
  br label %kmalloc_index.exit.i, !dbg !4552

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4553
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !4555
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !4556

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !4557
  br label %kmalloc_index.exit.i, !dbg !4557

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4558
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !4560
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !4561

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !4562
  br label %kmalloc_index.exit.i, !dbg !4562

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4563
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !4565
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !4566

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !4567
  br label %kmalloc_index.exit.i, !dbg !4567

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4568
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !4570
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !4571

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !4572
  br label %kmalloc_index.exit.i, !dbg !4572

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4573
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !4575
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !4576

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !4577
  br label %kmalloc_index.exit.i, !dbg !4577

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4578
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !4580
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !4581

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !4582
  br label %kmalloc_index.exit.i, !dbg !4582

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4583
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !4585
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !4586

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !4587
  br label %kmalloc_index.exit.i, !dbg !4587

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4588
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !4590
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !4591

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !4592
  br label %kmalloc_index.exit.i, !dbg !4592

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4593
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !4595
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !4596

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !4597
  br label %kmalloc_index.exit.i, !dbg !4597

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4598
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !4600
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !4601

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !4602
  br label %kmalloc_index.exit.i, !dbg !4602

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4603
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !4605
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !4606

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !4607
  br label %kmalloc_index.exit.i, !dbg !4607

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i32 382, i32 0, i64 12) #9, !dbg !4608, !srcloc !4611
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 190) #9, !dbg !4612, !srcloc !4615
  unreachable, !dbg !4616

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !4617
  store i32 %45, i32* %index.i, align 4, !dbg !4618
  %46 = load i32, i32* %index.i, align 4, !dbg !4619
  %tobool.i = icmp ne i32 %46, 0, !dbg !4619
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !4621

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !4622
  br label %kmalloc.exit, !dbg !4622

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !4623
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !4624
  %and.i.i = and i32 %48, 17, !dbg !4624
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !4624
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !4624
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !4624
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !4624
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !4626

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !4627
  br label %kmalloc_type.exit.i, !dbg !4627

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !4628
  %and2.i.i = and i32 %49, 1, !dbg !4629
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !4628
  %50 = zext i1 %tobool3.i.i to i64, !dbg !4628
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !4628
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !4630
  br label %kmalloc_type.exit.i, !dbg !4630

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !4631
  %idxprom.i = zext i32 %51 to i64, !dbg !4632
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !4632
  %52 = load i32, i32* %index.i, align 4, !dbg !4633
  %idxprom6.i = zext i32 %52 to i64, !dbg !4632
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !4632
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !4632
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !4634
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !4635
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !4636
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !4637
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !4638
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !4638
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !4638
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !4638
  call void @llvm.assume(i1 %maskcond.i.i) #9, !dbg !4638
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !4399
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !4639
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !4640
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !4641
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !4642
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !4643
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !4644
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !4645
  store i8* %62, i8** %retval.i, align 8, !dbg !4646
  br label %kmalloc.exit, !dbg !4646

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !4647
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !4648
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !4649
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !4649
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !4649
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !4649
  call void @llvm.assume(i1 %maskcond.i) #9, !dbg !4649
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !4650
  br label %kmalloc.exit, !dbg !4650

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !4651
  ret i8* %65, !dbg !4652
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noredzone
declare dso_local void @__init_waitqueue_head(%struct.wait_queue_head*, i8*, %struct.lock_class_key*) #3

; Function Attrs: noredzone
declare dso_local void @dma_resv_init(%struct.dma_resv*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.file* @dma_buf_getfile(%struct.dma_buf* %dmabuf, i32 %flags) #0 !dbg !4653 {
entry:
  %retval = alloca %struct.file*, align 8
  %dmabuf.addr = alloca %struct.dma_buf*, align 8
  %flags.addr = alloca i32, align 4
  %file = alloca %struct.file*, align 8
  %inode = alloca %struct.inode*, align 8
  store %struct.dma_buf* %dmabuf, %struct.dma_buf** %dmabuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf.addr, metadata !4656, metadata !DIExpression()), !dbg !4657
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !4658, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.declare(metadata %struct.file** %file, metadata !4660, metadata !DIExpression()), !dbg !4661
  call void @llvm.dbg.declare(metadata %struct.inode** %inode, metadata !4662, metadata !DIExpression()), !dbg !4663
  %0 = load %struct.vfsmount*, %struct.vfsmount** @dma_buf_mnt, align 8, !dbg !4664
  %mnt_sb = getelementptr inbounds %struct.vfsmount, %struct.vfsmount* %0, i32 0, i32 1, !dbg !4665
  %1 = load %struct.super_block*, %struct.super_block** %mnt_sb, align 8, !dbg !4665
  %call = call %struct.inode* @alloc_anon_inode(%struct.super_block* %1) #10, !dbg !4666
  store %struct.inode* %call, %struct.inode** %inode, align 8, !dbg !4663
  %2 = load %struct.inode*, %struct.inode** %inode, align 8, !dbg !4667
  %3 = bitcast %struct.inode* %2 to i8*, !dbg !4667
  %call1 = call zeroext i1 @IS_ERR(i8* %3) #10, !dbg !4669
  br i1 %call1, label %if.then, label %if.end, !dbg !4670

if.then:                                          ; preds = %entry
  %4 = load %struct.inode*, %struct.inode** %inode, align 8, !dbg !4671
  %5 = bitcast %struct.inode* %4 to i8*, !dbg !4671
  %call2 = call i8* @ERR_CAST(i8* %5) #10, !dbg !4672
  %6 = bitcast i8* %call2 to %struct.file*, !dbg !4672
  store %struct.file* %6, %struct.file** %retval, align 8, !dbg !4673
  br label %return, !dbg !4673

if.end:                                           ; preds = %entry
  %7 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !4674
  %size = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %7, i32 0, i32 0, !dbg !4675
  %8 = load i64, i64* %size, align 8, !dbg !4675
  %9 = load %struct.inode*, %struct.inode** %inode, align 8, !dbg !4676
  %i_size = getelementptr inbounds %struct.inode, %struct.inode* %9, i32 0, i32 11, !dbg !4677
  store i64 %8, i64* %i_size, align 8, !dbg !4678
  %10 = load %struct.inode*, %struct.inode** %inode, align 8, !dbg !4679
  %11 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !4680
  %size3 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %11, i32 0, i32 0, !dbg !4681
  %12 = load i64, i64* %size3, align 8, !dbg !4681
  call void @inode_set_bytes(%struct.inode* %10, i64 %12) #10, !dbg !4682
  %13 = load %struct.inode*, %struct.inode** %inode, align 8, !dbg !4683
  %14 = load %struct.vfsmount*, %struct.vfsmount** @dma_buf_mnt, align 8, !dbg !4684
  %15 = load i32, i32* %flags.addr, align 4, !dbg !4685
  %call4 = call %struct.file* @alloc_file_pseudo(%struct.inode* %13, %struct.vfsmount* %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i32 %15, %struct.file_operations* @dma_buf_fops) #10, !dbg !4686
  store %struct.file* %call4, %struct.file** %file, align 8, !dbg !4687
  %16 = load %struct.file*, %struct.file** %file, align 8, !dbg !4688
  %17 = bitcast %struct.file* %16 to i8*, !dbg !4688
  %call5 = call zeroext i1 @IS_ERR(i8* %17) #10, !dbg !4690
  br i1 %call5, label %if.then6, label %if.end7, !dbg !4691

if.then6:                                         ; preds = %if.end
  br label %err_alloc_file, !dbg !4692

if.end7:                                          ; preds = %if.end
  %18 = load i32, i32* %flags.addr, align 4, !dbg !4693
  %and = and i32 %18, 2051, !dbg !4694
  %19 = load %struct.file*, %struct.file** %file, align 8, !dbg !4695
  %f_flags = getelementptr inbounds %struct.file, %struct.file* %19, i32 0, i32 7, !dbg !4696
  store i32 %and, i32* %f_flags, align 8, !dbg !4697
  %20 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !4698
  %21 = bitcast %struct.dma_buf* %20 to i8*, !dbg !4698
  %22 = load %struct.file*, %struct.file** %file, align 8, !dbg !4699
  %private_data = getelementptr inbounds %struct.file, %struct.file* %22, i32 0, i32 15, !dbg !4700
  store i8* %21, i8** %private_data, align 8, !dbg !4701
  %23 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !4702
  %24 = bitcast %struct.dma_buf* %23 to i8*, !dbg !4702
  %25 = load %struct.file*, %struct.file** %file, align 8, !dbg !4703
  %f_path = getelementptr inbounds %struct.file, %struct.file* %25, i32 0, i32 1, !dbg !4704
  %dentry = getelementptr inbounds %struct.path, %struct.path* %f_path, i32 0, i32 1, !dbg !4705
  %26 = load %struct.dentry*, %struct.dentry** %dentry, align 8, !dbg !4705
  %d_fsdata = getelementptr inbounds %struct.dentry, %struct.dentry* %26, i32 0, i32 11, !dbg !4706
  store i8* %24, i8** %d_fsdata, align 8, !dbg !4707
  %27 = load %struct.file*, %struct.file** %file, align 8, !dbg !4708
  store %struct.file* %27, %struct.file** %retval, align 8, !dbg !4709
  br label %return, !dbg !4709

err_alloc_file:                                   ; preds = %if.then6
  call void @llvm.dbg.label(metadata !4710), !dbg !4711
  %28 = load %struct.inode*, %struct.inode** %inode, align 8, !dbg !4712
  call void @iput(%struct.inode* %28) #10, !dbg !4713
  %29 = load %struct.file*, %struct.file** %file, align 8, !dbg !4714
  store %struct.file* %29, %struct.file** %retval, align 8, !dbg !4715
  br label %return, !dbg !4715

return:                                           ; preds = %err_alloc_file, %if.end7, %if.then
  %30 = load %struct.file*, %struct.file** %retval, align 8, !dbg !4716
  ret %struct.file* %30, !dbg !4716
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !4717 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !4720, metadata !DIExpression()), !dbg !4721
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !4722
  %1 = ptrtoint i8* %0 to i64, !dbg !4722
  %2 = inttoptr i64 %1 to i8*, !dbg !4722
  %3 = ptrtoint i8* %2 to i64, !dbg !4722
  %cmp = icmp uge i64 %3, -4095, !dbg !4722
  %lnot = xor i1 %cmp, true, !dbg !4722
  %lnot1 = xor i1 %lnot, true, !dbg !4722
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !4722
  %conv = sext i32 %lnot.ext to i64, !dbg !4722
  %tobool = icmp ne i64 %conv, 0, !dbg !4722
  ret i1 %tobool, !dbg !4723
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !4724 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !4727, metadata !DIExpression()), !dbg !4728
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !4729
  %1 = ptrtoint i8* %0 to i64, !dbg !4730
  ret i64 %1, !dbg !4731
}

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !4732 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !4736, metadata !DIExpression()), !dbg !4737
  br label %do.body, !dbg !4738

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !4739

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !4741

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !4739

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !4743
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !4743
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !4743
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !4743
  br label %do.end3, !dbg !4743

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !4739

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !4745
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !4746
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !4747
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !4748
  ret void, !dbg !4749
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !4750 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !4753, metadata !DIExpression()), !dbg !4754
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !4755, metadata !DIExpression()), !dbg !4756
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !4757
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !4758
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !4759
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !4760
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !4760
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #10, !dbg !4761
  ret void, !dbg !4762
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @module_put(%struct.module* %module) #0 !dbg !4763 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !4766, metadata !DIExpression()), !dbg !4767
  ret void, !dbg !4768
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dma_buf_fd(%struct.dma_buf* %dmabuf, i32 %flags) #0 !dbg !4769 {
entry:
  %retval = alloca i32, align 4
  %dmabuf.addr = alloca %struct.dma_buf*, align 8
  %flags.addr = alloca i32, align 4
  %fd = alloca i32, align 4
  store %struct.dma_buf* %dmabuf, %struct.dma_buf** %dmabuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf.addr, metadata !4772, metadata !DIExpression()), !dbg !4773
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !4774, metadata !DIExpression()), !dbg !4775
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !4776, metadata !DIExpression()), !dbg !4777
  %0 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !4778
  %tobool = icmp ne %struct.dma_buf* %0, null, !dbg !4778
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4780

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !4781
  %file = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %1, i32 0, i32 1, !dbg !4782
  %2 = load %struct.file*, %struct.file** %file, align 8, !dbg !4782
  %tobool1 = icmp ne %struct.file* %2, null, !dbg !4781
  br i1 %tobool1, label %if.end, label %if.then, !dbg !4783

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !4784
  br label %return, !dbg !4784

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i32, i32* %flags.addr, align 4, !dbg !4785
  %call = call i32 @get_unused_fd_flags(i32 %3) #10, !dbg !4786
  store i32 %call, i32* %fd, align 4, !dbg !4787
  %4 = load i32, i32* %fd, align 4, !dbg !4788
  %cmp = icmp slt i32 %4, 0, !dbg !4790
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !4791

if.then2:                                         ; preds = %if.end
  %5 = load i32, i32* %fd, align 4, !dbg !4792
  store i32 %5, i32* %retval, align 4, !dbg !4793
  br label %return, !dbg !4793

if.end3:                                          ; preds = %if.end
  %6 = load i32, i32* %fd, align 4, !dbg !4794
  %7 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !4795
  %file4 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %7, i32 0, i32 1, !dbg !4796
  %8 = load %struct.file*, %struct.file** %file4, align 8, !dbg !4796
  call void @fd_install(i32 %6, %struct.file* %8) #10, !dbg !4797
  %9 = load i32, i32* %fd, align 4, !dbg !4798
  store i32 %9, i32* %retval, align 4, !dbg !4799
  br label %return, !dbg !4799

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !4800
  ret i32 %10, !dbg !4800
}

; Function Attrs: noredzone
declare dso_local i32 @get_unused_fd_flags(i32) #3

; Function Attrs: noredzone
declare dso_local void @fd_install(i32, %struct.file*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dma_buf* @dma_buf_get(i32 %fd) #0 !dbg !4801 {
entry:
  %retval = alloca %struct.dma_buf*, align 8
  %fd.addr = alloca i32, align 4
  %file = alloca %struct.file*, align 8
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !4804, metadata !DIExpression()), !dbg !4805
  call void @llvm.dbg.declare(metadata %struct.file** %file, metadata !4806, metadata !DIExpression()), !dbg !4807
  %0 = load i32, i32* %fd.addr, align 4, !dbg !4808
  %call = call %struct.file* @fget(i32 %0) #10, !dbg !4809
  store %struct.file* %call, %struct.file** %file, align 8, !dbg !4810
  %1 = load %struct.file*, %struct.file** %file, align 8, !dbg !4811
  %tobool = icmp ne %struct.file* %1, null, !dbg !4811
  br i1 %tobool, label %if.end, label %if.then, !dbg !4813

if.then:                                          ; preds = %entry
  %call1 = call i8* @ERR_PTR(i64 -9) #10, !dbg !4814
  %2 = bitcast i8* %call1 to %struct.dma_buf*, !dbg !4814
  store %struct.dma_buf* %2, %struct.dma_buf** %retval, align 8, !dbg !4815
  br label %return, !dbg !4815

if.end:                                           ; preds = %entry
  %3 = load %struct.file*, %struct.file** %file, align 8, !dbg !4816
  %call2 = call i32 @is_dma_buf_file(%struct.file* %3) #10, !dbg !4818
  %tobool3 = icmp ne i32 %call2, 0, !dbg !4818
  br i1 %tobool3, label %if.end6, label %if.then4, !dbg !4819

if.then4:                                         ; preds = %if.end
  %4 = load %struct.file*, %struct.file** %file, align 8, !dbg !4820
  call void @fput(%struct.file* %4) #10, !dbg !4822
  %call5 = call i8* @ERR_PTR(i64 -22) #10, !dbg !4823
  %5 = bitcast i8* %call5 to %struct.dma_buf*, !dbg !4823
  store %struct.dma_buf* %5, %struct.dma_buf** %retval, align 8, !dbg !4824
  br label %return, !dbg !4824

if.end6:                                          ; preds = %if.end
  %6 = load %struct.file*, %struct.file** %file, align 8, !dbg !4825
  %private_data = getelementptr inbounds %struct.file, %struct.file* %6, i32 0, i32 15, !dbg !4826
  %7 = load i8*, i8** %private_data, align 8, !dbg !4826
  %8 = bitcast i8* %7 to %struct.dma_buf*, !dbg !4825
  store %struct.dma_buf* %8, %struct.dma_buf** %retval, align 8, !dbg !4827
  br label %return, !dbg !4827

return:                                           ; preds = %if.end6, %if.then4, %if.then
  %9 = load %struct.dma_buf*, %struct.dma_buf** %retval, align 8, !dbg !4828
  ret %struct.dma_buf* %9, !dbg !4828
}

; Function Attrs: noredzone
declare dso_local %struct.file* @fget(i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @is_dma_buf_file(%struct.file* %file) #0 !dbg !4829 {
entry:
  %file.addr = alloca %struct.file*, align 8
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !4832, metadata !DIExpression()), !dbg !4833
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !4834
  %f_op = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 3, !dbg !4835
  %1 = load %struct.file_operations*, %struct.file_operations** %f_op, align 8, !dbg !4835
  %cmp = icmp eq %struct.file_operations* %1, @dma_buf_fops, !dbg !4836
  %conv = zext i1 %cmp to i32, !dbg !4836
  ret i32 %conv, !dbg !4837
}

; Function Attrs: noredzone
declare dso_local void @fput(%struct.file*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dma_buf_put(%struct.dma_buf* %dmabuf) #0 !dbg !4838 {
entry:
  %dmabuf.addr = alloca %struct.dma_buf*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.dma_buf* %dmabuf, %struct.dma_buf** %dmabuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf.addr, metadata !4839, metadata !DIExpression()), !dbg !4840
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !4841, metadata !DIExpression()), !dbg !4844
  %0 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !4844
  %tobool = icmp ne %struct.dma_buf* %0, null, !dbg !4844
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !4844

lor.rhs:                                          ; preds = %entry
  %1 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !4844
  %file = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %1, i32 0, i32 1, !dbg !4844
  %2 = load %struct.file*, %struct.file** %file, align 8, !dbg !4844
  %tobool1 = icmp ne %struct.file* %2, null, !dbg !4844
  %lnot = xor i1 %tobool1, true, !dbg !4844
  br label %lor.end, !dbg !4844

lor.end:                                          ; preds = %lor.rhs, %entry
  %3 = phi i1 [ true, %entry ], [ %lnot, %lor.rhs ]
  %lnot2 = xor i1 %3, true, !dbg !4844
  %lnot3 = xor i1 %lnot2, true, !dbg !4844
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !4844
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !4844
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !4845
  %tobool4 = icmp ne i32 %4, 0, !dbg !4845
  %lnot5 = xor i1 %tobool4, true, !dbg !4845
  %lnot7 = xor i1 %lnot5, true, !dbg !4845
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !4845
  %conv = sext i32 %lnot.ext8 to i64, !dbg !4845
  %tobool9 = icmp ne i64 %conv, 0, !dbg !4845
  br i1 %tobool9, label %if.then, label %if.end, !dbg !4844

if.then:                                          ; preds = %lor.end
  br label %do.body, !dbg !4845

do.body:                                          ; preds = %if.then
  br label %do.body10, !dbg !4847

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !4849

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !4847

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 648, i32 2305, i64 12) #9, !dbg !4851, !srcloc !4853
  br label %do.end12, !dbg !4851

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 249) #9, !dbg !4854, !srcloc !4856
  br label %do.body13, !dbg !4847

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !4857

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !4847

do.end15:                                         ; preds = %do.end14
  br label %if.end, !dbg !4847

if.end:                                           ; preds = %do.end15, %lor.end
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !4844
  %tobool16 = icmp ne i32 %5, 0, !dbg !4844
  %lnot17 = xor i1 %tobool16, true, !dbg !4844
  %lnot19 = xor i1 %lnot17, true, !dbg !4844
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !4844
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !4844
  store i64 %conv21, i64* %tmp, align 8, !dbg !4845
  %6 = load i64, i64* %tmp, align 8, !dbg !4844
  %tobool22 = icmp ne i64 %6, 0, !dbg !4859
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !4860

if.then23:                                        ; preds = %if.end
  br label %return, !dbg !4861

if.end24:                                         ; preds = %if.end
  %7 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !4862
  %file25 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %7, i32 0, i32 1, !dbg !4863
  %8 = load %struct.file*, %struct.file** %file25, align 8, !dbg !4863
  call void @fput(%struct.file* %8) #10, !dbg !4864
  br label %return, !dbg !4865

return:                                           ; preds = %if.end24, %if.then23
  ret void, !dbg !4865
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dma_buf_attachment* @dma_buf_dynamic_attach(%struct.dma_buf* %dmabuf, %struct.device* %dev, %struct.dma_buf_attach_ops* %importer_ops, i8* %importer_priv) #0 !dbg !4866 {
entry:
  %retval = alloca %struct.dma_buf_attachment*, align 8
  %dmabuf.addr = alloca %struct.dma_buf*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %importer_ops.addr = alloca %struct.dma_buf_attach_ops*, align 8
  %importer_priv.addr = alloca i8*, align 8
  %attach = alloca %struct.dma_buf_attachment*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on25 = alloca i32, align 4
  %tmp51 = alloca i64, align 8
  %sgt = alloca %struct.sg_table*, align 8
  store %struct.dma_buf* %dmabuf, %struct.dma_buf** %dmabuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf.addr, metadata !4869, metadata !DIExpression()), !dbg !4870
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4871, metadata !DIExpression()), !dbg !4872
  store %struct.dma_buf_attach_ops* %importer_ops, %struct.dma_buf_attach_ops** %importer_ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_buf_attach_ops** %importer_ops.addr, metadata !4873, metadata !DIExpression()), !dbg !4874
  store i8* %importer_priv, i8** %importer_priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %importer_priv.addr, metadata !4875, metadata !DIExpression()), !dbg !4876
  call void @llvm.dbg.declare(metadata %struct.dma_buf_attachment** %attach, metadata !4877, metadata !DIExpression()), !dbg !4878
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4879, metadata !DIExpression()), !dbg !4880
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !4881, metadata !DIExpression()), !dbg !4884
  %0 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !4884
  %tobool = icmp ne %struct.dma_buf* %0, null, !dbg !4884
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !4884

lor.rhs:                                          ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4884
  %tobool1 = icmp ne %struct.device* %1, null, !dbg !4884
  %lnot = xor i1 %tobool1, true, !dbg !4884
  br label %lor.end, !dbg !4884

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %lnot, %lor.rhs ]
  %lnot2 = xor i1 %2, true, !dbg !4884
  %lnot3 = xor i1 %lnot2, true, !dbg !4884
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !4884
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !4884
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !4885
  %tobool4 = icmp ne i32 %3, 0, !dbg !4885
  %lnot5 = xor i1 %tobool4, true, !dbg !4885
  %lnot7 = xor i1 %lnot5, true, !dbg !4885
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !4885
  %conv = sext i32 %lnot.ext8 to i64, !dbg !4885
  %tobool9 = icmp ne i64 %conv, 0, !dbg !4885
  br i1 %tobool9, label %if.then, label %if.end, !dbg !4884

if.then:                                          ; preds = %lor.end
  br label %do.body, !dbg !4885

do.body:                                          ; preds = %if.then
  br label %do.body10, !dbg !4887

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !4889

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !4887

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 683, i32 2305, i64 12) #9, !dbg !4891, !srcloc !4893
  br label %do.end12, !dbg !4891

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 250) #9, !dbg !4894, !srcloc !4896
  br label %do.body13, !dbg !4887

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !4897

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !4887

do.end15:                                         ; preds = %do.end14
  br label %if.end, !dbg !4887

if.end:                                           ; preds = %do.end15, %lor.end
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !4884
  %tobool16 = icmp ne i32 %4, 0, !dbg !4884
  %lnot17 = xor i1 %tobool16, true, !dbg !4884
  %lnot19 = xor i1 %lnot17, true, !dbg !4884
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !4884
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !4884
  store i64 %conv21, i64* %tmp, align 8, !dbg !4885
  %5 = load i64, i64* %tmp, align 8, !dbg !4884
  %tobool22 = icmp ne i64 %5, 0, !dbg !4899
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !4900

if.then23:                                        ; preds = %if.end
  %call = call i8* @ERR_PTR(i64 -22) #10, !dbg !4901
  %6 = bitcast i8* %call to %struct.dma_buf_attachment*, !dbg !4901
  store %struct.dma_buf_attachment* %6, %struct.dma_buf_attachment** %retval, align 8, !dbg !4902
  br label %return, !dbg !4902

if.end24:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on25, metadata !4903, metadata !DIExpression()), !dbg !4906
  %7 = load %struct.dma_buf_attach_ops*, %struct.dma_buf_attach_ops** %importer_ops.addr, align 8, !dbg !4906
  %tobool26 = icmp ne %struct.dma_buf_attach_ops* %7, null, !dbg !4906
  br i1 %tobool26, label %land.rhs, label %land.end, !dbg !4906

land.rhs:                                         ; preds = %if.end24
  %8 = load %struct.dma_buf_attach_ops*, %struct.dma_buf_attach_ops** %importer_ops.addr, align 8, !dbg !4906
  %move_notify = getelementptr inbounds %struct.dma_buf_attach_ops, %struct.dma_buf_attach_ops* %8, i32 0, i32 1, !dbg !4906
  %9 = load void (%struct.dma_buf_attachment*)*, void (%struct.dma_buf_attachment*)** %move_notify, align 8, !dbg !4906
  %tobool27 = icmp ne void (%struct.dma_buf_attachment*)* %9, null, !dbg !4906
  %lnot28 = xor i1 %tobool27, true, !dbg !4906
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end24
  %10 = phi i1 [ false, %if.end24 ], [ %lnot28, %land.rhs ], !dbg !4907
  %lnot30 = xor i1 %10, true, !dbg !4906
  %lnot32 = xor i1 %lnot30, true, !dbg !4906
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !4906
  store i32 %lnot.ext33, i32* %__ret_warn_on25, align 4, !dbg !4906
  %11 = load i32, i32* %__ret_warn_on25, align 4, !dbg !4908
  %tobool34 = icmp ne i32 %11, 0, !dbg !4908
  %lnot35 = xor i1 %tobool34, true, !dbg !4908
  %lnot37 = xor i1 %lnot35, true, !dbg !4908
  %lnot.ext38 = zext i1 %lnot37 to i32, !dbg !4908
  %conv39 = sext i32 %lnot.ext38 to i64, !dbg !4908
  %tobool40 = icmp ne i64 %conv39, 0, !dbg !4908
  br i1 %tobool40, label %if.then41, label %if.end50, !dbg !4906

if.then41:                                        ; preds = %land.end
  br label %do.body42, !dbg !4908

do.body42:                                        ; preds = %if.then41
  br label %do.body43, !dbg !4910

do.body43:                                        ; preds = %do.body42
  br label %do.end44, !dbg !4912

do.end44:                                         ; preds = %do.body43
  br label %do.body45, !dbg !4910

do.body45:                                        ; preds = %do.end44
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 686, i32 2305, i64 12) #9, !dbg !4914, !srcloc !4916
  br label %do.end46, !dbg !4914

do.end46:                                         ; preds = %do.body45
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 251) #9, !dbg !4917, !srcloc !4919
  br label %do.body47, !dbg !4910

do.body47:                                        ; preds = %do.end46
  br label %do.end48, !dbg !4920

do.end48:                                         ; preds = %do.body47
  br label %do.end49, !dbg !4910

do.end49:                                         ; preds = %do.end48
  br label %if.end50, !dbg !4910

if.end50:                                         ; preds = %do.end49, %land.end
  %12 = load i32, i32* %__ret_warn_on25, align 4, !dbg !4906
  %tobool52 = icmp ne i32 %12, 0, !dbg !4906
  %lnot53 = xor i1 %tobool52, true, !dbg !4906
  %lnot55 = xor i1 %lnot53, true, !dbg !4906
  %lnot.ext56 = zext i1 %lnot55 to i32, !dbg !4906
  %conv57 = sext i32 %lnot.ext56 to i64, !dbg !4906
  store i64 %conv57, i64* %tmp51, align 8, !dbg !4908
  %13 = load i64, i64* %tmp51, align 8, !dbg !4906
  %tobool58 = icmp ne i64 %13, 0, !dbg !4922
  br i1 %tobool58, label %if.then59, label %if.end61, !dbg !4923

if.then59:                                        ; preds = %if.end50
  %call60 = call i8* @ERR_PTR(i64 -22) #10, !dbg !4924
  %14 = bitcast i8* %call60 to %struct.dma_buf_attachment*, !dbg !4924
  store %struct.dma_buf_attachment* %14, %struct.dma_buf_attachment** %retval, align 8, !dbg !4925
  br label %return, !dbg !4925

if.end61:                                         ; preds = %if.end50
  %call62 = call i8* @kzalloc(i64 72, i32 3264) #10, !dbg !4926
  %15 = bitcast i8* %call62 to %struct.dma_buf_attachment*, !dbg !4926
  store %struct.dma_buf_attachment* %15, %struct.dma_buf_attachment** %attach, align 8, !dbg !4927
  %16 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !4928
  %tobool63 = icmp ne %struct.dma_buf_attachment* %16, null, !dbg !4928
  br i1 %tobool63, label %if.end66, label %if.then64, !dbg !4930

if.then64:                                        ; preds = %if.end61
  %call65 = call i8* @ERR_PTR(i64 -12) #10, !dbg !4931
  %17 = bitcast i8* %call65 to %struct.dma_buf_attachment*, !dbg !4931
  store %struct.dma_buf_attachment* %17, %struct.dma_buf_attachment** %retval, align 8, !dbg !4932
  br label %return, !dbg !4932

if.end66:                                         ; preds = %if.end61
  %18 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4933
  %19 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !4934
  %dev67 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %19, i32 0, i32 1, !dbg !4935
  store %struct.device* %18, %struct.device** %dev67, align 8, !dbg !4936
  %20 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !4937
  %21 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !4938
  %dmabuf68 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %21, i32 0, i32 0, !dbg !4939
  store %struct.dma_buf* %20, %struct.dma_buf** %dmabuf68, align 8, !dbg !4940
  %22 = load %struct.dma_buf_attach_ops*, %struct.dma_buf_attach_ops** %importer_ops.addr, align 8, !dbg !4941
  %tobool69 = icmp ne %struct.dma_buf_attach_ops* %22, null, !dbg !4941
  br i1 %tobool69, label %if.then70, label %if.end72, !dbg !4943

if.then70:                                        ; preds = %if.end66
  %23 = load %struct.dma_buf_attach_ops*, %struct.dma_buf_attach_ops** %importer_ops.addr, align 8, !dbg !4944
  %allow_peer2peer = getelementptr inbounds %struct.dma_buf_attach_ops, %struct.dma_buf_attach_ops* %23, i32 0, i32 0, !dbg !4945
  %24 = load i8, i8* %allow_peer2peer, align 8, !dbg !4945
  %tobool71 = trunc i8 %24 to i1, !dbg !4945
  %25 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !4946
  %peer2peer = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %25, i32 0, i32 5, !dbg !4947
  %frombool = zext i1 %tobool71 to i8, !dbg !4948
  store i8 %frombool, i8* %peer2peer, align 4, !dbg !4948
  br label %if.end72, !dbg !4946

if.end72:                                         ; preds = %if.then70, %if.end66
  %26 = load %struct.dma_buf_attach_ops*, %struct.dma_buf_attach_ops** %importer_ops.addr, align 8, !dbg !4949
  %27 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !4950
  %importer_ops73 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %27, i32 0, i32 6, !dbg !4951
  store %struct.dma_buf_attach_ops* %26, %struct.dma_buf_attach_ops** %importer_ops73, align 8, !dbg !4952
  %28 = load i8*, i8** %importer_priv.addr, align 8, !dbg !4953
  %29 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !4954
  %importer_priv74 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %29, i32 0, i32 7, !dbg !4955
  store i8* %28, i8** %importer_priv74, align 8, !dbg !4956
  %30 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !4957
  %ops = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %30, i32 0, i32 3, !dbg !4959
  %31 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops, align 8, !dbg !4959
  %attach75 = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %31, i32 0, i32 1, !dbg !4960
  %32 = load i32 (%struct.dma_buf*, %struct.dma_buf_attachment*)*, i32 (%struct.dma_buf*, %struct.dma_buf_attachment*)** %attach75, align 8, !dbg !4960
  %tobool76 = icmp ne i32 (%struct.dma_buf*, %struct.dma_buf_attachment*)* %32, null, !dbg !4957
  br i1 %tobool76, label %if.then77, label %if.end84, !dbg !4961

if.then77:                                        ; preds = %if.end72
  %33 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !4962
  %ops78 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %33, i32 0, i32 3, !dbg !4964
  %34 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops78, align 8, !dbg !4964
  %attach79 = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %34, i32 0, i32 1, !dbg !4965
  %35 = load i32 (%struct.dma_buf*, %struct.dma_buf_attachment*)*, i32 (%struct.dma_buf*, %struct.dma_buf_attachment*)** %attach79, align 8, !dbg !4965
  %36 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !4966
  %37 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !4967
  %call80 = call i32 %35(%struct.dma_buf* %36, %struct.dma_buf_attachment* %37) #10, !dbg !4962
  store i32 %call80, i32* %ret, align 4, !dbg !4968
  %38 = load i32, i32* %ret, align 4, !dbg !4969
  %tobool81 = icmp ne i32 %38, 0, !dbg !4969
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !4971

if.then82:                                        ; preds = %if.then77
  br label %err_attach, !dbg !4972

if.end83:                                         ; preds = %if.then77
  br label %if.end84, !dbg !4973

if.end84:                                         ; preds = %if.end83, %if.end72
  %39 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !4974
  %resv = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %39, i32 0, i32 13, !dbg !4975
  %40 = load %struct.dma_resv*, %struct.dma_resv** %resv, align 8, !dbg !4975
  %call85 = call i32 @dma_resv_lock(%struct.dma_resv* %40, %struct.ww_acquire_ctx* null) #10, !dbg !4976
  %41 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !4977
  %node = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %41, i32 0, i32 2, !dbg !4978
  %42 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !4979
  %attachments = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %42, i32 0, i32 2, !dbg !4980
  call void @list_add(%struct.list_head* %node, %struct.list_head* %attachments) #10, !dbg !4981
  %43 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !4982
  %resv86 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %43, i32 0, i32 13, !dbg !4983
  %44 = load %struct.dma_resv*, %struct.dma_resv** %resv86, align 8, !dbg !4983
  call void @dma_resv_unlock(%struct.dma_resv* %44) #10, !dbg !4984
  %45 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !4985
  %call87 = call zeroext i1 @dma_buf_attachment_is_dynamic(%struct.dma_buf_attachment* %45) #10, !dbg !4987
  %conv88 = zext i1 %call87 to i32, !dbg !4987
  %46 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !4988
  %call89 = call zeroext i1 @dma_buf_is_dynamic(%struct.dma_buf* %46) #10, !dbg !4989
  %conv90 = zext i1 %call89 to i32, !dbg !4989
  %cmp = icmp ne i32 %conv88, %conv90, !dbg !4990
  br i1 %cmp, label %if.then92, label %if.end122, !dbg !4991

if.then92:                                        ; preds = %if.end84
  call void @llvm.dbg.declare(metadata %struct.sg_table** %sgt, metadata !4992, metadata !DIExpression()), !dbg !4994
  %47 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !4995
  %dmabuf93 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %47, i32 0, i32 0, !dbg !4997
  %48 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf93, align 8, !dbg !4997
  %call94 = call zeroext i1 @dma_buf_is_dynamic(%struct.dma_buf* %48) #10, !dbg !4998
  br i1 %call94, label %if.then95, label %if.end103, !dbg !4999

if.then95:                                        ; preds = %if.then92
  %49 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !5000
  %dmabuf96 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %49, i32 0, i32 0, !dbg !5002
  %50 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf96, align 8, !dbg !5002
  %resv97 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %50, i32 0, i32 13, !dbg !5003
  %51 = load %struct.dma_resv*, %struct.dma_resv** %resv97, align 8, !dbg !5003
  %call98 = call i32 @dma_resv_lock(%struct.dma_resv* %51, %struct.ww_acquire_ctx* null) #10, !dbg !5004
  %52 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !5005
  %call99 = call i32 @dma_buf_pin(%struct.dma_buf_attachment* %52) #10, !dbg !5006
  store i32 %call99, i32* %ret, align 4, !dbg !5007
  %53 = load i32, i32* %ret, align 4, !dbg !5008
  %tobool100 = icmp ne i32 %53, 0, !dbg !5008
  br i1 %tobool100, label %if.then101, label %if.end102, !dbg !5010

if.then101:                                       ; preds = %if.then95
  br label %err_unlock, !dbg !5011

if.end102:                                        ; preds = %if.then95
  br label %if.end103, !dbg !5012

if.end103:                                        ; preds = %if.end102, %if.then92
  %54 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5013
  %ops104 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %54, i32 0, i32 3, !dbg !5014
  %55 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops104, align 8, !dbg !5014
  %map_dma_buf = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %55, i32 0, i32 5, !dbg !5015
  %56 = load %struct.sg_table* (%struct.dma_buf_attachment*, i32)*, %struct.sg_table* (%struct.dma_buf_attachment*, i32)** %map_dma_buf, align 8, !dbg !5015
  %57 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !5016
  %call105 = call %struct.sg_table* %56(%struct.dma_buf_attachment* %57, i32 0) #10, !dbg !5013
  store %struct.sg_table* %call105, %struct.sg_table** %sgt, align 8, !dbg !5017
  %58 = load %struct.sg_table*, %struct.sg_table** %sgt, align 8, !dbg !5018
  %tobool106 = icmp ne %struct.sg_table* %58, null, !dbg !5018
  br i1 %tobool106, label %if.end109, label %if.then107, !dbg !5020

if.then107:                                       ; preds = %if.end103
  %call108 = call i8* @ERR_PTR(i64 -12) #10, !dbg !5021
  %59 = bitcast i8* %call108 to %struct.sg_table*, !dbg !5021
  store %struct.sg_table* %59, %struct.sg_table** %sgt, align 8, !dbg !5022
  br label %if.end109, !dbg !5023

if.end109:                                        ; preds = %if.then107, %if.end103
  %60 = load %struct.sg_table*, %struct.sg_table** %sgt, align 8, !dbg !5024
  %61 = bitcast %struct.sg_table* %60 to i8*, !dbg !5024
  %call110 = call zeroext i1 @IS_ERR(i8* %61) #10, !dbg !5026
  br i1 %call110, label %if.then111, label %if.end114, !dbg !5027

if.then111:                                       ; preds = %if.end109
  %62 = load %struct.sg_table*, %struct.sg_table** %sgt, align 8, !dbg !5028
  %63 = bitcast %struct.sg_table* %62 to i8*, !dbg !5028
  %call112 = call i64 @PTR_ERR(i8* %63) #10, !dbg !5030
  %conv113 = trunc i64 %call112 to i32, !dbg !5030
  store i32 %conv113, i32* %ret, align 4, !dbg !5031
  br label %err_unpin, !dbg !5032

if.end114:                                        ; preds = %if.end109
  %64 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !5033
  %dmabuf115 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %64, i32 0, i32 0, !dbg !5035
  %65 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf115, align 8, !dbg !5035
  %call116 = call zeroext i1 @dma_buf_is_dynamic(%struct.dma_buf* %65) #10, !dbg !5036
  br i1 %call116, label %if.then117, label %if.end120, !dbg !5037

if.then117:                                       ; preds = %if.end114
  %66 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !5038
  %dmabuf118 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %66, i32 0, i32 0, !dbg !5039
  %67 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf118, align 8, !dbg !5039
  %resv119 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %67, i32 0, i32 13, !dbg !5040
  %68 = load %struct.dma_resv*, %struct.dma_resv** %resv119, align 8, !dbg !5040
  call void @dma_resv_unlock(%struct.dma_resv* %68) #10, !dbg !5041
  br label %if.end120, !dbg !5041

if.end120:                                        ; preds = %if.then117, %if.end114
  %69 = load %struct.sg_table*, %struct.sg_table** %sgt, align 8, !dbg !5042
  %70 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !5043
  %sgt121 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %70, i32 0, i32 3, !dbg !5044
  store %struct.sg_table* %69, %struct.sg_table** %sgt121, align 8, !dbg !5045
  %71 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !5046
  %dir = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %71, i32 0, i32 4, !dbg !5047
  store i32 0, i32* %dir, align 8, !dbg !5048
  br label %if.end122, !dbg !5049

if.end122:                                        ; preds = %if.end120, %if.end84
  %72 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !5050
  store %struct.dma_buf_attachment* %72, %struct.dma_buf_attachment** %retval, align 8, !dbg !5051
  br label %return, !dbg !5051

err_attach:                                       ; preds = %if.then82
  call void @llvm.dbg.label(metadata !5052), !dbg !5053
  %73 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !5054
  %74 = bitcast %struct.dma_buf_attachment* %73 to i8*, !dbg !5054
  call void @kfree(i8* %74) #10, !dbg !5055
  %75 = load i32, i32* %ret, align 4, !dbg !5056
  %conv123 = sext i32 %75 to i64, !dbg !5056
  %call124 = call i8* @ERR_PTR(i64 %conv123) #10, !dbg !5057
  %76 = bitcast i8* %call124 to %struct.dma_buf_attachment*, !dbg !5057
  store %struct.dma_buf_attachment* %76, %struct.dma_buf_attachment** %retval, align 8, !dbg !5058
  br label %return, !dbg !5058

err_unpin:                                        ; preds = %if.then111
  call void @llvm.dbg.label(metadata !5059), !dbg !5060
  %77 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !5061
  %dmabuf125 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %77, i32 0, i32 0, !dbg !5063
  %78 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf125, align 8, !dbg !5063
  %call126 = call zeroext i1 @dma_buf_is_dynamic(%struct.dma_buf* %78) #10, !dbg !5064
  br i1 %call126, label %if.then127, label %if.end128, !dbg !5065

if.then127:                                       ; preds = %err_unpin
  %79 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !5066
  call void @dma_buf_unpin(%struct.dma_buf_attachment* %79) #10, !dbg !5067
  br label %if.end128, !dbg !5067

if.end128:                                        ; preds = %if.then127, %err_unpin
  br label %err_unlock, !dbg !5068

err_unlock:                                       ; preds = %if.end128, %if.then101
  call void @llvm.dbg.label(metadata !5069), !dbg !5070
  %80 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !5071
  %dmabuf129 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %80, i32 0, i32 0, !dbg !5073
  %81 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf129, align 8, !dbg !5073
  %call130 = call zeroext i1 @dma_buf_is_dynamic(%struct.dma_buf* %81) #10, !dbg !5074
  br i1 %call130, label %if.then131, label %if.end134, !dbg !5075

if.then131:                                       ; preds = %err_unlock
  %82 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !5076
  %dmabuf132 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %82, i32 0, i32 0, !dbg !5077
  %83 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf132, align 8, !dbg !5077
  %resv133 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %83, i32 0, i32 13, !dbg !5078
  %84 = load %struct.dma_resv*, %struct.dma_resv** %resv133, align 8, !dbg !5078
  call void @dma_resv_unlock(%struct.dma_resv* %84) #10, !dbg !5079
  br label %if.end134, !dbg !5079

if.end134:                                        ; preds = %if.then131, %err_unlock
  %85 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5080
  %86 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !5081
  call void @dma_buf_detach(%struct.dma_buf* %85, %struct.dma_buf_attachment* %86) #10, !dbg !5082
  %87 = load i32, i32* %ret, align 4, !dbg !5083
  %conv135 = sext i32 %87 to i64, !dbg !5083
  %call136 = call i8* @ERR_PTR(i64 %conv135) #10, !dbg !5084
  %88 = bitcast i8* %call136 to %struct.dma_buf_attachment*, !dbg !5084
  store %struct.dma_buf_attachment* %88, %struct.dma_buf_attachment** %retval, align 8, !dbg !5085
  br label %return, !dbg !5085

return:                                           ; preds = %if.end134, %err_attach, %if.end122, %if.then64, %if.then59, %if.then23
  %89 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %retval, align 8, !dbg !5086
  ret %struct.dma_buf_attachment* %89, !dbg !5086
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_resv_lock(%struct.dma_resv* %obj, %struct.ww_acquire_ctx* %ctx) #0 !dbg !5087 {
entry:
  %obj.addr = alloca %struct.dma_resv*, align 8
  %ctx.addr = alloca %struct.ww_acquire_ctx*, align 8
  store %struct.dma_resv* %obj, %struct.dma_resv** %obj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_resv** %obj.addr, metadata !5090, metadata !DIExpression()), !dbg !5091
  store %struct.ww_acquire_ctx* %ctx, %struct.ww_acquire_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ww_acquire_ctx** %ctx.addr, metadata !5092, metadata !DIExpression()), !dbg !5093
  %0 = load %struct.dma_resv*, %struct.dma_resv** %obj.addr, align 8, !dbg !5094
  %lock = getelementptr inbounds %struct.dma_resv, %struct.dma_resv* %0, i32 0, i32 0, !dbg !5095
  %1 = load %struct.ww_acquire_ctx*, %struct.ww_acquire_ctx** %ctx.addr, align 8, !dbg !5096
  %call = call i32 @ww_mutex_lock(%struct.ww_mutex* %lock, %struct.ww_acquire_ctx* %1) #10, !dbg !5097
  ret i32 %call, !dbg !5098
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_resv_unlock(%struct.dma_resv* %obj) #0 !dbg !5099 {
entry:
  %obj.addr = alloca %struct.dma_resv*, align 8
  store %struct.dma_resv* %obj, %struct.dma_resv** %obj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_resv** %obj.addr, metadata !5102, metadata !DIExpression()), !dbg !5103
  %0 = load %struct.dma_resv*, %struct.dma_resv** %obj.addr, align 8, !dbg !5104
  %lock = getelementptr inbounds %struct.dma_resv, %struct.dma_resv* %0, i32 0, i32 0, !dbg !5105
  call void @ww_mutex_unlock(%struct.ww_mutex* %lock) #10, !dbg !5106
  ret void, !dbg !5107
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @dma_buf_attachment_is_dynamic(%struct.dma_buf_attachment* %attach) #0 !dbg !5108 {
entry:
  %attach.addr = alloca %struct.dma_buf_attachment*, align 8
  store %struct.dma_buf_attachment* %attach, %struct.dma_buf_attachment** %attach.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_buf_attachment** %attach.addr, metadata !5111, metadata !DIExpression()), !dbg !5112
  %0 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5113
  %importer_ops = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %0, i32 0, i32 6, !dbg !5114
  %1 = load %struct.dma_buf_attach_ops*, %struct.dma_buf_attach_ops** %importer_ops, align 8, !dbg !5114
  %tobool = icmp ne %struct.dma_buf_attach_ops* %1, null, !dbg !5115
  %lnot = xor i1 %tobool, true, !dbg !5115
  %lnot1 = xor i1 %lnot, true, !dbg !5116
  ret i1 %lnot1, !dbg !5117
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @dma_buf_is_dynamic(%struct.dma_buf* %dmabuf) #0 !dbg !5118 {
entry:
  %dmabuf.addr = alloca %struct.dma_buf*, align 8
  store %struct.dma_buf* %dmabuf, %struct.dma_buf** %dmabuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf.addr, metadata !5121, metadata !DIExpression()), !dbg !5122
  %0 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5123
  %ops = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %0, i32 0, i32 3, !dbg !5124
  %1 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops, align 8, !dbg !5124
  %pin = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %1, i32 0, i32 3, !dbg !5125
  %2 = load i32 (%struct.dma_buf_attachment*)*, i32 (%struct.dma_buf_attachment*)** %pin, align 8, !dbg !5125
  %tobool = icmp ne i32 (%struct.dma_buf_attachment*)* %2, null, !dbg !5126
  %lnot = xor i1 %tobool, true, !dbg !5126
  %lnot1 = xor i1 %lnot, true, !dbg !5127
  ret i1 %lnot1, !dbg !5128
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dma_buf_pin(%struct.dma_buf_attachment* %attach) #0 !dbg !5129 {
entry:
  %attach.addr = alloca %struct.dma_buf_attachment*, align 8
  %dmabuf = alloca %struct.dma_buf*, align 8
  %ret = alloca i32, align 4
  store %struct.dma_buf_attachment* %attach, %struct.dma_buf_attachment** %attach.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_buf_attachment** %attach.addr, metadata !5130, metadata !DIExpression()), !dbg !5131
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf, metadata !5132, metadata !DIExpression()), !dbg !5133
  %0 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5134
  %dmabuf1 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %0, i32 0, i32 0, !dbg !5135
  %1 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf1, align 8, !dbg !5135
  store %struct.dma_buf* %1, %struct.dma_buf** %dmabuf, align 8, !dbg !5133
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5136, metadata !DIExpression()), !dbg !5137
  store i32 0, i32* %ret, align 4, !dbg !5137
  br label %do.body, !dbg !5138

do.body:                                          ; preds = %entry
  %2 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !5139
  %resv = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %2, i32 0, i32 13, !dbg !5139
  %3 = load %struct.dma_resv*, %struct.dma_resv** %resv, align 8, !dbg !5139
  %lock = getelementptr inbounds %struct.dma_resv, %struct.dma_resv* %3, i32 0, i32 0, !dbg !5139
  %base = getelementptr inbounds %struct.ww_mutex, %struct.ww_mutex* %lock, i32 0, i32 0, !dbg !5139
  br label %do.end, !dbg !5139

do.end:                                           ; preds = %do.body
  %4 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !5141
  %ops = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %4, i32 0, i32 3, !dbg !5143
  %5 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops, align 8, !dbg !5143
  %pin = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %5, i32 0, i32 3, !dbg !5144
  %6 = load i32 (%struct.dma_buf_attachment*)*, i32 (%struct.dma_buf_attachment*)** %pin, align 8, !dbg !5144
  %tobool = icmp ne i32 (%struct.dma_buf_attachment*)* %6, null, !dbg !5141
  br i1 %tobool, label %if.then, label %if.end, !dbg !5145

if.then:                                          ; preds = %do.end
  %7 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !5146
  %ops2 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %7, i32 0, i32 3, !dbg !5147
  %8 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops2, align 8, !dbg !5147
  %pin3 = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %8, i32 0, i32 3, !dbg !5148
  %9 = load i32 (%struct.dma_buf_attachment*)*, i32 (%struct.dma_buf_attachment*)** %pin3, align 8, !dbg !5148
  %10 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5149
  %call = call i32 %9(%struct.dma_buf_attachment* %10) #10, !dbg !5146
  store i32 %call, i32* %ret, align 4, !dbg !5150
  br label %if.end, !dbg !5151

if.end:                                           ; preds = %if.then, %do.end
  %11 = load i32, i32* %ret, align 4, !dbg !5152
  ret i32 %11, !dbg !5153
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dma_buf_unpin(%struct.dma_buf_attachment* %attach) #0 !dbg !5154 {
entry:
  %attach.addr = alloca %struct.dma_buf_attachment*, align 8
  %dmabuf = alloca %struct.dma_buf*, align 8
  store %struct.dma_buf_attachment* %attach, %struct.dma_buf_attachment** %attach.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_buf_attachment** %attach.addr, metadata !5155, metadata !DIExpression()), !dbg !5156
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf, metadata !5157, metadata !DIExpression()), !dbg !5158
  %0 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5159
  %dmabuf1 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %0, i32 0, i32 0, !dbg !5160
  %1 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf1, align 8, !dbg !5160
  store %struct.dma_buf* %1, %struct.dma_buf** %dmabuf, align 8, !dbg !5158
  br label %do.body, !dbg !5161

do.body:                                          ; preds = %entry
  %2 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !5162
  %resv = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %2, i32 0, i32 13, !dbg !5162
  %3 = load %struct.dma_resv*, %struct.dma_resv** %resv, align 8, !dbg !5162
  %lock = getelementptr inbounds %struct.dma_resv, %struct.dma_resv* %3, i32 0, i32 0, !dbg !5162
  %base = getelementptr inbounds %struct.ww_mutex, %struct.ww_mutex* %lock, i32 0, i32 0, !dbg !5162
  br label %do.end, !dbg !5162

do.end:                                           ; preds = %do.body
  %4 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !5164
  %ops = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %4, i32 0, i32 3, !dbg !5166
  %5 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops, align 8, !dbg !5166
  %unpin = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %5, i32 0, i32 4, !dbg !5167
  %6 = load void (%struct.dma_buf_attachment*)*, void (%struct.dma_buf_attachment*)** %unpin, align 8, !dbg !5167
  %tobool = icmp ne void (%struct.dma_buf_attachment*)* %6, null, !dbg !5164
  br i1 %tobool, label %if.then, label %if.end, !dbg !5168

if.then:                                          ; preds = %do.end
  %7 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !5169
  %ops2 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %7, i32 0, i32 3, !dbg !5170
  %8 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops2, align 8, !dbg !5170
  %unpin3 = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %8, i32 0, i32 4, !dbg !5171
  %9 = load void (%struct.dma_buf_attachment*)*, void (%struct.dma_buf_attachment*)** %unpin3, align 8, !dbg !5171
  %10 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5172
  call void %9(%struct.dma_buf_attachment* %10) #10, !dbg !5169
  br label %if.end, !dbg !5169

if.end:                                           ; preds = %if.then, %do.end
  ret void, !dbg !5173
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dma_buf_detach(%struct.dma_buf* %dmabuf, %struct.dma_buf_attachment* %attach) #0 !dbg !5174 {
entry:
  %dmabuf.addr = alloca %struct.dma_buf*, align 8
  %attach.addr = alloca %struct.dma_buf_attachment*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.dma_buf* %dmabuf, %struct.dma_buf** %dmabuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf.addr, metadata !5175, metadata !DIExpression()), !dbg !5176
  store %struct.dma_buf_attachment* %attach, %struct.dma_buf_attachment** %attach.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_buf_attachment** %attach.addr, metadata !5177, metadata !DIExpression()), !dbg !5178
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5179, metadata !DIExpression()), !dbg !5182
  %0 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5182
  %tobool = icmp ne %struct.dma_buf* %0, null, !dbg !5182
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !5182

lor.rhs:                                          ; preds = %entry
  %1 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5182
  %tobool1 = icmp ne %struct.dma_buf_attachment* %1, null, !dbg !5182
  %lnot = xor i1 %tobool1, true, !dbg !5182
  br label %lor.end, !dbg !5182

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %lnot, %lor.rhs ]
  %lnot2 = xor i1 %2, true, !dbg !5182
  %lnot3 = xor i1 %lnot2, true, !dbg !5182
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !5182
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5182
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !5183
  %tobool4 = icmp ne i32 %3, 0, !dbg !5183
  %lnot5 = xor i1 %tobool4, true, !dbg !5183
  %lnot7 = xor i1 %lnot5, true, !dbg !5183
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !5183
  %conv = sext i32 %lnot.ext8 to i64, !dbg !5183
  %tobool9 = icmp ne i64 %conv, 0, !dbg !5183
  br i1 %tobool9, label %if.then, label %if.end, !dbg !5182

if.then:                                          ; preds = %lor.end
  br label %do.body, !dbg !5183

do.body:                                          ; preds = %if.then
  br label %do.body10, !dbg !5185

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !5187

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !5185

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 781, i32 2305, i64 12) #9, !dbg !5189, !srcloc !5191
  br label %do.end12, !dbg !5189

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 252) #9, !dbg !5192, !srcloc !5194
  br label %do.body13, !dbg !5185

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !5195

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !5185

do.end15:                                         ; preds = %do.end14
  br label %if.end, !dbg !5185

if.end:                                           ; preds = %do.end15, %lor.end
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !5182
  %tobool16 = icmp ne i32 %4, 0, !dbg !5182
  %lnot17 = xor i1 %tobool16, true, !dbg !5182
  %lnot19 = xor i1 %lnot17, true, !dbg !5182
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !5182
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !5182
  store i64 %conv21, i64* %tmp, align 8, !dbg !5183
  %5 = load i64, i64* %tmp, align 8, !dbg !5182
  %tobool22 = icmp ne i64 %5, 0, !dbg !5197
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !5198

if.then23:                                        ; preds = %if.end
  br label %return, !dbg !5199

if.end24:                                         ; preds = %if.end
  %6 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5200
  %sgt = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %6, i32 0, i32 3, !dbg !5202
  %7 = load %struct.sg_table*, %struct.sg_table** %sgt, align 8, !dbg !5202
  %tobool25 = icmp ne %struct.sg_table* %7, null, !dbg !5200
  br i1 %tobool25, label %if.then26, label %if.end39, !dbg !5203

if.then26:                                        ; preds = %if.end24
  %8 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5204
  %dmabuf27 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %8, i32 0, i32 0, !dbg !5207
  %9 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf27, align 8, !dbg !5207
  %call = call zeroext i1 @dma_buf_is_dynamic(%struct.dma_buf* %9) #10, !dbg !5208
  br i1 %call, label %if.then28, label %if.end31, !dbg !5209

if.then28:                                        ; preds = %if.then26
  %10 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5210
  %dmabuf29 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %10, i32 0, i32 0, !dbg !5211
  %11 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf29, align 8, !dbg !5211
  %resv = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %11, i32 0, i32 13, !dbg !5212
  %12 = load %struct.dma_resv*, %struct.dma_resv** %resv, align 8, !dbg !5212
  %call30 = call i32 @dma_resv_lock(%struct.dma_resv* %12, %struct.ww_acquire_ctx* null) #10, !dbg !5213
  br label %if.end31, !dbg !5213

if.end31:                                         ; preds = %if.then28, %if.then26
  %13 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5214
  %ops = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %13, i32 0, i32 3, !dbg !5215
  %14 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops, align 8, !dbg !5215
  %unmap_dma_buf = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %14, i32 0, i32 6, !dbg !5216
  %15 = load void (%struct.dma_buf_attachment*, %struct.sg_table*, i32)*, void (%struct.dma_buf_attachment*, %struct.sg_table*, i32)** %unmap_dma_buf, align 8, !dbg !5216
  %16 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5217
  %17 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5218
  %sgt32 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %17, i32 0, i32 3, !dbg !5219
  %18 = load %struct.sg_table*, %struct.sg_table** %sgt32, align 8, !dbg !5219
  %19 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5220
  %dir = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %19, i32 0, i32 4, !dbg !5221
  %20 = load i32, i32* %dir, align 8, !dbg !5221
  call void %15(%struct.dma_buf_attachment* %16, %struct.sg_table* %18, i32 %20) #10, !dbg !5214
  %21 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5222
  %dmabuf33 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %21, i32 0, i32 0, !dbg !5224
  %22 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf33, align 8, !dbg !5224
  %call34 = call zeroext i1 @dma_buf_is_dynamic(%struct.dma_buf* %22) #10, !dbg !5225
  br i1 %call34, label %if.then35, label %if.end38, !dbg !5226

if.then35:                                        ; preds = %if.end31
  %23 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5227
  call void @dma_buf_unpin(%struct.dma_buf_attachment* %23) #10, !dbg !5229
  %24 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5230
  %dmabuf36 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %24, i32 0, i32 0, !dbg !5231
  %25 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf36, align 8, !dbg !5231
  %resv37 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %25, i32 0, i32 13, !dbg !5232
  %26 = load %struct.dma_resv*, %struct.dma_resv** %resv37, align 8, !dbg !5232
  call void @dma_resv_unlock(%struct.dma_resv* %26) #10, !dbg !5233
  br label %if.end38, !dbg !5234

if.end38:                                         ; preds = %if.then35, %if.end31
  br label %if.end39, !dbg !5235

if.end39:                                         ; preds = %if.end38, %if.end24
  %27 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5236
  %resv40 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %27, i32 0, i32 13, !dbg !5237
  %28 = load %struct.dma_resv*, %struct.dma_resv** %resv40, align 8, !dbg !5237
  %call41 = call i32 @dma_resv_lock(%struct.dma_resv* %28, %struct.ww_acquire_ctx* null) #10, !dbg !5238
  %29 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5239
  %node = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %29, i32 0, i32 2, !dbg !5240
  call void @list_del(%struct.list_head* %node) #10, !dbg !5241
  %30 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5242
  %resv42 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %30, i32 0, i32 13, !dbg !5243
  %31 = load %struct.dma_resv*, %struct.dma_resv** %resv42, align 8, !dbg !5243
  call void @dma_resv_unlock(%struct.dma_resv* %31) #10, !dbg !5244
  %32 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5245
  %ops43 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %32, i32 0, i32 3, !dbg !5247
  %33 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops43, align 8, !dbg !5247
  %detach = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %33, i32 0, i32 2, !dbg !5248
  %34 = load void (%struct.dma_buf*, %struct.dma_buf_attachment*)*, void (%struct.dma_buf*, %struct.dma_buf_attachment*)** %detach, align 8, !dbg !5248
  %tobool44 = icmp ne void (%struct.dma_buf*, %struct.dma_buf_attachment*)* %34, null, !dbg !5245
  br i1 %tobool44, label %if.then45, label %if.end48, !dbg !5249

if.then45:                                        ; preds = %if.end39
  %35 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5250
  %ops46 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %35, i32 0, i32 3, !dbg !5251
  %36 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops46, align 8, !dbg !5251
  %detach47 = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %36, i32 0, i32 2, !dbg !5252
  %37 = load void (%struct.dma_buf*, %struct.dma_buf_attachment*)*, void (%struct.dma_buf*, %struct.dma_buf_attachment*)** %detach47, align 8, !dbg !5252
  %38 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5253
  %39 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5254
  call void %37(%struct.dma_buf* %38, %struct.dma_buf_attachment* %39) #10, !dbg !5250
  br label %if.end48, !dbg !5250

if.end48:                                         ; preds = %if.then45, %if.end39
  %40 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5255
  %41 = bitcast %struct.dma_buf_attachment* %40 to i8*, !dbg !5255
  call void @kfree(i8* %41) #10, !dbg !5256
  br label %return, !dbg !5257

return:                                           ; preds = %if.end48, %if.then23
  ret void, !dbg !5257
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dma_buf_attachment* @dma_buf_attach(%struct.dma_buf* %dmabuf, %struct.device* %dev) #0 !dbg !5258 {
entry:
  %dmabuf.addr = alloca %struct.dma_buf*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.dma_buf* %dmabuf, %struct.dma_buf** %dmabuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf.addr, metadata !5261, metadata !DIExpression()), !dbg !5262
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5263, metadata !DIExpression()), !dbg !5264
  %0 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5265
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5266
  %call = call %struct.dma_buf_attachment* @dma_buf_dynamic_attach(%struct.dma_buf* %0, %struct.device* %1, %struct.dma_buf_attach_ops* null, i8* null) #10, !dbg !5267
  ret %struct.dma_buf_attachment* %call, !dbg !5268
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !5269 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !5270, metadata !DIExpression()), !dbg !5271
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !5272
  call void @__list_del_entry(%struct.list_head* %0) #10, !dbg !5273
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !5274
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !5275
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !5276
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !5277
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !5278
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !5279
  ret void, !dbg !5280
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.sg_table* @dma_buf_map_attachment(%struct.dma_buf_attachment* %attach, i32 %direction) #0 !dbg !5281 {
entry:
  %retval = alloca %struct.sg_table*, align 8
  %attach.addr = alloca %struct.dma_buf_attachment*, align 8
  %direction.addr = alloca i32, align 4
  %sg_table = alloca %struct.sg_table*, align 8
  %r = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.dma_buf_attachment* %attach, %struct.dma_buf_attachment** %attach.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_buf_attachment** %attach.addr, metadata !5282, metadata !DIExpression()), !dbg !5283
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !5284, metadata !DIExpression()), !dbg !5285
  call void @llvm.dbg.declare(metadata %struct.sg_table** %sg_table, metadata !5286, metadata !DIExpression()), !dbg !5287
  call void @llvm.dbg.declare(metadata i32* %r, metadata !5288, metadata !DIExpression()), !dbg !5289
  br label %do.body, !dbg !5290

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5291

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !5293

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !5291

do.end2:                                          ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5295, metadata !DIExpression()), !dbg !5298
  %0 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5298
  %tobool = icmp ne %struct.dma_buf_attachment* %0, null, !dbg !5298
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !5298

lor.rhs:                                          ; preds = %do.end2
  %1 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5298
  %dmabuf = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %1, i32 0, i32 0, !dbg !5298
  %2 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !5298
  %tobool3 = icmp ne %struct.dma_buf* %2, null, !dbg !5298
  %lnot = xor i1 %tobool3, true, !dbg !5298
  br label %lor.end, !dbg !5298

lor.end:                                          ; preds = %lor.rhs, %do.end2
  %3 = phi i1 [ true, %do.end2 ], [ %lnot, %lor.rhs ]
  %lnot4 = xor i1 %3, true, !dbg !5298
  %lnot5 = xor i1 %lnot4, true, !dbg !5298
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !5298
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5298
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !5299
  %tobool6 = icmp ne i32 %4, 0, !dbg !5299
  %lnot7 = xor i1 %tobool6, true, !dbg !5299
  %lnot9 = xor i1 %lnot7, true, !dbg !5299
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !5299
  %conv = sext i32 %lnot.ext10 to i64, !dbg !5299
  %tobool11 = icmp ne i64 %conv, 0, !dbg !5299
  br i1 %tobool11, label %if.then, label %if.end, !dbg !5298

if.then:                                          ; preds = %lor.end
  br label %do.body12, !dbg !5299

do.body12:                                        ; preds = %if.then
  br label %do.body13, !dbg !5301

do.body13:                                        ; preds = %do.body12
  br label %do.end14, !dbg !5303

do.end14:                                         ; preds = %do.body13
  br label %do.body15, !dbg !5301

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 867, i32 2305, i64 12) #9, !dbg !5305, !srcloc !5307
  br label %do.end16, !dbg !5305

do.end16:                                         ; preds = %do.body15
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 253) #9, !dbg !5308, !srcloc !5310
  br label %do.body17, !dbg !5301

do.body17:                                        ; preds = %do.end16
  br label %do.end18, !dbg !5311

do.end18:                                         ; preds = %do.body17
  br label %do.end19, !dbg !5301

do.end19:                                         ; preds = %do.end18
  br label %if.end, !dbg !5301

if.end:                                           ; preds = %do.end19, %lor.end
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !5298
  %tobool20 = icmp ne i32 %5, 0, !dbg !5298
  %lnot21 = xor i1 %tobool20, true, !dbg !5298
  %lnot23 = xor i1 %lnot21, true, !dbg !5298
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !5298
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !5298
  store i64 %conv25, i64* %tmp, align 8, !dbg !5299
  %6 = load i64, i64* %tmp, align 8, !dbg !5298
  %tobool26 = icmp ne i64 %6, 0, !dbg !5313
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !5314

if.then27:                                        ; preds = %if.end
  %call = call i8* @ERR_PTR(i64 -22) #10, !dbg !5315
  %7 = bitcast i8* %call to %struct.sg_table*, !dbg !5315
  store %struct.sg_table* %7, %struct.sg_table** %retval, align 8, !dbg !5316
  br label %return, !dbg !5316

if.end28:                                         ; preds = %if.end
  %8 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5317
  %call29 = call zeroext i1 @dma_buf_attachment_is_dynamic(%struct.dma_buf_attachment* %8) #10, !dbg !5319
  br i1 %call29, label %if.then30, label %if.end34, !dbg !5320

if.then30:                                        ; preds = %if.end28
  br label %do.body31, !dbg !5321

do.body31:                                        ; preds = %if.then30
  %9 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5322
  %dmabuf32 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %9, i32 0, i32 0, !dbg !5322
  %10 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf32, align 8, !dbg !5322
  %resv = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %10, i32 0, i32 13, !dbg !5322
  %11 = load %struct.dma_resv*, %struct.dma_resv** %resv, align 8, !dbg !5322
  %lock = getelementptr inbounds %struct.dma_resv, %struct.dma_resv* %11, i32 0, i32 0, !dbg !5322
  %base = getelementptr inbounds %struct.ww_mutex, %struct.ww_mutex* %lock, i32 0, i32 0, !dbg !5322
  br label %do.end33, !dbg !5322

do.end33:                                         ; preds = %do.body31
  br label %if.end34, !dbg !5322

if.end34:                                         ; preds = %do.end33, %if.end28
  %12 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5324
  %sgt = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %12, i32 0, i32 3, !dbg !5326
  %13 = load %struct.sg_table*, %struct.sg_table** %sgt, align 8, !dbg !5326
  %tobool35 = icmp ne %struct.sg_table* %13, null, !dbg !5324
  br i1 %tobool35, label %if.then36, label %if.end45, !dbg !5327

if.then36:                                        ; preds = %if.end34
  %14 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5328
  %dir = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %14, i32 0, i32 4, !dbg !5331
  %15 = load i32, i32* %dir, align 8, !dbg !5331
  %16 = load i32, i32* %direction.addr, align 4, !dbg !5332
  %cmp = icmp ne i32 %15, %16, !dbg !5333
  br i1 %cmp, label %land.lhs.true, label %if.end43, !dbg !5334

land.lhs.true:                                    ; preds = %if.then36
  %17 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5335
  %dir38 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %17, i32 0, i32 4, !dbg !5336
  %18 = load i32, i32* %dir38, align 8, !dbg !5336
  %cmp39 = icmp ne i32 %18, 0, !dbg !5337
  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !5338

if.then41:                                        ; preds = %land.lhs.true
  %call42 = call i8* @ERR_PTR(i64 -16) #10, !dbg !5339
  %19 = bitcast i8* %call42 to %struct.sg_table*, !dbg !5339
  store %struct.sg_table* %19, %struct.sg_table** %retval, align 8, !dbg !5340
  br label %return, !dbg !5340

if.end43:                                         ; preds = %land.lhs.true, %if.then36
  %20 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5341
  %sgt44 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %20, i32 0, i32 3, !dbg !5342
  %21 = load %struct.sg_table*, %struct.sg_table** %sgt44, align 8, !dbg !5342
  store %struct.sg_table* %21, %struct.sg_table** %retval, align 8, !dbg !5343
  br label %return, !dbg !5343

if.end45:                                         ; preds = %if.end34
  %22 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5344
  %dmabuf46 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %22, i32 0, i32 0, !dbg !5346
  %23 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf46, align 8, !dbg !5346
  %call47 = call zeroext i1 @dma_buf_is_dynamic(%struct.dma_buf* %23) #10, !dbg !5347
  br i1 %call47, label %if.then48, label %if.end61, !dbg !5348

if.then48:                                        ; preds = %if.end45
  br label %do.body49, !dbg !5349

do.body49:                                        ; preds = %if.then48
  %24 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5351
  %dmabuf50 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %24, i32 0, i32 0, !dbg !5351
  %25 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf50, align 8, !dbg !5351
  %resv51 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %25, i32 0, i32 13, !dbg !5351
  %26 = load %struct.dma_resv*, %struct.dma_resv** %resv51, align 8, !dbg !5351
  %lock52 = getelementptr inbounds %struct.dma_resv, %struct.dma_resv* %26, i32 0, i32 0, !dbg !5351
  %base53 = getelementptr inbounds %struct.ww_mutex, %struct.ww_mutex* %lock52, i32 0, i32 0, !dbg !5351
  br label %do.end54, !dbg !5351

do.end54:                                         ; preds = %do.body49
  %27 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5353
  %call55 = call i32 @dma_buf_pin(%struct.dma_buf_attachment* %27) #10, !dbg !5356
  store i32 %call55, i32* %r, align 4, !dbg !5357
  %28 = load i32, i32* %r, align 4, !dbg !5358
  %tobool56 = icmp ne i32 %28, 0, !dbg !5358
  br i1 %tobool56, label %if.then57, label %if.end60, !dbg !5360

if.then57:                                        ; preds = %do.end54
  %29 = load i32, i32* %r, align 4, !dbg !5361
  %conv58 = sext i32 %29 to i64, !dbg !5361
  %call59 = call i8* @ERR_PTR(i64 %conv58) #10, !dbg !5362
  %30 = bitcast i8* %call59 to %struct.sg_table*, !dbg !5362
  store %struct.sg_table* %30, %struct.sg_table** %retval, align 8, !dbg !5363
  br label %return, !dbg !5363

if.end60:                                         ; preds = %do.end54
  br label %if.end61, !dbg !5364

if.end61:                                         ; preds = %if.end60, %if.end45
  %31 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5365
  %dmabuf62 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %31, i32 0, i32 0, !dbg !5366
  %32 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf62, align 8, !dbg !5366
  %ops = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %32, i32 0, i32 3, !dbg !5367
  %33 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops, align 8, !dbg !5367
  %map_dma_buf = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %33, i32 0, i32 5, !dbg !5368
  %34 = load %struct.sg_table* (%struct.dma_buf_attachment*, i32)*, %struct.sg_table* (%struct.dma_buf_attachment*, i32)** %map_dma_buf, align 8, !dbg !5368
  %35 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5369
  %36 = load i32, i32* %direction.addr, align 4, !dbg !5370
  %call63 = call %struct.sg_table* %34(%struct.dma_buf_attachment* %35, i32 %36) #10, !dbg !5365
  store %struct.sg_table* %call63, %struct.sg_table** %sg_table, align 8, !dbg !5371
  %37 = load %struct.sg_table*, %struct.sg_table** %sg_table, align 8, !dbg !5372
  %tobool64 = icmp ne %struct.sg_table* %37, null, !dbg !5372
  br i1 %tobool64, label %if.end67, label %if.then65, !dbg !5374

if.then65:                                        ; preds = %if.end61
  %call66 = call i8* @ERR_PTR(i64 -12) #10, !dbg !5375
  %38 = bitcast i8* %call66 to %struct.sg_table*, !dbg !5375
  store %struct.sg_table* %38, %struct.sg_table** %sg_table, align 8, !dbg !5376
  br label %if.end67, !dbg !5377

if.end67:                                         ; preds = %if.then65, %if.end61
  %39 = load %struct.sg_table*, %struct.sg_table** %sg_table, align 8, !dbg !5378
  %40 = bitcast %struct.sg_table* %39 to i8*, !dbg !5378
  %call68 = call zeroext i1 @IS_ERR(i8* %40) #10, !dbg !5380
  br i1 %call68, label %land.lhs.true70, label %if.end75, !dbg !5381

land.lhs.true70:                                  ; preds = %if.end67
  %41 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5382
  %dmabuf71 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %41, i32 0, i32 0, !dbg !5383
  %42 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf71, align 8, !dbg !5383
  %call72 = call zeroext i1 @dma_buf_is_dynamic(%struct.dma_buf* %42) #10, !dbg !5384
  br i1 %call72, label %if.then74, label %if.end75, !dbg !5385

if.then74:                                        ; preds = %land.lhs.true70
  %43 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5386
  call void @dma_buf_unpin(%struct.dma_buf_attachment* %43) #10, !dbg !5387
  br label %if.end75, !dbg !5387

if.end75:                                         ; preds = %if.then74, %land.lhs.true70, %if.end67
  %44 = load %struct.sg_table*, %struct.sg_table** %sg_table, align 8, !dbg !5388
  %45 = bitcast %struct.sg_table* %44 to i8*, !dbg !5388
  %call76 = call zeroext i1 @IS_ERR(i8* %45) #10, !dbg !5390
  br i1 %call76, label %if.end85, label %land.lhs.true77, !dbg !5391

land.lhs.true77:                                  ; preds = %if.end75
  %46 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5392
  %dmabuf78 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %46, i32 0, i32 0, !dbg !5393
  %47 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf78, align 8, !dbg !5393
  %ops79 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %47, i32 0, i32 3, !dbg !5394
  %48 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops79, align 8, !dbg !5394
  %cache_sgt_mapping = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %48, i32 0, i32 0, !dbg !5395
  %49 = load i8, i8* %cache_sgt_mapping, align 8, !dbg !5395
  %tobool80 = trunc i8 %49 to i1, !dbg !5395
  br i1 %tobool80, label %if.then82, label %if.end85, !dbg !5396

if.then82:                                        ; preds = %land.lhs.true77
  %50 = load %struct.sg_table*, %struct.sg_table** %sg_table, align 8, !dbg !5397
  %51 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5399
  %sgt83 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %51, i32 0, i32 3, !dbg !5400
  store %struct.sg_table* %50, %struct.sg_table** %sgt83, align 8, !dbg !5401
  %52 = load i32, i32* %direction.addr, align 4, !dbg !5402
  %53 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5403
  %dir84 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %53, i32 0, i32 4, !dbg !5404
  store i32 %52, i32* %dir84, align 8, !dbg !5405
  br label %if.end85, !dbg !5406

if.end85:                                         ; preds = %if.then82, %land.lhs.true77, %if.end75
  %54 = load %struct.sg_table*, %struct.sg_table** %sg_table, align 8, !dbg !5407
  store %struct.sg_table* %54, %struct.sg_table** %retval, align 8, !dbg !5408
  br label %return, !dbg !5408

return:                                           ; preds = %if.end85, %if.then57, %if.end43, %if.then41, %if.then27
  %55 = load %struct.sg_table*, %struct.sg_table** %retval, align 8, !dbg !5409
  ret %struct.sg_table* %55, !dbg !5409
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dma_buf_unmap_attachment(%struct.dma_buf_attachment* %attach, %struct.sg_table* %sg_table, i32 %direction) #0 !dbg !5410 {
entry:
  %attach.addr = alloca %struct.dma_buf_attachment*, align 8
  %sg_table.addr = alloca %struct.sg_table*, align 8
  %direction.addr = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.dma_buf_attachment* %attach, %struct.dma_buf_attachment** %attach.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_buf_attachment** %attach.addr, metadata !5411, metadata !DIExpression()), !dbg !5412
  store %struct.sg_table* %sg_table, %struct.sg_table** %sg_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sg_table** %sg_table.addr, metadata !5413, metadata !DIExpression()), !dbg !5414
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !5415, metadata !DIExpression()), !dbg !5416
  br label %do.body, !dbg !5417

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5418

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !5420

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !5418

do.end2:                                          ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5422, metadata !DIExpression()), !dbg !5425
  %0 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5425
  %tobool = icmp ne %struct.dma_buf_attachment* %0, null, !dbg !5425
  br i1 %tobool, label %lor.lhs.false, label %lor.end, !dbg !5425

lor.lhs.false:                                    ; preds = %do.end2
  %1 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5425
  %dmabuf = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %1, i32 0, i32 0, !dbg !5425
  %2 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !5425
  %tobool3 = icmp ne %struct.dma_buf* %2, null, !dbg !5425
  br i1 %tobool3, label %lor.rhs, label %lor.end, !dbg !5425

lor.rhs:                                          ; preds = %lor.lhs.false
  %3 = load %struct.sg_table*, %struct.sg_table** %sg_table.addr, align 8, !dbg !5425
  %tobool4 = icmp ne %struct.sg_table* %3, null, !dbg !5425
  %lnot = xor i1 %tobool4, true, !dbg !5425
  br label %lor.end, !dbg !5425

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %do.end2
  %4 = phi i1 [ true, %lor.lhs.false ], [ true, %do.end2 ], [ %lnot, %lor.rhs ]
  %lnot5 = xor i1 %4, true, !dbg !5425
  %lnot6 = xor i1 %lnot5, true, !dbg !5425
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !5425
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5425
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !5426
  %tobool7 = icmp ne i32 %5, 0, !dbg !5426
  %lnot8 = xor i1 %tobool7, true, !dbg !5426
  %lnot10 = xor i1 %lnot8, true, !dbg !5426
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !5426
  %conv = sext i32 %lnot.ext11 to i64, !dbg !5426
  %tobool12 = icmp ne i64 %conv, 0, !dbg !5426
  br i1 %tobool12, label %if.then, label %if.end, !dbg !5425

if.then:                                          ; preds = %lor.end
  br label %do.body13, !dbg !5426

do.body13:                                        ; preds = %if.then
  br label %do.body14, !dbg !5428

do.body14:                                        ; preds = %do.body13
  br label %do.end15, !dbg !5430

do.end15:                                         ; preds = %do.body14
  br label %do.body16, !dbg !5428

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 927, i32 2305, i64 12) #9, !dbg !5432, !srcloc !5434
  br label %do.end17, !dbg !5432

do.end17:                                         ; preds = %do.body16
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 254) #9, !dbg !5435, !srcloc !5437
  br label %do.body18, !dbg !5428

do.body18:                                        ; preds = %do.end17
  br label %do.end19, !dbg !5438

do.end19:                                         ; preds = %do.body18
  br label %do.end20, !dbg !5428

do.end20:                                         ; preds = %do.end19
  br label %if.end, !dbg !5428

if.end:                                           ; preds = %do.end20, %lor.end
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !5425
  %tobool21 = icmp ne i32 %6, 0, !dbg !5425
  %lnot22 = xor i1 %tobool21, true, !dbg !5425
  %lnot24 = xor i1 %lnot22, true, !dbg !5425
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !5425
  %conv26 = sext i32 %lnot.ext25 to i64, !dbg !5425
  store i64 %conv26, i64* %tmp, align 8, !dbg !5426
  %7 = load i64, i64* %tmp, align 8, !dbg !5425
  %tobool27 = icmp ne i64 %7, 0, !dbg !5440
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !5441

if.then28:                                        ; preds = %if.end
  br label %if.end53, !dbg !5442

if.end29:                                         ; preds = %if.end
  %8 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5443
  %call = call zeroext i1 @dma_buf_attachment_is_dynamic(%struct.dma_buf_attachment* %8) #10, !dbg !5445
  br i1 %call, label %if.then30, label %if.end34, !dbg !5446

if.then30:                                        ; preds = %if.end29
  br label %do.body31, !dbg !5447

do.body31:                                        ; preds = %if.then30
  %9 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5448
  %dmabuf32 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %9, i32 0, i32 0, !dbg !5448
  %10 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf32, align 8, !dbg !5448
  %resv = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %10, i32 0, i32 13, !dbg !5448
  %11 = load %struct.dma_resv*, %struct.dma_resv** %resv, align 8, !dbg !5448
  %lock = getelementptr inbounds %struct.dma_resv, %struct.dma_resv* %11, i32 0, i32 0, !dbg !5448
  %base = getelementptr inbounds %struct.ww_mutex, %struct.ww_mutex* %lock, i32 0, i32 0, !dbg !5448
  br label %do.end33, !dbg !5448

do.end33:                                         ; preds = %do.body31
  br label %if.end34, !dbg !5448

if.end34:                                         ; preds = %do.end33, %if.end29
  %12 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5450
  %sgt = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %12, i32 0, i32 3, !dbg !5452
  %13 = load %struct.sg_table*, %struct.sg_table** %sgt, align 8, !dbg !5452
  %14 = load %struct.sg_table*, %struct.sg_table** %sg_table.addr, align 8, !dbg !5453
  %cmp = icmp eq %struct.sg_table* %13, %14, !dbg !5454
  br i1 %cmp, label %if.then36, label %if.end37, !dbg !5455

if.then36:                                        ; preds = %if.end34
  br label %if.end53, !dbg !5456

if.end37:                                         ; preds = %if.end34
  %15 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5457
  %dmabuf38 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %15, i32 0, i32 0, !dbg !5459
  %16 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf38, align 8, !dbg !5459
  %call39 = call zeroext i1 @dma_buf_is_dynamic(%struct.dma_buf* %16) #10, !dbg !5460
  br i1 %call39, label %if.then40, label %if.end47, !dbg !5461

if.then40:                                        ; preds = %if.end37
  br label %do.body41, !dbg !5462

do.body41:                                        ; preds = %if.then40
  %17 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5463
  %dmabuf42 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %17, i32 0, i32 0, !dbg !5463
  %18 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf42, align 8, !dbg !5463
  %resv43 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %18, i32 0, i32 13, !dbg !5463
  %19 = load %struct.dma_resv*, %struct.dma_resv** %resv43, align 8, !dbg !5463
  %lock44 = getelementptr inbounds %struct.dma_resv, %struct.dma_resv* %19, i32 0, i32 0, !dbg !5463
  %base45 = getelementptr inbounds %struct.ww_mutex, %struct.ww_mutex* %lock44, i32 0, i32 0, !dbg !5463
  br label %do.end46, !dbg !5463

do.end46:                                         ; preds = %do.body41
  br label %if.end47, !dbg !5463

if.end47:                                         ; preds = %do.end46, %if.end37
  %20 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5465
  %dmabuf48 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %20, i32 0, i32 0, !dbg !5466
  %21 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf48, align 8, !dbg !5466
  %ops = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %21, i32 0, i32 3, !dbg !5467
  %22 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops, align 8, !dbg !5467
  %unmap_dma_buf = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %22, i32 0, i32 6, !dbg !5468
  %23 = load void (%struct.dma_buf_attachment*, %struct.sg_table*, i32)*, void (%struct.dma_buf_attachment*, %struct.sg_table*, i32)** %unmap_dma_buf, align 8, !dbg !5468
  %24 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5469
  %25 = load %struct.sg_table*, %struct.sg_table** %sg_table.addr, align 8, !dbg !5470
  %26 = load i32, i32* %direction.addr, align 4, !dbg !5471
  call void %23(%struct.dma_buf_attachment* %24, %struct.sg_table* %25, i32 %26) #10, !dbg !5465
  %27 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5472
  %dmabuf49 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %27, i32 0, i32 0, !dbg !5474
  %28 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf49, align 8, !dbg !5474
  %call50 = call zeroext i1 @dma_buf_is_dynamic(%struct.dma_buf* %28) #10, !dbg !5475
  br i1 %call50, label %if.then52, label %if.end53, !dbg !5476

if.then52:                                        ; preds = %if.end47
  %29 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach.addr, align 8, !dbg !5477
  call void @dma_buf_unpin(%struct.dma_buf_attachment* %29) #10, !dbg !5478
  br label %if.end53, !dbg !5478

if.end53:                                         ; preds = %if.then28, %if.then36, %if.then52, %if.end47
  ret void, !dbg !5479
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dma_buf_move_notify(%struct.dma_buf* %dmabuf) #0 !dbg !5480 {
entry:
  %dmabuf.addr = alloca %struct.dma_buf*, align 8
  %attach = alloca %struct.dma_buf_attachment*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dma_buf_attachment*, align 8
  %__mptr5 = alloca i8*, align 8
  %tmp10 = alloca %struct.dma_buf_attachment*, align 8
  store %struct.dma_buf* %dmabuf, %struct.dma_buf** %dmabuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf.addr, metadata !5481, metadata !DIExpression()), !dbg !5482
  call void @llvm.dbg.declare(metadata %struct.dma_buf_attachment** %attach, metadata !5483, metadata !DIExpression()), !dbg !5484
  br label %do.body, !dbg !5485

do.body:                                          ; preds = %entry
  %0 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5486
  %resv = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %0, i32 0, i32 13, !dbg !5486
  %1 = load %struct.dma_resv*, %struct.dma_resv** %resv, align 8, !dbg !5486
  %lock = getelementptr inbounds %struct.dma_resv, %struct.dma_resv* %1, i32 0, i32 0, !dbg !5486
  %base = getelementptr inbounds %struct.ww_mutex, %struct.ww_mutex* %lock, i32 0, i32 0, !dbg !5486
  br label %do.end, !dbg !5486

do.end:                                           ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5488, metadata !DIExpression()), !dbg !5491
  %2 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5491
  %attachments = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %2, i32 0, i32 2, !dbg !5491
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %attachments, i32 0, i32 0, !dbg !5491
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5491
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !5491
  store i8* %4, i8** %__mptr, align 8, !dbg !5491
  br label %do.body1, !dbg !5491

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !5492

do.end2:                                          ; preds = %do.body1
  %5 = load i8*, i8** %__mptr, align 8, !dbg !5491
  %add.ptr = getelementptr i8, i8* %5, i64 -16, !dbg !5491
  %6 = bitcast i8* %add.ptr to %struct.dma_buf_attachment*, !dbg !5491
  store %struct.dma_buf_attachment* %6, %struct.dma_buf_attachment** %tmp, align 8, !dbg !5492
  %7 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %tmp, align 8, !dbg !5491
  store %struct.dma_buf_attachment* %7, %struct.dma_buf_attachment** %attach, align 8, !dbg !5494
  br label %for.cond, !dbg !5494

for.cond:                                         ; preds = %do.end9, %do.end2
  %8 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !5495
  %node = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %8, i32 0, i32 2, !dbg !5495
  %9 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5495
  %attachments3 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %9, i32 0, i32 2, !dbg !5495
  %cmp = icmp eq %struct.list_head* %node, %attachments3, !dbg !5495
  %lnot = xor i1 %cmp, true, !dbg !5495
  br i1 %lnot, label %for.body, label %for.end, !dbg !5494

for.body:                                         ; preds = %for.cond
  %10 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !5497
  %importer_ops = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %10, i32 0, i32 6, !dbg !5499
  %11 = load %struct.dma_buf_attach_ops*, %struct.dma_buf_attach_ops** %importer_ops, align 8, !dbg !5499
  %tobool = icmp ne %struct.dma_buf_attach_ops* %11, null, !dbg !5497
  br i1 %tobool, label %if.then, label %if.end, !dbg !5500

if.then:                                          ; preds = %for.body
  %12 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !5501
  %importer_ops4 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %12, i32 0, i32 6, !dbg !5502
  %13 = load %struct.dma_buf_attach_ops*, %struct.dma_buf_attach_ops** %importer_ops4, align 8, !dbg !5502
  %move_notify = getelementptr inbounds %struct.dma_buf_attach_ops, %struct.dma_buf_attach_ops* %13, i32 0, i32 1, !dbg !5503
  %14 = load void (%struct.dma_buf_attachment*)*, void (%struct.dma_buf_attachment*)** %move_notify, align 8, !dbg !5503
  %15 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !5504
  call void %14(%struct.dma_buf_attachment* %15) #10, !dbg !5501
  br label %if.end, !dbg !5501

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !5499

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr5, metadata !5505, metadata !DIExpression()), !dbg !5507
  %16 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %attach, align 8, !dbg !5507
  %node6 = getelementptr inbounds %struct.dma_buf_attachment, %struct.dma_buf_attachment* %16, i32 0, i32 2, !dbg !5507
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %node6, i32 0, i32 0, !dbg !5507
  %17 = load %struct.list_head*, %struct.list_head** %next7, align 8, !dbg !5507
  %18 = bitcast %struct.list_head* %17 to i8*, !dbg !5507
  store i8* %18, i8** %__mptr5, align 8, !dbg !5507
  br label %do.body8, !dbg !5507

do.body8:                                         ; preds = %for.inc
  br label %do.end9, !dbg !5508

do.end9:                                          ; preds = %do.body8
  %19 = load i8*, i8** %__mptr5, align 8, !dbg !5507
  %add.ptr11 = getelementptr i8, i8* %19, i64 -16, !dbg !5507
  %20 = bitcast i8* %add.ptr11 to %struct.dma_buf_attachment*, !dbg !5507
  store %struct.dma_buf_attachment* %20, %struct.dma_buf_attachment** %tmp10, align 8, !dbg !5508
  %21 = load %struct.dma_buf_attachment*, %struct.dma_buf_attachment** %tmp10, align 8, !dbg !5507
  store %struct.dma_buf_attachment* %21, %struct.dma_buf_attachment** %attach, align 8, !dbg !5495
  br label %for.cond, !dbg !5495, !llvm.loop !5510

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5512
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dma_buf_begin_cpu_access(%struct.dma_buf* %dmabuf, i32 %direction) #0 !dbg !5513 {
entry:
  %retval = alloca i32, align 4
  %dmabuf.addr = alloca %struct.dma_buf*, align 8
  %direction.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.dma_buf* %dmabuf, %struct.dma_buf** %dmabuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf.addr, metadata !5514, metadata !DIExpression()), !dbg !5515
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !5516, metadata !DIExpression()), !dbg !5517
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5518, metadata !DIExpression()), !dbg !5519
  store i32 0, i32* %ret, align 4, !dbg !5519
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5520, metadata !DIExpression()), !dbg !5523
  %0 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5523
  %tobool = icmp ne %struct.dma_buf* %0, null, !dbg !5523
  %lnot = xor i1 %tobool, true, !dbg !5523
  %lnot1 = xor i1 %lnot, true, !dbg !5523
  %lnot2 = xor i1 %lnot1, true, !dbg !5523
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5523
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5523
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !5524
  %tobool3 = icmp ne i32 %1, 0, !dbg !5524
  %lnot4 = xor i1 %tobool3, true, !dbg !5524
  %lnot6 = xor i1 %lnot4, true, !dbg !5524
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !5524
  %conv = sext i32 %lnot.ext7 to i64, !dbg !5524
  %tobool8 = icmp ne i64 %conv, 0, !dbg !5524
  br i1 %tobool8, label %if.then, label %if.end, !dbg !5523

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5524

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !5526

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !5528

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !5526

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 1087, i32 2305, i64 12) #9, !dbg !5530, !srcloc !5532
  br label %do.end11, !dbg !5530

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 257) #9, !dbg !5533, !srcloc !5535
  br label %do.body12, !dbg !5526

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !5536

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !5526

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !5526

if.end:                                           ; preds = %do.end14, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !5523
  %tobool15 = icmp ne i32 %2, 0, !dbg !5523
  %lnot16 = xor i1 %tobool15, true, !dbg !5523
  %lnot18 = xor i1 %lnot16, true, !dbg !5523
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !5523
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !5523
  store i64 %conv20, i64* %tmp, align 8, !dbg !5524
  %3 = load i64, i64* %tmp, align 8, !dbg !5523
  %tobool21 = icmp ne i64 %3, 0, !dbg !5538
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !5539

if.then22:                                        ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !5540
  br label %return, !dbg !5540

if.end23:                                         ; preds = %if.end
  %4 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5541
  %ops = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %4, i32 0, i32 3, !dbg !5543
  %5 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops, align 8, !dbg !5543
  %begin_cpu_access = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %5, i32 0, i32 8, !dbg !5544
  %6 = load i32 (%struct.dma_buf*, i32)*, i32 (%struct.dma_buf*, i32)** %begin_cpu_access, align 8, !dbg !5544
  %tobool24 = icmp ne i32 (%struct.dma_buf*, i32)* %6, null, !dbg !5541
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !5545

if.then25:                                        ; preds = %if.end23
  %7 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5546
  %ops26 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %7, i32 0, i32 3, !dbg !5547
  %8 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops26, align 8, !dbg !5547
  %begin_cpu_access27 = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %8, i32 0, i32 8, !dbg !5548
  %9 = load i32 (%struct.dma_buf*, i32)*, i32 (%struct.dma_buf*, i32)** %begin_cpu_access27, align 8, !dbg !5548
  %10 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5549
  %11 = load i32, i32* %direction.addr, align 4, !dbg !5550
  %call = call i32 %9(%struct.dma_buf* %10, i32 %11) #10, !dbg !5546
  store i32 %call, i32* %ret, align 4, !dbg !5551
  br label %if.end28, !dbg !5552

if.end28:                                         ; preds = %if.then25, %if.end23
  %12 = load i32, i32* %ret, align 4, !dbg !5553
  %cmp = icmp eq i32 %12, 0, !dbg !5555
  br i1 %cmp, label %if.then30, label %if.end32, !dbg !5556

if.then30:                                        ; preds = %if.end28
  %13 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5557
  %14 = load i32, i32* %direction.addr, align 4, !dbg !5558
  %call31 = call i32 @__dma_buf_begin_cpu_access(%struct.dma_buf* %13, i32 %14) #10, !dbg !5559
  store i32 %call31, i32* %ret, align 4, !dbg !5560
  br label %if.end32, !dbg !5561

if.end32:                                         ; preds = %if.then30, %if.end28
  %15 = load i32, i32* %ret, align 4, !dbg !5562
  store i32 %15, i32* %retval, align 4, !dbg !5563
  br label %return, !dbg !5563

return:                                           ; preds = %if.end32, %if.then22
  %16 = load i32, i32* %retval, align 4, !dbg !5564
  ret i32 %16, !dbg !5564
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__dma_buf_begin_cpu_access(%struct.dma_buf* %dmabuf, i32 %direction) #0 !dbg !5565 {
entry:
  %retval = alloca i32, align 4
  %dmabuf.addr = alloca %struct.dma_buf*, align 8
  %direction.addr = alloca i32, align 4
  %write = alloca i8, align 1
  %resv = alloca %struct.dma_resv*, align 8
  %ret = alloca i64, align 8
  store %struct.dma_buf* %dmabuf, %struct.dma_buf** %dmabuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf.addr, metadata !5566, metadata !DIExpression()), !dbg !5567
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !5568, metadata !DIExpression()), !dbg !5569
  call void @llvm.dbg.declare(metadata i8* %write, metadata !5570, metadata !DIExpression()), !dbg !5571
  %0 = load i32, i32* %direction.addr, align 4, !dbg !5572
  %cmp = icmp eq i32 %0, 0, !dbg !5573
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !5574

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %direction.addr, align 4, !dbg !5575
  %cmp1 = icmp eq i32 %1, 1, !dbg !5576
  br label %lor.end, !dbg !5574

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  %frombool = zext i1 %2 to i8, !dbg !5571
  store i8 %frombool, i8* %write, align 1, !dbg !5571
  call void @llvm.dbg.declare(metadata %struct.dma_resv** %resv, metadata !5577, metadata !DIExpression()), !dbg !5578
  %3 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5579
  %resv2 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %3, i32 0, i32 13, !dbg !5580
  %4 = load %struct.dma_resv*, %struct.dma_resv** %resv2, align 8, !dbg !5580
  store %struct.dma_resv* %4, %struct.dma_resv** %resv, align 8, !dbg !5578
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !5581, metadata !DIExpression()), !dbg !5582
  %5 = load %struct.dma_resv*, %struct.dma_resv** %resv, align 8, !dbg !5583
  %6 = load i8, i8* %write, align 1, !dbg !5584
  %tobool = trunc i8 %6 to i1, !dbg !5584
  %call = call i64 @dma_resv_wait_timeout_rcu(%struct.dma_resv* %5, i1 zeroext %tobool, i1 zeroext true, i64 9223372036854775807) #10, !dbg !5585
  store i64 %call, i64* %ret, align 8, !dbg !5586
  %7 = load i64, i64* %ret, align 8, !dbg !5587
  %cmp3 = icmp slt i64 %7, 0, !dbg !5589
  br i1 %cmp3, label %if.then, label %if.end, !dbg !5590

if.then:                                          ; preds = %lor.end
  %8 = load i64, i64* %ret, align 8, !dbg !5591
  %conv = trunc i64 %8 to i32, !dbg !5591
  store i32 %conv, i32* %retval, align 4, !dbg !5592
  br label %return, !dbg !5592

if.end:                                           ; preds = %lor.end
  store i32 0, i32* %retval, align 4, !dbg !5593
  br label %return, !dbg !5593

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !5594
  ret i32 %9, !dbg !5594
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dma_buf_end_cpu_access(%struct.dma_buf* %dmabuf, i32 %direction) #0 !dbg !5595 {
entry:
  %dmabuf.addr = alloca %struct.dma_buf*, align 8
  %direction.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.dma_buf* %dmabuf, %struct.dma_buf** %dmabuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf.addr, metadata !5596, metadata !DIExpression()), !dbg !5597
  store i32 %direction, i32* %direction.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %direction.addr, metadata !5598, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5600, metadata !DIExpression()), !dbg !5601
  store i32 0, i32* %ret, align 4, !dbg !5601
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5602, metadata !DIExpression()), !dbg !5604
  %0 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5604
  %tobool = icmp ne %struct.dma_buf* %0, null, !dbg !5604
  %lnot = xor i1 %tobool, true, !dbg !5604
  %lnot1 = xor i1 %lnot, true, !dbg !5604
  %lnot2 = xor i1 %lnot1, true, !dbg !5604
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5604
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5604
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !5605
  %tobool3 = icmp ne i32 %1, 0, !dbg !5605
  %lnot4 = xor i1 %tobool3, true, !dbg !5605
  %lnot6 = xor i1 %lnot4, true, !dbg !5605
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !5605
  %conv = sext i32 %lnot.ext7 to i64, !dbg !5605
  %tobool8 = icmp ne i64 %conv, 0, !dbg !5605
  br i1 %tobool8, label %if.then, label %if.end, !dbg !5604

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5605

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !5607

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !5609

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !5607

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 1121, i32 2305, i64 12) #9, !dbg !5611, !srcloc !5613
  br label %do.end11, !dbg !5611

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 258) #9, !dbg !5614, !srcloc !5616
  br label %do.body12, !dbg !5607

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !5617

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !5607

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !5607

if.end:                                           ; preds = %do.end14, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !5604
  %tobool15 = icmp ne i32 %2, 0, !dbg !5604
  %lnot16 = xor i1 %tobool15, true, !dbg !5604
  %lnot18 = xor i1 %lnot16, true, !dbg !5604
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !5604
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !5604
  store i64 %conv20, i64* %tmp, align 8, !dbg !5605
  %3 = load i64, i64* %tmp, align 8, !dbg !5604
  %4 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5619
  %ops = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %4, i32 0, i32 3, !dbg !5621
  %5 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops, align 8, !dbg !5621
  %end_cpu_access = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %5, i32 0, i32 9, !dbg !5622
  %6 = load i32 (%struct.dma_buf*, i32)*, i32 (%struct.dma_buf*, i32)** %end_cpu_access, align 8, !dbg !5622
  %tobool21 = icmp ne i32 (%struct.dma_buf*, i32)* %6, null, !dbg !5619
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !5623

if.then22:                                        ; preds = %if.end
  %7 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5624
  %ops23 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %7, i32 0, i32 3, !dbg !5625
  %8 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops23, align 8, !dbg !5625
  %end_cpu_access24 = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %8, i32 0, i32 9, !dbg !5626
  %9 = load i32 (%struct.dma_buf*, i32)*, i32 (%struct.dma_buf*, i32)** %end_cpu_access24, align 8, !dbg !5626
  %10 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5627
  %11 = load i32, i32* %direction.addr, align 4, !dbg !5628
  %call = call i32 %9(%struct.dma_buf* %10, i32 %11) #10, !dbg !5624
  store i32 %call, i32* %ret, align 4, !dbg !5629
  br label %if.end25, !dbg !5630

if.end25:                                         ; preds = %if.then22, %if.end
  %12 = load i32, i32* %ret, align 4, !dbg !5631
  ret i32 %12, !dbg !5632
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dma_buf_mmap(%struct.dma_buf* %dmabuf, %struct.vm_area_struct* %vma, i64 %pgoff) #0 !dbg !5633 {
entry:
  %retval = alloca i32, align 4
  %dmabuf.addr = alloca %struct.dma_buf*, align 8
  %vma.addr = alloca %struct.vm_area_struct*, align 8
  %pgoff.addr = alloca i64, align 8
  %oldfile = alloca %struct.file*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.dma_buf* %dmabuf, %struct.dma_buf** %dmabuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf.addr, metadata !5636, metadata !DIExpression()), !dbg !5637
  store %struct.vm_area_struct* %vma, %struct.vm_area_struct** %vma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vm_area_struct** %vma.addr, metadata !5638, metadata !DIExpression()), !dbg !5639
  store i64 %pgoff, i64* %pgoff.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pgoff.addr, metadata !5640, metadata !DIExpression()), !dbg !5641
  call void @llvm.dbg.declare(metadata %struct.file** %oldfile, metadata !5642, metadata !DIExpression()), !dbg !5643
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5644, metadata !DIExpression()), !dbg !5645
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5646, metadata !DIExpression()), !dbg !5649
  %0 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5649
  %tobool = icmp ne %struct.dma_buf* %0, null, !dbg !5649
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !5649

lor.rhs:                                          ; preds = %entry
  %1 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !5649
  %tobool1 = icmp ne %struct.vm_area_struct* %1, null, !dbg !5649
  %lnot = xor i1 %tobool1, true, !dbg !5649
  br label %lor.end, !dbg !5649

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %lnot, %lor.rhs ]
  %lnot2 = xor i1 %2, true, !dbg !5649
  %lnot3 = xor i1 %lnot2, true, !dbg !5649
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !5649
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5649
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !5650
  %tobool4 = icmp ne i32 %3, 0, !dbg !5650
  %lnot5 = xor i1 %tobool4, true, !dbg !5650
  %lnot7 = xor i1 %lnot5, true, !dbg !5650
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !5650
  %conv = sext i32 %lnot.ext8 to i64, !dbg !5650
  %tobool9 = icmp ne i64 %conv, 0, !dbg !5650
  br i1 %tobool9, label %if.then, label %if.end, !dbg !5649

if.then:                                          ; preds = %lor.end
  br label %do.body, !dbg !5650

do.body:                                          ; preds = %if.then
  br label %do.body10, !dbg !5652

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !5654

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !5652

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 1151, i32 2305, i64 12) #9, !dbg !5656, !srcloc !5658
  br label %do.end12, !dbg !5656

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 259) #9, !dbg !5659, !srcloc !5661
  br label %do.body13, !dbg !5652

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !5662

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !5652

do.end15:                                         ; preds = %do.end14
  br label %if.end, !dbg !5652

if.end:                                           ; preds = %do.end15, %lor.end
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !5649
  %tobool16 = icmp ne i32 %4, 0, !dbg !5649
  %lnot17 = xor i1 %tobool16, true, !dbg !5649
  %lnot19 = xor i1 %lnot17, true, !dbg !5649
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !5649
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !5649
  store i64 %conv21, i64* %tmp, align 8, !dbg !5650
  %5 = load i64, i64* %tmp, align 8, !dbg !5649
  %tobool22 = icmp ne i64 %5, 0, !dbg !5664
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !5665

if.then23:                                        ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !5666
  br label %return, !dbg !5666

if.end24:                                         ; preds = %if.end
  %6 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5667
  %ops = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %6, i32 0, i32 3, !dbg !5669
  %7 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops, align 8, !dbg !5669
  %mmap = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %7, i32 0, i32 10, !dbg !5670
  %8 = load i32 (%struct.dma_buf*, %struct.vm_area_struct*)*, i32 (%struct.dma_buf*, %struct.vm_area_struct*)** %mmap, align 8, !dbg !5670
  %tobool25 = icmp ne i32 (%struct.dma_buf*, %struct.vm_area_struct*)* %8, null, !dbg !5667
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !5671

if.then26:                                        ; preds = %if.end24
  store i32 -22, i32* %retval, align 4, !dbg !5672
  br label %return, !dbg !5672

if.end27:                                         ; preds = %if.end24
  %9 = load i64, i64* %pgoff.addr, align 8, !dbg !5673
  %10 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !5675
  %call = call i64 @vma_pages(%struct.vm_area_struct* %10) #10, !dbg !5676
  %add = add i64 %9, %call, !dbg !5677
  %11 = load i64, i64* %pgoff.addr, align 8, !dbg !5678
  %cmp = icmp ult i64 %add, %11, !dbg !5679
  br i1 %cmp, label %if.then29, label %if.end30, !dbg !5680

if.then29:                                        ; preds = %if.end27
  store i32 -75, i32* %retval, align 4, !dbg !5681
  br label %return, !dbg !5681

if.end30:                                         ; preds = %if.end27
  %12 = load i64, i64* %pgoff.addr, align 8, !dbg !5682
  %13 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !5684
  %call31 = call i64 @vma_pages(%struct.vm_area_struct* %13) #10, !dbg !5685
  %add32 = add i64 %12, %call31, !dbg !5686
  %14 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5687
  %size = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %14, i32 0, i32 0, !dbg !5688
  %15 = load i64, i64* %size, align 8, !dbg !5688
  %shr = lshr i64 %15, 12, !dbg !5689
  %cmp33 = icmp ugt i64 %add32, %shr, !dbg !5690
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !5691

if.then35:                                        ; preds = %if.end30
  store i32 -22, i32* %retval, align 4, !dbg !5692
  br label %return, !dbg !5692

if.end36:                                         ; preds = %if.end30
  %16 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5693
  %file = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %16, i32 0, i32 1, !dbg !5694
  %17 = load %struct.file*, %struct.file** %file, align 8, !dbg !5694
  %call37 = call %struct.file* @get_file(%struct.file* %17) #10, !dbg !5695
  %18 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !5696
  %vm_file = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %18, i32 0, i32 14, !dbg !5697
  %19 = load %struct.file*, %struct.file** %vm_file, align 8, !dbg !5697
  store %struct.file* %19, %struct.file** %oldfile, align 8, !dbg !5698
  %20 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5699
  %file38 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %20, i32 0, i32 1, !dbg !5700
  %21 = load %struct.file*, %struct.file** %file38, align 8, !dbg !5700
  %22 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !5701
  %vm_file39 = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %22, i32 0, i32 14, !dbg !5702
  store %struct.file* %21, %struct.file** %vm_file39, align 8, !dbg !5703
  %23 = load i64, i64* %pgoff.addr, align 8, !dbg !5704
  %24 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !5705
  %vm_pgoff = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %24, i32 0, i32 13, !dbg !5706
  store i64 %23, i64* %vm_pgoff, align 8, !dbg !5707
  %25 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5708
  %ops40 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %25, i32 0, i32 3, !dbg !5709
  %26 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops40, align 8, !dbg !5709
  %mmap41 = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %26, i32 0, i32 10, !dbg !5710
  %27 = load i32 (%struct.dma_buf*, %struct.vm_area_struct*)*, i32 (%struct.dma_buf*, %struct.vm_area_struct*)** %mmap41, align 8, !dbg !5710
  %28 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5711
  %29 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !5712
  %call42 = call i32 %27(%struct.dma_buf* %28, %struct.vm_area_struct* %29) #10, !dbg !5708
  store i32 %call42, i32* %ret, align 4, !dbg !5713
  %30 = load i32, i32* %ret, align 4, !dbg !5714
  %tobool43 = icmp ne i32 %30, 0, !dbg !5714
  br i1 %tobool43, label %if.then44, label %if.else, !dbg !5716

if.then44:                                        ; preds = %if.end36
  %31 = load %struct.file*, %struct.file** %oldfile, align 8, !dbg !5717
  %32 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !5719
  %vm_file45 = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %32, i32 0, i32 14, !dbg !5720
  store %struct.file* %31, %struct.file** %vm_file45, align 8, !dbg !5721
  %33 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5722
  %file46 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %33, i32 0, i32 1, !dbg !5723
  %34 = load %struct.file*, %struct.file** %file46, align 8, !dbg !5723
  call void @fput(%struct.file* %34) #10, !dbg !5724
  br label %if.end50, !dbg !5725

if.else:                                          ; preds = %if.end36
  %35 = load %struct.file*, %struct.file** %oldfile, align 8, !dbg !5726
  %tobool47 = icmp ne %struct.file* %35, null, !dbg !5726
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !5729

if.then48:                                        ; preds = %if.else
  %36 = load %struct.file*, %struct.file** %oldfile, align 8, !dbg !5730
  call void @fput(%struct.file* %36) #10, !dbg !5731
  br label %if.end49, !dbg !5731

if.end49:                                         ; preds = %if.then48, %if.else
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then44
  %37 = load i32, i32* %ret, align 4, !dbg !5732
  store i32 %37, i32* %retval, align 4, !dbg !5733
  br label %return, !dbg !5733

return:                                           ; preds = %if.end50, %if.then35, %if.then29, %if.then26, %if.then23
  %38 = load i32, i32* %retval, align 4, !dbg !5734
  ret i32 %38, !dbg !5734
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @vma_pages(%struct.vm_area_struct* %vma) #0 !dbg !5735 {
entry:
  %vma.addr = alloca %struct.vm_area_struct*, align 8
  store %struct.vm_area_struct* %vma, %struct.vm_area_struct** %vma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vm_area_struct** %vma.addr, metadata !5736, metadata !DIExpression()), !dbg !5737
  %0 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !5738
  %vm_end = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %0, i32 0, i32 1, !dbg !5739
  %1 = load i64, i64* %vm_end, align 8, !dbg !5739
  %2 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !5740
  %vm_start = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %2, i32 0, i32 0, !dbg !5741
  %3 = load i64, i64* %vm_start, align 8, !dbg !5741
  %sub = sub i64 %1, %3, !dbg !5742
  %shr = lshr i64 %sub, 12, !dbg !5743
  ret i64 %shr, !dbg !5744
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.file* @get_file(%struct.file* %f) #0 !dbg !5745 {
entry:
  %v.addr.i1.i.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i1.i.i, metadata !5748, metadata !DIExpression()), !dbg !5754
  %v.addr.i.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i.i, metadata !5763, metadata !DIExpression()), !dbg !5771
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5773, metadata !DIExpression()), !dbg !5774
  %v.addr.i.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i.i, metadata !5775, metadata !DIExpression()), !dbg !5776
  %v.addr.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i, metadata !5777, metadata !DIExpression()), !dbg !5778
  %f.addr = alloca %struct.file*, align 8
  store %struct.file* %f, %struct.file** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %f.addr, metadata !5779, metadata !DIExpression()), !dbg !5780
  %0 = load %struct.file*, %struct.file** %f.addr, align 8, !dbg !5781
  %f_count = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 6, !dbg !5782
  store %struct.atomic64_t* %f_count, %struct.atomic64_t** %v.addr.i, align 8
  %1 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i, align 8, !dbg !5783
  store %struct.atomic64_t* %1, %struct.atomic64_t** %v.addr.i.i, align 8
  %2 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i.i, align 8, !dbg !5784
  %3 = bitcast %struct.atomic64_t* %2 to i8*, !dbg !5784
  store i8* %3, i8** %v.addr.i.i.i, align 8
  store i64 8, i64* %size.addr.i.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i.i, align 8, !dbg !5785
  %5 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5786
  %conv.i.i.i = trunc i64 %5 to i32, !dbg !5786
  %call.i.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i.i) #12, !dbg !5787
  %6 = load i8*, i8** %v.addr.i.i.i, align 8, !dbg !5788
  %7 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5788
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #12, !dbg !5788
  %8 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i.i, align 8, !dbg !5789
  store %struct.atomic64_t* %8, %struct.atomic64_t** %v.addr.i1.i.i, align 8
  %9 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i1.i.i, align 8, !dbg !5790
  %counter.i.i.i = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %9, i32 0, i32 0, !dbg !5791
  %10 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i1.i.i, align 8, !dbg !5792
  %counter1.i.i.i = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %10, i32 0, i32 0, !dbg !5793
  call void asm sideeffect "incq $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %counter.i.i.i, i64* %counter1.i.i.i) #9, !dbg !5794, !srcloc !5795
  %11 = load %struct.file*, %struct.file** %f.addr, align 8, !dbg !5796
  ret %struct.file* %11, !dbg !5797
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @dma_buf_vmap(%struct.dma_buf* %dmabuf) #0 !dbg !5798 {
entry:
  %retval = alloca i8*, align 8
  %dmabuf.addr = alloca %struct.dma_buf*, align 8
  %ptr = alloca i8*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on75 = alloca i32, align 4
  %tmp98 = alloca i64, align 8
  store %struct.dma_buf* %dmabuf, %struct.dma_buf** %dmabuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf.addr, metadata !5799, metadata !DIExpression()), !dbg !5800
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !5801, metadata !DIExpression()), !dbg !5802
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5803, metadata !DIExpression()), !dbg !5806
  %0 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5806
  %tobool = icmp ne %struct.dma_buf* %0, null, !dbg !5806
  %lnot = xor i1 %tobool, true, !dbg !5806
  %lnot1 = xor i1 %lnot, true, !dbg !5806
  %lnot2 = xor i1 %lnot1, true, !dbg !5806
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5806
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5806
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !5807
  %tobool3 = icmp ne i32 %1, 0, !dbg !5807
  %lnot4 = xor i1 %tobool3, true, !dbg !5807
  %lnot6 = xor i1 %lnot4, true, !dbg !5807
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !5807
  %conv = sext i32 %lnot.ext7 to i64, !dbg !5807
  %tobool8 = icmp ne i64 %conv, 0, !dbg !5807
  br i1 %tobool8, label %if.then, label %if.end, !dbg !5806

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5807

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !5809

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !5811

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !5809

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 1203, i32 2305, i64 12) #9, !dbg !5813, !srcloc !5815
  br label %do.end11, !dbg !5813

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 260) #9, !dbg !5816, !srcloc !5818
  br label %do.body12, !dbg !5809

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !5819

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !5809

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !5809

if.end:                                           ; preds = %do.end14, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !5806
  %tobool15 = icmp ne i32 %2, 0, !dbg !5806
  %lnot16 = xor i1 %tobool15, true, !dbg !5806
  %lnot18 = xor i1 %lnot16, true, !dbg !5806
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !5806
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !5806
  store i64 %conv20, i64* %tmp, align 8, !dbg !5807
  %3 = load i64, i64* %tmp, align 8, !dbg !5806
  %tobool21 = icmp ne i64 %3, 0, !dbg !5821
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !5822

if.then22:                                        ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !5823
  br label %return, !dbg !5823

if.end23:                                         ; preds = %if.end
  %4 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5824
  %ops = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %4, i32 0, i32 3, !dbg !5826
  %5 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops, align 8, !dbg !5826
  %vmap = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %5, i32 0, i32 11, !dbg !5827
  %6 = load i8* (%struct.dma_buf*)*, i8* (%struct.dma_buf*)** %vmap, align 8, !dbg !5827
  %tobool24 = icmp ne i8* (%struct.dma_buf*)* %6, null, !dbg !5824
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !5828

if.then25:                                        ; preds = %if.end23
  store i8* null, i8** %retval, align 8, !dbg !5829
  br label %return, !dbg !5829

if.end26:                                         ; preds = %if.end23
  %7 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5830
  %lock = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %7, i32 0, i32 4, !dbg !5831
  call void @mutex_lock(%struct.mutex* %lock) #10, !dbg !5832
  %8 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5833
  %vmapping_counter = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %8, i32 0, i32 5, !dbg !5835
  %9 = load i32, i32* %vmapping_counter, align 8, !dbg !5835
  %tobool27 = icmp ne i32 %9, 0, !dbg !5833
  br i1 %tobool27, label %if.then28, label %if.end52, !dbg !5836

if.then28:                                        ; preds = %if.end26
  %10 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5837
  %vmapping_counter29 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %10, i32 0, i32 5, !dbg !5839
  %11 = load i32, i32* %vmapping_counter29, align 8, !dbg !5840
  %inc = add i32 %11, 1, !dbg !5840
  store i32 %inc, i32* %vmapping_counter29, align 8, !dbg !5840
  br label %do.body30, !dbg !5841

do.body30:                                        ; preds = %if.then28
  %12 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5842
  %vmap_ptr = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %12, i32 0, i32 6, !dbg !5842
  %13 = load i8*, i8** %vmap_ptr, align 8, !dbg !5842
  %tobool31 = icmp ne i8* %13, null, !dbg !5842
  %lnot32 = xor i1 %tobool31, true, !dbg !5842
  %lnot34 = xor i1 %lnot32, true, !dbg !5842
  %lnot36 = xor i1 %lnot34, true, !dbg !5842
  %lnot.ext37 = zext i1 %lnot36 to i32, !dbg !5842
  %conv38 = sext i32 %lnot.ext37 to i64, !dbg !5842
  %tobool39 = icmp ne i64 %conv38, 0, !dbg !5842
  br i1 %tobool39, label %if.then40, label %if.end49, !dbg !5845

if.then40:                                        ; preds = %do.body30
  br label %do.body41, !dbg !5842

do.body41:                                        ; preds = %if.then40
  br label %do.body42, !dbg !5846

do.body42:                                        ; preds = %do.body41
  br label %do.end43, !dbg !5848

do.end43:                                         ; preds = %do.body42
  br label %do.body44, !dbg !5846

do.body44:                                        ; preds = %do.end43
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 1212, i32 0, i64 12) #9, !dbg !5850, !srcloc !5852
  br label %do.end45, !dbg !5850

do.end45:                                         ; preds = %do.body44
  br label %do.body46, !dbg !5846

do.body46:                                        ; preds = %do.end45
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 261) #9, !dbg !5853, !srcloc !5856
  unreachable, !dbg !5857

do.end47:                                         ; No predecessors!
  br label %do.end48, !dbg !5846

do.end48:                                         ; preds = %do.end47
  br label %if.end49, !dbg !5846

if.end49:                                         ; preds = %do.end48, %do.body30
  br label %do.end50, !dbg !5845

do.end50:                                         ; preds = %if.end49
  %14 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5858
  %vmap_ptr51 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %14, i32 0, i32 6, !dbg !5859
  %15 = load i8*, i8** %vmap_ptr51, align 8, !dbg !5859
  store i8* %15, i8** %ptr, align 8, !dbg !5860
  br label %out_unlock, !dbg !5861

if.end52:                                         ; preds = %if.end26
  br label %do.body53, !dbg !5862

do.body53:                                        ; preds = %if.end52
  %16 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5863
  %vmap_ptr54 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %16, i32 0, i32 6, !dbg !5863
  %17 = load i8*, i8** %vmap_ptr54, align 8, !dbg !5863
  %tobool55 = icmp ne i8* %17, null, !dbg !5863
  %lnot56 = xor i1 %tobool55, true, !dbg !5863
  %lnot58 = xor i1 %lnot56, true, !dbg !5863
  %lnot.ext59 = zext i1 %lnot58 to i32, !dbg !5863
  %conv60 = sext i32 %lnot.ext59 to i64, !dbg !5863
  %tobool61 = icmp ne i64 %conv60, 0, !dbg !5863
  br i1 %tobool61, label %if.then62, label %if.end71, !dbg !5866

if.then62:                                        ; preds = %do.body53
  br label %do.body63, !dbg !5863

do.body63:                                        ; preds = %if.then62
  br label %do.body64, !dbg !5867

do.body64:                                        ; preds = %do.body63
  br label %do.end65, !dbg !5869

do.end65:                                         ; preds = %do.body64
  br label %do.body66, !dbg !5867

do.body66:                                        ; preds = %do.end65
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 1217, i32 0, i64 12) #9, !dbg !5871, !srcloc !5873
  br label %do.end67, !dbg !5871

do.end67:                                         ; preds = %do.body66
  br label %do.body68, !dbg !5867

do.body68:                                        ; preds = %do.end67
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 262) #9, !dbg !5874, !srcloc !5877
  unreachable, !dbg !5878

do.end69:                                         ; No predecessors!
  br label %do.end70, !dbg !5867

do.end70:                                         ; preds = %do.end69
  br label %if.end71, !dbg !5867

if.end71:                                         ; preds = %do.end70, %do.body53
  br label %do.end72, !dbg !5866

do.end72:                                         ; preds = %if.end71
  %18 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5879
  %ops73 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %18, i32 0, i32 3, !dbg !5880
  %19 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops73, align 8, !dbg !5880
  %vmap74 = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %19, i32 0, i32 11, !dbg !5881
  %20 = load i8* (%struct.dma_buf*)*, i8* (%struct.dma_buf*)** %vmap74, align 8, !dbg !5881
  %21 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5882
  %call = call i8* %20(%struct.dma_buf* %21) #10, !dbg !5879
  store i8* %call, i8** %ptr, align 8, !dbg !5883
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on75, metadata !5884, metadata !DIExpression()), !dbg !5887
  %22 = load i8*, i8** %ptr, align 8, !dbg !5887
  %call76 = call zeroext i1 @IS_ERR(i8* %22) #10, !dbg !5887
  %lnot77 = xor i1 %call76, true, !dbg !5887
  %lnot79 = xor i1 %lnot77, true, !dbg !5887
  %lnot.ext80 = zext i1 %lnot79 to i32, !dbg !5887
  store i32 %lnot.ext80, i32* %__ret_warn_on75, align 4, !dbg !5887
  %23 = load i32, i32* %__ret_warn_on75, align 4, !dbg !5888
  %tobool81 = icmp ne i32 %23, 0, !dbg !5888
  %lnot82 = xor i1 %tobool81, true, !dbg !5888
  %lnot84 = xor i1 %lnot82, true, !dbg !5888
  %lnot.ext85 = zext i1 %lnot84 to i32, !dbg !5888
  %conv86 = sext i32 %lnot.ext85 to i64, !dbg !5888
  %tobool87 = icmp ne i64 %conv86, 0, !dbg !5888
  br i1 %tobool87, label %if.then88, label %if.end97, !dbg !5887

if.then88:                                        ; preds = %do.end72
  br label %do.body89, !dbg !5888

do.body89:                                        ; preds = %if.then88
  br label %do.body90, !dbg !5890

do.body90:                                        ; preds = %do.body89
  br label %do.end91, !dbg !5892

do.end91:                                         ; preds = %do.body90
  br label %do.body92, !dbg !5890

do.body92:                                        ; preds = %do.end91
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 1220, i32 2307, i64 12) #9, !dbg !5894, !srcloc !5896
  br label %do.end93, !dbg !5894

do.end93:                                         ; preds = %do.body92
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 263) #9, !dbg !5897, !srcloc !5899
  br label %do.body94, !dbg !5890

do.body94:                                        ; preds = %do.end93
  br label %do.end95, !dbg !5900

do.end95:                                         ; preds = %do.body94
  br label %do.end96, !dbg !5890

do.end96:                                         ; preds = %do.end95
  br label %if.end97, !dbg !5890

if.end97:                                         ; preds = %do.end96, %do.end72
  %24 = load i32, i32* %__ret_warn_on75, align 4, !dbg !5887
  %tobool99 = icmp ne i32 %24, 0, !dbg !5887
  %lnot100 = xor i1 %tobool99, true, !dbg !5887
  %lnot102 = xor i1 %lnot100, true, !dbg !5887
  %lnot.ext103 = zext i1 %lnot102 to i32, !dbg !5887
  %conv104 = sext i32 %lnot.ext103 to i64, !dbg !5887
  store i64 %conv104, i64* %tmp98, align 8, !dbg !5888
  %25 = load i64, i64* %tmp98, align 8, !dbg !5887
  %tobool105 = icmp ne i64 %25, 0, !dbg !5902
  br i1 %tobool105, label %if.then106, label %if.end107, !dbg !5903

if.then106:                                       ; preds = %if.end97
  store i8* null, i8** %ptr, align 8, !dbg !5904
  br label %if.end107, !dbg !5905

if.end107:                                        ; preds = %if.then106, %if.end97
  %26 = load i8*, i8** %ptr, align 8, !dbg !5906
  %tobool108 = icmp ne i8* %26, null, !dbg !5906
  br i1 %tobool108, label %if.end110, label %if.then109, !dbg !5908

if.then109:                                       ; preds = %if.end107
  br label %out_unlock, !dbg !5909

if.end110:                                        ; preds = %if.end107
  %27 = load i8*, i8** %ptr, align 8, !dbg !5910
  %28 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5911
  %vmap_ptr111 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %28, i32 0, i32 6, !dbg !5912
  store i8* %27, i8** %vmap_ptr111, align 8, !dbg !5913
  %29 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5914
  %vmapping_counter112 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %29, i32 0, i32 5, !dbg !5915
  store i32 1, i32* %vmapping_counter112, align 8, !dbg !5916
  br label %out_unlock, !dbg !5914

out_unlock:                                       ; preds = %if.end110, %if.then109, %do.end50
  call void @llvm.dbg.label(metadata !5917), !dbg !5918
  %30 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5919
  %lock113 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %30, i32 0, i32 4, !dbg !5920
  call void @mutex_unlock(%struct.mutex* %lock113) #10, !dbg !5921
  %31 = load i8*, i8** %ptr, align 8, !dbg !5922
  store i8* %31, i8** %retval, align 8, !dbg !5923
  br label %return, !dbg !5923

return:                                           ; preds = %out_unlock, %if.then25, %if.then22
  %32 = load i8*, i8** %retval, align 8, !dbg !5924
  ret i8* %32, !dbg !5924
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dma_buf_vunmap(%struct.dma_buf* %dmabuf, i8* %vaddr) #0 !dbg !5925 {
entry:
  %dmabuf.addr = alloca %struct.dma_buf*, align 8
  %vaddr.addr = alloca i8*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.dma_buf* %dmabuf, %struct.dma_buf** %dmabuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf.addr, metadata !5926, metadata !DIExpression()), !dbg !5927
  store i8* %vaddr, i8** %vaddr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vaddr.addr, metadata !5928, metadata !DIExpression()), !dbg !5929
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5930, metadata !DIExpression()), !dbg !5933
  %0 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5933
  %tobool = icmp ne %struct.dma_buf* %0, null, !dbg !5933
  %lnot = xor i1 %tobool, true, !dbg !5933
  %lnot1 = xor i1 %lnot, true, !dbg !5933
  %lnot2 = xor i1 %lnot1, true, !dbg !5933
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5933
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5933
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !5934
  %tobool3 = icmp ne i32 %1, 0, !dbg !5934
  %lnot4 = xor i1 %tobool3, true, !dbg !5934
  %lnot6 = xor i1 %lnot4, true, !dbg !5934
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !5934
  %conv = sext i32 %lnot.ext7 to i64, !dbg !5934
  %tobool8 = icmp ne i64 %conv, 0, !dbg !5934
  br i1 %tobool8, label %if.then, label %if.end, !dbg !5933

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5934

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !5936

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !5938

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !5936

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 1241, i32 2305, i64 12) #9, !dbg !5940, !srcloc !5942
  br label %do.end11, !dbg !5940

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 264) #9, !dbg !5943, !srcloc !5945
  br label %do.body12, !dbg !5936

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !5946

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !5936

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !5936

if.end:                                           ; preds = %do.end14, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !5933
  %tobool15 = icmp ne i32 %2, 0, !dbg !5933
  %lnot16 = xor i1 %tobool15, true, !dbg !5933
  %lnot18 = xor i1 %lnot16, true, !dbg !5933
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !5933
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !5933
  store i64 %conv20, i64* %tmp, align 8, !dbg !5934
  %3 = load i64, i64* %tmp, align 8, !dbg !5933
  %tobool21 = icmp ne i64 %3, 0, !dbg !5948
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !5949

if.then22:                                        ; preds = %if.end
  br label %return, !dbg !5950

if.end23:                                         ; preds = %if.end
  br label %do.body24, !dbg !5951

do.body24:                                        ; preds = %if.end23
  %4 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5952
  %vmap_ptr = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %4, i32 0, i32 6, !dbg !5952
  %5 = load i8*, i8** %vmap_ptr, align 8, !dbg !5952
  %tobool25 = icmp ne i8* %5, null, !dbg !5952
  %lnot26 = xor i1 %tobool25, true, !dbg !5952
  %lnot28 = xor i1 %lnot26, true, !dbg !5952
  %lnot30 = xor i1 %lnot28, true, !dbg !5952
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !5952
  %conv32 = sext i32 %lnot.ext31 to i64, !dbg !5952
  %tobool33 = icmp ne i64 %conv32, 0, !dbg !5952
  br i1 %tobool33, label %if.then34, label %if.end43, !dbg !5955

if.then34:                                        ; preds = %do.body24
  br label %do.body35, !dbg !5952

do.body35:                                        ; preds = %if.then34
  br label %do.body36, !dbg !5956

do.body36:                                        ; preds = %do.body35
  br label %do.end37, !dbg !5958

do.end37:                                         ; preds = %do.body36
  br label %do.body38, !dbg !5956

do.body38:                                        ; preds = %do.end37
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 1244, i32 0, i64 12) #9, !dbg !5960, !srcloc !5962
  br label %do.end39, !dbg !5960

do.end39:                                         ; preds = %do.body38
  br label %do.body40, !dbg !5956

do.body40:                                        ; preds = %do.end39
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 265) #9, !dbg !5963, !srcloc !5966
  unreachable, !dbg !5967

do.end41:                                         ; No predecessors!
  br label %do.end42, !dbg !5956

do.end42:                                         ; preds = %do.end41
  br label %if.end43, !dbg !5956

if.end43:                                         ; preds = %do.end42, %do.body24
  br label %do.end44, !dbg !5955

do.end44:                                         ; preds = %if.end43
  br label %do.body45, !dbg !5968

do.body45:                                        ; preds = %do.end44
  %6 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5969
  %vmapping_counter = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %6, i32 0, i32 5, !dbg !5969
  %7 = load i32, i32* %vmapping_counter, align 8, !dbg !5969
  %cmp = icmp eq i32 %7, 0, !dbg !5969
  %lnot47 = xor i1 %cmp, true, !dbg !5969
  %lnot49 = xor i1 %lnot47, true, !dbg !5969
  %lnot.ext50 = zext i1 %lnot49 to i32, !dbg !5969
  %conv51 = sext i32 %lnot.ext50 to i64, !dbg !5969
  %tobool52 = icmp ne i64 %conv51, 0, !dbg !5969
  br i1 %tobool52, label %if.then53, label %if.end62, !dbg !5972

if.then53:                                        ; preds = %do.body45
  br label %do.body54, !dbg !5969

do.body54:                                        ; preds = %if.then53
  br label %do.body55, !dbg !5973

do.body55:                                        ; preds = %do.body54
  br label %do.end56, !dbg !5975

do.end56:                                         ; preds = %do.body55
  br label %do.body57, !dbg !5973

do.body57:                                        ; preds = %do.end56
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 1245, i32 0, i64 12) #9, !dbg !5977, !srcloc !5979
  br label %do.end58, !dbg !5977

do.end58:                                         ; preds = %do.body57
  br label %do.body59, !dbg !5973

do.body59:                                        ; preds = %do.end58
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 266) #9, !dbg !5980, !srcloc !5983
  unreachable, !dbg !5984

do.end60:                                         ; No predecessors!
  br label %do.end61, !dbg !5973

do.end61:                                         ; preds = %do.end60
  br label %if.end62, !dbg !5973

if.end62:                                         ; preds = %do.end61, %do.body45
  br label %do.end63, !dbg !5972

do.end63:                                         ; preds = %if.end62
  br label %do.body64, !dbg !5985

do.body64:                                        ; preds = %do.end63
  %8 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !5986
  %vmap_ptr65 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %8, i32 0, i32 6, !dbg !5986
  %9 = load i8*, i8** %vmap_ptr65, align 8, !dbg !5986
  %10 = load i8*, i8** %vaddr.addr, align 8, !dbg !5986
  %cmp66 = icmp ne i8* %9, %10, !dbg !5986
  %lnot68 = xor i1 %cmp66, true, !dbg !5986
  %lnot70 = xor i1 %lnot68, true, !dbg !5986
  %lnot.ext71 = zext i1 %lnot70 to i32, !dbg !5986
  %conv72 = sext i32 %lnot.ext71 to i64, !dbg !5986
  %tobool73 = icmp ne i64 %conv72, 0, !dbg !5986
  br i1 %tobool73, label %if.then74, label %if.end83, !dbg !5989

if.then74:                                        ; preds = %do.body64
  br label %do.body75, !dbg !5986

do.body75:                                        ; preds = %if.then74
  br label %do.body76, !dbg !5990

do.body76:                                        ; preds = %do.body75
  br label %do.end77, !dbg !5992

do.end77:                                         ; preds = %do.body76
  br label %do.body78, !dbg !5990

do.body78:                                        ; preds = %do.end77
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 1246, i32 0, i64 12) #9, !dbg !5994, !srcloc !5996
  br label %do.end79, !dbg !5994

do.end79:                                         ; preds = %do.body78
  br label %do.body80, !dbg !5990

do.body80:                                        ; preds = %do.end79
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 267) #9, !dbg !5997, !srcloc !6000
  unreachable, !dbg !6001

do.end81:                                         ; No predecessors!
  br label %do.end82, !dbg !5990

do.end82:                                         ; preds = %do.end81
  br label %if.end83, !dbg !5990

if.end83:                                         ; preds = %do.end82, %do.body64
  br label %do.end84, !dbg !5989

do.end84:                                         ; preds = %if.end83
  %11 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !6002
  %lock = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %11, i32 0, i32 4, !dbg !6003
  call void @mutex_lock(%struct.mutex* %lock) #10, !dbg !6004
  %12 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !6005
  %vmapping_counter85 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %12, i32 0, i32 5, !dbg !6007
  %13 = load i32, i32* %vmapping_counter85, align 8, !dbg !6008
  %dec = add i32 %13, -1, !dbg !6008
  store i32 %dec, i32* %vmapping_counter85, align 8, !dbg !6008
  %cmp86 = icmp eq i32 %dec, 0, !dbg !6009
  br i1 %cmp86, label %if.then88, label %if.end95, !dbg !6010

if.then88:                                        ; preds = %do.end84
  %14 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !6011
  %ops = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %14, i32 0, i32 3, !dbg !6014
  %15 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops, align 8, !dbg !6014
  %vunmap = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %15, i32 0, i32 12, !dbg !6015
  %16 = load void (%struct.dma_buf*, i8*)*, void (%struct.dma_buf*, i8*)** %vunmap, align 8, !dbg !6015
  %tobool89 = icmp ne void (%struct.dma_buf*, i8*)* %16, null, !dbg !6011
  br i1 %tobool89, label %if.then90, label %if.end93, !dbg !6016

if.then90:                                        ; preds = %if.then88
  %17 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !6017
  %ops91 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %17, i32 0, i32 3, !dbg !6018
  %18 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops91, align 8, !dbg !6018
  %vunmap92 = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %18, i32 0, i32 12, !dbg !6019
  %19 = load void (%struct.dma_buf*, i8*)*, void (%struct.dma_buf*, i8*)** %vunmap92, align 8, !dbg !6019
  %20 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !6020
  %21 = load i8*, i8** %vaddr.addr, align 8, !dbg !6021
  call void %19(%struct.dma_buf* %20, i8* %21) #10, !dbg !6017
  br label %if.end93, !dbg !6017

if.end93:                                         ; preds = %if.then90, %if.then88
  %22 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !6022
  %vmap_ptr94 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %22, i32 0, i32 6, !dbg !6023
  store i8* null, i8** %vmap_ptr94, align 8, !dbg !6024
  br label %if.end95, !dbg !6025

if.end95:                                         ; preds = %if.end93, %do.end84
  %23 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !6026
  %lock96 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %23, i32 0, i32 4, !dbg !6027
  call void @mutex_unlock(%struct.mutex* %lock96) #10, !dbg !6028
  br label %return, !dbg !6029

return:                                           ; preds = %if.end95, %if.then22
  ret void, !dbg !6029
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_buf_init() #4 section ".init.text" !dbg !4127 {
entry:
  %retval = alloca i32, align 4
  %call = call %struct.vfsmount* @kern_mount(%struct.file_system_type* @dma_buf_fs_type) #10, !dbg !6030
  store %struct.vfsmount* %call, %struct.vfsmount** @dma_buf_mnt, align 8, !dbg !6031
  %0 = load %struct.vfsmount*, %struct.vfsmount** @dma_buf_mnt, align 8, !dbg !6032
  %1 = bitcast %struct.vfsmount* %0 to i8*, !dbg !6032
  %call1 = call zeroext i1 @IS_ERR(i8* %1) #10, !dbg !6034
  br i1 %call1, label %if.then, label %if.end, !dbg !6035

if.then:                                          ; preds = %entry
  %2 = load %struct.vfsmount*, %struct.vfsmount** @dma_buf_mnt, align 8, !dbg !6036
  %3 = bitcast %struct.vfsmount* %2 to i8*, !dbg !6036
  %call2 = call i64 @PTR_ERR(i8* %3) #10, !dbg !6037
  %conv = trunc i64 %call2 to i32, !dbg !6037
  store i32 %conv, i32* %retval, align 4, !dbg !6038
  br label %return, !dbg !6038

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !6039

do.body:                                          ; preds = %if.end
  call void @__mutex_init(%struct.mutex* getelementptr inbounds (%struct.dma_buf_list, %struct.dma_buf_list* @db_list, i32 0, i32 1), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0), %struct.lock_class_key* @dma_buf_init.__key) #10, !dbg !6040
  br label %do.end, !dbg !6040

do.end:                                           ; preds = %do.body
  call void @INIT_LIST_HEAD(%struct.list_head* getelementptr inbounds (%struct.dma_buf_list, %struct.dma_buf_list* @db_list, i32 0, i32 0)) #10, !dbg !6042
  %call3 = call i32 @dma_buf_init_debugfs() #10, !dbg !6043
  store i32 0, i32* %retval, align 4, !dbg !6044
  br label %return, !dbg !6044

return:                                           ; preds = %do.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !6045
  ret i32 %4, !dbg !6045
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @dma_buf_deinit() #4 section ".exit.text" !dbg !6046 {
entry:
  call void @dma_buf_uninit_debugfs() #10, !dbg !6047
  %0 = load %struct.vfsmount*, %struct.vfsmount** @dma_buf_mnt, align 8, !dbg !6048
  call void @kern_unmount(%struct.vfsmount* %0) #10, !dbg !6049
  ret void, !dbg !6050
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_buf_uninit_debugfs() #0 !dbg !6051 {
entry:
  ret void, !dbg !6052
}

; Function Attrs: noredzone
declare dso_local void @kern_unmount(%struct.vfsmount*) #3

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #5

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #3

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #7 !dbg !6053 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !6057, metadata !DIExpression()), !dbg !6062
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !6064, metadata !DIExpression()), !dbg !6065
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6066, metadata !DIExpression()), !dbg !6067
  %0 = load i64, i64* %size.addr, align 8, !dbg !6068
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !6070
  br i1 %1, label %if.then, label %if.end447, !dbg !6071

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !6072
  %tobool = icmp ne i64 %2, 0, !dbg !6072
  br i1 %tobool, label %if.end, label %if.then1, !dbg !6075

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !6076
  br label %return, !dbg !6076

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !6077
  %cmp = icmp ult i64 %3, 4096, !dbg !6079
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !6080

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6081
  br label %return, !dbg !6081

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub = sub i64 %4, 1, !dbg !6082
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !6082
  br i1 %5, label %cond.true, label %cond.false442, !dbg !6082

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub4 = sub i64 %6, 1, !dbg !6082
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !6082
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !6082

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub6 = sub i64 %8, 1, !dbg !6082
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !6082
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !6082

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !6082

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub9 = sub i64 %9, 1, !dbg !6082
  %and = and i64 %sub9, -9223372036854775808, !dbg !6082
  %tobool10 = icmp ne i64 %and, 0, !dbg !6082
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !6082

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !6082

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub13 = sub i64 %10, 1, !dbg !6082
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !6082
  %tobool15 = icmp ne i64 %and14, 0, !dbg !6082
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !6082

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !6082

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub18 = sub i64 %11, 1, !dbg !6082
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !6082
  %tobool20 = icmp ne i64 %and19, 0, !dbg !6082
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !6082

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !6082

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub23 = sub i64 %12, 1, !dbg !6082
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !6082
  %tobool25 = icmp ne i64 %and24, 0, !dbg !6082
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !6082

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !6082

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub28 = sub i64 %13, 1, !dbg !6082
  %and29 = and i64 %sub28, 576460752303423488, !dbg !6082
  %tobool30 = icmp ne i64 %and29, 0, !dbg !6082
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !6082

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !6082

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub33 = sub i64 %14, 1, !dbg !6082
  %and34 = and i64 %sub33, 288230376151711744, !dbg !6082
  %tobool35 = icmp ne i64 %and34, 0, !dbg !6082
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !6082

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !6082

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub38 = sub i64 %15, 1, !dbg !6082
  %and39 = and i64 %sub38, 144115188075855872, !dbg !6082
  %tobool40 = icmp ne i64 %and39, 0, !dbg !6082
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !6082

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !6082

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub43 = sub i64 %16, 1, !dbg !6082
  %and44 = and i64 %sub43, 72057594037927936, !dbg !6082
  %tobool45 = icmp ne i64 %and44, 0, !dbg !6082
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !6082

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !6082

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub48 = sub i64 %17, 1, !dbg !6082
  %and49 = and i64 %sub48, 36028797018963968, !dbg !6082
  %tobool50 = icmp ne i64 %and49, 0, !dbg !6082
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !6082

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !6082

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub53 = sub i64 %18, 1, !dbg !6082
  %and54 = and i64 %sub53, 18014398509481984, !dbg !6082
  %tobool55 = icmp ne i64 %and54, 0, !dbg !6082
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !6082

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !6082

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub58 = sub i64 %19, 1, !dbg !6082
  %and59 = and i64 %sub58, 9007199254740992, !dbg !6082
  %tobool60 = icmp ne i64 %and59, 0, !dbg !6082
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !6082

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !6082

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub63 = sub i64 %20, 1, !dbg !6082
  %and64 = and i64 %sub63, 4503599627370496, !dbg !6082
  %tobool65 = icmp ne i64 %and64, 0, !dbg !6082
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !6082

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !6082

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub68 = sub i64 %21, 1, !dbg !6082
  %and69 = and i64 %sub68, 2251799813685248, !dbg !6082
  %tobool70 = icmp ne i64 %and69, 0, !dbg !6082
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !6082

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !6082

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub73 = sub i64 %22, 1, !dbg !6082
  %and74 = and i64 %sub73, 1125899906842624, !dbg !6082
  %tobool75 = icmp ne i64 %and74, 0, !dbg !6082
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !6082

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !6082

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub78 = sub i64 %23, 1, !dbg !6082
  %and79 = and i64 %sub78, 562949953421312, !dbg !6082
  %tobool80 = icmp ne i64 %and79, 0, !dbg !6082
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !6082

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !6082

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub83 = sub i64 %24, 1, !dbg !6082
  %and84 = and i64 %sub83, 281474976710656, !dbg !6082
  %tobool85 = icmp ne i64 %and84, 0, !dbg !6082
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !6082

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !6082

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub88 = sub i64 %25, 1, !dbg !6082
  %and89 = and i64 %sub88, 140737488355328, !dbg !6082
  %tobool90 = icmp ne i64 %and89, 0, !dbg !6082
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !6082

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !6082

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub93 = sub i64 %26, 1, !dbg !6082
  %and94 = and i64 %sub93, 70368744177664, !dbg !6082
  %tobool95 = icmp ne i64 %and94, 0, !dbg !6082
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !6082

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !6082

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub98 = sub i64 %27, 1, !dbg !6082
  %and99 = and i64 %sub98, 35184372088832, !dbg !6082
  %tobool100 = icmp ne i64 %and99, 0, !dbg !6082
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !6082

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !6082

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub103 = sub i64 %28, 1, !dbg !6082
  %and104 = and i64 %sub103, 17592186044416, !dbg !6082
  %tobool105 = icmp ne i64 %and104, 0, !dbg !6082
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !6082

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !6082

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub108 = sub i64 %29, 1, !dbg !6082
  %and109 = and i64 %sub108, 8796093022208, !dbg !6082
  %tobool110 = icmp ne i64 %and109, 0, !dbg !6082
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !6082

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !6082

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub113 = sub i64 %30, 1, !dbg !6082
  %and114 = and i64 %sub113, 4398046511104, !dbg !6082
  %tobool115 = icmp ne i64 %and114, 0, !dbg !6082
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !6082

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !6082

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub118 = sub i64 %31, 1, !dbg !6082
  %and119 = and i64 %sub118, 2199023255552, !dbg !6082
  %tobool120 = icmp ne i64 %and119, 0, !dbg !6082
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !6082

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !6082

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub123 = sub i64 %32, 1, !dbg !6082
  %and124 = and i64 %sub123, 1099511627776, !dbg !6082
  %tobool125 = icmp ne i64 %and124, 0, !dbg !6082
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !6082

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !6082

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub128 = sub i64 %33, 1, !dbg !6082
  %and129 = and i64 %sub128, 549755813888, !dbg !6082
  %tobool130 = icmp ne i64 %and129, 0, !dbg !6082
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !6082

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !6082

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub133 = sub i64 %34, 1, !dbg !6082
  %and134 = and i64 %sub133, 274877906944, !dbg !6082
  %tobool135 = icmp ne i64 %and134, 0, !dbg !6082
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !6082

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !6082

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub138 = sub i64 %35, 1, !dbg !6082
  %and139 = and i64 %sub138, 137438953472, !dbg !6082
  %tobool140 = icmp ne i64 %and139, 0, !dbg !6082
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !6082

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !6082

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub143 = sub i64 %36, 1, !dbg !6082
  %and144 = and i64 %sub143, 68719476736, !dbg !6082
  %tobool145 = icmp ne i64 %and144, 0, !dbg !6082
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !6082

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !6082

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub148 = sub i64 %37, 1, !dbg !6082
  %and149 = and i64 %sub148, 34359738368, !dbg !6082
  %tobool150 = icmp ne i64 %and149, 0, !dbg !6082
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !6082

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !6082

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub153 = sub i64 %38, 1, !dbg !6082
  %and154 = and i64 %sub153, 17179869184, !dbg !6082
  %tobool155 = icmp ne i64 %and154, 0, !dbg !6082
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !6082

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !6082

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub158 = sub i64 %39, 1, !dbg !6082
  %and159 = and i64 %sub158, 8589934592, !dbg !6082
  %tobool160 = icmp ne i64 %and159, 0, !dbg !6082
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !6082

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !6082

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub163 = sub i64 %40, 1, !dbg !6082
  %and164 = and i64 %sub163, 4294967296, !dbg !6082
  %tobool165 = icmp ne i64 %and164, 0, !dbg !6082
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !6082

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !6082

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub168 = sub i64 %41, 1, !dbg !6082
  %and169 = and i64 %sub168, 2147483648, !dbg !6082
  %tobool170 = icmp ne i64 %and169, 0, !dbg !6082
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !6082

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !6082

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub173 = sub i64 %42, 1, !dbg !6082
  %and174 = and i64 %sub173, 1073741824, !dbg !6082
  %tobool175 = icmp ne i64 %and174, 0, !dbg !6082
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !6082

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !6082

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub178 = sub i64 %43, 1, !dbg !6082
  %and179 = and i64 %sub178, 536870912, !dbg !6082
  %tobool180 = icmp ne i64 %and179, 0, !dbg !6082
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !6082

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !6082

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub183 = sub i64 %44, 1, !dbg !6082
  %and184 = and i64 %sub183, 268435456, !dbg !6082
  %tobool185 = icmp ne i64 %and184, 0, !dbg !6082
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !6082

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !6082

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub188 = sub i64 %45, 1, !dbg !6082
  %and189 = and i64 %sub188, 134217728, !dbg !6082
  %tobool190 = icmp ne i64 %and189, 0, !dbg !6082
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !6082

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !6082

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub193 = sub i64 %46, 1, !dbg !6082
  %and194 = and i64 %sub193, 67108864, !dbg !6082
  %tobool195 = icmp ne i64 %and194, 0, !dbg !6082
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !6082

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !6082

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub198 = sub i64 %47, 1, !dbg !6082
  %and199 = and i64 %sub198, 33554432, !dbg !6082
  %tobool200 = icmp ne i64 %and199, 0, !dbg !6082
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !6082

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !6082

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub203 = sub i64 %48, 1, !dbg !6082
  %and204 = and i64 %sub203, 16777216, !dbg !6082
  %tobool205 = icmp ne i64 %and204, 0, !dbg !6082
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !6082

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !6082

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub208 = sub i64 %49, 1, !dbg !6082
  %and209 = and i64 %sub208, 8388608, !dbg !6082
  %tobool210 = icmp ne i64 %and209, 0, !dbg !6082
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !6082

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !6082

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub213 = sub i64 %50, 1, !dbg !6082
  %and214 = and i64 %sub213, 4194304, !dbg !6082
  %tobool215 = icmp ne i64 %and214, 0, !dbg !6082
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !6082

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !6082

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub218 = sub i64 %51, 1, !dbg !6082
  %and219 = and i64 %sub218, 2097152, !dbg !6082
  %tobool220 = icmp ne i64 %and219, 0, !dbg !6082
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !6082

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !6082

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub223 = sub i64 %52, 1, !dbg !6082
  %and224 = and i64 %sub223, 1048576, !dbg !6082
  %tobool225 = icmp ne i64 %and224, 0, !dbg !6082
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !6082

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !6082

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub228 = sub i64 %53, 1, !dbg !6082
  %and229 = and i64 %sub228, 524288, !dbg !6082
  %tobool230 = icmp ne i64 %and229, 0, !dbg !6082
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !6082

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !6082

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub233 = sub i64 %54, 1, !dbg !6082
  %and234 = and i64 %sub233, 262144, !dbg !6082
  %tobool235 = icmp ne i64 %and234, 0, !dbg !6082
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !6082

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !6082

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub238 = sub i64 %55, 1, !dbg !6082
  %and239 = and i64 %sub238, 131072, !dbg !6082
  %tobool240 = icmp ne i64 %and239, 0, !dbg !6082
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !6082

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !6082

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub243 = sub i64 %56, 1, !dbg !6082
  %and244 = and i64 %sub243, 65536, !dbg !6082
  %tobool245 = icmp ne i64 %and244, 0, !dbg !6082
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !6082

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !6082

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub248 = sub i64 %57, 1, !dbg !6082
  %and249 = and i64 %sub248, 32768, !dbg !6082
  %tobool250 = icmp ne i64 %and249, 0, !dbg !6082
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !6082

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !6082

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub253 = sub i64 %58, 1, !dbg !6082
  %and254 = and i64 %sub253, 16384, !dbg !6082
  %tobool255 = icmp ne i64 %and254, 0, !dbg !6082
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !6082

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !6082

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub258 = sub i64 %59, 1, !dbg !6082
  %and259 = and i64 %sub258, 8192, !dbg !6082
  %tobool260 = icmp ne i64 %and259, 0, !dbg !6082
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !6082

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !6082

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub263 = sub i64 %60, 1, !dbg !6082
  %and264 = and i64 %sub263, 4096, !dbg !6082
  %tobool265 = icmp ne i64 %and264, 0, !dbg !6082
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !6082

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !6082

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub268 = sub i64 %61, 1, !dbg !6082
  %and269 = and i64 %sub268, 2048, !dbg !6082
  %tobool270 = icmp ne i64 %and269, 0, !dbg !6082
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !6082

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !6082

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub273 = sub i64 %62, 1, !dbg !6082
  %and274 = and i64 %sub273, 1024, !dbg !6082
  %tobool275 = icmp ne i64 %and274, 0, !dbg !6082
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !6082

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !6082

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub278 = sub i64 %63, 1, !dbg !6082
  %and279 = and i64 %sub278, 512, !dbg !6082
  %tobool280 = icmp ne i64 %and279, 0, !dbg !6082
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !6082

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !6082

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub283 = sub i64 %64, 1, !dbg !6082
  %and284 = and i64 %sub283, 256, !dbg !6082
  %tobool285 = icmp ne i64 %and284, 0, !dbg !6082
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !6082

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !6082

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub288 = sub i64 %65, 1, !dbg !6082
  %and289 = and i64 %sub288, 128, !dbg !6082
  %tobool290 = icmp ne i64 %and289, 0, !dbg !6082
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !6082

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !6082

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub293 = sub i64 %66, 1, !dbg !6082
  %and294 = and i64 %sub293, 64, !dbg !6082
  %tobool295 = icmp ne i64 %and294, 0, !dbg !6082
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !6082

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !6082

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub298 = sub i64 %67, 1, !dbg !6082
  %and299 = and i64 %sub298, 32, !dbg !6082
  %tobool300 = icmp ne i64 %and299, 0, !dbg !6082
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !6082

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !6082

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub303 = sub i64 %68, 1, !dbg !6082
  %and304 = and i64 %sub303, 16, !dbg !6082
  %tobool305 = icmp ne i64 %and304, 0, !dbg !6082
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !6082

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !6082

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub308 = sub i64 %69, 1, !dbg !6082
  %and309 = and i64 %sub308, 8, !dbg !6082
  %tobool310 = icmp ne i64 %and309, 0, !dbg !6082
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !6082

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !6082

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub313 = sub i64 %70, 1, !dbg !6082
  %and314 = and i64 %sub313, 4, !dbg !6082
  %tobool315 = icmp ne i64 %and314, 0, !dbg !6082
  %71 = zext i1 %tobool315 to i64, !dbg !6082
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !6082
  br label %cond.end, !dbg !6082

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !6082
  br label %cond.end317, !dbg !6082

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !6082
  br label %cond.end319, !dbg !6082

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !6082
  br label %cond.end321, !dbg !6082

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !6082
  br label %cond.end323, !dbg !6082

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !6082
  br label %cond.end325, !dbg !6082

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !6082
  br label %cond.end327, !dbg !6082

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !6082
  br label %cond.end329, !dbg !6082

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !6082
  br label %cond.end331, !dbg !6082

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !6082
  br label %cond.end333, !dbg !6082

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !6082
  br label %cond.end335, !dbg !6082

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !6082
  br label %cond.end337, !dbg !6082

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !6082
  br label %cond.end339, !dbg !6082

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !6082
  br label %cond.end341, !dbg !6082

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !6082
  br label %cond.end343, !dbg !6082

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !6082
  br label %cond.end345, !dbg !6082

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !6082
  br label %cond.end347, !dbg !6082

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !6082
  br label %cond.end349, !dbg !6082

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !6082
  br label %cond.end351, !dbg !6082

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !6082
  br label %cond.end353, !dbg !6082

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !6082
  br label %cond.end355, !dbg !6082

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !6082
  br label %cond.end357, !dbg !6082

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !6082
  br label %cond.end359, !dbg !6082

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !6082
  br label %cond.end361, !dbg !6082

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !6082
  br label %cond.end363, !dbg !6082

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !6082
  br label %cond.end365, !dbg !6082

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !6082
  br label %cond.end367, !dbg !6082

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !6082
  br label %cond.end369, !dbg !6082

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !6082
  br label %cond.end371, !dbg !6082

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !6082
  br label %cond.end373, !dbg !6082

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !6082
  br label %cond.end375, !dbg !6082

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !6082
  br label %cond.end377, !dbg !6082

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !6082
  br label %cond.end379, !dbg !6082

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !6082
  br label %cond.end381, !dbg !6082

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !6082
  br label %cond.end383, !dbg !6082

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !6082
  br label %cond.end385, !dbg !6082

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !6082
  br label %cond.end387, !dbg !6082

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !6082
  br label %cond.end389, !dbg !6082

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !6082
  br label %cond.end391, !dbg !6082

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !6082
  br label %cond.end393, !dbg !6082

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !6082
  br label %cond.end395, !dbg !6082

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !6082
  br label %cond.end397, !dbg !6082

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !6082
  br label %cond.end399, !dbg !6082

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !6082
  br label %cond.end401, !dbg !6082

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !6082
  br label %cond.end403, !dbg !6082

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !6082
  br label %cond.end405, !dbg !6082

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !6082
  br label %cond.end407, !dbg !6082

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !6082
  br label %cond.end409, !dbg !6082

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !6082
  br label %cond.end411, !dbg !6082

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !6082
  br label %cond.end413, !dbg !6082

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !6082
  br label %cond.end415, !dbg !6082

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !6082
  br label %cond.end417, !dbg !6082

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !6082
  br label %cond.end419, !dbg !6082

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !6082
  br label %cond.end421, !dbg !6082

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !6082
  br label %cond.end423, !dbg !6082

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !6082
  br label %cond.end425, !dbg !6082

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !6082
  br label %cond.end427, !dbg !6082

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !6082
  br label %cond.end429, !dbg !6082

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !6082
  br label %cond.end431, !dbg !6082

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !6082
  br label %cond.end433, !dbg !6082

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !6082
  br label %cond.end435, !dbg !6082

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !6082
  br label %cond.end437, !dbg !6082

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !6082
  br label %cond.end440, !dbg !6082

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !6082

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !6082
  br label %cond.end444, !dbg !6082

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !6082
  %sub443 = sub i64 %72, 1, !dbg !6082
  %call = call i32 @__ilog2_u64(i64 %sub443) #11, !dbg !6082
  br label %cond.end444, !dbg !6082

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !6082
  %sub446 = sub i32 %cond445, 12, !dbg !6083
  %add = add i32 %sub446, 1, !dbg !6084
  store i32 %add, i32* %retval, align 4, !dbg !6085
  br label %return, !dbg !6085

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !6086
  %dec = add i64 %73, -1, !dbg !6086
  store i64 %dec, i64* %size.addr, align 8, !dbg !6086
  %74 = load i64, i64* %size.addr, align 8, !dbg !6087
  %shr = lshr i64 %74, 12, !dbg !6087
  store i64 %shr, i64* %size.addr, align 8, !dbg !6087
  %75 = load i64, i64* %size.addr, align 8, !dbg !6088
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !6065
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !6089
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !6090
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #8, !dbg !6089, !srcloc !6091
  store i32 %78, i32* %bitpos.i, align 4, !dbg !6089
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !6092
  %add.i = add i32 %79, 1, !dbg !6093
  store i32 %add.i, i32* %retval, align 4, !dbg !6094
  br label %return, !dbg !6094

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !6095
  ret i32 %80, !dbg !6095
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #7 !dbg !6096 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !6057, metadata !DIExpression()), !dbg !6100
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !6064, metadata !DIExpression()), !dbg !6102
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !6103, metadata !DIExpression()), !dbg !6104
  %0 = load i64, i64* %n.addr, align 8, !dbg !6105
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !6102
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !6106
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !6107
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #8, !dbg !6106, !srcloc !6091
  store i32 %3, i32* %bitpos.i, align 4, !dbg !6106
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !6108
  %add.i = add i32 %4, 1, !dbg !6109
  %sub = sub i32 %add.i, 1, !dbg !6110
  ret i32 %sub, !dbg !6111
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !6112 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !6116, metadata !DIExpression()), !dbg !6117
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !6118, metadata !DIExpression()), !dbg !6119
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6120, metadata !DIExpression()), !dbg !6121
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6122, metadata !DIExpression()), !dbg !6123
  %0 = load i8*, i8** %object.addr, align 8, !dbg !6124
  ret i8* %0, !dbg !6125
}

; Function Attrs: noredzone
declare dso_local %struct.inode* @alloc_anon_inode(%struct.super_block*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_CAST(i8* %ptr) #0 !dbg !6126 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6129, metadata !DIExpression()), !dbg !6130
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !6131
  ret i8* %0, !dbg !6132
}

; Function Attrs: noredzone
declare dso_local void @inode_set_bytes(%struct.inode*, i64) #3

; Function Attrs: noredzone
declare dso_local %struct.file* @alloc_file_pseudo(%struct.inode*, %struct.vfsmount*, i8*, i32, %struct.file_operations*) #3

; Function Attrs: noredzone
declare dso_local void @iput(%struct.inode*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dma_buf_llseek(%struct.file* %file, i64 %offset, i32 %whence) #0 !dbg !6133 {
entry:
  %retval = alloca i64, align 8
  %file.addr = alloca %struct.file*, align 8
  %offset.addr = alloca i64, align 8
  %whence.addr = alloca i32, align 4
  %dmabuf = alloca %struct.dma_buf*, align 8
  %base = alloca i64, align 8
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !6134, metadata !DIExpression()), !dbg !6135
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !6136, metadata !DIExpression()), !dbg !6137
  store i32 %whence, i32* %whence.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %whence.addr, metadata !6138, metadata !DIExpression()), !dbg !6139
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf, metadata !6140, metadata !DIExpression()), !dbg !6141
  call void @llvm.dbg.declare(metadata i64* %base, metadata !6142, metadata !DIExpression()), !dbg !6143
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6144
  %call = call i32 @is_dma_buf_file(%struct.file* %0) #10, !dbg !6146
  %tobool = icmp ne i32 %call, 0, !dbg !6146
  br i1 %tobool, label %if.end, label %if.then, !dbg !6147

if.then:                                          ; preds = %entry
  store i64 -9, i64* %retval, align 8, !dbg !6148
  br label %return, !dbg !6148

if.end:                                           ; preds = %entry
  %1 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6149
  %private_data = getelementptr inbounds %struct.file, %struct.file* %1, i32 0, i32 15, !dbg !6150
  %2 = load i8*, i8** %private_data, align 8, !dbg !6150
  %3 = bitcast i8* %2 to %struct.dma_buf*, !dbg !6149
  store %struct.dma_buf* %3, %struct.dma_buf** %dmabuf, align 8, !dbg !6151
  %4 = load i32, i32* %whence.addr, align 4, !dbg !6152
  %cmp = icmp eq i32 %4, 2, !dbg !6154
  br i1 %cmp, label %if.then1, label %if.else, !dbg !6155

if.then1:                                         ; preds = %if.end
  %5 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6156
  %size = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %5, i32 0, i32 0, !dbg !6157
  %6 = load i64, i64* %size, align 8, !dbg !6157
  store i64 %6, i64* %base, align 8, !dbg !6158
  br label %if.end6, !dbg !6159

if.else:                                          ; preds = %if.end
  %7 = load i32, i32* %whence.addr, align 4, !dbg !6160
  %cmp2 = icmp eq i32 %7, 0, !dbg !6162
  br i1 %cmp2, label %if.then3, label %if.else4, !dbg !6163

if.then3:                                         ; preds = %if.else
  store i64 0, i64* %base, align 8, !dbg !6164
  br label %if.end5, !dbg !6165

if.else4:                                         ; preds = %if.else
  store i64 -22, i64* %retval, align 8, !dbg !6166
  br label %return, !dbg !6166

if.end5:                                          ; preds = %if.then3
  br label %if.end6

if.end6:                                          ; preds = %if.end5, %if.then1
  %8 = load i64, i64* %offset.addr, align 8, !dbg !6167
  %cmp7 = icmp ne i64 %8, 0, !dbg !6169
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !6170

if.then8:                                         ; preds = %if.end6
  store i64 -22, i64* %retval, align 8, !dbg !6171
  br label %return, !dbg !6171

if.end9:                                          ; preds = %if.end6
  %9 = load i64, i64* %base, align 8, !dbg !6172
  %10 = load i64, i64* %offset.addr, align 8, !dbg !6173
  %add = add i64 %9, %10, !dbg !6174
  store i64 %add, i64* %retval, align 8, !dbg !6175
  br label %return, !dbg !6175

return:                                           ; preds = %if.end9, %if.then8, %if.else4, %if.then
  %11 = load i64, i64* %retval, align 8, !dbg !6176
  ret i64 %11, !dbg !6176
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_buf_poll(%struct.file* %file, %struct.poll_table_struct* %poll) #0 !dbg !6177 {
entry:
  %lock.addr.i131 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i131, metadata !6182, metadata !DIExpression()), !dbg !6186
  %lock.addr.i129 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i129, metadata !6190, metadata !DIExpression()), !dbg !6192
  %lock.addr.i127 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i127, metadata !6182, metadata !DIExpression()), !dbg !6194
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6190, metadata !DIExpression()), !dbg !6198
  %s.addr.i125 = alloca %struct.seqcount_ww_mutex*, align 8
  call void @llvm.dbg.declare(metadata %struct.seqcount_ww_mutex** %s.addr.i125, metadata !6200, metadata !DIExpression()), !dbg !6206
  %s.addr.i = alloca %struct.seqcount_ww_mutex*, align 8
  call void @llvm.dbg.declare(metadata %struct.seqcount_ww_mutex** %s.addr.i, metadata !6209, metadata !DIExpression()), !dbg !6215
  %seq.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %seq.i, metadata !6220, metadata !DIExpression()), !dbg !6215
  %tmp.i = alloca i32, align 4
  %retval = alloca i32, align 4
  %file.addr = alloca %struct.file*, align 8
  %poll.addr = alloca %struct.poll_table_struct*, align 8
  %dmabuf = alloca %struct.dma_buf*, align 8
  %resv = alloca %struct.dma_resv*, align 8
  %fobj = alloca %struct.dma_resv_list*, align 8
  %fence_excl = alloca %struct.dma_fence*, align 8
  %events = alloca i32, align 4
  %shared_count = alloca i32, align 4
  %seq = alloca i32, align 4
  %tmp = alloca i32, align 4
  %seq8 = alloca i32, align 4
  %seq9 = alloca i32, align 4
  %tmp14 = alloca i32, align 4
  %tmp15 = alloca i32, align 4
  %________p1 = alloca %struct.dma_resv_list*, align 8
  %tmp16 = alloca %struct.dma_resv_list*, align 8
  %tmp19 = alloca %struct.dma_resv_list*, align 8
  %________p124 = alloca %struct.dma_fence*, align 8
  %tmp27 = alloca %struct.dma_fence*, align 8
  %tmp31 = alloca %struct.dma_fence*, align 8
  %dcb = alloca %struct.dma_buf_poll_cb_t*, align 8
  %pevents = alloca i32, align 4
  %dcb83 = alloca %struct.dma_buf_poll_cb_t*, align 8
  %i = alloca i32, align 4
  %fence100 = alloca %struct.dma_fence*, align 8
  %________p1101 = alloca %struct.dma_fence*, align 8
  %tmp104 = alloca %struct.dma_fence*, align 8
  %tmp107 = alloca %struct.dma_fence*, align 8
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !6221, metadata !DIExpression()), !dbg !6222
  store %struct.poll_table_struct* %poll, %struct.poll_table_struct** %poll.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.poll_table_struct** %poll.addr, metadata !6223, metadata !DIExpression()), !dbg !6224
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf, metadata !6225, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.declare(metadata %struct.dma_resv** %resv, metadata !6227, metadata !DIExpression()), !dbg !6228
  call void @llvm.dbg.declare(metadata %struct.dma_resv_list** %fobj, metadata !6229, metadata !DIExpression()), !dbg !6230
  call void @llvm.dbg.declare(metadata %struct.dma_fence** %fence_excl, metadata !6231, metadata !DIExpression()), !dbg !6232
  call void @llvm.dbg.declare(metadata i32* %events, metadata !6233, metadata !DIExpression()), !dbg !6234
  call void @llvm.dbg.declare(metadata i32* %shared_count, metadata !6235, metadata !DIExpression()), !dbg !6236
  call void @llvm.dbg.declare(metadata i32* %seq, metadata !6237, metadata !DIExpression()), !dbg !6238
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6239
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !6240
  %1 = load i8*, i8** %private_data, align 8, !dbg !6240
  %2 = bitcast i8* %1 to %struct.dma_buf*, !dbg !6239
  store %struct.dma_buf* %2, %struct.dma_buf** %dmabuf, align 8, !dbg !6241
  %3 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6242
  %tobool = icmp ne %struct.dma_buf* %3, null, !dbg !6242
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6244

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6245
  %resv1 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %4, i32 0, i32 13, !dbg !6246
  %5 = load %struct.dma_resv*, %struct.dma_resv** %resv1, align 8, !dbg !6246
  %tobool2 = icmp ne %struct.dma_resv* %5, null, !dbg !6245
  br i1 %tobool2, label %if.end, label %if.then, !dbg !6247

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 8, i32* %retval, align 4, !dbg !6248
  br label %return, !dbg !6248

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6249
  %resv3 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %6, i32 0, i32 13, !dbg !6250
  %7 = load %struct.dma_resv*, %struct.dma_resv** %resv3, align 8, !dbg !6250
  store %struct.dma_resv* %7, %struct.dma_resv** %resv, align 8, !dbg !6251
  %8 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6252
  %9 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6253
  %poll4 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %9, i32 0, i32 14, !dbg !6254
  %10 = load %struct.poll_table_struct*, %struct.poll_table_struct** %poll.addr, align 8, !dbg !6255
  call void @poll_wait(%struct.file* %8, %struct.wait_queue_head* %poll4, %struct.poll_table_struct* %10) #10, !dbg !6256
  %11 = load %struct.poll_table_struct*, %struct.poll_table_struct** %poll.addr, align 8, !dbg !6257
  %call = call i32 @poll_requested_events(%struct.poll_table_struct* %11) #10, !dbg !6258
  %and = and i32 %call, 5, !dbg !6259
  store i32 %and, i32* %events, align 4, !dbg !6260
  %12 = load i32, i32* %events, align 4, !dbg !6261
  %tobool5 = icmp ne i32 %12, 0, !dbg !6261
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !6263

if.then6:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6264
  br label %return, !dbg !6264

if.end7:                                          ; preds = %if.end
  br label %retry, !dbg !6261

retry:                                            ; preds = %if.then36, %if.end7
  call void @llvm.dbg.label(metadata !6265), !dbg !6266
  call void @llvm.dbg.declare(metadata i32* %seq8, metadata !6267, metadata !DIExpression()), !dbg !6268
  call void @llvm.dbg.declare(metadata i32* %seq9, metadata !6269, metadata !DIExpression()), !dbg !6270
  br label %while.cond, !dbg !6270

while.cond:                                       ; preds = %while.body, %retry
  %13 = load %struct.dma_resv*, %struct.dma_resv** %resv, align 8, !dbg !6270
  %seq10 = getelementptr inbounds %struct.dma_resv, %struct.dma_resv* %13, i32 0, i32 1, !dbg !6270
  %14 = bitcast %struct.seqcount_ww_mutex* %seq10 to i8*, !dbg !6270
  %15 = bitcast i8* %14 to %struct.seqcount_ww_mutex*, !dbg !6270
  store %struct.seqcount_ww_mutex* %15, %struct.seqcount_ww_mutex** %s.addr.i, align 8
  %16 = load %struct.seqcount_ww_mutex*, %struct.seqcount_ww_mutex** %s.addr.i, align 8, !dbg !6271
  %seqcount.i = getelementptr inbounds %struct.seqcount_ww_mutex, %struct.seqcount_ww_mutex* %16, i32 0, i32 0, !dbg !6271
  %sequence.i = getelementptr inbounds %struct.seqcount, %struct.seqcount* %seqcount.i, i32 0, i32 0, !dbg !6271
  %17 = load volatile i32, i32* %sequence.i, align 4, !dbg !6271
  store i32 %17, i32* %tmp.i, align 4, !dbg !6273
  %18 = load i32, i32* %tmp.i, align 4, !dbg !6271
  store i32 %18, i32* %seq.i, align 4, !dbg !6215
  %19 = load i32, i32* %seq.i, align 4, !dbg !6275
  store i32 %19, i32* %seq9, align 4, !dbg !6270
  %and12 = and i32 %19, 1, !dbg !6270
  %tobool13 = icmp ne i32 %and12, 0, !dbg !6270
  br i1 %tobool13, label %while.body, label %while.end, !dbg !6270

while.body:                                       ; preds = %while.cond
  call void asm sideeffect "rep; nop", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6277, !srcloc !6283
  br label %while.cond, !dbg !6270, !llvm.loop !6284

while.end:                                        ; preds = %while.cond
  call void @kcsan_atomic_next(i32 1000) #10, !dbg !6270
  %20 = load i32, i32* %seq9, align 4, !dbg !6270
  store i32 %20, i32* %tmp14, align 4, !dbg !6270
  %21 = load i32, i32* %tmp14, align 4, !dbg !6270
  store i32 %21, i32* %seq8, align 4, !dbg !6268
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6268, !srcloc !6285
  %22 = load i32, i32* %seq8, align 4, !dbg !6268
  store i32 %22, i32* %tmp15, align 4, !dbg !6268
  %23 = load i32, i32* %tmp15, align 4, !dbg !6268
  store i32 %23, i32* %tmp, align 4, !dbg !6286
  %24 = load i32, i32* %tmp, align 4, !dbg !6287
  store i32 %24, i32* %seq, align 4, !dbg !6288
  call void @__rcu_read_lock() #12, !dbg !6289
  call void @llvm.dbg.declare(metadata %struct.dma_resv_list** %________p1, metadata !6293, metadata !DIExpression()), !dbg !6295
  br label %do.body, !dbg !6296

do.body:                                          ; preds = %while.end
  br label %do.end, !dbg !6298

do.end:                                           ; preds = %do.body
  %25 = load %struct.dma_resv*, %struct.dma_resv** %resv, align 8, !dbg !6296
  %fence = getelementptr inbounds %struct.dma_resv, %struct.dma_resv* %25, i32 0, i32 3, !dbg !6296
  %26 = load volatile %struct.dma_resv_list*, %struct.dma_resv_list** %fence, align 8, !dbg !6296
  store %struct.dma_resv_list* %26, %struct.dma_resv_list** %tmp16, align 8, !dbg !6298
  %27 = load %struct.dma_resv_list*, %struct.dma_resv_list** %tmp16, align 8, !dbg !6296
  store %struct.dma_resv_list* %27, %struct.dma_resv_list** %________p1, align 8, !dbg !6295
  br label %do.body17, !dbg !6295

do.body17:                                        ; preds = %do.end
  br label %do.end18, !dbg !6300

do.end18:                                         ; preds = %do.body17
  %28 = load %struct.dma_resv_list*, %struct.dma_resv_list** %________p1, align 8, !dbg !6295
  store %struct.dma_resv_list* %28, %struct.dma_resv_list** %tmp19, align 8, !dbg !6300
  %29 = load %struct.dma_resv_list*, %struct.dma_resv_list** %tmp19, align 8, !dbg !6295
  store %struct.dma_resv_list* %29, %struct.dma_resv_list** %fobj, align 8, !dbg !6302
  %30 = load %struct.dma_resv_list*, %struct.dma_resv_list** %fobj, align 8, !dbg !6303
  %tobool20 = icmp ne %struct.dma_resv_list* %30, null, !dbg !6303
  br i1 %tobool20, label %if.then21, label %if.else, !dbg !6305

if.then21:                                        ; preds = %do.end18
  %31 = load %struct.dma_resv_list*, %struct.dma_resv_list** %fobj, align 8, !dbg !6306
  %shared_count22 = getelementptr inbounds %struct.dma_resv_list, %struct.dma_resv_list* %31, i32 0, i32 1, !dbg !6307
  %32 = load i32, i32* %shared_count22, align 8, !dbg !6307
  store i32 %32, i32* %shared_count, align 4, !dbg !6308
  br label %if.end23, !dbg !6309

if.else:                                          ; preds = %do.end18
  store i32 0, i32* %shared_count, align 4, !dbg !6310
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then21
  call void @llvm.dbg.declare(metadata %struct.dma_fence** %________p124, metadata !6311, metadata !DIExpression()), !dbg !6313
  br label %do.body25, !dbg !6314

do.body25:                                        ; preds = %if.end23
  br label %do.end26, !dbg !6316

do.end26:                                         ; preds = %do.body25
  %33 = load %struct.dma_resv*, %struct.dma_resv** %resv, align 8, !dbg !6314
  %fence_excl28 = getelementptr inbounds %struct.dma_resv, %struct.dma_resv* %33, i32 0, i32 2, !dbg !6314
  %34 = load volatile %struct.dma_fence*, %struct.dma_fence** %fence_excl28, align 8, !dbg !6314
  store %struct.dma_fence* %34, %struct.dma_fence** %tmp27, align 8, !dbg !6316
  %35 = load %struct.dma_fence*, %struct.dma_fence** %tmp27, align 8, !dbg !6314
  store %struct.dma_fence* %35, %struct.dma_fence** %________p124, align 8, !dbg !6313
  br label %do.body29, !dbg !6313

do.body29:                                        ; preds = %do.end26
  br label %do.end30, !dbg !6318

do.end30:                                         ; preds = %do.body29
  %36 = load %struct.dma_fence*, %struct.dma_fence** %________p124, align 8, !dbg !6313
  store %struct.dma_fence* %36, %struct.dma_fence** %tmp31, align 8, !dbg !6318
  %37 = load %struct.dma_fence*, %struct.dma_fence** %tmp31, align 8, !dbg !6313
  store %struct.dma_fence* %37, %struct.dma_fence** %fence_excl, align 8, !dbg !6320
  %38 = load %struct.dma_resv*, %struct.dma_resv** %resv, align 8, !dbg !6321
  %seq32 = getelementptr inbounds %struct.dma_resv, %struct.dma_resv* %38, i32 0, i32 1, !dbg !6321
  %39 = bitcast %struct.seqcount_ww_mutex* %seq32 to i8*, !dbg !6321
  %40 = bitcast i8* %39 to %struct.seqcount_ww_mutex*, !dbg !6321
  store %struct.seqcount_ww_mutex* %40, %struct.seqcount_ww_mutex** %s.addr.i125, align 8
  %41 = load %struct.seqcount_ww_mutex*, %struct.seqcount_ww_mutex** %s.addr.i125, align 8, !dbg !6206
  %seqcount.i126 = getelementptr inbounds %struct.seqcount_ww_mutex, %struct.seqcount_ww_mutex* %41, i32 0, i32 0, !dbg !6206
  %42 = load i32, i32* %seq, align 4, !dbg !6321
  %call34 = call i32 @read_seqcount_t_retry(%struct.seqcount* %seqcount.i126, i32 %42) #10, !dbg !6321
  %tobool35 = icmp ne i32 %call34, 0, !dbg !6321
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !6322

if.then36:                                        ; preds = %do.end30
  call void @rcu_read_unlock() #10, !dbg !6323
  br label %retry, !dbg !6325

if.end37:                                         ; preds = %do.end30
  %43 = load %struct.dma_fence*, %struct.dma_fence** %fence_excl, align 8, !dbg !6326
  %tobool38 = icmp ne %struct.dma_fence* %43, null, !dbg !6326
  br i1 %tobool38, label %land.lhs.true, label %if.end77, !dbg !6327

land.lhs.true:                                    ; preds = %if.end37
  %44 = load i32, i32* %events, align 4, !dbg !6328
  %and39 = and i32 %44, 4, !dbg !6329
  %tobool40 = icmp ne i32 %and39, 0, !dbg !6329
  br i1 %tobool40, label %lor.lhs.false41, label %if.then42, !dbg !6330

lor.lhs.false41:                                  ; preds = %land.lhs.true
  %45 = load i32, i32* %shared_count, align 4, !dbg !6331
  %cmp = icmp eq i32 %45, 0, !dbg !6332
  br i1 %cmp, label %if.then42, label %if.end77, !dbg !6333

if.then42:                                        ; preds = %lor.lhs.false41, %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.dma_buf_poll_cb_t** %dcb, metadata !6334, metadata !DIExpression()), !dbg !6335
  %46 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6336
  %cb_excl = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %46, i32 0, i32 15, !dbg !6337
  store %struct.dma_buf_poll_cb_t* %cb_excl, %struct.dma_buf_poll_cb_t** %dcb, align 8, !dbg !6335
  call void @llvm.dbg.declare(metadata i32* %pevents, metadata !6338, metadata !DIExpression()), !dbg !6339
  store i32 1, i32* %pevents, align 4, !dbg !6339
  %47 = load i32, i32* %shared_count, align 4, !dbg !6340
  %cmp43 = icmp eq i32 %47, 0, !dbg !6342
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !6343

if.then44:                                        ; preds = %if.then42
  %48 = load i32, i32* %pevents, align 4, !dbg !6344
  %or = or i32 %48, 4, !dbg !6344
  store i32 %or, i32* %pevents, align 4, !dbg !6344
  br label %if.end45, !dbg !6345

if.end45:                                         ; preds = %if.then44, %if.then42
  %49 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6346
  %poll46 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %49, i32 0, i32 14, !dbg !6347
  %lock = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %poll46, i32 0, i32 0, !dbg !6348
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !6349
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6352, !srcloc !6354
  %50 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6355
  %51 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %50, i32 0, i32 0, !dbg !6355
  %rlock.i = bitcast %union.anon.2* %51 to %struct.raw_spinlock*, !dbg !6355
  %52 = load %struct.dma_buf_poll_cb_t*, %struct.dma_buf_poll_cb_t** %dcb, align 8, !dbg !6357
  %active = getelementptr inbounds %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t* %52, i32 0, i32 2, !dbg !6359
  %53 = load i32, i32* %active, align 8, !dbg !6359
  %tobool47 = icmp ne i32 %53, 0, !dbg !6357
  br i1 %tobool47, label %if.then48, label %if.else52, !dbg !6360

if.then48:                                        ; preds = %if.end45
  %54 = load i32, i32* %pevents, align 4, !dbg !6361
  %55 = load %struct.dma_buf_poll_cb_t*, %struct.dma_buf_poll_cb_t** %dcb, align 8, !dbg !6363
  %active49 = getelementptr inbounds %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t* %55, i32 0, i32 2, !dbg !6364
  %56 = load i32, i32* %active49, align 8, !dbg !6365
  %or50 = or i32 %56, %54, !dbg !6365
  store i32 %or50, i32* %active49, align 8, !dbg !6365
  %57 = load i32, i32* %pevents, align 4, !dbg !6366
  %neg = xor i32 %57, -1, !dbg !6367
  %58 = load i32, i32* %events, align 4, !dbg !6368
  %and51 = and i32 %58, %neg, !dbg !6368
  store i32 %and51, i32* %events, align 4, !dbg !6368
  br label %if.end54, !dbg !6369

if.else52:                                        ; preds = %if.end45
  %59 = load i32, i32* %pevents, align 4, !dbg !6370
  %60 = load %struct.dma_buf_poll_cb_t*, %struct.dma_buf_poll_cb_t** %dcb, align 8, !dbg !6371
  %active53 = getelementptr inbounds %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t* %60, i32 0, i32 2, !dbg !6372
  store i32 %59, i32* %active53, align 8, !dbg !6373
  br label %if.end54

if.end54:                                         ; preds = %if.else52, %if.then48
  %61 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6374
  %poll55 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %61, i32 0, i32 14, !dbg !6375
  %lock56 = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %poll55, i32 0, i32 0, !dbg !6376
  store %struct.spinlock* %lock56, %struct.spinlock** %lock.addr.i127, align 8
  call void @arch_local_irq_enable() #12, !dbg !6377
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6380, !srcloc !6382
  %62 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i127, align 8, !dbg !6383
  %63 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %62, i32 0, i32 0, !dbg !6383
  %rlock.i128 = bitcast %union.anon.2* %63 to %struct.raw_spinlock*, !dbg !6383
  %64 = load i32, i32* %events, align 4, !dbg !6385
  %65 = load i32, i32* %pevents, align 4, !dbg !6387
  %and57 = and i32 %64, %65, !dbg !6388
  %tobool58 = icmp ne i32 %and57, 0, !dbg !6388
  br i1 %tobool58, label %if.then59, label %if.end76, !dbg !6389

if.then59:                                        ; preds = %if.end54
  %66 = load %struct.dma_fence*, %struct.dma_fence** %fence_excl, align 8, !dbg !6390
  %call60 = call %struct.dma_fence* @dma_fence_get_rcu(%struct.dma_fence* %66) #10, !dbg !6393
  %tobool61 = icmp ne %struct.dma_fence* %call60, null, !dbg !6393
  br i1 %tobool61, label %if.else65, label %if.then62, !dbg !6394

if.then62:                                        ; preds = %if.then59
  %67 = load i32, i32* %pevents, align 4, !dbg !6395
  %neg63 = xor i32 %67, -1, !dbg !6397
  %68 = load i32, i32* %events, align 4, !dbg !6398
  %and64 = and i32 %68, %neg63, !dbg !6398
  store i32 %and64, i32* %events, align 4, !dbg !6398
  %69 = load %struct.dma_buf_poll_cb_t*, %struct.dma_buf_poll_cb_t** %dcb, align 8, !dbg !6399
  %cb = getelementptr inbounds %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t* %69, i32 0, i32 0, !dbg !6400
  call void @dma_buf_poll_cb(%struct.dma_fence* null, %struct.dma_fence_cb* %cb) #10, !dbg !6401
  br label %if.end75, !dbg !6402

if.else65:                                        ; preds = %if.then59
  %70 = load %struct.dma_fence*, %struct.dma_fence** %fence_excl, align 8, !dbg !6403
  %71 = load %struct.dma_buf_poll_cb_t*, %struct.dma_buf_poll_cb_t** %dcb, align 8, !dbg !6405
  %cb66 = getelementptr inbounds %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t* %71, i32 0, i32 0, !dbg !6406
  %call67 = call i32 @dma_fence_add_callback(%struct.dma_fence* %70, %struct.dma_fence_cb* %cb66, void (%struct.dma_fence*, %struct.dma_fence_cb*)* @dma_buf_poll_cb) #10, !dbg !6407
  %tobool68 = icmp ne i32 %call67, 0, !dbg !6407
  br i1 %tobool68, label %if.else72, label %if.then69, !dbg !6408

if.then69:                                        ; preds = %if.else65
  %72 = load i32, i32* %pevents, align 4, !dbg !6409
  %neg70 = xor i32 %72, -1, !dbg !6411
  %73 = load i32, i32* %events, align 4, !dbg !6412
  %and71 = and i32 %73, %neg70, !dbg !6412
  store i32 %and71, i32* %events, align 4, !dbg !6412
  %74 = load %struct.dma_fence*, %struct.dma_fence** %fence_excl, align 8, !dbg !6413
  call void @dma_fence_put(%struct.dma_fence* %74) #10, !dbg !6414
  br label %if.end74, !dbg !6415

if.else72:                                        ; preds = %if.else65
  %75 = load %struct.dma_fence*, %struct.dma_fence** %fence_excl, align 8, !dbg !6416
  call void @dma_fence_put(%struct.dma_fence* %75) #10, !dbg !6418
  %76 = load %struct.dma_buf_poll_cb_t*, %struct.dma_buf_poll_cb_t** %dcb, align 8, !dbg !6419
  %cb73 = getelementptr inbounds %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t* %76, i32 0, i32 0, !dbg !6420
  call void @dma_buf_poll_cb(%struct.dma_fence* null, %struct.dma_fence_cb* %cb73) #10, !dbg !6421
  br label %if.end74

if.end74:                                         ; preds = %if.else72, %if.then69
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then62
  br label %if.end76, !dbg !6422

if.end76:                                         ; preds = %if.end75, %if.end54
  br label %if.end77, !dbg !6423

if.end77:                                         ; preds = %if.end76, %lor.lhs.false41, %if.end37
  %77 = load i32, i32* %events, align 4, !dbg !6424
  %and78 = and i32 %77, 4, !dbg !6425
  %tobool79 = icmp ne i32 %and78, 0, !dbg !6425
  br i1 %tobool79, label %land.lhs.true80, label %if.end124, !dbg !6426

land.lhs.true80:                                  ; preds = %if.end77
  %78 = load i32, i32* %shared_count, align 4, !dbg !6427
  %cmp81 = icmp ugt i32 %78, 0, !dbg !6428
  br i1 %cmp81, label %if.then82, label %if.end124, !dbg !6429

if.then82:                                        ; preds = %land.lhs.true80
  call void @llvm.dbg.declare(metadata %struct.dma_buf_poll_cb_t** %dcb83, metadata !6430, metadata !DIExpression()), !dbg !6431
  %79 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6432
  %cb_shared = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %79, i32 0, i32 16, !dbg !6433
  store %struct.dma_buf_poll_cb_t* %cb_shared, %struct.dma_buf_poll_cb_t** %dcb83, align 8, !dbg !6431
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6434, metadata !DIExpression()), !dbg !6435
  %80 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6436
  %poll84 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %80, i32 0, i32 14, !dbg !6437
  %lock85 = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %poll84, i32 0, i32 0, !dbg !6438
  store %struct.spinlock* %lock85, %struct.spinlock** %lock.addr.i129, align 8
  call void @arch_local_irq_disable() #12, !dbg !6439
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6440, !srcloc !6354
  %81 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i129, align 8, !dbg !6441
  %82 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %81, i32 0, i32 0, !dbg !6441
  %rlock.i130 = bitcast %union.anon.2* %82 to %struct.raw_spinlock*, !dbg !6441
  %83 = load %struct.dma_buf_poll_cb_t*, %struct.dma_buf_poll_cb_t** %dcb83, align 8, !dbg !6442
  %active86 = getelementptr inbounds %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t* %83, i32 0, i32 2, !dbg !6444
  %84 = load i32, i32* %active86, align 8, !dbg !6444
  %tobool87 = icmp ne i32 %84, 0, !dbg !6442
  br i1 %tobool87, label %if.then88, label %if.else90, !dbg !6445

if.then88:                                        ; preds = %if.then82
  %85 = load i32, i32* %events, align 4, !dbg !6446
  %and89 = and i32 %85, -5, !dbg !6446
  store i32 %and89, i32* %events, align 4, !dbg !6446
  br label %if.end92, !dbg !6447

if.else90:                                        ; preds = %if.then82
  %86 = load %struct.dma_buf_poll_cb_t*, %struct.dma_buf_poll_cb_t** %dcb83, align 8, !dbg !6448
  %active91 = getelementptr inbounds %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t* %86, i32 0, i32 2, !dbg !6449
  store i32 4, i32* %active91, align 8, !dbg !6450
  br label %if.end92

if.end92:                                         ; preds = %if.else90, %if.then88
  %87 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6451
  %poll93 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %87, i32 0, i32 14, !dbg !6452
  %lock94 = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %poll93, i32 0, i32 0, !dbg !6453
  store %struct.spinlock* %lock94, %struct.spinlock** %lock.addr.i131, align 8
  call void @arch_local_irq_enable() #12, !dbg !6454
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6455, !srcloc !6382
  %88 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i131, align 8, !dbg !6456
  %89 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %88, i32 0, i32 0, !dbg !6456
  %rlock.i132 = bitcast %union.anon.2* %89 to %struct.raw_spinlock*, !dbg !6456
  %90 = load i32, i32* %events, align 4, !dbg !6457
  %and95 = and i32 %90, 4, !dbg !6459
  %tobool96 = icmp ne i32 %and95, 0, !dbg !6459
  br i1 %tobool96, label %if.end98, label %if.then97, !dbg !6460

if.then97:                                        ; preds = %if.end92
  br label %out, !dbg !6461

if.end98:                                         ; preds = %if.end92
  store i32 0, i32* %i, align 4, !dbg !6462
  br label %for.cond, !dbg !6464

for.cond:                                         ; preds = %for.inc, %if.end98
  %91 = load i32, i32* %i, align 4, !dbg !6465
  %92 = load i32, i32* %shared_count, align 4, !dbg !6467
  %cmp99 = icmp ult i32 %91, %92, !dbg !6468
  br i1 %cmp99, label %for.body, label %for.end, !dbg !6469

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.dma_fence** %fence100, metadata !6470, metadata !DIExpression()), !dbg !6472
  call void @llvm.dbg.declare(metadata %struct.dma_fence** %________p1101, metadata !6473, metadata !DIExpression()), !dbg !6475
  br label %do.body102, !dbg !6476

do.body102:                                       ; preds = %for.body
  br label %do.end103, !dbg !6478

do.end103:                                        ; preds = %do.body102
  %93 = load %struct.dma_resv_list*, %struct.dma_resv_list** %fobj, align 8, !dbg !6476
  %shared = getelementptr inbounds %struct.dma_resv_list, %struct.dma_resv_list* %93, i32 0, i32 3, !dbg !6476
  %94 = load i32, i32* %i, align 4, !dbg !6476
  %idxprom = sext i32 %94 to i64, !dbg !6476
  %arrayidx = getelementptr [0 x %struct.dma_fence*], [0 x %struct.dma_fence*]* %shared, i64 0, i64 %idxprom, !dbg !6476
  %95 = load volatile %struct.dma_fence*, %struct.dma_fence** %arrayidx, align 8, !dbg !6476
  store %struct.dma_fence* %95, %struct.dma_fence** %tmp104, align 8, !dbg !6478
  %96 = load %struct.dma_fence*, %struct.dma_fence** %tmp104, align 8, !dbg !6476
  store %struct.dma_fence* %96, %struct.dma_fence** %________p1101, align 8, !dbg !6475
  br label %do.body105, !dbg !6475

do.body105:                                       ; preds = %do.end103
  br label %do.end106, !dbg !6480

do.end106:                                        ; preds = %do.body105
  %97 = load %struct.dma_fence*, %struct.dma_fence** %________p1101, align 8, !dbg !6475
  store %struct.dma_fence* %97, %struct.dma_fence** %tmp107, align 8, !dbg !6480
  %98 = load %struct.dma_fence*, %struct.dma_fence** %tmp107, align 8, !dbg !6475
  store %struct.dma_fence* %98, %struct.dma_fence** %fence100, align 8, !dbg !6472
  %99 = load %struct.dma_fence*, %struct.dma_fence** %fence100, align 8, !dbg !6482
  %call108 = call %struct.dma_fence* @dma_fence_get_rcu(%struct.dma_fence* %99) #10, !dbg !6484
  %tobool109 = icmp ne %struct.dma_fence* %call108, null, !dbg !6484
  br i1 %tobool109, label %if.end113, label %if.then110, !dbg !6485

if.then110:                                       ; preds = %do.end106
  %100 = load i32, i32* %events, align 4, !dbg !6486
  %and111 = and i32 %100, -5, !dbg !6486
  store i32 %and111, i32* %events, align 4, !dbg !6486
  %101 = load %struct.dma_buf_poll_cb_t*, %struct.dma_buf_poll_cb_t** %dcb83, align 8, !dbg !6488
  %cb112 = getelementptr inbounds %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t* %101, i32 0, i32 0, !dbg !6489
  call void @dma_buf_poll_cb(%struct.dma_fence* null, %struct.dma_fence_cb* %cb112) #10, !dbg !6490
  br label %for.end, !dbg !6491

if.end113:                                        ; preds = %do.end106
  %102 = load %struct.dma_fence*, %struct.dma_fence** %fence100, align 8, !dbg !6492
  %103 = load %struct.dma_buf_poll_cb_t*, %struct.dma_buf_poll_cb_t** %dcb83, align 8, !dbg !6494
  %cb114 = getelementptr inbounds %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t* %103, i32 0, i32 0, !dbg !6495
  %call115 = call i32 @dma_fence_add_callback(%struct.dma_fence* %102, %struct.dma_fence_cb* %cb114, void (%struct.dma_fence*, %struct.dma_fence_cb*)* @dma_buf_poll_cb) #10, !dbg !6496
  %tobool116 = icmp ne i32 %call115, 0, !dbg !6496
  br i1 %tobool116, label %if.end119, label %if.then117, !dbg !6497

if.then117:                                       ; preds = %if.end113
  %104 = load %struct.dma_fence*, %struct.dma_fence** %fence100, align 8, !dbg !6498
  call void @dma_fence_put(%struct.dma_fence* %104) #10, !dbg !6500
  %105 = load i32, i32* %events, align 4, !dbg !6501
  %and118 = and i32 %105, -5, !dbg !6501
  store i32 %and118, i32* %events, align 4, !dbg !6501
  br label %for.end, !dbg !6502

if.end119:                                        ; preds = %if.end113
  %106 = load %struct.dma_fence*, %struct.dma_fence** %fence100, align 8, !dbg !6503
  call void @dma_fence_put(%struct.dma_fence* %106) #10, !dbg !6504
  br label %for.inc, !dbg !6505

for.inc:                                          ; preds = %if.end119
  %107 = load i32, i32* %i, align 4, !dbg !6506
  %inc = add i32 %107, 1, !dbg !6506
  store i32 %inc, i32* %i, align 4, !dbg !6506
  br label %for.cond, !dbg !6507, !llvm.loop !6508

for.end:                                          ; preds = %if.then117, %if.then110, %for.cond
  %108 = load i32, i32* %i, align 4, !dbg !6510
  %109 = load i32, i32* %shared_count, align 4, !dbg !6512
  %cmp120 = icmp eq i32 %108, %109, !dbg !6513
  br i1 %cmp120, label %if.then121, label %if.end123, !dbg !6514

if.then121:                                       ; preds = %for.end
  %110 = load %struct.dma_buf_poll_cb_t*, %struct.dma_buf_poll_cb_t** %dcb83, align 8, !dbg !6515
  %cb122 = getelementptr inbounds %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t* %110, i32 0, i32 0, !dbg !6516
  call void @dma_buf_poll_cb(%struct.dma_fence* null, %struct.dma_fence_cb* %cb122) #10, !dbg !6517
  br label %if.end123, !dbg !6517

if.end123:                                        ; preds = %if.then121, %for.end
  br label %if.end124, !dbg !6518

if.end124:                                        ; preds = %if.end123, %land.lhs.true80, %if.end77
  br label %out, !dbg !6519

out:                                              ; preds = %if.end124, %if.then97
  call void @llvm.dbg.label(metadata !6520), !dbg !6521
  call void @rcu_read_unlock() #10, !dbg !6522
  %111 = load i32, i32* %events, align 4, !dbg !6523
  store i32 %111, i32* %retval, align 4, !dbg !6524
  br label %return, !dbg !6524

return:                                           ; preds = %out, %if.then6, %if.then
  %112 = load i32, i32* %retval, align 4, !dbg !6525
  ret i32 %112, !dbg !6525
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dma_buf_ioctl(%struct.file* %file, i32 %cmd, i64 %arg) #0 !dbg !6526 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !6527, metadata !DIExpression()), !dbg !6532
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !6542, metadata !DIExpression()), !dbg !6543
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !6544, metadata !DIExpression()), !dbg !6545
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !6546, metadata !DIExpression()), !dbg !6547
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !6548, metadata !DIExpression()), !dbg !6551
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6552, metadata !DIExpression()), !dbg !6553
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6554, metadata !DIExpression()), !dbg !6555
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6556, metadata !DIExpression()), !dbg !6557
  %retval = alloca i64, align 8
  %file.addr = alloca %struct.file*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i64, align 8
  %dmabuf = alloca %struct.dma_buf*, align 8
  %sync = alloca %struct.dma_buf_sync, align 8
  %direction = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !6558, metadata !DIExpression()), !dbg !6559
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !6560, metadata !DIExpression()), !dbg !6561
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !6562, metadata !DIExpression()), !dbg !6563
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf, metadata !6564, metadata !DIExpression()), !dbg !6565
  call void @llvm.dbg.declare(metadata %struct.dma_buf_sync* %sync, metadata !6566, metadata !DIExpression()), !dbg !6571
  call void @llvm.dbg.declare(metadata i32* %direction, metadata !6572, metadata !DIExpression()), !dbg !6573
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6574, metadata !DIExpression()), !dbg !6575
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6576
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !6577
  %1 = load i8*, i8** %private_data, align 8, !dbg !6577
  %2 = bitcast i8* %1 to %struct.dma_buf*, !dbg !6576
  store %struct.dma_buf* %2, %struct.dma_buf** %dmabuf, align 8, !dbg !6578
  %3 = load i32, i32* %cmd.addr, align 4, !dbg !6579
  switch i32 %3, label %sw.default18 [
    i32 1074291200, label %sw.bb
    i32 1074029057, label %sw.bb16
    i32 1074291201, label %sw.bb16
  ], !dbg !6580

sw.bb:                                            ; preds = %entry
  %4 = bitcast %struct.dma_buf_sync* %sync to i8*, !dbg !6581
  %5 = load i64, i64* %arg.addr, align 8, !dbg !6582
  %6 = inttoptr i64 %5 to i8*, !dbg !6583
  store i8* %4, i8** %to.addr.i, align 8
  store i8* %6, i8** %from.addr.i, align 8
  store i64 8, i64* %n.addr.i, align 8
  %7 = load i8*, i8** %to.addr.i, align 8, !dbg !6584
  %8 = load i64, i64* %n.addr.i, align 8, !dbg !6584
  store i8* %7, i8** %addr.addr.i.i, align 8
  store i64 %8, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !6547
  %9 = load i32, i32* %sz.i.i, align 4, !dbg !6585
  %cmp.i.i = icmp sge i32 %9, 0, !dbg !6585
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !6585

land.rhs.i.i:                                     ; preds = %sw.bb
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !6585
  %conv.i.i = sext i32 %10 to i64, !dbg !6585
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6585
  %cmp1.i.i = icmp ult i64 %conv.i.i, %11, !dbg !6585
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %sw.bb
  %12 = phi i1 [ false, %sw.bb ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !6587
  %lnot.i.i = xor i1 %12, true, !dbg !6585
  %lnot.ext.i.i = zext i1 %12 to i32, !dbg !6585
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !6585
  br i1 %12, label %if.then.i.i, label %if.end10.i.i, !dbg !6588

if.then.i.i:                                      ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6589
  %14 = call i1 @llvm.is.constant.i64(i64 %13) #9, !dbg !6592
  br i1 %14, label %if.else.i.i, label %if.then5.i.i, !dbg !6593

if.then5.i.i:                                     ; preds = %if.then.i.i
  %15 = load i32, i32* %sz.i.i, align 4, !dbg !6594
  %16 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6595
  call void @copy_overflow(i32 %15, i64 %16) #12, !dbg !6596
  br label %if.end9.i.i, !dbg !6596

if.else.i.i:                                      ; preds = %if.then.i.i
  %17 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !6597
  %tobool6.i.i = trunc i8 %17 to i1, !dbg !6597
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !6599

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #12, !dbg !6600
  br label %if.end.i.i, !dbg !6600

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #12, !dbg !6601
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !6602
  br label %check_copy_size.exit.i, !dbg !6602

if.end10.i.i:                                     ; preds = %land.end.i.i
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6551
  %cmp11.i.i = icmp ugt i64 %18, 2147483647, !dbg !6551
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !6551
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !6551
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !6551
  %19 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !6603
  %tobool17.i.i = icmp ne i32 %19, 0, !dbg !6603
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !6603
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !6603
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !6603
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !6551

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0), i32 150, i32 2307, i64 12) #9, !dbg !6605, !srcloc !6608
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #9, !dbg !6609, !srcloc !6611
  br label %if.end31.i.i, !dbg !6612

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %20 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !6551
  %tobool32.i.i = icmp ne i32 %20, 0, !dbg !6551
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !6551
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !6551
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !6551
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !6603
  %21 = load i64, i64* %tmp.i.i, align 8, !dbg !6551
  %tobool38.i.i = icmp ne i64 %21, 0, !dbg !6613
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !6614

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !6615
  br label %check_copy_size.exit.i, !dbg !6615

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %22 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !6616
  %23 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6617
  %24 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !6618
  %tobool41.i.i = trunc i8 %24 to i1, !dbg !6618
  call void @check_object_size(i8* %22, i64 %23, i1 zeroext %tobool41.i.i) #12, !dbg !6619
  store i1 true, i1* %retval.i.i, align 1, !dbg !6620
  br label %check_copy_size.exit.i, !dbg !6620

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %25 = load i1, i1* %retval.i.i, align 1, !dbg !6621
  %lnot.i = xor i1 %25, true, !dbg !6584
  %lnot.ext.i = zext i1 %25 to i32, !dbg !6584
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !6584
  br i1 %25, label %if.then.i, label %copy_from_user.exit, !dbg !6622

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %26 = load i8*, i8** %to.addr.i, align 8, !dbg !6623
  %27 = load i8*, i8** %from.addr.i, align 8, !dbg !6624
  %28 = load i64, i64* %n.addr.i, align 8, !dbg !6625
  %call2.i = call i64 @_copy_from_user(i8* %26, i8* %27, i64 %28) #12, !dbg !6626
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !6627
  br label %copy_from_user.exit, !dbg !6628

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %29 = load i64, i64* %n.addr.i, align 8, !dbg !6629
  %tobool = icmp ne i64 %29, 0, !dbg !6630
  br i1 %tobool, label %if.then, label %if.end, !dbg !6631

if.then:                                          ; preds = %copy_from_user.exit
  store i64 -14, i64* %retval, align 8, !dbg !6632
  br label %return, !dbg !6632

if.end:                                           ; preds = %copy_from_user.exit
  %flags = getelementptr inbounds %struct.dma_buf_sync, %struct.dma_buf_sync* %sync, i32 0, i32 0, !dbg !6633
  %30 = load i64, i64* %flags, align 8, !dbg !6633
  %and = and i64 %30, -8, !dbg !6635
  %tobool1 = icmp ne i64 %and, 0, !dbg !6635
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !6636

if.then2:                                         ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !6637
  br label %return, !dbg !6637

if.end3:                                          ; preds = %if.end
  %flags4 = getelementptr inbounds %struct.dma_buf_sync, %struct.dma_buf_sync* %sync, i32 0, i32 0, !dbg !6638
  %31 = load i64, i64* %flags4, align 8, !dbg !6638
  %and5 = and i64 %31, 3, !dbg !6639
  switch i64 %and5, label %sw.default [
    i64 1, label %sw.bb6
    i64 2, label %sw.bb7
    i64 3, label %sw.bb8
  ], !dbg !6640

sw.bb6:                                           ; preds = %if.end3
  store i32 2, i32* %direction, align 4, !dbg !6641
  br label %sw.epilog, !dbg !6643

sw.bb7:                                           ; preds = %if.end3
  store i32 1, i32* %direction, align 4, !dbg !6644
  br label %sw.epilog, !dbg !6645

sw.bb8:                                           ; preds = %if.end3
  store i32 0, i32* %direction, align 4, !dbg !6646
  br label %sw.epilog, !dbg !6647

sw.default:                                       ; preds = %if.end3
  store i64 -22, i64* %retval, align 8, !dbg !6648
  br label %return, !dbg !6648

sw.epilog:                                        ; preds = %sw.bb8, %sw.bb7, %sw.bb6
  %flags9 = getelementptr inbounds %struct.dma_buf_sync, %struct.dma_buf_sync* %sync, i32 0, i32 0, !dbg !6649
  %32 = load i64, i64* %flags9, align 8, !dbg !6649
  %and10 = and i64 %32, 4, !dbg !6651
  %tobool11 = icmp ne i64 %and10, 0, !dbg !6651
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !6652

if.then12:                                        ; preds = %sw.epilog
  %33 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6653
  %34 = load i32, i32* %direction, align 4, !dbg !6654
  %call13 = call i32 @dma_buf_end_cpu_access(%struct.dma_buf* %33, i32 %34) #10, !dbg !6655
  store i32 %call13, i32* %ret, align 4, !dbg !6656
  br label %if.end15, !dbg !6657

if.else:                                          ; preds = %sw.epilog
  %35 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6658
  %36 = load i32, i32* %direction, align 4, !dbg !6659
  %call14 = call i32 @dma_buf_begin_cpu_access(%struct.dma_buf* %35, i32 %36) #10, !dbg !6660
  store i32 %call14, i32* %ret, align 4, !dbg !6661
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then12
  %37 = load i32, i32* %ret, align 4, !dbg !6662
  %conv = sext i32 %37 to i64, !dbg !6662
  store i64 %conv, i64* %retval, align 8, !dbg !6663
  br label %return, !dbg !6663

sw.bb16:                                          ; preds = %entry, %entry
  %38 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6664
  %39 = load i64, i64* %arg.addr, align 8, !dbg !6665
  %40 = inttoptr i64 %39 to i8*, !dbg !6666
  %call17 = call i64 @dma_buf_set_name(%struct.dma_buf* %38, i8* %40) #10, !dbg !6667
  store i64 %call17, i64* %retval, align 8, !dbg !6668
  br label %return, !dbg !6668

sw.default18:                                     ; preds = %entry
  store i64 -25, i64* %retval, align 8, !dbg !6669
  br label %return, !dbg !6669

return:                                           ; preds = %sw.default18, %sw.bb16, %if.end15, %sw.default, %if.then2, %if.then
  %41 = load i64, i64* %retval, align 8, !dbg !6670
  ret i64 %41, !dbg !6670
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_buf_mmap_internal(%struct.file* %file, %struct.vm_area_struct* %vma) #0 !dbg !6671 {
entry:
  %retval = alloca i32, align 4
  %file.addr = alloca %struct.file*, align 8
  %vma.addr = alloca %struct.vm_area_struct*, align 8
  %dmabuf = alloca %struct.dma_buf*, align 8
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !6672, metadata !DIExpression()), !dbg !6673
  store %struct.vm_area_struct* %vma, %struct.vm_area_struct** %vma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vm_area_struct** %vma.addr, metadata !6674, metadata !DIExpression()), !dbg !6675
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf, metadata !6676, metadata !DIExpression()), !dbg !6677
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6678
  %call = call i32 @is_dma_buf_file(%struct.file* %0) #10, !dbg !6680
  %tobool = icmp ne i32 %call, 0, !dbg !6680
  br i1 %tobool, label %if.end, label %if.then, !dbg !6681

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6682
  br label %return, !dbg !6682

if.end:                                           ; preds = %entry
  %1 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6683
  %private_data = getelementptr inbounds %struct.file, %struct.file* %1, i32 0, i32 15, !dbg !6684
  %2 = load i8*, i8** %private_data, align 8, !dbg !6684
  %3 = bitcast i8* %2 to %struct.dma_buf*, !dbg !6683
  store %struct.dma_buf* %3, %struct.dma_buf** %dmabuf, align 8, !dbg !6685
  %4 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6686
  %ops = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %4, i32 0, i32 3, !dbg !6688
  %5 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops, align 8, !dbg !6688
  %mmap = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %5, i32 0, i32 10, !dbg !6689
  %6 = load i32 (%struct.dma_buf*, %struct.vm_area_struct*)*, i32 (%struct.dma_buf*, %struct.vm_area_struct*)** %mmap, align 8, !dbg !6689
  %tobool1 = icmp ne i32 (%struct.dma_buf*, %struct.vm_area_struct*)* %6, null, !dbg !6686
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !6690

if.then2:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !6691
  br label %return, !dbg !6691

if.end3:                                          ; preds = %if.end
  %7 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !6692
  %vm_pgoff = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %7, i32 0, i32 13, !dbg !6694
  %8 = load i64, i64* %vm_pgoff, align 8, !dbg !6694
  %9 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !6695
  %call4 = call i64 @vma_pages(%struct.vm_area_struct* %9) #10, !dbg !6696
  %add = add i64 %8, %call4, !dbg !6697
  %10 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6698
  %size = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %10, i32 0, i32 0, !dbg !6699
  %11 = load i64, i64* %size, align 8, !dbg !6699
  %shr = lshr i64 %11, 12, !dbg !6700
  %cmp = icmp ugt i64 %add, %shr, !dbg !6701
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !6702

if.then5:                                         ; preds = %if.end3
  store i32 -22, i32* %retval, align 4, !dbg !6703
  br label %return, !dbg !6703

if.end6:                                          ; preds = %if.end3
  %12 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6704
  %ops7 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %12, i32 0, i32 3, !dbg !6705
  %13 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops7, align 8, !dbg !6705
  %mmap8 = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %13, i32 0, i32 10, !dbg !6706
  %14 = load i32 (%struct.dma_buf*, %struct.vm_area_struct*)*, i32 (%struct.dma_buf*, %struct.vm_area_struct*)** %mmap8, align 8, !dbg !6706
  %15 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6707
  %16 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !6708
  %call9 = call i32 %14(%struct.dma_buf* %15, %struct.vm_area_struct* %16) #10, !dbg !6704
  store i32 %call9, i32* %retval, align 4, !dbg !6709
  br label %return, !dbg !6709

return:                                           ; preds = %if.end6, %if.then5, %if.then2, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !6710
  ret i32 %17, !dbg !6710
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_buf_show_fdinfo(%struct.seq_file* %m, %struct.file* %file) #0 !dbg !6711 {
entry:
  %lock.addr.i4 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i4, metadata !6712, metadata !DIExpression()), !dbg !6714
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6716, metadata !DIExpression()), !dbg !6718
  %v.addr.i.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i.i, metadata !6720, metadata !DIExpression()), !dbg !6722
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !6736, metadata !DIExpression()), !dbg !6737
  %v.addr.i.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i.i, metadata !6738, metadata !DIExpression()), !dbg !6739
  %v.addr.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i, metadata !6740, metadata !DIExpression()), !dbg !6741
  %m.addr = alloca %struct.seq_file*, align 8
  %file.addr = alloca %struct.file*, align 8
  %dmabuf = alloca %struct.dma_buf*, align 8
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !6742, metadata !DIExpression()), !dbg !6743
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !6744, metadata !DIExpression()), !dbg !6745
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf, metadata !6746, metadata !DIExpression()), !dbg !6747
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6748
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !6749
  %1 = load i8*, i8** %private_data, align 8, !dbg !6749
  %2 = bitcast i8* %1 to %struct.dma_buf*, !dbg !6748
  store %struct.dma_buf* %2, %struct.dma_buf** %dmabuf, align 8, !dbg !6747
  %3 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6750
  %4 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6751
  %size = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %4, i32 0, i32 0, !dbg !6752
  %5 = load i64, i64* %size, align 8, !dbg !6752
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i64 %5) #10, !dbg !6753
  %6 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6754
  %7 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6755
  %file1 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %7, i32 0, i32 1, !dbg !6755
  %8 = load %struct.file*, %struct.file** %file1, align 8, !dbg !6755
  %f_count = getelementptr inbounds %struct.file, %struct.file* %8, i32 0, i32 6, !dbg !6755
  store %struct.atomic64_t* %f_count, %struct.atomic64_t** %v.addr.i, align 8
  %9 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i, align 8, !dbg !6756
  store %struct.atomic64_t* %9, %struct.atomic64_t** %v.addr.i.i, align 8
  %10 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i.i, align 8, !dbg !6757
  %11 = bitcast %struct.atomic64_t* %10 to i8*, !dbg !6757
  store i8* %11, i8** %v.addr.i.i.i, align 8
  store i64 8, i64* %size.addr.i.i.i, align 8
  %12 = load i8*, i8** %v.addr.i.i.i, align 8, !dbg !6758
  %13 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !6759
  %conv.i.i.i = trunc i64 %13 to i32, !dbg !6759
  %call.i.i.i = call zeroext i1 @kasan_check_read(i8* %12, i32 %conv.i.i.i) #12, !dbg !6760
  %14 = load i8*, i8** %v.addr.i.i.i, align 8, !dbg !6761
  %15 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !6761
  call void @kcsan_check_access(i8* %14, i64 %15, i32 4) #12, !dbg !6761
  %16 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i.i, align 8, !dbg !6762
  %call.i.i = call i64 @arch_atomic64_read(%struct.atomic64_t* %16) #12, !dbg !6763
  %sub = sub i64 %call.i.i, 1, !dbg !6764
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), i64 %sub) #10, !dbg !6765
  %17 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6766
  %18 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6767
  %exp_name = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %18, i32 0, i32 7, !dbg !6768
  %19 = load i8*, i8** %exp_name, align 8, !dbg !6768
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %17, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0), i8* %19) #10, !dbg !6769
  %20 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6770
  %name_lock = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %20, i32 0, i32 9, !dbg !6771
  store %struct.spinlock* %name_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6772, !srcloc !6774
  %21 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6775
  %22 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %21, i32 0, i32 0, !dbg !6775
  %rlock.i = bitcast %union.anon.2* %22 to %struct.raw_spinlock*, !dbg !6775
  %23 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6777
  %name = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %23, i32 0, i32 8, !dbg !6779
  %24 = load i8*, i8** %name, align 8, !dbg !6779
  %tobool = icmp ne i8* %24, null, !dbg !6777
  br i1 %tobool, label %if.then, label %if.end, !dbg !6780

if.then:                                          ; preds = %entry
  %25 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !6781
  %26 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6782
  %name2 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %26, i32 0, i32 8, !dbg !6783
  %27 = load i8*, i8** %name2, align 8, !dbg !6783
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %25, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i8* %27) #10, !dbg !6784
  br label %if.end, !dbg !6784

if.end:                                           ; preds = %if.then, %entry
  %28 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !6785
  %name_lock3 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %28, i32 0, i32 9, !dbg !6786
  store %struct.spinlock* %name_lock3, %struct.spinlock** %lock.addr.i4, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6787, !srcloc !6789
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i4, align 8, !dbg !6790
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !6790
  %rlock.i5 = bitcast %union.anon.2* %30 to %struct.raw_spinlock*, !dbg !6790
  ret void, !dbg !6792
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @poll_wait(%struct.file* %filp, %struct.wait_queue_head* %wait_address, %struct.poll_table_struct* %p) #0 !dbg !6793 {
entry:
  %filp.addr = alloca %struct.file*, align 8
  %wait_address.addr = alloca %struct.wait_queue_head*, align 8
  %p.addr = alloca %struct.poll_table_struct*, align 8
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !6796, metadata !DIExpression()), !dbg !6797
  store %struct.wait_queue_head* %wait_address, %struct.wait_queue_head** %wait_address.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wait_queue_head** %wait_address.addr, metadata !6798, metadata !DIExpression()), !dbg !6799
  store %struct.poll_table_struct* %p, %struct.poll_table_struct** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.poll_table_struct** %p.addr, metadata !6800, metadata !DIExpression()), !dbg !6801
  %0 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !6802
  %tobool = icmp ne %struct.poll_table_struct* %0, null, !dbg !6802
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6804

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !6805
  %_qproc = getelementptr inbounds %struct.poll_table_struct, %struct.poll_table_struct* %1, i32 0, i32 0, !dbg !6806
  %2 = load void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)** %_qproc, align 8, !dbg !6806
  %tobool1 = icmp ne void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)* %2, null, !dbg !6805
  br i1 %tobool1, label %land.lhs.true2, label %if.end, !dbg !6807

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load %struct.wait_queue_head*, %struct.wait_queue_head** %wait_address.addr, align 8, !dbg !6808
  %tobool3 = icmp ne %struct.wait_queue_head* %3, null, !dbg !6808
  br i1 %tobool3, label %if.then, label %if.end, !dbg !6809

if.then:                                          ; preds = %land.lhs.true2
  %4 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !6810
  %_qproc4 = getelementptr inbounds %struct.poll_table_struct, %struct.poll_table_struct* %4, i32 0, i32 0, !dbg !6811
  %5 = load void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)** %_qproc4, align 8, !dbg !6811
  %6 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !6812
  %7 = load %struct.wait_queue_head*, %struct.wait_queue_head** %wait_address.addr, align 8, !dbg !6813
  %8 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !6814
  call void %5(%struct.file* %6, %struct.wait_queue_head* %7, %struct.poll_table_struct* %8) #10, !dbg !6810
  br label %if.end, !dbg !6810

if.end:                                           ; preds = %if.then, %land.lhs.true2, %land.lhs.true, %entry
  ret void, !dbg !6815
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @poll_requested_events(%struct.poll_table_struct* %p) #0 !dbg !6816 {
entry:
  %p.addr = alloca %struct.poll_table_struct*, align 8
  store %struct.poll_table_struct* %p, %struct.poll_table_struct** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.poll_table_struct** %p.addr, metadata !6821, metadata !DIExpression()), !dbg !6822
  %0 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !6823
  %tobool = icmp ne %struct.poll_table_struct* %0, null, !dbg !6823
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6823

cond.true:                                        ; preds = %entry
  %1 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !6824
  %_key = getelementptr inbounds %struct.poll_table_struct, %struct.poll_table_struct* %1, i32 0, i32 1, !dbg !6825
  %2 = load i32, i32* %_key, align 8, !dbg !6825
  br label %cond.end, !dbg !6823

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6823

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ -1, %cond.false ], !dbg !6823
  ret i32 %cond, !dbg !6826
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_atomic_next(i32 %n) #0 !dbg !6827 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6829, metadata !DIExpression()), !dbg !6830
  ret void, !dbg !6831
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @read_seqcount_t_retry(%struct.seqcount* %s, i32 %start) #0 !dbg !6832 {
entry:
  %s.addr = alloca %struct.seqcount*, align 8
  %start.addr = alloca i32, align 4
  store %struct.seqcount* %s, %struct.seqcount** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seqcount** %s.addr, metadata !6837, metadata !DIExpression()), !dbg !6838
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !6839, metadata !DIExpression()), !dbg !6840
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6841, !srcloc !6842
  %0 = load %struct.seqcount*, %struct.seqcount** %s.addr, align 8, !dbg !6843
  %1 = load i32, i32* %start.addr, align 4, !dbg !6844
  %call = call i32 @__read_seqcount_t_retry(%struct.seqcount* %0, i32 %1) #10, !dbg !6845
  ret i32 %call, !dbg !6846
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rcu_read_unlock() #0 !dbg !6847 {
entry:
  br label %do.body, !dbg !6848

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6849

do.end:                                           ; preds = %do.body
  call void @__rcu_read_unlock() #10, !dbg !6851
  br label %do.body1, !dbg !6852

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !6853

do.end2:                                          ; preds = %do.body1
  ret void, !dbg !6855
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dma_fence* @dma_fence_get_rcu(%struct.dma_fence* %fence) #0 !dbg !6856 {
entry:
  %retval = alloca %struct.dma_fence*, align 8
  %fence.addr = alloca %struct.dma_fence*, align 8
  store %struct.dma_fence* %fence, %struct.dma_fence** %fence.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_fence** %fence.addr, metadata !6859, metadata !DIExpression()), !dbg !6860
  %0 = load %struct.dma_fence*, %struct.dma_fence** %fence.addr, align 8, !dbg !6861
  %refcount = getelementptr inbounds %struct.dma_fence, %struct.dma_fence* %0, i32 0, i32 6, !dbg !6863
  %call = call i32 @kref_get_unless_zero(%struct.kref* %refcount) #10, !dbg !6864
  %tobool = icmp ne i32 %call, 0, !dbg !6864
  br i1 %tobool, label %if.then, label %if.else, !dbg !6865

if.then:                                          ; preds = %entry
  %1 = load %struct.dma_fence*, %struct.dma_fence** %fence.addr, align 8, !dbg !6866
  store %struct.dma_fence* %1, %struct.dma_fence** %retval, align 8, !dbg !6867
  br label %return, !dbg !6867

if.else:                                          ; preds = %entry
  store %struct.dma_fence* null, %struct.dma_fence** %retval, align 8, !dbg !6868
  br label %return, !dbg !6868

return:                                           ; preds = %if.else, %if.then
  %2 = load %struct.dma_fence*, %struct.dma_fence** %retval, align 8, !dbg !6869
  ret %struct.dma_fence* %2, !dbg !6869
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_buf_poll_cb(%struct.dma_fence* %fence, %struct.dma_fence_cb* %cb) #0 !dbg !6870 {
entry:
  %lock.addr.i24 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i24, metadata !6871, metadata !DIExpression()), !dbg !6875
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6877, metadata !DIExpression()), !dbg !6878
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4140, metadata !DIExpression()), !dbg !6879
  %fence.addr = alloca %struct.dma_fence*, align 8
  %cb.addr = alloca %struct.dma_fence_cb*, align 8
  %dcb = alloca %struct.dma_buf_poll_cb_t*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.dma_fence* %fence, %struct.dma_fence** %fence.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_fence** %fence.addr, metadata !6886, metadata !DIExpression()), !dbg !6887
  store %struct.dma_fence_cb* %cb, %struct.dma_fence_cb** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_fence_cb** %cb.addr, metadata !6888, metadata !DIExpression()), !dbg !6889
  call void @llvm.dbg.declare(metadata %struct.dma_buf_poll_cb_t** %dcb, metadata !6890, metadata !DIExpression()), !dbg !6891
  %0 = load %struct.dma_fence_cb*, %struct.dma_fence_cb** %cb.addr, align 8, !dbg !6892
  %1 = bitcast %struct.dma_fence_cb* %0 to %struct.dma_buf_poll_cb_t*, !dbg !6893
  store %struct.dma_buf_poll_cb_t* %1, %struct.dma_buf_poll_cb_t** %dcb, align 8, !dbg !6891
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6894, metadata !DIExpression()), !dbg !6895
  br label %do.body, !dbg !6896

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6897

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6898, metadata !DIExpression()), !dbg !6900
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6901, metadata !DIExpression()), !dbg !6900
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6900
  %conv = zext i1 %cmp to i32, !dbg !6900
  store i32 1, i32* %tmp, align 4, !dbg !6900
  %2 = load i32, i32* %tmp, align 4, !dbg !6900
  br label %do.body2, !dbg !6902

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6903

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6904

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6906, metadata !DIExpression()), !dbg !6909
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6910, metadata !DIExpression()), !dbg !6909
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6909
  %conv8 = zext i1 %cmp7 to i32, !dbg !6909
  store i32 1, i32* %tmp9, align 4, !dbg !6909
  %3 = load i32, i32* %tmp9, align 4, !dbg !6909
  %call = call i64 @arch_local_irq_save() #10, !dbg !6911
  store i64 %call, i64* %flags, align 8, !dbg !6911
  br label %do.end, !dbg !6911

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !6904

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !6903

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6912, !srcloc !6913
  br label %do.body12, !dbg !6912

do.body12:                                        ; preds = %do.body11
  %4 = load %struct.dma_buf_poll_cb_t*, %struct.dma_buf_poll_cb_t** %dcb, align 8, !dbg !6914
  %poll = getelementptr inbounds %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t* %4, i32 0, i32 1, !dbg !6914
  %5 = load %struct.wait_queue_head*, %struct.wait_queue_head** %poll, align 8, !dbg !6914
  %lock = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %5, i32 0, i32 0, !dbg !6914
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6915
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !6916
  %rlock.i = bitcast %union.anon.2* %7 to %struct.raw_spinlock*, !dbg !6916
  br label %do.end14, !dbg !6914

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !6912

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !6903

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6902

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6897

do.end18:                                         ; preds = %do.end17
  %8 = load %struct.dma_buf_poll_cb_t*, %struct.dma_buf_poll_cb_t** %dcb, align 8, !dbg !6917
  %poll19 = getelementptr inbounds %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t* %8, i32 0, i32 1, !dbg !6917
  %9 = load %struct.wait_queue_head*, %struct.wait_queue_head** %poll19, align 8, !dbg !6917
  %10 = load %struct.dma_buf_poll_cb_t*, %struct.dma_buf_poll_cb_t** %dcb, align 8, !dbg !6917
  %active = getelementptr inbounds %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t* %10, i32 0, i32 2, !dbg !6917
  %11 = load i32, i32* %active, align 8, !dbg !6917
  %conv20 = zext i32 %11 to i64, !dbg !6917
  %12 = inttoptr i64 %conv20 to i8*, !dbg !6917
  call void @__wake_up_locked_key(%struct.wait_queue_head* %9, i32 3, i8* %12) #10, !dbg !6917
  %13 = load %struct.dma_buf_poll_cb_t*, %struct.dma_buf_poll_cb_t** %dcb, align 8, !dbg !6918
  %active21 = getelementptr inbounds %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t* %13, i32 0, i32 2, !dbg !6919
  store i32 0, i32* %active21, align 8, !dbg !6920
  %14 = load %struct.dma_buf_poll_cb_t*, %struct.dma_buf_poll_cb_t** %dcb, align 8, !dbg !6921
  %poll22 = getelementptr inbounds %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t* %14, i32 0, i32 1, !dbg !6922
  %15 = load %struct.wait_queue_head*, %struct.wait_queue_head** %poll22, align 8, !dbg !6922
  %lock23 = getelementptr inbounds %struct.wait_queue_head, %struct.wait_queue_head* %15, i32 0, i32 0, !dbg !6923
  %16 = load i64, i64* %flags, align 8, !dbg !6924
  store %struct.spinlock* %lock23, %struct.spinlock** %lock.addr.i24, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !393, metadata !6925, metadata !DIExpression()) #9, !dbg !6928
  call void @llvm.dbg.declare(metadata !393, metadata !6929, metadata !DIExpression()) #9, !dbg !6928
  store i32 1, i32* %tmp.i, align 4, !dbg !6928
  %17 = load i32, i32* %tmp.i, align 4, !dbg !6928
  call void @llvm.dbg.declare(metadata !393, metadata !6930, metadata !DIExpression()) #9, !dbg !6935
  call void @llvm.dbg.declare(metadata !393, metadata !6936, metadata !DIExpression()) #9, !dbg !6935
  store i32 1, i32* %tmp8.i, align 4, !dbg !6935
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !6935
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !6937
  call void @arch_local_irq_restore(i64 %19) #12, !dbg !6937
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6938, !srcloc !6940
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i24, align 8, !dbg !6941
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !6941
  %rlock.i25 = bitcast %union.anon.2* %21 to %struct.raw_spinlock*, !dbg !6941
  ret void, !dbg !6943
}

; Function Attrs: noredzone
declare dso_local i32 @dma_fence_add_callback(%struct.dma_fence*, %struct.dma_fence_cb*, void (%struct.dma_fence*, %struct.dma_fence_cb*)*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_fence_put(%struct.dma_fence* %fence) #0 !dbg !6944 {
entry:
  %fence.addr = alloca %struct.dma_fence*, align 8
  store %struct.dma_fence* %fence, %struct.dma_fence** %fence.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_fence** %fence.addr, metadata !6945, metadata !DIExpression()), !dbg !6946
  %0 = load %struct.dma_fence*, %struct.dma_fence** %fence.addr, align 8, !dbg !6947
  %tobool = icmp ne %struct.dma_fence* %0, null, !dbg !6947
  br i1 %tobool, label %if.then, label %if.end, !dbg !6949

if.then:                                          ; preds = %entry
  %1 = load %struct.dma_fence*, %struct.dma_fence** %fence.addr, align 8, !dbg !6950
  %refcount = getelementptr inbounds %struct.dma_fence, %struct.dma_fence* %1, i32 0, i32 6, !dbg !6951
  %call = call i32 @kref_put(%struct.kref* %refcount, void (%struct.kref*)* @dma_fence_release) #10, !dbg !6952
  br label %if.end, !dbg !6952

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6953
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__rcu_read_lock() #0 !dbg !6954 {
entry:
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6955, !srcloc !6956
  ret void, !dbg !6957
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__read_seqcount_t_retry(%struct.seqcount* %s, i32 %start) #0 !dbg !6958 {
entry:
  %s.addr = alloca %struct.seqcount*, align 8
  %start.addr = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.seqcount* %s, %struct.seqcount** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seqcount** %s.addr, metadata !6959, metadata !DIExpression()), !dbg !6960
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !6961, metadata !DIExpression()), !dbg !6962
  call void @kcsan_atomic_next(i32 0) #10, !dbg !6963
  br label %do.body, !dbg !6964

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6966

do.end:                                           ; preds = %do.body
  %0 = load %struct.seqcount*, %struct.seqcount** %s.addr, align 8, !dbg !6964
  %sequence = getelementptr inbounds %struct.seqcount, %struct.seqcount* %0, i32 0, i32 0, !dbg !6964
  %1 = load volatile i32, i32* %sequence, align 4, !dbg !6964
  store i32 %1, i32* %tmp, align 4, !dbg !6966
  %2 = load i32, i32* %tmp, align 4, !dbg !6964
  %3 = load i32, i32* %start.addr, align 4, !dbg !6968
  %cmp = icmp ne i32 %2, %3, !dbg !6968
  %lnot = xor i1 %cmp, true, !dbg !6968
  %lnot1 = xor i1 %lnot, true, !dbg !6968
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6968
  %conv = sext i32 %lnot.ext to i64, !dbg !6968
  %conv2 = trunc i64 %conv to i32, !dbg !6968
  ret i32 %conv2, !dbg !6969
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__rcu_read_unlock() #0 !dbg !6970 {
entry:
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !6971, !srcloc !6972
  br label %do.body, !dbg !6973

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6974

do.end:                                           ; preds = %do.body
  ret void, !dbg !6976
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !6977 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6979, metadata !DIExpression()), !dbg !6981
  %0 = load i64, i64* %__edi, align 8, !dbg !6981
  store i64 %0, i64* %__edi, align 8, !dbg !6981
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6982, metadata !DIExpression()), !dbg !6981
  %1 = load i64, i64* %__esi, align 8, !dbg !6981
  store i64 %1, i64* %__esi, align 8, !dbg !6981
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6983, metadata !DIExpression()), !dbg !6981
  %2 = load i64, i64* %__edx, align 8, !dbg !6981
  store i64 %2, i64* %__edx, align 8, !dbg !6981
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6984, metadata !DIExpression()), !dbg !6981
  %3 = load i64, i64* %__ecx, align 8, !dbg !6981
  store i64 %3, i64* %__ecx, align 8, !dbg !6981
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6985, metadata !DIExpression()), !dbg !6981
  %4 = load i64, i64* %__eax, align 8, !dbg !6981
  store i64 %4, i64* %__eax, align 8, !dbg !6981
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !6981
  %6 = call i64 @llvm.read_register.i64(metadata !4134), !dbg !6981
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #9, !dbg !6981, !srcloc !6986
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !6981
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !6981
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6981
  call void @llvm.write_register.i64(metadata !4134, i64 %asmresult1), !dbg !6981
  ret void, !dbg !6987
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #8

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #9

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #0 !dbg !6988 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6989, metadata !DIExpression()), !dbg !6991
  %0 = load i64, i64* %__edi, align 8, !dbg !6991
  store i64 %0, i64* %__edi, align 8, !dbg !6991
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6992, metadata !DIExpression()), !dbg !6991
  %1 = load i64, i64* %__esi, align 8, !dbg !6991
  store i64 %1, i64* %__esi, align 8, !dbg !6991
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6993, metadata !DIExpression()), !dbg !6991
  %2 = load i64, i64* %__edx, align 8, !dbg !6991
  store i64 %2, i64* %__edx, align 8, !dbg !6991
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6994, metadata !DIExpression()), !dbg !6991
  %3 = load i64, i64* %__ecx, align 8, !dbg !6991
  store i64 %3, i64* %__ecx, align 8, !dbg !6991
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6995, metadata !DIExpression()), !dbg !6991
  %4 = load i64, i64* %__eax, align 8, !dbg !6991
  store i64 %4, i64* %__eax, align 8, !dbg !6991
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !6991
  %6 = call i64 @llvm.read_register.i64(metadata !4134), !dbg !6991
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #9, !dbg !6991, !srcloc !6996
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !6991
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !6991
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6991
  call void @llvm.write_register.i64(metadata !4134, i64 %asmresult1), !dbg !6991
  ret void, !dbg !6997
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kref_get_unless_zero(%struct.kref* %kref) #0 !dbg !6998 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !7002, metadata !DIExpression()), !dbg !7003
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !7004
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !7005
  %call = call zeroext i1 @refcount_inc_not_zero(%struct.refcount_struct* %refcount) #10, !dbg !7006
  %conv = zext i1 %call to i32, !dbg !7006
  ret i32 %conv, !dbg !7007
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @refcount_inc_not_zero(%struct.refcount_struct* %r) #0 !dbg !7008 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !7012, metadata !DIExpression()), !dbg !7013
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7014
  %call = call zeroext i1 @__refcount_inc_not_zero(%struct.refcount_struct* %0, i32* null) #10, !dbg !7015
  ret i1 %call, !dbg !7016
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_inc_not_zero(%struct.refcount_struct* %r, i32* %oldp) #0 !dbg !7017 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !7020, metadata !DIExpression()), !dbg !7021
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !7022, metadata !DIExpression()), !dbg !7023
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7024
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !7025
  %call = call zeroext i1 @__refcount_add_not_zero(i32 1, %struct.refcount_struct* %0, i32* %1) #10, !dbg !7026
  ret i1 %call, !dbg !7027
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_add_not_zero(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #0 !dbg !7028 {
entry:
  %v.addr.i5.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i5.i, metadata !7031, metadata !DIExpression()), !dbg !7037
  %old.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %old.addr.i.i, metadata !7041, metadata !DIExpression()), !dbg !7042
  %new.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i.i, metadata !7043, metadata !DIExpression()), !dbg !7044
  %success.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %success.i.i, metadata !7045, metadata !DIExpression()), !dbg !7047
  %_old.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %_old.i.i, metadata !7048, metadata !DIExpression()), !dbg !7047
  %__old.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__old.i.i, metadata !7049, metadata !DIExpression()), !dbg !7047
  %__new.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__new.i.i, metadata !7050, metadata !DIExpression()), !dbg !7047
  %__ptr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %__ptr.i.i, metadata !7051, metadata !DIExpression()), !dbg !7047
  %tmp.i.i = alloca i64, align 8
  %v.addr.i1.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i1.i, metadata !5763, metadata !DIExpression()), !dbg !7052
  %size.addr.i2.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i2.i, metadata !5773, metadata !DIExpression()), !dbg !7054
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5763, metadata !DIExpression()), !dbg !7055
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5773, metadata !DIExpression()), !dbg !7057
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7058, metadata !DIExpression()), !dbg !7059
  %old.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %old.addr.i, metadata !7060, metadata !DIExpression()), !dbg !7061
  %new.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i, metadata !7062, metadata !DIExpression()), !dbg !7063
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !7064, metadata !DIExpression()), !dbg !7065
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !7066, metadata !DIExpression()), !dbg !7067
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !7068, metadata !DIExpression()), !dbg !7069
  call void @llvm.dbg.declare(metadata i32* %old, metadata !7070, metadata !DIExpression()), !dbg !7071
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7072
  %call = call i32 @refcount_read(%struct.refcount_struct* %0) #10, !dbg !7073
  store i32 %call, i32* %old, align 4, !dbg !7071
  br label %do.body, !dbg !7074

do.body:                                          ; preds = %atomic_try_cmpxchg_relaxed.exit, %entry
  %1 = load i32, i32* %old, align 4, !dbg !7075
  %tobool = icmp ne i32 %1, 0, !dbg !7075
  br i1 %tobool, label %if.end, label %if.then, !dbg !7078

if.then:                                          ; preds = %do.body
  br label %do.end, !dbg !7079

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !7080

do.cond:                                          ; preds = %if.end
  %2 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7081
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %2, i32 0, i32 0, !dbg !7082
  %3 = load i32, i32* %old, align 4, !dbg !7083
  %4 = load i32, i32* %i.addr, align 4, !dbg !7084
  %add = add i32 %3, %4, !dbg !7085
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  store i32* %old, i32** %old.addr.i, align 8
  store i32 %add, i32* %new.addr.i, align 4
  %5 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7086
  %6 = bitcast %struct.atomic_t* %5 to i8*, !dbg !7086
  store i8* %6, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %7 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7087
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !7088
  %conv.i.i = trunc i64 %8 to i32, !dbg !7088
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %7, i32 %conv.i.i) #12, !dbg !7089
  %9 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7090
  %10 = load i64, i64* %size.addr.i.i, align 8, !dbg !7090
  call void @kcsan_check_access(i8* %9, i64 %10, i32 7) #12, !dbg !7090
  %11 = load i32*, i32** %old.addr.i, align 8, !dbg !7091
  %12 = bitcast i32* %11 to i8*, !dbg !7091
  store i8* %12, i8** %v.addr.i1.i, align 8
  store i64 4, i64* %size.addr.i2.i, align 8
  %13 = load i8*, i8** %v.addr.i1.i, align 8, !dbg !7092
  %14 = load i64, i64* %size.addr.i2.i, align 8, !dbg !7093
  %conv.i3.i = trunc i64 %14 to i32, !dbg !7093
  %call.i4.i = call zeroext i1 @kasan_check_write(i8* %13, i32 %conv.i3.i) #12, !dbg !7094
  %15 = load i8*, i8** %v.addr.i1.i, align 8, !dbg !7095
  %16 = load i64, i64* %size.addr.i2.i, align 8, !dbg !7095
  call void @kcsan_check_access(i8* %15, i64 %16, i32 7) #12, !dbg !7095
  %17 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7096
  %18 = load i32*, i32** %old.addr.i, align 8, !dbg !7097
  %19 = load i32, i32* %new.addr.i, align 4, !dbg !7098
  store %struct.atomic_t* %17, %struct.atomic_t** %v.addr.i5.i, align 8
  store i32* %18, i32** %old.addr.i.i, align 8
  store i32 %19, i32* %new.addr.i.i, align 4
  %20 = load i32*, i32** %old.addr.i.i, align 8, !dbg !7047
  store i32* %20, i32** %_old.i.i, align 8, !dbg !7047
  %21 = load i32*, i32** %_old.i.i, align 8, !dbg !7047
  %22 = load i32, i32* %21, align 4, !dbg !7047
  store i32 %22, i32* %__old.i.i, align 4, !dbg !7047
  %23 = load i32, i32* %new.addr.i.i, align 4, !dbg !7047
  store i32 %23, i32* %__new.i.i, align 4, !dbg !7047
  %24 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i5.i, align 8, !dbg !7047
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %24, i32 0, i32 0, !dbg !7047
  store i32* %counter.i.i, i32** %__ptr.i.i, align 8, !dbg !7047
  %25 = load i32*, i32** %__ptr.i.i, align 8, !dbg !7047
  %26 = load i32, i32* %__old.i.i, align 4, !dbg !7047
  %27 = load i32, i32* %__new.i.i, align 4, !dbg !7047
  %28 = call { i8, i32 } asm sideeffect "cmpxchgl $3, $1\0A\09/* output condition code z*/\0A", "={@ccz},=*m,={ax},r,*m,2,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %25, i32 %27, i32* %25, i32 %26) #9, !dbg !7047, !srcloc !7099
  %asmresult.i.i = extractvalue { i8, i32 } %28, 0, !dbg !7047
  %asmresult1.i.i = extractvalue { i8, i32 } %28, 1, !dbg !7047
  store i8 %asmresult.i.i, i8* %success.i.i, align 1, !dbg !7047
  store i32 %asmresult1.i.i, i32* %__old.i.i, align 4, !dbg !7047
  %29 = load i8, i8* %success.i.i, align 1, !dbg !7100
  %tobool.i.i = trunc i8 %29 to i1, !dbg !7100
  %lnot.i.i = xor i1 %tobool.i.i, true, !dbg !7100
  %lnot3.i.i = xor i1 %tobool.i.i, true, !dbg !7100
  %lnot.ext.i.i = zext i1 %lnot3.i.i to i32, !dbg !7100
  %conv.i6.i = sext i32 %lnot.ext.i.i to i64, !dbg !7100
  br i1 %lnot3.i.i, label %if.then.i.i, label %atomic_try_cmpxchg_relaxed.exit, !dbg !7047

if.then.i.i:                                      ; preds = %do.cond
  %30 = load i32, i32* %__old.i.i, align 4, !dbg !7100
  %31 = load i32*, i32** %_old.i.i, align 8, !dbg !7100
  store i32 %30, i32* %31, align 4, !dbg !7100
  br label %atomic_try_cmpxchg_relaxed.exit, !dbg !7100

atomic_try_cmpxchg_relaxed.exit:                  ; preds = %do.cond, %if.then.i.i
  %32 = load i8, i8* %success.i.i, align 1, !dbg !7047
  %tobool5.i.i = trunc i8 %32 to i1, !dbg !7047
  %lnot6.i.i = xor i1 %tobool5.i.i, true, !dbg !7047
  %lnot.ext9.i.i = zext i1 %tobool5.i.i to i32, !dbg !7047
  %conv10.i.i = sext i32 %lnot.ext9.i.i to i64, !dbg !7047
  store i64 %conv10.i.i, i64* %tmp.i.i, align 8, !dbg !7100
  %33 = load i64, i64* %tmp.i.i, align 8, !dbg !7047
  %tobool11.i.i = icmp ne i64 %33, 0, !dbg !7102
  %lnot = xor i1 %tobool11.i.i, true, !dbg !7103
  br i1 %lnot, label %do.body, label %do.end, !dbg !7080, !llvm.loop !7104

do.end:                                           ; preds = %atomic_try_cmpxchg_relaxed.exit, %if.then
  %34 = load i32*, i32** %oldp.addr, align 8, !dbg !7106
  %tobool2 = icmp ne i32* %34, null, !dbg !7106
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !7108

if.then3:                                         ; preds = %do.end
  %35 = load i32, i32* %old, align 4, !dbg !7109
  %36 = load i32*, i32** %oldp.addr, align 8, !dbg !7110
  store i32 %35, i32* %36, align 4, !dbg !7111
  br label %if.end4, !dbg !7112

if.end4:                                          ; preds = %if.then3, %do.end
  %37 = load i32, i32* %old, align 4, !dbg !7113
  %cmp = icmp slt i32 %37, 0, !dbg !7113
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !7113

lor.rhs:                                          ; preds = %if.end4
  %38 = load i32, i32* %old, align 4, !dbg !7113
  %39 = load i32, i32* %i.addr, align 4, !dbg !7113
  %add5 = add i32 %38, %39, !dbg !7113
  %cmp6 = icmp slt i32 %add5, 0, !dbg !7113
  br label %lor.end, !dbg !7113

lor.end:                                          ; preds = %lor.rhs, %if.end4
  %40 = phi i1 [ true, %if.end4 ], [ %cmp6, %lor.rhs ]
  %lnot7 = xor i1 %40, true, !dbg !7113
  %lnot8 = xor i1 %lnot7, true, !dbg !7113
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !7113
  %conv = sext i32 %lnot.ext to i64, !dbg !7113
  %tobool9 = icmp ne i64 %conv, 0, !dbg !7113
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !7115

if.then10:                                        ; preds = %lor.end
  %41 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7116
  call void @refcount_warn_saturate(%struct.refcount_struct* %41, i32 0) #10, !dbg !7117
  br label %if.end11, !dbg !7117

if.end11:                                         ; preds = %if.then10, %lor.end
  %42 = load i32, i32* %old, align 4, !dbg !7118
  %tobool12 = icmp ne i32 %42, 0, !dbg !7118
  ret i1 %tobool12, !dbg !7119
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @refcount_read(%struct.refcount_struct* %r) #0 !dbg !7120 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7125, metadata !DIExpression()), !dbg !7131
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6720, metadata !DIExpression()), !dbg !7135
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6736, metadata !DIExpression()), !dbg !7137
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7138, metadata !DIExpression()), !dbg !7139
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !7140, metadata !DIExpression()), !dbg !7141
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7142
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %0, i32 0, i32 0, !dbg !7143
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7144
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !7144
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7145
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !7146
  %conv.i.i = trunc i64 %4 to i32, !dbg !7146
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i.i) #12, !dbg !7147
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7148
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !7148
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #12, !dbg !7148
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7149
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7150
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !7150
  %9 = load volatile i32, i32* %counter.i.i, align 4, !dbg !7150
  ret i32 %9, !dbg !7151
}

; Function Attrs: noredzone
declare dso_local void @refcount_warn_saturate(%struct.refcount_struct*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !7152 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7156, metadata !DIExpression()), !dbg !7157
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7158, metadata !DIExpression()), !dbg !7159
  ret i1 true, !dbg !7160
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !7161 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7164, metadata !DIExpression()), !dbg !7165
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7166, metadata !DIExpression()), !dbg !7167
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7168, metadata !DIExpression()), !dbg !7169
  ret void, !dbg !7170
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !7171 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7172, metadata !DIExpression()), !dbg !7173
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7174, metadata !DIExpression()), !dbg !7175
  ret i1 true, !dbg !7176
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !7177 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !7180, metadata !DIExpression()), !dbg !7181
  %call = call i64 @arch_local_save_flags() #10, !dbg !7182
  store i64 %call, i64* %f, align 8, !dbg !7183
  call void @arch_local_irq_disable() #10, !dbg !7184
  %0 = load i64, i64* %f, align 8, !dbg !7185
  ret i64 %0, !dbg !7186
}

; Function Attrs: noredzone
declare dso_local void @__wake_up_locked_key(%struct.wait_queue_head*, i32, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !7187 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !7188, metadata !DIExpression()), !dbg !7190
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7191, metadata !DIExpression()), !dbg !7190
  %0 = load i64, i64* %__edi, align 8, !dbg !7190
  store i64 %0, i64* %__edi, align 8, !dbg !7190
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7192, metadata !DIExpression()), !dbg !7190
  %1 = load i64, i64* %__esi, align 8, !dbg !7190
  store i64 %1, i64* %__esi, align 8, !dbg !7190
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7193, metadata !DIExpression()), !dbg !7190
  %2 = load i64, i64* %__edx, align 8, !dbg !7190
  store i64 %2, i64* %__edx, align 8, !dbg !7190
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7194, metadata !DIExpression()), !dbg !7190
  %3 = load i64, i64* %__ecx, align 8, !dbg !7190
  store i64 %3, i64* %__ecx, align 8, !dbg !7190
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7195, metadata !DIExpression()), !dbg !7190
  %4 = load i64, i64* %__eax, align 8, !dbg !7190
  store i64 %4, i64* %__eax, align 8, !dbg !7190
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !7190
  %6 = call i64 @llvm.read_register.i64(metadata !4134), !dbg !7196
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #9, !dbg !7196, !srcloc !7199
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7196
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7196
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7196
  call void @llvm.write_register.i64(metadata !4134, i64 %asmresult1), !dbg !7196
  %8 = load i64, i64* %__eax, align 8, !dbg !7196
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !7200, metadata !DIExpression()), !dbg !7202
  store i64 -1, i64* %__mask, align 8, !dbg !7202
  %9 = load i64, i64* %__mask, align 8, !dbg !7202
  store i64 %9, i64* %tmp, align 8, !dbg !7202
  %10 = load i64, i64* %tmp, align 8, !dbg !7202
  %and = and i64 %8, %10, !dbg !7196
  store i64 %and, i64* %__ret, align 8, !dbg !7196
  %11 = load i64, i64* %__ret, align 8, !dbg !7190
  store i64 %11, i64* %tmp2, align 8, !dbg !7203
  %12 = load i64, i64* %tmp2, align 8, !dbg !7190
  ret i64 %12, !dbg !7204
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !7205 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !7208, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7210, metadata !DIExpression()), !dbg !7212
  %0 = load i64, i64* %__edi, align 8, !dbg !7212
  store i64 %0, i64* %__edi, align 8, !dbg !7212
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7213, metadata !DIExpression()), !dbg !7212
  %1 = load i64, i64* %__esi, align 8, !dbg !7212
  store i64 %1, i64* %__esi, align 8, !dbg !7212
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7214, metadata !DIExpression()), !dbg !7212
  %2 = load i64, i64* %__edx, align 8, !dbg !7212
  store i64 %2, i64* %__edx, align 8, !dbg !7212
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7215, metadata !DIExpression()), !dbg !7212
  %3 = load i64, i64* %__ecx, align 8, !dbg !7212
  store i64 %3, i64* %__ecx, align 8, !dbg !7212
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7216, metadata !DIExpression()), !dbg !7212
  %4 = load i64, i64* %__eax, align 8, !dbg !7212
  store i64 %4, i64* %__eax, align 8, !dbg !7212
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !7212
  %6 = call i64 @llvm.read_register.i64(metadata !4134), !dbg !7212
  %7 = load i64, i64* %f.addr, align 8, !dbg !7212
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #9, !dbg !7212, !srcloc !7217
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !7212
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !7212
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7212
  call void @llvm.write_register.i64(metadata !4134, i64 %asmresult1), !dbg !7212
  ret void, !dbg !7218
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kref_put(%struct.kref* %kref, void (%struct.kref*)* %release) #0 !dbg !7219 {
entry:
  %retval = alloca i32, align 4
  %kref.addr = alloca %struct.kref*, align 8
  %release.addr = alloca void (%struct.kref*)*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !7225, metadata !DIExpression()), !dbg !7226
  store void (%struct.kref*)* %release, void (%struct.kref*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.kref*)** %release.addr, metadata !7227, metadata !DIExpression()), !dbg !7228
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !7229
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !7231
  %call = call zeroext i1 @refcount_dec_and_test(%struct.refcount_struct* %refcount) #10, !dbg !7232
  br i1 %call, label %if.then, label %if.end, !dbg !7233

if.then:                                          ; preds = %entry
  %1 = load void (%struct.kref*)*, void (%struct.kref*)** %release.addr, align 8, !dbg !7234
  %2 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !7236
  call void %1(%struct.kref* %2) #10, !dbg !7234
  store i32 1, i32* %retval, align 4, !dbg !7237
  br label %return, !dbg !7237

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7238
  br label %return, !dbg !7238

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !7239
  ret i32 %3, !dbg !7239
}

; Function Attrs: noredzone
declare dso_local void @dma_fence_release(%struct.kref*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @refcount_dec_and_test(%struct.refcount_struct* %r) #0 !dbg !7240 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !7241, metadata !DIExpression()), !dbg !7242
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7243
  %call = call zeroext i1 @__refcount_dec_and_test(%struct.refcount_struct* %0, i32* null) #10, !dbg !7244
  ret i1 %call, !dbg !7245
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_dec_and_test(%struct.refcount_struct* %r, i32* %oldp) #0 !dbg !7246 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !7247, metadata !DIExpression()), !dbg !7248
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !7249, metadata !DIExpression()), !dbg !7250
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7251
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !7252
  %call = call zeroext i1 @__refcount_sub_and_test(i32 1, %struct.refcount_struct* %0, i32* %1) #10, !dbg !7253
  ret i1 %call, !dbg !7254
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_sub_and_test(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #0 !dbg !7255 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !7256, metadata !DIExpression()), !dbg !7260
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7264, metadata !DIExpression()), !dbg !7265
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !7266, metadata !DIExpression()), !dbg !7268
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5763, metadata !DIExpression()), !dbg !7269
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5773, metadata !DIExpression()), !dbg !7271
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !7272, metadata !DIExpression()), !dbg !7273
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7274, metadata !DIExpression()), !dbg !7275
  %retval = alloca i1, align 1
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !7276, metadata !DIExpression()), !dbg !7277
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !7278, metadata !DIExpression()), !dbg !7279
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !7280, metadata !DIExpression()), !dbg !7281
  call void @llvm.dbg.declare(metadata i32* %old, metadata !7282, metadata !DIExpression()), !dbg !7283
  %0 = load i32, i32* %i.addr, align 4, !dbg !7284
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7285
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !7286
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7287
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !7287
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7288
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !7289
  %conv.i.i = trunc i64 %5 to i32, !dbg !7289
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #12, !dbg !7290
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7291
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !7291
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #12, !dbg !7291
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !7292
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7293
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !7268
  %sub.i.i = sub i32 0, %10, !dbg !7268
  store i32 %sub.i.i, i32* %__ret.i.i, align 4, !dbg !7268
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !7268
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7268
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !7268
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #9, !dbg !7268, !srcloc !7294
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !7268
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !7268
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !7268
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !7268
  store i32 %15, i32* %old, align 4, !dbg !7283
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !7295
  %tobool = icmp ne i32* %16, null, !dbg !7295
  br i1 %tobool, label %if.then, label %if.end, !dbg !7297

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !7298
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !7299
  store i32 %17, i32* %18, align 4, !dbg !7300
  br label %if.end, !dbg !7301

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !7302
  %20 = load i32, i32* %i.addr, align 4, !dbg !7304
  %cmp = icmp eq i32 %19, %20, !dbg !7305
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !7306

if.then1:                                         ; preds = %if.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !7307, !srcloc !7309
  store i1 true, i1* %retval, align 1, !dbg !7310
  br label %return, !dbg !7310

if.end2:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !7311
  %cmp3 = icmp slt i32 %21, 0, !dbg !7311
  br i1 %cmp3, label %lor.end, label %lor.rhs, !dbg !7311

lor.rhs:                                          ; preds = %if.end2
  %22 = load i32, i32* %old, align 4, !dbg !7311
  %23 = load i32, i32* %i.addr, align 4, !dbg !7311
  %sub = sub i32 %22, %23, !dbg !7311
  %cmp4 = icmp slt i32 %sub, 0, !dbg !7311
  br label %lor.end, !dbg !7311

lor.end:                                          ; preds = %lor.rhs, %if.end2
  %24 = phi i1 [ true, %if.end2 ], [ %cmp4, %lor.rhs ]
  %lnot = xor i1 %24, true, !dbg !7311
  %lnot5 = xor i1 %lnot, true, !dbg !7311
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !7311
  %conv = sext i32 %lnot.ext to i64, !dbg !7311
  %tobool6 = icmp ne i64 %conv, 0, !dbg !7311
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7313

if.then7:                                         ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !7314
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 3) #10, !dbg !7315
  br label %if.end8, !dbg !7315

if.end8:                                          ; preds = %if.then7, %lor.end
  store i1 false, i1* %retval, align 1, !dbg !7316
  br label %return, !dbg !7316

return:                                           ; preds = %if.end8, %if.then1
  %26 = load i1, i1* %retval, align 1, !dbg !7317
  ret i1 %26, !dbg !7317
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dma_buf_set_name(%struct.dma_buf* %dmabuf, i8* %buf) #0 !dbg !7318 {
entry:
  %lock.addr.i11 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i11, metadata !6712, metadata !DIExpression()), !dbg !7321
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6716, metadata !DIExpression()), !dbg !7323
  %retval = alloca i64, align 8
  %dmabuf.addr = alloca %struct.dma_buf*, align 8
  %buf.addr = alloca i8*, align 8
  %name = alloca i8*, align 8
  %ret = alloca i64, align 8
  store %struct.dma_buf* %dmabuf, %struct.dma_buf** %dmabuf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf.addr, metadata !7325, metadata !DIExpression()), !dbg !7326
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7327, metadata !DIExpression()), !dbg !7328
  call void @llvm.dbg.declare(metadata i8** %name, metadata !7329, metadata !DIExpression()), !dbg !7330
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !7331
  %call = call i8* @strndup_user(i8* %0, i64 32) #10, !dbg !7332
  store i8* %call, i8** %name, align 8, !dbg !7330
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !7333, metadata !DIExpression()), !dbg !7334
  store i64 0, i64* %ret, align 8, !dbg !7334
  %1 = load i8*, i8** %name, align 8, !dbg !7335
  %call1 = call zeroext i1 @IS_ERR(i8* %1) #10, !dbg !7337
  br i1 %call1, label %if.then, label %if.end, !dbg !7338

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %name, align 8, !dbg !7339
  %call2 = call i64 @PTR_ERR(i8* %2) #10, !dbg !7340
  store i64 %call2, i64* %retval, align 8, !dbg !7341
  br label %return, !dbg !7341

if.end:                                           ; preds = %entry
  %3 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !7342
  %resv = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %3, i32 0, i32 13, !dbg !7343
  %4 = load %struct.dma_resv*, %struct.dma_resv** %resv, align 8, !dbg !7343
  %call3 = call i32 @dma_resv_lock(%struct.dma_resv* %4, %struct.ww_acquire_ctx* null) #10, !dbg !7344
  %5 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !7345
  %attachments = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %5, i32 0, i32 2, !dbg !7347
  %call4 = call i32 @list_empty(%struct.list_head* %attachments) #10, !dbg !7348
  %tobool = icmp ne i32 %call4, 0, !dbg !7348
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !7349

if.then5:                                         ; preds = %if.end
  store i64 -16, i64* %ret, align 8, !dbg !7350
  %6 = load i8*, i8** %name, align 8, !dbg !7352
  call void @kfree(i8* %6) #10, !dbg !7353
  br label %out_unlock, !dbg !7354

if.end6:                                          ; preds = %if.end
  %7 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !7355
  %name_lock = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %7, i32 0, i32 9, !dbg !7356
  store %struct.spinlock* %name_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !7357, !srcloc !6774
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7358
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !7358
  %rlock.i = bitcast %union.anon.2* %9 to %struct.raw_spinlock*, !dbg !7358
  %10 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !7359
  %name7 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %10, i32 0, i32 8, !dbg !7360
  %11 = load i8*, i8** %name7, align 8, !dbg !7360
  call void @kfree(i8* %11) #10, !dbg !7361
  %12 = load i8*, i8** %name, align 8, !dbg !7362
  %13 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !7363
  %name8 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %13, i32 0, i32 8, !dbg !7364
  store i8* %12, i8** %name8, align 8, !dbg !7365
  %14 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !7366
  %name_lock9 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %14, i32 0, i32 9, !dbg !7367
  store %struct.spinlock* %name_lock9, %struct.spinlock** %lock.addr.i11, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !7368, !srcloc !6789
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i11, align 8, !dbg !7369
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !7369
  %rlock.i12 = bitcast %union.anon.2* %16 to %struct.raw_spinlock*, !dbg !7369
  br label %out_unlock, !dbg !7370

out_unlock:                                       ; preds = %if.end6, %if.then5
  call void @llvm.dbg.label(metadata !7371), !dbg !7372
  %17 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf.addr, align 8, !dbg !7373
  %resv10 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %17, i32 0, i32 13, !dbg !7374
  %18 = load %struct.dma_resv*, %struct.dma_resv** %resv10, align 8, !dbg !7374
  call void @dma_resv_unlock(%struct.dma_resv* %18) #10, !dbg !7375
  %19 = load i64, i64* %ret, align 8, !dbg !7376
  store i64 %19, i64* %retval, align 8, !dbg !7377
  br label %return, !dbg !7377

return:                                           ; preds = %out_unlock, %if.then
  %20 = load i64, i64* %retval, align 8, !dbg !7378
  ret i64 %20, !dbg !7378
}

; Function Attrs: noredzone
declare dso_local i64 @_copy_from_user(i8*, i8*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #0 !dbg !7379 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7382, metadata !DIExpression()), !dbg !7383
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !7384, metadata !DIExpression()), !dbg !7385
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7386, metadata !DIExpression()), !dbg !7388
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !7388
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !7389
  %tobool = icmp ne i32 %0, 0, !dbg !7389
  %lnot = xor i1 %tobool, true, !dbg !7389
  %lnot1 = xor i1 %lnot, true, !dbg !7389
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7389
  %conv = sext i32 %lnot.ext to i64, !dbg !7389
  %tobool2 = icmp ne i64 %conv, 0, !dbg !7389
  br i1 %tobool2, label %if.then, label %if.end, !dbg !7388

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7389

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !7391

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !7393

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !7391
  %2 = load i64, i64* %count.addr, align 8, !dbg !7391
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0), i32 %1, i64 %2) #10, !dbg !7391
  br label %do.body4, !dbg !7391

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !7395

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !7397

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !7395

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0), i32 134, i32 2313, i64 12) #9, !dbg !7399, !srcloc !7401
  br label %do.end8, !dbg !7399

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 38) #9, !dbg !7402, !srcloc !7404
  br label %do.body9, !dbg !7395

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !7405

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !7395

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !7391

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !7407

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !7391

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !7391

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !7388
  %tobool15 = icmp ne i32 %3, 0, !dbg !7388
  %lnot16 = xor i1 %tobool15, true, !dbg !7388
  %lnot18 = xor i1 %lnot16, true, !dbg !7388
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !7388
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !7388
  store i64 %conv20, i64* %tmp, align 8, !dbg !7389
  %4 = load i64, i64* %tmp, align 8, !dbg !7388
  ret void, !dbg !7409
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #3

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #0 !dbg !7410 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7413, metadata !DIExpression()), !dbg !7414
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !7415, metadata !DIExpression()), !dbg !7416
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !7417, metadata !DIExpression()), !dbg !7418
  ret void, !dbg !7419
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #3

; Function Attrs: noredzone
declare dso_local i8* @strndup_user(i8*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !7420 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7425, metadata !DIExpression()), !dbg !7426
  br label %do.body, !dbg !7427

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7429

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7427
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !7427
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7427
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !7429
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !7427
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7431
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !7432
  %conv = zext i1 %cmp to i32, !dbg !7432
  ret i32 %conv, !dbg !7433
}

; Function Attrs: noredzone
declare dso_local void @seq_printf(%struct.seq_file*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_atomic64_read(%struct.atomic64_t* %v) #0 !dbg !7434 {
entry:
  %v.addr = alloca %struct.atomic64_t*, align 8
  store %struct.atomic64_t* %v, %struct.atomic64_t** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr, metadata !7435, metadata !DIExpression()), !dbg !7436
  %0 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr, align 8, !dbg !7437
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %0, i32 0, i32 0, !dbg !7437
  %1 = load volatile i64, i64* %counter, align 8, !dbg !7437
  ret i64 %1, !dbg !7438
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !7439 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7442, metadata !DIExpression()), !dbg !7443
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7444, metadata !DIExpression()), !dbg !7445
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7446, metadata !DIExpression()), !dbg !7447
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7448
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7450
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7451
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #10, !dbg !7452
  br i1 %call, label %if.end, label %if.then, !dbg !7453

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !7454

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7455
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7456
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !7457
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !7458
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7459
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7460
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !7461
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !7462
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7463
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7464
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !7465
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !7466
  br label %do.body, !dbg !7467

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !7468

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !7470

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !7468

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7472
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7472
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !7472
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !7472
  br label %do.end7, !dbg !7472

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !7468

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !7474
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !7475 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7478, metadata !DIExpression()), !dbg !7479
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7480, metadata !DIExpression()), !dbg !7481
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7482, metadata !DIExpression()), !dbg !7483
  ret i1 true, !dbg !7484
}

; Function Attrs: noredzone
declare dso_local i32 @ww_mutex_lock(%struct.ww_mutex*, %struct.ww_acquire_ctx*) #3

; Function Attrs: noredzone
declare dso_local void @ww_mutex_unlock(%struct.ww_mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !7485 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !7486, metadata !DIExpression()), !dbg !7487
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7488
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #10, !dbg !7490
  br i1 %call, label %if.end, label %if.then, !dbg !7491

if.then:                                          ; preds = %entry
  br label %return, !dbg !7492

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7493
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7494
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !7494
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7495
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !7496
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7496
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #10, !dbg !7497
  br label %return, !dbg !7498

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7498
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !7499 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !7502, metadata !DIExpression()), !dbg !7503
  ret i1 true, !dbg !7504
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !7505 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7506, metadata !DIExpression()), !dbg !7507
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7508, metadata !DIExpression()), !dbg !7509
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7510
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7511
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7512
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !7513
  br label %do.body, !dbg !7514

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !7515

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !7517

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !7515

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7519
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7519
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !7519
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !7519
  br label %do.end5, !dbg !7519

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !7515

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !7521
}

; Function Attrs: noredzone
declare dso_local i64 @dma_resv_wait_timeout_rcu(%struct.dma_resv*, i1 zeroext, i1 zeroext, i64) #3

; Function Attrs: noredzone
declare dso_local %struct.vfsmount* @kern_mount(%struct.file_system_type*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_buf_init_debugfs() #0 !dbg !7522 {
entry:
  ret i32 0, !dbg !7523
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_buf_fs_init_context(%struct.fs_context* %fc) #0 !dbg !7524 {
entry:
  %retval = alloca i32, align 4
  %fc.addr = alloca %struct.fs_context*, align 8
  %ctx = alloca %struct.pseudo_fs_context*, align 8
  store %struct.fs_context* %fc, %struct.fs_context** %fc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fs_context** %fc.addr, metadata !7525, metadata !DIExpression()), !dbg !7526
  call void @llvm.dbg.declare(metadata %struct.pseudo_fs_context** %ctx, metadata !7527, metadata !DIExpression()), !dbg !7536
  %0 = load %struct.fs_context*, %struct.fs_context** %fc.addr, align 8, !dbg !7537
  %call = call %struct.pseudo_fs_context* @init_pseudo(%struct.fs_context* %0, i64 1145913666) #10, !dbg !7538
  store %struct.pseudo_fs_context* %call, %struct.pseudo_fs_context** %ctx, align 8, !dbg !7539
  %1 = load %struct.pseudo_fs_context*, %struct.pseudo_fs_context** %ctx, align 8, !dbg !7540
  %tobool = icmp ne %struct.pseudo_fs_context* %1, null, !dbg !7540
  br i1 %tobool, label %if.end, label %if.then, !dbg !7542

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !7543
  br label %return, !dbg !7543

if.end:                                           ; preds = %entry
  %2 = load %struct.pseudo_fs_context*, %struct.pseudo_fs_context** %ctx, align 8, !dbg !7544
  %dops = getelementptr inbounds %struct.pseudo_fs_context, %struct.pseudo_fs_context* %2, i32 0, i32 2, !dbg !7545
  store %struct.dentry_operations* @dma_buf_dentry_ops, %struct.dentry_operations** %dops, align 8, !dbg !7546
  store i32 0, i32* %retval, align 4, !dbg !7547
  br label %return, !dbg !7547

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !7548
  ret i32 %3, !dbg !7548
}

; Function Attrs: noredzone
declare dso_local void @kill_anon_super(%struct.super_block*) #3

; Function Attrs: noredzone
declare dso_local %struct.pseudo_fs_context* @init_pseudo(%struct.fs_context*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_buf_release(%struct.dentry* %dentry) #0 !dbg !7549 {
entry:
  %dentry.addr = alloca %struct.dentry*, align 8
  %dmabuf = alloca %struct.dma_buf*, align 8
  store %struct.dentry* %dentry, %struct.dentry** %dentry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dentry** %dentry.addr, metadata !7550, metadata !DIExpression()), !dbg !7551
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf, metadata !7552, metadata !DIExpression()), !dbg !7553
  %0 = load %struct.dentry*, %struct.dentry** %dentry.addr, align 8, !dbg !7554
  %d_fsdata = getelementptr inbounds %struct.dentry, %struct.dentry* %0, i32 0, i32 11, !dbg !7555
  %1 = load i8*, i8** %d_fsdata, align 8, !dbg !7555
  %2 = bitcast i8* %1 to %struct.dma_buf*, !dbg !7554
  store %struct.dma_buf* %2, %struct.dma_buf** %dmabuf, align 8, !dbg !7556
  %3 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !7557
  %tobool = icmp ne %struct.dma_buf* %3, null, !dbg !7557
  %lnot = xor i1 %tobool, true, !dbg !7557
  %lnot1 = xor i1 %lnot, true, !dbg !7557
  %lnot2 = xor i1 %lnot1, true, !dbg !7557
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7557
  %conv = sext i32 %lnot.ext to i64, !dbg !7557
  %tobool3 = icmp ne i64 %conv, 0, !dbg !7557
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7559

if.then:                                          ; preds = %entry
  br label %return, !dbg !7560

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !7561

do.body:                                          ; preds = %if.end
  %4 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !7562
  %vmapping_counter = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %4, i32 0, i32 5, !dbg !7562
  %5 = load i32, i32* %vmapping_counter, align 8, !dbg !7562
  %tobool4 = icmp ne i32 %5, 0, !dbg !7562
  %lnot5 = xor i1 %tobool4, true, !dbg !7562
  %lnot7 = xor i1 %lnot5, true, !dbg !7562
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !7562
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !7562
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !7562
  br i1 %tobool10, label %if.then11, label %if.end19, !dbg !7565

if.then11:                                        ; preds = %do.body
  br label %do.body12, !dbg !7562

do.body12:                                        ; preds = %if.then11
  br label %do.body13, !dbg !7566

do.body13:                                        ; preds = %do.body12
  br label %do.end, !dbg !7568

do.end:                                           ; preds = %do.body13
  br label %do.body14, !dbg !7566

do.body14:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 65, i32 0, i64 12) #9, !dbg !7570, !srcloc !7572
  br label %do.end15, !dbg !7570

do.end15:                                         ; preds = %do.body14
  br label %do.body16, !dbg !7566

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 241) #9, !dbg !7573, !srcloc !7576
  unreachable, !dbg !7577

do.end17:                                         ; No predecessors!
  br label %do.end18, !dbg !7566

do.end18:                                         ; preds = %do.end17
  br label %if.end19, !dbg !7566

if.end19:                                         ; preds = %do.end18, %do.body
  br label %do.end20, !dbg !7565

do.end20:                                         ; preds = %if.end19
  br label %do.body21, !dbg !7578

do.body21:                                        ; preds = %do.end20
  %6 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !7579
  %cb_shared = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %6, i32 0, i32 16, !dbg !7579
  %active = getelementptr inbounds %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t* %cb_shared, i32 0, i32 2, !dbg !7579
  %7 = load i32, i32* %active, align 8, !dbg !7579
  %tobool22 = icmp ne i32 %7, 0, !dbg !7579
  br i1 %tobool22, label %lor.end, label %lor.rhs, !dbg !7579

lor.rhs:                                          ; preds = %do.body21
  %8 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !7579
  %cb_excl = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %8, i32 0, i32 15, !dbg !7579
  %active23 = getelementptr inbounds %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t* %cb_excl, i32 0, i32 2, !dbg !7579
  %9 = load i32, i32* %active23, align 8, !dbg !7579
  %tobool24 = icmp ne i32 %9, 0, !dbg !7579
  br label %lor.end, !dbg !7579

lor.end:                                          ; preds = %lor.rhs, %do.body21
  %10 = phi i1 [ true, %do.body21 ], [ %tobool24, %lor.rhs ]
  %lnot25 = xor i1 %10, true, !dbg !7579
  %lnot27 = xor i1 %lnot25, true, !dbg !7579
  %lnot.ext28 = zext i1 %lnot27 to i32, !dbg !7579
  %conv29 = sext i32 %lnot.ext28 to i64, !dbg !7579
  %tobool30 = icmp ne i64 %conv29, 0, !dbg !7579
  br i1 %tobool30, label %if.then31, label %if.end40, !dbg !7582

if.then31:                                        ; preds = %lor.end
  br label %do.body32, !dbg !7579

do.body32:                                        ; preds = %if.then31
  br label %do.body33, !dbg !7583

do.body33:                                        ; preds = %do.body32
  br label %do.end34, !dbg !7585

do.end34:                                         ; preds = %do.body33
  br label %do.body35, !dbg !7583

do.body35:                                        ; preds = %do.end34
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 75, i32 0, i64 12) #9, !dbg !7587, !srcloc !7589
  br label %do.end36, !dbg !7587

do.end36:                                         ; preds = %do.body35
  br label %do.body37, !dbg !7583

do.body37:                                        ; preds = %do.end36
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 242) #9, !dbg !7590, !srcloc !7593
  unreachable, !dbg !7594

do.end38:                                         ; No predecessors!
  br label %do.end39, !dbg !7583

do.end39:                                         ; preds = %do.end38
  br label %if.end40, !dbg !7583

if.end40:                                         ; preds = %do.end39, %lor.end
  br label %do.end41, !dbg !7582

do.end41:                                         ; preds = %if.end40
  %11 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !7595
  %ops = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %11, i32 0, i32 3, !dbg !7596
  %12 = load %struct.dma_buf_ops*, %struct.dma_buf_ops** %ops, align 8, !dbg !7596
  %release = getelementptr inbounds %struct.dma_buf_ops, %struct.dma_buf_ops* %12, i32 0, i32 7, !dbg !7597
  %13 = load void (%struct.dma_buf*)*, void (%struct.dma_buf*)** %release, align 8, !dbg !7597
  %14 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !7598
  call void %13(%struct.dma_buf* %14) #10, !dbg !7595
  call void @mutex_lock(%struct.mutex* getelementptr inbounds (%struct.dma_buf_list, %struct.dma_buf_list* @db_list, i32 0, i32 1)) #10, !dbg !7599
  %15 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !7600
  %list_node = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %15, i32 0, i32 11, !dbg !7601
  call void @list_del(%struct.list_head* %list_node) #10, !dbg !7602
  call void @mutex_unlock(%struct.mutex* getelementptr inbounds (%struct.dma_buf_list, %struct.dma_buf_list* @db_list, i32 0, i32 1)) #10, !dbg !7603
  %16 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !7604
  %resv = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %16, i32 0, i32 13, !dbg !7606
  %17 = load %struct.dma_resv*, %struct.dma_resv** %resv, align 8, !dbg !7606
  %18 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !7607
  %arrayidx = getelementptr %struct.dma_buf, %struct.dma_buf* %18, i64 1, !dbg !7607
  %19 = bitcast %struct.dma_buf* %arrayidx to %struct.dma_resv*, !dbg !7608
  %cmp = icmp eq %struct.dma_resv* %17, %19, !dbg !7609
  br i1 %cmp, label %if.then43, label %if.end45, !dbg !7610

if.then43:                                        ; preds = %do.end41
  %20 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !7611
  %resv44 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %20, i32 0, i32 13, !dbg !7612
  %21 = load %struct.dma_resv*, %struct.dma_resv** %resv44, align 8, !dbg !7612
  call void @dma_resv_fini(%struct.dma_resv* %21) #10, !dbg !7613
  br label %if.end45, !dbg !7613

if.end45:                                         ; preds = %if.then43, %do.end41
  %22 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !7614
  %owner = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %22, i32 0, i32 10, !dbg !7615
  %23 = load %struct.module*, %struct.module** %owner, align 8, !dbg !7615
  call void @module_put(%struct.module* %23) #10, !dbg !7616
  %24 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !7617
  %name = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %24, i32 0, i32 8, !dbg !7618
  %25 = load i8*, i8** %name, align 8, !dbg !7618
  call void @kfree(i8* %25) #10, !dbg !7619
  %26 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !7620
  %27 = bitcast %struct.dma_buf* %26 to i8*, !dbg !7620
  call void @kfree(i8* %27) #10, !dbg !7621
  br label %return, !dbg !7622

return:                                           ; preds = %if.end45, %if.then
  ret void, !dbg !7622
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dmabuffs_dname(%struct.dentry* %dentry, i8* %buffer, i32 %buflen) #0 !dbg !7623 {
entry:
  %lock.addr.i7 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i7, metadata !6712, metadata !DIExpression()), !dbg !7624
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6716, metadata !DIExpression()), !dbg !7626
  %dentry.addr = alloca %struct.dentry*, align 8
  %buffer.addr = alloca i8*, align 8
  %buflen.addr = alloca i32, align 4
  %dmabuf = alloca %struct.dma_buf*, align 8
  %name = alloca [32 x i8], align 16
  %ret = alloca i64, align 8
  store %struct.dentry* %dentry, %struct.dentry** %dentry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dentry** %dentry.addr, metadata !7628, metadata !DIExpression()), !dbg !7629
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !7630, metadata !DIExpression()), !dbg !7631
  store i32 %buflen, i32* %buflen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buflen.addr, metadata !7632, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dmabuf, metadata !7634, metadata !DIExpression()), !dbg !7635
  call void @llvm.dbg.declare(metadata [32 x i8]* %name, metadata !7636, metadata !DIExpression()), !dbg !7637
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !7638, metadata !DIExpression()), !dbg !7639
  store i64 0, i64* %ret, align 8, !dbg !7639
  %0 = load %struct.dentry*, %struct.dentry** %dentry.addr, align 8, !dbg !7640
  %d_fsdata = getelementptr inbounds %struct.dentry, %struct.dentry* %0, i32 0, i32 11, !dbg !7641
  %1 = load i8*, i8** %d_fsdata, align 8, !dbg !7641
  %2 = bitcast i8* %1 to %struct.dma_buf*, !dbg !7640
  store %struct.dma_buf* %2, %struct.dma_buf** %dmabuf, align 8, !dbg !7642
  %3 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !7643
  %name_lock = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %3, i32 0, i32 9, !dbg !7644
  store %struct.spinlock* %name_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !7645, !srcloc !6774
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7646
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !7646
  %rlock.i = bitcast %union.anon.2* %5 to %struct.raw_spinlock*, !dbg !7646
  %6 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !7647
  %name1 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %6, i32 0, i32 8, !dbg !7649
  %7 = load i8*, i8** %name1, align 8, !dbg !7649
  %tobool = icmp ne i8* %7, null, !dbg !7647
  br i1 %tobool, label %if.then, label %if.end, !dbg !7650

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !7651
  %8 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !7652
  %name2 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %8, i32 0, i32 8, !dbg !7653
  %9 = load i8*, i8** %name2, align 8, !dbg !7653
  %call = call i64 @strlcpy(i8* %arraydecay, i8* %9, i64 32) #10, !dbg !7654
  store i64 %call, i64* %ret, align 8, !dbg !7655
  br label %if.end, !dbg !7656

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.dma_buf*, %struct.dma_buf** %dmabuf, align 8, !dbg !7657
  %name_lock3 = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %10, i32 0, i32 9, !dbg !7658
  store %struct.spinlock* %name_lock3, %struct.spinlock** %lock.addr.i7, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !7659, !srcloc !6789
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i7, align 8, !dbg !7660
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !7660
  %rlock.i8 = bitcast %union.anon.2* %12 to %struct.raw_spinlock*, !dbg !7660
  %13 = load %struct.dentry*, %struct.dentry** %dentry.addr, align 8, !dbg !7661
  %14 = load i8*, i8** %buffer.addr, align 8, !dbg !7662
  %15 = load i32, i32* %buflen.addr, align 4, !dbg !7663
  %16 = load %struct.dentry*, %struct.dentry** %dentry.addr, align 8, !dbg !7664
  %d_name = getelementptr inbounds %struct.dentry, %struct.dentry* %16, i32 0, i32 4, !dbg !7665
  %name4 = getelementptr inbounds %struct.qstr, %struct.qstr* %d_name, i32 0, i32 1, !dbg !7666
  %17 = load i8*, i8** %name4, align 8, !dbg !7666
  %18 = load i64, i64* %ret, align 8, !dbg !7667
  %cmp = icmp ugt i64 %18, 0, !dbg !7668
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7667

cond.true:                                        ; preds = %if.end
  %arraydecay5 = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !7669
  br label %cond.end, !dbg !7667

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !7667

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %arraydecay5, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), %cond.false ], !dbg !7667
  %call6 = call i8* (%struct.dentry*, i8*, i32, i8*, ...) @dynamic_dname(%struct.dentry* %13, i8* %14, i32 %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0), i8* %17, i8* %cond) #10, !dbg !7670
  ret i8* %call6, !dbg !7671
}

; Function Attrs: noredzone
declare dso_local void @dma_resv_fini(%struct.dma_resv*) #3

; Function Attrs: noredzone
declare dso_local i64 @strlcpy(i8*, i8*, i64) #3

; Function Attrs: noredzone
declare dso_local i8* @dynamic_dname(%struct.dentry*, i8*, i32, i8*, ...) #3

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { nounwind willreturn }
attributes #7 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { noredzone }
attributes #11 = { noredzone nounwind readnone }
attributes #12 = { noredzone nounwind }

!llvm.dbg.cu = !{!4060}
!llvm.named.register.rsp = !{!4134}
!llvm.module.flags = !{!4135, !4136, !4137, !4138}
!llvm.ident = !{!4139}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__key", scope: !2, file: !3, line: 550, type: !691, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "dma_buf_export", scope: !3, file: !3, line: 506, type: !4, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!3 = !DIFile(filename: "drivers/dma-buf/dma-buf.c", directory: "/home/lizy2001/genbc/linux")
!4 = !DISubroutineType(types: !5)
!5 = !{!6, !4049}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_buf", file: !8, line: 305, size: 1856, elements: !9)
!8 = !DIFile(filename: "./include/linux/dma-buf.h", directory: "/home/lizy2001/genbc/linux")
!9 = !{!10, !17, !3101, !3102, !3944, !3945, !3946, !3947, !3948, !3949, !3950, !3951, !3952, !3953, !4032, !4033, !4048}
!10 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7, file: !8, line: 306, baseType: !11, size: 64)
!11 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !12, line: 55, baseType: !13)
!12 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!13 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !14, line: 72, baseType: !15)
!14 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!15 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !14, line: 16, baseType: !16)
!16 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !7, file: !8, line: 307, baseType: !18, size: 64, offset: 64)
!18 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19, size: 64)
!19 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !20, line: 916, size: 1856, align: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !40, !3051, !3052, !3053, !3054, !3063, !3064, !3065, !3066, !3067, !3068, !3084, !3085, !3094, !3095, !3096, !3097, !3098, !3099, !3100}
!22 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !19, file: !20, line: 920, baseType: !23, size: 128)
!23 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !19, file: !20, line: 917, size: 128, elements: !24)
!24 = !{!25, !31}
!25 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !23, file: !20, line: 918, baseType: !26, size: 64)
!26 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !27, line: 58, size: 64, elements: !28)
!27 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!28 = !{!29}
!29 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !26, file: !27, line: 59, baseType: !30, size: 64)
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !23, file: !20, line: 919, baseType: !32, size: 128, align: 64)
!32 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !12, line: 216, size: 128, align: 64, elements: !33)
!33 = !{!34, !36}
!34 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !32, file: !12, line: 217, baseType: !35, size: 64)
!35 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !32, file: !12, line: 218, baseType: !37, size: 64, offset: 64)
!37 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 64)
!38 = !DISubroutineType(types: !39)
!39 = !{null, !35}
!40 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !19, file: !20, line: 921, baseType: !41, size: 128, offset: 128)
!41 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !42, line: 8, size: 128, elements: !43)
!42 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!43 = !{!44, !3050}
!44 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !41, file: !42, line: 9, baseType: !45, size: 64)
!45 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !46, size: 64)
!46 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !47, line: 71, size: 192, elements: !48)
!47 = !DIFile(filename: "./include/linux/mount.h", directory: "/home/lizy2001/genbc/linux")
!48 = !{!49, !3048, !3049}
!49 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_root", scope: !46, file: !47, line: 72, baseType: !50, size: 64)
!50 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !51, size: 64)
!51 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !52, line: 89, size: 1536, elements: !53)
!52 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!53 = !{!54, !56, !66, !74, !75, !98, !3017, !3019, !3031, !3032, !3033, !3034, !3035, !3040, !3041, !3042}
!54 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !51, file: !52, line: 91, baseType: !55, size: 32)
!55 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !51, file: !52, line: 92, baseType: !57, size: 32, offset: 32)
!57 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !58, line: 277, baseType: !59)
!58 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!59 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !58, line: 277, size: 32, elements: !60)
!60 = !{!61}
!61 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !59, file: !58, line: 277, baseType: !62, size: 32)
!62 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !58, line: 70, baseType: !63)
!63 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !58, line: 65, size: 32, elements: !64)
!64 = !{!65}
!65 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !63, file: !58, line: 66, baseType: !55, size: 32)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !51, file: !52, line: 93, baseType: !67, size: 128, offset: 64)
!67 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !68, line: 38, size: 128, elements: !69)
!68 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!69 = !{!70, !72}
!70 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !67, file: !68, line: 39, baseType: !71, size: 64)
!71 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 64)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !67, file: !68, line: 39, baseType: !73, size: 64, offset: 64)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !51, file: !52, line: 94, baseType: !50, size: 64, offset: 192)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !51, file: !52, line: 95, baseType: !76, size: 128, offset: 256)
!76 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !52, line: 47, size: 128, elements: !77)
!77 = !{!78, !94}
!78 = !DIDerivedType(tag: DW_TAG_member, scope: !76, file: !52, line: 48, baseType: !79, size: 64)
!79 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !76, file: !52, line: 48, size: 64, elements: !80)
!80 = !{!81, !90}
!81 = !DIDerivedType(tag: DW_TAG_member, scope: !79, file: !52, line: 49, baseType: !82, size: 64)
!82 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !79, file: !52, line: 49, size: 64, elements: !83)
!83 = !{!84, !89}
!84 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !82, file: !52, line: 50, baseType: !85, size: 32)
!85 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !86, line: 21, baseType: !87)
!86 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!87 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !88, line: 27, baseType: !55)
!88 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!89 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !82, file: !52, line: 50, baseType: !85, size: 32, offset: 32)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !79, file: !52, line: 52, baseType: !91, size: 64)
!91 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !86, line: 23, baseType: !92)
!92 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !88, line: 31, baseType: !93)
!93 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !76, file: !52, line: 54, baseType: !95, size: 64, offset: 64)
!95 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !96, size: 64)
!96 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !97)
!97 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !51, file: !52, line: 96, baseType: !99, size: 64, offset: 384)
!99 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !100, size: 64)
!100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !20, line: 610, size: 4224, elements: !101)
!101 = !{!102, !105, !106, !114, !121, !122, !280, !2720, !2721, !2722, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2993, !3001, !3002, !3003, !3013, !3014, !3015, !3016}
!102 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !100, file: !20, line: 611, baseType: !103, size: 16)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !12, line: 19, baseType: !104)
!104 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !100, file: !20, line: 612, baseType: !104, size: 16, offset: 16)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !100, file: !20, line: 613, baseType: !107, size: 32, offset: 32)
!107 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !108, line: 23, baseType: !109)
!108 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!109 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 21, size: 32, elements: !110)
!110 = !{!111}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !109, file: !108, line: 22, baseType: !112, size: 32)
!112 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !12, line: 32, baseType: !113)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !14, line: 49, baseType: !55)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !100, file: !20, line: 614, baseType: !115, size: 32, offset: 64)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !108, line: 28, baseType: !116)
!116 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !108, line: 26, size: 32, elements: !117)
!117 = !{!118}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !116, file: !108, line: 27, baseType: !119, size: 32)
!119 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !12, line: 33, baseType: !120)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !14, line: 50, baseType: !55)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !100, file: !20, line: 615, baseType: !55, size: 32, offset: 96)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !100, file: !20, line: 622, baseType: !123, size: 64, offset: 128)
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 64)
!124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !125)
!125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !20, line: 1864, size: 1536, align: 512, elements: !126)
!126 = !{!127, !131, !148, !153, !159, !164, !170, !174, !178, !182, !186, !187, !193, !197, !224, !253, !260, !266, !271, !275, !276}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !125, file: !20, line: 1865, baseType: !128, size: 64)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 64)
!129 = !DISubroutineType(types: !130)
!130 = !{!50, !99, !50, !55}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !125, file: !20, line: 1866, baseType: !132, size: 64, offset: 64)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 64)
!133 = !DISubroutineType(types: !134)
!134 = !{!135, !50, !99, !138}
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64)
!136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !137)
!137 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !140, line: 10, size: 128, elements: !141)
!140 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!141 = !{!142, !147}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !139, file: !140, line: 11, baseType: !143, size: 64)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 64)
!144 = !DISubroutineType(types: !145)
!145 = !{null, !146}
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !139, file: !140, line: 12, baseType: !146, size: 64, offset: 64)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !125, file: !20, line: 1867, baseType: !149, size: 64, offset: 128)
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 64)
!150 = !DISubroutineType(types: !151)
!151 = !{!152, !99, !152}
!152 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !125, file: !20, line: 1868, baseType: !154, size: 64, offset: 192)
!154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 64)
!155 = !DISubroutineType(types: !156)
!156 = !{!157, !99, !152}
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 64)
!158 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !20, line: 581, flags: DIFlagFwdDecl)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !125, file: !20, line: 1870, baseType: !160, size: 64, offset: 256)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 64)
!161 = !DISubroutineType(types: !162)
!162 = !{!152, !50, !163, !152}
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 64)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !125, file: !20, line: 1872, baseType: !165, size: 64, offset: 320)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 64)
!166 = !DISubroutineType(types: !167)
!167 = !{!152, !99, !50, !103, !168}
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !12, line: 30, baseType: !169)
!169 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !125, file: !20, line: 1873, baseType: !171, size: 64, offset: 384)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 64)
!172 = !DISubroutineType(types: !173)
!173 = !{!152, !50, !99, !50}
!174 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !125, file: !20, line: 1874, baseType: !175, size: 64, offset: 448)
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64)
!176 = !DISubroutineType(types: !177)
!177 = !{!152, !99, !50}
!178 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !125, file: !20, line: 1875, baseType: !179, size: 64, offset: 512)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 64)
!180 = !DISubroutineType(types: !181)
!181 = !{!152, !99, !50, !135}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !125, file: !20, line: 1876, baseType: !183, size: 64, offset: 576)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64)
!184 = !DISubroutineType(types: !185)
!185 = !{!152, !99, !50, !103}
!186 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !125, file: !20, line: 1877, baseType: !175, size: 64, offset: 640)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !125, file: !20, line: 1878, baseType: !188, size: 64, offset: 704)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64)
!189 = !DISubroutineType(types: !190)
!190 = !{!152, !99, !50, !103, !191}
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !12, line: 16, baseType: !192)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !12, line: 13, baseType: !85)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !125, file: !20, line: 1879, baseType: !194, size: 64, offset: 768)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!195 = !DISubroutineType(types: !196)
!196 = !{!152, !99, !50, !99, !50, !55}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !125, file: !20, line: 1881, baseType: !198, size: 64, offset: 832)
!198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 64)
!199 = !DISubroutineType(types: !200)
!200 = !{!152, !50, !201}
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !20, line: 219, size: 640, elements: !203)
!203 = !{!204, !205, !206, !207, !208, !212, !221, !222, !223}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !202, file: !20, line: 220, baseType: !55, size: 32)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !202, file: !20, line: 221, baseType: !103, size: 16, offset: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !202, file: !20, line: 222, baseType: !107, size: 32, offset: 64)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !202, file: !20, line: 223, baseType: !115, size: 32, offset: 96)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !202, file: !20, line: 224, baseType: !209, size: 64, offset: 128)
!209 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !12, line: 46, baseType: !210)
!210 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !14, line: 88, baseType: !211)
!211 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !202, file: !20, line: 225, baseType: !213, size: 128, offset: 192)
!213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !214, line: 13, size: 128, elements: !215)
!214 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!215 = !{!216, !219}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !213, file: !214, line: 14, baseType: !217, size: 64)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !214, line: 8, baseType: !218)
!218 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !88, line: 30, baseType: !211)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !213, file: !214, line: 15, baseType: !220, size: 64, offset: 64)
!220 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !202, file: !20, line: 226, baseType: !213, size: 128, offset: 320)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !202, file: !20, line: 227, baseType: !213, size: 128, offset: 448)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !202, file: !20, line: 234, baseType: !18, size: 64, offset: 576)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !125, file: !20, line: 1882, baseType: !225, size: 64, offset: 896)
!225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64)
!226 = !DISubroutineType(types: !227)
!227 = !{!152, !228, !230, !85, !55}
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !41)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 64)
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !232, line: 22, size: 1152, elements: !233)
!232 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!233 = !{!234, !235, !236, !237, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252}
!234 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !231, file: !232, line: 23, baseType: !85, size: 32)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !231, file: !232, line: 24, baseType: !103, size: 16, offset: 32)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !231, file: !232, line: 25, baseType: !55, size: 32, offset: 64)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !231, file: !232, line: 26, baseType: !238, size: 32, offset: 96)
!238 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !12, line: 104, baseType: !85)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !231, file: !232, line: 27, baseType: !91, size: 64, offset: 128)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !231, file: !232, line: 28, baseType: !91, size: 64, offset: 192)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !231, file: !232, line: 37, baseType: !91, size: 64, offset: 256)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !231, file: !232, line: 38, baseType: !191, size: 32, offset: 320)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !231, file: !232, line: 39, baseType: !191, size: 32, offset: 352)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !231, file: !232, line: 40, baseType: !107, size: 32, offset: 384)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !231, file: !232, line: 41, baseType: !115, size: 32, offset: 416)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !231, file: !232, line: 42, baseType: !209, size: 64, offset: 448)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !231, file: !232, line: 43, baseType: !213, size: 128, offset: 512)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !231, file: !232, line: 44, baseType: !213, size: 128, offset: 640)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !231, file: !232, line: 45, baseType: !213, size: 128, offset: 768)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !231, file: !232, line: 46, baseType: !213, size: 128, offset: 896)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !231, file: !232, line: 47, baseType: !91, size: 64, offset: 1024)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !231, file: !232, line: 48, baseType: !91, size: 64, offset: 1088)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !125, file: !20, line: 1883, baseType: !254, size: 64, offset: 960)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 64)
!255 = !DISubroutineType(types: !256)
!256 = !{!257, !50, !163, !11}
!257 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !12, line: 60, baseType: !258)
!258 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !14, line: 73, baseType: !259)
!259 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !14, line: 15, baseType: !220)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !125, file: !20, line: 1884, baseType: !261, size: 64, offset: 1024)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!262 = !DISubroutineType(types: !263)
!263 = !{!152, !99, !264, !91, !91}
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64)
!265 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !20, line: 50, flags: DIFlagFwdDecl)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !125, file: !20, line: 1886, baseType: !267, size: 64, offset: 1088)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!268 = !DISubroutineType(types: !269)
!269 = !{!152, !99, !270, !152}
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !125, file: !20, line: 1887, baseType: !272, size: 64, offset: 1152)
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!273 = !DISubroutineType(types: !274)
!274 = !{!152, !99, !50, !18, !55, !103}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !125, file: !20, line: 1890, baseType: !183, size: 64, offset: 1216)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !125, file: !20, line: 1891, baseType: !277, size: 64, offset: 1280)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!278 = !DISubroutineType(types: !279)
!279 = !{!152, !99, !157, !152}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !100, file: !20, line: 623, baseType: !281, size: 64, offset: 192)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64)
!282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !20, line: 1416, size: 9472, elements: !283)
!283 = !{!284, !290, !291, !292, !293, !294, !702, !2321, !2409, !2492, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2508, !2512, !2513, !2516, !2517, !2520, !2521, !2522, !2563, !2590, !2591, !2592, !2593, !2594, !2595, !2598, !2600, !2607, !2608, !2610, !2611, !2612, !2671, !2672, !2687, !2688, !2689, !2690, !2691, !2694, !2695, !2696, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719}
!284 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !282, file: !20, line: 1417, baseType: !285, size: 128)
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !12, line: 178, size: 128, elements: !286)
!286 = !{!287, !289}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !285, file: !12, line: 179, baseType: !288, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !285, file: !12, line: 179, baseType: !288, size: 64, offset: 64)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !282, file: !20, line: 1418, baseType: !191, size: 32, offset: 128)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !282, file: !20, line: 1419, baseType: !97, size: 8, offset: 160)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !282, file: !20, line: 1420, baseType: !16, size: 64, offset: 192)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !282, file: !20, line: 1421, baseType: !209, size: 64, offset: 256)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !282, file: !20, line: 1422, baseType: !295, size: 64, offset: 320)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !20, line: 2228, size: 576, elements: !297)
!297 = !{!298, !299, !300, !672, !676, !680, !684, !685, !686, !690, !693, !694, !695, !699, !700, !701}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !296, file: !20, line: 2229, baseType: !135, size: 64)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !296, file: !20, line: 2230, baseType: !152, size: 32, offset: 64)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !296, file: !20, line: 2238, baseType: !301, size: 64, offset: 128)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64)
!302 = !DISubroutineType(types: !303)
!303 = !{!152, !304}
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !306, line: 90, size: 1216, elements: !307)
!306 = !DIFile(filename: "./include/linux/fs_context.h", directory: "/home/lizy2001/genbc/linux")
!307 = !{!308, !366, !395, !396, !397, !398, !399, !402, !406, !624, !646, !647, !648, !649, !650, !651, !652, !653, !659, !669, !670, !671}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !305, file: !306, line: 91, baseType: !309, size: 64)
!309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64)
!310 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !311)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context_operations", file: !306, line: 115, size: 384, elements: !312)
!312 = !{!313, !317, !321, !360, !364, !365}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !311, file: !306, line: 116, baseType: !314, size: 64)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!315 = !DISubroutineType(types: !316)
!316 = !{null, !304}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "dup", scope: !311, file: !306, line: 117, baseType: !318, size: 64, offset: 64)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64)
!319 = !DISubroutineType(types: !320)
!320 = !{!152, !304, !304}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "parse_param", scope: !311, file: !306, line: 118, baseType: !322, size: 64, offset: 128)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!323 = !DISubroutineType(types: !324)
!324 = !{!152, !304, !325}
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64)
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter", file: !306, line: 63, size: 320, elements: !327)
!327 = !{!328, !329, !338, !358, !359}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !326, file: !306, line: 64, baseType: !135, size: 64)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !326, file: !306, line: 65, baseType: !330, size: 8, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!330 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fs_value_type", file: !306, line: 51, baseType: !55, size: 32, elements: !331)
!331 = !{!332, !333, !334, !335, !336, !337}
!332 = !DIEnumerator(name: "fs_value_is_undefined", value: 0, isUnsigned: true)
!333 = !DIEnumerator(name: "fs_value_is_flag", value: 1, isUnsigned: true)
!334 = !DIEnumerator(name: "fs_value_is_string", value: 2, isUnsigned: true)
!335 = !DIEnumerator(name: "fs_value_is_blob", value: 3, isUnsigned: true)
!336 = !DIEnumerator(name: "fs_value_is_filename", value: 4, isUnsigned: true)
!337 = !DIEnumerator(name: "fs_value_is_file", value: 5, isUnsigned: true)
!338 = !DIDerivedType(tag: DW_TAG_member, scope: !326, file: !306, line: 66, baseType: !339, size: 64, offset: 128)
!339 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !326, file: !306, line: 66, size: 64, elements: !340)
!340 = !{!341, !342, !343, !357}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !339, file: !306, line: 67, baseType: !163, size: 64)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "blob", scope: !339, file: !306, line: 68, baseType: !146, size: 64)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !339, file: !306, line: 69, baseType: !344, size: 64)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "filename", file: !20, line: 2513, size: 256, elements: !346)
!346 = !{!347, !348, !349, !350, !353}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !345, file: !20, line: 2514, baseType: !135, size: 64)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "uptr", scope: !345, file: !20, line: 2515, baseType: !135, size: 64, offset: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !345, file: !20, line: 2516, baseType: !152, size: 32, offset: 128)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "aname", scope: !345, file: !20, line: 2517, baseType: !351, size: 64, offset: 192)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!352 = !DICompositeType(tag: DW_TAG_structure_type, name: "audit_names", file: !20, line: 2512, flags: DIFlagFwdDecl)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "iname", scope: !345, file: !20, line: 2518, baseType: !354, offset: 256)
!354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, elements: !355)
!355 = !{!356}
!356 = !DISubrange(count: -1)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !339, file: !306, line: 70, baseType: !18, size: 64)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !326, file: !306, line: 72, baseType: !11, size: 64, offset: 192)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "dirfd", scope: !326, file: !306, line: 73, baseType: !152, size: 32, offset: 256)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "parse_monolithic", scope: !311, file: !306, line: 119, baseType: !361, size: 64, offset: 192)
!361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 64)
!362 = !DISubroutineType(types: !363)
!363 = !{!152, !304, !146}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "get_tree", scope: !311, file: !306, line: 120, baseType: !301, size: 64, offset: 256)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "reconfigure", scope: !311, file: !306, line: 121, baseType: !301, size: 64, offset: 320)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "uapi_mutex", scope: !305, file: !306, line: 92, baseType: !367, size: 192, offset: 64)
!367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !368, line: 53, size: 192, elements: !369)
!368 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!369 = !{!370, !378, !394}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !367, file: !368, line: 54, baseType: !371, size: 64)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !372, line: 13, baseType: !373)
!372 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !12, line: 175, baseType: !374)
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12, line: 173, size: 64, elements: !375)
!375 = !{!376}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !374, file: !12, line: 174, baseType: !377, size: 64)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !86, line: 22, baseType: !218)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !367, file: !368, line: 55, baseType: !379, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !380, line: 83, baseType: !381)
!380 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !380, line: 71, elements: !382)
!382 = !{!383}
!383 = !DIDerivedType(tag: DW_TAG_member, scope: !381, file: !380, line: 72, baseType: !384)
!384 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !381, file: !380, line: 72, elements: !385)
!385 = !{!386}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !384, file: !380, line: 73, baseType: !387)
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !380, line: 20, elements: !388)
!388 = !{!389}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !387, file: !380, line: 21, baseType: !390)
!390 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !391, line: 25, baseType: !392)
!391 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!392 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !391, line: 25, elements: !393)
!393 = !{}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !367, file: !368, line: 59, baseType: !285, size: 128, offset: 64)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "fs_type", scope: !305, file: !306, line: 93, baseType: !295, size: 64, offset: 256)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "fs_private", scope: !305, file: !306, line: 94, baseType: !146, size: 64, offset: 320)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "sget_key", scope: !305, file: !306, line: 95, baseType: !146, size: 64, offset: 384)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !305, file: !306, line: 96, baseType: !50, size: 64, offset: 448)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !305, file: !306, line: 97, baseType: !400, size: 64, offset: 512)
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 64)
!401 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !108, line: 18, flags: DIFlagFwdDecl)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !305, file: !306, line: 98, baseType: !403, size: 64, offset: 576)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64)
!404 = !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !405, line: 34, flags: DIFlagFwdDecl)
!405 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!406 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !305, file: !306, line: 99, baseType: !407, size: 64, offset: 640)
!407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !409)
!409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !410, line: 111, size: 1280, elements: !411)
!410 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!411 = !{!412, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !435, !436, !437, !438, !439, !440, !573, !574, !575, !576, !608, !609, !619}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !409, file: !410, line: 112, baseType: !413, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !12, line: 168, baseType: !414)
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12, line: 166, size: 32, elements: !415)
!415 = !{!416}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !414, file: !12, line: 167, baseType: !152, size: 32)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !409, file: !410, line: 120, baseType: !107, size: 32, offset: 32)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !409, file: !410, line: 121, baseType: !115, size: 32, offset: 64)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !409, file: !410, line: 122, baseType: !107, size: 32, offset: 96)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !409, file: !410, line: 123, baseType: !115, size: 32, offset: 128)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !409, file: !410, line: 124, baseType: !107, size: 32, offset: 160)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !409, file: !410, line: 125, baseType: !115, size: 32, offset: 192)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !409, file: !410, line: 126, baseType: !107, size: 32, offset: 224)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !409, file: !410, line: 127, baseType: !115, size: 32, offset: 256)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !409, file: !410, line: 128, baseType: !55, size: 32, offset: 288)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !409, file: !410, line: 129, baseType: !427, size: 64, offset: 320)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !428, line: 26, baseType: !429)
!428 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !428, line: 24, size: 64, elements: !430)
!430 = !{!431}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !429, file: !428, line: 25, baseType: !432, size: 64)
!432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !87, size: 64, elements: !433)
!433 = !{!434}
!434 = !DISubrange(count: 2)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !409, file: !410, line: 130, baseType: !427, size: 64, offset: 384)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !409, file: !410, line: 131, baseType: !427, size: 64, offset: 448)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !409, file: !410, line: 132, baseType: !427, size: 64, offset: 512)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !409, file: !410, line: 133, baseType: !427, size: 64, offset: 576)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !409, file: !410, line: 135, baseType: !97, size: 8, offset: 640)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !409, file: !410, line: 137, baseType: !441, size: 64, offset: 704)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !405, line: 189, size: 1664, elements: !443)
!443 = !{!444, !450, !455, !467, !476, !479, !480, !485, !486, !487, !488, !490, !491, !492, !494, !495, !535, !558}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !442, file: !405, line: 190, baseType: !445, size: 32)
!445 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !446, line: 113, baseType: !447)
!446 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !446, line: 111, size: 32, elements: !448)
!448 = !{!449}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !447, file: !446, line: 112, baseType: !413, size: 32)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !442, file: !405, line: 191, baseType: !451, size: 32, offset: 32)
!451 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !405, line: 28, baseType: !452)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !12, line: 98, baseType: !453)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !86, line: 20, baseType: !454)
!454 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !88, line: 26, baseType: !152)
!455 = !DIDerivedType(tag: DW_TAG_member, scope: !442, file: !405, line: 192, baseType: !456, size: 192, offset: 64)
!456 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !442, file: !405, line: 192, size: 192, elements: !457)
!457 = !{!458, !459}
!458 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !456, file: !405, line: 193, baseType: !285, size: 128)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !456, file: !405, line: 194, baseType: !460, size: 192, align: 64)
!460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !461, line: 24, size: 192, align: 64, elements: !462)
!461 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!462 = !{!463, !464, !466}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !460, file: !461, line: 25, baseType: !16, size: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !460, file: !461, line: 26, baseType: !465, size: 64, offset: 64)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !460, file: !461, line: 27, baseType: !465, size: 64, offset: 128)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !442, file: !405, line: 199, baseType: !468, size: 256, offset: 256)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !469, line: 35, size: 256, elements: !470)
!469 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!470 = !{!471, !472, !473, !475}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !468, file: !469, line: 36, baseType: !371, size: 64)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !468, file: !469, line: 42, baseType: !371, size: 64, offset: 64)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !468, file: !469, line: 46, baseType: !474, offset: 128)
!474 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !380, line: 29, baseType: !387)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !468, file: !469, line: 47, baseType: !285, size: 128, offset: 128)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !442, file: !405, line: 200, baseType: !477, size: 64, offset: 512)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64)
!478 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !405, line: 200, flags: DIFlagFwdDecl)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !442, file: !405, line: 201, baseType: !146, size: 64, offset: 576)
!480 = !DIDerivedType(tag: DW_TAG_member, scope: !442, file: !405, line: 202, baseType: !481, size: 64, offset: 640)
!481 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !442, file: !405, line: 202, size: 64, elements: !482)
!482 = !{!483, !484}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !481, file: !405, line: 203, baseType: !217, size: 64)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !481, file: !405, line: 204, baseType: !217, size: 64)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !442, file: !405, line: 206, baseType: !217, size: 64, offset: 704)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !442, file: !405, line: 207, baseType: !107, size: 32, offset: 768)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !442, file: !405, line: 208, baseType: !115, size: 32, offset: 800)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !442, file: !405, line: 209, baseType: !489, size: 32, offset: 832)
!489 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !405, line: 31, baseType: !238)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !442, file: !405, line: 210, baseType: !104, size: 16, offset: 864)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !442, file: !405, line: 211, baseType: !104, size: 16, offset: 880)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !442, file: !405, line: 215, baseType: !493, size: 16, offset: 896)
!493 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !442, file: !405, line: 222, baseType: !16, size: 64, offset: 960)
!495 = !DIDerivedType(tag: DW_TAG_member, scope: !442, file: !405, line: 239, baseType: !496, size: 320, offset: 1024)
!496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !442, file: !405, line: 239, size: 320, elements: !497)
!497 = !{!498, !527}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !496, file: !405, line: 240, baseType: !499, size: 320)
!499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !405, line: 108, size: 320, elements: !500)
!500 = !{!501, !502, !516, !519, !526}
!501 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !499, file: !405, line: 110, baseType: !16, size: 64)
!502 = !DIDerivedType(tag: DW_TAG_member, scope: !499, file: !405, line: 111, baseType: !503, size: 64, offset: 64)
!503 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !499, file: !405, line: 111, size: 64, elements: !504)
!504 = !{!505, !515}
!505 = !DIDerivedType(tag: DW_TAG_member, scope: !503, file: !405, line: 112, baseType: !506, size: 64)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !503, file: !405, line: 112, size: 64, elements: !507)
!507 = !{!508, !511}
!508 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !506, file: !405, line: 114, baseType: !509, size: 16)
!509 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !86, line: 19, baseType: !510)
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !88, line: 24, baseType: !104)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !506, file: !405, line: 115, baseType: !512, size: 48, offset: 16)
!512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 48, elements: !513)
!513 = !{!514}
!514 = !DISubrange(count: 6)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !503, file: !405, line: 121, baseType: !16, size: 64)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !499, file: !405, line: 123, baseType: !517, size: 64, offset: 128)
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 64)
!518 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !405, line: 96, flags: DIFlagFwdDecl)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !499, file: !405, line: 124, baseType: !520, size: 64, offset: 192)
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !405, line: 102, size: 192, elements: !522)
!522 = !{!523, !524, !525}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !521, file: !405, line: 103, baseType: !32, size: 128, align: 64)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !521, file: !405, line: 104, baseType: !445, size: 32, offset: 128)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !521, file: !405, line: 105, baseType: !168, size: 8, offset: 160)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !499, file: !405, line: 125, baseType: !135, size: 64, offset: 256)
!527 = !DIDerivedType(tag: DW_TAG_member, scope: !496, file: !405, line: 241, baseType: !528, size: 320)
!528 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !496, file: !405, line: 241, size: 320, elements: !529)
!529 = !{!530, !531, !532, !533, !534}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !528, file: !405, line: 242, baseType: !16, size: 64)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !528, file: !405, line: 243, baseType: !16, size: 64, offset: 64)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !528, file: !405, line: 244, baseType: !517, size: 64, offset: 128)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !528, file: !405, line: 245, baseType: !520, size: 64, offset: 192)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !528, file: !405, line: 246, baseType: !163, size: 64, offset: 256)
!535 = !DIDerivedType(tag: DW_TAG_member, scope: !442, file: !405, line: 254, baseType: !536, size: 256, offset: 1344)
!536 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !442, file: !405, line: 254, size: 256, elements: !537)
!537 = !{!538, !546}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !536, file: !405, line: 255, baseType: !539, size: 256)
!539 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !405, line: 128, size: 256, elements: !540)
!540 = !{!541, !542}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !539, file: !405, line: 129, baseType: !146, size: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !539, file: !405, line: 130, baseType: !543, size: 256)
!543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 256, elements: !544)
!544 = !{!545}
!545 = !DISubrange(count: 4)
!546 = !DIDerivedType(tag: DW_TAG_member, scope: !536, file: !405, line: 256, baseType: !547, size: 256)
!547 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !536, file: !405, line: 256, size: 256, elements: !548)
!548 = !{!549, !550}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !547, file: !405, line: 258, baseType: !285, size: 128)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !547, file: !405, line: 259, baseType: !551, size: 128, offset: 128)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !552, line: 22, size: 128, elements: !553)
!552 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!553 = !{!554, !557}
!554 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !551, file: !552, line: 23, baseType: !555, size: 64)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!556 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !552, line: 23, flags: DIFlagFwdDecl)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !551, file: !552, line: 24, baseType: !16, size: 64, offset: 64)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !442, file: !405, line: 274, baseType: !559, size: 64, offset: 1600)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64)
!560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !405, line: 170, size: 192, elements: !561)
!561 = !{!562, !571, !572}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !560, file: !405, line: 171, baseType: !563, size: 64)
!563 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !405, line: 165, baseType: !564)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!565 = !DISubroutineType(types: !566)
!566 = !{!152, !441, !567, !569, !441}
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !518)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !539)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !560, file: !405, line: 172, baseType: !441, size: 64, offset: 64)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !560, file: !405, line: 173, baseType: !517, size: 64, offset: 128)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !409, file: !410, line: 138, baseType: !441, size: 64, offset: 768)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !409, file: !410, line: 139, baseType: !441, size: 64, offset: 832)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !409, file: !410, line: 140, baseType: !441, size: 64, offset: 896)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !409, file: !410, line: 145, baseType: !577, size: 64, offset: 960)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !579, line: 13, size: 896, elements: !580)
!579 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!580 = !{!581, !582, !583, !584, !585, !586, !587, !588, !595, !596, !597}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !578, file: !579, line: 14, baseType: !445, size: 32)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !578, file: !579, line: 15, baseType: !413, size: 32, offset: 32)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !578, file: !579, line: 16, baseType: !413, size: 32, offset: 64)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !578, file: !579, line: 21, baseType: !371, size: 64, offset: 128)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !578, file: !579, line: 27, baseType: !16, size: 64, offset: 192)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !578, file: !579, line: 28, baseType: !16, size: 64, offset: 256)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !578, file: !579, line: 29, baseType: !371, size: 64, offset: 320)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !578, file: !579, line: 32, baseType: !589, size: 128, offset: 384)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !12, line: 186, size: 128, elements: !590)
!590 = !{!591, !593}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !589, file: !12, line: 187, baseType: !592, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !589, file: !12, line: 187, baseType: !594, size: 64, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !578, file: !579, line: 33, baseType: !107, size: 32, offset: 512)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !578, file: !579, line: 37, baseType: !371, size: 64, offset: 576)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !578, file: !579, line: 44, baseType: !598, size: 256, offset: 640)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !599, line: 15, size: 256, elements: !600)
!599 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!600 = !{!601, !602, !603, !604, !605, !606, !607}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !598, file: !599, line: 16, baseType: !474)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !598, file: !599, line: 18, baseType: !152, size: 32)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !598, file: !599, line: 19, baseType: !152, size: 32, offset: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !598, file: !599, line: 20, baseType: !152, size: 32, offset: 64)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !598, file: !599, line: 21, baseType: !152, size: 32, offset: 96)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !598, file: !599, line: 22, baseType: !16, size: 64, offset: 128)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !598, file: !599, line: 23, baseType: !16, size: 64, offset: 192)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !409, file: !410, line: 146, baseType: !400, size: 64, offset: 1024)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !409, file: !410, line: 147, baseType: !610, size: 64, offset: 1088)
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !410, line: 25, size: 64, elements: !612)
!612 = !{!613, !614, !615}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !611, file: !410, line: 26, baseType: !413, size: 32)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !611, file: !410, line: 27, baseType: !152, size: 32, offset: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !611, file: !410, line: 28, baseType: !616, offset: 64)
!616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !115, elements: !617)
!617 = !{!618}
!618 = !DISubrange(count: 0)
!619 = !DIDerivedType(tag: DW_TAG_member, scope: !409, file: !410, line: 149, baseType: !620, size: 128, offset: 1152)
!620 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !409, file: !410, line: 149, size: 128, elements: !621)
!621 = !{!622, !623}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !620, file: !410, line: 150, baseType: !152, size: 32)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !620, file: !410, line: 151, baseType: !32, size: 128, align: 64)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "log", scope: !305, file: !306, line: 100, baseType: !625, size: 128, offset: 704)
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "p_log", file: !306, line: 76, size: 128, elements: !626)
!626 = !{!627, !628}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !625, file: !306, line: 77, baseType: !135, size: 64)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "log", scope: !625, file: !306, line: 78, baseType: !629, size: 64, offset: 64)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fc_log", file: !306, line: 181, size: 640, elements: !631)
!631 = !{!632, !633, !636, !637, !638, !642}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !630, file: !306, line: 182, baseType: !445, size: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !630, file: !306, line: 183, baseType: !634, size: 8, offset: 32)
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !86, line: 17, baseType: !635)
!635 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !88, line: 21, baseType: !97)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !630, file: !306, line: 184, baseType: !634, size: 8, offset: 40)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "need_free", scope: !630, file: !306, line: 185, baseType: !634, size: 8, offset: 48)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !630, file: !306, line: 186, baseType: !639, size: 64, offset: 64)
!639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!640 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !641, line: 76, flags: DIFlagFwdDecl)
!641 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!642 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !630, file: !306, line: 187, baseType: !643, size: 512, offset: 128)
!643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 512, elements: !644)
!644 = !{!645}
!645 = !DISubrange(count: 8)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !305, file: !306, line: 101, baseType: !135, size: 64, offset: 832)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !305, file: !306, line: 102, baseType: !146, size: 64, offset: 896)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !305, file: !306, line: 103, baseType: !146, size: 64, offset: 960)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "sb_flags", scope: !305, file: !306, line: 104, baseType: !55, size: 32, offset: 1024)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "sb_flags_mask", scope: !305, file: !306, line: 105, baseType: !55, size: 32, offset: 1056)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !305, file: !306, line: 106, baseType: !55, size: 32, offset: 1088)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "lsm_flags", scope: !305, file: !306, line: 107, baseType: !55, size: 32, offset: 1120)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !305, file: !306, line: 108, baseType: !654, size: 8, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!654 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fs_context_purpose", file: !306, line: 29, baseType: !55, size: 32, elements: !655)
!655 = !{!656, !657, !658}
!656 = !DIEnumerator(name: "FS_CONTEXT_FOR_MOUNT", value: 0, isUnsigned: true)
!657 = !DIEnumerator(name: "FS_CONTEXT_FOR_SUBMOUNT", value: 1, isUnsigned: true)
!658 = !DIEnumerator(name: "FS_CONTEXT_FOR_RECONFIGURE", value: 2, isUnsigned: true)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !305, file: !306, line: 109, baseType: !660, size: 8, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!660 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fs_context_phase", file: !306, line: 38, baseType: !55, size: 32, elements: !661)
!661 = !{!662, !663, !664, !665, !666, !667, !668}
!662 = !DIEnumerator(name: "FS_CONTEXT_CREATE_PARAMS", value: 0, isUnsigned: true)
!663 = !DIEnumerator(name: "FS_CONTEXT_CREATING", value: 1, isUnsigned: true)
!664 = !DIEnumerator(name: "FS_CONTEXT_AWAITING_MOUNT", value: 2, isUnsigned: true)
!665 = !DIEnumerator(name: "FS_CONTEXT_AWAITING_RECONF", value: 3, isUnsigned: true)
!666 = !DIEnumerator(name: "FS_CONTEXT_RECONF_PARAMS", value: 4, isUnsigned: true)
!667 = !DIEnumerator(name: "FS_CONTEXT_RECONFIGURING", value: 5, isUnsigned: true)
!668 = !DIEnumerator(name: "FS_CONTEXT_FAILED", value: 6, isUnsigned: true)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "need_free", scope: !305, file: !306, line: 110, baseType: !168, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !305, file: !306, line: 111, baseType: !168, size: 1, offset: 1169, flags: DIFlagBitField, extraData: i64 1152)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "oldapi", scope: !305, file: !306, line: 112, baseType: !168, size: 1, offset: 1170, flags: DIFlagBitField, extraData: i64 1152)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !296, file: !20, line: 2239, baseType: !673, size: 64, offset: 192)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !675)
!675 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !20, line: 70, flags: DIFlagFwdDecl)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !296, file: !20, line: 2240, baseType: !677, size: 64, offset: 256)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!678 = !DISubroutineType(types: !679)
!679 = !{!50, !295, !152, !135, !146}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !296, file: !20, line: 2242, baseType: !681, size: 64, offset: 320)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = !DISubroutineType(types: !683)
!683 = !{null, !281}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !296, file: !20, line: 2243, baseType: !639, size: 64, offset: 384)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !296, file: !20, line: 2244, baseType: !295, size: 64, offset: 448)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !296, file: !20, line: 2245, baseType: !687, size: 64, offset: 512)
!687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !12, line: 182, size: 64, elements: !688)
!688 = !{!689}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !687, file: !12, line: 183, baseType: !592, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !296, file: !20, line: 2247, baseType: !691, offset: 576)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !692, line: 187, elements: !393)
!692 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!693 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !296, file: !20, line: 2248, baseType: !691, offset: 576)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !296, file: !20, line: 2249, baseType: !691, offset: 576)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !296, file: !20, line: 2250, baseType: !696, offset: 576)
!696 = !DICompositeType(tag: DW_TAG_array_type, baseType: !691, elements: !697)
!697 = !{!698}
!698 = !DISubrange(count: 3)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !296, file: !20, line: 2252, baseType: !691, offset: 576)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !296, file: !20, line: 2253, baseType: !691, offset: 576)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !296, file: !20, line: 2254, baseType: !691, offset: 576)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !282, file: !20, line: 1423, baseType: !703, size: 64, offset: 384)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !705)
!705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !20, line: 1935, size: 1472, elements: !706)
!706 = !{!707, !711, !715, !716, !720, !726, !730, !731, !732, !736, !740, !741, !742, !743, !749, !754, !755, !798, !799, !800, !801, !2305, !2320}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !705, file: !20, line: 1936, baseType: !708, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DISubroutineType(types: !710)
!710 = !{!99, !281}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !705, file: !20, line: 1937, baseType: !712, size: 64, offset: 64)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = !DISubroutineType(types: !714)
!714 = !{null, !99}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !705, file: !20, line: 1938, baseType: !712, size: 64, offset: 128)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !705, file: !20, line: 1940, baseType: !717, size: 64, offset: 192)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DISubroutineType(types: !719)
!719 = !{null, !99, !152}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !705, file: !20, line: 1941, baseType: !721, size: 64, offset: 256)
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = !DISubroutineType(types: !723)
!723 = !{!152, !99, !724}
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !20, line: 289, flags: DIFlagFwdDecl)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !705, file: !20, line: 1942, baseType: !727, size: 64, offset: 320)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = !DISubroutineType(types: !729)
!729 = !{!152, !99}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !705, file: !20, line: 1943, baseType: !712, size: 64, offset: 384)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !705, file: !20, line: 1944, baseType: !681, size: 64, offset: 448)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !705, file: !20, line: 1945, baseType: !733, size: 64, offset: 512)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = !DISubroutineType(types: !735)
!735 = !{!152, !281, !152}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !705, file: !20, line: 1946, baseType: !737, size: 64, offset: 576)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = !DISubroutineType(types: !739)
!739 = !{!152, !281}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !705, file: !20, line: 1947, baseType: !737, size: 64, offset: 640)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !705, file: !20, line: 1948, baseType: !737, size: 64, offset: 704)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !705, file: !20, line: 1949, baseType: !737, size: 64, offset: 768)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !705, file: !20, line: 1950, baseType: !744, size: 64, offset: 832)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = !DISubroutineType(types: !746)
!746 = !{!152, !50, !747}
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !20, line: 57, flags: DIFlagFwdDecl)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !705, file: !20, line: 1951, baseType: !750, size: 64, offset: 896)
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = !DISubroutineType(types: !752)
!752 = !{!152, !281, !753, !163}
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !705, file: !20, line: 1952, baseType: !681, size: 64, offset: 960)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !705, file: !20, line: 1954, baseType: !756, size: 64, offset: 1024)
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!757 = !DISubroutineType(types: !758)
!758 = !{!152, !759, !50}
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !761, line: 16, size: 896, elements: !762)
!761 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!762 = !{!763, !764, !765, !766, !767, !768, !769, !770, !771, !793, !794, !797}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !760, file: !761, line: 17, baseType: !163, size: 64)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !760, file: !761, line: 18, baseType: !11, size: 64, offset: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !760, file: !761, line: 19, baseType: !11, size: 64, offset: 128)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !760, file: !761, line: 20, baseType: !11, size: 64, offset: 192)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !760, file: !761, line: 21, baseType: !11, size: 64, offset: 256)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !760, file: !761, line: 22, baseType: !209, size: 64, offset: 320)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !760, file: !761, line: 23, baseType: !209, size: 64, offset: 384)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !760, file: !761, line: 24, baseType: !367, size: 192, offset: 448)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !760, file: !761, line: 25, baseType: !772, size: 64, offset: 640)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !774)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !761, line: 31, size: 256, elements: !775)
!775 = !{!776, !781, !785, !789}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !774, file: !761, line: 32, baseType: !777, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DISubroutineType(types: !779)
!779 = !{!146, !759, !780}
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 64)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !774, file: !761, line: 33, baseType: !782, size: 64, offset: 64)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DISubroutineType(types: !784)
!784 = !{null, !759, !146}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !774, file: !761, line: 34, baseType: !786, size: 64, offset: 128)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = !DISubroutineType(types: !788)
!788 = !{!146, !759, !146, !780}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !774, file: !761, line: 35, baseType: !790, size: 64, offset: 192)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DISubroutineType(types: !792)
!792 = !{!152, !759, !146}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !760, file: !761, line: 26, baseType: !152, size: 32, offset: 704)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !760, file: !761, line: 27, baseType: !795, size: 64, offset: 768)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !19)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !760, file: !761, line: 28, baseType: !146, size: 64, offset: 832)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !705, file: !20, line: 1955, baseType: !756, size: 64, offset: 1088)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !705, file: !20, line: 1956, baseType: !756, size: 64, offset: 1152)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !705, file: !20, line: 1957, baseType: !756, size: 64, offset: 1216)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !705, file: !20, line: 1963, baseType: !802, size: 64, offset: 1280)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!803 = !DISubroutineType(types: !804)
!804 = !{!152, !281, !805, !828}
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !807, line: 68, size: 512, align: 128, elements: !808)
!807 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!808 = !{!809, !810, !2297, !2304}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !806, file: !807, line: 69, baseType: !16, size: 64)
!810 = !DIDerivedType(tag: DW_TAG_member, scope: !806, file: !807, line: 77, baseType: !811, size: 320, offset: 64)
!811 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !806, file: !807, line: 77, size: 320, elements: !812)
!812 = !{!813, !980, !985, !1013, !1021, !1027, !2221, !2296}
!813 = !DIDerivedType(tag: DW_TAG_member, scope: !811, file: !807, line: 78, baseType: !814, size: 320)
!814 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !811, file: !807, line: 78, size: 320, elements: !815)
!815 = !{!816, !817, !978, !979}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !814, file: !807, line: 84, baseType: !285, size: 128)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !814, file: !807, line: 86, baseType: !818, size: 64, offset: 128)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !20, line: 451, size: 1216, align: 64, elements: !820)
!820 = !{!821, !822, !830, !831, !832, !840, !841, !842, !843, !844, !971, !972, !975, !976, !977}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !819, file: !20, line: 452, baseType: !99, size: 64)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !819, file: !20, line: 453, baseType: !823, size: 128, offset: 64)
!823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !824, line: 292, size: 128, elements: !825)
!824 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!825 = !{!826, !827, !829}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !823, file: !824, line: 293, baseType: !379)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !823, file: !824, line: 295, baseType: !828, size: 32)
!828 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !12, line: 148, baseType: !55)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !823, file: !824, line: 296, baseType: !146, size: 64, offset: 64)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !819, file: !20, line: 454, baseType: !828, size: 32, offset: 192)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !819, file: !20, line: 455, baseType: !413, size: 32, offset: 224)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !819, file: !20, line: 460, baseType: !833, size: 128, offset: 256)
!833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !461, line: 125, size: 128, elements: !834)
!834 = !{!835, !839}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !833, file: !461, line: 126, baseType: !836, size: 64)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !461, line: 31, size: 64, elements: !837)
!837 = !{!838}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !836, file: !461, line: 32, baseType: !465, size: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !833, file: !461, line: 127, baseType: !465, size: 64, offset: 64)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !819, file: !20, line: 461, baseType: !468, size: 256, offset: 384)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !819, file: !20, line: 462, baseType: !16, size: 64, offset: 640)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !819, file: !20, line: 463, baseType: !16, size: 64, offset: 704)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !819, file: !20, line: 464, baseType: !16, size: 64, offset: 768)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !819, file: !20, line: 465, baseType: !845, size: 64, offset: 832)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !847)
!847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !20, line: 367, size: 1408, elements: !848)
!848 = !{!849, !853, !857, !861, !865, !869, !875, !881, !885, !890, !894, !898, !902, !928, !939, !945, !946, !947, !951, !956, !960, !967}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !847, file: !20, line: 368, baseType: !850, size: 64)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{!152, !805, !724}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !847, file: !20, line: 369, baseType: !854, size: 64, offset: 64)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = !DISubroutineType(types: !856)
!856 = !{!152, !18, !805}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !847, file: !20, line: 372, baseType: !858, size: 64, offset: 128)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = !DISubroutineType(types: !860)
!860 = !{!152, !818, !724}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !847, file: !20, line: 375, baseType: !862, size: 64, offset: 192)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!863 = !DISubroutineType(types: !864)
!864 = !{!152, !805}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !847, file: !20, line: 381, baseType: !866, size: 64, offset: 256)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = !DISubroutineType(types: !868)
!868 = !{!152, !18, !818, !288, !55}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !847, file: !20, line: 383, baseType: !870, size: 64, offset: 320)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!871 = !DISubroutineType(types: !872)
!872 = !{null, !873}
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !20, line: 290, flags: DIFlagFwdDecl)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !847, file: !20, line: 385, baseType: !876, size: 64, offset: 384)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!877 = !DISubroutineType(types: !878)
!878 = !{!152, !18, !818, !209, !55, !55, !879, !880}
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !847, file: !20, line: 388, baseType: !882, size: 64, offset: 448)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = !DISubroutineType(types: !884)
!884 = !{!152, !18, !818, !209, !55, !55, !805, !146}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !847, file: !20, line: 393, baseType: !886, size: 64, offset: 512)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = !DISubroutineType(types: !888)
!888 = !{!889, !818, !889}
!889 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !12, line: 125, baseType: !91)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !847, file: !20, line: 394, baseType: !891, size: 64, offset: 576)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = !DISubroutineType(types: !893)
!893 = !{null, !805, !55, !55}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !847, file: !20, line: 395, baseType: !895, size: 64, offset: 640)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DISubroutineType(types: !897)
!897 = !{!152, !805, !828}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !847, file: !20, line: 396, baseType: !899, size: 64, offset: 704)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!900 = !DISubroutineType(types: !901)
!901 = !{null, !805}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !847, file: !20, line: 397, baseType: !903, size: 64, offset: 768)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = !DISubroutineType(types: !905)
!905 = !{!257, !906, !926}
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !20, line: 320, size: 384, elements: !908)
!908 = !{!909, !910, !911, !915, !916, !917, !918, !919}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !907, file: !20, line: 321, baseType: !18, size: 64)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !907, file: !20, line: 326, baseType: !209, size: 64, offset: 64)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !907, file: !20, line: 327, baseType: !912, size: 64, offset: 128)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64)
!913 = !DISubroutineType(types: !914)
!914 = !{null, !906, !220, !220}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !907, file: !20, line: 328, baseType: !146, size: 64, offset: 192)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !907, file: !20, line: 329, baseType: !152, size: 32, offset: 256)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !907, file: !20, line: 330, baseType: !509, size: 16, offset: 288)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !907, file: !20, line: 331, baseType: !509, size: 16, offset: 304)
!919 = !DIDerivedType(tag: DW_TAG_member, scope: !907, file: !20, line: 332, baseType: !920, size: 64, offset: 320)
!920 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !907, file: !20, line: 332, size: 64, elements: !921)
!921 = !{!922, !923}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !920, file: !20, line: 333, baseType: !55, size: 32)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !920, file: !20, line: 334, baseType: !924, size: 64)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !20, line: 334, flags: DIFlagFwdDecl)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !20, line: 64, flags: DIFlagFwdDecl)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !847, file: !20, line: 402, baseType: !929, size: 64, offset: 832)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DISubroutineType(types: !931)
!931 = !{!152, !818, !805, !805, !932}
!932 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !933, line: 15, baseType: !55, size: 32, elements: !934)
!933 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!934 = !{!935, !936, !937, !938}
!935 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!936 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!937 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!938 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !847, file: !20, line: 404, baseType: !940, size: 64, offset: 896)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = !DISubroutineType(types: !942)
!942 = !{!168, !805, !943}
!943 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !944, line: 305, baseType: !55)
!944 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!945 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !847, file: !20, line: 405, baseType: !899, size: 64, offset: 960)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !847, file: !20, line: 406, baseType: !862, size: 64, offset: 1024)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !847, file: !20, line: 407, baseType: !948, size: 64, offset: 1088)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64)
!949 = !DISubroutineType(types: !950)
!950 = !{!152, !805, !16, !16}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !847, file: !20, line: 409, baseType: !952, size: 64, offset: 1152)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!953 = !DISubroutineType(types: !954)
!954 = !{null, !805, !955, !955}
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !847, file: !20, line: 410, baseType: !957, size: 64, offset: 1216)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!958 = !DISubroutineType(types: !959)
!959 = !{!152, !818, !805}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !847, file: !20, line: 413, baseType: !961, size: 64, offset: 1280)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = !DISubroutineType(types: !963)
!963 = !{!152, !964, !18, !966}
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64)
!965 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !20, line: 61, flags: DIFlagFwdDecl)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !847, file: !20, line: 415, baseType: !968, size: 64, offset: 1344)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = !DISubroutineType(types: !970)
!970 = !{null, !18}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !819, file: !20, line: 466, baseType: !16, size: 64, offset: 896)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !819, file: !20, line: 467, baseType: !973, size: 32, offset: 960)
!973 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !974, line: 8, baseType: !85)
!974 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!975 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !819, file: !20, line: 468, baseType: !379, offset: 992)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !819, file: !20, line: 469, baseType: !285, size: 128, offset: 1024)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !819, file: !20, line: 470, baseType: !146, size: 64, offset: 1152)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !814, file: !807, line: 87, baseType: !16, size: 64, offset: 192)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !814, file: !807, line: 94, baseType: !16, size: 64, offset: 256)
!980 = !DIDerivedType(tag: DW_TAG_member, scope: !811, file: !807, line: 96, baseType: !981, size: 64)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !811, file: !807, line: 96, size: 64, elements: !982)
!982 = !{!983}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !981, file: !807, line: 101, baseType: !984, size: 64)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !12, line: 143, baseType: !91)
!985 = !DIDerivedType(tag: DW_TAG_member, scope: !811, file: !807, line: 103, baseType: !986, size: 320)
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !811, file: !807, line: 103, size: 320, elements: !987)
!987 = !{!988, !998, !1001, !1002}
!988 = !DIDerivedType(tag: DW_TAG_member, scope: !986, file: !807, line: 104, baseType: !989, size: 128)
!989 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !986, file: !807, line: 104, size: 128, elements: !990)
!990 = !{!991, !992}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !989, file: !807, line: 105, baseType: !285, size: 128)
!992 = !DIDerivedType(tag: DW_TAG_member, scope: !989, file: !807, line: 106, baseType: !993, size: 128)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !989, file: !807, line: 106, size: 128, elements: !994)
!994 = !{!995, !996, !997}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !993, file: !807, line: 107, baseType: !805, size: 64)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !993, file: !807, line: 109, baseType: !152, size: 32, offset: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !993, file: !807, line: 110, baseType: !152, size: 32, offset: 96)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !986, file: !807, line: 117, baseType: !999, size: 64, offset: 128)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64)
!1000 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !807, line: 117, flags: DIFlagFwdDecl)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !986, file: !807, line: 119, baseType: !146, size: 64, offset: 192)
!1002 = !DIDerivedType(tag: DW_TAG_member, scope: !986, file: !807, line: 120, baseType: !1003, size: 64, offset: 256)
!1003 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !986, file: !807, line: 120, size: 64, elements: !1004)
!1004 = !{!1005, !1006, !1007}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1003, file: !807, line: 121, baseType: !146, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1003, file: !807, line: 122, baseType: !16, size: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, scope: !1003, file: !807, line: 123, baseType: !1008, size: 32)
!1008 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1003, file: !807, line: 123, size: 32, elements: !1009)
!1009 = !{!1010, !1011, !1012}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1008, file: !807, line: 124, baseType: !55, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1008, file: !807, line: 125, baseType: !55, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1008, file: !807, line: 126, baseType: !55, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1013 = !DIDerivedType(tag: DW_TAG_member, scope: !811, file: !807, line: 130, baseType: !1014, size: 192)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !811, file: !807, line: 130, size: 192, elements: !1015)
!1015 = !{!1016, !1017, !1018, !1019, !1020}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1014, file: !807, line: 131, baseType: !16, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1014, file: !807, line: 134, baseType: !97, size: 8, offset: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1014, file: !807, line: 135, baseType: !97, size: 8, offset: 72)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1014, file: !807, line: 136, baseType: !413, size: 32, offset: 96)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1014, file: !807, line: 137, baseType: !55, size: 32, offset: 128)
!1021 = !DIDerivedType(tag: DW_TAG_member, scope: !811, file: !807, line: 139, baseType: !1022, size: 256)
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !811, file: !807, line: 139, size: 256, elements: !1023)
!1023 = !{!1024, !1025, !1026}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1022, file: !807, line: 140, baseType: !16, size: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1022, file: !807, line: 141, baseType: !413, size: 32, offset: 64)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1022, file: !807, line: 143, baseType: !285, size: 128, offset: 128)
!1027 = !DIDerivedType(tag: DW_TAG_member, scope: !811, file: !807, line: 145, baseType: !1028, size: 256)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !811, file: !807, line: 145, size: 256, elements: !1029)
!1029 = !{!1030, !1031, !1034, !1035, !2220}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1028, file: !807, line: 146, baseType: !16, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1028, file: !807, line: 147, baseType: !1032, size: 64, offset: 64)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1033, line: 509, baseType: !805)
!1033 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1028, file: !807, line: 148, baseType: !16, size: 64, offset: 128)
!1035 = !DIDerivedType(tag: DW_TAG_member, scope: !1028, file: !807, line: 149, baseType: !1036, size: 64, offset: 192)
!1036 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1028, file: !807, line: 149, size: 64, elements: !1037)
!1037 = !{!1038, !2219}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1036, file: !807, line: 150, baseType: !1039, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !807, line: 388, size: 7296, elements: !1041)
!1041 = !{!1042, !2217}
!1042 = !DIDerivedType(tag: DW_TAG_member, scope: !1040, file: !807, line: 389, baseType: !1043, size: 7296)
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1040, file: !807, line: 389, size: 7296, elements: !1044)
!1044 = !{!1045, !1169, !1170, !1171, !1175, !1176, !1177, !1178, !1179, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1220, !1226, !1229, !1268, !1269, !2201, !2202, !2205, !2206, !2207, !2210, !2211, !2212, !2215, !2216}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1043, file: !807, line: 390, baseType: !1046, size: 64)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64)
!1047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !807, line: 305, size: 1472, elements: !1048)
!1048 = !{!1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1063, !1064, !1069, !1070, !1073, !1163, !1164, !1165, !1166, !1167}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1047, file: !807, line: 308, baseType: !16, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1047, file: !807, line: 309, baseType: !16, size: 64, offset: 64)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1047, file: !807, line: 313, baseType: !1046, size: 64, offset: 128)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1047, file: !807, line: 313, baseType: !1046, size: 64, offset: 192)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1047, file: !807, line: 315, baseType: !460, size: 192, align: 64, offset: 256)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1047, file: !807, line: 323, baseType: !16, size: 64, offset: 448)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1047, file: !807, line: 327, baseType: !1039, size: 64, offset: 512)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1047, file: !807, line: 333, baseType: !1057, size: 64, offset: 576)
!1057 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1033, line: 284, baseType: !1058)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1033, line: 284, size: 64, elements: !1059)
!1059 = !{!1060}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1058, file: !1033, line: 284, baseType: !1061, size: 64)
!1061 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1062, line: 19, baseType: !16)
!1062 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1047, file: !807, line: 334, baseType: !16, size: 64, offset: 640)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1047, file: !807, line: 343, baseType: !1065, size: 256, offset: 704)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1047, file: !807, line: 340, size: 256, elements: !1066)
!1066 = !{!1067, !1068}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1065, file: !807, line: 341, baseType: !460, size: 192, align: 64)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1065, file: !807, line: 342, baseType: !16, size: 64, offset: 192)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1047, file: !807, line: 351, baseType: !285, size: 128, offset: 960)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1047, file: !807, line: 353, baseType: !1071, size: 64, offset: 1088)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !807, line: 353, flags: DIFlagFwdDecl)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1047, file: !807, line: 356, baseType: !1074, size: 64, offset: 1152)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1076)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !1077, line: 557, size: 832, elements: !1078)
!1077 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!1078 = !{!1079, !1083, !1084, !1088, !1092, !1132, !1141, !1145, !1149, !1150, !1151, !1155, !1159}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1076, file: !1077, line: 558, baseType: !1080, size: 64)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{null, !1046}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1076, file: !1077, line: 559, baseType: !1080, size: 64, offset: 64)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1076, file: !1077, line: 560, baseType: !1085, size: 64, offset: 128)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!152, !1046, !16}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1076, file: !1077, line: 561, baseType: !1089, size: 64, offset: 192)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!152, !1046}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1076, file: !1077, line: 562, baseType: !1093, size: 64, offset: 256)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!1094 = !DISubroutineType(types: !1095)
!1095 = !{!1096, !1097}
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !807, line: 682, baseType: !55)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !1077, line: 508, size: 768, elements: !1099)
!1099 = !{!1100, !1101, !1102, !1103, !1104, !1105, !1112, !1119, !1125, !1126, !1127, !1129, !1131}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1098, file: !1077, line: 509, baseType: !1046, size: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1098, file: !1077, line: 510, baseType: !55, size: 32, offset: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1098, file: !1077, line: 511, baseType: !828, size: 32, offset: 96)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1098, file: !1077, line: 512, baseType: !16, size: 64, offset: 128)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1098, file: !1077, line: 513, baseType: !16, size: 64, offset: 192)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1098, file: !1077, line: 514, baseType: !1106, size: 64, offset: 256)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1033, line: 385, baseType: !1108)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1033, line: 385, size: 64, elements: !1109)
!1109 = !{!1110}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1108, file: !1033, line: 385, baseType: !1111, size: 64)
!1111 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1062, line: 15, baseType: !16)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1098, file: !1077, line: 516, baseType: !1113, size: 64, offset: 320)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1033, line: 359, baseType: !1115)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1033, line: 359, size: 64, elements: !1116)
!1116 = !{!1117}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1115, file: !1033, line: 359, baseType: !1118, size: 64)
!1118 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1062, line: 16, baseType: !16)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1098, file: !1077, line: 519, baseType: !1120, size: 64, offset: 384)
!1120 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1062, line: 21, baseType: !1121)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1062, line: 21, size: 64, elements: !1122)
!1122 = !{!1123}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1121, file: !1062, line: 21, baseType: !1124, size: 64)
!1124 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1062, line: 14, baseType: !16)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1098, file: !1077, line: 521, baseType: !805, size: 64, offset: 448)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1098, file: !1077, line: 522, baseType: !805, size: 64, offset: 512)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1098, file: !1077, line: 528, baseType: !1128, size: 64, offset: 576)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1098, file: !1077, line: 532, baseType: !1130, size: 64, offset: 640)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1098, file: !1077, line: 536, baseType: !1032, size: 64, offset: 704)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1076, file: !1077, line: 563, baseType: !1133, size: 64, offset: 320)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64)
!1134 = !DISubroutineType(types: !1135)
!1135 = !{!1096, !1097, !1136}
!1136 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !1077, line: 546, baseType: !55, size: 32, elements: !1137)
!1137 = !{!1138, !1139, !1140}
!1138 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!1139 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!1140 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1076, file: !1077, line: 565, baseType: !1142, size: 64, offset: 384)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{null, !1097, !16, !16}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1076, file: !1077, line: 567, baseType: !1146, size: 64, offset: 448)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64)
!1147 = !DISubroutineType(types: !1148)
!1148 = !{!16, !1046}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1076, file: !1077, line: 571, baseType: !1093, size: 64, offset: 512)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1076, file: !1077, line: 574, baseType: !1093, size: 64, offset: 576)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1076, file: !1077, line: 579, baseType: !1152, size: 64, offset: 640)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 64)
!1153 = !DISubroutineType(types: !1154)
!1154 = !{!152, !1046, !16, !146, !152, !152}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1076, file: !1077, line: 585, baseType: !1156, size: 64, offset: 704)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = !DISubroutineType(types: !1158)
!1158 = !{!135, !1046}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1076, file: !1077, line: 615, baseType: !1160, size: 64, offset: 768)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 64)
!1161 = !DISubroutineType(types: !1162)
!1162 = !{!805, !1046, !16}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1047, file: !807, line: 359, baseType: !16, size: 64, offset: 1216)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1047, file: !807, line: 361, baseType: !18, size: 64, offset: 1280)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1047, file: !807, line: 362, baseType: !146, size: 64, offset: 1344)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1047, file: !807, line: 365, baseType: !371, size: 64, offset: 1408)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1047, file: !807, line: 373, baseType: !1168, offset: 1472)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !807, line: 296, elements: !393)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1043, file: !807, line: 391, baseType: !836, size: 64, offset: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1043, file: !807, line: 392, baseType: !91, size: 64, offset: 128)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1043, file: !807, line: 394, baseType: !1172, size: 64, offset: 192)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = !DISubroutineType(types: !1174)
!1174 = !{!16, !18, !16, !16, !16, !16}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1043, file: !807, line: 398, baseType: !16, size: 64, offset: 256)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1043, file: !807, line: 399, baseType: !16, size: 64, offset: 320)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1043, file: !807, line: 405, baseType: !16, size: 64, offset: 384)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1043, file: !807, line: 406, baseType: !16, size: 64, offset: 448)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1043, file: !807, line: 407, baseType: !1180, size: 64, offset: 512)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1033, line: 286, baseType: !1182)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1033, line: 286, size: 64, elements: !1183)
!1183 = !{!1184}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1182, file: !1033, line: 286, baseType: !1185, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1062, line: 18, baseType: !16)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1043, file: !807, line: 416, baseType: !413, size: 32, offset: 576)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1043, file: !807, line: 428, baseType: !413, size: 32, offset: 608)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1043, file: !807, line: 437, baseType: !413, size: 32, offset: 640)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1043, file: !807, line: 447, baseType: !413, size: 32, offset: 672)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1043, file: !807, line: 450, baseType: !371, size: 64, offset: 704)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1043, file: !807, line: 452, baseType: !152, size: 32, offset: 768)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1043, file: !807, line: 454, baseType: !379, offset: 800)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1043, file: !807, line: 457, baseType: !468, size: 256, offset: 832)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1043, file: !807, line: 459, baseType: !285, size: 128, offset: 1088)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1043, file: !807, line: 466, baseType: !16, size: 64, offset: 1216)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1043, file: !807, line: 467, baseType: !16, size: 64, offset: 1280)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1043, file: !807, line: 469, baseType: !16, size: 64, offset: 1344)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1043, file: !807, line: 470, baseType: !16, size: 64, offset: 1408)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1043, file: !807, line: 471, baseType: !373, size: 64, offset: 1472)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1043, file: !807, line: 472, baseType: !16, size: 64, offset: 1536)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1043, file: !807, line: 473, baseType: !16, size: 64, offset: 1600)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1043, file: !807, line: 474, baseType: !16, size: 64, offset: 1664)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1043, file: !807, line: 475, baseType: !16, size: 64, offset: 1728)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1043, file: !807, line: 477, baseType: !379, offset: 1792)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1043, file: !807, line: 478, baseType: !16, size: 64, offset: 1792)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1043, file: !807, line: 478, baseType: !16, size: 64, offset: 1856)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1043, file: !807, line: 478, baseType: !16, size: 64, offset: 1920)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1043, file: !807, line: 478, baseType: !16, size: 64, offset: 1984)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1043, file: !807, line: 479, baseType: !16, size: 64, offset: 2048)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1043, file: !807, line: 479, baseType: !16, size: 64, offset: 2112)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1043, file: !807, line: 479, baseType: !16, size: 64, offset: 2176)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1043, file: !807, line: 480, baseType: !16, size: 64, offset: 2240)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1043, file: !807, line: 480, baseType: !16, size: 64, offset: 2304)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1043, file: !807, line: 480, baseType: !16, size: 64, offset: 2368)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1043, file: !807, line: 480, baseType: !16, size: 64, offset: 2432)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1043, file: !807, line: 482, baseType: !1217, size: 2816, offset: 2496)
!1217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 2816, elements: !1218)
!1218 = !{!1219}
!1219 = !DISubrange(count: 44)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1043, file: !807, line: 488, baseType: !1221, size: 256, offset: 5312)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1222, line: 60, size: 256, elements: !1223)
!1222 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1223 = !{!1224}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1221, file: !1222, line: 61, baseType: !1225, size: 256)
!1225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 256, elements: !544)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1043, file: !807, line: 490, baseType: !1227, size: 64, offset: 5568)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !807, line: 490, flags: DIFlagFwdDecl)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1043, file: !807, line: 493, baseType: !1230, size: 896, offset: 5632)
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1231, line: 53, baseType: !1232)
!1231 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1231, line: 13, size: 896, elements: !1233)
!1233 = !{!1234, !1235, !1236, !1237, !1240, !1241, !1242, !1243, !1263, !1264, !1265}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1232, file: !1231, line: 18, baseType: !91, size: 64)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1232, file: !1231, line: 28, baseType: !373, size: 64, offset: 64)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1232, file: !1231, line: 31, baseType: !468, size: 256, offset: 128)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1232, file: !1231, line: 32, baseType: !1238, size: 64, offset: 384)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!1239 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1231, line: 32, flags: DIFlagFwdDecl)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1232, file: !1231, line: 37, baseType: !104, size: 16, offset: 448)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1232, file: !1231, line: 40, baseType: !367, size: 192, offset: 512)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1232, file: !1231, line: 41, baseType: !146, size: 64, offset: 704)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1232, file: !1231, line: 42, baseType: !1244, size: 64, offset: 768)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!1245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1246)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1247, line: 13, size: 896, elements: !1248)
!1247 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1248 = !{!1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1246, file: !1247, line: 14, baseType: !146, size: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1246, file: !1247, line: 15, baseType: !16, size: 64, offset: 64)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1246, file: !1247, line: 17, baseType: !16, size: 64, offset: 128)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1246, file: !1247, line: 17, baseType: !16, size: 64, offset: 192)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1246, file: !1247, line: 19, baseType: !220, size: 64, offset: 256)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1246, file: !1247, line: 21, baseType: !220, size: 64, offset: 320)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1246, file: !1247, line: 22, baseType: !220, size: 64, offset: 384)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1246, file: !1247, line: 23, baseType: !220, size: 64, offset: 448)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1246, file: !1247, line: 24, baseType: !220, size: 64, offset: 512)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1246, file: !1247, line: 25, baseType: !220, size: 64, offset: 576)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1246, file: !1247, line: 26, baseType: !220, size: 64, offset: 640)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1246, file: !1247, line: 27, baseType: !220, size: 64, offset: 704)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1246, file: !1247, line: 28, baseType: !220, size: 64, offset: 768)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1246, file: !1247, line: 29, baseType: !220, size: 64, offset: 832)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1232, file: !1231, line: 44, baseType: !413, size: 32, offset: 832)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1232, file: !1231, line: 50, baseType: !509, size: 16, offset: 864)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1232, file: !1231, line: 51, baseType: !1266, size: 16, offset: 880)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !86, line: 18, baseType: !1267)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !88, line: 23, baseType: !493)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1043, file: !807, line: 495, baseType: !16, size: 64, offset: 6528)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1043, file: !807, line: 497, baseType: !1270, size: 64, offset: 6592)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !807, line: 381, size: 384, elements: !1272)
!1272 = !{!1273, !1274, !2200}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1271, file: !807, line: 382, baseType: !413, size: 32)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1271, file: !807, line: 383, baseType: !1275, size: 128, offset: 64)
!1275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !807, line: 376, size: 128, elements: !1276)
!1276 = !{!1277, !2198}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1275, file: !807, line: 377, baseType: !1278, size: 64)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64)
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1280, line: 640, size: 48640, elements: !1281)
!1280 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1281 = !{!1282, !1288, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1303, !1321, !1332, !1418, !1419, !1420, !1431, !1432, !1434, !1435, !1436, !1437, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1525, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1564, !1566, !1567, !1568, !1580, !1581, !1582, !1583, !1584, !1585, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1609, !1614, !1615, !1616, !1617, !1618, !1622, !1625, !1628, !1631, !1634, !1637, !1738, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1786, !1787, !1788, !1789, !1790, !1795, !1796, !1797, !1800, !1801, !1804, !1807, !1810, !1813, !1856, !1859, !1860, !1939, !1940, !1943, !1944, !1947, !1948, !1949, !1953, !1954, !1955, !1968, !1969, !1970, !1980, !1985, !1988, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1279, file: !1280, line: 646, baseType: !1283, size: 128)
!1283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1284, line: 56, size: 128, elements: !1285)
!1284 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1285 = !{!1286, !1287}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1283, file: !1284, line: 57, baseType: !16, size: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1283, file: !1284, line: 58, baseType: !85, size: 32, offset: 64)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1279, file: !1280, line: 649, baseType: !1289, size: 64, offset: 128)
!1289 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !220)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1279, file: !1280, line: 657, baseType: !146, size: 64, offset: 192)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1279, file: !1280, line: 658, baseType: !445, size: 32, offset: 256)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1279, file: !1280, line: 660, baseType: !55, size: 32, offset: 288)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1279, file: !1280, line: 661, baseType: !55, size: 32, offset: 320)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1279, file: !1280, line: 684, baseType: !152, size: 32, offset: 352)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1279, file: !1280, line: 686, baseType: !152, size: 32, offset: 384)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1279, file: !1280, line: 687, baseType: !152, size: 32, offset: 416)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1279, file: !1280, line: 688, baseType: !152, size: 32, offset: 448)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1279, file: !1280, line: 689, baseType: !55, size: 32, offset: 480)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1279, file: !1280, line: 691, baseType: !1300, size: 64, offset: 512)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64)
!1301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1302)
!1302 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1280, line: 691, flags: DIFlagFwdDecl)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1279, file: !1280, line: 692, baseType: !1304, size: 832, offset: 576)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1280, line: 451, size: 832, elements: !1305)
!1305 = !{!1306, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1304, file: !1280, line: 453, baseType: !1307, size: 128)
!1307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1280, line: 325, size: 128, elements: !1308)
!1308 = !{!1309, !1310}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1307, file: !1280, line: 326, baseType: !16, size: 64)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1307, file: !1280, line: 327, baseType: !85, size: 32, offset: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1304, file: !1280, line: 454, baseType: !460, size: 192, align: 64, offset: 128)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1304, file: !1280, line: 455, baseType: !285, size: 128, offset: 320)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1304, file: !1280, line: 456, baseType: !55, size: 32, offset: 448)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1304, file: !1280, line: 458, baseType: !91, size: 64, offset: 512)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1304, file: !1280, line: 459, baseType: !91, size: 64, offset: 576)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1304, file: !1280, line: 460, baseType: !91, size: 64, offset: 640)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1304, file: !1280, line: 461, baseType: !91, size: 64, offset: 704)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1304, file: !1280, line: 463, baseType: !91, size: 64, offset: 768)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1304, file: !1280, line: 465, baseType: !1320, offset: 832)
!1320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1280, line: 415, elements: !393)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1279, file: !1280, line: 693, baseType: !1322, size: 384, offset: 1408)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1280, line: 489, size: 384, elements: !1323)
!1323 = !{!1324, !1325, !1326, !1327, !1328, !1329, !1330}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1322, file: !1280, line: 490, baseType: !285, size: 128)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1322, file: !1280, line: 491, baseType: !16, size: 64, offset: 128)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1322, file: !1280, line: 492, baseType: !16, size: 64, offset: 192)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1322, file: !1280, line: 493, baseType: !55, size: 32, offset: 256)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1322, file: !1280, line: 494, baseType: !104, size: 16, offset: 288)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1322, file: !1280, line: 495, baseType: !104, size: 16, offset: 304)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1322, file: !1280, line: 497, baseType: !1331, size: 64, offset: 320)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1279, file: !1280, line: 697, baseType: !1333, size: 1792, offset: 1792)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1280, line: 507, size: 1792, elements: !1334)
!1334 = !{!1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1415, !1416}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1333, file: !1280, line: 508, baseType: !460, size: 192, align: 64)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1333, file: !1280, line: 515, baseType: !91, size: 64, offset: 192)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1333, file: !1280, line: 516, baseType: !91, size: 64, offset: 256)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1333, file: !1280, line: 517, baseType: !91, size: 64, offset: 320)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1333, file: !1280, line: 518, baseType: !91, size: 64, offset: 384)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1333, file: !1280, line: 519, baseType: !91, size: 64, offset: 448)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1333, file: !1280, line: 526, baseType: !377, size: 64, offset: 512)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1333, file: !1280, line: 527, baseType: !91, size: 64, offset: 576)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1333, file: !1280, line: 528, baseType: !55, size: 32, offset: 640)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1333, file: !1280, line: 554, baseType: !55, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1333, file: !1280, line: 555, baseType: !55, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1333, file: !1280, line: 556, baseType: !55, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1333, file: !1280, line: 557, baseType: !55, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1333, file: !1280, line: 563, baseType: !1349, size: 512, offset: 704)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !1350, line: 118, size: 512, elements: !1351)
!1350 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!1351 = !{!1352, !1360, !1361, !1370, !1411, !1412, !1413, !1414}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1349, file: !1350, line: 119, baseType: !1353, size: 256)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1354, line: 9, size: 256, elements: !1355)
!1354 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1355 = !{!1356, !1357}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1353, file: !1354, line: 10, baseType: !460, size: 192, align: 64)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1353, file: !1354, line: 11, baseType: !1358, size: 64, offset: 192)
!1358 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1359, line: 29, baseType: !377)
!1359 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1349, file: !1350, line: 120, baseType: !1358, size: 64, offset: 256)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1349, file: !1350, line: 121, baseType: !1362, size: 64, offset: 320)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64)
!1363 = !DISubroutineType(types: !1364)
!1364 = !{!1365, !1369}
!1365 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !1350, line: 65, baseType: !55, size: 32, elements: !1366)
!1366 = !{!1367, !1368}
!1367 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!1368 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1349, file: !1350, line: 122, baseType: !1371, size: 64, offset: 384)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !1350, line: 159, size: 512, align: 512, elements: !1373)
!1373 = !{!1374, !1392, !1393, !1396, !1401, !1402, !1406, !1410}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1372, file: !1350, line: 160, baseType: !1375, size: 64)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !1350, line: 214, size: 4608, align: 512, elements: !1377)
!1377 = !{!1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1376, file: !1350, line: 215, baseType: !474)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1376, file: !1350, line: 216, baseType: !55, size: 32)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1376, file: !1350, line: 217, baseType: !55, size: 32, offset: 32)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1376, file: !1350, line: 218, baseType: !55, size: 32, offset: 64)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1376, file: !1350, line: 219, baseType: !55, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1376, file: !1350, line: 220, baseType: !55, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1376, file: !1350, line: 221, baseType: !55, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1376, file: !1350, line: 222, baseType: !55, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1376, file: !1350, line: 233, baseType: !1358, size: 64, offset: 128)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1376, file: !1350, line: 234, baseType: !1369, size: 64, offset: 192)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1376, file: !1350, line: 235, baseType: !1358, size: 64, offset: 256)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1376, file: !1350, line: 236, baseType: !1369, size: 64, offset: 320)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1376, file: !1350, line: 237, baseType: !1391, size: 4096, offset: 512)
!1391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1372, size: 4096, elements: !644)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1372, file: !1350, line: 161, baseType: !55, size: 32, offset: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1372, file: !1350, line: 162, baseType: !1394, size: 32, offset: 96)
!1394 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !12, line: 27, baseType: !1395)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !14, line: 96, baseType: !152)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1372, file: !1350, line: 163, baseType: !1397, size: 32, offset: 128)
!1397 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !58, line: 276, baseType: !1398)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !58, line: 276, size: 32, elements: !1399)
!1399 = !{!1400}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1398, file: !58, line: 276, baseType: !62, size: 32)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1372, file: !1350, line: 164, baseType: !1369, size: 64, offset: 192)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1372, file: !1350, line: 165, baseType: !1403, size: 128, offset: 256)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1354, line: 14, size: 128, elements: !1404)
!1404 = !{!1405}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1403, file: !1354, line: 15, baseType: !833, size: 128)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1372, file: !1350, line: 166, baseType: !1407, size: 64, offset: 384)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1408 = !DISubroutineType(types: !1409)
!1409 = !{!1358}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1372, file: !1350, line: 167, baseType: !1358, size: 64, offset: 448)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1349, file: !1350, line: 123, baseType: !634, size: 8, offset: 448)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1349, file: !1350, line: 124, baseType: !634, size: 8, offset: 456)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1349, file: !1350, line: 125, baseType: !634, size: 8, offset: 464)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1349, file: !1350, line: 126, baseType: !634, size: 8, offset: 472)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1333, file: !1280, line: 572, baseType: !1349, size: 512, offset: 1216)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1333, file: !1280, line: 580, baseType: !1417, size: 64, offset: 1728)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1279, file: !1280, line: 721, baseType: !55, size: 32, offset: 3584)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1279, file: !1280, line: 722, baseType: !152, size: 32, offset: 3616)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1279, file: !1280, line: 723, baseType: !1421, size: 64, offset: 3648)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 64)
!1422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1423)
!1423 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1424, line: 17, baseType: !1425)
!1424 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1424, line: 17, size: 64, elements: !1426)
!1426 = !{!1427}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1425, file: !1424, line: 17, baseType: !1428, size: 64)
!1428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 64, elements: !1429)
!1429 = !{!1430}
!1430 = !DISubrange(count: 1)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1279, file: !1280, line: 724, baseType: !1423, size: 64, offset: 3712)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1279, file: !1280, line: 749, baseType: !1433, offset: 3776)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1280, line: 290, elements: !393)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1279, file: !1280, line: 751, baseType: !285, size: 128, offset: 3776)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1279, file: !1280, line: 757, baseType: !1039, size: 64, offset: 3904)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1279, file: !1280, line: 758, baseType: !1039, size: 64, offset: 3968)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1279, file: !1280, line: 761, baseType: !1438, size: 320, offset: 4032)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1222, line: 34, size: 320, elements: !1439)
!1439 = !{!1440, !1441}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1438, file: !1222, line: 35, baseType: !91, size: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1438, file: !1222, line: 36, baseType: !1442, size: 256, offset: 64)
!1442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1046, size: 256, elements: !544)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1279, file: !1280, line: 766, baseType: !152, size: 32, offset: 4352)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1279, file: !1280, line: 767, baseType: !152, size: 32, offset: 4384)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1279, file: !1280, line: 768, baseType: !152, size: 32, offset: 4416)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1279, file: !1280, line: 770, baseType: !152, size: 32, offset: 4448)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1279, file: !1280, line: 772, baseType: !16, size: 64, offset: 4480)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1279, file: !1280, line: 775, baseType: !55, size: 32, offset: 4544)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1279, file: !1280, line: 778, baseType: !55, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1279, file: !1280, line: 779, baseType: !55, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1279, file: !1280, line: 780, baseType: !55, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1279, file: !1280, line: 803, baseType: !55, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1279, file: !1280, line: 806, baseType: !55, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1279, file: !1280, line: 807, baseType: !55, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1279, file: !1280, line: 809, baseType: !55, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1279, file: !1280, line: 815, baseType: !55, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1279, file: !1280, line: 831, baseType: !16, size: 64, offset: 4672)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1279, file: !1280, line: 833, baseType: !1459, size: 384, offset: 4736)
!1459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !1460, line: 25, size: 384, elements: !1461)
!1460 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!1461 = !{!1462, !1467}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1459, file: !1460, line: 26, baseType: !1463, size: 64)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64)
!1464 = !DISubroutineType(types: !1465)
!1465 = !{!220, !1466}
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 64)
!1467 = !DIDerivedType(tag: DW_TAG_member, scope: !1459, file: !1460, line: 27, baseType: !1468, size: 320, offset: 64)
!1468 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1459, file: !1460, line: 27, size: 320, elements: !1469)
!1469 = !{!1470, !1480, !1510}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1468, file: !1460, line: 36, baseType: !1471, size: 320)
!1471 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1468, file: !1460, line: 29, size: 320, elements: !1472)
!1472 = !{!1473, !1475, !1476, !1477, !1478, !1479}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1471, file: !1460, line: 30, baseType: !1474, size: 64)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 64)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1471, file: !1460, line: 31, baseType: !85, size: 32, offset: 64)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1471, file: !1460, line: 32, baseType: !85, size: 32, offset: 96)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1471, file: !1460, line: 33, baseType: !85, size: 32, offset: 128)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1471, file: !1460, line: 34, baseType: !91, size: 64, offset: 192)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1471, file: !1460, line: 35, baseType: !1474, size: 64, offset: 256)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1468, file: !1460, line: 46, baseType: !1481, size: 192)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1468, file: !1460, line: 38, size: 192, elements: !1482)
!1482 = !{!1483, !1484, !1490, !1509}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1481, file: !1460, line: 39, baseType: !1394, size: 32)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1481, file: !1460, line: 40, baseType: !1485, size: 32, offset: 32)
!1485 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !1460, line: 16, baseType: !55, size: 32, elements: !1486)
!1486 = !{!1487, !1488, !1489}
!1487 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!1488 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!1489 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!1490 = !DIDerivedType(tag: DW_TAG_member, scope: !1481, file: !1460, line: 41, baseType: !1491, size: 64, offset: 64)
!1491 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1481, file: !1460, line: 41, size: 64, elements: !1492)
!1492 = !{!1493, !1501}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1491, file: !1460, line: 42, baseType: !1494, size: 64)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1496, line: 7, size: 128, elements: !1497)
!1496 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1497 = !{!1498, !1500}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1495, file: !1496, line: 8, baseType: !1499, size: 64)
!1499 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !14, line: 93, baseType: !211)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1495, file: !1496, line: 9, baseType: !211, size: 64, offset: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1491, file: !1460, line: 43, baseType: !1502, size: 64)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 64)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1504, line: 7, size: 64, elements: !1505)
!1504 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1505 = !{!1506, !1508}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1503, file: !1504, line: 8, baseType: !1507, size: 32)
!1507 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1504, line: 5, baseType: !453)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1503, file: !1504, line: 9, baseType: !453, size: 32, offset: 32)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1481, file: !1460, line: 45, baseType: !91, size: 64, offset: 128)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1468, file: !1460, line: 54, baseType: !1511, size: 256)
!1511 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1468, file: !1460, line: 48, size: 256, elements: !1512)
!1512 = !{!1513, !1521, !1522, !1523, !1524}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1511, file: !1460, line: 49, baseType: !1514, size: 64)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1516, line: 36, size: 64, elements: !1517)
!1516 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!1517 = !{!1518, !1519, !1520}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1515, file: !1516, line: 37, baseType: !152, size: 32)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1515, file: !1516, line: 38, baseType: !493, size: 16, offset: 32)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1515, file: !1516, line: 39, baseType: !493, size: 16, offset: 48)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1511, file: !1460, line: 50, baseType: !152, size: 32, offset: 64)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1511, file: !1460, line: 51, baseType: !152, size: 32, offset: 96)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1511, file: !1460, line: 52, baseType: !16, size: 64, offset: 128)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1511, file: !1460, line: 53, baseType: !16, size: 64, offset: 192)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1279, file: !1280, line: 835, baseType: !1526, size: 32, offset: 5120)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !12, line: 22, baseType: !1527)
!1527 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !14, line: 28, baseType: !152)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1279, file: !1280, line: 836, baseType: !1526, size: 32, offset: 5152)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1279, file: !1280, line: 840, baseType: !16, size: 64, offset: 5184)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1279, file: !1280, line: 849, baseType: !1278, size: 64, offset: 5248)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1279, file: !1280, line: 852, baseType: !1278, size: 64, offset: 5312)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1279, file: !1280, line: 857, baseType: !285, size: 128, offset: 5376)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1279, file: !1280, line: 858, baseType: !285, size: 128, offset: 5504)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1279, file: !1280, line: 859, baseType: !1278, size: 64, offset: 5632)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1279, file: !1280, line: 867, baseType: !285, size: 128, offset: 5696)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1279, file: !1280, line: 868, baseType: !285, size: 128, offset: 5824)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1279, file: !1280, line: 871, baseType: !1538, size: 64, offset: 5952)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !1540, line: 59, size: 768, elements: !1541)
!1540 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!1541 = !{!1542, !1543, !1544, !1545, !1547, !1548, !1555, !1556}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1539, file: !1540, line: 61, baseType: !445, size: 32)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1539, file: !1540, line: 62, baseType: !55, size: 32, offset: 32)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1539, file: !1540, line: 63, baseType: !379, offset: 64)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1539, file: !1540, line: 65, baseType: !1546, size: 256, offset: 64)
!1546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !687, size: 256, elements: !544)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1539, file: !1540, line: 66, baseType: !687, size: 64, offset: 320)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1539, file: !1540, line: 68, baseType: !1549, size: 128, offset: 384)
!1549 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1550, line: 40, baseType: !1551)
!1550 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1550, line: 36, size: 128, elements: !1552)
!1552 = !{!1553, !1554}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1551, file: !1550, line: 37, baseType: !379)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1551, file: !1550, line: 38, baseType: !285, size: 128)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1539, file: !1540, line: 69, baseType: !32, size: 128, align: 64, offset: 512)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1539, file: !1540, line: 70, baseType: !1557, size: 128, offset: 640)
!1557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1558, size: 128, elements: !1429)
!1558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !1540, line: 54, size: 128, elements: !1559)
!1559 = !{!1560, !1561}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1558, file: !1540, line: 55, baseType: !152, size: 32)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1558, file: !1540, line: 56, baseType: !1562, size: 64, offset: 64)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 64)
!1563 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !1540, line: 56, flags: DIFlagFwdDecl)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1279, file: !1280, line: 872, baseType: !1565, size: 512, offset: 6016)
!1565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !589, size: 512, elements: !544)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1279, file: !1280, line: 873, baseType: !285, size: 128, offset: 6528)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1279, file: !1280, line: 874, baseType: !285, size: 128, offset: 6656)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1279, file: !1280, line: 876, baseType: !1569, size: 64, offset: 6784)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64)
!1570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1571, line: 26, size: 192, elements: !1572)
!1571 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1572 = !{!1573, !1574}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1570, file: !1571, line: 27, baseType: !55, size: 32)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1570, file: !1571, line: 28, baseType: !1575, size: 128, offset: 64)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1576, line: 43, size: 128, elements: !1577)
!1576 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1577 = !{!1578, !1579}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1575, file: !1576, line: 44, baseType: !474)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1575, file: !1576, line: 45, baseType: !285, size: 128)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1279, file: !1280, line: 879, baseType: !753, size: 64, offset: 6848)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1279, file: !1280, line: 882, baseType: !753, size: 64, offset: 6912)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1279, file: !1280, line: 884, baseType: !91, size: 64, offset: 6976)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1279, file: !1280, line: 885, baseType: !91, size: 64, offset: 7040)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1279, file: !1280, line: 890, baseType: !91, size: 64, offset: 7104)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1279, file: !1280, line: 891, baseType: !1586, size: 128, offset: 7168)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1280, line: 242, size: 128, elements: !1587)
!1587 = !{!1588, !1589, !1590}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1586, file: !1280, line: 244, baseType: !91, size: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1586, file: !1280, line: 245, baseType: !91, size: 64, offset: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1586, file: !1280, line: 246, baseType: !474, offset: 128)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1279, file: !1280, line: 900, baseType: !16, size: 64, offset: 7296)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1279, file: !1280, line: 901, baseType: !16, size: 64, offset: 7360)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1279, file: !1280, line: 904, baseType: !91, size: 64, offset: 7424)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1279, file: !1280, line: 907, baseType: !91, size: 64, offset: 7488)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1279, file: !1280, line: 910, baseType: !16, size: 64, offset: 7552)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1279, file: !1280, line: 911, baseType: !16, size: 64, offset: 7616)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1279, file: !1280, line: 914, baseType: !1598, size: 640, offset: 7680)
!1598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1599, line: 123, size: 640, elements: !1600)
!1599 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1600 = !{!1601, !1607, !1608}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1598, file: !1599, line: 124, baseType: !1602, size: 576)
!1602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1603, size: 576, elements: !697)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1599, line: 108, size: 192, elements: !1604)
!1604 = !{!1605, !1606}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1603, file: !1599, line: 109, baseType: !91, size: 64)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1603, file: !1599, line: 110, baseType: !1403, size: 128, offset: 64)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1598, file: !1599, line: 125, baseType: !55, size: 32, offset: 576)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1598, file: !1599, line: 126, baseType: !55, size: 32, offset: 608)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1279, file: !1280, line: 917, baseType: !1610, size: 192, offset: 8320)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1599, line: 134, size: 192, elements: !1611)
!1611 = !{!1612, !1613}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1610, file: !1599, line: 135, baseType: !32, size: 128, align: 64)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1610, file: !1599, line: 136, baseType: !55, size: 32, offset: 128)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1279, file: !1280, line: 923, baseType: !407, size: 64, offset: 8512)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1279, file: !1280, line: 926, baseType: !407, size: 64, offset: 8576)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1279, file: !1280, line: 929, baseType: !407, size: 64, offset: 8640)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1279, file: !1280, line: 933, baseType: !441, size: 64, offset: 8704)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1279, file: !1280, line: 943, baseType: !1619, size: 128, offset: 8768)
!1619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 128, elements: !1620)
!1620 = !{!1621}
!1621 = !DISubrange(count: 16)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1279, file: !1280, line: 945, baseType: !1623, size: 64, offset: 8896)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!1624 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1280, line: 49, flags: DIFlagFwdDecl)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1279, file: !1280, line: 956, baseType: !1626, size: 64, offset: 8960)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64)
!1627 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1280, line: 45, flags: DIFlagFwdDecl)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1279, file: !1280, line: 959, baseType: !1629, size: 64, offset: 9024)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 64)
!1630 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1280, line: 959, flags: DIFlagFwdDecl)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1279, file: !1280, line: 962, baseType: !1632, size: 64, offset: 9088)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64)
!1633 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1280, line: 66, flags: DIFlagFwdDecl)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1279, file: !1280, line: 966, baseType: !1635, size: 64, offset: 9152)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1280, line: 50, flags: DIFlagFwdDecl)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1279, file: !1280, line: 969, baseType: !1638, size: 64, offset: 9216)
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 64)
!1639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1640, line: 82, size: 7296, elements: !1641)
!1640 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1641 = !{!1642, !1643, !1644, !1645, !1646, !1647, !1648, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1677, !1686, !1687, !1689, !1690, !1691, !1694, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1724, !1725, !1732, !1733, !1734, !1735, !1736, !1737}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1639, file: !1640, line: 83, baseType: !445, size: 32)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1639, file: !1640, line: 84, baseType: !413, size: 32, offset: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1639, file: !1640, line: 85, baseType: !152, size: 32, offset: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1639, file: !1640, line: 86, baseType: !285, size: 128, offset: 128)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1639, file: !1640, line: 88, baseType: !1549, size: 128, offset: 256)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1639, file: !1640, line: 91, baseType: !1278, size: 64, offset: 384)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1639, file: !1640, line: 94, baseType: !1649, size: 192, offset: 448)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1650, line: 30, size: 192, elements: !1651)
!1650 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1651 = !{!1652, !1653}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1649, file: !1650, line: 31, baseType: !285, size: 128)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1649, file: !1650, line: 32, baseType: !1654, size: 64, offset: 128)
!1654 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1655, line: 25, baseType: !1656)
!1655 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1655, line: 23, size: 64, elements: !1657)
!1657 = !{!1658}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1656, file: !1655, line: 24, baseType: !1428, size: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1639, file: !1640, line: 97, baseType: !687, size: 64, offset: 640)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1639, file: !1640, line: 100, baseType: !152, size: 32, offset: 704)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1639, file: !1640, line: 106, baseType: !152, size: 32, offset: 736)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1639, file: !1640, line: 107, baseType: !1278, size: 64, offset: 768)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1639, file: !1640, line: 110, baseType: !152, size: 32, offset: 832)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1639, file: !1640, line: 111, baseType: !55, size: 32, offset: 864)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1639, file: !1640, line: 122, baseType: !55, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1639, file: !1640, line: 123, baseType: !55, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1639, file: !1640, line: 128, baseType: !152, size: 32, offset: 928)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1639, file: !1640, line: 129, baseType: !285, size: 128, offset: 960)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1639, file: !1640, line: 132, baseType: !1349, size: 512, offset: 1088)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1639, file: !1640, line: 133, baseType: !1358, size: 64, offset: 1600)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1639, file: !1640, line: 140, baseType: !1672, size: 256, offset: 1664)
!1672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1673, size: 256, elements: !433)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1640, line: 38, size: 128, elements: !1674)
!1674 = !{!1675, !1676}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1673, file: !1640, line: 39, baseType: !91, size: 64)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1673, file: !1640, line: 40, baseType: !91, size: 64, offset: 64)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1639, file: !1640, line: 146, baseType: !1678, size: 192, offset: 1920)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1640, line: 66, size: 192, elements: !1679)
!1679 = !{!1680}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1678, file: !1640, line: 67, baseType: !1681, size: 192)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1640, line: 47, size: 192, elements: !1682)
!1682 = !{!1683, !1684, !1685}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1681, file: !1640, line: 48, baseType: !373, size: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1681, file: !1640, line: 49, baseType: !373, size: 64, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1681, file: !1640, line: 50, baseType: !373, size: 64, offset: 128)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1639, file: !1640, line: 150, baseType: !1598, size: 640, offset: 2112)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1639, file: !1640, line: 153, baseType: !1688, size: 256, offset: 2752)
!1688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1538, size: 256, elements: !544)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1639, file: !1640, line: 159, baseType: !1538, size: 64, offset: 3008)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1639, file: !1640, line: 162, baseType: !152, size: 32, offset: 3072)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1639, file: !1640, line: 164, baseType: !1692, size: 64, offset: 3136)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 64)
!1693 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1640, line: 164, flags: DIFlagFwdDecl)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1639, file: !1640, line: 175, baseType: !1695, size: 32, offset: 3200)
!1695 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !58, line: 805, baseType: !1696)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !58, line: 798, size: 32, elements: !1697)
!1697 = !{!1698, !1699}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1696, file: !58, line: 803, baseType: !57, size: 32)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1696, file: !58, line: 804, baseType: !379, offset: 32)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1639, file: !1640, line: 176, baseType: !91, size: 64, offset: 3264)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1639, file: !1640, line: 176, baseType: !91, size: 64, offset: 3328)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1639, file: !1640, line: 176, baseType: !91, size: 64, offset: 3392)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1639, file: !1640, line: 176, baseType: !91, size: 64, offset: 3456)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1639, file: !1640, line: 177, baseType: !91, size: 64, offset: 3520)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1639, file: !1640, line: 178, baseType: !91, size: 64, offset: 3584)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1639, file: !1640, line: 179, baseType: !1586, size: 128, offset: 3648)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1639, file: !1640, line: 180, baseType: !16, size: 64, offset: 3776)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1639, file: !1640, line: 180, baseType: !16, size: 64, offset: 3840)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1639, file: !1640, line: 180, baseType: !16, size: 64, offset: 3904)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1639, file: !1640, line: 180, baseType: !16, size: 64, offset: 3968)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1639, file: !1640, line: 181, baseType: !16, size: 64, offset: 4032)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1639, file: !1640, line: 181, baseType: !16, size: 64, offset: 4096)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1639, file: !1640, line: 181, baseType: !16, size: 64, offset: 4160)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1639, file: !1640, line: 181, baseType: !16, size: 64, offset: 4224)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1639, file: !1640, line: 182, baseType: !16, size: 64, offset: 4288)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1639, file: !1640, line: 182, baseType: !16, size: 64, offset: 4352)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1639, file: !1640, line: 182, baseType: !16, size: 64, offset: 4416)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1639, file: !1640, line: 182, baseType: !16, size: 64, offset: 4480)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1639, file: !1640, line: 183, baseType: !16, size: 64, offset: 4544)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1639, file: !1640, line: 183, baseType: !16, size: 64, offset: 4608)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1639, file: !1640, line: 184, baseType: !1722, offset: 4672)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1723, line: 12, elements: !393)
!1723 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1639, file: !1640, line: 192, baseType: !93, size: 64, offset: 4672)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1639, file: !1640, line: 203, baseType: !1726, size: 2048, offset: 4736)
!1726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1727, size: 2048, elements: !1620)
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1728, line: 43, size: 128, elements: !1729)
!1728 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1729 = !{!1730, !1731}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1727, file: !1728, line: 44, baseType: !15, size: 64)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1727, file: !1728, line: 45, baseType: !15, size: 64, offset: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1639, file: !1640, line: 220, baseType: !168, size: 8, offset: 6784)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1639, file: !1640, line: 221, baseType: !493, size: 16, offset: 6800)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1639, file: !1640, line: 222, baseType: !493, size: 16, offset: 6816)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1639, file: !1640, line: 224, baseType: !1039, size: 64, offset: 6848)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1639, file: !1640, line: 227, baseType: !367, size: 192, offset: 6912)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1639, file: !1640, line: 233, baseType: !367, size: 192, offset: 7104)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1279, file: !1280, line: 970, baseType: !1739, size: 64, offset: 9280)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1640, line: 20, size: 16576, elements: !1741)
!1741 = !{!1742, !1743, !1744, !1745}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1740, file: !1640, line: 21, baseType: !379)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1740, file: !1640, line: 22, baseType: !445, size: 32)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1740, file: !1640, line: 23, baseType: !1549, size: 128, offset: 64)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1740, file: !1640, line: 24, baseType: !1746, size: 16384, offset: 192)
!1746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1747, size: 16384, elements: !1767)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1650, line: 49, size: 256, elements: !1748)
!1748 = !{!1749}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1747, file: !1650, line: 50, baseType: !1750, size: 256)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1650, line: 35, size: 256, elements: !1751)
!1751 = !{!1752, !1759, !1760, !1766}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1750, file: !1650, line: 37, baseType: !1753, size: 64)
!1753 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1754, line: 19, baseType: !1755)
!1754 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 64)
!1756 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1754, line: 18, baseType: !1757)
!1757 = !DISubroutineType(types: !1758)
!1758 = !{null, !152}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1750, file: !1650, line: 38, baseType: !16, size: 64, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1750, file: !1650, line: 44, baseType: !1761, size: 64, offset: 128)
!1761 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1754, line: 22, baseType: !1762)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64)
!1763 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1754, line: 21, baseType: !1764)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{null}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1750, file: !1650, line: 46, baseType: !1654, size: 64, offset: 192)
!1767 = !{!1768}
!1768 = !DISubrange(count: 64)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1279, file: !1280, line: 971, baseType: !1654, size: 64, offset: 9344)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1279, file: !1280, line: 972, baseType: !1654, size: 64, offset: 9408)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1279, file: !1280, line: 974, baseType: !1654, size: 64, offset: 9472)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1279, file: !1280, line: 975, baseType: !1649, size: 192, offset: 9536)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1279, file: !1280, line: 976, baseType: !16, size: 64, offset: 9728)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1279, file: !1280, line: 977, baseType: !11, size: 64, offset: 9792)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1279, file: !1280, line: 978, baseType: !55, size: 32, offset: 9856)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1279, file: !1280, line: 980, baseType: !35, size: 64, offset: 9920)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1279, file: !1280, line: 989, baseType: !1778, size: 128, offset: 9984)
!1778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1779, line: 35, size: 128, elements: !1780)
!1779 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1780 = !{!1781, !1782, !1783}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1778, file: !1779, line: 36, baseType: !152, size: 32)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1778, file: !1779, line: 37, baseType: !413, size: 32, offset: 32)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1778, file: !1779, line: 38, baseType: !1784, size: 64, offset: 64)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!1785 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1779, line: 23, flags: DIFlagFwdDecl)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1279, file: !1280, line: 992, baseType: !91, size: 64, offset: 10112)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1279, file: !1280, line: 993, baseType: !91, size: 64, offset: 10176)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1279, file: !1280, line: 996, baseType: !379, offset: 10240)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1279, file: !1280, line: 999, baseType: !474, offset: 10240)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1279, file: !1280, line: 1001, baseType: !1791, size: 64, offset: 10240)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1280, line: 636, size: 64, elements: !1792)
!1792 = !{!1793}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1791, file: !1280, line: 637, baseType: !1794, size: 64)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 64)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1279, file: !1280, line: 1005, baseType: !833, size: 128, offset: 10304)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1279, file: !1280, line: 1007, baseType: !1278, size: 64, offset: 10432)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1279, file: !1280, line: 1009, baseType: !1798, size: 64, offset: 10496)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1280, line: 1009, flags: DIFlagFwdDecl)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1279, file: !1280, line: 1043, baseType: !146, size: 64, offset: 10560)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1279, file: !1280, line: 1046, baseType: !1802, size: 64, offset: 10624)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64)
!1803 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1280, line: 41, flags: DIFlagFwdDecl)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1279, file: !1280, line: 1050, baseType: !1805, size: 64, offset: 10688)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1806 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1280, line: 42, flags: DIFlagFwdDecl)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1279, file: !1280, line: 1054, baseType: !1808, size: 64, offset: 10752)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 64)
!1809 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1280, line: 55, flags: DIFlagFwdDecl)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1279, file: !1280, line: 1056, baseType: !1811, size: 64, offset: 10816)
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 64)
!1812 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1280, line: 40, flags: DIFlagFwdDecl)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1279, file: !1280, line: 1058, baseType: !1814, size: 64, offset: 10880)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 64)
!1815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1816, line: 99, size: 704, elements: !1817)
!1816 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1817 = !{!1818, !1819, !1820, !1821, !1822, !1823, !1824, !1843, !1844}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1815, file: !1816, line: 100, baseType: !371, size: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1815, file: !1816, line: 101, baseType: !413, size: 32, offset: 64)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1815, file: !1816, line: 102, baseType: !413, size: 32, offset: 96)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1815, file: !1816, line: 105, baseType: !379, offset: 128)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1815, file: !1816, line: 107, baseType: !104, size: 16, offset: 128)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1815, file: !1816, line: 109, baseType: !823, size: 128, offset: 192)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1815, file: !1816, line: 110, baseType: !1825, size: 64, offset: 320)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1816, line: 73, size: 448, elements: !1827)
!1827 = !{!1828, !1831, !1832, !1837, !1842}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1826, file: !1816, line: 74, baseType: !1829, size: 64)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64)
!1830 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !1816, line: 74, flags: DIFlagFwdDecl)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !1826, file: !1816, line: 75, baseType: !1814, size: 64, offset: 64)
!1832 = !DIDerivedType(tag: DW_TAG_member, scope: !1826, file: !1816, line: 83, baseType: !1833, size: 128, offset: 128)
!1833 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1826, file: !1816, line: 83, size: 128, elements: !1834)
!1834 = !{!1835, !1836}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !1833, file: !1816, line: 84, baseType: !285, size: 128)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !1833, file: !1816, line: 85, baseType: !999, size: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, scope: !1826, file: !1816, line: 87, baseType: !1838, size: 128, offset: 256)
!1838 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1826, file: !1816, line: 87, size: 128, elements: !1839)
!1839 = !{!1840, !1841}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !1838, file: !1816, line: 88, baseType: !589, size: 128)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !1838, file: !1816, line: 89, baseType: !32, size: 128, align: 64)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1826, file: !1816, line: 92, baseType: !55, size: 32, offset: 384)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1815, file: !1816, line: 111, baseType: !687, size: 64, offset: 384)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1815, file: !1816, line: 113, baseType: !1845, size: 256, offset: 448)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1846, line: 102, size: 256, elements: !1847)
!1846 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1847 = !{!1848, !1849, !1850}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1845, file: !1846, line: 103, baseType: !371, size: 64)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1845, file: !1846, line: 104, baseType: !285, size: 128, offset: 64)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1845, file: !1846, line: 105, baseType: !1851, size: 64, offset: 192)
!1851 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1846, line: 21, baseType: !1852)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64)
!1853 = !DISubroutineType(types: !1854)
!1854 = !{null, !1855}
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 64)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1279, file: !1280, line: 1061, baseType: !1857, size: 64, offset: 10944)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64)
!1858 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1280, line: 43, flags: DIFlagFwdDecl)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1279, file: !1280, line: 1064, baseType: !16, size: 64, offset: 11008)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1279, file: !1280, line: 1065, baseType: !1861, size: 64, offset: 11072)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 64)
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1650, line: 14, baseType: !1863)
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1650, line: 12, size: 384, elements: !1864)
!1864 = !{!1865}
!1865 = !DIDerivedType(tag: DW_TAG_member, scope: !1863, file: !1650, line: 13, baseType: !1866, size: 384)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1863, file: !1650, line: 13, size: 384, elements: !1867)
!1867 = !{!1868, !1869, !1870, !1871}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !1866, file: !1650, line: 13, baseType: !152, size: 32)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !1866, file: !1650, line: 13, baseType: !152, size: 32, offset: 32)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !1866, file: !1650, line: 13, baseType: !152, size: 32, offset: 64)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !1866, file: !1650, line: 13, baseType: !1872, size: 256, offset: 128)
!1872 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !1873, line: 32, size: 256, elements: !1874)
!1873 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!1874 = !{!1875, !1880, !1893, !1899, !1908, !1928, !1933}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !1872, file: !1873, line: 37, baseType: !1876, size: 64)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1872, file: !1873, line: 34, size: 64, elements: !1877)
!1877 = !{!1878, !1879}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1876, file: !1873, line: 35, baseType: !1527, size: 32)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1876, file: !1873, line: 36, baseType: !113, size: 32, offset: 32)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !1872, file: !1873, line: 45, baseType: !1881, size: 192)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1872, file: !1873, line: 40, size: 192, elements: !1882)
!1882 = !{!1883, !1885, !1886, !1892}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !1881, file: !1873, line: 41, baseType: !1884, size: 32)
!1884 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !14, line: 95, baseType: !152)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !1881, file: !1873, line: 42, baseType: !152, size: 32, offset: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1881, file: !1873, line: 43, baseType: !1887, size: 64, offset: 64)
!1887 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !1873, line: 11, baseType: !1888)
!1888 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !1873, line: 8, size: 64, elements: !1889)
!1889 = !{!1890, !1891}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !1888, file: !1873, line: 9, baseType: !152, size: 32)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !1888, file: !1873, line: 10, baseType: !146, size: 64)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !1881, file: !1873, line: 44, baseType: !152, size: 32, offset: 128)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !1872, file: !1873, line: 52, baseType: !1894, size: 128)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1872, file: !1873, line: 48, size: 128, elements: !1895)
!1895 = !{!1896, !1897, !1898}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1894, file: !1873, line: 49, baseType: !1527, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1894, file: !1873, line: 50, baseType: !113, size: 32, offset: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1894, file: !1873, line: 51, baseType: !1887, size: 64, offset: 64)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !1872, file: !1873, line: 61, baseType: !1900, size: 256)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1872, file: !1873, line: 55, size: 256, elements: !1901)
!1901 = !{!1902, !1903, !1904, !1905, !1907}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1900, file: !1873, line: 56, baseType: !1527, size: 32)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1900, file: !1873, line: 57, baseType: !113, size: 32, offset: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !1900, file: !1873, line: 58, baseType: !152, size: 32, offset: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !1900, file: !1873, line: 59, baseType: !1906, size: 64, offset: 128)
!1906 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !14, line: 94, baseType: !259)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !1900, file: !1873, line: 60, baseType: !1906, size: 64, offset: 192)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !1872, file: !1873, line: 95, baseType: !1909, size: 256)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1872, file: !1873, line: 64, size: 256, elements: !1910)
!1910 = !{!1911, !1912}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !1909, file: !1873, line: 65, baseType: !146, size: 64)
!1912 = !DIDerivedType(tag: DW_TAG_member, scope: !1909, file: !1873, line: 77, baseType: !1913, size: 192, offset: 64)
!1913 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1909, file: !1873, line: 77, size: 192, elements: !1914)
!1914 = !{!1915, !1916, !1923}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !1913, file: !1873, line: 82, baseType: !493, size: 16)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !1913, file: !1873, line: 88, baseType: !1917, size: 192)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1913, file: !1873, line: 84, size: 192, elements: !1918)
!1918 = !{!1919, !1921, !1922}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !1917, file: !1873, line: 85, baseType: !1920, size: 64)
!1920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 64, elements: !644)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !1917, file: !1873, line: 86, baseType: !146, size: 64, offset: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !1917, file: !1873, line: 87, baseType: !146, size: 64, offset: 128)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !1913, file: !1873, line: 93, baseType: !1924, size: 96)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1913, file: !1873, line: 90, size: 96, elements: !1925)
!1925 = !{!1926, !1927}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !1924, file: !1873, line: 91, baseType: !1920, size: 64)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !1924, file: !1873, line: 92, baseType: !87, size: 32, offset: 64)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !1872, file: !1873, line: 101, baseType: !1929, size: 128)
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1872, file: !1873, line: 98, size: 128, elements: !1930)
!1930 = !{!1931, !1932}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !1929, file: !1873, line: 99, baseType: !220, size: 64)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !1929, file: !1873, line: 100, baseType: !152, size: 32, offset: 64)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !1872, file: !1873, line: 108, baseType: !1934, size: 128)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1872, file: !1873, line: 104, size: 128, elements: !1935)
!1935 = !{!1936, !1937, !1938}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !1934, file: !1873, line: 105, baseType: !146, size: 64)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !1934, file: !1873, line: 106, baseType: !152, size: 32, offset: 64)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !1934, file: !1873, line: 107, baseType: !55, size: 32, offset: 96)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1279, file: !1280, line: 1067, baseType: !1722, offset: 11136)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1279, file: !1280, line: 1099, baseType: !1941, size: 64, offset: 11136)
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 64)
!1942 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1280, line: 56, flags: DIFlagFwdDecl)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1279, file: !1280, line: 1103, baseType: !285, size: 128, offset: 11200)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1279, file: !1280, line: 1104, baseType: !1945, size: 64, offset: 11328)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64)
!1946 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1280, line: 46, flags: DIFlagFwdDecl)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1279, file: !1280, line: 1105, baseType: !367, size: 192, offset: 11392)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1279, file: !1280, line: 1106, baseType: !55, size: 32, offset: 11584)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1279, file: !1280, line: 1109, baseType: !1950, size: 128, offset: 11648)
!1950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1951, size: 128, elements: !433)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 64)
!1952 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1280, line: 51, flags: DIFlagFwdDecl)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1279, file: !1280, line: 1110, baseType: !367, size: 192, offset: 11776)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1279, file: !1280, line: 1111, baseType: !285, size: 128, offset: 11968)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1279, file: !1280, line: 1173, baseType: !1956, size: 64, offset: 12096)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 64)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !1958, line: 62, size: 256, align: 256, elements: !1959)
!1958 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!1959 = !{!1960, !1961, !1962, !1967}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !1957, file: !1958, line: 75, baseType: !87, size: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !1957, file: !1958, line: 90, baseType: !87, size: 32, offset: 32)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !1957, file: !1958, line: 124, baseType: !1963, size: 64, offset: 64)
!1963 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1957, file: !1958, line: 109, size: 64, elements: !1964)
!1964 = !{!1965, !1966}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !1963, file: !1958, line: 110, baseType: !92, size: 64)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1963, file: !1958, line: 112, baseType: !92, size: 64)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1957, file: !1958, line: 144, baseType: !87, size: 32, offset: 128)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1279, file: !1280, line: 1174, baseType: !85, size: 32, offset: 12160)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1279, file: !1280, line: 1179, baseType: !16, size: 64, offset: 12224)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1279, file: !1280, line: 1182, baseType: !1971, size: 128, offset: 12288)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1222, line: 76, size: 128, elements: !1972)
!1972 = !{!1973, !1978, !1979}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1971, file: !1222, line: 85, baseType: !1974, size: 64)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !1975, line: 7, size: 64, elements: !1976)
!1975 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!1976 = !{!1977}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !1974, file: !1975, line: 12, baseType: !1425, size: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !1971, file: !1222, line: 88, baseType: !168, size: 8, offset: 64)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !1971, file: !1222, line: 95, baseType: !168, size: 8, offset: 72)
!1980 = !DIDerivedType(tag: DW_TAG_member, scope: !1279, file: !1280, line: 1184, baseType: !1981, size: 128, offset: 12416)
!1981 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1279, file: !1280, line: 1184, size: 128, elements: !1982)
!1982 = !{!1983, !1984}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !1981, file: !1280, line: 1185, baseType: !445, size: 32)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1981, file: !1280, line: 1186, baseType: !32, size: 128, align: 64)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1279, file: !1280, line: 1190, baseType: !1986, size: 64, offset: 12544)
!1986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 64)
!1987 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1280, line: 53, flags: DIFlagFwdDecl)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1279, file: !1280, line: 1192, baseType: !1989, size: 128, offset: 12608)
!1989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1222, line: 64, size: 128, elements: !1990)
!1990 = !{!1991, !1992, !1993}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1989, file: !1222, line: 65, baseType: !805, size: 64)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1989, file: !1222, line: 67, baseType: !87, size: 32, offset: 64)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1989, file: !1222, line: 68, baseType: !87, size: 32, offset: 96)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1279, file: !1280, line: 1206, baseType: !152, size: 32, offset: 12736)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1279, file: !1280, line: 1207, baseType: !152, size: 32, offset: 12768)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1279, file: !1280, line: 1209, baseType: !16, size: 64, offset: 12800)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1279, file: !1280, line: 1219, baseType: !91, size: 64, offset: 12864)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1279, file: !1280, line: 1220, baseType: !91, size: 64, offset: 12928)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1279, file: !1280, line: 1317, baseType: !152, size: 32, offset: 12992)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1279, file: !1280, line: 1319, baseType: !1278, size: 64, offset: 13056)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1279, file: !1280, line: 1322, baseType: !2002, size: 64, offset: 13120)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 64)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2004, line: 56, size: 512, elements: !2005)
!2004 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2005 = !{!2006, !2007, !2008, !2009, !2010, !2011, !2012, !2014}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2003, file: !2004, line: 57, baseType: !2002, size: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2003, file: !2004, line: 58, baseType: !146, size: 64, offset: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2003, file: !2004, line: 59, baseType: !16, size: 64, offset: 128)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2003, file: !2004, line: 60, baseType: !16, size: 64, offset: 192)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2003, file: !2004, line: 61, baseType: !879, size: 64, offset: 256)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2003, file: !2004, line: 62, baseType: !55, size: 32, offset: 320)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2003, file: !2004, line: 63, baseType: !2013, size: 64, offset: 384)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !12, line: 153, baseType: !91)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2003, file: !2004, line: 64, baseType: !2015, size: 64, offset: 448)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 64)
!2016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1279, file: !1280, line: 1326, baseType: !445, size: 32, offset: 13184)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1279, file: !1280, line: 1342, baseType: !146, size: 64, offset: 13248)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1279, file: !1280, line: 1343, baseType: !92, size: 64, offset: 13312)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1279, file: !1280, line: 1344, baseType: !91, size: 64, offset: 13376)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1279, file: !1280, line: 1345, baseType: !92, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1279, file: !1280, line: 1346, baseType: !92, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1279, file: !1280, line: 1347, baseType: !92, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1279, file: !1280, line: 1348, baseType: !32, size: 128, align: 64, offset: 13504)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1279, file: !1280, line: 1358, baseType: !2026, size: 34816, offset: 13824)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2027, line: 485, size: 34816, elements: !2028)
!2027 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2028 = !{!2029, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2058, !2059, !2060, !2061, !2062, !2063, !2066, !2067, !2068}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2026, file: !2027, line: 487, baseType: !2030, size: 192)
!2030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2031, size: 192, elements: !697)
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2032, line: 16, size: 64, elements: !2033)
!2032 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2033 = !{!2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2031, file: !2032, line: 17, baseType: !509, size: 16)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2031, file: !2032, line: 18, baseType: !509, size: 16, offset: 16)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2031, file: !2032, line: 19, baseType: !509, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2031, file: !2032, line: 19, baseType: !509, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2031, file: !2032, line: 19, baseType: !509, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2031, file: !2032, line: 19, baseType: !509, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2031, file: !2032, line: 19, baseType: !509, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2031, file: !2032, line: 20, baseType: !509, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2031, file: !2032, line: 20, baseType: !509, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2031, file: !2032, line: 20, baseType: !509, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2031, file: !2032, line: 20, baseType: !509, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2031, file: !2032, line: 20, baseType: !509, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2031, file: !2032, line: 20, baseType: !509, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2026, file: !2027, line: 491, baseType: !16, size: 64, offset: 192)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2026, file: !2027, line: 495, baseType: !104, size: 16, offset: 256)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2026, file: !2027, line: 496, baseType: !104, size: 16, offset: 272)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2026, file: !2027, line: 497, baseType: !104, size: 16, offset: 288)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2026, file: !2027, line: 498, baseType: !104, size: 16, offset: 304)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2026, file: !2027, line: 502, baseType: !16, size: 64, offset: 320)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2026, file: !2027, line: 503, baseType: !16, size: 64, offset: 384)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2026, file: !2027, line: 514, baseType: !2055, size: 256, offset: 448)
!2055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2056, size: 256, elements: !544)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64)
!2057 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2027, line: 483, flags: DIFlagFwdDecl)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2026, file: !2027, line: 516, baseType: !16, size: 64, offset: 704)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2026, file: !2027, line: 518, baseType: !16, size: 64, offset: 768)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2026, file: !2027, line: 520, baseType: !16, size: 64, offset: 832)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2026, file: !2027, line: 521, baseType: !16, size: 64, offset: 896)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2026, file: !2027, line: 522, baseType: !16, size: 64, offset: 960)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2026, file: !2027, line: 528, baseType: !2064, size: 64, offset: 1024)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64)
!2065 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2027, line: 10, flags: DIFlagFwdDecl)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2026, file: !2027, line: 535, baseType: !16, size: 64, offset: 1088)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2026, file: !2027, line: 537, baseType: !55, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2026, file: !2027, line: 540, baseType: !2069, size: 33280, offset: 1536)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2070, line: 317, size: 33280, elements: !2071)
!2070 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2071 = !{!2072, !2073, !2074}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2069, file: !2070, line: 330, baseType: !55, size: 32)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2069, file: !2070, line: 337, baseType: !16, size: 64, offset: 64)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2069, file: !2070, line: 348, baseType: !2075, size: 32768, offset: 512)
!2075 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2070, line: 304, size: 32768, elements: !2076)
!2076 = !{!2077, !2092, !2131, !2181, !2194}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2075, file: !2070, line: 305, baseType: !2078, size: 896)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2070, line: 12, size: 896, elements: !2079)
!2079 = !{!2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2091}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2078, file: !2070, line: 13, baseType: !85, size: 32)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2078, file: !2070, line: 14, baseType: !85, size: 32, offset: 32)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2078, file: !2070, line: 15, baseType: !85, size: 32, offset: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2078, file: !2070, line: 16, baseType: !85, size: 32, offset: 96)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2078, file: !2070, line: 17, baseType: !85, size: 32, offset: 128)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2078, file: !2070, line: 18, baseType: !85, size: 32, offset: 160)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2078, file: !2070, line: 19, baseType: !85, size: 32, offset: 192)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2078, file: !2070, line: 22, baseType: !2088, size: 640, offset: 224)
!2088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 640, elements: !2089)
!2089 = !{!2090}
!2090 = !DISubrange(count: 20)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2078, file: !2070, line: 25, baseType: !85, size: 32, offset: 864)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2075, file: !2070, line: 306, baseType: !2093, size: 4096, align: 128)
!2093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2070, line: 34, size: 4096, align: 128, elements: !2094)
!2094 = !{!2095, !2096, !2097, !2098, !2099, !2114, !2115, !2116, !2120, !2122, !2126}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2093, file: !2070, line: 35, baseType: !509, size: 16)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2093, file: !2070, line: 36, baseType: !509, size: 16, offset: 16)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2093, file: !2070, line: 37, baseType: !509, size: 16, offset: 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2093, file: !2070, line: 38, baseType: !509, size: 16, offset: 48)
!2099 = !DIDerivedType(tag: DW_TAG_member, scope: !2093, file: !2070, line: 39, baseType: !2100, size: 128, offset: 64)
!2100 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2093, file: !2070, line: 39, size: 128, elements: !2101)
!2101 = !{!2102, !2107}
!2102 = !DIDerivedType(tag: DW_TAG_member, scope: !2100, file: !2070, line: 40, baseType: !2103, size: 128)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2100, file: !2070, line: 40, size: 128, elements: !2104)
!2104 = !{!2105, !2106}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2103, file: !2070, line: 41, baseType: !91, size: 64)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2103, file: !2070, line: 42, baseType: !91, size: 64, offset: 64)
!2107 = !DIDerivedType(tag: DW_TAG_member, scope: !2100, file: !2070, line: 44, baseType: !2108, size: 128)
!2108 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2100, file: !2070, line: 44, size: 128, elements: !2109)
!2109 = !{!2110, !2111, !2112, !2113}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2108, file: !2070, line: 45, baseType: !85, size: 32)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2108, file: !2070, line: 46, baseType: !85, size: 32, offset: 32)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2108, file: !2070, line: 47, baseType: !85, size: 32, offset: 64)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2108, file: !2070, line: 48, baseType: !85, size: 32, offset: 96)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2093, file: !2070, line: 51, baseType: !85, size: 32, offset: 192)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2093, file: !2070, line: 52, baseType: !85, size: 32, offset: 224)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2093, file: !2070, line: 55, baseType: !2117, size: 1024, offset: 256)
!2117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 1024, elements: !2118)
!2118 = !{!2119}
!2119 = !DISubrange(count: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2093, file: !2070, line: 58, baseType: !2121, size: 2048, offset: 1280)
!2121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 2048, elements: !1767)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2093, file: !2070, line: 60, baseType: !2123, size: 384, offset: 3328)
!2123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 384, elements: !2124)
!2124 = !{!2125}
!2125 = !DISubrange(count: 12)
!2126 = !DIDerivedType(tag: DW_TAG_member, scope: !2093, file: !2070, line: 62, baseType: !2127, size: 384, offset: 3712)
!2127 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2093, file: !2070, line: 62, size: 384, elements: !2128)
!2128 = !{!2129, !2130}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2127, file: !2070, line: 63, baseType: !2123, size: 384)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2127, file: !2070, line: 64, baseType: !2123, size: 384)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2075, file: !2070, line: 307, baseType: !2132, size: 1088)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2070, line: 79, size: 1088, elements: !2133)
!2133 = !{!2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2180}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2132, file: !2070, line: 80, baseType: !85, size: 32)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2132, file: !2070, line: 81, baseType: !85, size: 32, offset: 32)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2132, file: !2070, line: 82, baseType: !85, size: 32, offset: 64)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2132, file: !2070, line: 83, baseType: !85, size: 32, offset: 96)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2132, file: !2070, line: 84, baseType: !85, size: 32, offset: 128)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2132, file: !2070, line: 85, baseType: !85, size: 32, offset: 160)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2132, file: !2070, line: 86, baseType: !85, size: 32, offset: 192)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2132, file: !2070, line: 88, baseType: !2088, size: 640, offset: 224)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2132, file: !2070, line: 89, baseType: !634, size: 8, offset: 864)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2132, file: !2070, line: 90, baseType: !634, size: 8, offset: 872)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2132, file: !2070, line: 91, baseType: !634, size: 8, offset: 880)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2132, file: !2070, line: 92, baseType: !634, size: 8, offset: 888)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2132, file: !2070, line: 93, baseType: !634, size: 8, offset: 896)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2132, file: !2070, line: 94, baseType: !634, size: 8, offset: 904)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2132, file: !2070, line: 95, baseType: !2149, size: 64, offset: 960)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 64)
!2150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2151, line: 11, size: 128, elements: !2152)
!2151 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2152 = !{!2153, !2154}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2150, file: !2151, line: 12, baseType: !220, size: 64)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2150, file: !2151, line: 13, baseType: !2155, size: 64, offset: 64)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2157, line: 56, size: 1344, elements: !2158)
!2157 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2158 = !{!2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2156, file: !2157, line: 61, baseType: !16, size: 64)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2156, file: !2157, line: 62, baseType: !16, size: 64, offset: 64)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2156, file: !2157, line: 63, baseType: !16, size: 64, offset: 128)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2156, file: !2157, line: 64, baseType: !16, size: 64, offset: 192)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2156, file: !2157, line: 65, baseType: !16, size: 64, offset: 256)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2156, file: !2157, line: 66, baseType: !16, size: 64, offset: 320)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2156, file: !2157, line: 68, baseType: !16, size: 64, offset: 384)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2156, file: !2157, line: 69, baseType: !16, size: 64, offset: 448)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2156, file: !2157, line: 70, baseType: !16, size: 64, offset: 512)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2156, file: !2157, line: 71, baseType: !16, size: 64, offset: 576)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2156, file: !2157, line: 72, baseType: !16, size: 64, offset: 640)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2156, file: !2157, line: 73, baseType: !16, size: 64, offset: 704)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2156, file: !2157, line: 74, baseType: !16, size: 64, offset: 768)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2156, file: !2157, line: 75, baseType: !16, size: 64, offset: 832)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2156, file: !2157, line: 76, baseType: !16, size: 64, offset: 896)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2156, file: !2157, line: 81, baseType: !16, size: 64, offset: 960)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2156, file: !2157, line: 83, baseType: !16, size: 64, offset: 1024)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2156, file: !2157, line: 84, baseType: !16, size: 64, offset: 1088)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2156, file: !2157, line: 85, baseType: !16, size: 64, offset: 1152)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2156, file: !2157, line: 86, baseType: !16, size: 64, offset: 1216)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2156, file: !2157, line: 87, baseType: !16, size: 64, offset: 1280)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2132, file: !2070, line: 96, baseType: !85, size: 32, offset: 1024)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2075, file: !2070, line: 308, baseType: !2182, size: 4608, align: 512)
!2182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2070, line: 289, size: 4608, align: 512, elements: !2183)
!2183 = !{!2184, !2185, !2192}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2182, file: !2070, line: 290, baseType: !2093, size: 4096, align: 128)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2182, file: !2070, line: 291, baseType: !2186, size: 512, offset: 4096)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2070, line: 268, size: 512, elements: !2187)
!2187 = !{!2188, !2189, !2190}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2186, file: !2070, line: 269, baseType: !91, size: 64)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2186, file: !2070, line: 270, baseType: !91, size: 64, offset: 64)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2186, file: !2070, line: 271, baseType: !2191, size: 384, offset: 128)
!2191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 384, elements: !513)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2182, file: !2070, line: 292, baseType: !2193, offset: 4608)
!2193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !634, elements: !617)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2075, file: !2070, line: 309, baseType: !2195, size: 32768)
!2195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !634, size: 32768, elements: !2196)
!2196 = !{!2197}
!2197 = !DISubrange(count: 4096)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1275, file: !807, line: 378, baseType: !2199, size: 64, offset: 64)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1271, file: !807, line: 384, baseType: !1570, size: 192, offset: 192)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1043, file: !807, line: 500, baseType: !379, offset: 6656)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1043, file: !807, line: 501, baseType: !2203, size: 64, offset: 6656)
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 64)
!2204 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !807, line: 387, flags: DIFlagFwdDecl)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1043, file: !807, line: 516, baseType: !400, size: 64, offset: 6720)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1043, file: !807, line: 519, baseType: !18, size: 64, offset: 6784)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1043, file: !807, line: 521, baseType: !2208, size: 64, offset: 6848)
!2208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 64)
!2209 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !807, line: 521, flags: DIFlagFwdDecl)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1043, file: !807, line: 545, baseType: !413, size: 32, offset: 6912)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1043, file: !807, line: 548, baseType: !168, size: 8, offset: 6944)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1043, file: !807, line: 550, baseType: !2213, offset: 6952)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2214, line: 142, elements: !393)
!2214 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1043, file: !807, line: 554, baseType: !1845, size: 256, offset: 6976)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1043, file: !807, line: 557, baseType: !85, size: 32, offset: 7232)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1040, file: !807, line: 565, baseType: !2218, offset: 7296)
!2218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, elements: !355)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1036, file: !807, line: 151, baseType: !413, size: 32)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1028, file: !807, line: 156, baseType: !379, offset: 256)
!2221 = !DIDerivedType(tag: DW_TAG_member, scope: !811, file: !807, line: 159, baseType: !2222, size: 128)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !811, file: !807, line: 159, size: 128, elements: !2223)
!2223 = !{!2224, !2295}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2222, file: !807, line: 161, baseType: !2225, size: 64)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 64)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !2227, line: 110, size: 1152, elements: !2228)
!2227 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!2228 = !{!2229, !2239, !2260, !2261, !2262, !2269, !2270, !2282, !2283, !2284}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2226, file: !2227, line: 111, baseType: !2230, size: 384)
!2230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !2227, line: 19, size: 384, elements: !2231)
!2231 = !{!2232, !2234, !2235, !2236, !2237, !2238}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2230, file: !2227, line: 20, baseType: !2233, size: 64)
!2233 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2230, file: !2227, line: 21, baseType: !2233, size: 64, offset: 64)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2230, file: !2227, line: 22, baseType: !2233, size: 64, offset: 128)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2230, file: !2227, line: 23, baseType: !16, size: 64, offset: 192)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2230, file: !2227, line: 24, baseType: !16, size: 64, offset: 256)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2230, file: !2227, line: 25, baseType: !16, size: 64, offset: 320)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2226, file: !2227, line: 112, baseType: !2240, size: 64, offset: 384)
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 64)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2242, line: 105, size: 128, elements: !2243)
!2242 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2243 = !{!2244, !2245}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2241, file: !2242, line: 110, baseType: !16, size: 64)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2241, file: !2242, line: 118, baseType: !2246, size: 64, offset: 64)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 64)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2242, line: 95, size: 448, elements: !2248)
!2248 = !{!2249, !2250, !2255, !2256, !2257, !2258, !2259}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2247, file: !2242, line: 96, baseType: !371, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2247, file: !2242, line: 97, baseType: !2251, size: 64, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 64)
!2252 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2242, line: 60, baseType: !2253)
!2253 = !DISubroutineType(types: !2254)
!2254 = !{null, !2240}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2247, file: !2242, line: 98, baseType: !2251, size: 64, offset: 128)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2247, file: !2242, line: 99, baseType: !168, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2247, file: !2242, line: 100, baseType: !168, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2247, file: !2242, line: 101, baseType: !32, size: 128, align: 64, offset: 256)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2247, file: !2242, line: 102, baseType: !2240, size: 64, offset: 384)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2226, file: !2227, line: 113, baseType: !2241, size: 128, offset: 448)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2226, file: !2227, line: 114, baseType: !1570, size: 192, offset: 576)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2226, file: !2227, line: 115, baseType: !2263, size: 32, offset: 768)
!2263 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !2227, line: 59, baseType: !55, size: 32, elements: !2264)
!2264 = !{!2265, !2266, !2267, !2268}
!2265 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!2266 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!2267 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!2268 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2226, file: !2227, line: 116, baseType: !55, size: 32, offset: 800)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2226, file: !2227, line: 117, baseType: !2271, size: 64, offset: 832)
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 64)
!2272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2273)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !2227, line: 67, size: 256, elements: !2274)
!2274 = !{!2275, !2276, !2280, !2281}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2273, file: !2227, line: 73, baseType: !899, size: 64)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2273, file: !2227, line: 78, baseType: !2277, size: 64, offset: 64)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 64)
!2278 = !DISubroutineType(types: !2279)
!2279 = !{null, !2225}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2273, file: !2227, line: 83, baseType: !2277, size: 64, offset: 128)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2273, file: !2227, line: 89, baseType: !1093, size: 64, offset: 192)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2226, file: !2227, line: 118, baseType: !146, size: 64, offset: 896)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2226, file: !2227, line: 119, baseType: !152, size: 32, offset: 960)
!2284 = !DIDerivedType(tag: DW_TAG_member, scope: !2226, file: !2227, line: 120, baseType: !2285, size: 128, offset: 1024)
!2285 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2226, file: !2227, line: 120, size: 128, elements: !2286)
!2286 = !{!2287, !2293}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2285, file: !2227, line: 121, baseType: !2288, size: 128)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2289, line: 6, size: 128, elements: !2290)
!2289 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2290 = !{!2291, !2292}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2288, file: !2289, line: 7, baseType: !91, size: 64)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2288, file: !2289, line: 8, baseType: !91, size: 64, offset: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2285, file: !2227, line: 122, baseType: !2294)
!2294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2288, elements: !617)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2222, file: !807, line: 162, baseType: !146, size: 64, offset: 64)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !811, file: !807, line: 176, baseType: !32, size: 128, align: 64)
!2297 = !DIDerivedType(tag: DW_TAG_member, scope: !806, file: !807, line: 179, baseType: !2298, size: 32, offset: 384)
!2298 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !806, file: !807, line: 179, size: 32, elements: !2299)
!2299 = !{!2300, !2301, !2302, !2303}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2298, file: !807, line: 184, baseType: !413, size: 32)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2298, file: !807, line: 192, baseType: !55, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2298, file: !807, line: 194, baseType: !55, size: 32)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2298, file: !807, line: 195, baseType: !152, size: 32)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !806, file: !807, line: 199, baseType: !413, size: 32, offset: 416)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !705, file: !20, line: 1964, baseType: !2306, size: 64, offset: 1344)
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2307, size: 64)
!2307 = !DISubroutineType(types: !2308)
!2308 = !{!220, !281, !2309}
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 64)
!2310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2311, line: 12, size: 256, elements: !2312)
!2311 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2312 = !{!2313, !2314, !2315, !2316, !2317}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2310, file: !2311, line: 13, baseType: !828, size: 32)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2310, file: !2311, line: 16, baseType: !152, size: 32, offset: 32)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2310, file: !2311, line: 23, baseType: !16, size: 64, offset: 64)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2310, file: !2311, line: 30, baseType: !16, size: 64, offset: 128)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2310, file: !2311, line: 33, baseType: !2318, size: 64, offset: 192)
!2318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 64)
!2319 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !2311, line: 33, flags: DIFlagFwdDecl)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !705, file: !20, line: 1966, baseType: !2306, size: 64, offset: 1408)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !282, file: !20, line: 1424, baseType: !2322, size: 64, offset: 448)
!2322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 64)
!2323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2324)
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !2325, line: 322, size: 704, elements: !2326)
!2325 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!2326 = !{!2327, !2378, !2382, !2386, !2387, !2388, !2389, !2390, !2395, !2400, !2404}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2324, file: !2325, line: 323, baseType: !2328, size: 64)
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 64)
!2329 = !DISubroutineType(types: !2330)
!2330 = !{!152, !2331}
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 64)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !2325, line: 294, size: 1600, elements: !2333)
!2333 = !{!2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2363, !2364, !2365}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2332, file: !2325, line: 295, baseType: !589, size: 128)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2332, file: !2325, line: 296, baseType: !285, size: 128, offset: 128)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2332, file: !2325, line: 297, baseType: !285, size: 128, offset: 256)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2332, file: !2325, line: 298, baseType: !285, size: 128, offset: 384)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2332, file: !2325, line: 299, baseType: !367, size: 192, offset: 512)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2332, file: !2325, line: 300, baseType: !379, offset: 704)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2332, file: !2325, line: 301, baseType: !413, size: 32, offset: 704)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2332, file: !2325, line: 302, baseType: !281, size: 64, offset: 768)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2332, file: !2325, line: 303, baseType: !2343, size: 64, offset: 832)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !2325, line: 68, size: 64, elements: !2344)
!2344 = !{!2345, !2357}
!2345 = !DIDerivedType(tag: DW_TAG_member, scope: !2343, file: !2325, line: 69, baseType: !2346, size: 32)
!2346 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2343, file: !2325, line: 69, size: 32, elements: !2347)
!2347 = !{!2348, !2349, !2350}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2346, file: !2325, line: 70, baseType: !107, size: 32)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2346, file: !2325, line: 71, baseType: !115, size: 32)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2346, file: !2325, line: 72, baseType: !2351, size: 32)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2352, line: 24, baseType: !2353)
!2352 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2352, line: 22, size: 32, elements: !2354)
!2354 = !{!2355}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2353, file: !2352, line: 23, baseType: !2356, size: 32)
!2356 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2352, line: 20, baseType: !113)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2343, file: !2325, line: 74, baseType: !2358, size: 32, offset: 32)
!2358 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !2325, line: 54, baseType: !55, size: 32, elements: !2359)
!2359 = !{!2360, !2361, !2362}
!2360 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!2361 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!2362 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2332, file: !2325, line: 304, baseType: !209, size: 64, offset: 896)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2332, file: !2325, line: 305, baseType: !16, size: 64, offset: 960)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2332, file: !2325, line: 306, baseType: !2366, size: 576, offset: 1024)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !2325, line: 205, size: 576, elements: !2367)
!2367 = !{!2368, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2366, file: !2325, line: 206, baseType: !2369, size: 64)
!2369 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !2325, line: 66, baseType: !211)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2366, file: !2325, line: 207, baseType: !2369, size: 64, offset: 64)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2366, file: !2325, line: 208, baseType: !2369, size: 64, offset: 128)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2366, file: !2325, line: 209, baseType: !2369, size: 64, offset: 192)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2366, file: !2325, line: 210, baseType: !2369, size: 64, offset: 256)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2366, file: !2325, line: 211, baseType: !2369, size: 64, offset: 320)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2366, file: !2325, line: 212, baseType: !2369, size: 64, offset: 384)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2366, file: !2325, line: 213, baseType: !217, size: 64, offset: 448)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2366, file: !2325, line: 214, baseType: !217, size: 64, offset: 512)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2324, file: !2325, line: 324, baseType: !2379, size: 64, offset: 64)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 64)
!2380 = !DISubroutineType(types: !2381)
!2381 = !{!2331, !281, !152}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2324, file: !2325, line: 325, baseType: !2383, size: 64, offset: 128)
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 64)
!2384 = !DISubroutineType(types: !2385)
!2385 = !{null, !2331}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2324, file: !2325, line: 326, baseType: !2328, size: 64, offset: 192)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2324, file: !2325, line: 327, baseType: !2328, size: 64, offset: 256)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2324, file: !2325, line: 328, baseType: !2328, size: 64, offset: 320)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2324, file: !2325, line: 329, baseType: !733, size: 64, offset: 384)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2324, file: !2325, line: 332, baseType: !2391, size: 64, offset: 448)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 64)
!2392 = !DISubroutineType(types: !2393)
!2393 = !{!2394, !99}
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 64)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2324, file: !2325, line: 333, baseType: !2396, size: 64, offset: 512)
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 64)
!2397 = !DISubroutineType(types: !2398)
!2398 = !{!152, !99, !2399}
!2399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 64)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2324, file: !2325, line: 335, baseType: !2401, size: 64, offset: 576)
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 64)
!2402 = !DISubroutineType(types: !2403)
!2403 = !{!152, !99, !2394}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2324, file: !2325, line: 337, baseType: !2405, size: 64, offset: 640)
!2405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 64)
!2406 = !DISubroutineType(types: !2407)
!2407 = !{!152, !281, !2408}
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2343, size: 64)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !282, file: !20, line: 1425, baseType: !2410, size: 64, offset: 512)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 64)
!2411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2412)
!2412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !2325, line: 428, size: 704, elements: !2413)
!2413 = !{!2414, !2418, !2419, !2423, !2424, !2425, !2440, !2463, !2467, !2468, !2491}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2412, file: !2325, line: 429, baseType: !2415, size: 64)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 64)
!2416 = !DISubroutineType(types: !2417)
!2417 = !{!152, !281, !152, !152, !228}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2412, file: !2325, line: 430, baseType: !733, size: 64, offset: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2412, file: !2325, line: 431, baseType: !2420, size: 64, offset: 128)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 64)
!2421 = !DISubroutineType(types: !2422)
!2422 = !{!152, !281, !55}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2412, file: !2325, line: 432, baseType: !2420, size: 64, offset: 192)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2412, file: !2325, line: 433, baseType: !733, size: 64, offset: 256)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2412, file: !2325, line: 434, baseType: !2426, size: 64, offset: 320)
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64)
!2427 = !DISubroutineType(types: !2428)
!2428 = !{!152, !281, !152, !2429}
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 64)
!2430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !2325, line: 415, size: 256, elements: !2431)
!2431 = !{!2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2430, file: !2325, line: 416, baseType: !152, size: 32)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2430, file: !2325, line: 417, baseType: !55, size: 32, offset: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2430, file: !2325, line: 418, baseType: !55, size: 32, offset: 64)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2430, file: !2325, line: 420, baseType: !55, size: 32, offset: 96)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2430, file: !2325, line: 421, baseType: !55, size: 32, offset: 128)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2430, file: !2325, line: 422, baseType: !55, size: 32, offset: 160)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2430, file: !2325, line: 423, baseType: !55, size: 32, offset: 192)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2430, file: !2325, line: 424, baseType: !55, size: 32, offset: 224)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2412, file: !2325, line: 435, baseType: !2441, size: 64, offset: 384)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 64)
!2442 = !DISubroutineType(types: !2443)
!2443 = !{!152, !281, !2343, !2444}
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 64)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !2325, line: 343, size: 960, elements: !2446)
!2446 = !{!2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2445, file: !2325, line: 344, baseType: !152, size: 32)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2445, file: !2325, line: 345, baseType: !91, size: 64, offset: 64)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2445, file: !2325, line: 346, baseType: !91, size: 64, offset: 128)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2445, file: !2325, line: 347, baseType: !91, size: 64, offset: 192)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2445, file: !2325, line: 348, baseType: !91, size: 64, offset: 256)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2445, file: !2325, line: 349, baseType: !91, size: 64, offset: 320)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2445, file: !2325, line: 350, baseType: !91, size: 64, offset: 384)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2445, file: !2325, line: 351, baseType: !377, size: 64, offset: 448)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2445, file: !2325, line: 353, baseType: !377, size: 64, offset: 512)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2445, file: !2325, line: 354, baseType: !152, size: 32, offset: 576)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2445, file: !2325, line: 355, baseType: !152, size: 32, offset: 608)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2445, file: !2325, line: 356, baseType: !91, size: 64, offset: 640)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2445, file: !2325, line: 357, baseType: !91, size: 64, offset: 704)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2445, file: !2325, line: 358, baseType: !91, size: 64, offset: 768)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2445, file: !2325, line: 359, baseType: !377, size: 64, offset: 832)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2445, file: !2325, line: 360, baseType: !152, size: 32, offset: 896)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2412, file: !2325, line: 436, baseType: !2464, size: 64, offset: 448)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 64)
!2465 = !DISubroutineType(types: !2466)
!2466 = !{!152, !281, !2408, !2444}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2412, file: !2325, line: 438, baseType: !2441, size: 64, offset: 512)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2412, file: !2325, line: 439, baseType: !2469, size: 64, offset: 576)
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 64)
!2470 = !DISubroutineType(types: !2471)
!2471 = !{!152, !281, !2472}
!2472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2473, size: 64)
!2473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !2325, line: 409, size: 1408, elements: !2474)
!2474 = !{!2475, !2476}
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2473, file: !2325, line: 410, baseType: !55, size: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2473, file: !2325, line: 411, baseType: !2477, size: 1344, offset: 64)
!2477 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2478, size: 1344, elements: !697)
!2478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !2325, line: 395, size: 448, elements: !2479)
!2479 = !{!2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2490}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2478, file: !2325, line: 396, baseType: !55, size: 32)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2478, file: !2325, line: 397, baseType: !55, size: 32, offset: 32)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2478, file: !2325, line: 399, baseType: !55, size: 32, offset: 64)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2478, file: !2325, line: 400, baseType: !55, size: 32, offset: 96)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2478, file: !2325, line: 401, baseType: !55, size: 32, offset: 128)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2478, file: !2325, line: 402, baseType: !55, size: 32, offset: 160)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2478, file: !2325, line: 403, baseType: !55, size: 32, offset: 192)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2478, file: !2325, line: 404, baseType: !93, size: 64, offset: 256)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2478, file: !2325, line: 405, baseType: !2489, size: 64, offset: 320)
!2489 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !12, line: 126, baseType: !91)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2478, file: !2325, line: 406, baseType: !2489, size: 64, offset: 384)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2412, file: !2325, line: 440, baseType: !2420, size: 64, offset: 640)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !282, file: !20, line: 1426, baseType: !2493, size: 64, offset: 576)
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 64)
!2494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2495)
!2495 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !20, line: 49, flags: DIFlagFwdDecl)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !282, file: !20, line: 1427, baseType: !16, size: 64, offset: 640)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !282, file: !20, line: 1428, baseType: !16, size: 64, offset: 704)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !282, file: !20, line: 1429, baseType: !16, size: 64, offset: 768)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !282, file: !20, line: 1430, baseType: !50, size: 64, offset: 832)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !282, file: !20, line: 1431, baseType: !468, size: 256, offset: 896)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !282, file: !20, line: 1432, baseType: !152, size: 32, offset: 1152)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !282, file: !20, line: 1433, baseType: !413, size: 32, offset: 1184)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !282, file: !20, line: 1437, baseType: !2504, size: 64, offset: 1216)
!2504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 64)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 64)
!2506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2507)
!2507 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !20, line: 1437, flags: DIFlagFwdDecl)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !282, file: !20, line: 1449, baseType: !2509, size: 64, offset: 1280)
!2509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !68, line: 34, size: 64, elements: !2510)
!2510 = !{!2511}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2509, file: !68, line: 35, baseType: !71, size: 64)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !282, file: !20, line: 1450, baseType: !285, size: 128, offset: 1344)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !282, file: !20, line: 1451, baseType: !2514, size: 64, offset: 1472)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 64)
!2515 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !20, line: 699, flags: DIFlagFwdDecl)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !282, file: !20, line: 1452, baseType: !1811, size: 64, offset: 1536)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !282, file: !20, line: 1453, baseType: !2518, size: 64, offset: 1600)
!2518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 64)
!2519 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !20, line: 1453, flags: DIFlagFwdDecl)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !282, file: !20, line: 1454, baseType: !589, size: 128, offset: 1664)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !282, file: !20, line: 1455, baseType: !55, size: 32, offset: 1792)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !282, file: !20, line: 1456, baseType: !2523, size: 2432, offset: 1856)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !2325, line: 518, size: 2432, elements: !2524)
!2524 = !{!2525, !2526, !2527, !2529, !2561}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2523, file: !2325, line: 519, baseType: !55, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2523, file: !2325, line: 520, baseType: !468, size: 256, offset: 64)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2523, file: !2325, line: 521, baseType: !2528, size: 192, offset: 320)
!2528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !99, size: 192, elements: !697)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2523, file: !2325, line: 522, baseType: !2530, size: 1728, offset: 512)
!2530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2531, size: 1728, elements: !697)
!2531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !2325, line: 222, size: 576, elements: !2532)
!2532 = !{!2533, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560}
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2531, file: !2325, line: 223, baseType: !2534, size: 64)
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2535, size: 64)
!2535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !2325, line: 443, size: 256, elements: !2536)
!2536 = !{!2537, !2538, !2551, !2552}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2535, file: !2325, line: 444, baseType: !152, size: 32)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2535, file: !2325, line: 445, baseType: !2539, size: 64, offset: 64)
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 64)
!2540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2541)
!2541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !2325, line: 310, size: 512, elements: !2542)
!2542 = !{!2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2541, file: !2325, line: 311, baseType: !733, size: 64)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2541, file: !2325, line: 312, baseType: !733, size: 64, offset: 64)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2541, file: !2325, line: 313, baseType: !733, size: 64, offset: 128)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2541, file: !2325, line: 314, baseType: !733, size: 64, offset: 192)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2541, file: !2325, line: 315, baseType: !2328, size: 64, offset: 256)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2541, file: !2325, line: 316, baseType: !2328, size: 64, offset: 320)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2541, file: !2325, line: 317, baseType: !2328, size: 64, offset: 384)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2541, file: !2325, line: 318, baseType: !2405, size: 64, offset: 448)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2535, file: !2325, line: 446, baseType: !639, size: 64, offset: 128)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2535, file: !2325, line: 447, baseType: !2534, size: 64, offset: 192)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2531, file: !2325, line: 224, baseType: !152, size: 32, offset: 64)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2531, file: !2325, line: 226, baseType: !285, size: 128, offset: 128)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2531, file: !2325, line: 227, baseType: !16, size: 64, offset: 256)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2531, file: !2325, line: 228, baseType: !55, size: 32, offset: 320)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2531, file: !2325, line: 229, baseType: !55, size: 32, offset: 352)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2531, file: !2325, line: 230, baseType: !2369, size: 64, offset: 384)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2531, file: !2325, line: 231, baseType: !2369, size: 64, offset: 448)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2531, file: !2325, line: 232, baseType: !146, size: 64, offset: 512)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2523, file: !2325, line: 523, baseType: !2562, size: 192, offset: 2240)
!2562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2539, size: 192, elements: !697)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !282, file: !20, line: 1458, baseType: !2564, size: 2112, offset: 4288)
!2564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !20, line: 1410, size: 2112, elements: !2565)
!2565 = !{!2566, !2567, !2568}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2564, file: !20, line: 1411, baseType: !152, size: 32)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2564, file: !20, line: 1412, baseType: !1549, size: 128, offset: 64)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2564, file: !20, line: 1413, baseType: !2569, size: 1920, offset: 192)
!2569 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2570, size: 1920, elements: !697)
!2570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2571, line: 12, size: 640, elements: !2572)
!2571 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2572 = !{!2573, !2581, !2583, !2588, !2589}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2570, file: !2571, line: 13, baseType: !2574, size: 320)
!2574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2575, line: 17, size: 320, elements: !2576)
!2575 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2576 = !{!2577, !2578, !2579, !2580}
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2574, file: !2575, line: 18, baseType: !152, size: 32)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2574, file: !2575, line: 19, baseType: !152, size: 32, offset: 32)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2574, file: !2575, line: 20, baseType: !1549, size: 128, offset: 64)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2574, file: !2575, line: 22, baseType: !32, size: 128, align: 64, offset: 192)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2570, file: !2571, line: 14, baseType: !2582, size: 64, offset: 320)
!2582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2570, file: !2571, line: 15, baseType: !2584, size: 64, offset: 384)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2585, line: 16, size: 64, elements: !2586)
!2585 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2586 = !{!2587}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2584, file: !2585, line: 17, baseType: !1278, size: 64)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2570, file: !2571, line: 16, baseType: !1549, size: 128, offset: 448)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2570, file: !2571, line: 17, baseType: !413, size: 32, offset: 576)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !282, file: !20, line: 1465, baseType: !146, size: 64, offset: 6400)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !282, file: !20, line: 1468, baseType: !85, size: 32, offset: 6464)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !282, file: !20, line: 1470, baseType: !217, size: 64, offset: 6528)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !282, file: !20, line: 1471, baseType: !217, size: 64, offset: 6592)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !282, file: !20, line: 1473, baseType: !87, size: 32, offset: 6656)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !282, file: !20, line: 1474, baseType: !2596, size: 64, offset: 6720)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 64)
!2597 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !20, line: 603, flags: DIFlagFwdDecl)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !282, file: !20, line: 1477, baseType: !2599, size: 256, offset: 6784)
!2599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 256, elements: !2118)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !282, file: !20, line: 1478, baseType: !2601, size: 128, offset: 7040)
!2601 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2602, line: 18, baseType: !2603)
!2602 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2603 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2602, line: 16, size: 128, elements: !2604)
!2604 = !{!2605}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2603, file: !2602, line: 17, baseType: !2606, size: 128)
!2606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !635, size: 128, elements: !1620)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !282, file: !20, line: 1480, baseType: !55, size: 32, offset: 7168)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !282, file: !20, line: 1481, baseType: !2609, size: 32, offset: 7200)
!2609 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !12, line: 150, baseType: !55)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !282, file: !20, line: 1487, baseType: !367, size: 192, offset: 7232)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !282, file: !20, line: 1493, baseType: !135, size: 64, offset: 7424)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !282, file: !20, line: 1495, baseType: !2613, size: 64, offset: 7488)
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 64)
!2614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2615)
!2615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !52, line: 135, size: 1024, align: 512, elements: !2616)
!2616 = !{!2617, !2621, !2622, !2629, !2635, !2639, !2643, !2647, !2648, !2652, !2656, !2661, !2665}
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2615, file: !52, line: 136, baseType: !2618, size: 64)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 64)
!2619 = !DISubroutineType(types: !2620)
!2620 = !{!152, !50, !55}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2615, file: !52, line: 137, baseType: !2618, size: 64, offset: 64)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2615, file: !52, line: 138, baseType: !2623, size: 64, offset: 128)
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2624, size: 64)
!2624 = !DISubroutineType(types: !2625)
!2625 = !{!152, !2626, !2628}
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 64)
!2627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !51)
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !76, size: 64)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2615, file: !52, line: 139, baseType: !2630, size: 64, offset: 192)
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 64)
!2631 = !DISubroutineType(types: !2632)
!2632 = !{!152, !2626, !55, !135, !2633}
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 64)
!2634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !76)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2615, file: !52, line: 141, baseType: !2636, size: 64, offset: 256)
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2637, size: 64)
!2637 = !DISubroutineType(types: !2638)
!2638 = !{!152, !2626}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2615, file: !52, line: 142, baseType: !2640, size: 64, offset: 320)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 64)
!2641 = !DISubroutineType(types: !2642)
!2642 = !{!152, !50}
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2615, file: !52, line: 143, baseType: !2644, size: 64, offset: 384)
!2644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2645, size: 64)
!2645 = !DISubroutineType(types: !2646)
!2646 = !{null, !50}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2615, file: !52, line: 144, baseType: !2644, size: 64, offset: 448)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2615, file: !52, line: 145, baseType: !2649, size: 64, offset: 512)
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2650, size: 64)
!2650 = !DISubroutineType(types: !2651)
!2651 = !{null, !50, !99}
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2615, file: !52, line: 146, baseType: !2653, size: 64, offset: 576)
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 64)
!2654 = !DISubroutineType(types: !2655)
!2655 = !{!163, !50, !163, !152}
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2615, file: !52, line: 147, baseType: !2657, size: 64, offset: 640)
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 64)
!2658 = !DISubroutineType(types: !2659)
!2659 = !{!45, !2660}
!2660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !41, size: 64)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2615, file: !52, line: 148, baseType: !2662, size: 64, offset: 704)
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 64)
!2663 = !DISubroutineType(types: !2664)
!2664 = !{!152, !228, !168}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2615, file: !52, line: 149, baseType: !2666, size: 64, offset: 768)
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 64)
!2667 = !DISubroutineType(types: !2668)
!2668 = !{!50, !50, !2669}
!2669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2670, size: 64)
!2670 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !100)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !282, file: !20, line: 1500, baseType: !152, size: 32, offset: 7552)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !282, file: !20, line: 1502, baseType: !2673, size: 448, offset: 7616)
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2311, line: 60, size: 448, elements: !2674)
!2674 = !{!2675, !2680, !2681, !2682, !2683, !2684, !2685}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2673, file: !2311, line: 61, baseType: !2676, size: 64)
!2676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 64)
!2677 = !DISubroutineType(types: !2678)
!2678 = !{!16, !2679, !2309}
!2679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 64)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2673, file: !2311, line: 63, baseType: !2676, size: 64, offset: 64)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2673, file: !2311, line: 66, baseType: !220, size: 64, offset: 128)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2673, file: !2311, line: 67, baseType: !152, size: 32, offset: 192)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2673, file: !2311, line: 68, baseType: !55, size: 32, offset: 224)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2673, file: !2311, line: 71, baseType: !285, size: 128, offset: 256)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2673, file: !2311, line: 77, baseType: !2686, size: 64, offset: 384)
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !282, file: !20, line: 1505, baseType: !371, size: 64, offset: 8064)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !282, file: !20, line: 1508, baseType: !371, size: 64, offset: 8128)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !282, file: !20, line: 1511, baseType: !152, size: 32, offset: 8192)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !282, file: !20, line: 1514, baseType: !973, size: 32, offset: 8224)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !282, file: !20, line: 1517, baseType: !2692, size: 64, offset: 8256)
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 64)
!2693 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1846, line: 18, flags: DIFlagFwdDecl)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !282, file: !20, line: 1518, baseType: !687, size: 64, offset: 8320)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !282, file: !20, line: 1525, baseType: !400, size: 64, offset: 8384)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !282, file: !20, line: 1532, baseType: !2697, size: 64, offset: 8448)
!2697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2698, line: 52, size: 64, elements: !2699)
!2698 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2699 = !{!2700}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2697, file: !2698, line: 53, baseType: !2701, size: 64)
!2701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2702, size: 64)
!2702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2698, line: 40, size: 256, elements: !2703)
!2703 = !{!2704, !2705, !2710}
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2702, file: !2698, line: 42, baseType: !379)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2702, file: !2698, line: 44, baseType: !2706, size: 192)
!2706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2698, line: 28, size: 192, elements: !2707)
!2707 = !{!2708, !2709}
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2706, file: !2698, line: 29, baseType: !285, size: 128)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2706, file: !2698, line: 31, baseType: !220, size: 64, offset: 128)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2702, file: !2698, line: 49, baseType: !220, size: 64, offset: 192)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !282, file: !20, line: 1533, baseType: !2697, size: 64, offset: 8512)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !282, file: !20, line: 1534, baseType: !32, size: 128, align: 64, offset: 8576)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !282, file: !20, line: 1535, baseType: !1845, size: 256, offset: 8704)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !282, file: !20, line: 1537, baseType: !367, size: 192, offset: 8960)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !282, file: !20, line: 1542, baseType: !152, size: 32, offset: 9152)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !282, file: !20, line: 1545, baseType: !379, offset: 9184)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !282, file: !20, line: 1546, baseType: !285, size: 128, offset: 9216)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !282, file: !20, line: 1548, baseType: !379, offset: 9344)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !282, file: !20, line: 1549, baseType: !285, size: 128, offset: 9344)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !100, file: !20, line: 624, baseType: !818, size: 64, offset: 256)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !100, file: !20, line: 631, baseType: !16, size: 64, offset: 320)
!2722 = !DIDerivedType(tag: DW_TAG_member, scope: !100, file: !20, line: 639, baseType: !2723, size: 32, offset: 384)
!2723 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !100, file: !20, line: 639, size: 32, elements: !2724)
!2724 = !{!2725, !2727}
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2723, file: !20, line: 640, baseType: !2726, size: 32)
!2726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !55)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2723, file: !20, line: 641, baseType: !55, size: 32)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !100, file: !20, line: 643, baseType: !191, size: 32, offset: 416)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !100, file: !20, line: 644, baseType: !209, size: 64, offset: 448)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !100, file: !20, line: 645, baseType: !213, size: 128, offset: 512)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !100, file: !20, line: 646, baseType: !213, size: 128, offset: 640)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !100, file: !20, line: 647, baseType: !213, size: 128, offset: 768)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !100, file: !20, line: 648, baseType: !379, offset: 896)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !100, file: !20, line: 649, baseType: !104, size: 16, offset: 896)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !100, file: !20, line: 650, baseType: !634, size: 8, offset: 912)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !100, file: !20, line: 651, baseType: !634, size: 8, offset: 920)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !100, file: !20, line: 652, baseType: !2489, size: 64, offset: 960)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !100, file: !20, line: 659, baseType: !16, size: 64, offset: 1024)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !100, file: !20, line: 660, baseType: !468, size: 256, offset: 1088)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !100, file: !20, line: 662, baseType: !16, size: 64, offset: 1344)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !100, file: !20, line: 663, baseType: !16, size: 64, offset: 1408)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !100, file: !20, line: 665, baseType: !589, size: 128, offset: 1472)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !100, file: !20, line: 666, baseType: !285, size: 128, offset: 1600)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !100, file: !20, line: 675, baseType: !285, size: 128, offset: 1728)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !100, file: !20, line: 676, baseType: !285, size: 128, offset: 1856)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !100, file: !20, line: 677, baseType: !285, size: 128, offset: 1984)
!2747 = !DIDerivedType(tag: DW_TAG_member, scope: !100, file: !20, line: 678, baseType: !2748, size: 128, offset: 2112)
!2748 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !100, file: !20, line: 678, size: 128, elements: !2749)
!2749 = !{!2750, !2751}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2748, file: !20, line: 679, baseType: !687, size: 64)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2748, file: !20, line: 680, baseType: !32, size: 128, align: 64)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !100, file: !20, line: 682, baseType: !373, size: 64, offset: 2240)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !100, file: !20, line: 683, baseType: !373, size: 64, offset: 2304)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !100, file: !20, line: 684, baseType: !413, size: 32, offset: 2368)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !100, file: !20, line: 685, baseType: !413, size: 32, offset: 2400)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !100, file: !20, line: 686, baseType: !413, size: 32, offset: 2432)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !100, file: !20, line: 688, baseType: !413, size: 32, offset: 2464)
!2758 = !DIDerivedType(tag: DW_TAG_member, scope: !100, file: !20, line: 690, baseType: !2759, size: 64, offset: 2496)
!2759 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !100, file: !20, line: 690, size: 64, elements: !2760)
!2760 = !{!2761, !2992}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2759, file: !20, line: 691, baseType: !2762, size: 64)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 64)
!2763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2764)
!2764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !20, line: 1822, size: 2048, elements: !2765)
!2765 = !{!2766, !2767, !2771, !2775, !2779, !2780, !2781, !2785, !2798, !2799, !2816, !2820, !2821, !2825, !2826, !2830, !2835, !2836, !2840, !2844, !2952, !2956, !2957, !2961, !2962, !2966, !2970, !2975, !2979, !2983, !2987, !2991}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2764, file: !20, line: 1823, baseType: !639, size: 64)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2764, file: !20, line: 1824, baseType: !2768, size: 64, offset: 64)
!2768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2769, size: 64)
!2769 = !DISubroutineType(types: !2770)
!2770 = !{!209, !18, !209, !152}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2764, file: !20, line: 1825, baseType: !2772, size: 64, offset: 128)
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 64)
!2773 = !DISubroutineType(types: !2774)
!2774 = !{!257, !18, !163, !11, !780}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2764, file: !20, line: 1826, baseType: !2776, size: 64, offset: 192)
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = !DISubroutineType(types: !2778)
!2778 = !{!257, !18, !135, !11, !780}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2764, file: !20, line: 1827, baseType: !903, size: 64, offset: 256)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2764, file: !20, line: 1828, baseType: !903, size: 64, offset: 320)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2764, file: !20, line: 1829, baseType: !2782, size: 64, offset: 384)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 64)
!2783 = !DISubroutineType(types: !2784)
!2784 = !{!152, !906, !168}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2764, file: !20, line: 1830, baseType: !2786, size: 64, offset: 448)
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 64)
!2787 = !DISubroutineType(types: !2788)
!2788 = !{!152, !18, !2789}
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 64)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !20, line: 1776, size: 128, elements: !2791)
!2791 = !{!2792, !2797}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2790, file: !20, line: 1777, baseType: !2793, size: 64)
!2793 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !20, line: 1773, baseType: !2794)
!2794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2795, size: 64)
!2795 = !DISubroutineType(types: !2796)
!2796 = !{!152, !2789, !135, !152, !209, !91, !55}
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2790, file: !20, line: 1778, baseType: !209, size: 64, offset: 64)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2764, file: !20, line: 1831, baseType: !2786, size: 64, offset: 512)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2764, file: !20, line: 1832, baseType: !2800, size: 64, offset: 576)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 64)
!2801 = !DISubroutineType(types: !2802)
!2802 = !{!2803, !18, !2805}
!2803 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2804, line: 52, baseType: !55)
!2804 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 64)
!2806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !2807, line: 43, size: 128, elements: !2808)
!2807 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!2808 = !{!2809, !2815}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !2806, file: !2807, line: 44, baseType: !2810, size: 64)
!2810 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !2807, line: 37, baseType: !2811)
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2812, size: 64)
!2812 = !DISubroutineType(types: !2813)
!2813 = !{null, !18, !2814, !2805}
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !2806, file: !2807, line: 45, baseType: !2803, size: 32, offset: 64)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2764, file: !20, line: 1833, baseType: !2817, size: 64, offset: 640)
!2817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2818, size: 64)
!2818 = !DISubroutineType(types: !2819)
!2819 = !{!220, !18, !55, !16}
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2764, file: !20, line: 1834, baseType: !2817, size: 64, offset: 704)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2764, file: !20, line: 1835, baseType: !2822, size: 64, offset: 768)
!2822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2823, size: 64)
!2823 = !DISubroutineType(types: !2824)
!2824 = !{!152, !18, !1046}
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2764, file: !20, line: 1836, baseType: !16, size: 64, offset: 832)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2764, file: !20, line: 1837, baseType: !2827, size: 64, offset: 896)
!2827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2828, size: 64)
!2828 = !DISubroutineType(types: !2829)
!2829 = !{!152, !99, !18}
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2764, file: !20, line: 1838, baseType: !2831, size: 64, offset: 960)
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2832, size: 64)
!2832 = !DISubroutineType(types: !2833)
!2833 = !{!152, !18, !2834}
!2834 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !20, line: 1007, baseType: !146)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2764, file: !20, line: 1839, baseType: !2827, size: 64, offset: 1024)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2764, file: !20, line: 1840, baseType: !2837, size: 64, offset: 1088)
!2837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2838, size: 64)
!2838 = !DISubroutineType(types: !2839)
!2839 = !{!152, !18, !209, !209, !152}
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2764, file: !20, line: 1841, baseType: !2841, size: 64, offset: 1152)
!2841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2842, size: 64)
!2842 = !DISubroutineType(types: !2843)
!2843 = !{!152, !152, !18, !152}
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2764, file: !20, line: 1842, baseType: !2845, size: 64, offset: 1216)
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2846, size: 64)
!2846 = !DISubroutineType(types: !2847)
!2847 = !{!152, !18, !152, !2848}
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2849, size: 64)
!2849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !20, line: 1062, size: 1664, elements: !2850)
!2850 = !{!2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2882, !2883, !2884, !2897, !2928}
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !2849, file: !20, line: 1063, baseType: !2848, size: 64)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !2849, file: !20, line: 1064, baseType: !285, size: 128, offset: 64)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !2849, file: !20, line: 1065, baseType: !589, size: 128, offset: 192)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !2849, file: !20, line: 1066, baseType: !285, size: 128, offset: 320)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !2849, file: !20, line: 1069, baseType: !285, size: 128, offset: 448)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !2849, file: !20, line: 1072, baseType: !2834, size: 64, offset: 576)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !2849, file: !20, line: 1073, baseType: !55, size: 32, offset: 640)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !2849, file: !20, line: 1074, baseType: !97, size: 8, offset: 672)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !2849, file: !20, line: 1075, baseType: !55, size: 32, offset: 704)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !2849, file: !20, line: 1076, baseType: !152, size: 32, offset: 736)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !2849, file: !20, line: 1077, baseType: !1549, size: 128, offset: 768)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !2849, file: !20, line: 1078, baseType: !18, size: 64, offset: 896)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !2849, file: !20, line: 1079, baseType: !209, size: 64, offset: 960)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !2849, file: !20, line: 1080, baseType: !209, size: 64, offset: 1024)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !2849, file: !20, line: 1082, baseType: !2866, size: 64, offset: 1088)
!2866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2867, size: 64)
!2867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !20, line: 1314, size: 320, elements: !2868)
!2868 = !{!2869, !2877, !2878, !2879, !2880, !2881}
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !2867, file: !20, line: 1315, baseType: !2870)
!2870 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2871, line: 20, baseType: !2872)
!2871 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2872 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2871, line: 11, elements: !2873)
!2873 = !{!2874}
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2872, file: !2871, line: 12, baseType: !2875)
!2875 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !391, line: 33, baseType: !2876)
!2876 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !391, line: 31, elements: !393)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2867, file: !20, line: 1316, baseType: !152, size: 32)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !2867, file: !20, line: 1317, baseType: !152, size: 32, offset: 32)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !2867, file: !20, line: 1318, baseType: !2866, size: 64, offset: 64)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !2867, file: !20, line: 1319, baseType: !18, size: 64, offset: 128)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !2867, file: !20, line: 1320, baseType: !32, size: 128, align: 64, offset: 192)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !2849, file: !20, line: 1084, baseType: !16, size: 64, offset: 1152)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !2849, file: !20, line: 1085, baseType: !16, size: 64, offset: 1216)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !2849, file: !20, line: 1087, baseType: !2885, size: 64, offset: 1280)
!2885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2886, size: 64)
!2886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2887)
!2887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !20, line: 1011, size: 128, elements: !2888)
!2888 = !{!2889, !2893}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !2887, file: !20, line: 1012, baseType: !2890, size: 64)
!2890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2891, size: 64)
!2891 = !DISubroutineType(types: !2892)
!2892 = !{null, !2848, !2848}
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !2887, file: !20, line: 1013, baseType: !2894, size: 64, offset: 64)
!2894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2895, size: 64)
!2895 = !DISubroutineType(types: !2896)
!2896 = !{null, !2848}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !2849, file: !20, line: 1088, baseType: !2898, size: 64, offset: 1344)
!2898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2899, size: 64)
!2899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2900)
!2900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !20, line: 1016, size: 512, elements: !2901)
!2901 = !{!2902, !2906, !2910, !2911, !2915, !2919, !2923, !2927}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !2900, file: !20, line: 1017, baseType: !2903, size: 64)
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2904, size: 64)
!2904 = !DISubroutineType(types: !2905)
!2905 = !{!2834, !2834}
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !2900, file: !20, line: 1018, baseType: !2907, size: 64, offset: 64)
!2907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2908, size: 64)
!2908 = !DISubroutineType(types: !2909)
!2909 = !{null, !2834}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !2900, file: !20, line: 1019, baseType: !2894, size: 64, offset: 128)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !2900, file: !20, line: 1020, baseType: !2912, size: 64, offset: 192)
!2912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2913, size: 64)
!2913 = !DISubroutineType(types: !2914)
!2914 = !{!152, !2848, !152}
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !2900, file: !20, line: 1021, baseType: !2916, size: 64, offset: 256)
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2917, size: 64)
!2917 = !DISubroutineType(types: !2918)
!2918 = !{!168, !2848}
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !2900, file: !20, line: 1022, baseType: !2920, size: 64, offset: 320)
!2920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2921, size: 64)
!2921 = !DISubroutineType(types: !2922)
!2922 = !{!152, !2848, !152, !288}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !2900, file: !20, line: 1023, baseType: !2924, size: 64, offset: 384)
!2924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2925, size: 64)
!2925 = !DISubroutineType(types: !2926)
!2926 = !{null, !2848, !880}
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !2900, file: !20, line: 1024, baseType: !2916, size: 64, offset: 448)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !2849, file: !20, line: 1097, baseType: !2929, size: 256, offset: 1408)
!2929 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2849, file: !20, line: 1089, size: 256, elements: !2930)
!2930 = !{!2931, !2940, !2946}
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !2929, file: !20, line: 1090, baseType: !2932, size: 256)
!2932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !2933, line: 10, size: 256, elements: !2934)
!2933 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!2934 = !{!2935, !2936, !2939}
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2932, file: !2933, line: 11, baseType: !85, size: 32)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2932, file: !2933, line: 12, baseType: !2937, size: 64, offset: 64)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 64)
!2938 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !2933, line: 5, flags: DIFlagFwdDecl)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2932, file: !2933, line: 13, baseType: !285, size: 128, offset: 128)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !2929, file: !20, line: 1091, baseType: !2941, size: 64)
!2941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !2933, line: 17, size: 64, elements: !2942)
!2942 = !{!2943}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2941, file: !2933, line: 18, baseType: !2944, size: 64)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 64)
!2945 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !2933, line: 16, flags: DIFlagFwdDecl)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !2929, file: !20, line: 1096, baseType: !2947, size: 192)
!2947 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2929, file: !20, line: 1092, size: 192, elements: !2948)
!2948 = !{!2949, !2950, !2951}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !2947, file: !20, line: 1093, baseType: !285, size: 128)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2947, file: !20, line: 1094, baseType: !152, size: 32, offset: 128)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !2947, file: !20, line: 1095, baseType: !55, size: 32, offset: 160)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2764, file: !20, line: 1843, baseType: !2953, size: 64, offset: 1280)
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2954, size: 64)
!2954 = !DISubroutineType(types: !2955)
!2955 = !{!257, !18, !805, !152, !11, !780, !152}
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2764, file: !20, line: 1844, baseType: !1172, size: 64, offset: 1344)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2764, file: !20, line: 1845, baseType: !2958, size: 64, offset: 1408)
!2958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2959, size: 64)
!2959 = !DISubroutineType(types: !2960)
!2960 = !{!152, !152}
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2764, file: !20, line: 1846, baseType: !2845, size: 64, offset: 1472)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2764, file: !20, line: 1847, baseType: !2963, size: 64, offset: 1536)
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 64)
!2964 = !DISubroutineType(types: !2965)
!2965 = !{!257, !1986, !18, !780, !11, !55}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2764, file: !20, line: 1848, baseType: !2967, size: 64, offset: 1600)
!2967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2968, size: 64)
!2968 = !DISubroutineType(types: !2969)
!2969 = !{!257, !18, !780, !1986, !11, !55}
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2764, file: !20, line: 1849, baseType: !2971, size: 64, offset: 1664)
!2971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2972, size: 64)
!2972 = !DISubroutineType(types: !2973)
!2973 = !{!152, !18, !220, !2974, !880}
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2848, size: 64)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2764, file: !20, line: 1850, baseType: !2976, size: 64, offset: 1728)
!2976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2977, size: 64)
!2977 = !DISubroutineType(types: !2978)
!2978 = !{!220, !18, !152, !209, !209}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2764, file: !20, line: 1852, baseType: !2980, size: 64, offset: 1792)
!2980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2981, size: 64)
!2981 = !DISubroutineType(types: !2982)
!2982 = !{null, !759, !18}
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2764, file: !20, line: 1856, baseType: !2984, size: 64, offset: 1856)
!2984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2985, size: 64)
!2985 = !DISubroutineType(types: !2986)
!2986 = !{!257, !18, !209, !18, !209, !11, !55}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2764, file: !20, line: 1858, baseType: !2988, size: 64, offset: 1920)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 64)
!2989 = !DISubroutineType(types: !2990)
!2990 = !{!209, !18, !209, !18, !209, !209, !55}
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2764, file: !20, line: 1861, baseType: !2837, size: 64, offset: 1984)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2759, file: !20, line: 692, baseType: !712, size: 64)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !100, file: !20, line: 694, baseType: !2994, size: 64, offset: 2560)
!2994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2995, size: 64)
!2995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !20, line: 1100, size: 384, elements: !2996)
!2996 = !{!2997, !2998, !2999, !3000}
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !2995, file: !20, line: 1101, baseType: !379)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !2995, file: !20, line: 1102, baseType: !285, size: 128)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !2995, file: !20, line: 1103, baseType: !285, size: 128, offset: 128)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !2995, file: !20, line: 1104, baseType: !285, size: 128, offset: 256)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !100, file: !20, line: 695, baseType: !819, size: 1216, align: 64, offset: 2624)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !100, file: !20, line: 696, baseType: !285, size: 128, offset: 3840)
!3003 = !DIDerivedType(tag: DW_TAG_member, scope: !100, file: !20, line: 697, baseType: !3004, size: 64, offset: 3968)
!3004 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !100, file: !20, line: 697, size: 64, elements: !3005)
!3005 = !{!3006, !3007, !3008, !3011, !3012}
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3004, file: !20, line: 698, baseType: !1986, size: 64)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3004, file: !20, line: 699, baseType: !2514, size: 64)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3004, file: !20, line: 700, baseType: !3009, size: 64)
!3009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3010, size: 64)
!3010 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !20, line: 700, flags: DIFlagFwdDecl)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3004, file: !20, line: 701, baseType: !163, size: 64)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3004, file: !20, line: 702, baseType: !55, size: 32)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !100, file: !20, line: 705, baseType: !87, size: 32, offset: 4032)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !100, file: !20, line: 708, baseType: !87, size: 32, offset: 4064)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !100, file: !20, line: 709, baseType: !2596, size: 64, offset: 4096)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !100, file: !20, line: 720, baseType: !146, size: 64, offset: 4160)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !51, file: !52, line: 98, baseType: !3018, size: 256, offset: 448)
!3018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !97, size: 256, elements: !2118)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !51, file: !52, line: 101, baseType: !3020, size: 32, offset: 704)
!3020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3021, line: 25, size: 32, elements: !3022)
!3021 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3022 = !{!3023}
!3023 = !DIDerivedType(tag: DW_TAG_member, scope: !3020, file: !3021, line: 26, baseType: !3024, size: 32)
!3024 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3020, file: !3021, line: 26, size: 32, elements: !3025)
!3025 = !{!3026}
!3026 = !DIDerivedType(tag: DW_TAG_member, scope: !3024, file: !3021, line: 30, baseType: !3027, size: 32)
!3027 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3024, file: !3021, line: 30, size: 32, elements: !3028)
!3028 = !{!3029, !3030}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3027, file: !3021, line: 31, baseType: !379)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3027, file: !3021, line: 32, baseType: !152, size: 32)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !51, file: !52, line: 102, baseType: !2613, size: 64, offset: 768)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !51, file: !52, line: 103, baseType: !281, size: 64, offset: 832)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !51, file: !52, line: 104, baseType: !16, size: 64, offset: 896)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !51, file: !52, line: 105, baseType: !146, size: 64, offset: 960)
!3035 = !DIDerivedType(tag: DW_TAG_member, scope: !51, file: !52, line: 107, baseType: !3036, size: 128, offset: 1024)
!3036 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !51, file: !52, line: 107, size: 128, elements: !3037)
!3037 = !{!3038, !3039}
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3036, file: !52, line: 108, baseType: !285, size: 128)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3036, file: !52, line: 109, baseType: !2814, size: 64)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !51, file: !52, line: 111, baseType: !285, size: 128, offset: 1152)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !51, file: !52, line: 112, baseType: !285, size: 128, offset: 1280)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !51, file: !52, line: 120, baseType: !3043, size: 128, offset: 1408)
!3043 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !51, file: !52, line: 116, size: 128, elements: !3044)
!3044 = !{!3045, !3046, !3047}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3043, file: !52, line: 117, baseType: !589, size: 128)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3043, file: !52, line: 118, baseType: !67, size: 128)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3043, file: !52, line: 119, baseType: !32, size: 128, align: 64)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_sb", scope: !46, file: !47, line: 73, baseType: !281, size: 64, offset: 64)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_flags", scope: !46, file: !47, line: 74, baseType: !152, size: 32, offset: 128)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !41, file: !42, line: 10, baseType: !50, size: 64, offset: 64)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !19, file: !20, line: 922, baseType: !99, size: 64, offset: 256)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !19, file: !20, line: 923, baseType: !2762, size: 64, offset: 320)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !19, file: !20, line: 929, baseType: !379, offset: 384)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !19, file: !20, line: 930, baseType: !3055, size: 32, offset: 384)
!3055 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !20, line: 296, baseType: !55, size: 32, elements: !3056)
!3056 = !{!3057, !3058, !3059, !3060, !3061, !3062}
!3057 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!3058 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!3059 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!3060 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!3061 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!3062 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !19, file: !20, line: 931, baseType: !371, size: 64, offset: 448)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !19, file: !20, line: 932, baseType: !55, size: 32, offset: 512)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !19, file: !20, line: 933, baseType: !2609, size: 32, offset: 544)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !19, file: !20, line: 934, baseType: !367, size: 192, offset: 576)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !19, file: !20, line: 935, baseType: !209, size: 64, offset: 768)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !19, file: !20, line: 936, baseType: !3069, size: 192, offset: 832)
!3069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !20, line: 885, size: 192, elements: !3070)
!3070 = !{!3071, !3072, !3073, !3081, !3082, !3083}
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3069, file: !20, line: 886, baseType: !2870)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3069, file: !20, line: 887, baseType: !1538, size: 64)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3069, file: !20, line: 888, baseType: !3074, size: 32, offset: 64)
!3074 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !1540, line: 9, baseType: !55, size: 32, elements: !3075)
!3075 = !{!3076, !3077, !3078, !3079, !3080}
!3076 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!3077 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!3078 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!3079 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!3080 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3069, file: !20, line: 889, baseType: !107, size: 32, offset: 96)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3069, file: !20, line: 889, baseType: !107, size: 32, offset: 128)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3069, file: !20, line: 890, baseType: !152, size: 32, offset: 160)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !19, file: !20, line: 937, baseType: !407, size: 64, offset: 1024)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !19, file: !20, line: 938, baseType: !3086, size: 256, offset: 1088)
!3086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !20, line: 896, size: 256, elements: !3087)
!3087 = !{!3088, !3089, !3090, !3091, !3092, !3093}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3086, file: !20, line: 897, baseType: !16, size: 64)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3086, file: !20, line: 898, baseType: !55, size: 32, offset: 64)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3086, file: !20, line: 899, baseType: !55, size: 32, offset: 96)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3086, file: !20, line: 902, baseType: !55, size: 32, offset: 128)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3086, file: !20, line: 903, baseType: !55, size: 32, offset: 160)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3086, file: !20, line: 904, baseType: !209, size: 64, offset: 192)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !19, file: !20, line: 940, baseType: !91, size: 64, offset: 1344)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !19, file: !20, line: 945, baseType: !146, size: 64, offset: 1408)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !19, file: !20, line: 949, baseType: !285, size: 128, offset: 1472)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !19, file: !20, line: 950, baseType: !285, size: 128, offset: 1600)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !19, file: !20, line: 952, baseType: !818, size: 64, offset: 1728)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !19, file: !20, line: 953, baseType: !973, size: 32, offset: 1792)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !19, file: !20, line: 954, baseType: !973, size: 32, offset: 1824)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "attachments", scope: !7, file: !8, line: 308, baseType: !285, size: 128, offset: 128)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7, file: !8, line: 309, baseType: !3103, size: 64, offset: 256)
!3103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3104, size: 64)
!3104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3105)
!3105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_buf_ops", file: !8, line: 35, size: 832, elements: !3106)
!3106 = !{!3107, !3108, !3906, !3910, !3914, !3915, !3919, !3923, !3927, !3931, !3932, !3936, !3940}
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "cache_sgt_mapping", scope: !3105, file: !8, line: 43, baseType: !168, size: 8)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !3105, file: !8, line: 71, baseType: !3109, size: 64, offset: 64)
!3109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3110, size: 64)
!3110 = !DISubroutineType(types: !3111)
!3111 = !{!152, !6, !3112}
!3112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3113, size: 64)
!3113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_buf_attachment", file: !8, line: 389, size: 576, elements: !3114)
!3114 = !{!3115, !3116, !3868, !3869, !3885, !3893, !3894, !3904, !3905}
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "dmabuf", scope: !3113, file: !8, line: 390, baseType: !6, size: 64)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3113, file: !8, line: 391, baseType: !3117, size: 64, offset: 64)
!3117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3118, size: 64)
!3118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !3119, line: 461, size: 5568, elements: !3120)
!3119 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!3120 = !{!3121, !3413, !3414, !3417, !3418, !3470, !3549, !3550, !3551, !3552, !3553, !3568, !3686, !3699, !3703, !3704, !3708, !3710, !3711, !3712, !3716, !3722, !3723, !3726, !3730, !3820, !3821, !3822, !3823, !3824, !3856, !3857, !3858, !3861, !3864, !3865, !3866, !3867}
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3118, file: !3119, line: 462, baseType: !3122, size: 512)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !3123, line: 64, size: 512, elements: !3124)
!3123 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!3124 = !{!3125, !3126, !3127, !3129, !3169, !3275, !3403, !3408, !3409, !3410, !3411, !3412}
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3122, file: !3123, line: 65, baseType: !135, size: 64)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3122, file: !3123, line: 66, baseType: !285, size: 128, offset: 64)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3122, file: !3123, line: 67, baseType: !3128, size: 64, offset: 192)
!3128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3122, size: 64)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !3122, file: !3123, line: 68, baseType: !3130, size: 64, offset: 256)
!3130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3131, size: 64)
!3131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !3123, line: 192, size: 704, elements: !3132)
!3132 = !{!3133, !3134, !3135, !3136}
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3131, file: !3123, line: 193, baseType: !285, size: 128)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !3131, file: !3123, line: 194, baseType: !379, offset: 128)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3131, file: !3123, line: 195, baseType: !3122, size: 512, offset: 128)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !3131, file: !3123, line: 196, baseType: !3137, size: 64, offset: 640)
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3138, size: 64)
!3138 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3139)
!3139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !3123, line: 156, size: 192, elements: !3140)
!3140 = !{!3141, !3146, !3151}
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3139, file: !3123, line: 157, baseType: !3142, size: 64)
!3142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3143)
!3143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3144, size: 64)
!3144 = !DISubroutineType(types: !3145)
!3145 = !{!152, !3130, !3128}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3139, file: !3123, line: 158, baseType: !3147, size: 64, offset: 64)
!3147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3148)
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 64)
!3149 = !DISubroutineType(types: !3150)
!3150 = !{!135, !3130, !3128}
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3139, file: !3123, line: 159, baseType: !3152, size: 64, offset: 128)
!3152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3153)
!3153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3154, size: 64)
!3154 = !DISubroutineType(types: !3155)
!3155 = !{!152, !3130, !3128, !3156}
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 64)
!3157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !3123, line: 148, size: 20736, elements: !3158)
!3158 = !{!3159, !3161, !3163, !3164, !3168}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !3157, file: !3123, line: 149, baseType: !3160, size: 192)
!3160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 192, elements: !697)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !3157, file: !3123, line: 150, baseType: !3162, size: 4096, offset: 192)
!3162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !163, size: 4096, elements: !1767)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !3157, file: !3123, line: 151, baseType: !152, size: 32, offset: 4288)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3157, file: !3123, line: 152, baseType: !3165, size: 16384, offset: 4320)
!3165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !137, size: 16384, elements: !3166)
!3166 = !{!3167}
!3167 = !DISubrange(count: 2048)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !3157, file: !3123, line: 153, baseType: !152, size: 32, offset: 20704)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !3122, file: !3123, line: 69, baseType: !3170, size: 64, offset: 320)
!3170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3171, size: 64)
!3171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !3123, line: 138, size: 448, elements: !3172)
!3172 = !{!3173, !3177, !3196, !3198, !3231, !3265, !3269}
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3171, file: !3123, line: 139, baseType: !3174, size: 64)
!3174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3175, size: 64)
!3175 = !DISubroutineType(types: !3176)
!3176 = !{null, !3128}
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !3171, file: !3123, line: 140, baseType: !3178, size: 64, offset: 64)
!3178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3179, size: 64)
!3179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3180)
!3180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !3181, line: 230, size: 128, elements: !3182)
!3181 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!3182 = !{!3183, !3192}
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3180, file: !3181, line: 231, baseType: !3184, size: 64)
!3184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3185, size: 64)
!3185 = !DISubroutineType(types: !3186)
!3186 = !{!257, !3128, !3187, !163}
!3187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3188, size: 64)
!3188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !3181, line: 30, size: 128, elements: !3189)
!3189 = !{!3190, !3191}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3188, file: !3181, line: 31, baseType: !135, size: 64)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3188, file: !3181, line: 32, baseType: !103, size: 16, offset: 64)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3180, file: !3181, line: 232, baseType: !3193, size: 64, offset: 64)
!3193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3194, size: 64)
!3194 = !DISubroutineType(types: !3195)
!3195 = !{!257, !3128, !3187, !135, !11}
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !3171, file: !3123, line: 141, baseType: !3197, size: 64, offset: 128)
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 64)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !3171, file: !3123, line: 142, baseType: !3199, size: 64, offset: 192)
!3199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3200, size: 64)
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3201, size: 64)
!3201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3202)
!3202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !3181, line: 84, size: 320, elements: !3203)
!3203 = !{!3204, !3205, !3209, !3228, !3229}
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3202, file: !3181, line: 85, baseType: !135, size: 64)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !3202, file: !3181, line: 86, baseType: !3206, size: 64, offset: 64)
!3206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3207, size: 64)
!3207 = !DISubroutineType(types: !3208)
!3208 = !{!103, !3128, !3187, !152}
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !3202, file: !3181, line: 88, baseType: !3210, size: 64, offset: 128)
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3211, size: 64)
!3211 = !DISubroutineType(types: !3212)
!3212 = !{!103, !3128, !3213, !152}
!3213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3214, size: 64)
!3214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !3181, line: 168, size: 448, elements: !3215)
!3215 = !{!3216, !3217, !3218, !3219, !3223, !3224}
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3214, file: !3181, line: 169, baseType: !3188, size: 128)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3214, file: !3181, line: 170, baseType: !11, size: 64, offset: 128)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3214, file: !3181, line: 171, baseType: !146, size: 64, offset: 192)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3214, file: !3181, line: 172, baseType: !3220, size: 64, offset: 256)
!3220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3221, size: 64)
!3221 = !DISubroutineType(types: !3222)
!3222 = !{!257, !18, !3128, !3213, !163, !209, !11}
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3214, file: !3181, line: 174, baseType: !3220, size: 64, offset: 320)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3214, file: !3181, line: 176, baseType: !3225, size: 64, offset: 384)
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3226, size: 64)
!3226 = !DISubroutineType(types: !3227)
!3227 = !{!152, !18, !3128, !3213, !1046}
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !3202, file: !3181, line: 90, baseType: !3197, size: 64, offset: 192)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !3202, file: !3181, line: 91, baseType: !3230, size: 64, offset: 256)
!3230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3213, size: 64)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !3171, file: !3123, line: 143, baseType: !3232, size: 64, offset: 256)
!3232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3233, size: 64)
!3233 = !DISubroutineType(types: !3234)
!3234 = !{!3235, !3128}
!3235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3236, size: 64)
!3236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3237)
!3237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !3238, line: 39, size: 384, elements: !3239)
!3238 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!3239 = !{!3240, !3246, !3250, !3254, !3260, !3264}
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3237, file: !3238, line: 40, baseType: !3241, size: 32)
!3241 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !3238, line: 26, baseType: !55, size: 32, elements: !3242)
!3242 = !{!3243, !3244, !3245}
!3243 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!3244 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!3245 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3237, file: !3238, line: 41, baseType: !3247, size: 64, offset: 64)
!3247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3248, size: 64)
!3248 = !DISubroutineType(types: !3249)
!3249 = !{!168}
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3237, file: !3238, line: 42, baseType: !3251, size: 64, offset: 128)
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3252, size: 64)
!3252 = !DISubroutineType(types: !3253)
!3253 = !{!146}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3237, file: !3238, line: 43, baseType: !3255, size: 64, offset: 192)
!3255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3256, size: 64)
!3256 = !DISubroutineType(types: !3257)
!3257 = !{!2015, !3258}
!3258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3259, size: 64)
!3259 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !3238, line: 19, flags: DIFlagFwdDecl)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3237, file: !3238, line: 44, baseType: !3261, size: 64, offset: 256)
!3261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3262, size: 64)
!3262 = !DISubroutineType(types: !3263)
!3263 = !{!2015}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3237, file: !3238, line: 45, baseType: !143, size: 64, offset: 320)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3171, file: !3123, line: 144, baseType: !3266, size: 64, offset: 320)
!3266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3267, size: 64)
!3267 = !DISubroutineType(types: !3268)
!3268 = !{!2015, !3128}
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3171, file: !3123, line: 145, baseType: !3270, size: 64, offset: 384)
!3270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3271, size: 64)
!3271 = !DISubroutineType(types: !3272)
!3272 = !{null, !3128, !3273, !3274}
!3273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 64)
!3274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !3122, file: !3123, line: 70, baseType: !3276, size: 64, offset: 384)
!3276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3277, size: 64)
!3277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !3278, line: 123, size: 1024, elements: !3279)
!3278 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!3279 = !{!3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3396, !3397, !3398, !3399, !3400}
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3277, file: !3278, line: 124, baseType: !413, size: 32)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3277, file: !3278, line: 125, baseType: !413, size: 32, offset: 32)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3277, file: !3278, line: 135, baseType: !3276, size: 64, offset: 64)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3277, file: !3278, line: 136, baseType: !135, size: 64, offset: 128)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3277, file: !3278, line: 138, baseType: !460, size: 192, align: 64, offset: 192)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3277, file: !3278, line: 140, baseType: !2015, size: 64, offset: 384)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3277, file: !3278, line: 141, baseType: !55, size: 32, offset: 448)
!3287 = !DIDerivedType(tag: DW_TAG_member, scope: !3277, file: !3278, line: 142, baseType: !3288, size: 256, offset: 512)
!3288 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3277, file: !3278, line: 142, size: 256, elements: !3289)
!3289 = !{!3290, !3336, !3340}
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3288, file: !3278, line: 143, baseType: !3291, size: 192)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !3278, line: 91, size: 192, elements: !3292)
!3292 = !{!3293, !3294, !3295}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3291, file: !3278, line: 92, baseType: !16, size: 64)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3291, file: !3278, line: 94, baseType: !836, size: 64, offset: 64)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3291, file: !3278, line: 100, baseType: !3296, size: 64, offset: 128)
!3296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3297, size: 64)
!3297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !3278, line: 180, size: 704, elements: !3298)
!3298 = !{!3299, !3300, !3301, !3308, !3309, !3310, !3334, !3335}
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3297, file: !3278, line: 182, baseType: !3276, size: 64)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3297, file: !3278, line: 183, baseType: !55, size: 32, offset: 64)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3297, file: !3278, line: 186, baseType: !3302, size: 192, offset: 128)
!3302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3303, line: 19, size: 192, elements: !3304)
!3303 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3304 = !{!3305, !3306, !3307}
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3302, file: !3303, line: 20, baseType: !823, size: 128)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3302, file: !3303, line: 21, baseType: !55, size: 32, offset: 128)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3302, file: !3303, line: 22, baseType: !55, size: 32, offset: 160)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3297, file: !3278, line: 187, baseType: !85, size: 32, offset: 320)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3297, file: !3278, line: 188, baseType: !85, size: 32, offset: 352)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3297, file: !3278, line: 189, baseType: !3311, size: 64, offset: 384)
!3311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3312, size: 64)
!3312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !3278, line: 168, size: 320, elements: !3313)
!3313 = !{!3314, !3318, !3322, !3326, !3330}
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3312, file: !3278, line: 169, baseType: !3315, size: 64)
!3315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3316, size: 64)
!3316 = !DISubroutineType(types: !3317)
!3317 = !{!152, !759, !3296}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3312, file: !3278, line: 171, baseType: !3319, size: 64, offset: 64)
!3319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3320, size: 64)
!3320 = !DISubroutineType(types: !3321)
!3321 = !{!152, !3276, !135, !103}
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3312, file: !3278, line: 173, baseType: !3323, size: 64, offset: 128)
!3323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3324, size: 64)
!3324 = !DISubroutineType(types: !3325)
!3325 = !{!152, !3276}
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3312, file: !3278, line: 174, baseType: !3327, size: 64, offset: 192)
!3327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3328, size: 64)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{!152, !3276, !3276, !135}
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3312, file: !3278, line: 176, baseType: !3331, size: 64, offset: 256)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3332, size: 64)
!3332 = !DISubroutineType(types: !3333)
!3333 = !{!152, !759, !3276, !3296}
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3297, file: !3278, line: 192, baseType: !285, size: 128, offset: 448)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3297, file: !3278, line: 194, baseType: !1549, size: 128, offset: 576)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3288, file: !3278, line: 144, baseType: !3337, size: 64)
!3337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !3278, line: 103, size: 64, elements: !3338)
!3338 = !{!3339}
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3337, file: !3278, line: 104, baseType: !3276, size: 64)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3288, file: !3278, line: 145, baseType: !3341, size: 256)
!3341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !3278, line: 107, size: 256, elements: !3342)
!3342 = !{!3343, !3391, !3394, !3395}
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3341, file: !3278, line: 108, baseType: !3344, size: 64)
!3344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3345, size: 64)
!3345 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3346)
!3346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !3278, line: 217, size: 768, elements: !3347)
!3347 = !{!3348, !3368, !3372, !3373, !3374, !3375, !3376, !3380, !3381, !3382, !3383, !3387}
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3346, file: !3278, line: 222, baseType: !3349, size: 64)
!3349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3350, size: 64)
!3350 = !DISubroutineType(types: !3351)
!3351 = !{!152, !3352}
!3352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3353, size: 64)
!3353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !3278, line: 197, size: 1088, elements: !3354)
!3354 = !{!3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367}
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3353, file: !3278, line: 199, baseType: !3276, size: 64)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3353, file: !3278, line: 200, baseType: !18, size: 64, offset: 64)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3353, file: !3278, line: 201, baseType: !759, size: 64, offset: 128)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3353, file: !3278, line: 202, baseType: !146, size: 64, offset: 192)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3353, file: !3278, line: 205, baseType: !367, size: 192, offset: 256)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3353, file: !3278, line: 206, baseType: !367, size: 192, offset: 448)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3353, file: !3278, line: 207, baseType: !152, size: 32, offset: 640)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3353, file: !3278, line: 208, baseType: !285, size: 128, offset: 704)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3353, file: !3278, line: 209, baseType: !163, size: 64, offset: 832)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3353, file: !3278, line: 211, baseType: !11, size: 64, offset: 896)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3353, file: !3278, line: 212, baseType: !168, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3353, file: !3278, line: 213, baseType: !168, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3353, file: !3278, line: 214, baseType: !1074, size: 64, offset: 1024)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3346, file: !3278, line: 223, baseType: !3369, size: 64, offset: 64)
!3369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3370, size: 64)
!3370 = !DISubroutineType(types: !3371)
!3371 = !{null, !3352}
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3346, file: !3278, line: 236, baseType: !790, size: 64, offset: 128)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3346, file: !3278, line: 238, baseType: !777, size: 64, offset: 192)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3346, file: !3278, line: 239, baseType: !786, size: 64, offset: 256)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3346, file: !3278, line: 240, baseType: !782, size: 64, offset: 320)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3346, file: !3278, line: 242, baseType: !3377, size: 64, offset: 384)
!3377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3378, size: 64)
!3378 = !DISubroutineType(types: !3379)
!3379 = !{!257, !3352, !163, !11, !209}
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3346, file: !3278, line: 252, baseType: !11, size: 64, offset: 448)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3346, file: !3278, line: 259, baseType: !168, size: 8, offset: 512)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3346, file: !3278, line: 260, baseType: !3377, size: 64, offset: 576)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3346, file: !3278, line: 263, baseType: !3384, size: 64, offset: 640)
!3384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3385, size: 64)
!3385 = !DISubroutineType(types: !3386)
!3386 = !{!2803, !3352, !2805}
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3346, file: !3278, line: 266, baseType: !3388, size: 64, offset: 704)
!3388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3389, size: 64)
!3389 = !DISubroutineType(types: !3390)
!3390 = !{!152, !3352, !1046}
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3341, file: !3278, line: 109, baseType: !3392, size: 64, offset: 64)
!3392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3393, size: 64)
!3393 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !3278, line: 31, flags: DIFlagFwdDecl)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3341, file: !3278, line: 110, baseType: !209, size: 64, offset: 128)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3341, file: !3278, line: 111, baseType: !3276, size: 64, offset: 192)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3277, file: !3278, line: 148, baseType: !146, size: 64, offset: 768)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3277, file: !3278, line: 154, baseType: !91, size: 64, offset: 832)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3277, file: !3278, line: 156, baseType: !104, size: 16, offset: 896)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3277, file: !3278, line: 157, baseType: !103, size: 16, offset: 912)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3277, file: !3278, line: 158, baseType: !3401, size: 64, offset: 960)
!3401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3402, size: 64)
!3402 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !3278, line: 32, flags: DIFlagFwdDecl)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3122, file: !3123, line: 71, baseType: !3404, size: 32, offset: 448)
!3404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3405, line: 19, size: 32, elements: !3406)
!3405 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3406 = !{!3407}
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3404, file: !3405, line: 20, baseType: !445, size: 32)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !3122, file: !3123, line: 75, baseType: !55, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !3122, file: !3123, line: 76, baseType: !55, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !3122, file: !3123, line: 77, baseType: !55, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !3122, file: !3123, line: 78, baseType: !55, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !3122, file: !3123, line: 79, baseType: !55, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3118, file: !3119, line: 463, baseType: !3117, size: 64, offset: 512)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3118, file: !3119, line: 465, baseType: !3415, size: 64, offset: 576)
!3415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3416, size: 64)
!3416 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !3119, line: 36, flags: DIFlagFwdDecl)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !3118, file: !3119, line: 467, baseType: !135, size: 64, offset: 640)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3118, file: !3119, line: 468, baseType: !3419, size: 64, offset: 704)
!3419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3420, size: 64)
!3420 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3421)
!3421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !3119, line: 87, size: 384, elements: !3422)
!3422 = !{!3423, !3424, !3425, !3429, !3434, !3438}
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3421, file: !3119, line: 88, baseType: !135, size: 64)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3421, file: !3119, line: 89, baseType: !3199, size: 64, offset: 64)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3421, file: !3119, line: 90, baseType: !3426, size: 64, offset: 128)
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 64)
!3427 = !DISubroutineType(types: !3428)
!3428 = !{!152, !3117, !3156}
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3421, file: !3119, line: 91, baseType: !3430, size: 64, offset: 192)
!3430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3431, size: 64)
!3431 = !DISubroutineType(types: !3432)
!3432 = !{!163, !3117, !3433, !3273, !3274}
!3433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 64)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3421, file: !3119, line: 93, baseType: !3435, size: 64, offset: 256)
!3435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3436, size: 64)
!3436 = !DISubroutineType(types: !3437)
!3437 = !{null, !3117}
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3421, file: !3119, line: 95, baseType: !3439, size: 64, offset: 320)
!3439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3440, size: 64)
!3440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3441)
!3441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !3442, line: 278, size: 1472, elements: !3443)
!3442 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!3443 = !{!3444, !3448, !3449, !3450, !3451, !3452, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3461, !3462, !3463, !3464, !3465, !3466, !3467, !3468, !3469}
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3441, file: !3442, line: 279, baseType: !3445, size: 64)
!3445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3446, size: 64)
!3446 = !DISubroutineType(types: !3447)
!3447 = !{!152, !3117}
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3441, file: !3442, line: 280, baseType: !3435, size: 64, offset: 64)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3441, file: !3442, line: 281, baseType: !3445, size: 64, offset: 128)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3441, file: !3442, line: 282, baseType: !3445, size: 64, offset: 192)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3441, file: !3442, line: 283, baseType: !3445, size: 64, offset: 256)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3441, file: !3442, line: 284, baseType: !3445, size: 64, offset: 320)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3441, file: !3442, line: 285, baseType: !3445, size: 64, offset: 384)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3441, file: !3442, line: 286, baseType: !3445, size: 64, offset: 448)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3441, file: !3442, line: 287, baseType: !3445, size: 64, offset: 512)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3441, file: !3442, line: 288, baseType: !3445, size: 64, offset: 576)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3441, file: !3442, line: 289, baseType: !3445, size: 64, offset: 640)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3441, file: !3442, line: 290, baseType: !3445, size: 64, offset: 704)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3441, file: !3442, line: 291, baseType: !3445, size: 64, offset: 768)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3441, file: !3442, line: 292, baseType: !3445, size: 64, offset: 832)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3441, file: !3442, line: 293, baseType: !3445, size: 64, offset: 896)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3441, file: !3442, line: 294, baseType: !3445, size: 64, offset: 960)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3441, file: !3442, line: 295, baseType: !3445, size: 64, offset: 1024)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3441, file: !3442, line: 296, baseType: !3445, size: 64, offset: 1088)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3441, file: !3442, line: 297, baseType: !3445, size: 64, offset: 1152)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3441, file: !3442, line: 298, baseType: !3445, size: 64, offset: 1216)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3441, file: !3442, line: 299, baseType: !3445, size: 64, offset: 1280)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3441, file: !3442, line: 300, baseType: !3445, size: 64, offset: 1344)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3441, file: !3442, line: 301, baseType: !3445, size: 64, offset: 1408)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3118, file: !3119, line: 470, baseType: !3471, size: 64, offset: 768)
!3471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3472, size: 64)
!3472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3473, line: 82, size: 1408, elements: !3474)
!3473 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3474 = !{!3475, !3476, !3477, !3478, !3479, !3480, !3481, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3544, !3547, !3548}
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3472, file: !3473, line: 83, baseType: !135, size: 64)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3472, file: !3473, line: 84, baseType: !135, size: 64, offset: 64)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3472, file: !3473, line: 85, baseType: !3117, size: 64, offset: 128)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3472, file: !3473, line: 86, baseType: !3199, size: 64, offset: 192)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3472, file: !3473, line: 87, baseType: !3199, size: 64, offset: 256)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3472, file: !3473, line: 88, baseType: !3199, size: 64, offset: 320)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3472, file: !3473, line: 90, baseType: !3482, size: 64, offset: 384)
!3482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3483, size: 64)
!3483 = !DISubroutineType(types: !3484)
!3484 = !{!152, !3117, !3485}
!3485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3486, size: 64)
!3486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !3487, line: 95, size: 1152, elements: !3488)
!3487 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!3488 = !{!3489, !3490, !3491, !3492, !3493, !3494, !3500, !3504, !3508, !3509, !3510, !3511, !3512, !3520, !3521, !3522, !3523, !3524, !3525}
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3486, file: !3487, line: 96, baseType: !135, size: 64)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3486, file: !3487, line: 97, baseType: !3471, size: 64, offset: 64)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3486, file: !3487, line: 99, baseType: !639, size: 64, offset: 128)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3486, file: !3487, line: 100, baseType: !135, size: 64, offset: 192)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3486, file: !3487, line: 102, baseType: !168, size: 8, offset: 256)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3486, file: !3487, line: 103, baseType: !3495, size: 32, offset: 288)
!3495 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !3487, line: 44, baseType: !55, size: 32, elements: !3496)
!3496 = !{!3497, !3498, !3499}
!3497 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!3498 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!3499 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3486, file: !3487, line: 105, baseType: !3501, size: 64, offset: 320)
!3501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3502, size: 64)
!3502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3503)
!3503 = !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3487, line: 105, flags: DIFlagFwdDecl)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3486, file: !3487, line: 106, baseType: !3505, size: 64, offset: 384)
!3505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3506, size: 64)
!3506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3507)
!3507 = !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3487, line: 106, flags: DIFlagFwdDecl)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3486, file: !3487, line: 108, baseType: !3445, size: 64, offset: 448)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3486, file: !3487, line: 109, baseType: !3435, size: 64, offset: 512)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3486, file: !3487, line: 110, baseType: !3445, size: 64, offset: 576)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3486, file: !3487, line: 111, baseType: !3435, size: 64, offset: 640)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3486, file: !3487, line: 112, baseType: !3513, size: 64, offset: 704)
!3513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3514, size: 64)
!3514 = !DISubroutineType(types: !3515)
!3515 = !{!152, !3117, !3516}
!3516 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !3442, line: 52, baseType: !3517)
!3517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !3442, line: 50, size: 32, elements: !3518)
!3518 = !{!3519}
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3517, file: !3442, line: 51, baseType: !152, size: 32)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3486, file: !3487, line: 113, baseType: !3445, size: 64, offset: 768)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3486, file: !3487, line: 114, baseType: !3199, size: 64, offset: 832)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3486, file: !3487, line: 115, baseType: !3199, size: 64, offset: 896)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3486, file: !3487, line: 117, baseType: !3439, size: 64, offset: 960)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3486, file: !3487, line: 118, baseType: !3435, size: 64, offset: 1024)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3486, file: !3487, line: 120, baseType: !3526, size: 64, offset: 1088)
!3526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3527, size: 64)
!3527 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !3487, line: 120, flags: DIFlagFwdDecl)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3472, file: !3473, line: 91, baseType: !3426, size: 64, offset: 448)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3472, file: !3473, line: 92, baseType: !3445, size: 64, offset: 512)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3472, file: !3473, line: 93, baseType: !3435, size: 64, offset: 576)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3472, file: !3473, line: 94, baseType: !3445, size: 64, offset: 640)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3472, file: !3473, line: 95, baseType: !3435, size: 64, offset: 704)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3472, file: !3473, line: 97, baseType: !3445, size: 64, offset: 768)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3472, file: !3473, line: 98, baseType: !3445, size: 64, offset: 832)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3472, file: !3473, line: 100, baseType: !3513, size: 64, offset: 896)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3472, file: !3473, line: 101, baseType: !3445, size: 64, offset: 960)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3472, file: !3473, line: 103, baseType: !3445, size: 64, offset: 1024)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3472, file: !3473, line: 105, baseType: !3445, size: 64, offset: 1088)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3472, file: !3473, line: 107, baseType: !3439, size: 64, offset: 1152)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3472, file: !3473, line: 109, baseType: !3541, size: 64, offset: 1216)
!3541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3542, size: 64)
!3542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3543)
!3543 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3473, line: 109, flags: DIFlagFwdDecl)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3472, file: !3473, line: 111, baseType: !3545, size: 64, offset: 1280)
!3545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3546, size: 64)
!3546 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3473, line: 111, flags: DIFlagFwdDecl)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3472, file: !3473, line: 112, baseType: !691, offset: 1344)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3472, file: !3473, line: 114, baseType: !168, size: 8, offset: 1344)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3118, file: !3119, line: 471, baseType: !3485, size: 64, offset: 832)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !3118, file: !3119, line: 473, baseType: !146, size: 64, offset: 896)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3118, file: !3119, line: 475, baseType: !146, size: 64, offset: 960)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3118, file: !3119, line: 480, baseType: !367, size: 192, offset: 1024)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3118, file: !3119, line: 484, baseType: !3554, size: 576, offset: 1216)
!3554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !3119, line: 361, size: 576, elements: !3555)
!3555 = !{!3556, !3557, !3558, !3559, !3560, !3561}
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3554, file: !3119, line: 362, baseType: !285, size: 128)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3554, file: !3119, line: 363, baseType: !285, size: 128, offset: 128)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3554, file: !3119, line: 364, baseType: !285, size: 128, offset: 256)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3554, file: !3119, line: 365, baseType: !285, size: 128, offset: 384)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3554, file: !3119, line: 366, baseType: !168, size: 8, offset: 512)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3554, file: !3119, line: 367, baseType: !3562, size: 32, offset: 544)
!3562 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !3119, line: 343, baseType: !55, size: 32, elements: !3563)
!3563 = !{!3564, !3565, !3566, !3567}
!3564 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!3565 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!3566 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!3567 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !3118, file: !3119, line: 485, baseType: !3569, size: 2304, offset: 1792)
!3569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !3442, line: 565, size: 2304, elements: !3570)
!3570 = !{!3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585, !3586, !3624, !3625, !3626, !3627, !3628, !3629, !3630, !3631, !3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648, !3656, !3663, !3664, !3665, !3666, !3667, !3668, !3669, !3679, !3683}
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3569, file: !3442, line: 566, baseType: !3516, size: 32)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3569, file: !3442, line: 567, baseType: !55, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3569, file: !3442, line: 568, baseType: !55, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3569, file: !3442, line: 569, baseType: !168, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3569, file: !3442, line: 570, baseType: !168, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3569, file: !3442, line: 571, baseType: !168, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3569, file: !3442, line: 572, baseType: !168, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3569, file: !3442, line: 573, baseType: !168, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3569, file: !3442, line: 574, baseType: !168, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3569, file: !3442, line: 575, baseType: !168, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3569, file: !3442, line: 576, baseType: !168, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3569, file: !3442, line: 577, baseType: !85, size: 32, offset: 64)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3569, file: !3442, line: 578, baseType: !379, offset: 96)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3569, file: !3442, line: 580, baseType: !285, size: 128, offset: 128)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3569, file: !3442, line: 581, baseType: !1570, size: 192, offset: 256)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3569, file: !3442, line: 582, baseType: !3587, size: 64, offset: 448)
!3587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3588, size: 64)
!3588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3589, line: 43, size: 1472, elements: !3590)
!3589 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3590 = !{!3591, !3592, !3593, !3594, !3595, !3598, !3610, !3611, !3612, !3613, !3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621, !3622, !3623}
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3588, file: !3589, line: 44, baseType: !135, size: 64)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3588, file: !3589, line: 45, baseType: !152, size: 32, offset: 64)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3588, file: !3589, line: 46, baseType: !285, size: 128, offset: 128)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3588, file: !3589, line: 47, baseType: !379, offset: 256)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3588, file: !3589, line: 48, baseType: !3596, size: 64, offset: 256)
!3596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3597, size: 64)
!3597 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !3442, line: 533, flags: DIFlagFwdDecl)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3588, file: !3589, line: 49, baseType: !3599, size: 320, offset: 320)
!3599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3600, line: 11, size: 320, elements: !3601)
!3600 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3601 = !{!3602, !3603, !3604, !3609}
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3599, file: !3600, line: 16, baseType: !589, size: 128)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3599, file: !3600, line: 17, baseType: !16, size: 64, offset: 128)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3599, file: !3600, line: 18, baseType: !3605, size: 64, offset: 192)
!3605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3606, size: 64)
!3606 = !DISubroutineType(types: !3607)
!3607 = !{null, !3608}
!3608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3599, size: 64)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3599, file: !3600, line: 19, baseType: !85, size: 32, offset: 256)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3588, file: !3589, line: 50, baseType: !16, size: 64, offset: 640)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3588, file: !3589, line: 51, baseType: !1358, size: 64, offset: 704)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3588, file: !3589, line: 52, baseType: !1358, size: 64, offset: 768)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3588, file: !3589, line: 53, baseType: !1358, size: 64, offset: 832)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3588, file: !3589, line: 54, baseType: !1358, size: 64, offset: 896)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3588, file: !3589, line: 55, baseType: !1358, size: 64, offset: 960)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3588, file: !3589, line: 56, baseType: !16, size: 64, offset: 1024)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3588, file: !3589, line: 57, baseType: !16, size: 64, offset: 1088)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3588, file: !3589, line: 58, baseType: !16, size: 64, offset: 1152)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3588, file: !3589, line: 59, baseType: !16, size: 64, offset: 1216)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3588, file: !3589, line: 60, baseType: !16, size: 64, offset: 1280)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3588, file: !3589, line: 61, baseType: !3117, size: 64, offset: 1344)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3588, file: !3589, line: 62, baseType: !168, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3588, file: !3589, line: 63, baseType: !168, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3569, file: !3442, line: 583, baseType: !168, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3569, file: !3442, line: 584, baseType: !168, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3569, file: !3442, line: 585, baseType: !168, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3569, file: !3442, line: 586, baseType: !55, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3569, file: !3442, line: 587, baseType: !55, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3569, file: !3442, line: 592, baseType: !1349, size: 512, offset: 576)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3569, file: !3442, line: 593, baseType: !91, size: 64, offset: 1088)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3569, file: !3442, line: 594, baseType: !1845, size: 256, offset: 1152)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3569, file: !3442, line: 595, baseType: !1549, size: 128, offset: 1408)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3569, file: !3442, line: 596, baseType: !3596, size: 64, offset: 1536)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3569, file: !3442, line: 597, baseType: !413, size: 32, offset: 1600)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3569, file: !3442, line: 598, baseType: !413, size: 32, offset: 1632)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3569, file: !3442, line: 599, baseType: !55, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3569, file: !3442, line: 600, baseType: !55, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3569, file: !3442, line: 601, baseType: !55, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3569, file: !3442, line: 602, baseType: !55, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3569, file: !3442, line: 603, baseType: !55, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3569, file: !3442, line: 604, baseType: !168, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3569, file: !3442, line: 605, baseType: !55, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3569, file: !3442, line: 606, baseType: !55, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3569, file: !3442, line: 607, baseType: !55, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3569, file: !3442, line: 608, baseType: !55, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3569, file: !3442, line: 609, baseType: !55, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3569, file: !3442, line: 610, baseType: !55, size: 32, offset: 1696)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3569, file: !3442, line: 611, baseType: !3649, size: 32, offset: 1728)
!3649 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !3442, line: 524, baseType: !55, size: 32, elements: !3650)
!3650 = !{!3651, !3652, !3653, !3654, !3655}
!3651 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!3652 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!3653 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!3654 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!3655 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3569, file: !3442, line: 612, baseType: !3657, size: 32, offset: 1760)
!3657 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !3442, line: 502, baseType: !55, size: 32, elements: !3658)
!3658 = !{!3659, !3660, !3661, !3662}
!3659 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!3660 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!3661 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!3662 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3569, file: !3442, line: 613, baseType: !152, size: 32, offset: 1792)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3569, file: !3442, line: 614, baseType: !152, size: 32, offset: 1824)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3569, file: !3442, line: 615, baseType: !91, size: 64, offset: 1856)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3569, file: !3442, line: 616, baseType: !91, size: 64, offset: 1920)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3569, file: !3442, line: 617, baseType: !91, size: 64, offset: 1984)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3569, file: !3442, line: 618, baseType: !91, size: 64, offset: 2048)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3569, file: !3442, line: 620, baseType: !3670, size: 64, offset: 2112)
!3670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3671, size: 64)
!3671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !3442, line: 536, size: 256, elements: !3672)
!3672 = !{!3673, !3674, !3675, !3676}
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3671, file: !3442, line: 537, baseType: !379)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3671, file: !3442, line: 538, baseType: !55, size: 32)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3671, file: !3442, line: 540, baseType: !285, size: 128, offset: 64)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3671, file: !3442, line: 543, baseType: !3677, size: 64, offset: 192)
!3677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3678, size: 64)
!3678 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !3442, line: 534, flags: DIFlagFwdDecl)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3569, file: !3442, line: 621, baseType: !3680, size: 64, offset: 2176)
!3680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3681, size: 64)
!3681 = !DISubroutineType(types: !3682)
!3682 = !{null, !3117, !453}
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3569, file: !3442, line: 622, baseType: !3684, size: 64, offset: 2240)
!3684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3685, size: 64)
!3685 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !3442, line: 622, flags: DIFlagFwdDecl)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !3118, file: !3119, line: 486, baseType: !3687, size: 64, offset: 4096)
!3687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3688, size: 64)
!3688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !3442, line: 642, size: 1792, elements: !3689)
!3689 = !{!3690, !3691, !3692, !3696, !3697, !3698}
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3688, file: !3442, line: 643, baseType: !3441, size: 1472)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3688, file: !3442, line: 644, baseType: !3445, size: 64, offset: 1472)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3688, file: !3442, line: 645, baseType: !3693, size: 64, offset: 1536)
!3693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3694, size: 64)
!3694 = !DISubroutineType(types: !3695)
!3695 = !{null, !3117, !168}
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3688, file: !3442, line: 646, baseType: !3445, size: 64, offset: 1600)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3688, file: !3442, line: 647, baseType: !3435, size: 64, offset: 1664)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3688, file: !3442, line: 648, baseType: !3435, size: 64, offset: 1728)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !3118, file: !3119, line: 493, baseType: !3700, size: 64, offset: 4160)
!3700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3701, size: 64)
!3701 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !3702, line: 13, flags: DIFlagFwdDecl)
!3702 = !DIFile(filename: "./arch/x86/include/asm/x86_init.h", directory: "/home/lizy2001/genbc/linux")
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !3118, file: !3119, line: 499, baseType: !285, size: 128, offset: 4224)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !3118, file: !3119, line: 502, baseType: !3705, size: 64, offset: 4352)
!3705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3706, size: 64)
!3706 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3707)
!3707 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !3119, line: 502, flags: DIFlagFwdDecl)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !3118, file: !3119, line: 504, baseType: !3709, size: 64, offset: 4416)
!3709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !3118, file: !3119, line: 505, baseType: !91, size: 64, offset: 4480)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !3118, file: !3119, line: 510, baseType: !91, size: 64, offset: 4544)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !3118, file: !3119, line: 511, baseType: !3713, size: 64, offset: 4608)
!3713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3714, size: 64)
!3714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3715)
!3715 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !3119, line: 511, flags: DIFlagFwdDecl)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !3118, file: !3119, line: 513, baseType: !3717, size: 64, offset: 4672)
!3717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3718, size: 64)
!3718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !3119, line: 288, size: 128, elements: !3719)
!3719 = !{!3720, !3721}
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3718, file: !3119, line: 293, baseType: !55, size: 32)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3718, file: !3119, line: 294, baseType: !16, size: 64, offset: 64)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !3118, file: !3119, line: 515, baseType: !285, size: 128, offset: 4736)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !3118, file: !3119, line: 526, baseType: !3724, offset: 4864)
!3724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3725, line: 5, elements: !393)
!3725 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !3118, file: !3119, line: 528, baseType: !3727, size: 64, offset: 4864)
!3727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3728, size: 64)
!3728 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3729, line: 14, flags: DIFlagFwdDecl)
!3729 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3118, file: !3119, line: 529, baseType: !3731, size: 64, offset: 4928)
!3731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3732, size: 64)
!3732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3733, line: 17, size: 192, elements: !3734)
!3733 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3734 = !{!3735, !3736, !3819}
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3732, file: !3733, line: 18, baseType: !3731, size: 64)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3732, file: !3733, line: 19, baseType: !3737, size: 64, offset: 64)
!3737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3738, size: 64)
!3738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3739)
!3739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3733, line: 110, size: 1152, elements: !3740)
!3740 = !{!3741, !3745, !3749, !3755, !3761, !3765, !3769, !3774, !3778, !3779, !3783, !3787, !3791, !3802, !3803, !3804, !3805, !3815}
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3739, file: !3733, line: 111, baseType: !3742, size: 64)
!3742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3743, size: 64)
!3743 = !DISubroutineType(types: !3744)
!3744 = !{!3731, !3731}
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3739, file: !3733, line: 112, baseType: !3746, size: 64, offset: 64)
!3746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3747, size: 64)
!3747 = !DISubroutineType(types: !3748)
!3748 = !{null, !3731}
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3739, file: !3733, line: 113, baseType: !3750, size: 64, offset: 128)
!3750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3751, size: 64)
!3751 = !DISubroutineType(types: !3752)
!3752 = !{!168, !3753}
!3753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3754, size: 64)
!3754 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3732)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3739, file: !3733, line: 114, baseType: !3756, size: 64, offset: 192)
!3756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3757, size: 64)
!3757 = !DISubroutineType(types: !3758)
!3758 = !{!2015, !3753, !3759}
!3759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3760, size: 64)
!3760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3118)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3739, file: !3733, line: 116, baseType: !3762, size: 64, offset: 256)
!3762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3763, size: 64)
!3763 = !DISubroutineType(types: !3764)
!3764 = !{!168, !3753, !135}
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3739, file: !3733, line: 118, baseType: !3766, size: 64, offset: 320)
!3766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3767, size: 64)
!3767 = !DISubroutineType(types: !3768)
!3768 = !{!152, !3753, !135, !55, !146, !11}
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3739, file: !3733, line: 123, baseType: !3770, size: 64, offset: 384)
!3770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3771, size: 64)
!3771 = !DISubroutineType(types: !3772)
!3772 = !{!152, !3753, !135, !3773, !11}
!3773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 64)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3739, file: !3733, line: 126, baseType: !3775, size: 64, offset: 448)
!3775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3776, size: 64)
!3776 = !DISubroutineType(types: !3777)
!3777 = !{!135, !3753}
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3739, file: !3733, line: 127, baseType: !3775, size: 64, offset: 512)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3739, file: !3733, line: 128, baseType: !3780, size: 64, offset: 576)
!3780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3781, size: 64)
!3781 = !DISubroutineType(types: !3782)
!3782 = !{!3731, !3753}
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3739, file: !3733, line: 130, baseType: !3784, size: 64, offset: 640)
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 64)
!3785 = !DISubroutineType(types: !3786)
!3786 = !{!3731, !3753, !3731}
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3739, file: !3733, line: 133, baseType: !3788, size: 64, offset: 704)
!3788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3789, size: 64)
!3789 = !DISubroutineType(types: !3790)
!3790 = !{!3731, !3753, !135}
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3739, file: !3733, line: 135, baseType: !3792, size: 64, offset: 768)
!3792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3793, size: 64)
!3793 = !DISubroutineType(types: !3794)
!3794 = !{!152, !3753, !135, !135, !55, !55, !3795}
!3795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3796, size: 64)
!3796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3733, line: 43, size: 640, elements: !3797)
!3797 = !{!3798, !3799, !3800}
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3796, file: !3733, line: 44, baseType: !3731, size: 64)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3796, file: !3733, line: 45, baseType: !55, size: 32, offset: 64)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3796, file: !3733, line: 46, baseType: !3801, size: 512, offset: 128)
!3801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 512, elements: !644)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3739, file: !3733, line: 140, baseType: !3784, size: 64, offset: 832)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3739, file: !3733, line: 143, baseType: !3780, size: 64, offset: 896)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3739, file: !3733, line: 145, baseType: !3742, size: 64, offset: 960)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3739, file: !3733, line: 146, baseType: !3806, size: 64, offset: 1024)
!3806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3807, size: 64)
!3807 = !DISubroutineType(types: !3808)
!3808 = !{!152, !3753, !3809}
!3809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3810, size: 64)
!3810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3733, line: 29, size: 128, elements: !3811)
!3811 = !{!3812, !3813, !3814}
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3810, file: !3733, line: 30, baseType: !55, size: 32)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3810, file: !3733, line: 31, baseType: !55, size: 32, offset: 32)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3810, file: !3733, line: 32, baseType: !3753, size: 64, offset: 64)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3739, file: !3733, line: 148, baseType: !3816, size: 64, offset: 1088)
!3816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3817, size: 64)
!3817 = !DISubroutineType(types: !3818)
!3818 = !{!152, !3753, !3117}
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3732, file: !3733, line: 20, baseType: !3117, size: 64, offset: 128)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !3118, file: !3119, line: 534, baseType: !191, size: 32, offset: 4992)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3118, file: !3119, line: 535, baseType: !85, size: 32, offset: 5024)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !3118, file: !3119, line: 537, baseType: !379, offset: 5056)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !3118, file: !3119, line: 538, baseType: !285, size: 128, offset: 5056)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3118, file: !3119, line: 540, baseType: !3825, size: 64, offset: 5184)
!3825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3826, size: 64)
!3826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3827, line: 54, size: 960, elements: !3828)
!3827 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3828 = !{!3829, !3830, !3831, !3832, !3833, !3834, !3835, !3839, !3843, !3844, !3845, !3846, !3850, !3854, !3855}
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3826, file: !3827, line: 55, baseType: !135, size: 64)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3826, file: !3827, line: 56, baseType: !639, size: 64, offset: 64)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3826, file: !3827, line: 58, baseType: !3199, size: 64, offset: 128)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3826, file: !3827, line: 59, baseType: !3199, size: 64, offset: 192)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3826, file: !3827, line: 60, baseType: !3128, size: 64, offset: 256)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3826, file: !3827, line: 62, baseType: !3426, size: 64, offset: 320)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3826, file: !3827, line: 63, baseType: !3836, size: 64, offset: 384)
!3836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3837, size: 64)
!3837 = !DISubroutineType(types: !3838)
!3838 = !{!163, !3117, !3433}
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3826, file: !3827, line: 65, baseType: !3840, size: 64, offset: 448)
!3840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3841, size: 64)
!3841 = !DISubroutineType(types: !3842)
!3842 = !{null, !3825}
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3826, file: !3827, line: 66, baseType: !3435, size: 64, offset: 512)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3826, file: !3827, line: 68, baseType: !3445, size: 64, offset: 576)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3826, file: !3827, line: 70, baseType: !3235, size: 64, offset: 640)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3826, file: !3827, line: 71, baseType: !3847, size: 64, offset: 704)
!3847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3848, size: 64)
!3848 = !DISubroutineType(types: !3849)
!3849 = !{!2015, !3117}
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3826, file: !3827, line: 73, baseType: !3851, size: 64, offset: 768)
!3851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3852, size: 64)
!3852 = !DISubroutineType(types: !3853)
!3853 = !{null, !3117, !3273, !3274}
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3826, file: !3827, line: 75, baseType: !3439, size: 64, offset: 832)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3826, file: !3827, line: 77, baseType: !3545, size: 64, offset: 896)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3118, file: !3119, line: 541, baseType: !3199, size: 64, offset: 5248)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3118, file: !3119, line: 543, baseType: !3435, size: 64, offset: 5312)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !3118, file: !3119, line: 544, baseType: !3859, size: 64, offset: 5376)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 64)
!3860 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !3119, line: 45, flags: DIFlagFwdDecl)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !3118, file: !3119, line: 545, baseType: !3862, size: 64, offset: 5440)
!3862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3863, size: 64)
!3863 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !3119, line: 47, flags: DIFlagFwdDecl)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !3118, file: !3119, line: 547, baseType: !168, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3118, file: !3119, line: 548, baseType: !168, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !3118, file: !3119, line: 549, baseType: !168, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !3118, file: !3119, line: 550, baseType: !168, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3113, file: !8, line: 392, baseType: !285, size: 128, offset: 128)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "sgt", scope: !3113, file: !8, line: 393, baseType: !3870, size: 64, offset: 256)
!3870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3871, size: 64)
!3871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_table", file: !3872, line: 42, size: 128, elements: !3873)
!3872 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!3873 = !{!3874, !3883, !3884}
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !3871, file: !3872, line: 43, baseType: !3875, size: 64)
!3875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3876, size: 64)
!3876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !3872, line: 11, size: 256, elements: !3877)
!3877 = !{!3878, !3879, !3880, !3881, !3882}
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !3876, file: !3872, line: 12, baseType: !16, size: 64)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3876, file: !3872, line: 13, baseType: !55, size: 32, offset: 64)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3876, file: !3872, line: 14, baseType: !55, size: 32, offset: 96)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !3876, file: !3872, line: 15, baseType: !984, size: 64, offset: 128)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !3876, file: !3872, line: 17, baseType: !55, size: 32, offset: 192)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "nents", scope: !3871, file: !3872, line: 44, baseType: !55, size: 32, offset: 64)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "orig_nents", scope: !3871, file: !3872, line: 45, baseType: !55, size: 32, offset: 96)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3113, file: !8, line: 394, baseType: !3886, size: 32, offset: 320)
!3886 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !3887, line: 5, baseType: !55, size: 32, elements: !3888)
!3887 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!3888 = !{!3889, !3890, !3891, !3892}
!3889 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!3890 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!3891 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!3892 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "peer2peer", scope: !3113, file: !8, line: 395, baseType: !168, size: 8, offset: 352)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "importer_ops", scope: !3113, file: !8, line: 396, baseType: !3895, size: 64, offset: 384)
!3895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3896, size: 64)
!3896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3897)
!3897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_buf_attach_ops", file: !8, line: 337, size: 128, elements: !3898)
!3898 = !{!3899, !3900}
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "allow_peer2peer", scope: !3897, file: !8, line: 344, baseType: !168, size: 8)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "move_notify", scope: !3897, file: !8, line: 364, baseType: !3901, size: 64, offset: 64)
!3901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3902, size: 64)
!3902 = !DISubroutineType(types: !3903)
!3903 = !{null, !3112}
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "importer_priv", scope: !3113, file: !8, line: 397, baseType: !146, size: 64, offset: 448)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3113, file: !8, line: 398, baseType: !146, size: 64, offset: 512)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3105, file: !8, line: 82, baseType: !3907, size: 64, offset: 128)
!3907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3908, size: 64)
!3908 = !DISubroutineType(types: !3909)
!3909 = !{null, !6, !3112}
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !3105, file: !8, line: 100, baseType: !3911, size: 64, offset: 192)
!3911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3912, size: 64)
!3912 = !DISubroutineType(types: !3913)
!3913 = !{!152, !3112}
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "unpin", scope: !3105, file: !8, line: 113, baseType: !3901, size: 64, offset: 256)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "map_dma_buf", scope: !3105, file: !8, line: 154, baseType: !3916, size: 64, offset: 320)
!3916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3917, size: 64)
!3917 = !DISubroutineType(types: !3918)
!3918 = !{!3870, !3112, !3886}
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "unmap_dma_buf", scope: !3105, file: !8, line: 164, baseType: !3920, size: 64, offset: 384)
!3920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3921, size: 64)
!3921 = !DISubroutineType(types: !3922)
!3922 = !{null, !3112, !3870, !3886}
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3105, file: !8, line: 178, baseType: !3924, size: 64, offset: 448)
!3924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3925, size: 64)
!3925 = !DISubroutineType(types: !3926)
!3926 = !{null, !6}
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "begin_cpu_access", scope: !3105, file: !8, line: 210, baseType: !3928, size: 64, offset: 512)
!3928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3929, size: 64)
!3929 = !DISubroutineType(types: !3930)
!3930 = !{!152, !6, !3886}
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "end_cpu_access", scope: !3105, file: !8, line: 229, baseType: !3928, size: 64, offset: 576)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3105, file: !8, line: 266, baseType: !3933, size: 64, offset: 640)
!3933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3934, size: 64)
!3934 = !DISubroutineType(types: !3935)
!3935 = !{!152, !6, !1046}
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "vmap", scope: !3105, file: !8, line: 268, baseType: !3937, size: 64, offset: 704)
!3937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3938, size: 64)
!3938 = !DISubroutineType(types: !3939)
!3939 = !{!146, !6}
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "vunmap", scope: !3105, file: !8, line: 269, baseType: !3941, size: 64, offset: 768)
!3941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3942, size: 64)
!3942 = !DISubroutineType(types: !3943)
!3943 = !{null, !6, !146}
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7, file: !8, line: 310, baseType: !367, size: 192, offset: 320)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "vmapping_counter", scope: !7, file: !8, line: 311, baseType: !55, size: 32, offset: 512)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "vmap_ptr", scope: !7, file: !8, line: 312, baseType: !146, size: 64, offset: 576)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "exp_name", scope: !7, file: !8, line: 313, baseType: !135, size: 64, offset: 640)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7, file: !8, line: 314, baseType: !135, size: 64, offset: 704)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "name_lock", scope: !7, file: !8, line: 315, baseType: !379, offset: 768)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7, file: !8, line: 316, baseType: !639, size: 64, offset: 768)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "list_node", scope: !7, file: !8, line: 317, baseType: !285, size: 128, offset: 832)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !7, file: !8, line: 318, baseType: !146, size: 64, offset: 960)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !7, file: !8, line: 319, baseType: !3954, size: 64, offset: 1024)
!3954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3955, size: 64)
!3955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_resv", file: !3956, line: 70, size: 448, elements: !3957)
!3956 = !DIFile(filename: "./include/linux/dma-resv.h", directory: "/home/lizy2001/genbc/linux")
!3957 = !{!3958, !3972, !3977, !4023}
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3955, file: !3956, line: 71, baseType: !3959, size: 256)
!3959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ww_mutex", file: !368, line: 71, size: 256, elements: !3960)
!3960 = !{!3961, !3962}
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3959, file: !368, line: 72, baseType: !367, size: 192)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !3959, file: !368, line: 73, baseType: !3963, size: 64, offset: 192)
!3963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3964, size: 64)
!3964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ww_acquire_ctx", file: !3965, line: 31, size: 192, elements: !3966)
!3965 = !DIFile(filename: "./include/linux/ww_mutex.h", directory: "/home/lizy2001/genbc/linux")
!3966 = !{!3967, !3968, !3969, !3970, !3971}
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3964, file: !3965, line: 32, baseType: !1278, size: 64)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !3964, file: !3965, line: 33, baseType: !16, size: 64, offset: 64)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "acquired", scope: !3964, file: !3965, line: 34, baseType: !55, size: 32, offset: 128)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "wounded", scope: !3964, file: !3965, line: 35, baseType: !104, size: 16, offset: 160)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "is_wait_die", scope: !3964, file: !3965, line: 36, baseType: !104, size: 16, offset: 176)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3955, file: !3956, line: 72, baseType: !3973, size: 32, offset: 256)
!3973 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_ww_mutex_t", file: !58, line: 280, baseType: !3974)
!3974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_ww_mutex", file: !58, line: 280, size: 32, elements: !3975)
!3975 = !{!3976}
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !3974, file: !58, line: 280, baseType: !62, size: 32)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "fence_excl", scope: !3955, file: !3956, line: 74, baseType: !3978, size: 64, offset: 320)
!3978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3979, size: 64)
!3979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_fence", file: !3980, line: 65, size: 512, elements: !3981)
!3980 = !DIFile(filename: "./include/linux/dma-fence.h", directory: "/home/lizy2001/genbc/linux")
!3981 = !{!3982, !3983, !4012, !4018, !4019, !4020, !4021, !4022}
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3979, file: !3980, line: 66, baseType: !1130, size: 64)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3979, file: !3980, line: 67, baseType: !3984, size: 64, offset: 64)
!3984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3985, size: 64)
!3985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3986)
!3986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_fence_ops", file: !3980, line: 125, size: 576, elements: !3987)
!3987 = !{!3988, !3989, !3993, !3994, !3998, !3999, !4003, !4007, !4011}
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "use_64bit_seqno", scope: !3986, file: !3980, line: 132, baseType: !168, size: 8)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "get_driver_name", scope: !3986, file: !3980, line: 143, baseType: !3990, size: 64, offset: 64)
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3991, size: 64)
!3991 = !DISubroutineType(types: !3992)
!3992 = !{!135, !3978}
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "get_timeline_name", scope: !3986, file: !3980, line: 155, baseType: !3990, size: 64, offset: 128)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "enable_signaling", scope: !3986, file: !3980, line: 192, baseType: !3995, size: 64, offset: 192)
!3995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3996, size: 64)
!3996 = !DISubroutineType(types: !3997)
!3997 = !{!168, !3978}
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "signaled", scope: !3986, file: !3980, line: 209, baseType: !3995, size: 64, offset: 256)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !3986, file: !3980, line: 231, baseType: !4000, size: 64, offset: 320)
!4000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4001, size: 64)
!4001 = !DISubroutineType(types: !4002)
!4002 = !{!220, !3978, !168, !220}
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3986, file: !3980, line: 242, baseType: !4004, size: 64, offset: 384)
!4004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4005, size: 64)
!4005 = !DISubroutineType(types: !4006)
!4006 = !{null, !3978}
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "fence_value_str", scope: !3986, file: !3980, line: 252, baseType: !4008, size: 64, offset: 448)
!4008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4009, size: 64)
!4009 = !DISubroutineType(types: !4010)
!4010 = !{null, !3978, !163, !152}
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "timeline_value_str", scope: !3986, file: !3980, line: 262, baseType: !4008, size: 64, offset: 512)
!4012 = !DIDerivedType(tag: DW_TAG_member, scope: !3979, file: !3980, line: 84, baseType: !4013, size: 128, offset: 128)
!4013 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3979, file: !3980, line: 84, size: 128, elements: !4014)
!4014 = !{!4015, !4016, !4017}
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !4013, file: !3980, line: 85, baseType: !285, size: 128)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !4013, file: !3980, line: 87, baseType: !1358, size: 64)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4013, file: !3980, line: 89, baseType: !32, size: 128, align: 64)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !3979, file: !3980, line: 91, baseType: !91, size: 64, offset: 256)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "seqno", scope: !3979, file: !3980, line: 92, baseType: !91, size: 64, offset: 320)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3979, file: !3980, line: 93, baseType: !16, size: 64, offset: 384)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3979, file: !3980, line: 94, baseType: !3404, size: 32, offset: 448)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !3979, file: !3980, line: 95, baseType: !152, size: 32, offset: 480)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "fence", scope: !3955, file: !3956, line: 75, baseType: !4024, size: 64, offset: 384)
!4024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4025, size: 64)
!4025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_resv_list", file: !3956, line: 57, size: 192, elements: !4026)
!4026 = !{!4027, !4028, !4029, !4030}
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4025, file: !3956, line: 58, baseType: !32, size: 128, align: 64)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "shared_count", scope: !4025, file: !3956, line: 59, baseType: !85, size: 32, offset: 128)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "shared_max", scope: !4025, file: !3956, line: 59, baseType: !85, size: 32, offset: 160)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !4025, file: !3956, line: 60, baseType: !4031, offset: 192)
!4031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3978, elements: !355)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !7, file: !8, line: 322, baseType: !1549, size: 128, offset: 1088)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "cb_excl", scope: !7, file: !8, line: 329, baseType: !4034, size: 320, offset: 1216)
!4034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_buf_poll_cb_t", file: !8, line: 324, size: 320, elements: !4035)
!4035 = !{!4036, !4046, !4047}
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !4034, file: !8, line: 325, baseType: !4037, size: 192)
!4037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_fence_cb", file: !3980, line: 116, size: 192, elements: !4038)
!4038 = !{!4039, !4040}
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4037, file: !3980, line: 117, baseType: !285, size: 128)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4037, file: !3980, line: 118, baseType: !4041, size: 64, offset: 128)
!4041 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_fence_func_t", file: !3980, line: 105, baseType: !4042)
!4042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4043, size: 64)
!4043 = !DISubroutineType(types: !4044)
!4044 = !{null, !3978, !4045}
!4045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4037, size: 64)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4034, file: !8, line: 326, baseType: !2814, size: 64, offset: 192)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4034, file: !8, line: 328, baseType: !2803, size: 32, offset: 256)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "cb_shared", scope: !7, file: !8, line: 329, baseType: !4034, size: 320, offset: 1536)
!4049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4050, size: 64)
!4050 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4051)
!4051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_buf_export_info", file: !8, line: 414, size: 448, elements: !4052)
!4052 = !{!4053, !4054, !4055, !4056, !4057, !4058, !4059}
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "exp_name", scope: !4051, file: !8, line: 415, baseType: !135, size: 64)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4051, file: !8, line: 416, baseType: !639, size: 64, offset: 64)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4051, file: !8, line: 417, baseType: !3103, size: 64, offset: 128)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4051, file: !8, line: 418, baseType: !11, size: 64, offset: 192)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4051, file: !8, line: 419, baseType: !152, size: 32, offset: 256)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !4051, file: !8, line: 420, baseType: !3954, size: 64, offset: 320)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4051, file: !8, line: 421, baseType: !146, size: 64, offset: 384)
!4060 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4061, retainedTypes: !4081, globals: !4105, splitDebugInlining: false, nameTableKind: None)
!4061 = !{!330, !654, !660, !932, !1136, !1365, !1485, !2263, !2358, !3055, !3074, !3241, !3495, !3562, !3649, !3657, !3886, !4062, !4067, !4074}
!4062 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4063, line: 10, baseType: !55, size: 32, elements: !4064)
!4063 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!4064 = !{!4065, !4066}
!4065 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!4066 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!4067 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !4068, line: 305, baseType: !55, size: 32, elements: !4069)
!4068 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!4069 = !{!4070, !4071, !4072, !4073}
!4070 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!4071 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!4072 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!4073 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!4074 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "refcount_saturation_type", file: !446, line: 119, baseType: !55, size: 32, elements: !4075)
!4075 = !{!4076, !4077, !4078, !4079, !4080}
!4076 = !DIEnumerator(name: "REFCOUNT_ADD_NOT_ZERO_OVF", value: 0, isUnsigned: true)
!4077 = !DIEnumerator(name: "REFCOUNT_ADD_OVF", value: 1, isUnsigned: true)
!4078 = !DIEnumerator(name: "REFCOUNT_ADD_UAF", value: 2, isUnsigned: true)
!4079 = !DIEnumerator(name: "REFCOUNT_SUB_UAF", value: 3, isUnsigned: true)
!4080 = !DIEnumerator(name: "REFCOUNT_DEC_LEAK", value: 4, isUnsigned: true)
!4081 = !{!828, !3954, !2609, !146, !3112, !2803, !4024, !4082, !3978, !4085, !4088, !4091, !753, !4094, !4096, !4097, !16, !135, !152, !4098, !4101, !220, !4104}
!4082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4083, size: 64)
!4083 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4084)
!4084 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !4024)
!4085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4086, size: 64)
!4086 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4087)
!4087 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !3978)
!4088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4089, size: 64)
!4089 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4090)
!4090 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !55)
!4091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4092, size: 64)
!4092 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4093)
!4093 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !152)
!4094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4095, size: 64)
!4095 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !85)
!4096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4034, size: 64)
!4097 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !12, line: 37, baseType: !16)
!4098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4099, size: 64)
!4099 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4100)
!4100 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !288)
!4101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4102, size: 64)
!4102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4103)
!4103 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !211)
!4104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4100, size: 64)
!4105 = !{!0, !4106, !4108, !4110, !4115, !4121, !4123, !4125, !4130, !4132}
!4106 = !DIGlobalVariableExpression(var: !4107, expr: !DIExpression())
!4107 = distinct !DIGlobalVariable(name: "__key", scope: !2, file: !3, line: 569, type: !691, isLocal: true, isDefinition: true)
!4108 = !DIGlobalVariableExpression(var: !4109, expr: !DIExpression())
!4109 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_dma_buf_init268", scope: !4060, file: !3, line: 1401, type: !146, isLocal: true, isDefinition: true)
!4110 = !DIGlobalVariableExpression(var: !4111, expr: !DIExpression())
!4111 = distinct !DIGlobalVariable(name: "__exitcall_dma_buf_deinit", scope: !4060, file: !3, line: 1408, type: !4112, isLocal: true, isDefinition: true)
!4112 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !4113, line: 117, baseType: !4114)
!4113 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!4114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 64)
!4115 = !DIGlobalVariableExpression(var: !4116, expr: !DIExpression())
!4116 = distinct !DIGlobalVariable(name: "db_list", scope: !4060, file: !3, line: 39, type: !4117, isLocal: true, isDefinition: true)
!4117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_buf_list", file: !3, line: 34, size: 320, elements: !4118)
!4118 = !{!4119, !4120}
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4117, file: !3, line: 35, baseType: !285, size: 128)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4117, file: !3, line: 36, baseType: !367, size: 192, offset: 128)
!4121 = !DIGlobalVariableExpression(var: !4122, expr: !DIExpression())
!4122 = distinct !DIGlobalVariable(name: "dma_buf_mnt", scope: !4060, file: !3, line: 96, type: !45, isLocal: true, isDefinition: true)
!4123 = !DIGlobalVariableExpression(var: !4124, expr: !DIExpression())
!4124 = distinct !DIGlobalVariable(name: "dma_buf_fops", scope: !4060, file: !3, line: 415, type: !2763, isLocal: true, isDefinition: true)
!4125 = !DIGlobalVariableExpression(var: !4126, expr: !DIExpression())
!4126 = distinct !DIGlobalVariable(name: "__key", scope: !4127, file: !3, line: 1396, type: !691, isLocal: true, isDefinition: true)
!4127 = distinct !DISubprogram(name: "dma_buf_init", scope: !3, file: !3, line: 1390, type: !4128, scopeLine: 1391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!4128 = !DISubroutineType(types: !4129)
!4129 = !{!152}
!4130 = !DIGlobalVariableExpression(var: !4131, expr: !DIExpression())
!4131 = distinct !DIGlobalVariable(name: "dma_buf_fs_type", scope: !4060, file: !3, line: 109, type: !296, isLocal: true, isDefinition: true)
!4132 = !DIGlobalVariableExpression(var: !4133, expr: !DIExpression())
!4133 = distinct !DIGlobalVariable(name: "dma_buf_dentry_ops", scope: !4060, file: !3, line: 91, type: !2614, isLocal: true, isDefinition: true)
!4134 = !{!"rsp"}
!4135 = !{i32 7, !"Dwarf Version", i32 4}
!4136 = !{i32 2, !"Debug Info Version", i32 3}
!4137 = !{i32 1, !"wchar_size", i32 2}
!4138 = !{i32 1, !"Code Model", i32 2}
!4139 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4140 = !DILocalVariable(name: "lock", arg: 1, scope: !4141, file: !4142, line: 327, type: !1130)
!4141 = distinct !DISubprogram(name: "spinlock_check", scope: !4142, file: !4142, line: 327, type: !4143, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!4142 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!4143 = !DISubroutineType(types: !4144)
!4144 = !{!4145, !1130}
!4145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64)
!4146 = !DILocation(line: 327, column: 67, scope: !4141, inlinedAt: !4147)
!4147 = distinct !DILocation(line: 549, column: 2, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !2, file: !3, line: 549, column: 2)
!4149 = !DILocalVariable(name: "exp_info", arg: 1, scope: !2, file: !3, line: 506, type: !4049)
!4150 = !DILocation(line: 506, column: 66, scope: !2)
!4151 = !DILocalVariable(name: "dmabuf", scope: !2, file: !3, line: 508, type: !6)
!4152 = !DILocation(line: 508, column: 18, scope: !2)
!4153 = !DILocalVariable(name: "resv", scope: !2, file: !3, line: 509, type: !3954)
!4154 = !DILocation(line: 509, column: 19, scope: !2)
!4155 = !DILocation(line: 509, column: 26, scope: !2)
!4156 = !DILocation(line: 509, column: 36, scope: !2)
!4157 = !DILocalVariable(name: "file", scope: !2, file: !3, line: 510, type: !18)
!4158 = !DILocation(line: 510, column: 15, scope: !2)
!4159 = !DILocalVariable(name: "alloc_size", scope: !2, file: !3, line: 511, type: !11)
!4160 = !DILocation(line: 511, column: 9, scope: !2)
!4161 = !DILocalVariable(name: "ret", scope: !2, file: !3, line: 512, type: !152)
!4162 = !DILocation(line: 512, column: 6, scope: !2)
!4163 = !DILocation(line: 514, column: 7, scope: !4164)
!4164 = distinct !DILexicalBlock(scope: !2, file: !3, line: 514, column: 6)
!4165 = !DILocation(line: 514, column: 17, scope: !4164)
!4166 = !DILocation(line: 514, column: 6, scope: !2)
!4167 = !DILocation(line: 515, column: 14, scope: !4164)
!4168 = !DILocation(line: 515, column: 3, scope: !4164)
!4169 = !DILocation(line: 518, column: 14, scope: !4164)
!4170 = !DILocalVariable(name: "__ret_warn_on", scope: !4171, file: !3, line: 520, type: !152)
!4171 = distinct !DILexicalBlock(scope: !4172, file: !3, line: 520, column: 6)
!4172 = distinct !DILexicalBlock(scope: !2, file: !3, line: 520, column: 6)
!4173 = !DILocation(line: 520, column: 6, scope: !4171)
!4174 = !DILocation(line: 520, column: 6, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4171, file: !3, line: 520, column: 6)
!4176 = !DILocation(line: 520, column: 6, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4175, file: !3, line: 520, column: 6)
!4178 = !DILocation(line: 520, column: 6, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 520, column: 6)
!4180 = !DILocation(line: 520, column: 6, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 520, column: 6)
!4182 = !{i32 -2141858729, i32 -2141858700, i32 -2141858654, i32 -2141858596, i32 -2141858542, i32 -2141858488, i32 -2141858433, i32 -2141858402}
!4183 = !DILocation(line: 520, column: 6, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 520, column: 6)
!4185 = !{i32 -2141857995, i32 -2141857988, i32 -2141857936, i32 -2141857905, i32 -2141857875}
!4186 = !DILocation(line: 520, column: 6, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 520, column: 6)
!4188 = !DILocation(line: 520, column: 6, scope: !4172)
!4189 = !DILocation(line: 520, column: 6, scope: !2)
!4190 = !DILocation(line: 525, column: 10, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4172, file: !3, line: 524, column: 35)
!4192 = !DILocation(line: 525, column: 3, scope: !4191)
!4193 = !DILocalVariable(name: "__ret_warn_on", scope: !4194, file: !3, line: 528, type: !152)
!4194 = distinct !DILexicalBlock(scope: !4195, file: !3, line: 528, column: 6)
!4195 = distinct !DILexicalBlock(scope: !2, file: !3, line: 528, column: 6)
!4196 = !DILocation(line: 528, column: 6, scope: !4194)
!4197 = !DILocation(line: 0, scope: !4194)
!4198 = !DILocation(line: 528, column: 6, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4194, file: !3, line: 528, column: 6)
!4200 = !DILocation(line: 528, column: 6, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4199, file: !3, line: 528, column: 6)
!4202 = !DILocation(line: 528, column: 6, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4201, file: !3, line: 528, column: 6)
!4204 = !DILocation(line: 528, column: 6, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4201, file: !3, line: 528, column: 6)
!4206 = !{i32 -2141857214, i32 -2141857185, i32 -2141857139, i32 -2141857081, i32 -2141857027, i32 -2141856973, i32 -2141856918, i32 -2141856887}
!4207 = !DILocation(line: 528, column: 6, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4201, file: !3, line: 528, column: 6)
!4209 = !{i32 -2141856480, i32 -2141856473, i32 -2141856421, i32 -2141856390, i32 -2141856360}
!4210 = !DILocation(line: 528, column: 6, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4201, file: !3, line: 528, column: 6)
!4212 = !DILocation(line: 528, column: 6, scope: !4195)
!4213 = !DILocation(line: 528, column: 6, scope: !2)
!4214 = !DILocation(line: 530, column: 10, scope: !4195)
!4215 = !DILocation(line: 530, column: 3, scope: !4195)
!4216 = !DILocalVariable(name: "__ret_warn_on", scope: !4217, file: !3, line: 532, type: !152)
!4217 = distinct !DILexicalBlock(scope: !4218, file: !3, line: 532, column: 6)
!4218 = distinct !DILexicalBlock(scope: !2, file: !3, line: 532, column: 6)
!4219 = !DILocation(line: 532, column: 6, scope: !4217)
!4220 = !DILocation(line: 532, column: 6, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4217, file: !3, line: 532, column: 6)
!4222 = !DILocation(line: 532, column: 6, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4221, file: !3, line: 532, column: 6)
!4224 = !DILocation(line: 532, column: 6, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4223, file: !3, line: 532, column: 6)
!4226 = !DILocation(line: 532, column: 6, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4223, file: !3, line: 532, column: 6)
!4228 = !{i32 -2141855741, i32 -2141855712, i32 -2141855666, i32 -2141855608, i32 -2141855554, i32 -2141855500, i32 -2141855445, i32 -2141855414}
!4229 = !DILocation(line: 532, column: 6, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4223, file: !3, line: 532, column: 6)
!4231 = !{i32 -2141855007, i32 -2141855000, i32 -2141854948, i32 -2141854917, i32 -2141854887}
!4232 = !DILocation(line: 532, column: 6, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4223, file: !3, line: 532, column: 6)
!4234 = !DILocation(line: 532, column: 6, scope: !4218)
!4235 = !DILocation(line: 532, column: 6, scope: !2)
!4236 = !DILocation(line: 533, column: 10, scope: !4218)
!4237 = !DILocation(line: 533, column: 3, scope: !4218)
!4238 = !DILocation(line: 535, column: 22, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !2, file: !3, line: 535, column: 6)
!4240 = !DILocation(line: 535, column: 32, scope: !4239)
!4241 = !DILocation(line: 535, column: 7, scope: !4239)
!4242 = !DILocation(line: 535, column: 6, scope: !2)
!4243 = !DILocation(line: 536, column: 10, scope: !4239)
!4244 = !DILocation(line: 536, column: 3, scope: !4239)
!4245 = !DILocation(line: 538, column: 19, scope: !2)
!4246 = !DILocation(line: 538, column: 11, scope: !2)
!4247 = !DILocation(line: 538, column: 9, scope: !2)
!4248 = !DILocation(line: 539, column: 7, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !2, file: !3, line: 539, column: 6)
!4250 = !DILocation(line: 539, column: 6, scope: !2)
!4251 = !DILocation(line: 540, column: 7, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4249, file: !3, line: 539, column: 15)
!4253 = !DILocation(line: 541, column: 3, scope: !4252)
!4254 = !DILocation(line: 544, column: 17, scope: !2)
!4255 = !DILocation(line: 544, column: 27, scope: !2)
!4256 = !DILocation(line: 544, column: 2, scope: !2)
!4257 = !DILocation(line: 544, column: 10, scope: !2)
!4258 = !DILocation(line: 544, column: 15, scope: !2)
!4259 = !DILocation(line: 545, column: 16, scope: !2)
!4260 = !DILocation(line: 545, column: 26, scope: !2)
!4261 = !DILocation(line: 545, column: 2, scope: !2)
!4262 = !DILocation(line: 545, column: 10, scope: !2)
!4263 = !DILocation(line: 545, column: 14, scope: !2)
!4264 = !DILocation(line: 546, column: 17, scope: !2)
!4265 = !DILocation(line: 546, column: 27, scope: !2)
!4266 = !DILocation(line: 546, column: 2, scope: !2)
!4267 = !DILocation(line: 546, column: 10, scope: !2)
!4268 = !DILocation(line: 546, column: 15, scope: !2)
!4269 = !DILocation(line: 547, column: 21, scope: !2)
!4270 = !DILocation(line: 547, column: 31, scope: !2)
!4271 = !DILocation(line: 547, column: 2, scope: !2)
!4272 = !DILocation(line: 547, column: 10, scope: !2)
!4273 = !DILocation(line: 547, column: 19, scope: !2)
!4274 = !DILocation(line: 548, column: 18, scope: !2)
!4275 = !DILocation(line: 548, column: 28, scope: !2)
!4276 = !DILocation(line: 548, column: 2, scope: !2)
!4277 = !DILocation(line: 548, column: 10, scope: !2)
!4278 = !DILocation(line: 548, column: 16, scope: !2)
!4279 = !DILocation(line: 549, column: 2, scope: !2)
!4280 = !DILocation(line: 549, column: 2, scope: !4148)
!4281 = !DILocation(line: 329, column: 10, scope: !4141, inlinedAt: !4147)
!4282 = !DILocation(line: 329, column: 16, scope: !4141, inlinedAt: !4147)
!4283 = !DILocation(line: 550, column: 2, scope: !2)
!4284 = !DILocation(line: 550, column: 2, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !2, file: !3, line: 550, column: 2)
!4286 = !DILocation(line: 551, column: 51, scope: !2)
!4287 = !DILocation(line: 551, column: 59, scope: !2)
!4288 = !DILocation(line: 551, column: 25, scope: !2)
!4289 = !DILocation(line: 551, column: 33, scope: !2)
!4290 = !DILocation(line: 551, column: 43, scope: !2)
!4291 = !DILocation(line: 551, column: 48, scope: !2)
!4292 = !DILocation(line: 551, column: 2, scope: !2)
!4293 = !DILocation(line: 551, column: 10, scope: !2)
!4294 = !DILocation(line: 551, column: 18, scope: !2)
!4295 = !DILocation(line: 551, column: 23, scope: !2)
!4296 = !DILocation(line: 552, column: 27, scope: !2)
!4297 = !DILocation(line: 552, column: 35, scope: !2)
!4298 = !DILocation(line: 552, column: 45, scope: !2)
!4299 = !DILocation(line: 552, column: 52, scope: !2)
!4300 = !DILocation(line: 552, column: 2, scope: !2)
!4301 = !DILocation(line: 552, column: 10, scope: !2)
!4302 = !DILocation(line: 552, column: 18, scope: !2)
!4303 = !DILocation(line: 552, column: 25, scope: !2)
!4304 = !DILocation(line: 554, column: 7, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !2, file: !3, line: 554, column: 6)
!4306 = !DILocation(line: 554, column: 6, scope: !2)
!4307 = !DILocation(line: 555, column: 30, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4305, file: !3, line: 554, column: 13)
!4309 = !DILocation(line: 555, column: 10, scope: !4308)
!4310 = !DILocation(line: 555, column: 8, scope: !4308)
!4311 = !DILocation(line: 556, column: 17, scope: !4308)
!4312 = !DILocation(line: 556, column: 3, scope: !4308)
!4313 = !DILocation(line: 557, column: 2, scope: !4308)
!4314 = !DILocation(line: 558, column: 17, scope: !2)
!4315 = !DILocation(line: 558, column: 2, scope: !2)
!4316 = !DILocation(line: 558, column: 10, scope: !2)
!4317 = !DILocation(line: 558, column: 15, scope: !2)
!4318 = !DILocation(line: 560, column: 25, scope: !2)
!4319 = !DILocation(line: 560, column: 33, scope: !2)
!4320 = !DILocation(line: 560, column: 43, scope: !2)
!4321 = !DILocation(line: 560, column: 9, scope: !2)
!4322 = !DILocation(line: 560, column: 7, scope: !2)
!4323 = !DILocation(line: 561, column: 13, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !2, file: !3, line: 561, column: 6)
!4325 = !DILocation(line: 561, column: 6, scope: !4324)
!4326 = !DILocation(line: 561, column: 6, scope: !2)
!4327 = !DILocation(line: 562, column: 17, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4324, file: !3, line: 561, column: 20)
!4329 = !DILocation(line: 562, column: 9, scope: !4328)
!4330 = !DILocation(line: 562, column: 7, scope: !4328)
!4331 = !DILocation(line: 563, column: 3, scope: !4328)
!4332 = !DILocation(line: 566, column: 2, scope: !2)
!4333 = !DILocation(line: 566, column: 8, scope: !2)
!4334 = !DILocation(line: 566, column: 15, scope: !2)
!4335 = !DILocation(line: 567, column: 17, scope: !2)
!4336 = !DILocation(line: 567, column: 2, scope: !2)
!4337 = !DILocation(line: 567, column: 10, scope: !2)
!4338 = !DILocation(line: 567, column: 15, scope: !2)
!4339 = !DILocation(line: 569, column: 2, scope: !2)
!4340 = !DILocation(line: 569, column: 2, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !2, file: !3, line: 569, column: 2)
!4342 = !DILocation(line: 570, column: 18, scope: !2)
!4343 = !DILocation(line: 570, column: 26, scope: !2)
!4344 = !DILocation(line: 570, column: 2, scope: !2)
!4345 = !DILocation(line: 572, column: 2, scope: !2)
!4346 = !DILocation(line: 573, column: 12, scope: !2)
!4347 = !DILocation(line: 573, column: 20, scope: !2)
!4348 = !DILocation(line: 573, column: 2, scope: !2)
!4349 = !DILocation(line: 574, column: 2, scope: !2)
!4350 = !DILocation(line: 576, column: 9, scope: !2)
!4351 = !DILocation(line: 576, column: 2, scope: !2)
!4352 = !DILabel(scope: !2, name: "err_dmabuf", file: !3, line: 578)
!4353 = !DILocation(line: 578, column: 1, scope: !2)
!4354 = !DILocation(line: 579, column: 8, scope: !2)
!4355 = !DILocation(line: 579, column: 2, scope: !2)
!4356 = !DILabel(scope: !2, name: "err_module", file: !3, line: 580)
!4357 = !DILocation(line: 580, column: 1, scope: !2)
!4358 = !DILocation(line: 581, column: 13, scope: !2)
!4359 = !DILocation(line: 581, column: 23, scope: !2)
!4360 = !DILocation(line: 581, column: 2, scope: !2)
!4361 = !DILocation(line: 582, column: 17, scope: !2)
!4362 = !DILocation(line: 582, column: 9, scope: !2)
!4363 = !DILocation(line: 582, column: 2, scope: !2)
!4364 = !DILocation(line: 583, column: 1, scope: !2)
!4365 = distinct !DISubprogram(name: "ERR_PTR", scope: !4366, file: !4366, line: 24, type: !4367, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!4366 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!4367 = !DISubroutineType(types: !4368)
!4368 = !{!146, !220}
!4369 = !DILocalVariable(name: "error", arg: 1, scope: !4365, file: !4366, line: 24, type: !220)
!4370 = !DILocation(line: 24, column: 48, scope: !4365)
!4371 = !DILocation(line: 26, column: 18, scope: !4365)
!4372 = !DILocation(line: 26, column: 9, scope: !4365)
!4373 = !DILocation(line: 26, column: 2, scope: !4365)
!4374 = distinct !DISubprogram(name: "try_module_get", scope: !4375, file: !4375, line: 751, type: !4376, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!4375 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!4376 = !DISubroutineType(types: !4377)
!4377 = !{!168, !639}
!4378 = !DILocalVariable(name: "module", arg: 1, scope: !4374, file: !4375, line: 751, type: !639)
!4379 = !DILocation(line: 751, column: 50, scope: !4374)
!4380 = !DILocation(line: 753, column: 2, scope: !4374)
!4381 = distinct !DISubprogram(name: "kzalloc", scope: !4068, file: !4068, line: 662, type: !4382, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!4382 = !DISubroutineType(types: !4383)
!4383 = !{!146, !11, !828}
!4384 = !DILocalVariable(name: "s", arg: 1, scope: !4385, file: !4068, line: 445, type: !999)
!4385 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !4068, file: !4068, line: 445, type: !4386, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!4386 = !DISubroutineType(types: !4387)
!4387 = !{!146, !999, !828, !11}
!4388 = !DILocation(line: 445, column: 72, scope: !4385, inlinedAt: !4389)
!4389 = distinct !DILocation(line: 552, column: 10, scope: !4390, inlinedAt: !4393)
!4390 = distinct !DILexicalBlock(scope: !4391, file: !4068, line: 540, column: 34)
!4391 = distinct !DILexicalBlock(scope: !4392, file: !4068, line: 540, column: 6)
!4392 = distinct !DISubprogram(name: "kmalloc", scope: !4068, file: !4068, line: 538, type: !4382, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!4393 = distinct !DILocation(line: 664, column: 9, scope: !4381)
!4394 = !DILocalVariable(name: "flags", arg: 2, scope: !4385, file: !4068, line: 446, type: !828)
!4395 = !DILocation(line: 446, column: 9, scope: !4385, inlinedAt: !4389)
!4396 = !DILocalVariable(name: "size", arg: 3, scope: !4385, file: !4068, line: 446, type: !11)
!4397 = !DILocation(line: 446, column: 23, scope: !4385, inlinedAt: !4389)
!4398 = !DILocalVariable(name: "ret", scope: !4385, file: !4068, line: 448, type: !146)
!4399 = !DILocation(line: 448, column: 8, scope: !4385, inlinedAt: !4389)
!4400 = !DILocalVariable(name: "flags", arg: 1, scope: !4401, file: !4068, line: 318, type: !828)
!4401 = distinct !DISubprogram(name: "kmalloc_type", scope: !4068, file: !4068, line: 318, type: !4402, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!4402 = !DISubroutineType(types: !4403)
!4403 = !{!4067, !828}
!4404 = !DILocation(line: 318, column: 67, scope: !4401, inlinedAt: !4405)
!4405 = distinct !DILocation(line: 553, column: 20, scope: !4390, inlinedAt: !4393)
!4406 = !DILocalVariable(name: "size", arg: 1, scope: !4407, file: !4068, line: 346, type: !11)
!4407 = distinct !DISubprogram(name: "kmalloc_index", scope: !4068, file: !4068, line: 346, type: !4408, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!4408 = !DISubroutineType(types: !4409)
!4409 = !{!55, !11}
!4410 = !DILocation(line: 346, column: 58, scope: !4407, inlinedAt: !4411)
!4411 = distinct !DILocation(line: 547, column: 11, scope: !4390, inlinedAt: !4393)
!4412 = !DILocalVariable(name: "size", arg: 1, scope: !4413, file: !4068, line: 472, type: !11)
!4413 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !4068, file: !4068, line: 472, type: !4414, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!4414 = !DISubroutineType(types: !4415)
!4415 = !{!146, !11, !828, !55}
!4416 = !DILocation(line: 472, column: 28, scope: !4413, inlinedAt: !4417)
!4417 = distinct !DILocation(line: 481, column: 9, scope: !4418, inlinedAt: !4419)
!4418 = distinct !DISubprogram(name: "kmalloc_large", scope: !4068, file: !4068, line: 478, type: !4382, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!4419 = distinct !DILocation(line: 545, column: 11, scope: !4420, inlinedAt: !4393)
!4420 = distinct !DILexicalBlock(scope: !4390, file: !4068, line: 544, column: 7)
!4421 = !DILocalVariable(name: "flags", arg: 2, scope: !4413, file: !4068, line: 472, type: !828)
!4422 = !DILocation(line: 472, column: 40, scope: !4413, inlinedAt: !4417)
!4423 = !DILocalVariable(name: "order", arg: 3, scope: !4413, file: !4068, line: 472, type: !55)
!4424 = !DILocation(line: 472, column: 60, scope: !4413, inlinedAt: !4417)
!4425 = !DILocalVariable(name: "size", arg: 1, scope: !4418, file: !4068, line: 478, type: !11)
!4426 = !DILocation(line: 478, column: 51, scope: !4418, inlinedAt: !4419)
!4427 = !DILocalVariable(name: "flags", arg: 2, scope: !4418, file: !4068, line: 478, type: !828)
!4428 = !DILocation(line: 478, column: 63, scope: !4418, inlinedAt: !4419)
!4429 = !DILocalVariable(name: "order", scope: !4418, file: !4068, line: 480, type: !55)
!4430 = !DILocation(line: 480, column: 15, scope: !4418, inlinedAt: !4419)
!4431 = !DILocalVariable(name: "size", arg: 1, scope: !4392, file: !4068, line: 538, type: !11)
!4432 = !DILocation(line: 538, column: 45, scope: !4392, inlinedAt: !4393)
!4433 = !DILocalVariable(name: "flags", arg: 2, scope: !4392, file: !4068, line: 538, type: !828)
!4434 = !DILocation(line: 538, column: 57, scope: !4392, inlinedAt: !4393)
!4435 = !DILocalVariable(name: "index", scope: !4390, file: !4068, line: 542, type: !55)
!4436 = !DILocation(line: 542, column: 16, scope: !4390, inlinedAt: !4393)
!4437 = !DILocalVariable(name: "size", arg: 1, scope: !4381, file: !4068, line: 662, type: !11)
!4438 = !DILocation(line: 662, column: 36, scope: !4381)
!4439 = !DILocalVariable(name: "flags", arg: 2, scope: !4381, file: !4068, line: 662, type: !828)
!4440 = !DILocation(line: 662, column: 48, scope: !4381)
!4441 = !DILocation(line: 664, column: 17, scope: !4381)
!4442 = !DILocation(line: 664, column: 23, scope: !4381)
!4443 = !DILocation(line: 664, column: 29, scope: !4381)
!4444 = !DILocation(line: 540, column: 27, scope: !4391, inlinedAt: !4393)
!4445 = !DILocation(line: 540, column: 6, scope: !4391, inlinedAt: !4393)
!4446 = !DILocation(line: 540, column: 6, scope: !4392, inlinedAt: !4393)
!4447 = !DILocation(line: 544, column: 7, scope: !4420, inlinedAt: !4393)
!4448 = !DILocation(line: 544, column: 12, scope: !4420, inlinedAt: !4393)
!4449 = !DILocation(line: 544, column: 7, scope: !4390, inlinedAt: !4393)
!4450 = !DILocation(line: 545, column: 25, scope: !4420, inlinedAt: !4393)
!4451 = !DILocation(line: 545, column: 31, scope: !4420, inlinedAt: !4393)
!4452 = !DILocation(line: 480, column: 33, scope: !4418, inlinedAt: !4419)
!4453 = !DILocation(line: 480, column: 23, scope: !4418, inlinedAt: !4419)
!4454 = !DILocation(line: 481, column: 29, scope: !4418, inlinedAt: !4419)
!4455 = !DILocation(line: 481, column: 35, scope: !4418, inlinedAt: !4419)
!4456 = !DILocation(line: 481, column: 42, scope: !4418, inlinedAt: !4419)
!4457 = !DILocation(line: 474, column: 23, scope: !4413, inlinedAt: !4417)
!4458 = !DILocation(line: 474, column: 29, scope: !4413, inlinedAt: !4417)
!4459 = !DILocation(line: 474, column: 36, scope: !4413, inlinedAt: !4417)
!4460 = !DILocation(line: 474, column: 9, scope: !4413, inlinedAt: !4417)
!4461 = !DILocation(line: 545, column: 4, scope: !4420, inlinedAt: !4393)
!4462 = !DILocation(line: 547, column: 25, scope: !4390, inlinedAt: !4393)
!4463 = !DILocation(line: 348, column: 7, scope: !4464, inlinedAt: !4411)
!4464 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 348, column: 6)
!4465 = !DILocation(line: 348, column: 6, scope: !4407, inlinedAt: !4411)
!4466 = !DILocation(line: 349, column: 3, scope: !4464, inlinedAt: !4411)
!4467 = !DILocation(line: 351, column: 6, scope: !4468, inlinedAt: !4411)
!4468 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 351, column: 6)
!4469 = !DILocation(line: 351, column: 11, scope: !4468, inlinedAt: !4411)
!4470 = !DILocation(line: 351, column: 6, scope: !4407, inlinedAt: !4411)
!4471 = !DILocation(line: 352, column: 3, scope: !4468, inlinedAt: !4411)
!4472 = !DILocation(line: 354, column: 32, scope: !4473, inlinedAt: !4411)
!4473 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 354, column: 6)
!4474 = !DILocation(line: 354, column: 37, scope: !4473, inlinedAt: !4411)
!4475 = !DILocation(line: 354, column: 42, scope: !4473, inlinedAt: !4411)
!4476 = !DILocation(line: 354, column: 45, scope: !4473, inlinedAt: !4411)
!4477 = !DILocation(line: 354, column: 50, scope: !4473, inlinedAt: !4411)
!4478 = !DILocation(line: 354, column: 6, scope: !4407, inlinedAt: !4411)
!4479 = !DILocation(line: 355, column: 3, scope: !4473, inlinedAt: !4411)
!4480 = !DILocation(line: 356, column: 32, scope: !4481, inlinedAt: !4411)
!4481 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 356, column: 6)
!4482 = !DILocation(line: 356, column: 37, scope: !4481, inlinedAt: !4411)
!4483 = !DILocation(line: 356, column: 43, scope: !4481, inlinedAt: !4411)
!4484 = !DILocation(line: 356, column: 46, scope: !4481, inlinedAt: !4411)
!4485 = !DILocation(line: 356, column: 51, scope: !4481, inlinedAt: !4411)
!4486 = !DILocation(line: 356, column: 6, scope: !4407, inlinedAt: !4411)
!4487 = !DILocation(line: 357, column: 3, scope: !4481, inlinedAt: !4411)
!4488 = !DILocation(line: 358, column: 6, scope: !4489, inlinedAt: !4411)
!4489 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 358, column: 6)
!4490 = !DILocation(line: 358, column: 11, scope: !4489, inlinedAt: !4411)
!4491 = !DILocation(line: 358, column: 6, scope: !4407, inlinedAt: !4411)
!4492 = !DILocation(line: 358, column: 26, scope: !4489, inlinedAt: !4411)
!4493 = !DILocation(line: 359, column: 6, scope: !4494, inlinedAt: !4411)
!4494 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 359, column: 6)
!4495 = !DILocation(line: 359, column: 11, scope: !4494, inlinedAt: !4411)
!4496 = !DILocation(line: 359, column: 6, scope: !4407, inlinedAt: !4411)
!4497 = !DILocation(line: 359, column: 26, scope: !4494, inlinedAt: !4411)
!4498 = !DILocation(line: 360, column: 6, scope: !4499, inlinedAt: !4411)
!4499 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 360, column: 6)
!4500 = !DILocation(line: 360, column: 11, scope: !4499, inlinedAt: !4411)
!4501 = !DILocation(line: 360, column: 6, scope: !4407, inlinedAt: !4411)
!4502 = !DILocation(line: 360, column: 26, scope: !4499, inlinedAt: !4411)
!4503 = !DILocation(line: 361, column: 6, scope: !4504, inlinedAt: !4411)
!4504 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 361, column: 6)
!4505 = !DILocation(line: 361, column: 11, scope: !4504, inlinedAt: !4411)
!4506 = !DILocation(line: 361, column: 6, scope: !4407, inlinedAt: !4411)
!4507 = !DILocation(line: 361, column: 26, scope: !4504, inlinedAt: !4411)
!4508 = !DILocation(line: 362, column: 6, scope: !4509, inlinedAt: !4411)
!4509 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 362, column: 6)
!4510 = !DILocation(line: 362, column: 11, scope: !4509, inlinedAt: !4411)
!4511 = !DILocation(line: 362, column: 6, scope: !4407, inlinedAt: !4411)
!4512 = !DILocation(line: 362, column: 26, scope: !4509, inlinedAt: !4411)
!4513 = !DILocation(line: 363, column: 6, scope: !4514, inlinedAt: !4411)
!4514 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 363, column: 6)
!4515 = !DILocation(line: 363, column: 11, scope: !4514, inlinedAt: !4411)
!4516 = !DILocation(line: 363, column: 6, scope: !4407, inlinedAt: !4411)
!4517 = !DILocation(line: 363, column: 26, scope: !4514, inlinedAt: !4411)
!4518 = !DILocation(line: 364, column: 6, scope: !4519, inlinedAt: !4411)
!4519 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 364, column: 6)
!4520 = !DILocation(line: 364, column: 11, scope: !4519, inlinedAt: !4411)
!4521 = !DILocation(line: 364, column: 6, scope: !4407, inlinedAt: !4411)
!4522 = !DILocation(line: 364, column: 26, scope: !4519, inlinedAt: !4411)
!4523 = !DILocation(line: 365, column: 6, scope: !4524, inlinedAt: !4411)
!4524 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 365, column: 6)
!4525 = !DILocation(line: 365, column: 11, scope: !4524, inlinedAt: !4411)
!4526 = !DILocation(line: 365, column: 6, scope: !4407, inlinedAt: !4411)
!4527 = !DILocation(line: 365, column: 26, scope: !4524, inlinedAt: !4411)
!4528 = !DILocation(line: 366, column: 6, scope: !4529, inlinedAt: !4411)
!4529 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 366, column: 6)
!4530 = !DILocation(line: 366, column: 11, scope: !4529, inlinedAt: !4411)
!4531 = !DILocation(line: 366, column: 6, scope: !4407, inlinedAt: !4411)
!4532 = !DILocation(line: 366, column: 26, scope: !4529, inlinedAt: !4411)
!4533 = !DILocation(line: 367, column: 6, scope: !4534, inlinedAt: !4411)
!4534 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 367, column: 6)
!4535 = !DILocation(line: 367, column: 11, scope: !4534, inlinedAt: !4411)
!4536 = !DILocation(line: 367, column: 6, scope: !4407, inlinedAt: !4411)
!4537 = !DILocation(line: 367, column: 26, scope: !4534, inlinedAt: !4411)
!4538 = !DILocation(line: 368, column: 6, scope: !4539, inlinedAt: !4411)
!4539 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 368, column: 6)
!4540 = !DILocation(line: 368, column: 11, scope: !4539, inlinedAt: !4411)
!4541 = !DILocation(line: 368, column: 6, scope: !4407, inlinedAt: !4411)
!4542 = !DILocation(line: 368, column: 26, scope: !4539, inlinedAt: !4411)
!4543 = !DILocation(line: 369, column: 6, scope: !4544, inlinedAt: !4411)
!4544 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 369, column: 6)
!4545 = !DILocation(line: 369, column: 11, scope: !4544, inlinedAt: !4411)
!4546 = !DILocation(line: 369, column: 6, scope: !4407, inlinedAt: !4411)
!4547 = !DILocation(line: 369, column: 26, scope: !4544, inlinedAt: !4411)
!4548 = !DILocation(line: 370, column: 6, scope: !4549, inlinedAt: !4411)
!4549 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 370, column: 6)
!4550 = !DILocation(line: 370, column: 11, scope: !4549, inlinedAt: !4411)
!4551 = !DILocation(line: 370, column: 6, scope: !4407, inlinedAt: !4411)
!4552 = !DILocation(line: 370, column: 26, scope: !4549, inlinedAt: !4411)
!4553 = !DILocation(line: 371, column: 6, scope: !4554, inlinedAt: !4411)
!4554 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 371, column: 6)
!4555 = !DILocation(line: 371, column: 11, scope: !4554, inlinedAt: !4411)
!4556 = !DILocation(line: 371, column: 6, scope: !4407, inlinedAt: !4411)
!4557 = !DILocation(line: 371, column: 26, scope: !4554, inlinedAt: !4411)
!4558 = !DILocation(line: 372, column: 6, scope: !4559, inlinedAt: !4411)
!4559 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 372, column: 6)
!4560 = !DILocation(line: 372, column: 11, scope: !4559, inlinedAt: !4411)
!4561 = !DILocation(line: 372, column: 6, scope: !4407, inlinedAt: !4411)
!4562 = !DILocation(line: 372, column: 26, scope: !4559, inlinedAt: !4411)
!4563 = !DILocation(line: 373, column: 6, scope: !4564, inlinedAt: !4411)
!4564 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 373, column: 6)
!4565 = !DILocation(line: 373, column: 11, scope: !4564, inlinedAt: !4411)
!4566 = !DILocation(line: 373, column: 6, scope: !4407, inlinedAt: !4411)
!4567 = !DILocation(line: 373, column: 26, scope: !4564, inlinedAt: !4411)
!4568 = !DILocation(line: 374, column: 6, scope: !4569, inlinedAt: !4411)
!4569 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 374, column: 6)
!4570 = !DILocation(line: 374, column: 11, scope: !4569, inlinedAt: !4411)
!4571 = !DILocation(line: 374, column: 6, scope: !4407, inlinedAt: !4411)
!4572 = !DILocation(line: 374, column: 26, scope: !4569, inlinedAt: !4411)
!4573 = !DILocation(line: 375, column: 6, scope: !4574, inlinedAt: !4411)
!4574 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 375, column: 6)
!4575 = !DILocation(line: 375, column: 11, scope: !4574, inlinedAt: !4411)
!4576 = !DILocation(line: 375, column: 6, scope: !4407, inlinedAt: !4411)
!4577 = !DILocation(line: 375, column: 27, scope: !4574, inlinedAt: !4411)
!4578 = !DILocation(line: 376, column: 6, scope: !4579, inlinedAt: !4411)
!4579 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 376, column: 6)
!4580 = !DILocation(line: 376, column: 11, scope: !4579, inlinedAt: !4411)
!4581 = !DILocation(line: 376, column: 6, scope: !4407, inlinedAt: !4411)
!4582 = !DILocation(line: 376, column: 32, scope: !4579, inlinedAt: !4411)
!4583 = !DILocation(line: 377, column: 6, scope: !4584, inlinedAt: !4411)
!4584 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 377, column: 6)
!4585 = !DILocation(line: 377, column: 11, scope: !4584, inlinedAt: !4411)
!4586 = !DILocation(line: 377, column: 6, scope: !4407, inlinedAt: !4411)
!4587 = !DILocation(line: 377, column: 32, scope: !4584, inlinedAt: !4411)
!4588 = !DILocation(line: 378, column: 6, scope: !4589, inlinedAt: !4411)
!4589 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 378, column: 6)
!4590 = !DILocation(line: 378, column: 11, scope: !4589, inlinedAt: !4411)
!4591 = !DILocation(line: 378, column: 6, scope: !4407, inlinedAt: !4411)
!4592 = !DILocation(line: 378, column: 32, scope: !4589, inlinedAt: !4411)
!4593 = !DILocation(line: 379, column: 6, scope: !4594, inlinedAt: !4411)
!4594 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 379, column: 6)
!4595 = !DILocation(line: 379, column: 11, scope: !4594, inlinedAt: !4411)
!4596 = !DILocation(line: 379, column: 6, scope: !4407, inlinedAt: !4411)
!4597 = !DILocation(line: 379, column: 33, scope: !4594, inlinedAt: !4411)
!4598 = !DILocation(line: 380, column: 6, scope: !4599, inlinedAt: !4411)
!4599 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 380, column: 6)
!4600 = !DILocation(line: 380, column: 11, scope: !4599, inlinedAt: !4411)
!4601 = !DILocation(line: 380, column: 6, scope: !4407, inlinedAt: !4411)
!4602 = !DILocation(line: 380, column: 33, scope: !4599, inlinedAt: !4411)
!4603 = !DILocation(line: 381, column: 6, scope: !4604, inlinedAt: !4411)
!4604 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 381, column: 6)
!4605 = !DILocation(line: 381, column: 11, scope: !4604, inlinedAt: !4411)
!4606 = !DILocation(line: 381, column: 6, scope: !4407, inlinedAt: !4411)
!4607 = !DILocation(line: 381, column: 33, scope: !4604, inlinedAt: !4411)
!4608 = !DILocation(line: 382, column: 2, scope: !4609, inlinedAt: !4411)
!4609 = distinct !DILexicalBlock(scope: !4610, file: !4068, line: 382, column: 2)
!4610 = distinct !DILexicalBlock(scope: !4407, file: !4068, line: 382, column: 2)
!4611 = !{i32 -2143292072, i32 -2143292043, i32 -2143291997, i32 -2143291939, i32 -2143291885, i32 -2143291831, i32 -2143291776, i32 -2143291745}
!4612 = !DILocation(line: 382, column: 2, scope: !4613, inlinedAt: !4411)
!4613 = distinct !DILexicalBlock(scope: !4614, file: !4068, line: 382, column: 2)
!4614 = distinct !DILexicalBlock(scope: !4610, file: !4068, line: 382, column: 2)
!4615 = !{i32 -2143291302, i32 -2143291295, i32 -2143291241, i32 -2143291210, i32 -2143291180}
!4616 = !DILocation(line: 382, column: 2, scope: !4614, inlinedAt: !4411)
!4617 = !DILocation(line: 386, column: 1, scope: !4407, inlinedAt: !4411)
!4618 = !DILocation(line: 547, column: 9, scope: !4390, inlinedAt: !4393)
!4619 = !DILocation(line: 549, column: 8, scope: !4620, inlinedAt: !4393)
!4620 = distinct !DILexicalBlock(scope: !4390, file: !4068, line: 549, column: 7)
!4621 = !DILocation(line: 549, column: 7, scope: !4390, inlinedAt: !4393)
!4622 = !DILocation(line: 550, column: 4, scope: !4620, inlinedAt: !4393)
!4623 = !DILocation(line: 553, column: 33, scope: !4390, inlinedAt: !4393)
!4624 = !DILocation(line: 325, column: 6, scope: !4625, inlinedAt: !4405)
!4625 = distinct !DILexicalBlock(scope: !4401, file: !4068, line: 325, column: 6)
!4626 = !DILocation(line: 325, column: 6, scope: !4401, inlinedAt: !4405)
!4627 = !DILocation(line: 326, column: 3, scope: !4625, inlinedAt: !4405)
!4628 = !DILocation(line: 332, column: 9, scope: !4401, inlinedAt: !4405)
!4629 = !DILocation(line: 332, column: 15, scope: !4401, inlinedAt: !4405)
!4630 = !DILocation(line: 332, column: 2, scope: !4401, inlinedAt: !4405)
!4631 = !DILocation(line: 336, column: 1, scope: !4401, inlinedAt: !4405)
!4632 = !DILocation(line: 553, column: 5, scope: !4390, inlinedAt: !4393)
!4633 = !DILocation(line: 553, column: 41, scope: !4390, inlinedAt: !4393)
!4634 = !DILocation(line: 554, column: 5, scope: !4390, inlinedAt: !4393)
!4635 = !DILocation(line: 554, column: 12, scope: !4390, inlinedAt: !4393)
!4636 = !DILocation(line: 448, column: 31, scope: !4385, inlinedAt: !4389)
!4637 = !DILocation(line: 448, column: 34, scope: !4385, inlinedAt: !4389)
!4638 = !DILocation(line: 448, column: 14, scope: !4385, inlinedAt: !4389)
!4639 = !DILocation(line: 450, column: 22, scope: !4385, inlinedAt: !4389)
!4640 = !DILocation(line: 450, column: 25, scope: !4385, inlinedAt: !4389)
!4641 = !DILocation(line: 450, column: 30, scope: !4385, inlinedAt: !4389)
!4642 = !DILocation(line: 450, column: 36, scope: !4385, inlinedAt: !4389)
!4643 = !DILocation(line: 450, column: 8, scope: !4385, inlinedAt: !4389)
!4644 = !DILocation(line: 450, column: 6, scope: !4385, inlinedAt: !4389)
!4645 = !DILocation(line: 451, column: 9, scope: !4385, inlinedAt: !4389)
!4646 = !DILocation(line: 552, column: 3, scope: !4390, inlinedAt: !4393)
!4647 = !DILocation(line: 557, column: 19, scope: !4392, inlinedAt: !4393)
!4648 = !DILocation(line: 557, column: 25, scope: !4392, inlinedAt: !4393)
!4649 = !DILocation(line: 557, column: 9, scope: !4392, inlinedAt: !4393)
!4650 = !DILocation(line: 557, column: 2, scope: !4392, inlinedAt: !4393)
!4651 = !DILocation(line: 558, column: 1, scope: !4392, inlinedAt: !4393)
!4652 = !DILocation(line: 664, column: 2, scope: !4381)
!4653 = distinct !DISubprogram(name: "dma_buf_getfile", scope: !3, file: !3, line: 432, type: !4654, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!4654 = !DISubroutineType(types: !4655)
!4655 = !{!18, !6, !152}
!4656 = !DILocalVariable(name: "dmabuf", arg: 1, scope: !4653, file: !3, line: 432, type: !6)
!4657 = !DILocation(line: 432, column: 53, scope: !4653)
!4658 = !DILocalVariable(name: "flags", arg: 2, scope: !4653, file: !3, line: 432, type: !152)
!4659 = !DILocation(line: 432, column: 65, scope: !4653)
!4660 = !DILocalVariable(name: "file", scope: !4653, file: !3, line: 434, type: !18)
!4661 = !DILocation(line: 434, column: 15, scope: !4653)
!4662 = !DILocalVariable(name: "inode", scope: !4653, file: !3, line: 435, type: !99)
!4663 = !DILocation(line: 435, column: 16, scope: !4653)
!4664 = !DILocation(line: 435, column: 41, scope: !4653)
!4665 = !DILocation(line: 435, column: 54, scope: !4653)
!4666 = !DILocation(line: 435, column: 24, scope: !4653)
!4667 = !DILocation(line: 437, column: 13, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4653, file: !3, line: 437, column: 6)
!4669 = !DILocation(line: 437, column: 6, scope: !4668)
!4670 = !DILocation(line: 437, column: 6, scope: !4653)
!4671 = !DILocation(line: 438, column: 19, scope: !4668)
!4672 = !DILocation(line: 438, column: 10, scope: !4668)
!4673 = !DILocation(line: 438, column: 3, scope: !4668)
!4674 = !DILocation(line: 440, column: 18, scope: !4653)
!4675 = !DILocation(line: 440, column: 26, scope: !4653)
!4676 = !DILocation(line: 440, column: 2, scope: !4653)
!4677 = !DILocation(line: 440, column: 9, scope: !4653)
!4678 = !DILocation(line: 440, column: 16, scope: !4653)
!4679 = !DILocation(line: 441, column: 18, scope: !4653)
!4680 = !DILocation(line: 441, column: 25, scope: !4653)
!4681 = !DILocation(line: 441, column: 33, scope: !4653)
!4682 = !DILocation(line: 441, column: 2, scope: !4653)
!4683 = !DILocation(line: 443, column: 27, scope: !4653)
!4684 = !DILocation(line: 443, column: 34, scope: !4653)
!4685 = !DILocation(line: 444, column: 6, scope: !4653)
!4686 = !DILocation(line: 443, column: 9, scope: !4653)
!4687 = !DILocation(line: 443, column: 7, scope: !4653)
!4688 = !DILocation(line: 445, column: 13, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4653, file: !3, line: 445, column: 6)
!4690 = !DILocation(line: 445, column: 6, scope: !4689)
!4691 = !DILocation(line: 445, column: 6, scope: !4653)
!4692 = !DILocation(line: 446, column: 3, scope: !4689)
!4693 = !DILocation(line: 447, column: 18, scope: !4653)
!4694 = !DILocation(line: 447, column: 24, scope: !4653)
!4695 = !DILocation(line: 447, column: 2, scope: !4653)
!4696 = !DILocation(line: 447, column: 8, scope: !4653)
!4697 = !DILocation(line: 447, column: 16, scope: !4653)
!4698 = !DILocation(line: 448, column: 23, scope: !4653)
!4699 = !DILocation(line: 448, column: 2, scope: !4653)
!4700 = !DILocation(line: 448, column: 8, scope: !4653)
!4701 = !DILocation(line: 448, column: 21, scope: !4653)
!4702 = !DILocation(line: 449, column: 34, scope: !4653)
!4703 = !DILocation(line: 449, column: 2, scope: !4653)
!4704 = !DILocation(line: 449, column: 8, scope: !4653)
!4705 = !DILocation(line: 449, column: 15, scope: !4653)
!4706 = !DILocation(line: 449, column: 23, scope: !4653)
!4707 = !DILocation(line: 449, column: 32, scope: !4653)
!4708 = !DILocation(line: 451, column: 9, scope: !4653)
!4709 = !DILocation(line: 451, column: 2, scope: !4653)
!4710 = !DILabel(scope: !4653, name: "err_alloc_file", file: !3, line: 453)
!4711 = !DILocation(line: 453, column: 1, scope: !4653)
!4712 = !DILocation(line: 454, column: 7, scope: !4653)
!4713 = !DILocation(line: 454, column: 2, scope: !4653)
!4714 = !DILocation(line: 455, column: 9, scope: !4653)
!4715 = !DILocation(line: 455, column: 2, scope: !4653)
!4716 = !DILocation(line: 456, column: 1, scope: !4653)
!4717 = distinct !DISubprogram(name: "IS_ERR", scope: !4366, file: !4366, line: 34, type: !4718, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!4718 = !DISubroutineType(types: !4719)
!4719 = !{!168, !2015}
!4720 = !DILocalVariable(name: "ptr", arg: 1, scope: !4717, file: !4366, line: 34, type: !2015)
!4721 = !DILocation(line: 34, column: 60, scope: !4717)
!4722 = !DILocation(line: 36, column: 9, scope: !4717)
!4723 = !DILocation(line: 36, column: 2, scope: !4717)
!4724 = distinct !DISubprogram(name: "PTR_ERR", scope: !4366, file: !4366, line: 29, type: !4725, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!4725 = !DISubroutineType(types: !4726)
!4726 = !{!220, !2015}
!4727 = !DILocalVariable(name: "ptr", arg: 1, scope: !4724, file: !4366, line: 29, type: !2015)
!4728 = !DILocation(line: 29, column: 61, scope: !4724)
!4729 = !DILocation(line: 31, column: 16, scope: !4724)
!4730 = !DILocation(line: 31, column: 9, scope: !4724)
!4731 = !DILocation(line: 31, column: 2, scope: !4724)
!4732 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !4733, file: !4733, line: 33, type: !4734, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!4733 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!4734 = !DISubroutineType(types: !4735)
!4735 = !{null, !288}
!4736 = !DILocalVariable(name: "list", arg: 1, scope: !4732, file: !4733, line: 33, type: !288)
!4737 = !DILocation(line: 33, column: 53, scope: !4732)
!4738 = !DILocation(line: 35, column: 2, scope: !4732)
!4739 = !DILocation(line: 35, column: 2, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4732, file: !4733, line: 35, column: 2)
!4741 = !DILocation(line: 35, column: 2, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4740, file: !4733, line: 35, column: 2)
!4743 = !DILocation(line: 35, column: 2, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4740, file: !4733, line: 35, column: 2)
!4745 = !DILocation(line: 36, column: 15, scope: !4732)
!4746 = !DILocation(line: 36, column: 2, scope: !4732)
!4747 = !DILocation(line: 36, column: 8, scope: !4732)
!4748 = !DILocation(line: 36, column: 13, scope: !4732)
!4749 = !DILocation(line: 37, column: 1, scope: !4732)
!4750 = distinct !DISubprogram(name: "list_add", scope: !4733, file: !4733, line: 84, type: !4751, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!4751 = !DISubroutineType(types: !4752)
!4752 = !{null, !288, !288}
!4753 = !DILocalVariable(name: "new", arg: 1, scope: !4750, file: !4733, line: 84, type: !288)
!4754 = !DILocation(line: 84, column: 47, scope: !4750)
!4755 = !DILocalVariable(name: "head", arg: 2, scope: !4750, file: !4733, line: 84, type: !288)
!4756 = !DILocation(line: 84, column: 70, scope: !4750)
!4757 = !DILocation(line: 86, column: 13, scope: !4750)
!4758 = !DILocation(line: 86, column: 18, scope: !4750)
!4759 = !DILocation(line: 86, column: 24, scope: !4750)
!4760 = !DILocation(line: 86, column: 30, scope: !4750)
!4761 = !DILocation(line: 86, column: 2, scope: !4750)
!4762 = !DILocation(line: 87, column: 1, scope: !4750)
!4763 = distinct !DISubprogram(name: "module_put", scope: !4375, file: !4375, line: 756, type: !4764, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!4764 = !DISubroutineType(types: !4765)
!4765 = !{null, !639}
!4766 = !DILocalVariable(name: "module", arg: 1, scope: !4763, file: !4375, line: 756, type: !639)
!4767 = !DILocation(line: 756, column: 46, scope: !4763)
!4768 = !DILocation(line: 758, column: 1, scope: !4763)
!4769 = distinct !DISubprogram(name: "dma_buf_fd", scope: !3, file: !3, line: 593, type: !4770, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!4770 = !DISubroutineType(types: !4771)
!4771 = !{!152, !6, !152}
!4772 = !DILocalVariable(name: "dmabuf", arg: 1, scope: !4769, file: !3, line: 593, type: !6)
!4773 = !DILocation(line: 593, column: 32, scope: !4769)
!4774 = !DILocalVariable(name: "flags", arg: 2, scope: !4769, file: !3, line: 593, type: !152)
!4775 = !DILocation(line: 593, column: 44, scope: !4769)
!4776 = !DILocalVariable(name: "fd", scope: !4769, file: !3, line: 595, type: !152)
!4777 = !DILocation(line: 595, column: 6, scope: !4769)
!4778 = !DILocation(line: 597, column: 7, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4769, file: !3, line: 597, column: 6)
!4780 = !DILocation(line: 597, column: 14, scope: !4779)
!4781 = !DILocation(line: 597, column: 18, scope: !4779)
!4782 = !DILocation(line: 597, column: 26, scope: !4779)
!4783 = !DILocation(line: 597, column: 6, scope: !4769)
!4784 = !DILocation(line: 598, column: 3, scope: !4779)
!4785 = !DILocation(line: 600, column: 27, scope: !4769)
!4786 = !DILocation(line: 600, column: 7, scope: !4769)
!4787 = !DILocation(line: 600, column: 5, scope: !4769)
!4788 = !DILocation(line: 601, column: 6, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4769, file: !3, line: 601, column: 6)
!4790 = !DILocation(line: 601, column: 9, scope: !4789)
!4791 = !DILocation(line: 601, column: 6, scope: !4769)
!4792 = !DILocation(line: 602, column: 10, scope: !4789)
!4793 = !DILocation(line: 602, column: 3, scope: !4789)
!4794 = !DILocation(line: 604, column: 13, scope: !4769)
!4795 = !DILocation(line: 604, column: 17, scope: !4769)
!4796 = !DILocation(line: 604, column: 25, scope: !4769)
!4797 = !DILocation(line: 604, column: 2, scope: !4769)
!4798 = !DILocation(line: 606, column: 9, scope: !4769)
!4799 = !DILocation(line: 606, column: 2, scope: !4769)
!4800 = !DILocation(line: 607, column: 1, scope: !4769)
!4801 = distinct !DISubprogram(name: "dma_buf_get", scope: !3, file: !3, line: 618, type: !4802, scopeLine: 619, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!4802 = !DISubroutineType(types: !4803)
!4803 = !{!6, !152}
!4804 = !DILocalVariable(name: "fd", arg: 1, scope: !4801, file: !3, line: 618, type: !152)
!4805 = !DILocation(line: 618, column: 33, scope: !4801)
!4806 = !DILocalVariable(name: "file", scope: !4801, file: !3, line: 620, type: !18)
!4807 = !DILocation(line: 620, column: 15, scope: !4801)
!4808 = !DILocation(line: 622, column: 14, scope: !4801)
!4809 = !DILocation(line: 622, column: 9, scope: !4801)
!4810 = !DILocation(line: 622, column: 7, scope: !4801)
!4811 = !DILocation(line: 624, column: 7, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4801, file: !3, line: 624, column: 6)
!4813 = !DILocation(line: 624, column: 6, scope: !4801)
!4814 = !DILocation(line: 625, column: 10, scope: !4812)
!4815 = !DILocation(line: 625, column: 3, scope: !4812)
!4816 = !DILocation(line: 627, column: 23, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4801, file: !3, line: 627, column: 6)
!4818 = !DILocation(line: 627, column: 7, scope: !4817)
!4819 = !DILocation(line: 627, column: 6, scope: !4801)
!4820 = !DILocation(line: 628, column: 8, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 627, column: 30)
!4822 = !DILocation(line: 628, column: 3, scope: !4821)
!4823 = !DILocation(line: 629, column: 10, scope: !4821)
!4824 = !DILocation(line: 629, column: 3, scope: !4821)
!4825 = !DILocation(line: 632, column: 9, scope: !4801)
!4826 = !DILocation(line: 632, column: 15, scope: !4801)
!4827 = !DILocation(line: 632, column: 2, scope: !4801)
!4828 = !DILocation(line: 633, column: 1, scope: !4801)
!4829 = distinct !DISubprogram(name: "is_dma_buf_file", scope: !3, file: !3, line: 427, type: !4830, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!4830 = !DISubroutineType(types: !4831)
!4831 = !{!152, !18}
!4832 = !DILocalVariable(name: "file", arg: 1, scope: !4829, file: !3, line: 427, type: !18)
!4833 = !DILocation(line: 427, column: 48, scope: !4829)
!4834 = !DILocation(line: 429, column: 9, scope: !4829)
!4835 = !DILocation(line: 429, column: 15, scope: !4829)
!4836 = !DILocation(line: 429, column: 20, scope: !4829)
!4837 = !DILocation(line: 429, column: 2, scope: !4829)
!4838 = distinct !DISubprogram(name: "dma_buf_put", scope: !3, file: !3, line: 646, type: !3925, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!4839 = !DILocalVariable(name: "dmabuf", arg: 1, scope: !4838, file: !3, line: 646, type: !6)
!4840 = !DILocation(line: 646, column: 34, scope: !4838)
!4841 = !DILocalVariable(name: "__ret_warn_on", scope: !4842, file: !3, line: 648, type: !152)
!4842 = distinct !DILexicalBlock(scope: !4843, file: !3, line: 648, column: 6)
!4843 = distinct !DILexicalBlock(scope: !4838, file: !3, line: 648, column: 6)
!4844 = !DILocation(line: 648, column: 6, scope: !4842)
!4845 = !DILocation(line: 648, column: 6, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4842, file: !3, line: 648, column: 6)
!4847 = !DILocation(line: 648, column: 6, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4846, file: !3, line: 648, column: 6)
!4849 = !DILocation(line: 648, column: 6, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4848, file: !3, line: 648, column: 6)
!4851 = !DILocation(line: 648, column: 6, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4848, file: !3, line: 648, column: 6)
!4853 = !{i32 -2141853029, i32 -2141853000, i32 -2141852954, i32 -2141852896, i32 -2141852842, i32 -2141852788, i32 -2141852733, i32 -2141852702}
!4854 = !DILocation(line: 648, column: 6, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4848, file: !3, line: 648, column: 6)
!4856 = !{i32 -2141852295, i32 -2141852288, i32 -2141852236, i32 -2141852205, i32 -2141852175}
!4857 = !DILocation(line: 648, column: 6, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4848, file: !3, line: 648, column: 6)
!4859 = !DILocation(line: 648, column: 6, scope: !4843)
!4860 = !DILocation(line: 648, column: 6, scope: !4838)
!4861 = !DILocation(line: 649, column: 3, scope: !4843)
!4862 = !DILocation(line: 651, column: 7, scope: !4838)
!4863 = !DILocation(line: 651, column: 15, scope: !4838)
!4864 = !DILocation(line: 651, column: 2, scope: !4838)
!4865 = !DILocation(line: 652, column: 1, scope: !4838)
!4866 = distinct !DISubprogram(name: "dma_buf_dynamic_attach", scope: !3, file: !3, line: 676, type: !4867, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!4867 = !DISubroutineType(types: !4868)
!4868 = !{!3112, !6, !3117, !3895, !146}
!4869 = !DILocalVariable(name: "dmabuf", arg: 1, scope: !4866, file: !3, line: 676, type: !6)
!4870 = !DILocation(line: 676, column: 40, scope: !4866)
!4871 = !DILocalVariable(name: "dev", arg: 2, scope: !4866, file: !3, line: 676, type: !3117)
!4872 = !DILocation(line: 676, column: 63, scope: !4866)
!4873 = !DILocalVariable(name: "importer_ops", arg: 3, scope: !4866, file: !3, line: 677, type: !3895)
!4874 = !DILocation(line: 677, column: 43, scope: !4866)
!4875 = !DILocalVariable(name: "importer_priv", arg: 4, scope: !4866, file: !3, line: 678, type: !146)
!4876 = !DILocation(line: 678, column: 16, scope: !4866)
!4877 = !DILocalVariable(name: "attach", scope: !4866, file: !3, line: 680, type: !3112)
!4878 = !DILocation(line: 680, column: 29, scope: !4866)
!4879 = !DILocalVariable(name: "ret", scope: !4866, file: !3, line: 681, type: !152)
!4880 = !DILocation(line: 681, column: 6, scope: !4866)
!4881 = !DILocalVariable(name: "__ret_warn_on", scope: !4882, file: !3, line: 683, type: !152)
!4882 = distinct !DILexicalBlock(scope: !4883, file: !3, line: 683, column: 6)
!4883 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 683, column: 6)
!4884 = !DILocation(line: 683, column: 6, scope: !4882)
!4885 = !DILocation(line: 683, column: 6, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4882, file: !3, line: 683, column: 6)
!4887 = !DILocation(line: 683, column: 6, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4886, file: !3, line: 683, column: 6)
!4889 = !DILocation(line: 683, column: 6, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4888, file: !3, line: 683, column: 6)
!4891 = !DILocation(line: 683, column: 6, scope: !4892)
!4892 = distinct !DILexicalBlock(scope: !4888, file: !3, line: 683, column: 6)
!4893 = !{i32 -2141851499, i32 -2141851470, i32 -2141851424, i32 -2141851366, i32 -2141851312, i32 -2141851258, i32 -2141851203, i32 -2141851172}
!4894 = !DILocation(line: 683, column: 6, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4888, file: !3, line: 683, column: 6)
!4896 = !{i32 -2141850765, i32 -2141850758, i32 -2141850706, i32 -2141850675, i32 -2141850645}
!4897 = !DILocation(line: 683, column: 6, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4888, file: !3, line: 683, column: 6)
!4899 = !DILocation(line: 683, column: 6, scope: !4883)
!4900 = !DILocation(line: 683, column: 6, scope: !4866)
!4901 = !DILocation(line: 684, column: 10, scope: !4883)
!4902 = !DILocation(line: 684, column: 3, scope: !4883)
!4903 = !DILocalVariable(name: "__ret_warn_on", scope: !4904, file: !3, line: 686, type: !152)
!4904 = distinct !DILexicalBlock(scope: !4905, file: !3, line: 686, column: 6)
!4905 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 686, column: 6)
!4906 = !DILocation(line: 686, column: 6, scope: !4904)
!4907 = !DILocation(line: 0, scope: !4904)
!4908 = !DILocation(line: 686, column: 6, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4904, file: !3, line: 686, column: 6)
!4910 = !DILocation(line: 686, column: 6, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4909, file: !3, line: 686, column: 6)
!4912 = !DILocation(line: 686, column: 6, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4911, file: !3, line: 686, column: 6)
!4914 = !DILocation(line: 686, column: 6, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4911, file: !3, line: 686, column: 6)
!4916 = !{i32 -2141850028, i32 -2141849999, i32 -2141849953, i32 -2141849895, i32 -2141849841, i32 -2141849787, i32 -2141849732, i32 -2141849701}
!4917 = !DILocation(line: 686, column: 6, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4911, file: !3, line: 686, column: 6)
!4919 = !{i32 -2141849294, i32 -2141849287, i32 -2141849235, i32 -2141849204, i32 -2141849174}
!4920 = !DILocation(line: 686, column: 6, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4911, file: !3, line: 686, column: 6)
!4922 = !DILocation(line: 686, column: 6, scope: !4905)
!4923 = !DILocation(line: 686, column: 6, scope: !4866)
!4924 = !DILocation(line: 687, column: 10, scope: !4905)
!4925 = !DILocation(line: 687, column: 3, scope: !4905)
!4926 = !DILocation(line: 689, column: 11, scope: !4866)
!4927 = !DILocation(line: 689, column: 9, scope: !4866)
!4928 = !DILocation(line: 690, column: 7, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 690, column: 6)
!4930 = !DILocation(line: 690, column: 6, scope: !4866)
!4931 = !DILocation(line: 691, column: 10, scope: !4929)
!4932 = !DILocation(line: 691, column: 3, scope: !4929)
!4933 = !DILocation(line: 693, column: 16, scope: !4866)
!4934 = !DILocation(line: 693, column: 2, scope: !4866)
!4935 = !DILocation(line: 693, column: 10, scope: !4866)
!4936 = !DILocation(line: 693, column: 14, scope: !4866)
!4937 = !DILocation(line: 694, column: 19, scope: !4866)
!4938 = !DILocation(line: 694, column: 2, scope: !4866)
!4939 = !DILocation(line: 694, column: 10, scope: !4866)
!4940 = !DILocation(line: 694, column: 17, scope: !4866)
!4941 = !DILocation(line: 695, column: 6, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 695, column: 6)
!4943 = !DILocation(line: 695, column: 6, scope: !4866)
!4944 = !DILocation(line: 696, column: 23, scope: !4942)
!4945 = !DILocation(line: 696, column: 37, scope: !4942)
!4946 = !DILocation(line: 696, column: 3, scope: !4942)
!4947 = !DILocation(line: 696, column: 11, scope: !4942)
!4948 = !DILocation(line: 696, column: 21, scope: !4942)
!4949 = !DILocation(line: 697, column: 25, scope: !4866)
!4950 = !DILocation(line: 697, column: 2, scope: !4866)
!4951 = !DILocation(line: 697, column: 10, scope: !4866)
!4952 = !DILocation(line: 697, column: 23, scope: !4866)
!4953 = !DILocation(line: 698, column: 26, scope: !4866)
!4954 = !DILocation(line: 698, column: 2, scope: !4866)
!4955 = !DILocation(line: 698, column: 10, scope: !4866)
!4956 = !DILocation(line: 698, column: 24, scope: !4866)
!4957 = !DILocation(line: 700, column: 6, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 700, column: 6)
!4959 = !DILocation(line: 700, column: 14, scope: !4958)
!4960 = !DILocation(line: 700, column: 19, scope: !4958)
!4961 = !DILocation(line: 700, column: 6, scope: !4866)
!4962 = !DILocation(line: 701, column: 9, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4958, file: !3, line: 700, column: 27)
!4964 = !DILocation(line: 701, column: 17, scope: !4963)
!4965 = !DILocation(line: 701, column: 22, scope: !4963)
!4966 = !DILocation(line: 701, column: 29, scope: !4963)
!4967 = !DILocation(line: 701, column: 37, scope: !4963)
!4968 = !DILocation(line: 701, column: 7, scope: !4963)
!4969 = !DILocation(line: 702, column: 7, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4963, file: !3, line: 702, column: 7)
!4971 = !DILocation(line: 702, column: 7, scope: !4963)
!4972 = !DILocation(line: 703, column: 4, scope: !4970)
!4973 = !DILocation(line: 704, column: 2, scope: !4963)
!4974 = !DILocation(line: 705, column: 16, scope: !4866)
!4975 = !DILocation(line: 705, column: 24, scope: !4866)
!4976 = !DILocation(line: 705, column: 2, scope: !4866)
!4977 = !DILocation(line: 706, column: 12, scope: !4866)
!4978 = !DILocation(line: 706, column: 20, scope: !4866)
!4979 = !DILocation(line: 706, column: 27, scope: !4866)
!4980 = !DILocation(line: 706, column: 35, scope: !4866)
!4981 = !DILocation(line: 706, column: 2, scope: !4866)
!4982 = !DILocation(line: 707, column: 18, scope: !4866)
!4983 = !DILocation(line: 707, column: 26, scope: !4866)
!4984 = !DILocation(line: 707, column: 2, scope: !4866)
!4985 = !DILocation(line: 713, column: 36, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 713, column: 6)
!4987 = !DILocation(line: 713, column: 6, scope: !4986)
!4988 = !DILocation(line: 714, column: 25, scope: !4986)
!4989 = !DILocation(line: 714, column: 6, scope: !4986)
!4990 = !DILocation(line: 713, column: 44, scope: !4986)
!4991 = !DILocation(line: 713, column: 6, scope: !4866)
!4992 = !DILocalVariable(name: "sgt", scope: !4993, file: !3, line: 715, type: !3870)
!4993 = distinct !DILexicalBlock(scope: !4986, file: !3, line: 714, column: 34)
!4994 = !DILocation(line: 715, column: 20, scope: !4993)
!4995 = !DILocation(line: 717, column: 26, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 717, column: 7)
!4997 = !DILocation(line: 717, column: 34, scope: !4996)
!4998 = !DILocation(line: 717, column: 7, scope: !4996)
!4999 = !DILocation(line: 717, column: 7, scope: !4993)
!5000 = !DILocation(line: 718, column: 18, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4996, file: !3, line: 717, column: 43)
!5002 = !DILocation(line: 718, column: 26, scope: !5001)
!5003 = !DILocation(line: 718, column: 34, scope: !5001)
!5004 = !DILocation(line: 718, column: 4, scope: !5001)
!5005 = !DILocation(line: 719, column: 22, scope: !5001)
!5006 = !DILocation(line: 719, column: 10, scope: !5001)
!5007 = !DILocation(line: 719, column: 8, scope: !5001)
!5008 = !DILocation(line: 720, column: 8, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 720, column: 8)
!5010 = !DILocation(line: 720, column: 8, scope: !5001)
!5011 = !DILocation(line: 721, column: 5, scope: !5009)
!5012 = !DILocation(line: 722, column: 3, scope: !5001)
!5013 = !DILocation(line: 724, column: 9, scope: !4993)
!5014 = !DILocation(line: 724, column: 17, scope: !4993)
!5015 = !DILocation(line: 724, column: 22, scope: !4993)
!5016 = !DILocation(line: 724, column: 34, scope: !4993)
!5017 = !DILocation(line: 724, column: 7, scope: !4993)
!5018 = !DILocation(line: 725, column: 8, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 725, column: 7)
!5020 = !DILocation(line: 725, column: 7, scope: !4993)
!5021 = !DILocation(line: 726, column: 10, scope: !5019)
!5022 = !DILocation(line: 726, column: 8, scope: !5019)
!5023 = !DILocation(line: 726, column: 4, scope: !5019)
!5024 = !DILocation(line: 727, column: 14, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 727, column: 7)
!5026 = !DILocation(line: 727, column: 7, scope: !5025)
!5027 = !DILocation(line: 727, column: 7, scope: !4993)
!5028 = !DILocation(line: 728, column: 18, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5025, file: !3, line: 727, column: 20)
!5030 = !DILocation(line: 728, column: 10, scope: !5029)
!5031 = !DILocation(line: 728, column: 8, scope: !5029)
!5032 = !DILocation(line: 729, column: 4, scope: !5029)
!5033 = !DILocation(line: 731, column: 26, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 731, column: 7)
!5035 = !DILocation(line: 731, column: 34, scope: !5034)
!5036 = !DILocation(line: 731, column: 7, scope: !5034)
!5037 = !DILocation(line: 731, column: 7, scope: !4993)
!5038 = !DILocation(line: 732, column: 20, scope: !5034)
!5039 = !DILocation(line: 732, column: 28, scope: !5034)
!5040 = !DILocation(line: 732, column: 36, scope: !5034)
!5041 = !DILocation(line: 732, column: 4, scope: !5034)
!5042 = !DILocation(line: 733, column: 17, scope: !4993)
!5043 = !DILocation(line: 733, column: 3, scope: !4993)
!5044 = !DILocation(line: 733, column: 11, scope: !4993)
!5045 = !DILocation(line: 733, column: 15, scope: !4993)
!5046 = !DILocation(line: 734, column: 3, scope: !4993)
!5047 = !DILocation(line: 734, column: 11, scope: !4993)
!5048 = !DILocation(line: 734, column: 15, scope: !4993)
!5049 = !DILocation(line: 735, column: 2, scope: !4993)
!5050 = !DILocation(line: 737, column: 9, scope: !4866)
!5051 = !DILocation(line: 737, column: 2, scope: !4866)
!5052 = !DILabel(scope: !4866, name: "err_attach", file: !3, line: 739)
!5053 = !DILocation(line: 739, column: 1, scope: !4866)
!5054 = !DILocation(line: 740, column: 8, scope: !4866)
!5055 = !DILocation(line: 740, column: 2, scope: !4866)
!5056 = !DILocation(line: 741, column: 17, scope: !4866)
!5057 = !DILocation(line: 741, column: 9, scope: !4866)
!5058 = !DILocation(line: 741, column: 2, scope: !4866)
!5059 = !DILabel(scope: !4866, name: "err_unpin", file: !3, line: 743)
!5060 = !DILocation(line: 743, column: 1, scope: !4866)
!5061 = !DILocation(line: 744, column: 25, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 744, column: 6)
!5063 = !DILocation(line: 744, column: 33, scope: !5062)
!5064 = !DILocation(line: 744, column: 6, scope: !5062)
!5065 = !DILocation(line: 744, column: 6, scope: !4866)
!5066 = !DILocation(line: 745, column: 17, scope: !5062)
!5067 = !DILocation(line: 745, column: 3, scope: !5062)
!5068 = !DILocation(line: 744, column: 39, scope: !5062)
!5069 = !DILabel(scope: !4866, name: "err_unlock", file: !3, line: 747)
!5070 = !DILocation(line: 747, column: 1, scope: !4866)
!5071 = !DILocation(line: 748, column: 25, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 748, column: 6)
!5073 = !DILocation(line: 748, column: 33, scope: !5072)
!5074 = !DILocation(line: 748, column: 6, scope: !5072)
!5075 = !DILocation(line: 748, column: 6, scope: !4866)
!5076 = !DILocation(line: 749, column: 19, scope: !5072)
!5077 = !DILocation(line: 749, column: 27, scope: !5072)
!5078 = !DILocation(line: 749, column: 35, scope: !5072)
!5079 = !DILocation(line: 749, column: 3, scope: !5072)
!5080 = !DILocation(line: 751, column: 17, scope: !4866)
!5081 = !DILocation(line: 751, column: 25, scope: !4866)
!5082 = !DILocation(line: 751, column: 2, scope: !4866)
!5083 = !DILocation(line: 752, column: 17, scope: !4866)
!5084 = !DILocation(line: 752, column: 9, scope: !4866)
!5085 = !DILocation(line: 752, column: 2, scope: !4866)
!5086 = !DILocation(line: 753, column: 1, scope: !4866)
!5087 = distinct !DISubprogram(name: "dma_resv_lock", scope: !3956, file: !3956, line: 110, type: !5088, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!5088 = !DISubroutineType(types: !5089)
!5089 = !{!152, !3954, !3963}
!5090 = !DILocalVariable(name: "obj", arg: 1, scope: !5087, file: !3956, line: 110, type: !3954)
!5091 = !DILocation(line: 110, column: 50, scope: !5087)
!5092 = !DILocalVariable(name: "ctx", arg: 2, scope: !5087, file: !3956, line: 111, type: !3963)
!5093 = !DILocation(line: 111, column: 28, scope: !5087)
!5094 = !DILocation(line: 113, column: 24, scope: !5087)
!5095 = !DILocation(line: 113, column: 29, scope: !5087)
!5096 = !DILocation(line: 113, column: 35, scope: !5087)
!5097 = !DILocation(line: 113, column: 9, scope: !5087)
!5098 = !DILocation(line: 113, column: 2, scope: !5087)
!5099 = distinct !DISubprogram(name: "dma_resv_unlock", scope: !3956, file: !3956, line: 216, type: !5100, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!5100 = !DISubroutineType(types: !5101)
!5101 = !{null, !3954}
!5102 = !DILocalVariable(name: "obj", arg: 1, scope: !5099, file: !3956, line: 216, type: !3954)
!5103 = !DILocation(line: 216, column: 53, scope: !5099)
!5104 = !DILocation(line: 226, column: 19, scope: !5099)
!5105 = !DILocation(line: 226, column: 24, scope: !5099)
!5106 = !DILocation(line: 226, column: 2, scope: !5099)
!5107 = !DILocation(line: 227, column: 1, scope: !5099)
!5108 = distinct !DISubprogram(name: "dma_buf_attachment_is_dynamic", scope: !8, file: !8, line: 471, type: !5109, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!5109 = !DISubroutineType(types: !5110)
!5110 = !{!168, !3112}
!5111 = !DILocalVariable(name: "attach", arg: 1, scope: !5108, file: !8, line: 471, type: !3112)
!5112 = !DILocation(line: 471, column: 58, scope: !5108)
!5113 = !DILocation(line: 473, column: 11, scope: !5108)
!5114 = !DILocation(line: 473, column: 19, scope: !5108)
!5115 = !DILocation(line: 473, column: 10, scope: !5108)
!5116 = !DILocation(line: 473, column: 9, scope: !5108)
!5117 = !DILocation(line: 473, column: 2, scope: !5108)
!5118 = distinct !DISubprogram(name: "dma_buf_is_dynamic", scope: !8, file: !8, line: 457, type: !5119, scopeLine: 458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!5119 = !DISubroutineType(types: !5120)
!5120 = !{!168, !6}
!5121 = !DILocalVariable(name: "dmabuf", arg: 1, scope: !5118, file: !8, line: 457, type: !6)
!5122 = !DILocation(line: 457, column: 55, scope: !5118)
!5123 = !DILocation(line: 459, column: 11, scope: !5118)
!5124 = !DILocation(line: 459, column: 19, scope: !5118)
!5125 = !DILocation(line: 459, column: 24, scope: !5118)
!5126 = !DILocation(line: 459, column: 10, scope: !5118)
!5127 = !DILocation(line: 459, column: 9, scope: !5118)
!5128 = !DILocation(line: 459, column: 2, scope: !5118)
!5129 = distinct !DISubprogram(name: "dma_buf_pin", scope: !3, file: !3, line: 814, type: !3912, scopeLine: 815, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!5130 = !DILocalVariable(name: "attach", arg: 1, scope: !5129, file: !3, line: 814, type: !3112)
!5131 = !DILocation(line: 814, column: 44, scope: !5129)
!5132 = !DILocalVariable(name: "dmabuf", scope: !5129, file: !3, line: 816, type: !6)
!5133 = !DILocation(line: 816, column: 18, scope: !5129)
!5134 = !DILocation(line: 816, column: 27, scope: !5129)
!5135 = !DILocation(line: 816, column: 35, scope: !5129)
!5136 = !DILocalVariable(name: "ret", scope: !5129, file: !3, line: 817, type: !152)
!5137 = !DILocation(line: 817, column: 6, scope: !5129)
!5138 = !DILocation(line: 819, column: 2, scope: !5129)
!5139 = !DILocation(line: 819, column: 2, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5129, file: !3, line: 819, column: 2)
!5141 = !DILocation(line: 821, column: 6, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5129, file: !3, line: 821, column: 6)
!5143 = !DILocation(line: 821, column: 14, scope: !5142)
!5144 = !DILocation(line: 821, column: 19, scope: !5142)
!5145 = !DILocation(line: 821, column: 6, scope: !5129)
!5146 = !DILocation(line: 822, column: 9, scope: !5142)
!5147 = !DILocation(line: 822, column: 17, scope: !5142)
!5148 = !DILocation(line: 822, column: 22, scope: !5142)
!5149 = !DILocation(line: 822, column: 26, scope: !5142)
!5150 = !DILocation(line: 822, column: 7, scope: !5142)
!5151 = !DILocation(line: 822, column: 3, scope: !5142)
!5152 = !DILocation(line: 824, column: 9, scope: !5129)
!5153 = !DILocation(line: 824, column: 2, scope: !5129)
!5154 = distinct !DISubprogram(name: "dma_buf_unpin", scope: !3, file: !3, line: 833, type: !3902, scopeLine: 834, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!5155 = !DILocalVariable(name: "attach", arg: 1, scope: !5154, file: !3, line: 833, type: !3112)
!5156 = !DILocation(line: 833, column: 47, scope: !5154)
!5157 = !DILocalVariable(name: "dmabuf", scope: !5154, file: !3, line: 835, type: !6)
!5158 = !DILocation(line: 835, column: 18, scope: !5154)
!5159 = !DILocation(line: 835, column: 27, scope: !5154)
!5160 = !DILocation(line: 835, column: 35, scope: !5154)
!5161 = !DILocation(line: 837, column: 2, scope: !5154)
!5162 = !DILocation(line: 837, column: 2, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 837, column: 2)
!5164 = !DILocation(line: 839, column: 6, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 839, column: 6)
!5166 = !DILocation(line: 839, column: 14, scope: !5165)
!5167 = !DILocation(line: 839, column: 19, scope: !5165)
!5168 = !DILocation(line: 839, column: 6, scope: !5154)
!5169 = !DILocation(line: 840, column: 3, scope: !5165)
!5170 = !DILocation(line: 840, column: 11, scope: !5165)
!5171 = !DILocation(line: 840, column: 16, scope: !5165)
!5172 = !DILocation(line: 840, column: 22, scope: !5165)
!5173 = !DILocation(line: 841, column: 1, scope: !5154)
!5174 = distinct !DISubprogram(name: "dma_buf_detach", scope: !3, file: !3, line: 779, type: !3908, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!5175 = !DILocalVariable(name: "dmabuf", arg: 1, scope: !5174, file: !3, line: 779, type: !6)
!5176 = !DILocation(line: 779, column: 37, scope: !5174)
!5177 = !DILocalVariable(name: "attach", arg: 2, scope: !5174, file: !3, line: 779, type: !3112)
!5178 = !DILocation(line: 779, column: 72, scope: !5174)
!5179 = !DILocalVariable(name: "__ret_warn_on", scope: !5180, file: !3, line: 781, type: !152)
!5180 = distinct !DILexicalBlock(scope: !5181, file: !3, line: 781, column: 6)
!5181 = distinct !DILexicalBlock(scope: !5174, file: !3, line: 781, column: 6)
!5182 = !DILocation(line: 781, column: 6, scope: !5180)
!5183 = !DILocation(line: 781, column: 6, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5180, file: !3, line: 781, column: 6)
!5185 = !DILocation(line: 781, column: 6, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5184, file: !3, line: 781, column: 6)
!5187 = !DILocation(line: 781, column: 6, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5186, file: !3, line: 781, column: 6)
!5189 = !DILocation(line: 781, column: 6, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5186, file: !3, line: 781, column: 6)
!5191 = !{i32 -2141848140, i32 -2141848111, i32 -2141848065, i32 -2141848007, i32 -2141847953, i32 -2141847899, i32 -2141847844, i32 -2141847813}
!5192 = !DILocation(line: 781, column: 6, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5186, file: !3, line: 781, column: 6)
!5194 = !{i32 -2141847406, i32 -2141847399, i32 -2141847347, i32 -2141847316, i32 -2141847286}
!5195 = !DILocation(line: 781, column: 6, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5186, file: !3, line: 781, column: 6)
!5197 = !DILocation(line: 781, column: 6, scope: !5181)
!5198 = !DILocation(line: 781, column: 6, scope: !5174)
!5199 = !DILocation(line: 782, column: 3, scope: !5181)
!5200 = !DILocation(line: 784, column: 6, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5174, file: !3, line: 784, column: 6)
!5202 = !DILocation(line: 784, column: 14, scope: !5201)
!5203 = !DILocation(line: 784, column: 6, scope: !5174)
!5204 = !DILocation(line: 785, column: 26, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5206, file: !3, line: 785, column: 7)
!5206 = distinct !DILexicalBlock(scope: !5201, file: !3, line: 784, column: 19)
!5207 = !DILocation(line: 785, column: 34, scope: !5205)
!5208 = !DILocation(line: 785, column: 7, scope: !5205)
!5209 = !DILocation(line: 785, column: 7, scope: !5206)
!5210 = !DILocation(line: 786, column: 18, scope: !5205)
!5211 = !DILocation(line: 786, column: 26, scope: !5205)
!5212 = !DILocation(line: 786, column: 34, scope: !5205)
!5213 = !DILocation(line: 786, column: 4, scope: !5205)
!5214 = !DILocation(line: 788, column: 3, scope: !5206)
!5215 = !DILocation(line: 788, column: 11, scope: !5206)
!5216 = !DILocation(line: 788, column: 16, scope: !5206)
!5217 = !DILocation(line: 788, column: 30, scope: !5206)
!5218 = !DILocation(line: 788, column: 38, scope: !5206)
!5219 = !DILocation(line: 788, column: 46, scope: !5206)
!5220 = !DILocation(line: 788, column: 51, scope: !5206)
!5221 = !DILocation(line: 788, column: 59, scope: !5206)
!5222 = !DILocation(line: 790, column: 26, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5206, file: !3, line: 790, column: 7)
!5224 = !DILocation(line: 790, column: 34, scope: !5223)
!5225 = !DILocation(line: 790, column: 7, scope: !5223)
!5226 = !DILocation(line: 790, column: 7, scope: !5206)
!5227 = !DILocation(line: 791, column: 18, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5223, file: !3, line: 790, column: 43)
!5229 = !DILocation(line: 791, column: 4, scope: !5228)
!5230 = !DILocation(line: 792, column: 20, scope: !5228)
!5231 = !DILocation(line: 792, column: 28, scope: !5228)
!5232 = !DILocation(line: 792, column: 36, scope: !5228)
!5233 = !DILocation(line: 792, column: 4, scope: !5228)
!5234 = !DILocation(line: 793, column: 3, scope: !5228)
!5235 = !DILocation(line: 794, column: 2, scope: !5206)
!5236 = !DILocation(line: 796, column: 16, scope: !5174)
!5237 = !DILocation(line: 796, column: 24, scope: !5174)
!5238 = !DILocation(line: 796, column: 2, scope: !5174)
!5239 = !DILocation(line: 797, column: 12, scope: !5174)
!5240 = !DILocation(line: 797, column: 20, scope: !5174)
!5241 = !DILocation(line: 797, column: 2, scope: !5174)
!5242 = !DILocation(line: 798, column: 18, scope: !5174)
!5243 = !DILocation(line: 798, column: 26, scope: !5174)
!5244 = !DILocation(line: 798, column: 2, scope: !5174)
!5245 = !DILocation(line: 799, column: 6, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5174, file: !3, line: 799, column: 6)
!5247 = !DILocation(line: 799, column: 14, scope: !5246)
!5248 = !DILocation(line: 799, column: 19, scope: !5246)
!5249 = !DILocation(line: 799, column: 6, scope: !5174)
!5250 = !DILocation(line: 800, column: 3, scope: !5246)
!5251 = !DILocation(line: 800, column: 11, scope: !5246)
!5252 = !DILocation(line: 800, column: 16, scope: !5246)
!5253 = !DILocation(line: 800, column: 23, scope: !5246)
!5254 = !DILocation(line: 800, column: 31, scope: !5246)
!5255 = !DILocation(line: 802, column: 8, scope: !5174)
!5256 = !DILocation(line: 802, column: 2, scope: !5174)
!5257 = !DILocation(line: 803, column: 1, scope: !5174)
!5258 = distinct !DISubprogram(name: "dma_buf_attach", scope: !3, file: !3, line: 764, type: !5259, scopeLine: 766, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!5259 = !DISubroutineType(types: !5260)
!5260 = !{!3112, !6, !3117}
!5261 = !DILocalVariable(name: "dmabuf", arg: 1, scope: !5258, file: !3, line: 764, type: !6)
!5262 = !DILocation(line: 764, column: 59, scope: !5258)
!5263 = !DILocalVariable(name: "dev", arg: 2, scope: !5258, file: !3, line: 765, type: !3117)
!5264 = !DILocation(line: 765, column: 23, scope: !5258)
!5265 = !DILocation(line: 767, column: 32, scope: !5258)
!5266 = !DILocation(line: 767, column: 40, scope: !5258)
!5267 = !DILocation(line: 767, column: 9, scope: !5258)
!5268 = !DILocation(line: 767, column: 2, scope: !5258)
!5269 = distinct !DISubprogram(name: "list_del", scope: !4733, file: !4733, line: 144, type: !4734, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!5270 = !DILocalVariable(name: "entry", arg: 1, scope: !5269, file: !4733, line: 144, type: !288)
!5271 = !DILocation(line: 144, column: 47, scope: !5269)
!5272 = !DILocation(line: 146, column: 19, scope: !5269)
!5273 = !DILocation(line: 146, column: 2, scope: !5269)
!5274 = !DILocation(line: 147, column: 2, scope: !5269)
!5275 = !DILocation(line: 147, column: 9, scope: !5269)
!5276 = !DILocation(line: 147, column: 14, scope: !5269)
!5277 = !DILocation(line: 148, column: 2, scope: !5269)
!5278 = !DILocation(line: 148, column: 9, scope: !5269)
!5279 = !DILocation(line: 148, column: 14, scope: !5269)
!5280 = !DILocation(line: 149, column: 1, scope: !5269)
!5281 = distinct !DISubprogram(name: "dma_buf_map_attachment", scope: !3, file: !3, line: 859, type: !3917, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!5282 = !DILocalVariable(name: "attach", arg: 1, scope: !5281, file: !3, line: 859, type: !3112)
!5283 = !DILocation(line: 859, column: 68, scope: !5281)
!5284 = !DILocalVariable(name: "direction", arg: 2, scope: !5281, file: !3, line: 860, type: !3886)
!5285 = !DILocation(line: 860, column: 30, scope: !5281)
!5286 = !DILocalVariable(name: "sg_table", scope: !5281, file: !3, line: 862, type: !3870)
!5287 = !DILocation(line: 862, column: 19, scope: !5281)
!5288 = !DILocalVariable(name: "r", scope: !5281, file: !3, line: 863, type: !152)
!5289 = !DILocation(line: 863, column: 6, scope: !5281)
!5290 = !DILocation(line: 865, column: 2, scope: !5281)
!5291 = !DILocation(line: 865, column: 2, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 865, column: 2)
!5293 = !DILocation(line: 865, column: 2, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5292, file: !3, line: 865, column: 2)
!5295 = !DILocalVariable(name: "__ret_warn_on", scope: !5296, file: !3, line: 867, type: !152)
!5296 = distinct !DILexicalBlock(scope: !5297, file: !3, line: 867, column: 6)
!5297 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 867, column: 6)
!5298 = !DILocation(line: 867, column: 6, scope: !5296)
!5299 = !DILocation(line: 867, column: 6, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5296, file: !3, line: 867, column: 6)
!5301 = !DILocation(line: 867, column: 6, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 867, column: 6)
!5303 = !DILocation(line: 867, column: 6, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5302, file: !3, line: 867, column: 6)
!5305 = !DILocation(line: 867, column: 6, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5302, file: !3, line: 867, column: 6)
!5307 = !{i32 -2141846118, i32 -2141846089, i32 -2141846043, i32 -2141845985, i32 -2141845931, i32 -2141845877, i32 -2141845822, i32 -2141845791}
!5308 = !DILocation(line: 867, column: 6, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5302, file: !3, line: 867, column: 6)
!5310 = !{i32 -2141845384, i32 -2141845377, i32 -2141845325, i32 -2141845294, i32 -2141845264}
!5311 = !DILocation(line: 867, column: 6, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5302, file: !3, line: 867, column: 6)
!5313 = !DILocation(line: 867, column: 6, scope: !5297)
!5314 = !DILocation(line: 867, column: 6, scope: !5281)
!5315 = !DILocation(line: 868, column: 10, scope: !5297)
!5316 = !DILocation(line: 868, column: 3, scope: !5297)
!5317 = !DILocation(line: 870, column: 36, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 870, column: 6)
!5319 = !DILocation(line: 870, column: 6, scope: !5318)
!5320 = !DILocation(line: 870, column: 6, scope: !5281)
!5321 = !DILocation(line: 871, column: 3, scope: !5318)
!5322 = !DILocation(line: 871, column: 3, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5318, file: !3, line: 871, column: 3)
!5324 = !DILocation(line: 873, column: 6, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 873, column: 6)
!5326 = !DILocation(line: 873, column: 14, scope: !5325)
!5327 = !DILocation(line: 873, column: 6, scope: !5281)
!5328 = !DILocation(line: 878, column: 7, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5330, file: !3, line: 878, column: 7)
!5330 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 873, column: 19)
!5331 = !DILocation(line: 878, column: 15, scope: !5329)
!5332 = !DILocation(line: 878, column: 22, scope: !5329)
!5333 = !DILocation(line: 878, column: 19, scope: !5329)
!5334 = !DILocation(line: 878, column: 32, scope: !5329)
!5335 = !DILocation(line: 879, column: 7, scope: !5329)
!5336 = !DILocation(line: 879, column: 15, scope: !5329)
!5337 = !DILocation(line: 879, column: 19, scope: !5329)
!5338 = !DILocation(line: 878, column: 7, scope: !5330)
!5339 = !DILocation(line: 880, column: 11, scope: !5329)
!5340 = !DILocation(line: 880, column: 4, scope: !5329)
!5341 = !DILocation(line: 882, column: 10, scope: !5330)
!5342 = !DILocation(line: 882, column: 18, scope: !5330)
!5343 = !DILocation(line: 882, column: 3, scope: !5330)
!5344 = !DILocation(line: 885, column: 25, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 885, column: 6)
!5346 = !DILocation(line: 885, column: 33, scope: !5345)
!5347 = !DILocation(line: 885, column: 6, scope: !5345)
!5348 = !DILocation(line: 885, column: 6, scope: !5281)
!5349 = !DILocation(line: 886, column: 3, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5345, file: !3, line: 885, column: 42)
!5351 = !DILocation(line: 886, column: 3, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5350, file: !3, line: 886, column: 3)
!5353 = !DILocation(line: 888, column: 20, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 887, column: 47)
!5355 = distinct !DILexicalBlock(scope: !5350, file: !3, line: 887, column: 7)
!5356 = !DILocation(line: 888, column: 8, scope: !5354)
!5357 = !DILocation(line: 888, column: 6, scope: !5354)
!5358 = !DILocation(line: 889, column: 8, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5354, file: !3, line: 889, column: 8)
!5360 = !DILocation(line: 889, column: 8, scope: !5354)
!5361 = !DILocation(line: 890, column: 20, scope: !5359)
!5362 = !DILocation(line: 890, column: 12, scope: !5359)
!5363 = !DILocation(line: 890, column: 5, scope: !5359)
!5364 = !DILocation(line: 892, column: 2, scope: !5350)
!5365 = !DILocation(line: 894, column: 13, scope: !5281)
!5366 = !DILocation(line: 894, column: 21, scope: !5281)
!5367 = !DILocation(line: 894, column: 29, scope: !5281)
!5368 = !DILocation(line: 894, column: 34, scope: !5281)
!5369 = !DILocation(line: 894, column: 46, scope: !5281)
!5370 = !DILocation(line: 894, column: 54, scope: !5281)
!5371 = !DILocation(line: 894, column: 11, scope: !5281)
!5372 = !DILocation(line: 895, column: 7, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 895, column: 6)
!5374 = !DILocation(line: 895, column: 6, scope: !5281)
!5375 = !DILocation(line: 896, column: 14, scope: !5373)
!5376 = !DILocation(line: 896, column: 12, scope: !5373)
!5377 = !DILocation(line: 896, column: 3, scope: !5373)
!5378 = !DILocation(line: 898, column: 13, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 898, column: 6)
!5380 = !DILocation(line: 898, column: 6, scope: !5379)
!5381 = !DILocation(line: 898, column: 23, scope: !5379)
!5382 = !DILocation(line: 898, column: 45, scope: !5379)
!5383 = !DILocation(line: 898, column: 53, scope: !5379)
!5384 = !DILocation(line: 898, column: 26, scope: !5379)
!5385 = !DILocation(line: 898, column: 6, scope: !5281)
!5386 = !DILocation(line: 900, column: 17, scope: !5379)
!5387 = !DILocation(line: 900, column: 3, scope: !5379)
!5388 = !DILocation(line: 902, column: 14, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 902, column: 6)
!5390 = !DILocation(line: 902, column: 7, scope: !5389)
!5391 = !DILocation(line: 902, column: 24, scope: !5389)
!5392 = !DILocation(line: 902, column: 27, scope: !5389)
!5393 = !DILocation(line: 902, column: 35, scope: !5389)
!5394 = !DILocation(line: 902, column: 43, scope: !5389)
!5395 = !DILocation(line: 902, column: 48, scope: !5389)
!5396 = !DILocation(line: 902, column: 6, scope: !5281)
!5397 = !DILocation(line: 903, column: 17, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5389, file: !3, line: 902, column: 67)
!5399 = !DILocation(line: 903, column: 3, scope: !5398)
!5400 = !DILocation(line: 903, column: 11, scope: !5398)
!5401 = !DILocation(line: 903, column: 15, scope: !5398)
!5402 = !DILocation(line: 904, column: 17, scope: !5398)
!5403 = !DILocation(line: 904, column: 3, scope: !5398)
!5404 = !DILocation(line: 904, column: 11, scope: !5398)
!5405 = !DILocation(line: 904, column: 15, scope: !5398)
!5406 = !DILocation(line: 905, column: 2, scope: !5398)
!5407 = !DILocation(line: 907, column: 9, scope: !5281)
!5408 = !DILocation(line: 907, column: 2, scope: !5281)
!5409 = !DILocation(line: 908, column: 1, scope: !5281)
!5410 = distinct !DISubprogram(name: "dma_buf_unmap_attachment", scope: !3, file: !3, line: 921, type: !3921, scopeLine: 924, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!5411 = !DILocalVariable(name: "attach", arg: 1, scope: !5410, file: !3, line: 921, type: !3112)
!5412 = !DILocation(line: 921, column: 58, scope: !5410)
!5413 = !DILocalVariable(name: "sg_table", arg: 2, scope: !5410, file: !3, line: 922, type: !3870)
!5414 = !DILocation(line: 922, column: 22, scope: !5410)
!5415 = !DILocalVariable(name: "direction", arg: 3, scope: !5410, file: !3, line: 923, type: !3886)
!5416 = !DILocation(line: 923, column: 29, scope: !5410)
!5417 = !DILocation(line: 925, column: 2, scope: !5410)
!5418 = !DILocation(line: 925, column: 2, scope: !5419)
!5419 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 925, column: 2)
!5420 = !DILocation(line: 925, column: 2, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 925, column: 2)
!5422 = !DILocalVariable(name: "__ret_warn_on", scope: !5423, file: !3, line: 927, type: !152)
!5423 = distinct !DILexicalBlock(scope: !5424, file: !3, line: 927, column: 6)
!5424 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 927, column: 6)
!5425 = !DILocation(line: 927, column: 6, scope: !5423)
!5426 = !DILocation(line: 927, column: 6, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 927, column: 6)
!5428 = !DILocation(line: 927, column: 6, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5427, file: !3, line: 927, column: 6)
!5430 = !DILocation(line: 927, column: 6, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 927, column: 6)
!5432 = !DILocation(line: 927, column: 6, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 927, column: 6)
!5434 = !{i32 -2141842476, i32 -2141842447, i32 -2141842401, i32 -2141842343, i32 -2141842289, i32 -2141842235, i32 -2141842180, i32 -2141842149}
!5435 = !DILocation(line: 927, column: 6, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 927, column: 6)
!5437 = !{i32 -2141841742, i32 -2141841735, i32 -2141841683, i32 -2141841652, i32 -2141841622}
!5438 = !DILocation(line: 927, column: 6, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 927, column: 6)
!5440 = !DILocation(line: 927, column: 6, scope: !5424)
!5441 = !DILocation(line: 927, column: 6, scope: !5410)
!5442 = !DILocation(line: 928, column: 3, scope: !5424)
!5443 = !DILocation(line: 930, column: 36, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 930, column: 6)
!5445 = !DILocation(line: 930, column: 6, scope: !5444)
!5446 = !DILocation(line: 930, column: 6, scope: !5410)
!5447 = !DILocation(line: 931, column: 3, scope: !5444)
!5448 = !DILocation(line: 931, column: 3, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5444, file: !3, line: 931, column: 3)
!5450 = !DILocation(line: 933, column: 6, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 933, column: 6)
!5452 = !DILocation(line: 933, column: 14, scope: !5451)
!5453 = !DILocation(line: 933, column: 21, scope: !5451)
!5454 = !DILocation(line: 933, column: 18, scope: !5451)
!5455 = !DILocation(line: 933, column: 6, scope: !5410)
!5456 = !DILocation(line: 934, column: 3, scope: !5451)
!5457 = !DILocation(line: 936, column: 25, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 936, column: 6)
!5459 = !DILocation(line: 936, column: 33, scope: !5458)
!5460 = !DILocation(line: 936, column: 6, scope: !5458)
!5461 = !DILocation(line: 936, column: 6, scope: !5410)
!5462 = !DILocation(line: 937, column: 3, scope: !5458)
!5463 = !DILocation(line: 937, column: 3, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5458, file: !3, line: 937, column: 3)
!5465 = !DILocation(line: 939, column: 2, scope: !5410)
!5466 = !DILocation(line: 939, column: 10, scope: !5410)
!5467 = !DILocation(line: 939, column: 18, scope: !5410)
!5468 = !DILocation(line: 939, column: 23, scope: !5410)
!5469 = !DILocation(line: 939, column: 37, scope: !5410)
!5470 = !DILocation(line: 939, column: 45, scope: !5410)
!5471 = !DILocation(line: 939, column: 55, scope: !5410)
!5472 = !DILocation(line: 941, column: 25, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5410, file: !3, line: 941, column: 6)
!5474 = !DILocation(line: 941, column: 33, scope: !5473)
!5475 = !DILocation(line: 941, column: 6, scope: !5473)
!5476 = !DILocation(line: 941, column: 6, scope: !5410)
!5477 = !DILocation(line: 943, column: 17, scope: !5473)
!5478 = !DILocation(line: 943, column: 3, scope: !5473)
!5479 = !DILocation(line: 944, column: 1, scope: !5410)
!5480 = distinct !DISubprogram(name: "dma_buf_move_notify", scope: !3, file: !3, line: 955, type: !3925, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!5481 = !DILocalVariable(name: "dmabuf", arg: 1, scope: !5480, file: !3, line: 955, type: !6)
!5482 = !DILocation(line: 955, column: 42, scope: !5480)
!5483 = !DILocalVariable(name: "attach", scope: !5480, file: !3, line: 957, type: !3112)
!5484 = !DILocation(line: 957, column: 29, scope: !5480)
!5485 = !DILocation(line: 959, column: 2, scope: !5480)
!5486 = !DILocation(line: 959, column: 2, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5480, file: !3, line: 959, column: 2)
!5488 = !DILocalVariable(name: "__mptr", scope: !5489, file: !3, line: 961, type: !146)
!5489 = distinct !DILexicalBlock(scope: !5490, file: !3, line: 961, column: 2)
!5490 = distinct !DILexicalBlock(scope: !5480, file: !3, line: 961, column: 2)
!5491 = !DILocation(line: 961, column: 2, scope: !5489)
!5492 = !DILocation(line: 961, column: 2, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5489, file: !3, line: 961, column: 2)
!5494 = !DILocation(line: 961, column: 2, scope: !5490)
!5495 = !DILocation(line: 961, column: 2, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5490, file: !3, line: 961, column: 2)
!5497 = !DILocation(line: 962, column: 7, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 962, column: 7)
!5499 = !DILocation(line: 962, column: 15, scope: !5498)
!5500 = !DILocation(line: 962, column: 7, scope: !5496)
!5501 = !DILocation(line: 963, column: 4, scope: !5498)
!5502 = !DILocation(line: 963, column: 12, scope: !5498)
!5503 = !DILocation(line: 963, column: 26, scope: !5498)
!5504 = !DILocation(line: 963, column: 38, scope: !5498)
!5505 = !DILocalVariable(name: "__mptr", scope: !5506, file: !3, line: 961, type: !146)
!5506 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 961, column: 2)
!5507 = !DILocation(line: 961, column: 2, scope: !5506)
!5508 = !DILocation(line: 961, column: 2, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5506, file: !3, line: 961, column: 2)
!5510 = distinct !{!5510, !5494, !5511}
!5511 = !DILocation(line: 963, column: 44, scope: !5490)
!5512 = !DILocation(line: 964, column: 1, scope: !5480)
!5513 = distinct !DISubprogram(name: "dma_buf_begin_cpu_access", scope: !3, file: !3, line: 1082, type: !3929, scopeLine: 1084, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!5514 = !DILocalVariable(name: "dmabuf", arg: 1, scope: !5513, file: !3, line: 1082, type: !6)
!5515 = !DILocation(line: 1082, column: 46, scope: !5513)
!5516 = !DILocalVariable(name: "direction", arg: 2, scope: !5513, file: !3, line: 1083, type: !3886)
!5517 = !DILocation(line: 1083, column: 33, scope: !5513)
!5518 = !DILocalVariable(name: "ret", scope: !5513, file: !3, line: 1085, type: !152)
!5519 = !DILocation(line: 1085, column: 6, scope: !5513)
!5520 = !DILocalVariable(name: "__ret_warn_on", scope: !5521, file: !3, line: 1087, type: !152)
!5521 = distinct !DILexicalBlock(scope: !5522, file: !3, line: 1087, column: 6)
!5522 = distinct !DILexicalBlock(scope: !5513, file: !3, line: 1087, column: 6)
!5523 = !DILocation(line: 1087, column: 6, scope: !5521)
!5524 = !DILocation(line: 1087, column: 6, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5521, file: !3, line: 1087, column: 6)
!5526 = !DILocation(line: 1087, column: 6, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5525, file: !3, line: 1087, column: 6)
!5528 = !DILocation(line: 1087, column: 6, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 1087, column: 6)
!5530 = !DILocation(line: 1087, column: 6, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 1087, column: 6)
!5532 = !{i32 -2141835517, i32 -2141835488, i32 -2141835442, i32 -2141835384, i32 -2141835330, i32 -2141835276, i32 -2141835221, i32 -2141835190}
!5533 = !DILocation(line: 1087, column: 6, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 1087, column: 6)
!5535 = !{i32 -2141834782, i32 -2141834775, i32 -2141834723, i32 -2141834692, i32 -2141834662}
!5536 = !DILocation(line: 1087, column: 6, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 1087, column: 6)
!5538 = !DILocation(line: 1087, column: 6, scope: !5522)
!5539 = !DILocation(line: 1087, column: 6, scope: !5513)
!5540 = !DILocation(line: 1088, column: 3, scope: !5522)
!5541 = !DILocation(line: 1090, column: 6, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5513, file: !3, line: 1090, column: 6)
!5543 = !DILocation(line: 1090, column: 14, scope: !5542)
!5544 = !DILocation(line: 1090, column: 19, scope: !5542)
!5545 = !DILocation(line: 1090, column: 6, scope: !5513)
!5546 = !DILocation(line: 1091, column: 9, scope: !5542)
!5547 = !DILocation(line: 1091, column: 17, scope: !5542)
!5548 = !DILocation(line: 1091, column: 22, scope: !5542)
!5549 = !DILocation(line: 1091, column: 39, scope: !5542)
!5550 = !DILocation(line: 1091, column: 47, scope: !5542)
!5551 = !DILocation(line: 1091, column: 7, scope: !5542)
!5552 = !DILocation(line: 1091, column: 3, scope: !5542)
!5553 = !DILocation(line: 1097, column: 6, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5513, file: !3, line: 1097, column: 6)
!5555 = !DILocation(line: 1097, column: 10, scope: !5554)
!5556 = !DILocation(line: 1097, column: 6, scope: !5513)
!5557 = !DILocation(line: 1098, column: 36, scope: !5554)
!5558 = !DILocation(line: 1098, column: 44, scope: !5554)
!5559 = !DILocation(line: 1098, column: 9, scope: !5554)
!5560 = !DILocation(line: 1098, column: 7, scope: !5554)
!5561 = !DILocation(line: 1098, column: 3, scope: !5554)
!5562 = !DILocation(line: 1100, column: 9, scope: !5513)
!5563 = !DILocation(line: 1100, column: 2, scope: !5513)
!5564 = !DILocation(line: 1101, column: 1, scope: !5513)
!5565 = distinct !DISubprogram(name: "__dma_buf_begin_cpu_access", scope: !3, file: !3, line: 1051, type: !3929, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!5566 = !DILocalVariable(name: "dmabuf", arg: 1, scope: !5565, file: !3, line: 1051, type: !6)
!5567 = !DILocation(line: 1051, column: 55, scope: !5565)
!5568 = !DILocalVariable(name: "direction", arg: 2, scope: !5565, file: !3, line: 1052, type: !3886)
!5569 = !DILocation(line: 1052, column: 35, scope: !5565)
!5570 = !DILocalVariable(name: "write", scope: !5565, file: !3, line: 1054, type: !168)
!5571 = !DILocation(line: 1054, column: 7, scope: !5565)
!5572 = !DILocation(line: 1054, column: 16, scope: !5565)
!5573 = !DILocation(line: 1054, column: 26, scope: !5565)
!5574 = !DILocation(line: 1054, column: 47, scope: !5565)
!5575 = !DILocation(line: 1055, column: 9, scope: !5565)
!5576 = !DILocation(line: 1055, column: 19, scope: !5565)
!5577 = !DILocalVariable(name: "resv", scope: !5565, file: !3, line: 1056, type: !3954)
!5578 = !DILocation(line: 1056, column: 19, scope: !5565)
!5579 = !DILocation(line: 1056, column: 26, scope: !5565)
!5580 = !DILocation(line: 1056, column: 34, scope: !5565)
!5581 = !DILocalVariable(name: "ret", scope: !5565, file: !3, line: 1057, type: !220)
!5582 = !DILocation(line: 1057, column: 7, scope: !5565)
!5583 = !DILocation(line: 1060, column: 34, scope: !5565)
!5584 = !DILocation(line: 1060, column: 40, scope: !5565)
!5585 = !DILocation(line: 1060, column: 8, scope: !5565)
!5586 = !DILocation(line: 1060, column: 6, scope: !5565)
!5587 = !DILocation(line: 1062, column: 6, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5565, file: !3, line: 1062, column: 6)
!5589 = !DILocation(line: 1062, column: 10, scope: !5588)
!5590 = !DILocation(line: 1062, column: 6, scope: !5565)
!5591 = !DILocation(line: 1063, column: 10, scope: !5588)
!5592 = !DILocation(line: 1063, column: 3, scope: !5588)
!5593 = !DILocation(line: 1065, column: 2, scope: !5565)
!5594 = !DILocation(line: 1066, column: 1, scope: !5565)
!5595 = distinct !DISubprogram(name: "dma_buf_end_cpu_access", scope: !3, file: !3, line: 1116, type: !3929, scopeLine: 1118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!5596 = !DILocalVariable(name: "dmabuf", arg: 1, scope: !5595, file: !3, line: 1116, type: !6)
!5597 = !DILocation(line: 1116, column: 44, scope: !5595)
!5598 = !DILocalVariable(name: "direction", arg: 2, scope: !5595, file: !3, line: 1117, type: !3886)
!5599 = !DILocation(line: 1117, column: 31, scope: !5595)
!5600 = !DILocalVariable(name: "ret", scope: !5595, file: !3, line: 1119, type: !152)
!5601 = !DILocation(line: 1119, column: 6, scope: !5595)
!5602 = !DILocalVariable(name: "__ret_warn_on", scope: !5603, file: !3, line: 1121, type: !152)
!5603 = distinct !DILexicalBlock(scope: !5595, file: !3, line: 1121, column: 2)
!5604 = !DILocation(line: 1121, column: 2, scope: !5603)
!5605 = !DILocation(line: 1121, column: 2, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5603, file: !3, line: 1121, column: 2)
!5607 = !DILocation(line: 1121, column: 2, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5606, file: !3, line: 1121, column: 2)
!5609 = !DILocation(line: 1121, column: 2, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 1121, column: 2)
!5611 = !DILocation(line: 1121, column: 2, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 1121, column: 2)
!5613 = !{i32 -2141833965, i32 -2141833936, i32 -2141833890, i32 -2141833832, i32 -2141833778, i32 -2141833724, i32 -2141833669, i32 -2141833638}
!5614 = !DILocation(line: 1121, column: 2, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 1121, column: 2)
!5616 = !{i32 -2141833230, i32 -2141833223, i32 -2141833171, i32 -2141833140, i32 -2141833110}
!5617 = !DILocation(line: 1121, column: 2, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 1121, column: 2)
!5619 = !DILocation(line: 1123, column: 6, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5595, file: !3, line: 1123, column: 6)
!5621 = !DILocation(line: 1123, column: 14, scope: !5620)
!5622 = !DILocation(line: 1123, column: 19, scope: !5620)
!5623 = !DILocation(line: 1123, column: 6, scope: !5595)
!5624 = !DILocation(line: 1124, column: 9, scope: !5620)
!5625 = !DILocation(line: 1124, column: 17, scope: !5620)
!5626 = !DILocation(line: 1124, column: 22, scope: !5620)
!5627 = !DILocation(line: 1124, column: 37, scope: !5620)
!5628 = !DILocation(line: 1124, column: 45, scope: !5620)
!5629 = !DILocation(line: 1124, column: 7, scope: !5620)
!5630 = !DILocation(line: 1124, column: 3, scope: !5620)
!5631 = !DILocation(line: 1126, column: 9, scope: !5595)
!5632 = !DILocation(line: 1126, column: 2, scope: !5595)
!5633 = distinct !DISubprogram(name: "dma_buf_mmap", scope: !3, file: !3, line: 1145, type: !5634, scopeLine: 1147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!5634 = !DISubroutineType(types: !5635)
!5635 = !{!152, !6, !1046, !16}
!5636 = !DILocalVariable(name: "dmabuf", arg: 1, scope: !5633, file: !3, line: 1145, type: !6)
!5637 = !DILocation(line: 1145, column: 34, scope: !5633)
!5638 = !DILocalVariable(name: "vma", arg: 2, scope: !5633, file: !3, line: 1145, type: !1046)
!5639 = !DILocation(line: 1145, column: 65, scope: !5633)
!5640 = !DILocalVariable(name: "pgoff", arg: 3, scope: !5633, file: !3, line: 1146, type: !16)
!5641 = !DILocation(line: 1146, column: 18, scope: !5633)
!5642 = !DILocalVariable(name: "oldfile", scope: !5633, file: !3, line: 1148, type: !18)
!5643 = !DILocation(line: 1148, column: 15, scope: !5633)
!5644 = !DILocalVariable(name: "ret", scope: !5633, file: !3, line: 1149, type: !152)
!5645 = !DILocation(line: 1149, column: 6, scope: !5633)
!5646 = !DILocalVariable(name: "__ret_warn_on", scope: !5647, file: !3, line: 1151, type: !152)
!5647 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 1151, column: 6)
!5648 = distinct !DILexicalBlock(scope: !5633, file: !3, line: 1151, column: 6)
!5649 = !DILocation(line: 1151, column: 6, scope: !5647)
!5650 = !DILocation(line: 1151, column: 6, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 1151, column: 6)
!5652 = !DILocation(line: 1151, column: 6, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 1151, column: 6)
!5654 = !DILocation(line: 1151, column: 6, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5653, file: !3, line: 1151, column: 6)
!5656 = !DILocation(line: 1151, column: 6, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5653, file: !3, line: 1151, column: 6)
!5658 = !{i32 -2141832412, i32 -2141832383, i32 -2141832337, i32 -2141832279, i32 -2141832225, i32 -2141832171, i32 -2141832116, i32 -2141832085}
!5659 = !DILocation(line: 1151, column: 6, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5653, file: !3, line: 1151, column: 6)
!5661 = !{i32 -2141831677, i32 -2141831670, i32 -2141831618, i32 -2141831587, i32 -2141831557}
!5662 = !DILocation(line: 1151, column: 6, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5653, file: !3, line: 1151, column: 6)
!5664 = !DILocation(line: 1151, column: 6, scope: !5648)
!5665 = !DILocation(line: 1151, column: 6, scope: !5633)
!5666 = !DILocation(line: 1152, column: 3, scope: !5648)
!5667 = !DILocation(line: 1155, column: 7, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5633, file: !3, line: 1155, column: 6)
!5669 = !DILocation(line: 1155, column: 15, scope: !5668)
!5670 = !DILocation(line: 1155, column: 20, scope: !5668)
!5671 = !DILocation(line: 1155, column: 6, scope: !5633)
!5672 = !DILocation(line: 1156, column: 3, scope: !5668)
!5673 = !DILocation(line: 1159, column: 6, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5633, file: !3, line: 1159, column: 6)
!5675 = !DILocation(line: 1159, column: 24, scope: !5674)
!5676 = !DILocation(line: 1159, column: 14, scope: !5674)
!5677 = !DILocation(line: 1159, column: 12, scope: !5674)
!5678 = !DILocation(line: 1159, column: 31, scope: !5674)
!5679 = !DILocation(line: 1159, column: 29, scope: !5674)
!5680 = !DILocation(line: 1159, column: 6, scope: !5633)
!5681 = !DILocation(line: 1160, column: 3, scope: !5674)
!5682 = !DILocation(line: 1163, column: 6, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5633, file: !3, line: 1163, column: 6)
!5684 = !DILocation(line: 1163, column: 24, scope: !5683)
!5685 = !DILocation(line: 1163, column: 14, scope: !5683)
!5686 = !DILocation(line: 1163, column: 12, scope: !5683)
!5687 = !DILocation(line: 1164, column: 6, scope: !5683)
!5688 = !DILocation(line: 1164, column: 14, scope: !5683)
!5689 = !DILocation(line: 1164, column: 19, scope: !5683)
!5690 = !DILocation(line: 1163, column: 29, scope: !5683)
!5691 = !DILocation(line: 1163, column: 6, scope: !5633)
!5692 = !DILocation(line: 1165, column: 3, scope: !5683)
!5693 = !DILocation(line: 1168, column: 11, scope: !5633)
!5694 = !DILocation(line: 1168, column: 19, scope: !5633)
!5695 = !DILocation(line: 1168, column: 2, scope: !5633)
!5696 = !DILocation(line: 1169, column: 12, scope: !5633)
!5697 = !DILocation(line: 1169, column: 17, scope: !5633)
!5698 = !DILocation(line: 1169, column: 10, scope: !5633)
!5699 = !DILocation(line: 1170, column: 17, scope: !5633)
!5700 = !DILocation(line: 1170, column: 25, scope: !5633)
!5701 = !DILocation(line: 1170, column: 2, scope: !5633)
!5702 = !DILocation(line: 1170, column: 7, scope: !5633)
!5703 = !DILocation(line: 1170, column: 15, scope: !5633)
!5704 = !DILocation(line: 1171, column: 18, scope: !5633)
!5705 = !DILocation(line: 1171, column: 2, scope: !5633)
!5706 = !DILocation(line: 1171, column: 7, scope: !5633)
!5707 = !DILocation(line: 1171, column: 16, scope: !5633)
!5708 = !DILocation(line: 1173, column: 8, scope: !5633)
!5709 = !DILocation(line: 1173, column: 16, scope: !5633)
!5710 = !DILocation(line: 1173, column: 21, scope: !5633)
!5711 = !DILocation(line: 1173, column: 26, scope: !5633)
!5712 = !DILocation(line: 1173, column: 34, scope: !5633)
!5713 = !DILocation(line: 1173, column: 6, scope: !5633)
!5714 = !DILocation(line: 1174, column: 6, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5633, file: !3, line: 1174, column: 6)
!5716 = !DILocation(line: 1174, column: 6, scope: !5633)
!5717 = !DILocation(line: 1176, column: 18, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5715, file: !3, line: 1174, column: 11)
!5719 = !DILocation(line: 1176, column: 3, scope: !5718)
!5720 = !DILocation(line: 1176, column: 8, scope: !5718)
!5721 = !DILocation(line: 1176, column: 16, scope: !5718)
!5722 = !DILocation(line: 1177, column: 8, scope: !5718)
!5723 = !DILocation(line: 1177, column: 16, scope: !5718)
!5724 = !DILocation(line: 1177, column: 3, scope: !5718)
!5725 = !DILocation(line: 1178, column: 2, scope: !5718)
!5726 = !DILocation(line: 1179, column: 7, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5728, file: !3, line: 1179, column: 7)
!5728 = distinct !DILexicalBlock(scope: !5715, file: !3, line: 1178, column: 9)
!5729 = !DILocation(line: 1179, column: 7, scope: !5728)
!5730 = !DILocation(line: 1180, column: 9, scope: !5727)
!5731 = !DILocation(line: 1180, column: 4, scope: !5727)
!5732 = !DILocation(line: 1182, column: 9, scope: !5633)
!5733 = !DILocation(line: 1182, column: 2, scope: !5633)
!5734 = !DILocation(line: 1184, column: 1, scope: !5633)
!5735 = distinct !DISubprogram(name: "vma_pages", scope: !1077, file: !1077, line: 2685, type: !1147, scopeLine: 2686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!5736 = !DILocalVariable(name: "vma", arg: 1, scope: !5735, file: !1077, line: 2685, type: !1046)
!5737 = !DILocation(line: 2685, column: 62, scope: !5735)
!5738 = !DILocation(line: 2687, column: 10, scope: !5735)
!5739 = !DILocation(line: 2687, column: 15, scope: !5735)
!5740 = !DILocation(line: 2687, column: 24, scope: !5735)
!5741 = !DILocation(line: 2687, column: 29, scope: !5735)
!5742 = !DILocation(line: 2687, column: 22, scope: !5735)
!5743 = !DILocation(line: 2687, column: 39, scope: !5735)
!5744 = !DILocation(line: 2687, column: 2, scope: !5735)
!5745 = distinct !DISubprogram(name: "get_file", scope: !20, file: !20, line: 965, type: !5746, scopeLine: 966, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!5746 = !DISubroutineType(types: !5747)
!5747 = !{!18, !18}
!5748 = !DILocalVariable(name: "v", arg: 1, scope: !5749, file: !5750, line: 86, type: !5753)
!5749 = distinct !DISubprogram(name: "arch_atomic64_inc", scope: !5750, file: !5750, line: 86, type: !5751, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!5750 = !DIFile(filename: "./arch/x86/include/asm/atomic64_64.h", directory: "/home/lizy2001/genbc/linux")
!5751 = !DISubroutineType(types: !5752)
!5752 = !{null, !5753}
!5753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 64)
!5754 = !DILocation(line: 86, column: 59, scope: !5749, inlinedAt: !5755)
!5755 = distinct !DILocation(line: 1051, column: 2, scope: !5756, inlinedAt: !5758)
!5756 = distinct !DISubprogram(name: "atomic64_inc", scope: !5757, file: !5757, line: 1048, type: !5751, scopeLine: 1049, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!5757 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!5758 = distinct !DILocation(line: 161, column: 2, scope: !5759, inlinedAt: !5762)
!5759 = distinct !DISubprogram(name: "atomic_long_inc", scope: !372, file: !372, line: 159, type: !5760, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!5760 = !DISubroutineType(types: !5761)
!5761 = !{null, !2686}
!5762 = distinct !DILocation(line: 967, column: 2, scope: !5745)
!5763 = !DILocalVariable(name: "v", arg: 1, scope: !5764, file: !5765, line: 99, type: !5768)
!5764 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !5765, file: !5765, line: 99, type: !5766, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!5765 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!5766 = !DISubroutineType(types: !5767)
!5767 = !{null, !5768, !11}
!5768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5769, size: 64)
!5769 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5770)
!5770 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!5771 = !DILocation(line: 99, column: 79, scope: !5764, inlinedAt: !5772)
!5772 = distinct !DILocation(line: 1050, column: 2, scope: !5756, inlinedAt: !5758)
!5773 = !DILocalVariable(name: "size", arg: 2, scope: !5764, file: !5765, line: 99, type: !11)
!5774 = !DILocation(line: 99, column: 89, scope: !5764, inlinedAt: !5772)
!5775 = !DILocalVariable(name: "v", arg: 1, scope: !5756, file: !5757, line: 1048, type: !5753)
!5776 = !DILocation(line: 1048, column: 26, scope: !5756, inlinedAt: !5758)
!5777 = !DILocalVariable(name: "v", arg: 1, scope: !5759, file: !372, line: 159, type: !2686)
!5778 = !DILocation(line: 159, column: 32, scope: !5759, inlinedAt: !5762)
!5779 = !DILocalVariable(name: "f", arg: 1, scope: !5745, file: !20, line: 965, type: !18)
!5780 = !DILocation(line: 965, column: 50, scope: !5745)
!5781 = !DILocation(line: 967, column: 19, scope: !5745)
!5782 = !DILocation(line: 967, column: 22, scope: !5745)
!5783 = !DILocation(line: 161, column: 15, scope: !5759, inlinedAt: !5762)
!5784 = !DILocation(line: 1050, column: 31, scope: !5756, inlinedAt: !5758)
!5785 = !DILocation(line: 101, column: 20, scope: !5764, inlinedAt: !5772)
!5786 = !DILocation(line: 101, column: 23, scope: !5764, inlinedAt: !5772)
!5787 = !DILocation(line: 101, column: 2, scope: !5764, inlinedAt: !5772)
!5788 = !DILocation(line: 102, column: 2, scope: !5764, inlinedAt: !5772)
!5789 = !DILocation(line: 1051, column: 20, scope: !5756, inlinedAt: !5758)
!5790 = !DILocation(line: 89, column: 16, scope: !5749, inlinedAt: !5755)
!5791 = !DILocation(line: 89, column: 19, scope: !5749, inlinedAt: !5755)
!5792 = !DILocation(line: 90, column: 15, scope: !5749, inlinedAt: !5755)
!5793 = !DILocation(line: 90, column: 18, scope: !5749, inlinedAt: !5755)
!5794 = !DILocation(line: 88, column: 2, scope: !5749, inlinedAt: !5755)
!5795 = !{i32 -2146326737}
!5796 = !DILocation(line: 968, column: 9, scope: !5745)
!5797 = !DILocation(line: 968, column: 2, scope: !5745)
!5798 = distinct !DISubprogram(name: "dma_buf_vmap", scope: !3, file: !3, line: 1199, type: !3938, scopeLine: 1200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!5799 = !DILocalVariable(name: "dmabuf", arg: 1, scope: !5798, file: !3, line: 1199, type: !6)
!5800 = !DILocation(line: 1199, column: 36, scope: !5798)
!5801 = !DILocalVariable(name: "ptr", scope: !5798, file: !3, line: 1201, type: !146)
!5802 = !DILocation(line: 1201, column: 8, scope: !5798)
!5803 = !DILocalVariable(name: "__ret_warn_on", scope: !5804, file: !3, line: 1203, type: !152)
!5804 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 1203, column: 6)
!5805 = distinct !DILexicalBlock(scope: !5798, file: !3, line: 1203, column: 6)
!5806 = !DILocation(line: 1203, column: 6, scope: !5804)
!5807 = !DILocation(line: 1203, column: 6, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5804, file: !3, line: 1203, column: 6)
!5809 = !DILocation(line: 1203, column: 6, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5808, file: !3, line: 1203, column: 6)
!5811 = !DILocation(line: 1203, column: 6, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 1203, column: 6)
!5813 = !DILocation(line: 1203, column: 6, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 1203, column: 6)
!5815 = !{i32 -2141830872, i32 -2141830843, i32 -2141830797, i32 -2141830739, i32 -2141830685, i32 -2141830631, i32 -2141830576, i32 -2141830545}
!5816 = !DILocation(line: 1203, column: 6, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 1203, column: 6)
!5818 = !{i32 -2141830137, i32 -2141830130, i32 -2141830078, i32 -2141830047, i32 -2141830017}
!5819 = !DILocation(line: 1203, column: 6, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 1203, column: 6)
!5821 = !DILocation(line: 1203, column: 6, scope: !5805)
!5822 = !DILocation(line: 1203, column: 6, scope: !5798)
!5823 = !DILocation(line: 1204, column: 3, scope: !5805)
!5824 = !DILocation(line: 1206, column: 7, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5798, file: !3, line: 1206, column: 6)
!5826 = !DILocation(line: 1206, column: 15, scope: !5825)
!5827 = !DILocation(line: 1206, column: 20, scope: !5825)
!5828 = !DILocation(line: 1206, column: 6, scope: !5798)
!5829 = !DILocation(line: 1207, column: 3, scope: !5825)
!5830 = !DILocation(line: 1209, column: 14, scope: !5798)
!5831 = !DILocation(line: 1209, column: 22, scope: !5798)
!5832 = !DILocation(line: 1209, column: 2, scope: !5798)
!5833 = !DILocation(line: 1210, column: 6, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5798, file: !3, line: 1210, column: 6)
!5835 = !DILocation(line: 1210, column: 14, scope: !5834)
!5836 = !DILocation(line: 1210, column: 6, scope: !5798)
!5837 = !DILocation(line: 1211, column: 3, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5834, file: !3, line: 1210, column: 32)
!5839 = !DILocation(line: 1211, column: 11, scope: !5838)
!5840 = !DILocation(line: 1211, column: 27, scope: !5838)
!5841 = !DILocation(line: 1212, column: 3, scope: !5838)
!5842 = !DILocation(line: 1212, column: 3, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 1212, column: 3)
!5844 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 1212, column: 3)
!5845 = !DILocation(line: 1212, column: 3, scope: !5844)
!5846 = !DILocation(line: 1212, column: 3, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5843, file: !3, line: 1212, column: 3)
!5848 = !DILocation(line: 1212, column: 3, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5847, file: !3, line: 1212, column: 3)
!5850 = !DILocation(line: 1212, column: 3, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5847, file: !3, line: 1212, column: 3)
!5852 = !{i32 -2141829619, i32 -2141829590, i32 -2141829544, i32 -2141829486, i32 -2141829432, i32 -2141829378, i32 -2141829323, i32 -2141829292}
!5853 = !DILocation(line: 1212, column: 3, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5855, file: !3, line: 1212, column: 3)
!5855 = distinct !DILexicalBlock(scope: !5847, file: !3, line: 1212, column: 3)
!5856 = !{i32 -2141828843, i32 -2141828836, i32 -2141828782, i32 -2141828751, i32 -2141828721}
!5857 = !DILocation(line: 1212, column: 3, scope: !5855)
!5858 = !DILocation(line: 1213, column: 9, scope: !5838)
!5859 = !DILocation(line: 1213, column: 17, scope: !5838)
!5860 = !DILocation(line: 1213, column: 7, scope: !5838)
!5861 = !DILocation(line: 1214, column: 3, scope: !5838)
!5862 = !DILocation(line: 1217, column: 2, scope: !5798)
!5863 = !DILocation(line: 1217, column: 2, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 1217, column: 2)
!5865 = distinct !DILexicalBlock(scope: !5798, file: !3, line: 1217, column: 2)
!5866 = !DILocation(line: 1217, column: 2, scope: !5865)
!5867 = !DILocation(line: 1217, column: 2, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 1217, column: 2)
!5869 = !DILocation(line: 1217, column: 2, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5868, file: !3, line: 1217, column: 2)
!5871 = !DILocation(line: 1217, column: 2, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5868, file: !3, line: 1217, column: 2)
!5873 = !{i32 -2141828406, i32 -2141828377, i32 -2141828331, i32 -2141828273, i32 -2141828219, i32 -2141828165, i32 -2141828110, i32 -2141828079}
!5874 = !DILocation(line: 1217, column: 2, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 1217, column: 2)
!5876 = distinct !DILexicalBlock(scope: !5868, file: !3, line: 1217, column: 2)
!5877 = !{i32 -2141827630, i32 -2141827623, i32 -2141827569, i32 -2141827538, i32 -2141827508}
!5878 = !DILocation(line: 1217, column: 2, scope: !5876)
!5879 = !DILocation(line: 1219, column: 8, scope: !5798)
!5880 = !DILocation(line: 1219, column: 16, scope: !5798)
!5881 = !DILocation(line: 1219, column: 21, scope: !5798)
!5882 = !DILocation(line: 1219, column: 26, scope: !5798)
!5883 = !DILocation(line: 1219, column: 6, scope: !5798)
!5884 = !DILocalVariable(name: "__ret_warn_on", scope: !5885, file: !3, line: 1220, type: !152)
!5885 = distinct !DILexicalBlock(scope: !5886, file: !3, line: 1220, column: 6)
!5886 = distinct !DILexicalBlock(scope: !5798, file: !3, line: 1220, column: 6)
!5887 = !DILocation(line: 1220, column: 6, scope: !5885)
!5888 = !DILocation(line: 1220, column: 6, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5885, file: !3, line: 1220, column: 6)
!5890 = !DILocation(line: 1220, column: 6, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5889, file: !3, line: 1220, column: 6)
!5892 = !DILocation(line: 1220, column: 6, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 1220, column: 6)
!5894 = !DILocation(line: 1220, column: 6, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 1220, column: 6)
!5896 = !{i32 -2141826954, i32 -2141826925, i32 -2141826879, i32 -2141826821, i32 -2141826767, i32 -2141826713, i32 -2141826658, i32 -2141826627}
!5897 = !DILocation(line: 1220, column: 6, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 1220, column: 6)
!5899 = !{i32 -2141826208, i32 -2141826201, i32 -2141826149, i32 -2141826118, i32 -2141826088}
!5900 = !DILocation(line: 1220, column: 6, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 1220, column: 6)
!5902 = !DILocation(line: 1220, column: 6, scope: !5886)
!5903 = !DILocation(line: 1220, column: 6, scope: !5798)
!5904 = !DILocation(line: 1221, column: 7, scope: !5886)
!5905 = !DILocation(line: 1221, column: 3, scope: !5886)
!5906 = !DILocation(line: 1222, column: 7, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5798, file: !3, line: 1222, column: 6)
!5908 = !DILocation(line: 1222, column: 6, scope: !5798)
!5909 = !DILocation(line: 1223, column: 3, scope: !5907)
!5910 = !DILocation(line: 1225, column: 21, scope: !5798)
!5911 = !DILocation(line: 1225, column: 2, scope: !5798)
!5912 = !DILocation(line: 1225, column: 10, scope: !5798)
!5913 = !DILocation(line: 1225, column: 19, scope: !5798)
!5914 = !DILocation(line: 1226, column: 2, scope: !5798)
!5915 = !DILocation(line: 1226, column: 10, scope: !5798)
!5916 = !DILocation(line: 1226, column: 27, scope: !5798)
!5917 = !DILabel(scope: !5798, name: "out_unlock", file: !3, line: 1228)
!5918 = !DILocation(line: 1228, column: 1, scope: !5798)
!5919 = !DILocation(line: 1229, column: 16, scope: !5798)
!5920 = !DILocation(line: 1229, column: 24, scope: !5798)
!5921 = !DILocation(line: 1229, column: 2, scope: !5798)
!5922 = !DILocation(line: 1230, column: 9, scope: !5798)
!5923 = !DILocation(line: 1230, column: 2, scope: !5798)
!5924 = !DILocation(line: 1231, column: 1, scope: !5798)
!5925 = distinct !DISubprogram(name: "dma_buf_vunmap", scope: !3, file: !3, line: 1239, type: !3942, scopeLine: 1240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!5926 = !DILocalVariable(name: "dmabuf", arg: 1, scope: !5925, file: !3, line: 1239, type: !6)
!5927 = !DILocation(line: 1239, column: 37, scope: !5925)
!5928 = !DILocalVariable(name: "vaddr", arg: 2, scope: !5925, file: !3, line: 1239, type: !146)
!5929 = !DILocation(line: 1239, column: 51, scope: !5925)
!5930 = !DILocalVariable(name: "__ret_warn_on", scope: !5931, file: !3, line: 1241, type: !152)
!5931 = distinct !DILexicalBlock(scope: !5932, file: !3, line: 1241, column: 6)
!5932 = distinct !DILexicalBlock(scope: !5925, file: !3, line: 1241, column: 6)
!5933 = !DILocation(line: 1241, column: 6, scope: !5931)
!5934 = !DILocation(line: 1241, column: 6, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5931, file: !3, line: 1241, column: 6)
!5936 = !DILocation(line: 1241, column: 6, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5935, file: !3, line: 1241, column: 6)
!5938 = !DILocation(line: 1241, column: 6, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5937, file: !3, line: 1241, column: 6)
!5940 = !DILocation(line: 1241, column: 6, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5937, file: !3, line: 1241, column: 6)
!5942 = !{i32 -2141825406, i32 -2141825377, i32 -2141825331, i32 -2141825273, i32 -2141825219, i32 -2141825165, i32 -2141825110, i32 -2141825079}
!5943 = !DILocation(line: 1241, column: 6, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5937, file: !3, line: 1241, column: 6)
!5945 = !{i32 -2141824671, i32 -2141824664, i32 -2141824612, i32 -2141824581, i32 -2141824551}
!5946 = !DILocation(line: 1241, column: 6, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5937, file: !3, line: 1241, column: 6)
!5948 = !DILocation(line: 1241, column: 6, scope: !5932)
!5949 = !DILocation(line: 1241, column: 6, scope: !5925)
!5950 = !DILocation(line: 1242, column: 3, scope: !5932)
!5951 = !DILocation(line: 1244, column: 2, scope: !5925)
!5952 = !DILocation(line: 1244, column: 2, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5954, file: !3, line: 1244, column: 2)
!5954 = distinct !DILexicalBlock(scope: !5925, file: !3, line: 1244, column: 2)
!5955 = !DILocation(line: 1244, column: 2, scope: !5954)
!5956 = !DILocation(line: 1244, column: 2, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 1244, column: 2)
!5958 = !DILocation(line: 1244, column: 2, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5957, file: !3, line: 1244, column: 2)
!5960 = !DILocation(line: 1244, column: 2, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5957, file: !3, line: 1244, column: 2)
!5962 = !{i32 -2141824177, i32 -2141824148, i32 -2141824102, i32 -2141824044, i32 -2141823990, i32 -2141823936, i32 -2141823881, i32 -2141823850}
!5963 = !DILocation(line: 1244, column: 2, scope: !5964)
!5964 = distinct !DILexicalBlock(scope: !5965, file: !3, line: 1244, column: 2)
!5965 = distinct !DILexicalBlock(scope: !5957, file: !3, line: 1244, column: 2)
!5966 = !{i32 -2141823401, i32 -2141823394, i32 -2141823340, i32 -2141823309, i32 -2141823279}
!5967 = !DILocation(line: 1244, column: 2, scope: !5965)
!5968 = !DILocation(line: 1245, column: 2, scope: !5925)
!5969 = !DILocation(line: 1245, column: 2, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5971, file: !3, line: 1245, column: 2)
!5971 = distinct !DILexicalBlock(scope: !5925, file: !3, line: 1245, column: 2)
!5972 = !DILocation(line: 1245, column: 2, scope: !5971)
!5973 = !DILocation(line: 1245, column: 2, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5970, file: !3, line: 1245, column: 2)
!5975 = !DILocation(line: 1245, column: 2, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5974, file: !3, line: 1245, column: 2)
!5977 = !DILocation(line: 1245, column: 2, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5974, file: !3, line: 1245, column: 2)
!5979 = !{i32 -2141822938, i32 -2141822909, i32 -2141822863, i32 -2141822805, i32 -2141822751, i32 -2141822697, i32 -2141822642, i32 -2141822611}
!5980 = !DILocation(line: 1245, column: 2, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5982, file: !3, line: 1245, column: 2)
!5982 = distinct !DILexicalBlock(scope: !5974, file: !3, line: 1245, column: 2)
!5983 = !{i32 -2141822162, i32 -2141822155, i32 -2141822101, i32 -2141822070, i32 -2141822040}
!5984 = !DILocation(line: 1245, column: 2, scope: !5982)
!5985 = !DILocation(line: 1246, column: 2, scope: !5925)
!5986 = !DILocation(line: 1246, column: 2, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5988, file: !3, line: 1246, column: 2)
!5988 = distinct !DILexicalBlock(scope: !5925, file: !3, line: 1246, column: 2)
!5989 = !DILocation(line: 1246, column: 2, scope: !5988)
!5990 = !DILocation(line: 1246, column: 2, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5987, file: !3, line: 1246, column: 2)
!5992 = !DILocation(line: 1246, column: 2, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5991, file: !3, line: 1246, column: 2)
!5994 = !DILocation(line: 1246, column: 2, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5991, file: !3, line: 1246, column: 2)
!5996 = !{i32 -2141821707, i32 -2141821678, i32 -2141821632, i32 -2141821574, i32 -2141821520, i32 -2141821466, i32 -2141821411, i32 -2141821380}
!5997 = !DILocation(line: 1246, column: 2, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5999, file: !3, line: 1246, column: 2)
!5999 = distinct !DILexicalBlock(scope: !5991, file: !3, line: 1246, column: 2)
!6000 = !{i32 -2141820931, i32 -2141820924, i32 -2141820870, i32 -2141820839, i32 -2141820809}
!6001 = !DILocation(line: 1246, column: 2, scope: !5999)
!6002 = !DILocation(line: 1248, column: 14, scope: !5925)
!6003 = !DILocation(line: 1248, column: 22, scope: !5925)
!6004 = !DILocation(line: 1248, column: 2, scope: !5925)
!6005 = !DILocation(line: 1249, column: 8, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !5925, file: !3, line: 1249, column: 6)
!6007 = !DILocation(line: 1249, column: 16, scope: !6006)
!6008 = !DILocation(line: 1249, column: 6, scope: !6006)
!6009 = !DILocation(line: 1249, column: 33, scope: !6006)
!6010 = !DILocation(line: 1249, column: 6, scope: !5925)
!6011 = !DILocation(line: 1250, column: 7, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6013, file: !3, line: 1250, column: 7)
!6013 = distinct !DILexicalBlock(scope: !6006, file: !3, line: 1249, column: 39)
!6014 = !DILocation(line: 1250, column: 15, scope: !6012)
!6015 = !DILocation(line: 1250, column: 20, scope: !6012)
!6016 = !DILocation(line: 1250, column: 7, scope: !6013)
!6017 = !DILocation(line: 1251, column: 4, scope: !6012)
!6018 = !DILocation(line: 1251, column: 12, scope: !6012)
!6019 = !DILocation(line: 1251, column: 17, scope: !6012)
!6020 = !DILocation(line: 1251, column: 24, scope: !6012)
!6021 = !DILocation(line: 1251, column: 32, scope: !6012)
!6022 = !DILocation(line: 1252, column: 3, scope: !6013)
!6023 = !DILocation(line: 1252, column: 11, scope: !6013)
!6024 = !DILocation(line: 1252, column: 20, scope: !6013)
!6025 = !DILocation(line: 1253, column: 2, scope: !6013)
!6026 = !DILocation(line: 1254, column: 16, scope: !5925)
!6027 = !DILocation(line: 1254, column: 24, scope: !5925)
!6028 = !DILocation(line: 1254, column: 2, scope: !5925)
!6029 = !DILocation(line: 1255, column: 1, scope: !5925)
!6030 = !DILocation(line: 1392, column: 16, scope: !4127)
!6031 = !DILocation(line: 1392, column: 14, scope: !4127)
!6032 = !DILocation(line: 1393, column: 13, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !4127, file: !3, line: 1393, column: 6)
!6034 = !DILocation(line: 1393, column: 6, scope: !6033)
!6035 = !DILocation(line: 1393, column: 6, scope: !4127)
!6036 = !DILocation(line: 1394, column: 18, scope: !6033)
!6037 = !DILocation(line: 1394, column: 10, scope: !6033)
!6038 = !DILocation(line: 1394, column: 3, scope: !6033)
!6039 = !DILocation(line: 1396, column: 2, scope: !4127)
!6040 = !DILocation(line: 1396, column: 2, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !4127, file: !3, line: 1396, column: 2)
!6042 = !DILocation(line: 1397, column: 2, scope: !4127)
!6043 = !DILocation(line: 1398, column: 2, scope: !4127)
!6044 = !DILocation(line: 1399, column: 2, scope: !4127)
!6045 = !DILocation(line: 1400, column: 1, scope: !4127)
!6046 = distinct !DISubprogram(name: "dma_buf_deinit", scope: !3, file: !3, line: 1403, type: !1764, scopeLine: 1404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6047 = !DILocation(line: 1405, column: 2, scope: !6046)
!6048 = !DILocation(line: 1406, column: 15, scope: !6046)
!6049 = !DILocation(line: 1406, column: 2, scope: !6046)
!6050 = !DILocation(line: 1407, column: 1, scope: !6046)
!6051 = distinct !DISubprogram(name: "dma_buf_uninit_debugfs", scope: !3, file: !3, line: 1385, type: !1764, scopeLine: 1386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6052 = !DILocation(line: 1387, column: 1, scope: !6051)
!6053 = distinct !DISubprogram(name: "get_order", scope: !6054, file: !6054, line: 29, type: !6055, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6054 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!6055 = !DISubroutineType(types: !6056)
!6056 = !{!152, !16}
!6057 = !DILocalVariable(name: "x", arg: 1, scope: !6058, file: !6059, line: 366, type: !92)
!6058 = distinct !DISubprogram(name: "fls64", scope: !6059, file: !6059, line: 366, type: !6060, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6059 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!6060 = !DISubroutineType(types: !6061)
!6061 = !{!152, !92}
!6062 = !DILocation(line: 366, column: 40, scope: !6058, inlinedAt: !6063)
!6063 = distinct !DILocation(line: 46, column: 9, scope: !6053)
!6064 = !DILocalVariable(name: "bitpos", scope: !6058, file: !6059, line: 368, type: !152)
!6065 = !DILocation(line: 368, column: 6, scope: !6058, inlinedAt: !6063)
!6066 = !DILocalVariable(name: "size", arg: 1, scope: !6053, file: !6054, line: 29, type: !16)
!6067 = !DILocation(line: 29, column: 63, scope: !6053)
!6068 = !DILocation(line: 31, column: 27, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6053, file: !6054, line: 31, column: 6)
!6070 = !DILocation(line: 31, column: 6, scope: !6069)
!6071 = !DILocation(line: 31, column: 6, scope: !6053)
!6072 = !DILocation(line: 32, column: 8, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6074, file: !6054, line: 32, column: 7)
!6074 = distinct !DILexicalBlock(scope: !6069, file: !6054, line: 31, column: 34)
!6075 = !DILocation(line: 32, column: 7, scope: !6074)
!6076 = !DILocation(line: 33, column: 4, scope: !6073)
!6077 = !DILocation(line: 35, column: 7, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6074, file: !6054, line: 35, column: 7)
!6079 = !DILocation(line: 35, column: 12, scope: !6078)
!6080 = !DILocation(line: 35, column: 7, scope: !6074)
!6081 = !DILocation(line: 36, column: 4, scope: !6078)
!6082 = !DILocation(line: 38, column: 10, scope: !6074)
!6083 = !DILocation(line: 38, column: 28, scope: !6074)
!6084 = !DILocation(line: 38, column: 41, scope: !6074)
!6085 = !DILocation(line: 38, column: 3, scope: !6074)
!6086 = !DILocation(line: 41, column: 6, scope: !6053)
!6087 = !DILocation(line: 42, column: 7, scope: !6053)
!6088 = !DILocation(line: 46, column: 15, scope: !6053)
!6089 = !DILocation(line: 374, column: 2, scope: !6058, inlinedAt: !6063)
!6090 = !DILocation(line: 376, column: 14, scope: !6058, inlinedAt: !6063)
!6091 = !{i32 478297}
!6092 = !DILocation(line: 377, column: 9, scope: !6058, inlinedAt: !6063)
!6093 = !DILocation(line: 377, column: 16, scope: !6058, inlinedAt: !6063)
!6094 = !DILocation(line: 46, column: 2, scope: !6053)
!6095 = !DILocation(line: 48, column: 1, scope: !6053)
!6096 = distinct !DISubprogram(name: "__ilog2_u64", scope: !6097, file: !6097, line: 30, type: !6098, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6097 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!6098 = !DISubroutineType(types: !6099)
!6099 = !{!152, !91}
!6100 = !DILocation(line: 366, column: 40, scope: !6058, inlinedAt: !6101)
!6101 = distinct !DILocation(line: 32, column: 9, scope: !6096)
!6102 = !DILocation(line: 368, column: 6, scope: !6058, inlinedAt: !6101)
!6103 = !DILocalVariable(name: "n", arg: 1, scope: !6096, file: !6097, line: 30, type: !91)
!6104 = !DILocation(line: 30, column: 21, scope: !6096)
!6105 = !DILocation(line: 32, column: 15, scope: !6096)
!6106 = !DILocation(line: 374, column: 2, scope: !6058, inlinedAt: !6101)
!6107 = !DILocation(line: 376, column: 14, scope: !6058, inlinedAt: !6101)
!6108 = !DILocation(line: 377, column: 9, scope: !6058, inlinedAt: !6101)
!6109 = !DILocation(line: 377, column: 16, scope: !6058, inlinedAt: !6101)
!6110 = !DILocation(line: 32, column: 18, scope: !6096)
!6111 = !DILocation(line: 32, column: 2, scope: !6096)
!6112 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !6113, file: !6113, line: 137, type: !6114, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6113 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!6114 = !DISubroutineType(types: !6115)
!6115 = !{!146, !999, !2015, !11, !828}
!6116 = !DILocalVariable(name: "s", arg: 1, scope: !6112, file: !6113, line: 137, type: !999)
!6117 = !DILocation(line: 137, column: 54, scope: !6112)
!6118 = !DILocalVariable(name: "object", arg: 2, scope: !6112, file: !6113, line: 137, type: !2015)
!6119 = !DILocation(line: 137, column: 69, scope: !6112)
!6120 = !DILocalVariable(name: "size", arg: 3, scope: !6112, file: !6113, line: 138, type: !11)
!6121 = !DILocation(line: 138, column: 12, scope: !6112)
!6122 = !DILocalVariable(name: "flags", arg: 4, scope: !6112, file: !6113, line: 138, type: !828)
!6123 = !DILocation(line: 138, column: 24, scope: !6112)
!6124 = !DILocation(line: 140, column: 17, scope: !6112)
!6125 = !DILocation(line: 140, column: 2, scope: !6112)
!6126 = distinct !DISubprogram(name: "ERR_CAST", scope: !4366, file: !4366, line: 51, type: !6127, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6127 = !DISubroutineType(types: !6128)
!6128 = !{!146, !2015}
!6129 = !DILocalVariable(name: "ptr", arg: 1, scope: !6126, file: !4366, line: 51, type: !2015)
!6130 = !DILocation(line: 51, column: 64, scope: !6126)
!6131 = !DILocation(line: 54, column: 18, scope: !6126)
!6132 = !DILocation(line: 54, column: 2, scope: !6126)
!6133 = distinct !DISubprogram(name: "dma_buf_llseek", scope: !3, file: !3, line: 136, type: !2769, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6134 = !DILocalVariable(name: "file", arg: 1, scope: !6133, file: !3, line: 136, type: !18)
!6135 = !DILocation(line: 136, column: 43, scope: !6133)
!6136 = !DILocalVariable(name: "offset", arg: 2, scope: !6133, file: !3, line: 136, type: !209)
!6137 = !DILocation(line: 136, column: 56, scope: !6133)
!6138 = !DILocalVariable(name: "whence", arg: 3, scope: !6133, file: !3, line: 136, type: !152)
!6139 = !DILocation(line: 136, column: 68, scope: !6133)
!6140 = !DILocalVariable(name: "dmabuf", scope: !6133, file: !3, line: 138, type: !6)
!6141 = !DILocation(line: 138, column: 18, scope: !6133)
!6142 = !DILocalVariable(name: "base", scope: !6133, file: !3, line: 139, type: !209)
!6143 = !DILocation(line: 139, column: 9, scope: !6133)
!6144 = !DILocation(line: 141, column: 23, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 141, column: 6)
!6146 = !DILocation(line: 141, column: 7, scope: !6145)
!6147 = !DILocation(line: 141, column: 6, scope: !6133)
!6148 = !DILocation(line: 142, column: 3, scope: !6145)
!6149 = !DILocation(line: 144, column: 11, scope: !6133)
!6150 = !DILocation(line: 144, column: 17, scope: !6133)
!6151 = !DILocation(line: 144, column: 9, scope: !6133)
!6152 = !DILocation(line: 149, column: 6, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 149, column: 6)
!6154 = !DILocation(line: 149, column: 13, scope: !6153)
!6155 = !DILocation(line: 149, column: 6, scope: !6133)
!6156 = !DILocation(line: 150, column: 10, scope: !6153)
!6157 = !DILocation(line: 150, column: 18, scope: !6153)
!6158 = !DILocation(line: 150, column: 8, scope: !6153)
!6159 = !DILocation(line: 150, column: 3, scope: !6153)
!6160 = !DILocation(line: 151, column: 11, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6153, file: !3, line: 151, column: 11)
!6162 = !DILocation(line: 151, column: 18, scope: !6161)
!6163 = !DILocation(line: 151, column: 11, scope: !6153)
!6164 = !DILocation(line: 152, column: 8, scope: !6161)
!6165 = !DILocation(line: 152, column: 3, scope: !6161)
!6166 = !DILocation(line: 154, column: 3, scope: !6161)
!6167 = !DILocation(line: 156, column: 6, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 156, column: 6)
!6169 = !DILocation(line: 156, column: 13, scope: !6168)
!6170 = !DILocation(line: 156, column: 6, scope: !6133)
!6171 = !DILocation(line: 157, column: 3, scope: !6168)
!6172 = !DILocation(line: 159, column: 9, scope: !6133)
!6173 = !DILocation(line: 159, column: 16, scope: !6133)
!6174 = !DILocation(line: 159, column: 14, scope: !6133)
!6175 = !DILocation(line: 159, column: 2, scope: !6133)
!6176 = !DILocation(line: 160, column: 1, scope: !6133)
!6177 = distinct !DISubprogram(name: "dma_buf_poll", scope: !3, file: !3, line: 195, type: !6178, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6178 = !DISubroutineType(types: !6179)
!6179 = !{!2803, !18, !6180}
!6180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6181, size: 64)
!6181 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_table", file: !2807, line: 46, baseType: !2806)
!6182 = !DILocalVariable(name: "lock", arg: 1, scope: !6183, file: !4142, line: 402, type: !1130)
!6183 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !4142, file: !4142, line: 402, type: !6184, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6184 = !DISubroutineType(types: !6185)
!6185 = !{null, !1130}
!6186 = !DILocation(line: 402, column: 57, scope: !6183, inlinedAt: !6187)
!6187 = distinct !DILocation(line: 276, column: 3, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6189, file: !3, line: 266, column: 47)
!6189 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 266, column: 6)
!6190 = !DILocalVariable(name: "lock", arg: 1, scope: !6191, file: !4142, line: 377, type: !1130)
!6191 = distinct !DISubprogram(name: "spin_lock_irq", scope: !4142, file: !4142, line: 377, type: !6184, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6192 = !DILocation(line: 377, column: 55, scope: !6191, inlinedAt: !6193)
!6193 = distinct !DILocation(line: 271, column: 3, scope: !6188)
!6194 = !DILocation(line: 402, column: 57, scope: !6183, inlinedAt: !6195)
!6195 = distinct !DILocation(line: 244, column: 3, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 231, column: 65)
!6197 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 231, column: 6)
!6198 = !DILocation(line: 377, column: 55, scope: !6191, inlinedAt: !6199)
!6199 = distinct !DILocation(line: 238, column: 3, scope: !6196)
!6200 = !DILocalVariable(name: "s", arg: 1, scope: !6201, file: !58, line: 280, type: !6205)
!6201 = distinct !DISubprogram(name: "__seqprop_ww_mutex_ptr", scope: !58, file: !58, line: 280, type: !6202, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6202 = !DISubroutineType(types: !6203)
!6203 = !{!6204, !6205}
!6204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64)
!6205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3973, size: 64)
!6206 = !DILocation(line: 280, column: 1, scope: !6201, inlinedAt: !6207)
!6207 = distinct !DILocation(line: 226, column: 6, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 226, column: 6)
!6209 = !DILocalVariable(name: "s", arg: 1, scope: !6210, file: !58, line: 280, type: !6213)
!6210 = distinct !DISubprogram(name: "__seqprop_ww_mutex_sequence", scope: !58, file: !58, line: 280, type: !6211, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6211 = !DISubroutineType(types: !6212)
!6212 = !{!55, !6213}
!6213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6214, size: 64)
!6214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3973)
!6215 = !DILocation(line: 280, column: 1, scope: !6210, inlinedAt: !6216)
!6216 = distinct !DILocation(line: 217, column: 8, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6218, file: !3, line: 217, column: 8)
!6218 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 217, column: 8)
!6219 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 217, column: 8)
!6220 = !DILocalVariable(name: "seq", scope: !6210, file: !58, line: 280, type: !55)
!6221 = !DILocalVariable(name: "file", arg: 1, scope: !6177, file: !3, line: 195, type: !18)
!6222 = !DILocation(line: 195, column: 43, scope: !6177)
!6223 = !DILocalVariable(name: "poll", arg: 2, scope: !6177, file: !3, line: 195, type: !6180)
!6224 = !DILocation(line: 195, column: 61, scope: !6177)
!6225 = !DILocalVariable(name: "dmabuf", scope: !6177, file: !3, line: 197, type: !6)
!6226 = !DILocation(line: 197, column: 18, scope: !6177)
!6227 = !DILocalVariable(name: "resv", scope: !6177, file: !3, line: 198, type: !3954)
!6228 = !DILocation(line: 198, column: 19, scope: !6177)
!6229 = !DILocalVariable(name: "fobj", scope: !6177, file: !3, line: 199, type: !4024)
!6230 = !DILocation(line: 199, column: 24, scope: !6177)
!6231 = !DILocalVariable(name: "fence_excl", scope: !6177, file: !3, line: 200, type: !3978)
!6232 = !DILocation(line: 200, column: 20, scope: !6177)
!6233 = !DILocalVariable(name: "events", scope: !6177, file: !3, line: 201, type: !2803)
!6234 = !DILocation(line: 201, column: 11, scope: !6177)
!6235 = !DILocalVariable(name: "shared_count", scope: !6177, file: !3, line: 202, type: !55)
!6236 = !DILocation(line: 202, column: 11, scope: !6177)
!6237 = !DILocalVariable(name: "seq", scope: !6177, file: !3, line: 202, type: !55)
!6238 = !DILocation(line: 202, column: 25, scope: !6177)
!6239 = !DILocation(line: 204, column: 11, scope: !6177)
!6240 = !DILocation(line: 204, column: 17, scope: !6177)
!6241 = !DILocation(line: 204, column: 9, scope: !6177)
!6242 = !DILocation(line: 205, column: 7, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 205, column: 6)
!6244 = !DILocation(line: 205, column: 14, scope: !6243)
!6245 = !DILocation(line: 205, column: 18, scope: !6243)
!6246 = !DILocation(line: 205, column: 26, scope: !6243)
!6247 = !DILocation(line: 205, column: 6, scope: !6177)
!6248 = !DILocation(line: 206, column: 3, scope: !6243)
!6249 = !DILocation(line: 208, column: 9, scope: !6177)
!6250 = !DILocation(line: 208, column: 17, scope: !6177)
!6251 = !DILocation(line: 208, column: 7, scope: !6177)
!6252 = !DILocation(line: 210, column: 12, scope: !6177)
!6253 = !DILocation(line: 210, column: 19, scope: !6177)
!6254 = !DILocation(line: 210, column: 27, scope: !6177)
!6255 = !DILocation(line: 210, column: 33, scope: !6177)
!6256 = !DILocation(line: 210, column: 2, scope: !6177)
!6257 = !DILocation(line: 212, column: 33, scope: !6177)
!6258 = !DILocation(line: 212, column: 11, scope: !6177)
!6259 = !DILocation(line: 212, column: 39, scope: !6177)
!6260 = !DILocation(line: 212, column: 9, scope: !6177)
!6261 = !DILocation(line: 213, column: 7, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 213, column: 6)
!6263 = !DILocation(line: 213, column: 6, scope: !6177)
!6264 = !DILocation(line: 214, column: 3, scope: !6262)
!6265 = !DILabel(scope: !6177, name: "retry", file: !3, line: 216)
!6266 = !DILocation(line: 216, column: 1, scope: !6177)
!6267 = !DILocalVariable(name: "seq", scope: !6218, file: !3, line: 217, type: !55)
!6268 = !DILocation(line: 217, column: 8, scope: !6218)
!6269 = !DILocalVariable(name: "seq", scope: !6217, file: !3, line: 217, type: !55)
!6270 = !DILocation(line: 217, column: 8, scope: !6217)
!6271 = !DILocation(line: 280, column: 1, scope: !6272, inlinedAt: !6216)
!6272 = distinct !DILexicalBlock(scope: !6210, file: !58, line: 280, column: 1)
!6273 = !DILocation(line: 280, column: 1, scope: !6274, inlinedAt: !6216)
!6274 = distinct !DILexicalBlock(scope: !6272, file: !58, line: 280, column: 1)
!6275 = !DILocation(line: 280, column: 1, scope: !6276, inlinedAt: !6216)
!6276 = distinct !DILexicalBlock(scope: !6210, file: !58, line: 280, column: 1)
!6277 = !DILocation(line: 13, column: 2, scope: !6278, inlinedAt: !6280)
!6278 = distinct !DISubprogram(name: "rep_nop", scope: !6279, file: !6279, line: 11, type: !1764, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6279 = !DIFile(filename: "./arch/x86/include/asm/vdso/processor.h", directory: "/home/lizy2001/genbc/linux")
!6280 = distinct !DILocation(line: 18, column: 2, scope: !6281, inlinedAt: !6282)
!6281 = distinct !DISubprogram(name: "cpu_relax", scope: !6279, file: !6279, line: 16, type: !1764, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6282 = distinct !DILocation(line: 217, column: 8, scope: !6217)
!6283 = !{i32 1948047}
!6284 = distinct !{!6284, !6270, !6270}
!6285 = !{i32 -2141871674}
!6286 = !DILocation(line: 217, column: 8, scope: !6177)
!6287 = !DILocation(line: 217, column: 8, scope: !6219)
!6288 = !DILocation(line: 217, column: 6, scope: !6177)
!6289 = !DILocation(line: 639, column: 2, scope: !6290, inlinedAt: !6292)
!6290 = distinct !DISubprogram(name: "rcu_read_lock", scope: !6291, file: !6291, line: 637, type: !1764, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6291 = !DIFile(filename: "./include/linux/rcupdate.h", directory: "/home/lizy2001/genbc/linux")
!6292 = distinct !DILocation(line: 218, column: 2, scope: !6177)
!6293 = !DILocalVariable(name: "________p1", scope: !6294, file: !3, line: 220, type: !4024)
!6294 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 220, column: 9)
!6295 = !DILocation(line: 220, column: 9, scope: !6294)
!6296 = !DILocation(line: 220, column: 9, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6294, file: !3, line: 220, column: 9)
!6298 = !DILocation(line: 220, column: 9, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6297, file: !3, line: 220, column: 9)
!6300 = !DILocation(line: 220, column: 9, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6294, file: !3, line: 220, column: 9)
!6302 = !DILocation(line: 220, column: 7, scope: !6177)
!6303 = !DILocation(line: 221, column: 6, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 221, column: 6)
!6305 = !DILocation(line: 221, column: 6, scope: !6177)
!6306 = !DILocation(line: 222, column: 18, scope: !6304)
!6307 = !DILocation(line: 222, column: 24, scope: !6304)
!6308 = !DILocation(line: 222, column: 16, scope: !6304)
!6309 = !DILocation(line: 222, column: 3, scope: !6304)
!6310 = !DILocation(line: 224, column: 16, scope: !6304)
!6311 = !DILocalVariable(name: "________p1", scope: !6312, file: !3, line: 225, type: !3978)
!6312 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 225, column: 15)
!6313 = !DILocation(line: 225, column: 15, scope: !6312)
!6314 = !DILocation(line: 225, column: 15, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6312, file: !3, line: 225, column: 15)
!6316 = !DILocation(line: 225, column: 15, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6315, file: !3, line: 225, column: 15)
!6318 = !DILocation(line: 225, column: 15, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6312, file: !3, line: 225, column: 15)
!6320 = !DILocation(line: 225, column: 13, scope: !6177)
!6321 = !DILocation(line: 226, column: 6, scope: !6208)
!6322 = !DILocation(line: 226, column: 6, scope: !6177)
!6323 = !DILocation(line: 227, column: 3, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 226, column: 44)
!6325 = !DILocation(line: 228, column: 3, scope: !6324)
!6326 = !DILocation(line: 231, column: 6, scope: !6197)
!6327 = !DILocation(line: 231, column: 17, scope: !6197)
!6328 = !DILocation(line: 231, column: 23, scope: !6197)
!6329 = !DILocation(line: 231, column: 30, scope: !6197)
!6330 = !DILocation(line: 231, column: 42, scope: !6197)
!6331 = !DILocation(line: 231, column: 45, scope: !6197)
!6332 = !DILocation(line: 231, column: 58, scope: !6197)
!6333 = !DILocation(line: 231, column: 6, scope: !6177)
!6334 = !DILocalVariable(name: "dcb", scope: !6196, file: !3, line: 232, type: !4096)
!6335 = !DILocation(line: 232, column: 29, scope: !6196)
!6336 = !DILocation(line: 232, column: 36, scope: !6196)
!6337 = !DILocation(line: 232, column: 44, scope: !6196)
!6338 = !DILocalVariable(name: "pevents", scope: !6196, file: !3, line: 233, type: !2803)
!6339 = !DILocation(line: 233, column: 12, scope: !6196)
!6340 = !DILocation(line: 235, column: 7, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6196, file: !3, line: 235, column: 7)
!6342 = !DILocation(line: 235, column: 20, scope: !6341)
!6343 = !DILocation(line: 235, column: 7, scope: !6196)
!6344 = !DILocation(line: 236, column: 12, scope: !6341)
!6345 = !DILocation(line: 236, column: 4, scope: !6341)
!6346 = !DILocation(line: 238, column: 18, scope: !6196)
!6347 = !DILocation(line: 238, column: 26, scope: !6196)
!6348 = !DILocation(line: 238, column: 31, scope: !6196)
!6349 = !DILocation(line: 379, column: 2, scope: !6350, inlinedAt: !6199)
!6350 = distinct !DILexicalBlock(scope: !6351, file: !4142, line: 379, column: 2)
!6351 = distinct !DILexicalBlock(scope: !6191, file: !4142, line: 379, column: 2)
!6352 = !DILocation(line: 379, column: 2, scope: !6353, inlinedAt: !6199)
!6353 = distinct !DILexicalBlock(scope: !6351, file: !4142, line: 379, column: 2)
!6354 = !{i32 -2145424250}
!6355 = !DILocation(line: 379, column: 2, scope: !6356, inlinedAt: !6199)
!6356 = distinct !DILexicalBlock(scope: !6353, file: !4142, line: 379, column: 2)
!6357 = !DILocation(line: 239, column: 7, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6196, file: !3, line: 239, column: 7)
!6359 = !DILocation(line: 239, column: 12, scope: !6358)
!6360 = !DILocation(line: 239, column: 7, scope: !6196)
!6361 = !DILocation(line: 240, column: 19, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6358, file: !3, line: 239, column: 20)
!6363 = !DILocation(line: 240, column: 4, scope: !6362)
!6364 = !DILocation(line: 240, column: 9, scope: !6362)
!6365 = !DILocation(line: 240, column: 16, scope: !6362)
!6366 = !DILocation(line: 241, column: 15, scope: !6362)
!6367 = !DILocation(line: 241, column: 14, scope: !6362)
!6368 = !DILocation(line: 241, column: 11, scope: !6362)
!6369 = !DILocation(line: 242, column: 3, scope: !6362)
!6370 = !DILocation(line: 243, column: 18, scope: !6358)
!6371 = !DILocation(line: 243, column: 4, scope: !6358)
!6372 = !DILocation(line: 243, column: 9, scope: !6358)
!6373 = !DILocation(line: 243, column: 16, scope: !6358)
!6374 = !DILocation(line: 244, column: 20, scope: !6196)
!6375 = !DILocation(line: 244, column: 28, scope: !6196)
!6376 = !DILocation(line: 244, column: 33, scope: !6196)
!6377 = !DILocation(line: 404, column: 2, scope: !6378, inlinedAt: !6195)
!6378 = distinct !DILexicalBlock(scope: !6379, file: !4142, line: 404, column: 2)
!6379 = distinct !DILexicalBlock(scope: !6183, file: !4142, line: 404, column: 2)
!6380 = !DILocation(line: 404, column: 2, scope: !6381, inlinedAt: !6195)
!6381 = distinct !DILexicalBlock(scope: !6379, file: !4142, line: 404, column: 2)
!6382 = !{i32 -2145422502}
!6383 = !DILocation(line: 404, column: 2, scope: !6384, inlinedAt: !6195)
!6384 = distinct !DILexicalBlock(scope: !6381, file: !4142, line: 404, column: 2)
!6385 = !DILocation(line: 246, column: 7, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6196, file: !3, line: 246, column: 7)
!6387 = !DILocation(line: 246, column: 16, scope: !6386)
!6388 = !DILocation(line: 246, column: 14, scope: !6386)
!6389 = !DILocation(line: 246, column: 7, scope: !6196)
!6390 = !DILocation(line: 247, column: 27, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 247, column: 8)
!6392 = distinct !DILexicalBlock(scope: !6386, file: !3, line: 246, column: 25)
!6393 = !DILocation(line: 247, column: 9, scope: !6391)
!6394 = !DILocation(line: 247, column: 8, scope: !6392)
!6395 = !DILocation(line: 249, column: 16, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 247, column: 40)
!6397 = !DILocation(line: 249, column: 15, scope: !6396)
!6398 = !DILocation(line: 249, column: 12, scope: !6396)
!6399 = !DILocation(line: 250, column: 28, scope: !6396)
!6400 = !DILocation(line: 250, column: 33, scope: !6396)
!6401 = !DILocation(line: 250, column: 5, scope: !6396)
!6402 = !DILocation(line: 251, column: 4, scope: !6396)
!6403 = !DILocation(line: 251, column: 39, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 251, column: 15)
!6405 = !DILocation(line: 251, column: 52, scope: !6404)
!6406 = !DILocation(line: 251, column: 57, scope: !6404)
!6407 = !DILocation(line: 251, column: 16, scope: !6404)
!6408 = !DILocation(line: 251, column: 15, scope: !6391)
!6409 = !DILocation(line: 253, column: 16, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6404, file: !3, line: 252, column: 29)
!6411 = !DILocation(line: 253, column: 15, scope: !6410)
!6412 = !DILocation(line: 253, column: 12, scope: !6410)
!6413 = !DILocation(line: 254, column: 19, scope: !6410)
!6414 = !DILocation(line: 254, column: 5, scope: !6410)
!6415 = !DILocation(line: 255, column: 4, scope: !6410)
!6416 = !DILocation(line: 260, column: 19, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6404, file: !3, line: 255, column: 11)
!6418 = !DILocation(line: 260, column: 5, scope: !6417)
!6419 = !DILocation(line: 261, column: 28, scope: !6417)
!6420 = !DILocation(line: 261, column: 33, scope: !6417)
!6421 = !DILocation(line: 261, column: 5, scope: !6417)
!6422 = !DILocation(line: 263, column: 3, scope: !6392)
!6423 = !DILocation(line: 264, column: 2, scope: !6196)
!6424 = !DILocation(line: 266, column: 7, scope: !6189)
!6425 = !DILocation(line: 266, column: 14, scope: !6189)
!6426 = !DILocation(line: 266, column: 26, scope: !6189)
!6427 = !DILocation(line: 266, column: 29, scope: !6189)
!6428 = !DILocation(line: 266, column: 42, scope: !6189)
!6429 = !DILocation(line: 266, column: 6, scope: !6177)
!6430 = !DILocalVariable(name: "dcb", scope: !6188, file: !3, line: 267, type: !4096)
!6431 = !DILocation(line: 267, column: 29, scope: !6188)
!6432 = !DILocation(line: 267, column: 36, scope: !6188)
!6433 = !DILocation(line: 267, column: 44, scope: !6188)
!6434 = !DILocalVariable(name: "i", scope: !6188, file: !3, line: 268, type: !152)
!6435 = !DILocation(line: 268, column: 7, scope: !6188)
!6436 = !DILocation(line: 271, column: 18, scope: !6188)
!6437 = !DILocation(line: 271, column: 26, scope: !6188)
!6438 = !DILocation(line: 271, column: 31, scope: !6188)
!6439 = !DILocation(line: 379, column: 2, scope: !6350, inlinedAt: !6193)
!6440 = !DILocation(line: 379, column: 2, scope: !6353, inlinedAt: !6193)
!6441 = !DILocation(line: 379, column: 2, scope: !6356, inlinedAt: !6193)
!6442 = !DILocation(line: 272, column: 7, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 272, column: 7)
!6444 = !DILocation(line: 272, column: 12, scope: !6443)
!6445 = !DILocation(line: 272, column: 7, scope: !6188)
!6446 = !DILocation(line: 273, column: 11, scope: !6443)
!6447 = !DILocation(line: 273, column: 4, scope: !6443)
!6448 = !DILocation(line: 275, column: 4, scope: !6443)
!6449 = !DILocation(line: 275, column: 9, scope: !6443)
!6450 = !DILocation(line: 275, column: 16, scope: !6443)
!6451 = !DILocation(line: 276, column: 20, scope: !6188)
!6452 = !DILocation(line: 276, column: 28, scope: !6188)
!6453 = !DILocation(line: 276, column: 33, scope: !6188)
!6454 = !DILocation(line: 404, column: 2, scope: !6378, inlinedAt: !6187)
!6455 = !DILocation(line: 404, column: 2, scope: !6381, inlinedAt: !6187)
!6456 = !DILocation(line: 404, column: 2, scope: !6384, inlinedAt: !6187)
!6457 = !DILocation(line: 278, column: 9, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 278, column: 7)
!6459 = !DILocation(line: 278, column: 16, scope: !6458)
!6460 = !DILocation(line: 278, column: 7, scope: !6188)
!6461 = !DILocation(line: 279, column: 4, scope: !6458)
!6462 = !DILocation(line: 281, column: 10, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 281, column: 3)
!6464 = !DILocation(line: 281, column: 8, scope: !6463)
!6465 = !DILocation(line: 281, column: 15, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 281, column: 3)
!6467 = !DILocation(line: 281, column: 19, scope: !6466)
!6468 = !DILocation(line: 281, column: 17, scope: !6466)
!6469 = !DILocation(line: 281, column: 3, scope: !6463)
!6470 = !DILocalVariable(name: "fence", scope: !6471, file: !3, line: 282, type: !3978)
!6471 = distinct !DILexicalBlock(scope: !6466, file: !3, line: 281, column: 38)
!6472 = !DILocation(line: 282, column: 22, scope: !6471)
!6473 = !DILocalVariable(name: "________p1", scope: !6474, file: !3, line: 282, type: !3978)
!6474 = distinct !DILexicalBlock(scope: !6471, file: !3, line: 282, column: 30)
!6475 = !DILocation(line: 282, column: 30, scope: !6474)
!6476 = !DILocation(line: 282, column: 30, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6474, file: !3, line: 282, column: 30)
!6478 = !DILocation(line: 282, column: 30, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6477, file: !3, line: 282, column: 30)
!6480 = !DILocation(line: 282, column: 30, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6474, file: !3, line: 282, column: 30)
!6482 = !DILocation(line: 284, column: 27, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6471, file: !3, line: 284, column: 8)
!6484 = !DILocation(line: 284, column: 9, scope: !6483)
!6485 = !DILocation(line: 284, column: 8, scope: !6471)
!6486 = !DILocation(line: 291, column: 12, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6483, file: !3, line: 284, column: 35)
!6488 = !DILocation(line: 292, column: 28, scope: !6487)
!6489 = !DILocation(line: 292, column: 33, scope: !6487)
!6490 = !DILocation(line: 292, column: 5, scope: !6487)
!6491 = !DILocation(line: 293, column: 5, scope: !6487)
!6492 = !DILocation(line: 295, column: 32, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6471, file: !3, line: 295, column: 8)
!6494 = !DILocation(line: 295, column: 40, scope: !6493)
!6495 = !DILocation(line: 295, column: 45, scope: !6493)
!6496 = !DILocation(line: 295, column: 9, scope: !6493)
!6497 = !DILocation(line: 295, column: 8, scope: !6471)
!6498 = !DILocation(line: 297, column: 19, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6493, file: !3, line: 296, column: 29)
!6500 = !DILocation(line: 297, column: 5, scope: !6499)
!6501 = !DILocation(line: 298, column: 12, scope: !6499)
!6502 = !DILocation(line: 299, column: 5, scope: !6499)
!6503 = !DILocation(line: 301, column: 18, scope: !6471)
!6504 = !DILocation(line: 301, column: 4, scope: !6471)
!6505 = !DILocation(line: 302, column: 3, scope: !6471)
!6506 = !DILocation(line: 281, column: 33, scope: !6466)
!6507 = !DILocation(line: 281, column: 3, scope: !6466)
!6508 = distinct !{!6508, !6469, !6509}
!6509 = !DILocation(line: 302, column: 3, scope: !6463)
!6510 = !DILocation(line: 305, column: 7, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 305, column: 7)
!6512 = !DILocation(line: 305, column: 12, scope: !6511)
!6513 = !DILocation(line: 305, column: 9, scope: !6511)
!6514 = !DILocation(line: 305, column: 7, scope: !6188)
!6515 = !DILocation(line: 306, column: 27, scope: !6511)
!6516 = !DILocation(line: 306, column: 32, scope: !6511)
!6517 = !DILocation(line: 306, column: 4, scope: !6511)
!6518 = !DILocation(line: 307, column: 2, scope: !6188)
!6519 = !DILocation(line: 266, column: 44, scope: !6189)
!6520 = !DILabel(scope: !6177, name: "out", file: !3, line: 309)
!6521 = !DILocation(line: 309, column: 1, scope: !6177)
!6522 = !DILocation(line: 310, column: 2, scope: !6177)
!6523 = !DILocation(line: 311, column: 9, scope: !6177)
!6524 = !DILocation(line: 311, column: 2, scope: !6177)
!6525 = !DILocation(line: 312, column: 1, scope: !6177)
!6526 = distinct !DISubprogram(name: "dma_buf_ioctl", scope: !3, file: !3, line: 353, type: !2818, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6527 = !DILocalVariable(name: "addr", arg: 1, scope: !6528, file: !6529, line: 138, type: !2015)
!6528 = distinct !DISubprogram(name: "check_copy_size", scope: !6529, file: !6529, line: 138, type: !6530, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6529 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!6530 = !DISubroutineType(types: !6531)
!6531 = !{!168, !2015, !11, !168}
!6532 = !DILocation(line: 138, column: 29, scope: !6528, inlinedAt: !6533)
!6533 = distinct !DILocation(line: 191, column: 6, scope: !6534, inlinedAt: !6539)
!6534 = distinct !DILexicalBlock(scope: !6536, file: !6535, line: 191, column: 6)
!6535 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!6536 = distinct !DISubprogram(name: "copy_from_user", scope: !6535, file: !6535, line: 189, type: !6537, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6537 = !DISubroutineType(types: !6538)
!6538 = !{!16, !146, !2015, !16}
!6539 = distinct !DILocation(line: 365, column: 7, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 365, column: 7)
!6541 = distinct !DILexicalBlock(scope: !6526, file: !3, line: 363, column: 15)
!6542 = !DILocalVariable(name: "bytes", arg: 2, scope: !6528, file: !6529, line: 138, type: !11)
!6543 = !DILocation(line: 138, column: 42, scope: !6528, inlinedAt: !6533)
!6544 = !DILocalVariable(name: "is_source", arg: 3, scope: !6528, file: !6529, line: 138, type: !168)
!6545 = !DILocation(line: 138, column: 54, scope: !6528, inlinedAt: !6533)
!6546 = !DILocalVariable(name: "sz", scope: !6528, file: !6529, line: 140, type: !152)
!6547 = !DILocation(line: 140, column: 6, scope: !6528, inlinedAt: !6533)
!6548 = !DILocalVariable(name: "__ret_warn_on", scope: !6549, file: !6529, line: 150, type: !152)
!6549 = distinct !DILexicalBlock(scope: !6550, file: !6529, line: 150, column: 6)
!6550 = distinct !DILexicalBlock(scope: !6528, file: !6529, line: 150, column: 6)
!6551 = !DILocation(line: 150, column: 6, scope: !6549, inlinedAt: !6533)
!6552 = !DILocalVariable(name: "to", arg: 1, scope: !6536, file: !6535, line: 189, type: !146)
!6553 = !DILocation(line: 189, column: 22, scope: !6536, inlinedAt: !6539)
!6554 = !DILocalVariable(name: "from", arg: 2, scope: !6536, file: !6535, line: 189, type: !2015)
!6555 = !DILocation(line: 189, column: 45, scope: !6536, inlinedAt: !6539)
!6556 = !DILocalVariable(name: "n", arg: 3, scope: !6536, file: !6535, line: 189, type: !16)
!6557 = !DILocation(line: 189, column: 65, scope: !6536, inlinedAt: !6539)
!6558 = !DILocalVariable(name: "file", arg: 1, scope: !6526, file: !3, line: 353, type: !18)
!6559 = !DILocation(line: 353, column: 40, scope: !6526)
!6560 = !DILocalVariable(name: "cmd", arg: 2, scope: !6526, file: !3, line: 354, type: !55)
!6561 = !DILocation(line: 354, column: 19, scope: !6526)
!6562 = !DILocalVariable(name: "arg", arg: 3, scope: !6526, file: !3, line: 354, type: !16)
!6563 = !DILocation(line: 354, column: 38, scope: !6526)
!6564 = !DILocalVariable(name: "dmabuf", scope: !6526, file: !3, line: 356, type: !6)
!6565 = !DILocation(line: 356, column: 18, scope: !6526)
!6566 = !DILocalVariable(name: "sync", scope: !6526, file: !3, line: 357, type: !6567)
!6567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_buf_sync", file: !6568, line: 26, size: 64, elements: !6569)
!6568 = !DIFile(filename: "./include/uapi/linux/dma-buf.h", directory: "/home/lizy2001/genbc/linux")
!6569 = !{!6570}
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6567, file: !6568, line: 27, baseType: !92, size: 64)
!6571 = !DILocation(line: 357, column: 22, scope: !6526)
!6572 = !DILocalVariable(name: "direction", scope: !6526, file: !3, line: 358, type: !3886)
!6573 = !DILocation(line: 358, column: 26, scope: !6526)
!6574 = !DILocalVariable(name: "ret", scope: !6526, file: !3, line: 359, type: !152)
!6575 = !DILocation(line: 359, column: 6, scope: !6526)
!6576 = !DILocation(line: 361, column: 11, scope: !6526)
!6577 = !DILocation(line: 361, column: 17, scope: !6526)
!6578 = !DILocation(line: 361, column: 9, scope: !6526)
!6579 = !DILocation(line: 363, column: 10, scope: !6526)
!6580 = !DILocation(line: 363, column: 2, scope: !6526)
!6581 = !DILocation(line: 365, column: 22, scope: !6540)
!6582 = !DILocation(line: 365, column: 45, scope: !6540)
!6583 = !DILocation(line: 365, column: 29, scope: !6540)
!6584 = !DILocation(line: 191, column: 6, scope: !6534, inlinedAt: !6539)
!6585 = !DILocation(line: 141, column: 6, scope: !6586, inlinedAt: !6533)
!6586 = distinct !DILexicalBlock(scope: !6528, file: !6529, line: 141, column: 6)
!6587 = !DILocation(line: 0, scope: !6586, inlinedAt: !6533)
!6588 = !DILocation(line: 141, column: 6, scope: !6528, inlinedAt: !6533)
!6589 = !DILocation(line: 142, column: 29, scope: !6590, inlinedAt: !6533)
!6590 = distinct !DILexicalBlock(scope: !6591, file: !6529, line: 142, column: 7)
!6591 = distinct !DILexicalBlock(scope: !6586, file: !6529, line: 141, column: 39)
!6592 = !DILocation(line: 142, column: 8, scope: !6590, inlinedAt: !6533)
!6593 = !DILocation(line: 142, column: 7, scope: !6591, inlinedAt: !6533)
!6594 = !DILocation(line: 143, column: 18, scope: !6590, inlinedAt: !6533)
!6595 = !DILocation(line: 143, column: 22, scope: !6590, inlinedAt: !6533)
!6596 = !DILocation(line: 143, column: 4, scope: !6590, inlinedAt: !6533)
!6597 = !DILocation(line: 144, column: 12, scope: !6598, inlinedAt: !6533)
!6598 = distinct !DILexicalBlock(scope: !6590, file: !6529, line: 144, column: 12)
!6599 = !DILocation(line: 144, column: 12, scope: !6590, inlinedAt: !6533)
!6600 = !DILocation(line: 145, column: 4, scope: !6598, inlinedAt: !6533)
!6601 = !DILocation(line: 147, column: 4, scope: !6598, inlinedAt: !6533)
!6602 = !DILocation(line: 148, column: 3, scope: !6591, inlinedAt: !6533)
!6603 = !DILocation(line: 150, column: 6, scope: !6604, inlinedAt: !6533)
!6604 = distinct !DILexicalBlock(scope: !6549, file: !6529, line: 150, column: 6)
!6605 = !DILocation(line: 150, column: 6, scope: !6606, inlinedAt: !6533)
!6606 = distinct !DILexicalBlock(scope: !6607, file: !6529, line: 150, column: 6)
!6607 = distinct !DILexicalBlock(scope: !6604, file: !6529, line: 150, column: 6)
!6608 = !{i32 -2145503900, i32 -2145503871, i32 -2145503825, i32 -2145503767, i32 -2145503713, i32 -2145503659, i32 -2145503604, i32 -2145503573}
!6609 = !DILocation(line: 150, column: 6, scope: !6610, inlinedAt: !6533)
!6610 = distinct !DILexicalBlock(scope: !6607, file: !6529, line: 150, column: 6)
!6611 = !{i32 -2145503153, i32 -2145503146, i32 -2145503094, i32 -2145503063, i32 -2145503033}
!6612 = !DILocation(line: 150, column: 6, scope: !6607, inlinedAt: !6533)
!6613 = !DILocation(line: 150, column: 6, scope: !6550, inlinedAt: !6533)
!6614 = !DILocation(line: 150, column: 6, scope: !6528, inlinedAt: !6533)
!6615 = !DILocation(line: 151, column: 3, scope: !6550, inlinedAt: !6533)
!6616 = !DILocation(line: 152, column: 20, scope: !6528, inlinedAt: !6533)
!6617 = !DILocation(line: 152, column: 26, scope: !6528, inlinedAt: !6533)
!6618 = !DILocation(line: 152, column: 33, scope: !6528, inlinedAt: !6533)
!6619 = !DILocation(line: 152, column: 2, scope: !6528, inlinedAt: !6533)
!6620 = !DILocation(line: 153, column: 2, scope: !6528, inlinedAt: !6533)
!6621 = !DILocation(line: 154, column: 1, scope: !6528, inlinedAt: !6533)
!6622 = !DILocation(line: 191, column: 6, scope: !6536, inlinedAt: !6539)
!6623 = !DILocation(line: 192, column: 23, scope: !6534, inlinedAt: !6539)
!6624 = !DILocation(line: 192, column: 27, scope: !6534, inlinedAt: !6539)
!6625 = !DILocation(line: 192, column: 33, scope: !6534, inlinedAt: !6539)
!6626 = !DILocation(line: 192, column: 7, scope: !6534, inlinedAt: !6539)
!6627 = !DILocation(line: 192, column: 5, scope: !6534, inlinedAt: !6539)
!6628 = !DILocation(line: 192, column: 3, scope: !6534, inlinedAt: !6539)
!6629 = !DILocation(line: 193, column: 9, scope: !6536, inlinedAt: !6539)
!6630 = !DILocation(line: 365, column: 7, scope: !6540)
!6631 = !DILocation(line: 365, column: 7, scope: !6541)
!6632 = !DILocation(line: 366, column: 4, scope: !6540)
!6633 = !DILocation(line: 368, column: 12, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 368, column: 7)
!6635 = !DILocation(line: 368, column: 18, scope: !6634)
!6636 = !DILocation(line: 368, column: 7, scope: !6541)
!6637 = !DILocation(line: 369, column: 4, scope: !6634)
!6638 = !DILocation(line: 371, column: 16, scope: !6541)
!6639 = !DILocation(line: 371, column: 22, scope: !6541)
!6640 = !DILocation(line: 371, column: 3, scope: !6541)
!6641 = !DILocation(line: 373, column: 14, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 371, column: 41)
!6643 = !DILocation(line: 374, column: 4, scope: !6642)
!6644 = !DILocation(line: 376, column: 14, scope: !6642)
!6645 = !DILocation(line: 377, column: 4, scope: !6642)
!6646 = !DILocation(line: 379, column: 14, scope: !6642)
!6647 = !DILocation(line: 380, column: 4, scope: !6642)
!6648 = !DILocation(line: 382, column: 4, scope: !6642)
!6649 = !DILocation(line: 385, column: 12, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 385, column: 7)
!6651 = !DILocation(line: 385, column: 18, scope: !6650)
!6652 = !DILocation(line: 385, column: 7, scope: !6541)
!6653 = !DILocation(line: 386, column: 33, scope: !6650)
!6654 = !DILocation(line: 386, column: 41, scope: !6650)
!6655 = !DILocation(line: 386, column: 10, scope: !6650)
!6656 = !DILocation(line: 386, column: 8, scope: !6650)
!6657 = !DILocation(line: 386, column: 4, scope: !6650)
!6658 = !DILocation(line: 388, column: 35, scope: !6650)
!6659 = !DILocation(line: 388, column: 43, scope: !6650)
!6660 = !DILocation(line: 388, column: 10, scope: !6650)
!6661 = !DILocation(line: 388, column: 8, scope: !6650)
!6662 = !DILocation(line: 390, column: 10, scope: !6541)
!6663 = !DILocation(line: 390, column: 3, scope: !6541)
!6664 = !DILocation(line: 394, column: 27, scope: !6541)
!6665 = !DILocation(line: 394, column: 56, scope: !6541)
!6666 = !DILocation(line: 394, column: 35, scope: !6541)
!6667 = !DILocation(line: 394, column: 10, scope: !6541)
!6668 = !DILocation(line: 394, column: 3, scope: !6541)
!6669 = !DILocation(line: 397, column: 3, scope: !6541)
!6670 = !DILocation(line: 399, column: 1, scope: !6526)
!6671 = distinct !DISubprogram(name: "dma_buf_mmap_internal", scope: !3, file: !3, line: 115, type: !2823, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6672 = !DILocalVariable(name: "file", arg: 1, scope: !6671, file: !3, line: 115, type: !18)
!6673 = !DILocation(line: 115, column: 47, scope: !6671)
!6674 = !DILocalVariable(name: "vma", arg: 2, scope: !6671, file: !3, line: 115, type: !1046)
!6675 = !DILocation(line: 115, column: 76, scope: !6671)
!6676 = !DILocalVariable(name: "dmabuf", scope: !6671, file: !3, line: 117, type: !6)
!6677 = !DILocation(line: 117, column: 18, scope: !6671)
!6678 = !DILocation(line: 119, column: 23, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6671, file: !3, line: 119, column: 6)
!6680 = !DILocation(line: 119, column: 7, scope: !6679)
!6681 = !DILocation(line: 119, column: 6, scope: !6671)
!6682 = !DILocation(line: 120, column: 3, scope: !6679)
!6683 = !DILocation(line: 122, column: 11, scope: !6671)
!6684 = !DILocation(line: 122, column: 17, scope: !6671)
!6685 = !DILocation(line: 122, column: 9, scope: !6671)
!6686 = !DILocation(line: 125, column: 7, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6671, file: !3, line: 125, column: 6)
!6688 = !DILocation(line: 125, column: 15, scope: !6687)
!6689 = !DILocation(line: 125, column: 20, scope: !6687)
!6690 = !DILocation(line: 125, column: 6, scope: !6671)
!6691 = !DILocation(line: 126, column: 3, scope: !6687)
!6692 = !DILocation(line: 129, column: 6, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6671, file: !3, line: 129, column: 6)
!6694 = !DILocation(line: 129, column: 11, scope: !6693)
!6695 = !DILocation(line: 129, column: 32, scope: !6693)
!6696 = !DILocation(line: 129, column: 22, scope: !6693)
!6697 = !DILocation(line: 129, column: 20, scope: !6693)
!6698 = !DILocation(line: 130, column: 6, scope: !6693)
!6699 = !DILocation(line: 130, column: 14, scope: !6693)
!6700 = !DILocation(line: 130, column: 19, scope: !6693)
!6701 = !DILocation(line: 129, column: 37, scope: !6693)
!6702 = !DILocation(line: 129, column: 6, scope: !6671)
!6703 = !DILocation(line: 131, column: 3, scope: !6693)
!6704 = !DILocation(line: 133, column: 9, scope: !6671)
!6705 = !DILocation(line: 133, column: 17, scope: !6671)
!6706 = !DILocation(line: 133, column: 22, scope: !6671)
!6707 = !DILocation(line: 133, column: 27, scope: !6671)
!6708 = !DILocation(line: 133, column: 35, scope: !6671)
!6709 = !DILocation(line: 133, column: 2, scope: !6671)
!6710 = !DILocation(line: 134, column: 1, scope: !6671)
!6711 = distinct !DISubprogram(name: "dma_buf_show_fdinfo", scope: !3, file: !3, line: 401, type: !2981, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6712 = !DILocalVariable(name: "lock", arg: 1, scope: !6713, file: !4142, line: 392, type: !1130)
!6713 = distinct !DISubprogram(name: "spin_unlock", scope: !4142, file: !4142, line: 392, type: !6184, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6714 = !DILocation(line: 392, column: 53, scope: !6713, inlinedAt: !6715)
!6715 = distinct !DILocation(line: 412, column: 2, scope: !6711)
!6716 = !DILocalVariable(name: "lock", arg: 1, scope: !6717, file: !4142, line: 352, type: !1130)
!6717 = distinct !DISubprogram(name: "spin_lock", scope: !4142, file: !4142, line: 352, type: !6184, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6718 = !DILocation(line: 352, column: 51, scope: !6717, inlinedAt: !6719)
!6719 = distinct !DILocation(line: 409, column: 2, scope: !6711)
!6720 = !DILocalVariable(name: "v", arg: 1, scope: !6721, file: !5765, line: 69, type: !5768)
!6721 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !5765, file: !5765, line: 69, type: !5766, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6722 = !DILocation(line: 69, column: 73, scope: !6721, inlinedAt: !6723)
!6723 = distinct !DILocation(line: 837, column: 2, scope: !6724, inlinedAt: !6729)
!6724 = distinct !DISubprogram(name: "atomic64_read", scope: !5757, file: !5757, line: 835, type: !6725, scopeLine: 836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6725 = !DISubroutineType(types: !6726)
!6726 = !{!377, !6727}
!6727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6728, size: 64)
!6728 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !373)
!6729 = distinct !DILocation(line: 29, column: 9, scope: !6730, inlinedAt: !6735)
!6730 = distinct !DISubprogram(name: "atomic_long_read", scope: !372, file: !372, line: 27, type: !6731, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6731 = !DISubroutineType(types: !6732)
!6732 = !{!220, !6733}
!6733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6734, size: 64)
!6734 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !371)
!6735 = distinct !DILocation(line: 407, column: 33, scope: !6711)
!6736 = !DILocalVariable(name: "size", arg: 2, scope: !6721, file: !5765, line: 69, type: !11)
!6737 = !DILocation(line: 69, column: 83, scope: !6721, inlinedAt: !6723)
!6738 = !DILocalVariable(name: "v", arg: 1, scope: !6724, file: !5757, line: 835, type: !6727)
!6739 = !DILocation(line: 835, column: 33, scope: !6724, inlinedAt: !6729)
!6740 = !DILocalVariable(name: "v", arg: 1, scope: !6730, file: !372, line: 27, type: !6733)
!6741 = !DILocation(line: 27, column: 39, scope: !6730, inlinedAt: !6735)
!6742 = !DILocalVariable(name: "m", arg: 1, scope: !6711, file: !3, line: 401, type: !759)
!6743 = !DILocation(line: 401, column: 50, scope: !6711)
!6744 = !DILocalVariable(name: "file", arg: 2, scope: !6711, file: !3, line: 401, type: !18)
!6745 = !DILocation(line: 401, column: 66, scope: !6711)
!6746 = !DILocalVariable(name: "dmabuf", scope: !6711, file: !3, line: 403, type: !6)
!6747 = !DILocation(line: 403, column: 18, scope: !6711)
!6748 = !DILocation(line: 403, column: 27, scope: !6711)
!6749 = !DILocation(line: 403, column: 33, scope: !6711)
!6750 = !DILocation(line: 405, column: 13, scope: !6711)
!6751 = !DILocation(line: 405, column: 32, scope: !6711)
!6752 = !DILocation(line: 405, column: 40, scope: !6711)
!6753 = !DILocation(line: 405, column: 2, scope: !6711)
!6754 = !DILocation(line: 407, column: 13, scope: !6711)
!6755 = !DILocation(line: 407, column: 33, scope: !6711)
!6756 = !DILocation(line: 29, column: 23, scope: !6730, inlinedAt: !6735)
!6757 = !DILocation(line: 837, column: 25, scope: !6724, inlinedAt: !6729)
!6758 = !DILocation(line: 71, column: 19, scope: !6721, inlinedAt: !6723)
!6759 = !DILocation(line: 71, column: 22, scope: !6721, inlinedAt: !6723)
!6760 = !DILocation(line: 71, column: 2, scope: !6721, inlinedAt: !6723)
!6761 = !DILocation(line: 72, column: 2, scope: !6721, inlinedAt: !6723)
!6762 = !DILocation(line: 838, column: 28, scope: !6724, inlinedAt: !6729)
!6763 = !DILocation(line: 838, column: 9, scope: !6724, inlinedAt: !6729)
!6764 = !DILocation(line: 407, column: 58, scope: !6711)
!6765 = !DILocation(line: 407, column: 2, scope: !6711)
!6766 = !DILocation(line: 408, column: 13, scope: !6711)
!6767 = !DILocation(line: 408, column: 35, scope: !6711)
!6768 = !DILocation(line: 408, column: 43, scope: !6711)
!6769 = !DILocation(line: 408, column: 2, scope: !6711)
!6770 = !DILocation(line: 409, column: 13, scope: !6711)
!6771 = !DILocation(line: 409, column: 21, scope: !6711)
!6772 = !DILocation(line: 354, column: 2, scope: !6773, inlinedAt: !6719)
!6773 = distinct !DILexicalBlock(scope: !6717, file: !4142, line: 354, column: 2)
!6774 = !{i32 -2145426145}
!6775 = !DILocation(line: 354, column: 2, scope: !6776, inlinedAt: !6719)
!6776 = distinct !DILexicalBlock(scope: !6773, file: !4142, line: 354, column: 2)
!6777 = !DILocation(line: 410, column: 6, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6711, file: !3, line: 410, column: 6)
!6779 = !DILocation(line: 410, column: 14, scope: !6778)
!6780 = !DILocation(line: 410, column: 6, scope: !6711)
!6781 = !DILocation(line: 411, column: 14, scope: !6778)
!6782 = !DILocation(line: 411, column: 32, scope: !6778)
!6783 = !DILocation(line: 411, column: 40, scope: !6778)
!6784 = !DILocation(line: 411, column: 3, scope: !6778)
!6785 = !DILocation(line: 412, column: 15, scope: !6711)
!6786 = !DILocation(line: 412, column: 23, scope: !6711)
!6787 = !DILocation(line: 394, column: 2, scope: !6788, inlinedAt: !6715)
!6788 = distinct !DILexicalBlock(scope: !6713, file: !4142, line: 394, column: 2)
!6789 = !{i32 -2145423784}
!6790 = !DILocation(line: 394, column: 2, scope: !6791, inlinedAt: !6715)
!6791 = distinct !DILexicalBlock(scope: !6788, file: !4142, line: 394, column: 2)
!6792 = !DILocation(line: 413, column: 1, scope: !6711)
!6793 = distinct !DISubprogram(name: "poll_wait", scope: !2807, file: !2807, line: 48, type: !6794, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6794 = !DISubroutineType(types: !6795)
!6795 = !{null, !18, !2814, !6180}
!6796 = !DILocalVariable(name: "filp", arg: 1, scope: !6793, file: !2807, line: 48, type: !18)
!6797 = !DILocation(line: 48, column: 44, scope: !6793)
!6798 = !DILocalVariable(name: "wait_address", arg: 2, scope: !6793, file: !2807, line: 48, type: !2814)
!6799 = !DILocation(line: 48, column: 70, scope: !6793)
!6800 = !DILocalVariable(name: "p", arg: 3, scope: !6793, file: !2807, line: 48, type: !6180)
!6801 = !DILocation(line: 48, column: 96, scope: !6793)
!6802 = !DILocation(line: 50, column: 6, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6793, file: !2807, line: 50, column: 6)
!6804 = !DILocation(line: 50, column: 8, scope: !6803)
!6805 = !DILocation(line: 50, column: 11, scope: !6803)
!6806 = !DILocation(line: 50, column: 14, scope: !6803)
!6807 = !DILocation(line: 50, column: 21, scope: !6803)
!6808 = !DILocation(line: 50, column: 24, scope: !6803)
!6809 = !DILocation(line: 50, column: 6, scope: !6793)
!6810 = !DILocation(line: 51, column: 3, scope: !6803)
!6811 = !DILocation(line: 51, column: 6, scope: !6803)
!6812 = !DILocation(line: 51, column: 13, scope: !6803)
!6813 = !DILocation(line: 51, column: 19, scope: !6803)
!6814 = !DILocation(line: 51, column: 33, scope: !6803)
!6815 = !DILocation(line: 52, column: 1, scope: !6793)
!6816 = distinct !DISubprogram(name: "poll_requested_events", scope: !2807, file: !2807, line: 70, type: !6817, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6817 = !DISubroutineType(types: !6818)
!6818 = !{!2803, !6819}
!6819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6820, size: 64)
!6820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6181)
!6821 = !DILocalVariable(name: "p", arg: 1, scope: !6816, file: !2807, line: 70, type: !6819)
!6822 = !DILocation(line: 70, column: 64, scope: !6816)
!6823 = !DILocation(line: 72, column: 9, scope: !6816)
!6824 = !DILocation(line: 72, column: 13, scope: !6816)
!6825 = !DILocation(line: 72, column: 16, scope: !6816)
!6826 = !DILocation(line: 72, column: 2, scope: !6816)
!6827 = distinct !DISubprogram(name: "kcsan_atomic_next", scope: !6828, file: !6828, line: 152, type: !1757, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6828 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!6829 = !DILocalVariable(name: "n", arg: 1, scope: !6827, file: !6828, line: 152, type: !152)
!6830 = !DILocation(line: 152, column: 42, scope: !6827)
!6831 = !DILocation(line: 152, column: 48, scope: !6827)
!6832 = distinct !DISubprogram(name: "read_seqcount_t_retry", scope: !58, file: !58, line: 450, type: !6833, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6833 = !DISubroutineType(types: !6834)
!6834 = !{!152, !6835, !55}
!6835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6836, size: 64)
!6836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !62)
!6837 = !DILocalVariable(name: "s", arg: 1, scope: !6832, file: !58, line: 450, type: !6835)
!6838 = !DILocation(line: 450, column: 59, scope: !6832)
!6839 = !DILocalVariable(name: "start", arg: 2, scope: !6832, file: !58, line: 450, type: !55)
!6840 = !DILocation(line: 450, column: 71, scope: !6832)
!6841 = !DILocation(line: 452, column: 2, scope: !6832)
!6842 = !{i32 -2145069136}
!6843 = !DILocation(line: 453, column: 33, scope: !6832)
!6844 = !DILocation(line: 453, column: 36, scope: !6832)
!6845 = !DILocation(line: 453, column: 9, scope: !6832)
!6846 = !DILocation(line: 453, column: 2, scope: !6832)
!6847 = distinct !DISubprogram(name: "rcu_read_unlock", scope: !6291, file: !6291, line: 689, type: !1764, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6848 = !DILocation(line: 691, column: 2, scope: !6847)
!6849 = !DILocation(line: 691, column: 2, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6847, file: !6291, line: 691, column: 2)
!6851 = !DILocation(line: 694, column: 2, scope: !6847)
!6852 = !DILocation(line: 695, column: 2, scope: !6847)
!6853 = !DILocation(line: 695, column: 2, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6847, file: !6291, line: 695, column: 2)
!6855 = !DILocation(line: 696, column: 1, scope: !6847)
!6856 = distinct !DISubprogram(name: "dma_fence_get_rcu", scope: !3980, file: !3980, line: 302, type: !6857, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6857 = !DISubroutineType(types: !6858)
!6858 = !{!3978, !3978}
!6859 = !DILocalVariable(name: "fence", arg: 1, scope: !6856, file: !3980, line: 302, type: !3978)
!6860 = !DILocation(line: 302, column: 69, scope: !6856)
!6861 = !DILocation(line: 304, column: 28, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6856, file: !3980, line: 304, column: 6)
!6863 = !DILocation(line: 304, column: 35, scope: !6862)
!6864 = !DILocation(line: 304, column: 6, scope: !6862)
!6865 = !DILocation(line: 304, column: 6, scope: !6856)
!6866 = !DILocation(line: 305, column: 10, scope: !6862)
!6867 = !DILocation(line: 305, column: 3, scope: !6862)
!6868 = !DILocation(line: 307, column: 3, scope: !6862)
!6869 = !DILocation(line: 308, column: 1, scope: !6856)
!6870 = distinct !DISubprogram(name: "dma_buf_poll_cb", scope: !3, file: !3, line: 184, type: !4043, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6871 = !DILocalVariable(name: "lock", arg: 1, scope: !6872, file: !4142, line: 407, type: !1130)
!6872 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !4142, file: !4142, line: 407, type: !6873, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6873 = !DISubroutineType(types: !6874)
!6874 = !{null, !1130, !16}
!6875 = !DILocation(line: 407, column: 64, scope: !6872, inlinedAt: !6876)
!6876 = distinct !DILocation(line: 192, column: 2, scope: !6870)
!6877 = !DILocalVariable(name: "flags", arg: 2, scope: !6872, file: !4142, line: 407, type: !16)
!6878 = !DILocation(line: 407, column: 84, scope: !6872, inlinedAt: !6876)
!6879 = !DILocation(line: 327, column: 67, scope: !4141, inlinedAt: !6880)
!6880 = distinct !DILocation(line: 189, column: 2, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 189, column: 2)
!6882 = distinct !DILexicalBlock(scope: !6883, file: !3, line: 189, column: 2)
!6883 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 189, column: 2)
!6884 = distinct !DILexicalBlock(scope: !6885, file: !3, line: 189, column: 2)
!6885 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 189, column: 2)
!6886 = !DILocalVariable(name: "fence", arg: 1, scope: !6870, file: !3, line: 184, type: !3978)
!6887 = !DILocation(line: 184, column: 47, scope: !6870)
!6888 = !DILocalVariable(name: "cb", arg: 2, scope: !6870, file: !3, line: 184, type: !4045)
!6889 = !DILocation(line: 184, column: 75, scope: !6870)
!6890 = !DILocalVariable(name: "dcb", scope: !6870, file: !3, line: 186, type: !4096)
!6891 = !DILocation(line: 186, column: 28, scope: !6870)
!6892 = !DILocation(line: 186, column: 62, scope: !6870)
!6893 = !DILocation(line: 186, column: 34, scope: !6870)
!6894 = !DILocalVariable(name: "flags", scope: !6870, file: !3, line: 187, type: !16)
!6895 = !DILocation(line: 187, column: 16, scope: !6870)
!6896 = !DILocation(line: 189, column: 2, scope: !6870)
!6897 = !DILocation(line: 189, column: 2, scope: !6885)
!6898 = !DILocalVariable(name: "__dummy", scope: !6899, file: !3, line: 189, type: !16)
!6899 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 189, column: 2)
!6900 = !DILocation(line: 189, column: 2, scope: !6899)
!6901 = !DILocalVariable(name: "__dummy2", scope: !6899, file: !3, line: 189, type: !16)
!6902 = !DILocation(line: 189, column: 2, scope: !6884)
!6903 = !DILocation(line: 189, column: 2, scope: !6883)
!6904 = !DILocation(line: 189, column: 2, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6883, file: !3, line: 189, column: 2)
!6906 = !DILocalVariable(name: "__dummy", scope: !6907, file: !3, line: 189, type: !16)
!6907 = distinct !DILexicalBlock(scope: !6908, file: !3, line: 189, column: 2)
!6908 = distinct !DILexicalBlock(scope: !6905, file: !3, line: 189, column: 2)
!6909 = !DILocation(line: 189, column: 2, scope: !6907)
!6910 = !DILocalVariable(name: "__dummy2", scope: !6907, file: !3, line: 189, type: !16)
!6911 = !DILocation(line: 189, column: 2, scope: !6908)
!6912 = !DILocation(line: 189, column: 2, scope: !6882)
!6913 = !{i32 -2141877896}
!6914 = !DILocation(line: 189, column: 2, scope: !6881)
!6915 = !DILocation(line: 329, column: 10, scope: !4141, inlinedAt: !6880)
!6916 = !DILocation(line: 329, column: 16, scope: !4141, inlinedAt: !6880)
!6917 = !DILocation(line: 190, column: 2, scope: !6870)
!6918 = !DILocation(line: 191, column: 2, scope: !6870)
!6919 = !DILocation(line: 191, column: 7, scope: !6870)
!6920 = !DILocation(line: 191, column: 14, scope: !6870)
!6921 = !DILocation(line: 192, column: 26, scope: !6870)
!6922 = !DILocation(line: 192, column: 31, scope: !6870)
!6923 = !DILocation(line: 192, column: 37, scope: !6870)
!6924 = !DILocation(line: 192, column: 43, scope: !6870)
!6925 = !DILocalVariable(name: "__dummy", scope: !6926, file: !4142, line: 409, type: !16)
!6926 = distinct !DILexicalBlock(scope: !6927, file: !4142, line: 409, column: 2)
!6927 = distinct !DILexicalBlock(scope: !6872, file: !4142, line: 409, column: 2)
!6928 = !DILocation(line: 409, column: 2, scope: !6926, inlinedAt: !6876)
!6929 = !DILocalVariable(name: "__dummy2", scope: !6926, file: !4142, line: 409, type: !16)
!6930 = !DILocalVariable(name: "__dummy", scope: !6931, file: !4142, line: 409, type: !16)
!6931 = distinct !DILexicalBlock(scope: !6932, file: !4142, line: 409, column: 2)
!6932 = distinct !DILexicalBlock(scope: !6933, file: !4142, line: 409, column: 2)
!6933 = distinct !DILexicalBlock(scope: !6934, file: !4142, line: 409, column: 2)
!6934 = distinct !DILexicalBlock(scope: !6927, file: !4142, line: 409, column: 2)
!6935 = !DILocation(line: 409, column: 2, scope: !6931, inlinedAt: !6876)
!6936 = !DILocalVariable(name: "__dummy2", scope: !6931, file: !4142, line: 409, type: !16)
!6937 = !DILocation(line: 409, column: 2, scope: !6932, inlinedAt: !6876)
!6938 = !DILocation(line: 409, column: 2, scope: !6939, inlinedAt: !6876)
!6939 = distinct !DILexicalBlock(scope: !6934, file: !4142, line: 409, column: 2)
!6940 = !{i32 -2145421458}
!6941 = !DILocation(line: 409, column: 2, scope: !6942, inlinedAt: !6876)
!6942 = distinct !DILexicalBlock(scope: !6939, file: !4142, line: 409, column: 2)
!6943 = !DILocation(line: 193, column: 1, scope: !6870)
!6944 = distinct !DISubprogram(name: "dma_fence_put", scope: !3980, file: !3980, line: 276, type: !4005, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6945 = !DILocalVariable(name: "fence", arg: 1, scope: !6944, file: !3980, line: 276, type: !3978)
!6946 = !DILocation(line: 276, column: 52, scope: !6944)
!6947 = !DILocation(line: 278, column: 6, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6944, file: !3980, line: 278, column: 6)
!6949 = !DILocation(line: 278, column: 6, scope: !6944)
!6950 = !DILocation(line: 279, column: 13, scope: !6948)
!6951 = !DILocation(line: 279, column: 20, scope: !6948)
!6952 = !DILocation(line: 279, column: 3, scope: !6948)
!6953 = !DILocation(line: 280, column: 1, scope: !6944)
!6954 = distinct !DISubprogram(name: "__rcu_read_lock", scope: !6291, file: !6291, line: 64, type: !1764, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6955 = !DILocation(line: 66, column: 2, scope: !6954)
!6956 = !{i32 -2145325757}
!6957 = !DILocation(line: 67, column: 1, scope: !6954)
!6958 = distinct !DISubprogram(name: "__read_seqcount_t_retry", scope: !58, file: !58, line: 430, type: !6833, scopeLine: 431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6959 = !DILocalVariable(name: "s", arg: 1, scope: !6958, file: !58, line: 430, type: !6835)
!6960 = !DILocation(line: 430, column: 61, scope: !6958)
!6961 = !DILocalVariable(name: "start", arg: 2, scope: !6958, file: !58, line: 430, type: !55)
!6962 = !DILocation(line: 430, column: 73, scope: !6958)
!6963 = !DILocation(line: 432, column: 2, scope: !6958)
!6964 = !DILocation(line: 433, column: 9, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6958, file: !58, line: 433, column: 9)
!6966 = !DILocation(line: 433, column: 9, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6965, file: !58, line: 433, column: 9)
!6968 = !DILocation(line: 433, column: 9, scope: !6958)
!6969 = !DILocation(line: 433, column: 2, scope: !6958)
!6970 = distinct !DISubprogram(name: "__rcu_read_unlock", scope: !6291, file: !6291, line: 69, type: !1764, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6971 = !DILocation(line: 71, column: 2, scope: !6970)
!6972 = !{i32 -2145325544}
!6973 = !DILocation(line: 72, column: 2, scope: !6970)
!6974 = !DILocation(line: 72, column: 2, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6970, file: !6291, line: 72, column: 2)
!6976 = !DILocation(line: 73, column: 1, scope: !6970)
!6977 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !6978, file: !6978, line: 656, type: !1764, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6978 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!6979 = !DILocalVariable(name: "__edi", scope: !6980, file: !6978, line: 658, type: !16)
!6980 = distinct !DILexicalBlock(scope: !6977, file: !6978, line: 658, column: 2)
!6981 = !DILocation(line: 658, column: 2, scope: !6980)
!6982 = !DILocalVariable(name: "__esi", scope: !6980, file: !6978, line: 658, type: !16)
!6983 = !DILocalVariable(name: "__edx", scope: !6980, file: !6978, line: 658, type: !16)
!6984 = !DILocalVariable(name: "__ecx", scope: !6980, file: !6978, line: 658, type: !16)
!6985 = !DILocalVariable(name: "__eax", scope: !6980, file: !6978, line: 658, type: !16)
!6986 = !{i32 -2145588222, i32 -2145587490, i32 -2145587256, i32 -2145587205, i32 -2145587177, i32 -2145587152, i32 -2145587468, i32 -2145587455, i32 -2145587017, i32 -2145586898, i32 -2145587363, i32 -2145587336, i32 -2145587308, i32 -2145587278}
!6987 = !DILocation(line: 659, column: 1, scope: !6977)
!6988 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !6978, file: !6978, line: 661, type: !1764, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6989 = !DILocalVariable(name: "__edi", scope: !6990, file: !6978, line: 663, type: !16)
!6990 = distinct !DILexicalBlock(scope: !6988, file: !6978, line: 663, column: 2)
!6991 = !DILocation(line: 663, column: 2, scope: !6990)
!6992 = !DILocalVariable(name: "__esi", scope: !6990, file: !6978, line: 663, type: !16)
!6993 = !DILocalVariable(name: "__edx", scope: !6990, file: !6978, line: 663, type: !16)
!6994 = !DILocalVariable(name: "__ecx", scope: !6990, file: !6978, line: 663, type: !16)
!6995 = !DILocalVariable(name: "__eax", scope: !6990, file: !6978, line: 663, type: !16)
!6996 = !{i32 -2145585638, i32 -2145584908, i32 -2145584674, i32 -2145584623, i32 -2145584595, i32 -2145584570, i32 -2145584886, i32 -2145584873, i32 -2145584435, i32 -2145584316, i32 -2145584781, i32 -2145584754, i32 -2145584726, i32 -2145584696}
!6997 = !DILocation(line: 664, column: 1, scope: !6988)
!6998 = distinct !DISubprogram(name: "kref_get_unless_zero", scope: !3405, file: !3405, line: 109, type: !6999, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!6999 = !DISubroutineType(types: !7000)
!7000 = !{!152, !7001}
!7001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3404, size: 64)
!7002 = !DILocalVariable(name: "kref", arg: 1, scope: !6998, file: !3405, line: 109, type: !7001)
!7003 = !DILocation(line: 109, column: 66, scope: !6998)
!7004 = !DILocation(line: 111, column: 32, scope: !6998)
!7005 = !DILocation(line: 111, column: 38, scope: !6998)
!7006 = !DILocation(line: 111, column: 9, scope: !6998)
!7007 = !DILocation(line: 111, column: 2, scope: !6998)
!7008 = distinct !DISubprogram(name: "refcount_inc_not_zero", scope: !446, file: !446, line: 243, type: !7009, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7009 = !DISubroutineType(types: !7010)
!7010 = !{!168, !7011}
!7011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!7012 = !DILocalVariable(name: "r", arg: 1, scope: !7008, file: !446, line: 243, type: !7011)
!7013 = !DILocation(line: 243, column: 67, scope: !7008)
!7014 = !DILocation(line: 245, column: 33, scope: !7008)
!7015 = !DILocation(line: 245, column: 9, scope: !7008)
!7016 = !DILocation(line: 245, column: 2, scope: !7008)
!7017 = distinct !DISubprogram(name: "__refcount_inc_not_zero", scope: !446, file: !446, line: 225, type: !7018, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7018 = !DISubroutineType(types: !7019)
!7019 = !{!168, !7011, !753}
!7020 = !DILocalVariable(name: "r", arg: 1, scope: !7017, file: !446, line: 225, type: !7011)
!7021 = !DILocation(line: 225, column: 69, scope: !7017)
!7022 = !DILocalVariable(name: "oldp", arg: 2, scope: !7017, file: !446, line: 225, type: !753)
!7023 = !DILocation(line: 225, column: 77, scope: !7017)
!7024 = !DILocation(line: 227, column: 36, scope: !7017)
!7025 = !DILocation(line: 227, column: 39, scope: !7017)
!7026 = !DILocation(line: 227, column: 9, scope: !7017)
!7027 = !DILocation(line: 227, column: 2, scope: !7017)
!7028 = distinct !DISubprogram(name: "__refcount_add_not_zero", scope: !446, file: !446, line: 150, type: !7029, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7029 = !DISubroutineType(types: !7030)
!7030 = !{!168, !152, !7011, !753}
!7031 = !DILocalVariable(name: "v", arg: 1, scope: !7032, file: !7033, line: 200, type: !7036)
!7032 = distinct !DISubprogram(name: "arch_atomic_try_cmpxchg", scope: !7033, file: !7033, line: 200, type: !7034, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7033 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!7034 = !DISubroutineType(types: !7035)
!7035 = !{!168, !7036, !753, !152}
!7036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!7037 = !DILocation(line: 200, column: 63, scope: !7032, inlinedAt: !7038)
!7038 = distinct !DILocation(line: 729, column: 9, scope: !7039, inlinedAt: !7040)
!7039 = distinct !DISubprogram(name: "atomic_try_cmpxchg_relaxed", scope: !5757, file: !5757, line: 725, type: !7034, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7040 = distinct !DILocation(line: 157, column: 12, scope: !7028)
!7041 = !DILocalVariable(name: "old", arg: 2, scope: !7032, file: !7033, line: 200, type: !753)
!7042 = !DILocation(line: 200, column: 71, scope: !7032, inlinedAt: !7038)
!7043 = !DILocalVariable(name: "new", arg: 3, scope: !7032, file: !7033, line: 200, type: !152)
!7044 = !DILocation(line: 200, column: 80, scope: !7032, inlinedAt: !7038)
!7045 = !DILocalVariable(name: "success", scope: !7046, file: !7033, line: 202, type: !168)
!7046 = distinct !DILexicalBlock(scope: !7032, file: !7033, line: 202, column: 9)
!7047 = !DILocation(line: 202, column: 9, scope: !7046, inlinedAt: !7038)
!7048 = !DILocalVariable(name: "_old", scope: !7046, file: !7033, line: 202, type: !753)
!7049 = !DILocalVariable(name: "__old", scope: !7046, file: !7033, line: 202, type: !152)
!7050 = !DILocalVariable(name: "__new", scope: !7046, file: !7033, line: 202, type: !152)
!7051 = !DILocalVariable(name: "__ptr", scope: !7046, file: !7033, line: 202, type: !4094)
!7052 = !DILocation(line: 99, column: 79, scope: !5764, inlinedAt: !7053)
!7053 = distinct !DILocation(line: 728, column: 2, scope: !7039, inlinedAt: !7040)
!7054 = !DILocation(line: 99, column: 89, scope: !5764, inlinedAt: !7053)
!7055 = !DILocation(line: 99, column: 79, scope: !5764, inlinedAt: !7056)
!7056 = distinct !DILocation(line: 727, column: 2, scope: !7039, inlinedAt: !7040)
!7057 = !DILocation(line: 99, column: 89, scope: !5764, inlinedAt: !7056)
!7058 = !DILocalVariable(name: "v", arg: 1, scope: !7039, file: !5757, line: 725, type: !7036)
!7059 = !DILocation(line: 725, column: 38, scope: !7039, inlinedAt: !7040)
!7060 = !DILocalVariable(name: "old", arg: 2, scope: !7039, file: !5757, line: 725, type: !753)
!7061 = !DILocation(line: 725, column: 46, scope: !7039, inlinedAt: !7040)
!7062 = !DILocalVariable(name: "new", arg: 3, scope: !7039, file: !5757, line: 725, type: !152)
!7063 = !DILocation(line: 725, column: 55, scope: !7039, inlinedAt: !7040)
!7064 = !DILocalVariable(name: "i", arg: 1, scope: !7028, file: !446, line: 150, type: !152)
!7065 = !DILocation(line: 150, column: 61, scope: !7028)
!7066 = !DILocalVariable(name: "r", arg: 2, scope: !7028, file: !446, line: 150, type: !7011)
!7067 = !DILocation(line: 150, column: 76, scope: !7028)
!7068 = !DILocalVariable(name: "oldp", arg: 3, scope: !7028, file: !446, line: 150, type: !753)
!7069 = !DILocation(line: 150, column: 84, scope: !7028)
!7070 = !DILocalVariable(name: "old", scope: !7028, file: !446, line: 152, type: !152)
!7071 = !DILocation(line: 152, column: 6, scope: !7028)
!7072 = !DILocation(line: 152, column: 26, scope: !7028)
!7073 = !DILocation(line: 152, column: 12, scope: !7028)
!7074 = !DILocation(line: 154, column: 2, scope: !7028)
!7075 = !DILocation(line: 155, column: 8, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7077, file: !446, line: 155, column: 7)
!7077 = distinct !DILexicalBlock(scope: !7028, file: !446, line: 154, column: 5)
!7078 = !DILocation(line: 155, column: 7, scope: !7077)
!7079 = !DILocation(line: 156, column: 4, scope: !7076)
!7080 = !DILocation(line: 157, column: 2, scope: !7077)
!7081 = !DILocation(line: 157, column: 40, scope: !7028)
!7082 = !DILocation(line: 157, column: 43, scope: !7028)
!7083 = !DILocation(line: 157, column: 55, scope: !7028)
!7084 = !DILocation(line: 157, column: 61, scope: !7028)
!7085 = !DILocation(line: 157, column: 59, scope: !7028)
!7086 = !DILocation(line: 727, column: 31, scope: !7039, inlinedAt: !7040)
!7087 = !DILocation(line: 101, column: 20, scope: !5764, inlinedAt: !7056)
!7088 = !DILocation(line: 101, column: 23, scope: !5764, inlinedAt: !7056)
!7089 = !DILocation(line: 101, column: 2, scope: !5764, inlinedAt: !7056)
!7090 = !DILocation(line: 102, column: 2, scope: !5764, inlinedAt: !7056)
!7091 = !DILocation(line: 728, column: 31, scope: !7039, inlinedAt: !7040)
!7092 = !DILocation(line: 101, column: 20, scope: !5764, inlinedAt: !7053)
!7093 = !DILocation(line: 101, column: 23, scope: !5764, inlinedAt: !7053)
!7094 = !DILocation(line: 101, column: 2, scope: !5764, inlinedAt: !7053)
!7095 = !DILocation(line: 102, column: 2, scope: !5764, inlinedAt: !7053)
!7096 = !DILocation(line: 729, column: 41, scope: !7039, inlinedAt: !7040)
!7097 = !DILocation(line: 729, column: 44, scope: !7039, inlinedAt: !7040)
!7098 = !DILocation(line: 729, column: 49, scope: !7039, inlinedAt: !7040)
!7099 = !{i32 -2146338931, i32 -2146338776}
!7100 = !DILocation(line: 202, column: 9, scope: !7101, inlinedAt: !7038)
!7101 = distinct !DILexicalBlock(scope: !7046, file: !7033, line: 202, column: 9)
!7102 = !DILocation(line: 202, column: 9, scope: !7032, inlinedAt: !7038)
!7103 = !DILocation(line: 157, column: 11, scope: !7028)
!7104 = distinct !{!7104, !7074, !7105}
!7105 = !DILocation(line: 157, column: 63, scope: !7028)
!7106 = !DILocation(line: 159, column: 6, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7028, file: !446, line: 159, column: 6)
!7108 = !DILocation(line: 159, column: 6, scope: !7028)
!7109 = !DILocation(line: 160, column: 11, scope: !7107)
!7110 = !DILocation(line: 160, column: 4, scope: !7107)
!7111 = !DILocation(line: 160, column: 9, scope: !7107)
!7112 = !DILocation(line: 160, column: 3, scope: !7107)
!7113 = !DILocation(line: 162, column: 6, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7028, file: !446, line: 162, column: 6)
!7115 = !DILocation(line: 162, column: 6, scope: !7028)
!7116 = !DILocation(line: 163, column: 26, scope: !7114)
!7117 = !DILocation(line: 163, column: 3, scope: !7114)
!7118 = !DILocation(line: 165, column: 9, scope: !7028)
!7119 = !DILocation(line: 165, column: 2, scope: !7028)
!7120 = distinct !DISubprogram(name: "refcount_read", scope: !446, file: !446, line: 145, type: !7121, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7121 = !DISubroutineType(types: !7122)
!7122 = !{!55, !7123}
!7123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7124, size: 64)
!7124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !445)
!7125 = !DILocalVariable(name: "v", arg: 1, scope: !7126, file: !7033, line: 23, type: !7129)
!7126 = distinct !DISubprogram(name: "arch_atomic_read", scope: !7033, file: !7033, line: 23, type: !7127, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7127 = !DISubroutineType(types: !7128)
!7128 = !{!152, !7129}
!7129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7130, size: 64)
!7130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !413)
!7131 = !DILocation(line: 23, column: 61, scope: !7126, inlinedAt: !7132)
!7132 = distinct !DILocation(line: 28, column: 9, scope: !7133, inlinedAt: !7134)
!7133 = distinct !DISubprogram(name: "atomic_read", scope: !5757, file: !5757, line: 25, type: !7127, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7134 = distinct !DILocation(line: 147, column: 9, scope: !7120)
!7135 = !DILocation(line: 69, column: 73, scope: !6721, inlinedAt: !7136)
!7136 = distinct !DILocation(line: 27, column: 2, scope: !7133, inlinedAt: !7134)
!7137 = !DILocation(line: 69, column: 83, scope: !6721, inlinedAt: !7136)
!7138 = !DILocalVariable(name: "v", arg: 1, scope: !7133, file: !5757, line: 25, type: !7129)
!7139 = !DILocation(line: 25, column: 29, scope: !7133, inlinedAt: !7134)
!7140 = !DILocalVariable(name: "r", arg: 1, scope: !7120, file: !446, line: 145, type: !7123)
!7141 = !DILocation(line: 145, column: 60, scope: !7120)
!7142 = !DILocation(line: 147, column: 22, scope: !7120)
!7143 = !DILocation(line: 147, column: 25, scope: !7120)
!7144 = !DILocation(line: 27, column: 25, scope: !7133, inlinedAt: !7134)
!7145 = !DILocation(line: 71, column: 19, scope: !6721, inlinedAt: !7136)
!7146 = !DILocation(line: 71, column: 22, scope: !6721, inlinedAt: !7136)
!7147 = !DILocation(line: 71, column: 2, scope: !6721, inlinedAt: !7136)
!7148 = !DILocation(line: 72, column: 2, scope: !6721, inlinedAt: !7136)
!7149 = !DILocation(line: 28, column: 26, scope: !7133, inlinedAt: !7134)
!7150 = !DILocation(line: 29, column: 9, scope: !7126, inlinedAt: !7132)
!7151 = !DILocation(line: 147, column: 2, scope: !7120)
!7152 = distinct !DISubprogram(name: "kasan_check_read", scope: !7153, file: !7153, line: 34, type: !7154, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7153 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7154 = !DISubroutineType(types: !7155)
!7155 = !{!168, !5768, !55}
!7156 = !DILocalVariable(name: "p", arg: 1, scope: !7152, file: !7153, line: 34, type: !5768)
!7157 = !DILocation(line: 34, column: 58, scope: !7152)
!7158 = !DILocalVariable(name: "size", arg: 2, scope: !7152, file: !7153, line: 34, type: !55)
!7159 = !DILocation(line: 34, column: 74, scope: !7152)
!7160 = !DILocation(line: 36, column: 2, scope: !7152)
!7161 = distinct !DISubprogram(name: "kcsan_check_access", scope: !6828, file: !6828, line: 178, type: !7162, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7162 = !DISubroutineType(types: !7163)
!7163 = !{null, !5768, !11, !152}
!7164 = !DILocalVariable(name: "ptr", arg: 1, scope: !7161, file: !6828, line: 178, type: !5768)
!7165 = !DILocation(line: 178, column: 60, scope: !7161)
!7166 = !DILocalVariable(name: "size", arg: 2, scope: !7161, file: !6828, line: 178, type: !11)
!7167 = !DILocation(line: 178, column: 72, scope: !7161)
!7168 = !DILocalVariable(name: "type", arg: 3, scope: !7161, file: !6828, line: 179, type: !152)
!7169 = !DILocation(line: 179, column: 15, scope: !7161)
!7170 = !DILocation(line: 179, column: 23, scope: !7161)
!7171 = distinct !DISubprogram(name: "kasan_check_write", scope: !7153, file: !7153, line: 38, type: !7154, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7172 = !DILocalVariable(name: "p", arg: 1, scope: !7171, file: !7153, line: 38, type: !5768)
!7173 = !DILocation(line: 38, column: 59, scope: !7171)
!7174 = !DILocalVariable(name: "size", arg: 2, scope: !7171, file: !7153, line: 38, type: !55)
!7175 = !DILocation(line: 38, column: 75, scope: !7171)
!7176 = !DILocation(line: 40, column: 2, scope: !7171)
!7177 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !6978, file: !6978, line: 666, type: !7178, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7178 = !DISubroutineType(types: !7179)
!7179 = !{!16}
!7180 = !DILocalVariable(name: "f", scope: !7177, file: !6978, line: 668, type: !16)
!7181 = !DILocation(line: 668, column: 16, scope: !7177)
!7182 = !DILocation(line: 670, column: 6, scope: !7177)
!7183 = !DILocation(line: 670, column: 4, scope: !7177)
!7184 = !DILocation(line: 671, column: 2, scope: !7177)
!7185 = !DILocation(line: 672, column: 9, scope: !7177)
!7186 = !DILocation(line: 672, column: 2, scope: !7177)
!7187 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !6978, file: !6978, line: 646, type: !7178, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7188 = !DILocalVariable(name: "__ret", scope: !7189, file: !6978, line: 648, type: !16)
!7189 = distinct !DILexicalBlock(scope: !7187, file: !6978, line: 648, column: 9)
!7190 = !DILocation(line: 648, column: 9, scope: !7189)
!7191 = !DILocalVariable(name: "__edi", scope: !7189, file: !6978, line: 648, type: !16)
!7192 = !DILocalVariable(name: "__esi", scope: !7189, file: !6978, line: 648, type: !16)
!7193 = !DILocalVariable(name: "__edx", scope: !7189, file: !6978, line: 648, type: !16)
!7194 = !DILocalVariable(name: "__ecx", scope: !7189, file: !6978, line: 648, type: !16)
!7195 = !DILocalVariable(name: "__eax", scope: !7189, file: !6978, line: 648, type: !16)
!7196 = !DILocation(line: 648, column: 9, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7198, file: !6978, line: 648, column: 9)
!7198 = distinct !DILexicalBlock(scope: !7189, file: !6978, line: 648, column: 9)
!7199 = !{i32 -2145595316, i32 -2145593001, i32 -2145592767, i32 -2145592716, i32 -2145592688, i32 -2145592663, i32 -2145592979, i32 -2145592966, i32 -2145592528, i32 -2145592409, i32 -2145592874, i32 -2145592847, i32 -2145592819, i32 -2145592789}
!7200 = !DILocalVariable(name: "__mask", scope: !7201, file: !6978, line: 648, type: !16)
!7201 = distinct !DILexicalBlock(scope: !7197, file: !6978, line: 648, column: 9)
!7202 = !DILocation(line: 648, column: 9, scope: !7201)
!7203 = !DILocation(line: 648, column: 9, scope: !7198)
!7204 = !DILocation(line: 648, column: 2, scope: !7187)
!7205 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !6978, file: !6978, line: 651, type: !7206, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7206 = !DISubroutineType(types: !7207)
!7207 = !{null, !16}
!7208 = !DILocalVariable(name: "f", arg: 1, scope: !7205, file: !6978, line: 651, type: !16)
!7209 = !DILocation(line: 651, column: 65, scope: !7205)
!7210 = !DILocalVariable(name: "__edi", scope: !7211, file: !6978, line: 653, type: !16)
!7211 = distinct !DILexicalBlock(scope: !7205, file: !6978, line: 653, column: 2)
!7212 = !DILocation(line: 653, column: 2, scope: !7211)
!7213 = !DILocalVariable(name: "__esi", scope: !7211, file: !6978, line: 653, type: !16)
!7214 = !DILocalVariable(name: "__edx", scope: !7211, file: !6978, line: 653, type: !16)
!7215 = !DILocalVariable(name: "__ecx", scope: !7211, file: !6978, line: 653, type: !16)
!7216 = !DILocalVariable(name: "__eax", scope: !7211, file: !6978, line: 653, type: !16)
!7217 = !{i32 -2145590849, i32 -2145590099, i32 -2145589865, i32 -2145589814, i32 -2145589786, i32 -2145589761, i32 -2145590077, i32 -2145590064, i32 -2145589626, i32 -2145589507, i32 -2145589972, i32 -2145589945, i32 -2145589917, i32 -2145589887}
!7218 = !DILocation(line: 654, column: 1, scope: !7205)
!7219 = distinct !DISubprogram(name: "kref_put", scope: !3405, file: !3405, line: 62, type: !7220, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7220 = !DISubroutineType(types: !7221)
!7221 = !{!152, !7001, !7222}
!7222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7223, size: 64)
!7223 = !DISubroutineType(types: !7224)
!7224 = !{null, !7001}
!7225 = !DILocalVariable(name: "kref", arg: 1, scope: !7219, file: !3405, line: 62, type: !7001)
!7226 = !DILocation(line: 62, column: 41, scope: !7219)
!7227 = !DILocalVariable(name: "release", arg: 2, scope: !7219, file: !3405, line: 62, type: !7222)
!7228 = !DILocation(line: 62, column: 54, scope: !7219)
!7229 = !DILocation(line: 64, column: 29, scope: !7230)
!7230 = distinct !DILexicalBlock(scope: !7219, file: !3405, line: 64, column: 6)
!7231 = !DILocation(line: 64, column: 35, scope: !7230)
!7232 = !DILocation(line: 64, column: 6, scope: !7230)
!7233 = !DILocation(line: 64, column: 6, scope: !7219)
!7234 = !DILocation(line: 65, column: 3, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7230, file: !3405, line: 64, column: 46)
!7236 = !DILocation(line: 65, column: 11, scope: !7235)
!7237 = !DILocation(line: 66, column: 3, scope: !7235)
!7238 = !DILocation(line: 68, column: 2, scope: !7219)
!7239 = !DILocation(line: 69, column: 1, scope: !7219)
!7240 = distinct !DISubprogram(name: "refcount_dec_and_test", scope: !446, file: !446, line: 331, type: !7009, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7241 = !DILocalVariable(name: "r", arg: 1, scope: !7240, file: !446, line: 331, type: !7011)
!7242 = !DILocation(line: 331, column: 67, scope: !7240)
!7243 = !DILocation(line: 333, column: 33, scope: !7240)
!7244 = !DILocation(line: 333, column: 9, scope: !7240)
!7245 = !DILocation(line: 333, column: 2, scope: !7240)
!7246 = distinct !DISubprogram(name: "__refcount_dec_and_test", scope: !446, file: !446, line: 313, type: !7018, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7247 = !DILocalVariable(name: "r", arg: 1, scope: !7246, file: !446, line: 313, type: !7011)
!7248 = !DILocation(line: 313, column: 69, scope: !7246)
!7249 = !DILocalVariable(name: "oldp", arg: 2, scope: !7246, file: !446, line: 313, type: !753)
!7250 = !DILocation(line: 313, column: 77, scope: !7246)
!7251 = !DILocation(line: 315, column: 36, scope: !7246)
!7252 = !DILocation(line: 315, column: 39, scope: !7246)
!7253 = !DILocation(line: 315, column: 9, scope: !7246)
!7254 = !DILocation(line: 315, column: 2, scope: !7246)
!7255 = distinct !DISubprogram(name: "__refcount_sub_and_test", scope: !446, file: !446, line: 270, type: !7029, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7256 = !DILocalVariable(name: "i", arg: 1, scope: !7257, file: !7033, line: 188, type: !152)
!7257 = distinct !DISubprogram(name: "arch_atomic_fetch_sub", scope: !7033, file: !7033, line: 188, type: !7258, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7258 = !DISubroutineType(types: !7259)
!7259 = !{!152, !152, !7036}
!7260 = !DILocation(line: 188, column: 54, scope: !7257, inlinedAt: !7261)
!7261 = distinct !DILocation(line: 221, column: 9, scope: !7262, inlinedAt: !7263)
!7262 = distinct !DISubprogram(name: "atomic_fetch_sub_release", scope: !5757, file: !5757, line: 218, type: !7258, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7263 = distinct !DILocation(line: 272, column: 12, scope: !7255)
!7264 = !DILocalVariable(name: "v", arg: 2, scope: !7257, file: !7033, line: 188, type: !7036)
!7265 = !DILocation(line: 188, column: 67, scope: !7257, inlinedAt: !7261)
!7266 = !DILocalVariable(name: "__ret", scope: !7267, file: !7033, line: 190, type: !152)
!7267 = distinct !DILexicalBlock(scope: !7257, file: !7033, line: 190, column: 9)
!7268 = !DILocation(line: 190, column: 9, scope: !7267, inlinedAt: !7261)
!7269 = !DILocation(line: 99, column: 79, scope: !5764, inlinedAt: !7270)
!7270 = distinct !DILocation(line: 220, column: 2, scope: !7262, inlinedAt: !7263)
!7271 = !DILocation(line: 99, column: 89, scope: !5764, inlinedAt: !7270)
!7272 = !DILocalVariable(name: "i", arg: 1, scope: !7262, file: !5757, line: 218, type: !152)
!7273 = !DILocation(line: 218, column: 30, scope: !7262, inlinedAt: !7263)
!7274 = !DILocalVariable(name: "v", arg: 2, scope: !7262, file: !5757, line: 218, type: !7036)
!7275 = !DILocation(line: 218, column: 43, scope: !7262, inlinedAt: !7263)
!7276 = !DILocalVariable(name: "i", arg: 1, scope: !7255, file: !446, line: 270, type: !152)
!7277 = !DILocation(line: 270, column: 61, scope: !7255)
!7278 = !DILocalVariable(name: "r", arg: 2, scope: !7255, file: !446, line: 270, type: !7011)
!7279 = !DILocation(line: 270, column: 76, scope: !7255)
!7280 = !DILocalVariable(name: "oldp", arg: 3, scope: !7255, file: !446, line: 270, type: !753)
!7281 = !DILocation(line: 270, column: 84, scope: !7255)
!7282 = !DILocalVariable(name: "old", scope: !7255, file: !446, line: 272, type: !152)
!7283 = !DILocation(line: 272, column: 6, scope: !7255)
!7284 = !DILocation(line: 272, column: 37, scope: !7255)
!7285 = !DILocation(line: 272, column: 41, scope: !7255)
!7286 = !DILocation(line: 272, column: 44, scope: !7255)
!7287 = !DILocation(line: 220, column: 31, scope: !7262, inlinedAt: !7263)
!7288 = !DILocation(line: 101, column: 20, scope: !5764, inlinedAt: !7270)
!7289 = !DILocation(line: 101, column: 23, scope: !5764, inlinedAt: !7270)
!7290 = !DILocation(line: 101, column: 2, scope: !5764, inlinedAt: !7270)
!7291 = !DILocation(line: 102, column: 2, scope: !5764, inlinedAt: !7270)
!7292 = !DILocation(line: 221, column: 39, scope: !7262, inlinedAt: !7263)
!7293 = !DILocation(line: 221, column: 42, scope: !7262, inlinedAt: !7263)
!7294 = !{i32 -2146343244}
!7295 = !DILocation(line: 274, column: 6, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7255, file: !446, line: 274, column: 6)
!7297 = !DILocation(line: 274, column: 6, scope: !7255)
!7298 = !DILocation(line: 275, column: 11, scope: !7296)
!7299 = !DILocation(line: 275, column: 4, scope: !7296)
!7300 = !DILocation(line: 275, column: 9, scope: !7296)
!7301 = !DILocation(line: 275, column: 3, scope: !7296)
!7302 = !DILocation(line: 277, column: 6, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7255, file: !446, line: 277, column: 6)
!7304 = !DILocation(line: 277, column: 13, scope: !7303)
!7305 = !DILocation(line: 277, column: 10, scope: !7303)
!7306 = !DILocation(line: 277, column: 6, scope: !7255)
!7307 = !DILocation(line: 278, column: 3, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7303, file: !446, line: 277, column: 16)
!7309 = !{i32 -2144223611}
!7310 = !DILocation(line: 279, column: 3, scope: !7308)
!7311 = !DILocation(line: 282, column: 6, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7255, file: !446, line: 282, column: 6)
!7313 = !DILocation(line: 282, column: 6, scope: !7255)
!7314 = !DILocation(line: 283, column: 26, scope: !7312)
!7315 = !DILocation(line: 283, column: 3, scope: !7312)
!7316 = !DILocation(line: 285, column: 2, scope: !7255)
!7317 = !DILocation(line: 286, column: 1, scope: !7255)
!7318 = distinct !DISubprogram(name: "dma_buf_set_name", scope: !3, file: !3, line: 329, type: !7319, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7319 = !DISubroutineType(types: !7320)
!7320 = !{!220, !6, !135}
!7321 = !DILocation(line: 392, column: 53, scope: !6713, inlinedAt: !7322)
!7322 = distinct !DILocation(line: 346, column: 2, scope: !7318)
!7323 = !DILocation(line: 352, column: 51, scope: !6717, inlinedAt: !7324)
!7324 = distinct !DILocation(line: 343, column: 2, scope: !7318)
!7325 = !DILocalVariable(name: "dmabuf", arg: 1, scope: !7318, file: !3, line: 329, type: !6)
!7326 = !DILocation(line: 329, column: 46, scope: !7318)
!7327 = !DILocalVariable(name: "buf", arg: 2, scope: !7318, file: !3, line: 329, type: !135)
!7328 = !DILocation(line: 329, column: 73, scope: !7318)
!7329 = !DILocalVariable(name: "name", scope: !7318, file: !3, line: 331, type: !163)
!7330 = !DILocation(line: 331, column: 8, scope: !7318)
!7331 = !DILocation(line: 331, column: 28, scope: !7318)
!7332 = !DILocation(line: 331, column: 15, scope: !7318)
!7333 = !DILocalVariable(name: "ret", scope: !7318, file: !3, line: 332, type: !220)
!7334 = !DILocation(line: 332, column: 7, scope: !7318)
!7335 = !DILocation(line: 334, column: 13, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7318, file: !3, line: 334, column: 6)
!7337 = !DILocation(line: 334, column: 6, scope: !7336)
!7338 = !DILocation(line: 334, column: 6, scope: !7318)
!7339 = !DILocation(line: 335, column: 18, scope: !7336)
!7340 = !DILocation(line: 335, column: 10, scope: !7336)
!7341 = !DILocation(line: 335, column: 3, scope: !7336)
!7342 = !DILocation(line: 337, column: 16, scope: !7318)
!7343 = !DILocation(line: 337, column: 24, scope: !7318)
!7344 = !DILocation(line: 337, column: 2, scope: !7318)
!7345 = !DILocation(line: 338, column: 19, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7318, file: !3, line: 338, column: 6)
!7347 = !DILocation(line: 338, column: 27, scope: !7346)
!7348 = !DILocation(line: 338, column: 7, scope: !7346)
!7349 = !DILocation(line: 338, column: 6, scope: !7318)
!7350 = !DILocation(line: 339, column: 7, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7346, file: !3, line: 338, column: 41)
!7352 = !DILocation(line: 340, column: 9, scope: !7351)
!7353 = !DILocation(line: 340, column: 3, scope: !7351)
!7354 = !DILocation(line: 341, column: 3, scope: !7351)
!7355 = !DILocation(line: 343, column: 13, scope: !7318)
!7356 = !DILocation(line: 343, column: 21, scope: !7318)
!7357 = !DILocation(line: 354, column: 2, scope: !6773, inlinedAt: !7324)
!7358 = !DILocation(line: 354, column: 2, scope: !6776, inlinedAt: !7324)
!7359 = !DILocation(line: 344, column: 8, scope: !7318)
!7360 = !DILocation(line: 344, column: 16, scope: !7318)
!7361 = !DILocation(line: 344, column: 2, scope: !7318)
!7362 = !DILocation(line: 345, column: 17, scope: !7318)
!7363 = !DILocation(line: 345, column: 2, scope: !7318)
!7364 = !DILocation(line: 345, column: 10, scope: !7318)
!7365 = !DILocation(line: 345, column: 15, scope: !7318)
!7366 = !DILocation(line: 346, column: 15, scope: !7318)
!7367 = !DILocation(line: 346, column: 23, scope: !7318)
!7368 = !DILocation(line: 394, column: 2, scope: !6788, inlinedAt: !7322)
!7369 = !DILocation(line: 394, column: 2, scope: !6791, inlinedAt: !7322)
!7370 = !DILocation(line: 346, column: 2, scope: !7318)
!7371 = !DILabel(scope: !7318, name: "out_unlock", file: !3, line: 348)
!7372 = !DILocation(line: 348, column: 1, scope: !7318)
!7373 = !DILocation(line: 349, column: 18, scope: !7318)
!7374 = !DILocation(line: 349, column: 26, scope: !7318)
!7375 = !DILocation(line: 349, column: 2, scope: !7318)
!7376 = !DILocation(line: 350, column: 9, scope: !7318)
!7377 = !DILocation(line: 350, column: 2, scope: !7318)
!7378 = !DILocation(line: 351, column: 1, scope: !7318)
!7379 = distinct !DISubprogram(name: "copy_overflow", scope: !6529, file: !6529, line: 132, type: !7380, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7380 = !DISubroutineType(types: !7381)
!7381 = !{null, !152, !16}
!7382 = !DILocalVariable(name: "size", arg: 1, scope: !7379, file: !6529, line: 132, type: !152)
!7383 = !DILocation(line: 132, column: 38, scope: !7379)
!7384 = !DILocalVariable(name: "count", arg: 2, scope: !7379, file: !6529, line: 132, type: !16)
!7385 = !DILocation(line: 132, column: 58, scope: !7379)
!7386 = !DILocalVariable(name: "__ret_warn_on", scope: !7387, file: !6529, line: 134, type: !152)
!7387 = distinct !DILexicalBlock(scope: !7379, file: !6529, line: 134, column: 2)
!7388 = !DILocation(line: 134, column: 2, scope: !7387)
!7389 = !DILocation(line: 134, column: 2, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7387, file: !6529, line: 134, column: 2)
!7391 = !DILocation(line: 134, column: 2, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7390, file: !6529, line: 134, column: 2)
!7393 = !DILocation(line: 134, column: 2, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7392, file: !6529, line: 134, column: 2)
!7395 = !DILocation(line: 134, column: 2, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7392, file: !6529, line: 134, column: 2)
!7397 = !DILocation(line: 134, column: 2, scope: !7398)
!7398 = distinct !DILexicalBlock(scope: !7396, file: !6529, line: 134, column: 2)
!7399 = !DILocation(line: 134, column: 2, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7396, file: !6529, line: 134, column: 2)
!7401 = !{i32 -2145505724, i32 -2145505695, i32 -2145505649, i32 -2145505591, i32 -2145505537, i32 -2145505483, i32 -2145505428, i32 -2145505397}
!7402 = !DILocation(line: 134, column: 2, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7396, file: !6529, line: 134, column: 2)
!7404 = !{i32 -2145504977, i32 -2145504970, i32 -2145504918, i32 -2145504887, i32 -2145504857}
!7405 = !DILocation(line: 134, column: 2, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7396, file: !6529, line: 134, column: 2)
!7407 = !DILocation(line: 134, column: 2, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7392, file: !6529, line: 134, column: 2)
!7409 = !DILocation(line: 135, column: 1, scope: !7379)
!7410 = distinct !DISubprogram(name: "check_object_size", scope: !6529, file: !6529, line: 122, type: !7411, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7411 = !DISubroutineType(types: !7412)
!7412 = !{null, !2015, !16, !168}
!7413 = !DILocalVariable(name: "ptr", arg: 1, scope: !7410, file: !6529, line: 122, type: !2015)
!7414 = !DILocation(line: 122, column: 50, scope: !7410)
!7415 = !DILocalVariable(name: "n", arg: 2, scope: !7410, file: !6529, line: 122, type: !16)
!7416 = !DILocation(line: 122, column: 69, scope: !7410)
!7417 = !DILocalVariable(name: "to_user", arg: 3, scope: !7410, file: !6529, line: 123, type: !168)
!7418 = !DILocation(line: 123, column: 15, scope: !7410)
!7419 = !DILocation(line: 124, column: 3, scope: !7410)
!7420 = distinct !DISubprogram(name: "list_empty", scope: !4733, file: !4733, line: 280, type: !7421, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7421 = !DISubroutineType(types: !7422)
!7422 = !{!152, !7423}
!7423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7424, size: 64)
!7424 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !285)
!7425 = !DILocalVariable(name: "head", arg: 1, scope: !7420, file: !4733, line: 280, type: !7423)
!7426 = !DILocation(line: 280, column: 54, scope: !7420)
!7427 = !DILocation(line: 282, column: 9, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7420, file: !4733, line: 282, column: 9)
!7429 = !DILocation(line: 282, column: 9, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7428, file: !4733, line: 282, column: 9)
!7431 = !DILocation(line: 282, column: 34, scope: !7420)
!7432 = !DILocation(line: 282, column: 31, scope: !7420)
!7433 = !DILocation(line: 282, column: 2, scope: !7420)
!7434 = distinct !DISubprogram(name: "arch_atomic64_read", scope: !5750, file: !5750, line: 20, type: !6725, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7435 = !DILocalVariable(name: "v", arg: 1, scope: !7434, file: !5750, line: 20, type: !6727)
!7436 = !DILocation(line: 20, column: 56, scope: !7434)
!7437 = !DILocation(line: 22, column: 9, scope: !7434)
!7438 = !DILocation(line: 22, column: 2, scope: !7434)
!7439 = distinct !DISubprogram(name: "__list_add", scope: !4733, file: !4733, line: 63, type: !7440, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7440 = !DISubroutineType(types: !7441)
!7441 = !{null, !288, !288, !288}
!7442 = !DILocalVariable(name: "new", arg: 1, scope: !7439, file: !4733, line: 63, type: !288)
!7443 = !DILocation(line: 63, column: 49, scope: !7439)
!7444 = !DILocalVariable(name: "prev", arg: 2, scope: !7439, file: !4733, line: 64, type: !288)
!7445 = !DILocation(line: 64, column: 28, scope: !7439)
!7446 = !DILocalVariable(name: "next", arg: 3, scope: !7439, file: !4733, line: 65, type: !288)
!7447 = !DILocation(line: 65, column: 28, scope: !7439)
!7448 = !DILocation(line: 67, column: 24, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7439, file: !4733, line: 67, column: 6)
!7450 = !DILocation(line: 67, column: 29, scope: !7449)
!7451 = !DILocation(line: 67, column: 35, scope: !7449)
!7452 = !DILocation(line: 67, column: 7, scope: !7449)
!7453 = !DILocation(line: 67, column: 6, scope: !7439)
!7454 = !DILocation(line: 68, column: 3, scope: !7449)
!7455 = !DILocation(line: 70, column: 15, scope: !7439)
!7456 = !DILocation(line: 70, column: 2, scope: !7439)
!7457 = !DILocation(line: 70, column: 8, scope: !7439)
!7458 = !DILocation(line: 70, column: 13, scope: !7439)
!7459 = !DILocation(line: 71, column: 14, scope: !7439)
!7460 = !DILocation(line: 71, column: 2, scope: !7439)
!7461 = !DILocation(line: 71, column: 7, scope: !7439)
!7462 = !DILocation(line: 71, column: 12, scope: !7439)
!7463 = !DILocation(line: 72, column: 14, scope: !7439)
!7464 = !DILocation(line: 72, column: 2, scope: !7439)
!7465 = !DILocation(line: 72, column: 7, scope: !7439)
!7466 = !DILocation(line: 72, column: 12, scope: !7439)
!7467 = !DILocation(line: 73, column: 2, scope: !7439)
!7468 = !DILocation(line: 73, column: 2, scope: !7469)
!7469 = distinct !DILexicalBlock(scope: !7439, file: !4733, line: 73, column: 2)
!7470 = !DILocation(line: 73, column: 2, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7469, file: !4733, line: 73, column: 2)
!7472 = !DILocation(line: 73, column: 2, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7469, file: !4733, line: 73, column: 2)
!7474 = !DILocation(line: 74, column: 1, scope: !7439)
!7475 = distinct !DISubprogram(name: "__list_add_valid", scope: !4733, file: !4733, line: 45, type: !7476, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7476 = !DISubroutineType(types: !7477)
!7477 = !{!168, !288, !288, !288}
!7478 = !DILocalVariable(name: "new", arg: 1, scope: !7475, file: !4733, line: 45, type: !288)
!7479 = !DILocation(line: 45, column: 55, scope: !7475)
!7480 = !DILocalVariable(name: "prev", arg: 2, scope: !7475, file: !4733, line: 46, type: !288)
!7481 = !DILocation(line: 46, column: 23, scope: !7475)
!7482 = !DILocalVariable(name: "next", arg: 3, scope: !7475, file: !4733, line: 47, type: !288)
!7483 = !DILocation(line: 47, column: 23, scope: !7475)
!7484 = !DILocation(line: 49, column: 2, scope: !7475)
!7485 = distinct !DISubprogram(name: "__list_del_entry", scope: !4733, file: !4733, line: 130, type: !4734, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7486 = !DILocalVariable(name: "entry", arg: 1, scope: !7485, file: !4733, line: 130, type: !288)
!7487 = !DILocation(line: 130, column: 55, scope: !7485)
!7488 = !DILocation(line: 132, column: 30, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7485, file: !4733, line: 132, column: 6)
!7490 = !DILocation(line: 132, column: 7, scope: !7489)
!7491 = !DILocation(line: 132, column: 6, scope: !7485)
!7492 = !DILocation(line: 133, column: 3, scope: !7489)
!7493 = !DILocation(line: 135, column: 13, scope: !7485)
!7494 = !DILocation(line: 135, column: 20, scope: !7485)
!7495 = !DILocation(line: 135, column: 26, scope: !7485)
!7496 = !DILocation(line: 135, column: 33, scope: !7485)
!7497 = !DILocation(line: 135, column: 2, scope: !7485)
!7498 = !DILocation(line: 136, column: 1, scope: !7485)
!7499 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !4733, file: !4733, line: 51, type: !7500, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7500 = !DISubroutineType(types: !7501)
!7501 = !{!168, !288}
!7502 = !DILocalVariable(name: "entry", arg: 1, scope: !7499, file: !4733, line: 51, type: !288)
!7503 = !DILocation(line: 51, column: 61, scope: !7499)
!7504 = !DILocation(line: 53, column: 2, scope: !7499)
!7505 = distinct !DISubprogram(name: "__list_del", scope: !4733, file: !4733, line: 110, type: !4751, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7506 = !DILocalVariable(name: "prev", arg: 1, scope: !7505, file: !4733, line: 110, type: !288)
!7507 = !DILocation(line: 110, column: 50, scope: !7505)
!7508 = !DILocalVariable(name: "next", arg: 2, scope: !7505, file: !4733, line: 110, type: !288)
!7509 = !DILocation(line: 110, column: 75, scope: !7505)
!7510 = !DILocation(line: 112, column: 15, scope: !7505)
!7511 = !DILocation(line: 112, column: 2, scope: !7505)
!7512 = !DILocation(line: 112, column: 8, scope: !7505)
!7513 = !DILocation(line: 112, column: 13, scope: !7505)
!7514 = !DILocation(line: 113, column: 2, scope: !7505)
!7515 = !DILocation(line: 113, column: 2, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7505, file: !4733, line: 113, column: 2)
!7517 = !DILocation(line: 113, column: 2, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7516, file: !4733, line: 113, column: 2)
!7519 = !DILocation(line: 113, column: 2, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7516, file: !4733, line: 113, column: 2)
!7521 = !DILocation(line: 114, column: 1, scope: !7505)
!7522 = distinct !DISubprogram(name: "dma_buf_init_debugfs", scope: !3, file: !3, line: 1381, type: !4128, scopeLine: 1382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7523 = !DILocation(line: 1383, column: 2, scope: !7522)
!7524 = distinct !DISubprogram(name: "dma_buf_fs_init_context", scope: !3, file: !3, line: 98, type: !302, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7525 = !DILocalVariable(name: "fc", arg: 1, scope: !7524, file: !3, line: 98, type: !304)
!7526 = !DILocation(line: 98, column: 55, scope: !7524)
!7527 = !DILocalVariable(name: "ctx", scope: !7524, file: !3, line: 100, type: !7528)
!7528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7529, size: 64)
!7529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pseudo_fs_context", file: !7530, line: 6, size: 256, elements: !7531)
!7530 = !DIFile(filename: "./include/linux/pseudo_fs.h", directory: "/home/lizy2001/genbc/linux")
!7531 = !{!7532, !7533, !7534, !7535}
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7529, file: !7530, line: 7, baseType: !703, size: 64)
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "xattr", scope: !7529, file: !7530, line: 8, baseType: !2504, size: 64, offset: 64)
!7534 = !DIDerivedType(tag: DW_TAG_member, name: "dops", scope: !7529, file: !7530, line: 9, baseType: !2613, size: 64, offset: 128)
!7535 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !7529, file: !7530, line: 10, baseType: !16, size: 64, offset: 192)
!7536 = !DILocation(line: 100, column: 28, scope: !7524)
!7537 = !DILocation(line: 102, column: 20, scope: !7524)
!7538 = !DILocation(line: 102, column: 8, scope: !7524)
!7539 = !DILocation(line: 102, column: 6, scope: !7524)
!7540 = !DILocation(line: 103, column: 7, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7524, file: !3, line: 103, column: 6)
!7542 = !DILocation(line: 103, column: 6, scope: !7524)
!7543 = !DILocation(line: 104, column: 3, scope: !7541)
!7544 = !DILocation(line: 105, column: 2, scope: !7524)
!7545 = !DILocation(line: 105, column: 7, scope: !7524)
!7546 = !DILocation(line: 105, column: 12, scope: !7524)
!7547 = !DILocation(line: 106, column: 2, scope: !7524)
!7548 = !DILocation(line: 107, column: 1, scope: !7524)
!7549 = distinct !DISubprogram(name: "dma_buf_release", scope: !3, file: !3, line: 57, type: !2645, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7550 = !DILocalVariable(name: "dentry", arg: 1, scope: !7549, file: !3, line: 57, type: !50)
!7551 = !DILocation(line: 57, column: 44, scope: !7549)
!7552 = !DILocalVariable(name: "dmabuf", scope: !7549, file: !3, line: 59, type: !6)
!7553 = !DILocation(line: 59, column: 18, scope: !7549)
!7554 = !DILocation(line: 61, column: 11, scope: !7549)
!7555 = !DILocation(line: 61, column: 19, scope: !7549)
!7556 = !DILocation(line: 61, column: 9, scope: !7549)
!7557 = !DILocation(line: 62, column: 6, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7549, file: !3, line: 62, column: 6)
!7559 = !DILocation(line: 62, column: 6, scope: !7549)
!7560 = !DILocation(line: 63, column: 3, scope: !7558)
!7561 = !DILocation(line: 65, column: 2, scope: !7549)
!7562 = !DILocation(line: 65, column: 2, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7564, file: !3, line: 65, column: 2)
!7564 = distinct !DILexicalBlock(scope: !7549, file: !3, line: 65, column: 2)
!7565 = !DILocation(line: 65, column: 2, scope: !7564)
!7566 = !DILocation(line: 65, column: 2, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7563, file: !3, line: 65, column: 2)
!7568 = !DILocation(line: 65, column: 2, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 65, column: 2)
!7570 = !DILocation(line: 65, column: 2, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 65, column: 2)
!7572 = !{i32 -2141881058, i32 -2141881029, i32 -2141880983, i32 -2141880925, i32 -2141880871, i32 -2141880817, i32 -2141880762, i32 -2141880731}
!7573 = !DILocation(line: 65, column: 2, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7575, file: !3, line: 65, column: 2)
!7575 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 65, column: 2)
!7576 = !{i32 -2141880284, i32 -2141880277, i32 -2141880223, i32 -2141880192, i32 -2141880162}
!7577 = !DILocation(line: 65, column: 2, scope: !7575)
!7578 = !DILocation(line: 75, column: 2, scope: !7549)
!7579 = !DILocation(line: 75, column: 2, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 75, column: 2)
!7581 = distinct !DILexicalBlock(scope: !7549, file: !3, line: 75, column: 2)
!7582 = !DILocation(line: 75, column: 2, scope: !7581)
!7583 = !DILocation(line: 75, column: 2, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7580, file: !3, line: 75, column: 2)
!7585 = !DILocation(line: 75, column: 2, scope: !7586)
!7586 = distinct !DILexicalBlock(scope: !7584, file: !3, line: 75, column: 2)
!7587 = !DILocation(line: 75, column: 2, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7584, file: !3, line: 75, column: 2)
!7589 = !{i32 -2141879779, i32 -2141879750, i32 -2141879704, i32 -2141879646, i32 -2141879592, i32 -2141879538, i32 -2141879483, i32 -2141879452}
!7590 = !DILocation(line: 75, column: 2, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7592, file: !3, line: 75, column: 2)
!7592 = distinct !DILexicalBlock(scope: !7584, file: !3, line: 75, column: 2)
!7593 = !{i32 -2141879005, i32 -2141878998, i32 -2141878944, i32 -2141878913, i32 -2141878883}
!7594 = !DILocation(line: 75, column: 2, scope: !7592)
!7595 = !DILocation(line: 77, column: 2, scope: !7549)
!7596 = !DILocation(line: 77, column: 10, scope: !7549)
!7597 = !DILocation(line: 77, column: 15, scope: !7549)
!7598 = !DILocation(line: 77, column: 23, scope: !7549)
!7599 = !DILocation(line: 79, column: 2, scope: !7549)
!7600 = !DILocation(line: 80, column: 12, scope: !7549)
!7601 = !DILocation(line: 80, column: 20, scope: !7549)
!7602 = !DILocation(line: 80, column: 2, scope: !7549)
!7603 = !DILocation(line: 81, column: 2, scope: !7549)
!7604 = !DILocation(line: 83, column: 6, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7549, file: !3, line: 83, column: 6)
!7606 = !DILocation(line: 83, column: 14, scope: !7605)
!7607 = !DILocation(line: 83, column: 42, scope: !7605)
!7608 = !DILocation(line: 83, column: 22, scope: !7605)
!7609 = !DILocation(line: 83, column: 19, scope: !7605)
!7610 = !DILocation(line: 83, column: 6, scope: !7549)
!7611 = !DILocation(line: 84, column: 17, scope: !7605)
!7612 = !DILocation(line: 84, column: 25, scope: !7605)
!7613 = !DILocation(line: 84, column: 3, scope: !7605)
!7614 = !DILocation(line: 86, column: 13, scope: !7549)
!7615 = !DILocation(line: 86, column: 21, scope: !7549)
!7616 = !DILocation(line: 86, column: 2, scope: !7549)
!7617 = !DILocation(line: 87, column: 8, scope: !7549)
!7618 = !DILocation(line: 87, column: 16, scope: !7549)
!7619 = !DILocation(line: 87, column: 2, scope: !7549)
!7620 = !DILocation(line: 88, column: 8, scope: !7549)
!7621 = !DILocation(line: 88, column: 2, scope: !7549)
!7622 = !DILocation(line: 89, column: 1, scope: !7549)
!7623 = distinct !DISubprogram(name: "dmabuffs_dname", scope: !3, file: !3, line: 41, type: !2654, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !4060, retainedNodes: !393)
!7624 = !DILocation(line: 392, column: 53, scope: !6713, inlinedAt: !7625)
!7625 = distinct !DILocation(line: 51, column: 2, scope: !7623)
!7626 = !DILocation(line: 352, column: 51, scope: !6717, inlinedAt: !7627)
!7627 = distinct !DILocation(line: 48, column: 2, scope: !7623)
!7628 = !DILocalVariable(name: "dentry", arg: 1, scope: !7623, file: !3, line: 41, type: !50)
!7629 = !DILocation(line: 41, column: 44, scope: !7623)
!7630 = !DILocalVariable(name: "buffer", arg: 2, scope: !7623, file: !3, line: 41, type: !163)
!7631 = !DILocation(line: 41, column: 58, scope: !7623)
!7632 = !DILocalVariable(name: "buflen", arg: 3, scope: !7623, file: !3, line: 41, type: !152)
!7633 = !DILocation(line: 41, column: 70, scope: !7623)
!7634 = !DILocalVariable(name: "dmabuf", scope: !7623, file: !3, line: 43, type: !6)
!7635 = !DILocation(line: 43, column: 18, scope: !7623)
!7636 = !DILocalVariable(name: "name", scope: !7623, file: !3, line: 44, type: !2599)
!7637 = !DILocation(line: 44, column: 7, scope: !7623)
!7638 = !DILocalVariable(name: "ret", scope: !7623, file: !3, line: 45, type: !11)
!7639 = !DILocation(line: 45, column: 9, scope: !7623)
!7640 = !DILocation(line: 47, column: 11, scope: !7623)
!7641 = !DILocation(line: 47, column: 19, scope: !7623)
!7642 = !DILocation(line: 47, column: 9, scope: !7623)
!7643 = !DILocation(line: 48, column: 13, scope: !7623)
!7644 = !DILocation(line: 48, column: 21, scope: !7623)
!7645 = !DILocation(line: 354, column: 2, scope: !6773, inlinedAt: !7627)
!7646 = !DILocation(line: 354, column: 2, scope: !6776, inlinedAt: !7627)
!7647 = !DILocation(line: 49, column: 6, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 49, column: 6)
!7649 = !DILocation(line: 49, column: 14, scope: !7648)
!7650 = !DILocation(line: 49, column: 6, scope: !7623)
!7651 = !DILocation(line: 50, column: 17, scope: !7648)
!7652 = !DILocation(line: 50, column: 23, scope: !7648)
!7653 = !DILocation(line: 50, column: 31, scope: !7648)
!7654 = !DILocation(line: 50, column: 9, scope: !7648)
!7655 = !DILocation(line: 50, column: 7, scope: !7648)
!7656 = !DILocation(line: 50, column: 3, scope: !7648)
!7657 = !DILocation(line: 51, column: 15, scope: !7623)
!7658 = !DILocation(line: 51, column: 23, scope: !7623)
!7659 = !DILocation(line: 394, column: 2, scope: !6788, inlinedAt: !7625)
!7660 = !DILocation(line: 394, column: 2, scope: !6791, inlinedAt: !7625)
!7661 = !DILocation(line: 53, column: 23, scope: !7623)
!7662 = !DILocation(line: 53, column: 31, scope: !7623)
!7663 = !DILocation(line: 53, column: 39, scope: !7623)
!7664 = !DILocation(line: 54, column: 9, scope: !7623)
!7665 = !DILocation(line: 54, column: 17, scope: !7623)
!7666 = !DILocation(line: 54, column: 24, scope: !7623)
!7667 = !DILocation(line: 54, column: 30, scope: !7623)
!7668 = !DILocation(line: 54, column: 34, scope: !7623)
!7669 = !DILocation(line: 54, column: 40, scope: !7623)
!7670 = !DILocation(line: 53, column: 9, scope: !7623)
!7671 = !DILocation(line: 53, column: 2, scope: !7623)
